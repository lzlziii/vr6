using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using BHapticsSuit;
using CurvedUI;
using FMOD.Studio;
using FMODUnity;
using GE.AI;
using GE.Achievements;
using GE.Actions;
using GE.BuildTag;
using GE.Conditions;
using GE.Core;
using GE.Database;
using GE.Events;
using GE.GlobalMultiplier;
using GE.Localisation;
using GE.Melee;
using GE.Outlines;
using GE.Performance;
using GE.Performance.Occlusion;
using GE.PhysicalButtons;
using GE.PlayerClass;
using GE.PlayerUnit;
using GE.ProceduralGeneration;
using GE.Scene;
using GE.SocialFeatures;
using GE.States;
using GE.Status;
using GE.TileGenerator;
using GE.Unit;
using GE.UnitEvents;
using GE.Upgrades;
using GE.VRAI;
using GE.VRInteraction;
using GE.VRInteraction.Inventory;
using GE.Validation;
using GE.WeaponConfigurator;
using GoogleSheetsToUnity;
using GreenerGames;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Peacemaker;
using Peacemaker.AI;
using Peacemaker.Audio;
using Peacemaker.Conditions;
using Peacemaker.Events;
using Peacemaker.Pickable;
using Peacemaker.Scripts.AI;
using Peacemaker.Scripts.Events;
using Peacemaker.Tutorial;
using Sirenix.OdinInspector;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using Valve.VR;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class EasyColliderRotateDuplicate
{
	[Token(Token = "0x2000003")]
	public enum ROTATE_AXIS
	{
		[Token(Token = "0x4000009")]
		X,
		[Token(Token = "0x400000A")]
		Y,
		[Token(Token = "0x400000B")]
		Z
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enabled;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ROTATE_AXIS axis;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int NumberOfDuplications;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartRotation;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float EndRotation;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pivot;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject attachTo;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1338F88", Offset = "0x1338F88", VA = "0x1338F88")]
	public EasyColliderRotateDuplicate()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B43C", Offset = "0x104B43C")]
public class EnergyKatanaScript : SerializedMonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float currentEnergy;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float energy;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float energyLossPerBullet;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float timeLossPerHit;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject ActiveKatana;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject NotActiveKatana;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private BaseEffect _eventDataWhenActivated;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Collider reflectionCollider;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Vector3 deflectionOffset;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _isActive;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeleeDamage _meleeDamage;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<IAction> disableKatanaActions;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private List<IAction> enableKatanaActions;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float lastHitTimestamp;

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x13394B4", Offset = "0x13394B4", VA = "0x13394B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1339600", Offset = "0x1339600", VA = "0x1339600")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x13399DC", Offset = "0x13399DC", VA = "0x13399DC")]
	private void OnDamage(GEUnit geUnit)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x133956C", Offset = "0x133956C", VA = "0x133956C")]
	public void ActivateKatana(bool active)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x13399A4", Offset = "0x13399A4", VA = "0x13399A4")]
	private void LoseEnergy()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1339A7C", Offset = "0x1339A7C", VA = "0x1339A7C")]
	public EnergyKatanaScript()
	{
	}
}
[Token(Token = "0x2000005")]
public delegate void OnSpreedSheetLoaded(GstuSpreadSheet sheet);
[Token(Token = "0x2000006")]
public class GoogleSheetLog : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GoogleSheetLog Instance;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset VersionInfo;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ValueData> Infos;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string associatedSheet;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string associatedWorksheet;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x133EEA8", Offset = "0x133EEA8", VA = "0x133EEA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x133EEFC", Offset = "0x133EEFC", VA = "0x133EEFC")]
	public void SendLog(int user, string progress, string district, int level, string sdk, Dictionary<ValueData, object> results, string modelName, List<string> controller)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x133EF00", Offset = "0x133EF00", VA = "0x133EF00")]
	public GoogleSheetLog()
	{
	}
}
[Token(Token = "0x2000007")]
public class ChangeMaterialDebug : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000008")]
	public class MaterialInfo
	{
		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x104D2B0", Offset = "0x104D2B0")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0x104D2F8", Offset = "0x104D2F8")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x104D2F8", Offset = "0x104D2F8")]
		[HideLabel]
		public KeyCode KeyCode;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ChangeMaterialDebug parent;

		[Token(Token = "0x6000014")]
		[Address(RVA = "0x132907C", Offset = "0x132907C", VA = "0x132907C")]
		public void Set()
		{
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x132909C", Offset = "0x132909C", VA = "0x132909C")]
		public void SetParent(ChangeMaterialDebug parent)
		{
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0x13290A4", Offset = "0x13290A4", VA = "0x13290A4")]
		public MaterialInfo()
		{
		}
	}

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104D1F0", Offset = "0x104D1F0")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104D1F0", Offset = "0x104D1F0")]
	public List<MaterialInfo> Materials;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104D250", Offset = "0x104D250")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104D250", Offset = "0x104D250")]
	public List<Transform> Objects;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IncludeChildren;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1328CB8", Offset = "0x1328CB8", VA = "0x1328CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1328DA8", Offset = "0x1328DA8", VA = "0x1328DA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1328DAC", Offset = "0x1328DAC", VA = "0x1328DAC")]
	public void Replace(Material material)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1328F20", Offset = "0x1328F20", VA = "0x1328F20")]
	public void ReplaceMaterial(Transform trans, Material material)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1328FE4", Offset = "0x1328FE4", VA = "0x1328FE4")]
	public ChangeMaterialDebug()
	{
	}
}
[Token(Token = "0x2000009")]
public class ChangeQualityDebug : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000A")]
	public class QualityInfo
	{
		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x104D3A0", Offset = "0x104D3A0")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x104D3A0", Offset = "0x104D3A0")]
		public string Quality;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x104D40C", Offset = "0x104D40C")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0x104D40C", Offset = "0x104D40C")]
		public KeyCode KeyCode;

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x132911C", Offset = "0x132911C", VA = "0x132911C")]
		public void Set()
		{
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x13291C8", Offset = "0x13291C8", VA = "0x13291C8")]
		public string[] GetQuality()
		{
			return null;
		}

		[Token(Token = "0x600001A")]
		[Address(RVA = "0x1329138", Offset = "0x1329138", VA = "0x1329138")]
		public int GetQualityByName(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600001B")]
		[Address(RVA = "0x13291D0", Offset = "0x13291D0", VA = "0x13291D0")]
		public QualityInfo()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104D368", Offset = "0x104D368")]
	public List<QualityInfo> Quality;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x13290AC", Offset = "0x13290AC", VA = "0x13290AC")]
	public ChangeQualityDebug()
	{
	}
}
[Token(Token = "0x200000B")]
public class LIVQuestSDKManager : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LIVQuestSDKManager _instance;

	[Token(Token = "0x4000029")]
	private const uint SDKVersionMajor = 0u;

	[Token(Token = "0x400002A")]
	private const uint SDKVersionMinor = 1u;

	[Token(Token = "0x400002B")]
	private const uint SDKVersionPatch = 0u;

	[Token(Token = "0x400002C")]
	private const string SDKId = "BONXFIKENECIINAXIL1RWRHIVFBKSUUX";

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AppMetadata AppInfo;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D47C", Offset = "0x104D47C")]
	private Transform <CurrentStageTransform>k__BackingField;

	[Token(Token = "0x17000001")]
	public static LIVQuestSDKManager Instance
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x1351AFC", Offset = "0x1351AFC", VA = "0x1351AFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	public Transform CurrentStageTransform
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x1351BF8", Offset = "0x1351BF8", VA = "0x1351BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057CC0", Offset = "0x1057CC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x1351C00", Offset = "0x1351C00", VA = "0x1351C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057CD0", Offset = "0x1057CD0")]
		set
		{
		}
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1351C08", Offset = "0x1351C08", VA = "0x1351C08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x13521C0", Offset = "0x13521C0", VA = "0x13521C0")]
	public static void SetMrcEnabled()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1352498", Offset = "0x1352498", VA = "0x1352498")]
	public static void SetAsMrcCameraProvider()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x13526B8", Offset = "0x13526B8", VA = "0x13526B8")]
	public static void ClearMrcCameraProvider()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1352950", Offset = "0x1352950", VA = "0x1352950")]
	private static GameObject CreateMrcCamera(GameObject mainCamera, OVRManager.MrcCameraType cameraType)
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1351B60", Offset = "0x1351B60", VA = "0x1351B60")]
	private static LIVQuestSDKManager Instantiate()
	{
		return null;
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1352128", Offset = "0x1352128", VA = "0x1352128")]
	public static void Log(string message, params object[] args)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1352090", Offset = "0x1352090", VA = "0x1352090")]
	public static void LogWarning(string message, params object[] args)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1352400", Offset = "0x1352400", VA = "0x1352400")]
	public static void LogError(string message, params object[] args)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1352BE0", Offset = "0x1352BE0", VA = "0x1352BE0")]
	public LIVQuestSDKManager()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104B4A0", Offset = "0x104B4A0")]
public class LIVQuestSDKSetup : MonoBehaviour
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useOwnMrcSetup;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool setManagerConfiguration;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x126F414", Offset = "0x126F414", VA = "0x126F414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x126F494", Offset = "0x126F494", VA = "0x126F494")]
	public LIVQuestSDKSetup()
	{
	}
}
[Token(Token = "0x200000D")]
public struct XRPose
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float rx;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ry;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rz;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rw;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1195F88", Offset = "0x1195F88", VA = "0x1195F88")]
	public static XRPose FromPositionRotation(Vector3 position, Quaternion rotation)
	{
		return default(XRPose);
	}
}
[Token(Token = "0x200000E")]
public struct InputPayload_OculusController
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint buttons;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint touches;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float joystickX;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float joystickY;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float indexTrigger;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float gripTrigger;
}
[Token(Token = "0x200000F")]
public enum XRDeviceType : uint
{
	[Token(Token = "0x400003F")]
	None = 0u,
	[Token(Token = "0x4000040")]
	HmdWithProximitySensor = 10u,
	[Token(Token = "0x4000041")]
	Quest1andRiftS_LeftHand = 20u,
	[Token(Token = "0x4000042")]
	Quest1andRiftS_RightHand = 21u,
	[Token(Token = "0x4000043")]
	Quest2_LeftHand = 22u,
	[Token(Token = "0x4000044")]
	Quest2_RightHand = 23u,
	[Token(Token = "0x4000045")]
	HandSkeleton = 24u,
	[Token(Token = "0x4000046")]
	PSMoveWand = 3u
}
[Token(Token = "0x2000010")]
public struct OculusTrackingFrame2
{
	[Token(Token = "0x2000011")]
	[Flags]
	public enum OculusTrackingFlags : ulong
	{
		[Token(Token = "0x4000076")]
		HmdPosition = 1uL,
		[Token(Token = "0x4000077")]
		HmdOrientation = 2uL,
		[Token(Token = "0x4000078")]
		LeftHandPosition = 4uL,
		[Token(Token = "0x4000079")]
		LeftHandOrientation = 8uL,
		[Token(Token = "0x400007A")]
		RightHandPosition = 0x10uL,
		[Token(Token = "0x400007B")]
		RightHandOrientation = 0x20uL,
		[Token(Token = "0x400007C")]
		CameraPositionAndOrientation = 0x40uL,
		[Token(Token = "0x400007D")]
		CameraFOV = 0x80uL
	}

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong timestamp;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float hmdPosX;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float hmdPosY;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float hmdPosZ;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float hmdRotX;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float hmdRotY;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hmdRotZ;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hmdRotW;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public XRDeviceType leftHandDeviceType;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float leftHandPosX;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float leftHandPosY;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float leftHandPosZ;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float leftHandRotX;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float leftHandRotY;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float leftHandRotZ;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float leftHandRotW;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public uint buttonsLeft;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public uint touchesLeft;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float joystickXLeft;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float joystickYLeft;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float indexTriggerLeft;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float gripTriggerLeft;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public XRDeviceType rightHandDeviceType;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float rightHandPosX;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float rightHandPosY;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float rightHandPosZ;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float rightHandRotX;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float rightHandRotY;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float rightHandRotZ;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float rightHandRotW;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public uint buttonsRight;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public uint touchesRight;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float joystickXRight;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float joystickYRight;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float indexTriggerRight;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float gripTriggerRight;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float cameraPosX;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float cameraPosY;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float cameraPosZ;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float cameraRotX;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cameraRotY;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float cameraRotZ;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float cameraRotW;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public OculusTrackingFlags trackingFlags;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int correspondingVideoFrameIndex;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public double headPoseTime;
}
[Token(Token = "0x2000012")]
public struct AppMetadata
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string appBundleID;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string appFriendlyName;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string appDeveloperName;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appVersion;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string livSdkVersion;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string livSdkId;
}
[Token(Token = "0x2000013")]
public class LespNativeBinding
{
	[Token(Token = "0x4000084")]
	private const string Lib = "livquestsdk";

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1270890", Offset = "0x1270890", VA = "0x1270890")]
	public static void StartServer()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1270908", Offset = "0x1270908", VA = "0x1270908")]
	public static bool IsVideoAvailable(out int width, out int height)
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x12709A4", Offset = "0x12709A4", VA = "0x12709A4")]
	public static bool GetVideo(Texture2D textureY, Texture2D textureUV)
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1270B00", Offset = "0x1270B00", VA = "0x1270B00")]
	public static void CopyMRC()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1270B70", Offset = "0x1270B70", VA = "0x1270B70")]
	public static void ApplicationFocusChange(bool hasFocus)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1270BF8", Offset = "0x1270BF8", VA = "0x1270BF8")]
	public static bool IsClientConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1270C78", Offset = "0x1270C78", VA = "0x1270C78")]
	public static void SendRemotePermissions(RemotePermissionType permissions)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1270CFC", Offset = "0x1270CFC", VA = "0x1270CFC")]
	public static ViewfinderOrientationType GetViewfinderOrientation()
	{
		return default(ViewfinderOrientationType);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1270D74", Offset = "0x1270D74", VA = "0x1270D74")]
	public static void SendQuestTracking(ref OculusTrackingFrame2 frame)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1270DF8", Offset = "0x1270DF8", VA = "0x1270DF8")]
	public static void SendAppInfo(ref AppMetadata info)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1270894", Offset = "0x1270894", VA = "0x1270894")]
	private static extern uint lespStartServer();

	[PreserveSig]
	[Token(Token = "0x6000037")]
	[Address(RVA = "0x127090C", Offset = "0x127090C", VA = "0x127090C")]
	private static extern bool lespIsVideoAvailable(out int width, out int height);

	[PreserveSig]
	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1270A68", Offset = "0x1270A68", VA = "0x1270A68")]
	private unsafe static extern bool lespGetVideo(void* data, void* data2);

	[PreserveSig]
	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1270B04", Offset = "0x1270B04", VA = "0x1270B04")]
	private static extern void lespCopyMRC();

	[PreserveSig]
	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1270B78", Offset = "0x1270B78", VA = "0x1270B78")]
	private static extern void lespApplicationFocusChange(bool hasFocus);

	[PreserveSig]
	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1270BFC", Offset = "0x1270BFC", VA = "0x1270BFC")]
	private static extern bool lespIsClientConnected();

	[PreserveSig]
	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1270C7C", Offset = "0x1270C7C", VA = "0x1270C7C")]
	private static extern void lespSendRemotePermissions(uint permissions);

	[PreserveSig]
	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1270D00", Offset = "0x1270D00", VA = "0x1270D00")]
	private static extern byte lespGetViewfinderOrientation();

	[PreserveSig]
	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1270D78", Offset = "0x1270D78", VA = "0x1270D78")]
	private static extern void lespSendQuestTrackingData(ref OculusTrackingFrame2 frame);

	[PreserveSig]
	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1270DFC", Offset = "0x1270DFC", VA = "0x1270DFC")]
	private static extern void lespSendAppInfo(ref AppMetadata appInfo);

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1270ED8", Offset = "0x1270ED8", VA = "0x1270ED8")]
	public LespNativeBinding()
	{
	}
}
[Token(Token = "0x2000014")]
public class LespQuestTracking : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B4C4", Offset = "0x104B4C4")]
	private sealed class <EndOfFrameCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LespQuestTracking <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600004E")]
			[Address(RVA = "0x1271A7C", Offset = "0x1271A7C", VA = "0x1271A7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000050")]
			[Address(RVA = "0x1271AE4", Offset = "0x1271AE4", VA = "0x1271AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x1270FB4", Offset = "0x1270FB4", VA = "0x1270FB4")]
		[DebuggerHidden]
		public <EndOfFrameCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600004C")]
		[Address(RVA = "0x12719A4", Offset = "0x12719A4", VA = "0x12719A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600004D")]
		[Address(RVA = "0x12719A8", Offset = "0x12719A8", VA = "0x12719A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0x1271A84", Offset = "0x1271A84", VA = "0x1271A84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine _endOfFrameCoroutine;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly WaitForEndOfFrame _waitForEndOfFrame;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool prevMrcEnabled;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _mrcFrameIndex;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _sendAppInfoOnConnect;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRPlugin.Step kStep;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1270EE0", Offset = "0x1270EE0", VA = "0x1270EE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1270F84", Offset = "0x1270F84", VA = "0x1270F84")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1270F14", Offset = "0x1270F14", VA = "0x1270F14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1057CE0", Offset = "0x1057CE0")]
	private IEnumerator EndOfFrameCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1270FE0", Offset = "0x1270FE0", VA = "0x1270FE0")]
	private Pose ovrPosefToPose(OVRPlugin.Posef pose)
	{
		return default(Pose);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x127105C", Offset = "0x127105C", VA = "0x127105C")]
	private Pose ovrPosefToStagePose(OVRPlugin.Posef pose)
	{
		return default(Pose);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x12711CC", Offset = "0x12711CC", VA = "0x12711CC")]
	private OculusTrackingFrame2.OculusTrackingFlags getTrackingFlags(bool hmdPositionTracked, bool hmdOrientationTracked, bool leftHandPositionTracked, bool leftHandOrientationTracked, bool rightHandPositionTracked, bool rightHandOrientationTracked, bool cameraPositionAndOrientationTracked)
	{
		return default(OculusTrackingFrame2.OculusTrackingFlags);
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1271220", Offset = "0x1271220", VA = "0x1271220")]
	private void updateOculusMrcFrameIndex()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1271344", Offset = "0x1271344", VA = "0x1271344")]
	private void sendQuestTracking()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x12718D8", Offset = "0x12718D8", VA = "0x12718D8")]
	public LespQuestTracking()
	{
	}
}
[Token(Token = "0x2000016")]
[Flags]
public enum RemotePermissionType : uint
{
	[Token(Token = "0x400008F")]
	None = 0u,
	[Token(Token = "0x4000090")]
	Storage = 1u,
	[Token(Token = "0x4000091")]
	Microphone = 2u
}
[Token(Token = "0x2000017")]
public enum ViewfinderOrientationType : byte
{
	[Token(Token = "0x4000093")]
	Landscape,
	[Token(Token = "0x4000094")]
	Portrait
}
[Token(Token = "0x2000018")]
public class MaterialSettings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000019")]
	public class MaterialInfo
	{
		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104D4C0", Offset = "0x104D4C0")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104D4C0", Offset = "0x104D4C0")]
		public List<Material> Material;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104D520", Offset = "0x104D520")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104D520", Offset = "0x104D520")]
		public List<string> Tags;

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x12758E4", Offset = "0x12758E4", VA = "0x12758E4")]
		public MaterialInfo()
		{
		}
	}

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0x104D48C", Offset = "0x104D48C")]
	public List<MaterialInfo> Materials;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1275548", Offset = "0x1275548", VA = "0x1275548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x127554C", Offset = "0x127554C", VA = "0x127554C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1057D94", Offset = "0x1057D94")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1275874", Offset = "0x1275874", VA = "0x1275874")]
	public MaterialSettings()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x104B4E4", Offset = "0x104B4E4")]
public class FastList<T>
{
	[Token(Token = "0x200001B")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200001C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B51C", Offset = "0x104B51C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000007")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000076")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000078")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000073")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000074")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000075")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000077")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000005")]
	public int Count
	{
		[Token(Token = "0x6000057")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000058")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public T Item
	{
		[Token(Token = "0x6000059")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600005A")]
		set
		{
		}
	}

	[Token(Token = "0x6000055")]
	public FastList()
	{
	}

	[Token(Token = "0x6000056")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600005B")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600005C")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600005D")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600005E")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600005F")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000061")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000062")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000063")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000065")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000066")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000067")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000068")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000069")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1057DA4", Offset = "0x1057DA4")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600006B")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600006C")]
	private void Trim()
	{
	}

	[Token(Token = "0x600006D")]
	public void Clear()
	{
	}

	[Token(Token = "0x600006E")]
	public void Release()
	{
	}
}
[Token(Token = "0x200001D")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1347D58", Offset = "0x1347D58", VA = "0x1347D58")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200001E")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1347D2C", Offset = "0x1347D2C", VA = "0x1347D2C")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200001F")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public delegate void OnClick();

	[Token(Token = "0x2000021")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000022")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000023")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000024")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B52C", Offset = "0x104B52C")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x132CAD8", Offset = "0x132CAD8", VA = "0x132CAD8")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x132D204", Offset = "0x132D204", VA = "0x132D204")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000025")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B53C", Offset = "0x104B53C")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x132CCF0", Offset = "0x132CCF0", VA = "0x132CCF0")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x132D47C", Offset = "0x132D47C", VA = "0x132D47C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B54C", Offset = "0x104B54C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x132CE84", Offset = "0x132CE84", VA = "0x132CE84")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x132D830", Offset = "0x132D830", VA = "0x132D830")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B55C", Offset = "0x104B55C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x132D0DC", Offset = "0x132D0DC", VA = "0x132D0DC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x132D850", Offset = "0x132D850", VA = "0x132D850")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40000A1")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40000A2")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40000A3")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40000B0")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40000B1")]
	private const float marginH = 16f;

	[Token(Token = "0x40000B2")]
	private const float marginV = 16f;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x132B890", Offset = "0x132B890", VA = "0x132B890")]
	public void Awake()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x132BC94", Offset = "0x132BC94", VA = "0x132BC94")]
	public void Show()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x132C260", Offset = "0x132C260", VA = "0x132C260")]
	public void Hide()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x132C00C", Offset = "0x132C00C", VA = "0x132C00C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x132C408", Offset = "0x132C408", VA = "0x132C408")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x132C6BC", Offset = "0x132C6BC", VA = "0x132C6BC")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x132C86C", Offset = "0x132C86C", VA = "0x132C86C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x132C950", Offset = "0x132C950", VA = "0x132C950")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x132CAE0", Offset = "0x132CAE0", VA = "0x132CAE0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x132CB7C", Offset = "0x132CB7C", VA = "0x132CB7C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x132CCF8", Offset = "0x132CCF8", VA = "0x132CCF8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x132CE8C", Offset = "0x132CE8C", VA = "0x132CE8C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x132D0E4", Offset = "0x132D0E4", VA = "0x132D0E4")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x132D194", Offset = "0x132D194", VA = "0x132D194")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000028")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1345FF0", Offset = "0x1345FF0", VA = "0x1345FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1346078", Offset = "0x1346078", VA = "0x1346078")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1346140", Offset = "0x1346140", VA = "0x1346140")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x134617C", Offset = "0x134617C", VA = "0x134617C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000029")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200002A")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40000D0")]
		On,
		[Token(Token = "0x40000D1")]
		Off,
		[Token(Token = "0x40000D2")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color neutralColor;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color aimColor;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _forward;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _endPoint;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _hitTarget;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000009")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x126F854", Offset = "0x126F854", VA = "0x126F854")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x126F810", Offset = "0x126F810", VA = "0x126F810")]
		set
		{
		}
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x126F85C", Offset = "0x126F85C", VA = "0x126F85C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x126F8B4", Offset = "0x126F8B4", VA = "0x126F8B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x126F9CC", Offset = "0x126F9CC", VA = "0x126F9CC", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x126F9E8", Offset = "0x126F9E8", VA = "0x126F9E8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x126FA3C", Offset = "0x126FA3C", VA = "0x126FA3C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x126FC98", Offset = "0x126FC98", VA = "0x126FC98")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x126FDAC", Offset = "0x126FDAC", VA = "0x126FDAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x126FE40", Offset = "0x126FE40", VA = "0x126FE40")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x126FF10", Offset = "0x126FF10", VA = "0x126FF10")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x126FFC8", Offset = "0x126FFC8", VA = "0x126FFC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1270094", Offset = "0x1270094", VA = "0x1270094")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200002B")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1327EE4", Offset = "0x1327EE4", VA = "0x1327EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x13280F0", Offset = "0x13280F0", VA = "0x13280F0")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1328590", Offset = "0x1328590", VA = "0x1328590")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200002C")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1345298", Offset = "0x1345298", VA = "0x1345298")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x13453CC", Offset = "0x13453CC", VA = "0x13453CC")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x134561C", Offset = "0x134561C", VA = "0x134561C")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200002D")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700000A")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x13456C8", Offset = "0x13456C8", VA = "0x13456C8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x1345328", Offset = "0x1345328", VA = "0x1345328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057E58", Offset = "0x1057E58")]
		add
		{
		}
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x1345624", Offset = "0x1345624", VA = "0x1345624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057E68", Offset = "0x1057E68")]
		remove
		{
		}
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x13456D4", Offset = "0x13456D4", VA = "0x13456D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x134582C", Offset = "0x134582C", VA = "0x134582C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x13459A0", Offset = "0x13459A0", VA = "0x13459A0")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x13459A8", Offset = "0x13459A8", VA = "0x13459A8")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200002E")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D630", Offset = "0x104D630")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D668", Offset = "0x104D668")]
	public bool EnableCollision;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D6A0", Offset = "0x104D6A0")]
	public float MaxFade;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D6D8", Offset = "0x104D6D8")]
	public float FadeMinDistance;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D710", Offset = "0x104D710")]
	public float FadeMaxDistance;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1329970", Offset = "0x1329970", VA = "0x1329970")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x13299F8", Offset = "0x13299F8", VA = "0x13299F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1329A68", Offset = "0x1329A68", VA = "0x1329A68")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1329A6C", Offset = "0x1329A6C", VA = "0x1329A6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1329A90", Offset = "0x1329A90", VA = "0x1329A90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1329AB4", Offset = "0x1329AB4", VA = "0x1329AB4")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200002F")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1271CC4", Offset = "0x1271CC4", VA = "0x1271CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1271D70", Offset = "0x1271D70", VA = "0x1271D70")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000030")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000031")]
	public enum States
	{
		[Token(Token = "0x4000111")]
		Ready,
		[Token(Token = "0x4000112")]
		Aim,
		[Token(Token = "0x4000113")]
		CancelAim,
		[Token(Token = "0x4000114")]
		PreTeleport,
		[Token(Token = "0x4000115")]
		CancelTeleport,
		[Token(Token = "0x4000116")]
		Teleporting,
		[Token(Token = "0x4000117")]
		PostTeleport
	}

	[Token(Token = "0x2000032")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000119")]
		None,
		[Token(Token = "0x400011A")]
		Aim,
		[Token(Token = "0x400011B")]
		PreTeleport,
		[Token(Token = "0x400011C")]
		Teleport
	}

	[Token(Token = "0x2000033")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x400011E")]
		Point,
		[Token(Token = "0x400011F")]
		Sphere,
		[Token(Token = "0x4000120")]
		Capsule
	}

	[Token(Token = "0x2000034")]
	public class AimData
	{
		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104DB28", Offset = "0x104DB28")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700000E")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60000FC")]
			[Address(RVA = "0x12745A0", Offset = "0x12745A0", VA = "0x12745A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105830C", Offset = "0x105830C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000FD")]
			[Address(RVA = "0x12745A8", Offset = "0x12745A8", VA = "0x12745A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105831C", Offset = "0x105831C")]
			private set
			{
			}
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x127452C", Offset = "0x127452C", VA = "0x127452C")]
		public AimData()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x12745B0", Offset = "0x12745B0", VA = "0x12745B0")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B56C", Offset = "0x104B56C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000102")]
			[Address(RVA = "0x1274378", Offset = "0x1274378", VA = "0x1274378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000104")]
			[Address(RVA = "0x12743E0", Offset = "0x12743E0", VA = "0x12743E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x127287C", Offset = "0x127287C", VA = "0x127287C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x1274290", Offset = "0x1274290", VA = "0x1274290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0x1274294", Offset = "0x1274294", VA = "0x1274294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x1274380", Offset = "0x1274380", VA = "0x1274380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B57C", Offset = "0x104B57C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000108")]
			[Address(RVA = "0x1273D58", Offset = "0x1273D58", VA = "0x1273D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600010A")]
			[Address(RVA = "0x1273DC0", Offset = "0x1273DC0", VA = "0x1273DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0x1272D64", Offset = "0x1272D64", VA = "0x1272D64")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x1273C20", Offset = "0x1273C20", VA = "0x1273C20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0x1273C24", Offset = "0x1273C24", VA = "0x1273C24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x1273D60", Offset = "0x1273D60", VA = "0x1273D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000037")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B58C", Offset = "0x104B58C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010E")]
			[Address(RVA = "0x1273E6C", Offset = "0x1273E6C", VA = "0x1273E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000110")]
			[Address(RVA = "0x1273ED4", Offset = "0x1273ED4", VA = "0x1273ED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x1272F48", Offset = "0x1272F48", VA = "0x1272F48")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x1273DC8", Offset = "0x1273DC8", VA = "0x1273DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x1273DCC", Offset = "0x1273DCC", VA = "0x1273DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x1273E74", Offset = "0x1273E74", VA = "0x1273E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B59C", Offset = "0x104B59C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000114")]
			[Address(RVA = "0x1274220", Offset = "0x1274220", VA = "0x1274220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000116")]
			[Address(RVA = "0x1274288", Offset = "0x1274288", VA = "0x1274288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x127312C", Offset = "0x127312C", VA = "0x127312C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x1274148", Offset = "0x1274148", VA = "0x1274148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x127414C", Offset = "0x127414C", VA = "0x127414C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x1274228", Offset = "0x1274228", VA = "0x1274228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B5AC", Offset = "0x104B5AC")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0x1273F80", Offset = "0x1273F80", VA = "0x1273F80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011C")]
			[Address(RVA = "0x1273FE8", Offset = "0x1273FE8", VA = "0x1273FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x1273310", Offset = "0x1273310", VA = "0x1273310")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x1273EDC", Offset = "0x1273EDC", VA = "0x1273EDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x1273EE0", Offset = "0x1273EE0", VA = "0x1273EE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x1273F88", Offset = "0x1273F88", VA = "0x1273F88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B5BC", Offset = "0x104B5BC")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0x12744BC", Offset = "0x12744BC", VA = "0x12744BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000122")]
			[Address(RVA = "0x1274524", Offset = "0x1274524", VA = "0x1274524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x12734F4", Offset = "0x12734F4", VA = "0x12734F4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x12743E8", Offset = "0x12743E8", VA = "0x12743E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0x12743EC", Offset = "0x12743EC", VA = "0x12743EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x12744C4", Offset = "0x12744C4", VA = "0x12744C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B5CC", Offset = "0x104B5CC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000126")]
			[Address(RVA = "0x12740D8", Offset = "0x12740D8", VA = "0x12740D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000128")]
			[Address(RVA = "0x1274140", Offset = "0x1274140", VA = "0x1274140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0x12736D8", Offset = "0x12736D8", VA = "0x12736D8")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x1273FF0", Offset = "0x1273FF0", VA = "0x1273FF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x1273FF4", Offset = "0x1273FF4", VA = "0x1273FF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x12740E0", Offset = "0x12740E0", VA = "0x12740E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D748", Offset = "0x104D748")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D780", Offset = "0x104D780")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D7B8", Offset = "0x104D7B8")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D7F0", Offset = "0x104D7F0")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D828", Offset = "0x104D828")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D860", Offset = "0x104D860")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D898", Offset = "0x104D898")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D8D0", Offset = "0x104D8D0")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D908", Offset = "0x104D908")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D918", Offset = "0x104D918")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D950", Offset = "0x104D950")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D998", Offset = "0x104D998")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D9A8", Offset = "0x104D9A8")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104D9E0", Offset = "0x104D9E0")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DA18", Offset = "0x104DA18")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DA50", Offset = "0x104DA50")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000B")]
	public States CurrentState
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x1271DC0", Offset = "0x1271DC0", VA = "0x1271DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057E78", Offset = "0x1057E78")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x1271DC8", Offset = "0x1271DC8", VA = "0x1271DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057E88", Offset = "0x1057E88")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x1271FF8", Offset = "0x1271FF8", VA = "0x1271FF8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700000D")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x1272020", Offset = "0x1272020", VA = "0x1272020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057EB8", Offset = "0x1057EB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x1272028", Offset = "0x1272028", VA = "0x1272028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057EC8", Offset = "0x1057EC8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x1271DD0", Offset = "0x1271DD0", VA = "0x1271DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057E98", Offset = "0x1057E98")]
		add
		{
		}
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x1271E74", Offset = "0x1271E74", VA = "0x1271E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057EA8", Offset = "0x1057EA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x1272734", Offset = "0x1272734", VA = "0x1272734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057F10", Offset = "0x1057F10")]
		add
		{
		}
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x12727D8", Offset = "0x12727D8", VA = "0x12727D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057F20", Offset = "0x1057F20")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x12728A8", Offset = "0x12728A8", VA = "0x12728A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057F94", Offset = "0x1057F94")]
		add
		{
		}
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x127294C", Offset = "0x127294C", VA = "0x127294C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057FA4", Offset = "0x1057FA4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x12729F0", Offset = "0x12729F0", VA = "0x12729F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057FB4", Offset = "0x1057FB4")]
		add
		{
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x1272A94", Offset = "0x1272A94", VA = "0x1272A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057FC4", Offset = "0x1057FC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x1272BAC", Offset = "0x1272BAC", VA = "0x1272BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057FD4", Offset = "0x1057FD4")]
		add
		{
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x1272C50", Offset = "0x1272C50", VA = "0x1272C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1057FE4", Offset = "0x1057FE4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1272D90", Offset = "0x1272D90", VA = "0x1272D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058058", Offset = "0x1058058")]
		add
		{
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1272E34", Offset = "0x1272E34", VA = "0x1272E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058068", Offset = "0x1058068")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x1272F74", Offset = "0x1272F74", VA = "0x1272F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10580DC", Offset = "0x10580DC")]
		add
		{
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x1273018", Offset = "0x1273018", VA = "0x1273018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10580EC", Offset = "0x10580EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x1273158", Offset = "0x1273158", VA = "0x1273158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058160", Offset = "0x1058160")]
		add
		{
		}
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x12731FC", Offset = "0x12731FC", VA = "0x12731FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058170", Offset = "0x1058170")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x127333C", Offset = "0x127333C", VA = "0x127333C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10581E4", Offset = "0x10581E4")]
		add
		{
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x12733E0", Offset = "0x12733E0", VA = "0x12733E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10581F4", Offset = "0x10581F4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1273520", Offset = "0x1273520", VA = "0x1273520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058268", Offset = "0x1058268")]
		add
		{
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x12735C4", Offset = "0x12735C4", VA = "0x12735C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058278", Offset = "0x1058278")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1273704", Offset = "0x1273704", VA = "0x1273704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10582EC", Offset = "0x10582EC")]
		add
		{
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x12737A8", Offset = "0x12737A8", VA = "0x12737A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10582FC", Offset = "0x10582FC")]
		remove
		{
		}
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1271D78", Offset = "0x1271D78", VA = "0x1271D78")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1271D9C", Offset = "0x1271D9C", VA = "0x1271D9C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1271F18", Offset = "0x1271F18", VA = "0x1271F18")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1272030", Offset = "0x1272030", VA = "0x1272030")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1272388", Offset = "0x1272388", VA = "0x1272388")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x1057ED8", Offset = "0x1057ED8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1272440", Offset = "0x1272440", VA = "0x1272440")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1272508", Offset = "0x1272508", VA = "0x1272508")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1272524", Offset = "0x1272524", VA = "0x1272524")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x12725EC", Offset = "0x12725EC", VA = "0x12725EC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1272630", Offset = "0x1272630", VA = "0x1272630")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x127268C", Offset = "0x127268C", VA = "0x127268C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x127272C", Offset = "0x127272C", VA = "0x127272C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x12726BC", Offset = "0x12726BC", VA = "0x12726BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1057F30", Offset = "0x1057F30")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x1272B38", Offset = "0x1272B38", VA = "0x1272B38")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1272CF4", Offset = "0x1272CF4", VA = "0x1272CF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1057FF4", Offset = "0x1057FF4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1272ED8", Offset = "0x1272ED8", VA = "0x1272ED8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058078", Offset = "0x1058078")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x12730BC", Offset = "0x12730BC", VA = "0x12730BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10580FC", Offset = "0x10580FC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x12732A0", Offset = "0x12732A0", VA = "0x12732A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058180", Offset = "0x1058180")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1273484", Offset = "0x1273484", VA = "0x1273484")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058204", Offset = "0x1058204")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1273668", Offset = "0x1273668", VA = "0x1273668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058288", Offset = "0x1058288")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x127384C", Offset = "0x127384C", VA = "0x127384C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1273990", Offset = "0x1273990", VA = "0x1273990")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x12739C4", Offset = "0x12739C4", VA = "0x12739C4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1273AE4", Offset = "0x1273AE4", VA = "0x1273AE4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1273C10", Offset = "0x1273C10", VA = "0x1273C10")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200003C")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x10EAE24", Offset = "0x10EAE24", VA = "0x10EAE24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105855C", Offset = "0x105855C")]
		add
		{
		}
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x10EAEC8", Offset = "0x10EAEC8", VA = "0x10EAEC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105856C", Offset = "0x105856C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x10EAF6C", Offset = "0x10EAF6C", VA = "0x10EAF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105857C", Offset = "0x105857C")]
		add
		{
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x10EB010", Offset = "0x10EB010", VA = "0x10EB010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105858C", Offset = "0x105858C")]
		remove
		{
		}
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x10EB0B4", Offset = "0x10EB0B4", VA = "0x10EB0B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x10EB15C", Offset = "0x10EB15C", VA = "0x10EB15C")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x10EB160", Offset = "0x10EB160", VA = "0x10EB160")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x10EB1D4", Offset = "0x10EB1D4", VA = "0x10EB1D4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x10EB344", Offset = "0x10EB344", VA = "0x10EB344")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x10EB628", Offset = "0x10EB628", VA = "0x10EB628")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x10EB818", Offset = "0x10EB818", VA = "0x10EB818")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200003D")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1183750", Offset = "0x1183750", VA = "0x1183750", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x11837E4", Offset = "0x11837E4", VA = "0x11837E4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000136")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x11838B4", Offset = "0x11838B4", VA = "0x11838B4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200003E")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DB58", Offset = "0x104DB58")]
	public float Range;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x11838C4", Offset = "0x11838C4", VA = "0x11838C4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1183A20", Offset = "0x1183A20", VA = "0x1183A20")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200003F")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DB90", Offset = "0x104DB90")]
	public float Range;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DBC8", Offset = "0x104DBC8")]
	public float MinimumElevation;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DC00", Offset = "0x104DC00")]
	public float Gravity;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DC38", Offset = "0x104DC38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104DC38", Offset = "0x104DC38")]
	public float AimVelocity;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DC94", Offset = "0x104DC94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104DC94", Offset = "0x104DC94")]
	public float AimStep;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1183A30", Offset = "0x1183A30", VA = "0x1183A30", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1183C7C", Offset = "0x1183C7C", VA = "0x1183C7C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000040")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DCEC", Offset = "0x104DCEC")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1183C90", Offset = "0x1183C90", VA = "0x1183C90")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1183D74", Offset = "0x1183D74", VA = "0x1183D74")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1183DA4", Offset = "0x1183DA4", VA = "0x1183DA4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1183DD4", Offset = "0x1183DD4", VA = "0x1183DD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1183E74", Offset = "0x1183E74", VA = "0x1183E74", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1183EE0", Offset = "0x1183EE0", VA = "0x1183EE0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1183F48", Offset = "0x1183F48", VA = "0x1183F48")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000041")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104DD24", Offset = "0x104DD24")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DD34", Offset = "0x104DD34")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DD6C", Offset = "0x104DD6C")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DDA4", Offset = "0x104DDA4")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700001D")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x1184064", Offset = "0x1184064", VA = "0x1184064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105859C", Offset = "0x105859C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x118406C", Offset = "0x118406C", VA = "0x118406C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10585AC", Offset = "0x10585AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x118421C", Offset = "0x118421C", VA = "0x118421C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10585BC", Offset = "0x10585BC")]
		add
		{
		}
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x11842C0", Offset = "0x11842C0", VA = "0x11842C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10585CC", Offset = "0x10585CC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1184078", Offset = "0x1184078", VA = "0x1184078")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1184100", Offset = "0x1184100", VA = "0x1184100")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x11841D8", Offset = "0x11841D8", VA = "0x11841D8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1184218", Offset = "0x1184218", VA = "0x1184218")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1184364", Offset = "0x1184364", VA = "0x1184364")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x11843CC", Offset = "0x11843CC", VA = "0x11843CC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x11843EC", Offset = "0x11843EC", VA = "0x11843EC", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000042")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B5DC", Offset = "0x104B5DC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0x1184AB0", Offset = "0x1184AB0", VA = "0x1184AB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0x1184B18", Offset = "0x1184B18", VA = "0x1184B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x11847FC", Offset = "0x11847FC", VA = "0x11847FC")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x1184A20", Offset = "0x1184A20", VA = "0x1184A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x1184A24", Offset = "0x1184A24", VA = "0x1184A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x1184AB8", Offset = "0x1184AB8", VA = "0x1184AB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B5EC", Offset = "0x104B5EC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0x11849B0", Offset = "0x11849B0", VA = "0x11849B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000162")]
			[Address(RVA = "0x1184A18", Offset = "0x1184A18", VA = "0x1184A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x1184898", Offset = "0x1184898", VA = "0x1184898")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x118491C", Offset = "0x118491C", VA = "0x118491C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x1184920", Offset = "0x1184920", VA = "0x1184920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x11849B8", Offset = "0x11849B8", VA = "0x11849B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x11845CC", Offset = "0x11845CC", VA = "0x11845CC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1184678", Offset = "0x1184678", VA = "0x1184678", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x11846D0", Offset = "0x11846D0", VA = "0x11846D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x118478C", Offset = "0x118478C", VA = "0x118478C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10585DC", Offset = "0x10585DC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1184828", Offset = "0x1184828", VA = "0x1184828")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058640", Offset = "0x1058640")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000154")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x11848C4", Offset = "0x11848C4", VA = "0x11848C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10586A4", Offset = "0x10586A4")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x11848F0", Offset = "0x11848F0", VA = "0x11848F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10586B4", Offset = "0x10586B4")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000045")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104DDEC", Offset = "0x104DDEC")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DDFC", Offset = "0x104DDFC")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DE34", Offset = "0x104DE34")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DE6C", Offset = "0x104DE6C")]
	public bool FastTeleport;

	[Token(Token = "0x17000022")]
	public Transform Pointer
	{
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x1184B20", Offset = "0x1184B20", VA = "0x1184B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058764", Offset = "0x1058764")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x1184B28", Offset = "0x1184B28", VA = "0x1184B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058774", Offset = "0x1058774")]
		private set
		{
		}
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1184B30", Offset = "0x1184B30", VA = "0x1184B30", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1184C8C", Offset = "0x1184C8C", VA = "0x1184C8C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1184D44", Offset = "0x1184D44", VA = "0x1184D44")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000046")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000047")]
	public enum InputModes
	{
		[Token(Token = "0x4000171")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000172")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000173")]
		ThumbstickTeleport,
		[Token(Token = "0x4000174")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000048")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000176")]
		A,
		[Token(Token = "0x4000177")]
		B,
		[Token(Token = "0x4000178")]
		LeftTrigger,
		[Token(Token = "0x4000179")]
		LeftThumbstick,
		[Token(Token = "0x400017A")]
		RightTrigger,
		[Token(Token = "0x400017B")]
		RightThumbstick,
		[Token(Token = "0x400017C")]
		X,
		[Token(Token = "0x400017D")]
		Y
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DEA4", Offset = "0x104DEA4")]
	public InputModes InputMode;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DEDC", Offset = "0x104DEDC")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DF14", Offset = "0x104DF14")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DF4C", Offset = "0x104DF4C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1184D48", Offset = "0x1184D48", VA = "0x1184D48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1184D4C", Offset = "0x1184D4C", VA = "0x1184D4C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1185194", Offset = "0x1185194", VA = "0x1185194", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1185254", Offset = "0x1185254", VA = "0x1185254")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000049")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200004A")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000182")]
		HeadRelative,
		[Token(Token = "0x4000183")]
		ForwardFacing
	}

	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B5FC", Offset = "0x104B5FC")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000178")]
			[Address(RVA = "0x11856E4", Offset = "0x11856E4", VA = "0x11856E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017A")]
			[Address(RVA = "0x118574C", Offset = "0x118574C", VA = "0x118574C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x11854C0", Offset = "0x11854C0", VA = "0x11854C0")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x118563C", Offset = "0x118563C", VA = "0x118563C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x1185640", Offset = "0x1185640", VA = "0x1185640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x11856EC", Offset = "0x11856EC", VA = "0x11856EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1185300", Offset = "0x1185300", VA = "0x1185300")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x11853B4", Offset = "0x11853B4", VA = "0x11853B4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x11853BC", Offset = "0x11853BC", VA = "0x11853BC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1185408", Offset = "0x1185408", VA = "0x1185408", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1185450", Offset = "0x1185450", VA = "0x1185450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058784", Offset = "0x1058784")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000172")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x11854EC", Offset = "0x11854EC", VA = "0x11854EC")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1185610", Offset = "0x1185610", VA = "0x1185610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10587E8", Offset = "0x10587E8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200004C")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1185754", Offset = "0x1185754", VA = "0x1185754", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1185758", Offset = "0x1185758", VA = "0x1185758", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x11857D4", Offset = "0x11857D4", VA = "0x11857D4")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200004D")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DF84", Offset = "0x104DF84")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DFBC", Offset = "0x104DFBC")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104DFF4", Offset = "0x104DFF4")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E02C", Offset = "0x104E02C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x11857D8", Offset = "0x11857D8", VA = "0x11857D8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1185848", Offset = "0x1185848", VA = "0x1185848", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1185CC0", Offset = "0x1185CC0", VA = "0x1185CC0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200004E")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E064", Offset = "0x104E064")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E09C", Offset = "0x104E09C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E0D4", Offset = "0x104E0D4")]
	public float RotateStickThreshold;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1185CC4", Offset = "0x1185CC4", VA = "0x1185CC4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1185D08", Offset = "0x1185D08", VA = "0x1185D08", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1186178", Offset = "0x1186178", VA = "0x1186178")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200004F")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1186188", Offset = "0x1186188", VA = "0x1186188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x118618C", Offset = "0x118618C", VA = "0x118618C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1186194", Offset = "0x1186194", VA = "0x1186194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x118627C", Offset = "0x118627C", VA = "0x118627C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x11862A4", Offset = "0x11862A4", VA = "0x11862A4")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000050")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104E10C", Offset = "0x104E10C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000025")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x11862BC", Offset = "0x11862BC", VA = "0x11862BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058848", Offset = "0x1058848")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x11862C4", Offset = "0x11862C4", VA = "0x11862C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058858", Offset = "0x1058858")]
		private set
		{
		}
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1183780", Offset = "0x1183780", VA = "0x1183780", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1183888", Offset = "0x1183888", VA = "0x1183888", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x11862CC", Offset = "0x11862CC", VA = "0x11862CC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x1058868", Offset = "0x1058868")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1183ED4", Offset = "0x1183ED4", VA = "0x1183ED4", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1183F40", Offset = "0x1183F40", VA = "0x1183F40", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x11838BC", Offset = "0x11838BC", VA = "0x11838BC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000051")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B60C", Offset = "0x104B60C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019C")]
			[Address(RVA = "0x1186920", Offset = "0x1186920", VA = "0x1186920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019E")]
			[Address(RVA = "0x1186988", Offset = "0x1186988", VA = "0x1186988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x118651C", Offset = "0x118651C", VA = "0x118651C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0x11866B4", Offset = "0x11866B4", VA = "0x11866B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0x11866B8", Offset = "0x11866B8", VA = "0x11866B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0x1186928", Offset = "0x1186928", VA = "0x1186928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E11C", Offset = "0x104E11C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400019D")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1186394", Offset = "0x1186394", VA = "0x1186394")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1186458", Offset = "0x1186458", VA = "0x1186458", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1186484", Offset = "0x1186484", VA = "0x1186484", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x11864AC", Offset = "0x11864AC", VA = "0x11864AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10588A0", Offset = "0x10588A0")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1186548", Offset = "0x1186548", VA = "0x1186548", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000196")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1186564", Offset = "0x1186564", VA = "0x1186564", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1186688", Offset = "0x1186688", VA = "0x1186688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058904", Offset = "0x1058904")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000053")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1186990", Offset = "0x1186990", VA = "0x1186990")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x11869F0", Offset = "0x11869F0", VA = "0x11869F0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1186B74", Offset = "0x1186B74", VA = "0x1186B74", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1186C64", Offset = "0x1186C64", VA = "0x1186C64")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x1058964", Offset = "0x1058964")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1186C68", Offset = "0x1186C68", VA = "0x1186C68")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000054")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E154", Offset = "0x104E154")]
	public float LOSOffset;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E18C", Offset = "0x104E18C")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1186C74", Offset = "0x1186C74", VA = "0x1186C74", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1186EA4", Offset = "0x1186EA4", VA = "0x1186EA4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000055")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1186EB0", Offset = "0x1186EB0", VA = "0x1186EB0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1187034", Offset = "0x1187034", VA = "0x1187034")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000056")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1187038", Offset = "0x1187038", VA = "0x1187038", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x11870D0", Offset = "0x11870D0", VA = "0x11870D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001AA")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1187164", Offset = "0x1187164", VA = "0x1187164")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000057")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B61C", Offset = "0x104B61C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B2")]
			[Address(RVA = "0x11874CC", Offset = "0x11874CC", VA = "0x11874CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B4")]
			[Address(RVA = "0x1187534", Offset = "0x1187534", VA = "0x1187534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x1187208", Offset = "0x1187208", VA = "0x1187208")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x11873CC", Offset = "0x11873CC", VA = "0x11873CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x11873D0", Offset = "0x11873D0", VA = "0x11873D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x11874D4", Offset = "0x11874D4", VA = "0x11874D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E1C4", Offset = "0x104E1C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104E1C4", Offset = "0x104E1C4")]
	public float TransitionDuration;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E21C", Offset = "0x104E21C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104E21C", Offset = "0x104E21C")]
	public float TeleportDelay;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E270", Offset = "0x104E270")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x118716C", Offset = "0x118716C", VA = "0x118716C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1187198", Offset = "0x1187198", VA = "0x1187198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105899C", Offset = "0x105899C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1187234", Offset = "0x1187234", VA = "0x1187234")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000059")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x118753C", Offset = "0x118753C", VA = "0x118753C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1187558", Offset = "0x1187558", VA = "0x1187558")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200005A")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B62C", Offset = "0x104B62C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BD")]
			[Address(RVA = "0x11877A4", Offset = "0x11877A4", VA = "0x11877A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BF")]
			[Address(RVA = "0x118780C", Offset = "0x118780C", VA = "0x118780C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x11875FC", Offset = "0x11875FC", VA = "0x11875FC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x1187670", Offset = "0x1187670", VA = "0x1187670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x1187674", Offset = "0x1187674", VA = "0x1187674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x11877AC", Offset = "0x11877AC", VA = "0x11877AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104E2A8", Offset = "0x104E2A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E2A8", Offset = "0x104E2A8")]
	public float TransitionDuration;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1187560", Offset = "0x1187560", VA = "0x1187560", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x118758C", Offset = "0x118758C", VA = "0x118758C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058A50", Offset = "0x1058A50")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1187628", Offset = "0x1187628", VA = "0x1187628")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200005C")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002C")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x1279558", Offset = "0x1279558", VA = "0x1279558")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002D")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x1279814", Offset = "0x1279814", VA = "0x1279814")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x1277578", Offset = "0x1277578", VA = "0x1277578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x12787E8", Offset = "0x12787E8", VA = "0x12787E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000030")]
	public static long Duration
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x12789CC", Offset = "0x12789CC", VA = "0x12789CC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000031")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x12788D8", Offset = "0x12788D8", VA = "0x12788D8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x1277F5C", Offset = "0x1277F5C", VA = "0x1277F5C")]
		set
		{
		}
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x127902C", Offset = "0x127902C", VA = "0x127902C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1278D70", Offset = "0x1278D70", VA = "0x1278D70")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1277BEC", Offset = "0x1277BEC", VA = "0x1277BEC")]
	public static void Play()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1277D70", Offset = "0x1277D70", VA = "0x1277D70")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1278B98", Offset = "0x1278B98", VA = "0x1278B98")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1279220", Offset = "0x1279220", VA = "0x1279220")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x127862C", Offset = "0x127862C", VA = "0x127862C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200005D")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x1328AF8", Offset = "0x1328AF8", VA = "0x1328AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B04", Offset = "0x1058B04")]
		add
		{
		}
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x1328B9C", Offset = "0x1328B9C", VA = "0x1328B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B14", Offset = "0x1058B14")]
		remove
		{
		}
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1328C40", Offset = "0x1328C40", VA = "0x1328C40", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1328C54", Offset = "0x1328C54", VA = "0x1328C54")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200005E")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200005F")]
	public enum ButtonType
	{
		[Token(Token = "0x40001CB")]
		Play,
		[Token(Token = "0x40001CC")]
		Pause,
		[Token(Token = "0x40001CD")]
		FastForward,
		[Token(Token = "0x40001CE")]
		Rewind,
		[Token(Token = "0x40001CF")]
		SkipForward,
		[Token(Token = "0x40001D0")]
		SkipBack,
		[Token(Token = "0x40001D1")]
		Stop
	}

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000032")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x127597C", Offset = "0x127597C", VA = "0x127597C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x1275984", Offset = "0x1275984", VA = "0x1275984")]
		set
		{
		}
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x12759A8", Offset = "0x12759A8", VA = "0x12759A8", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1276E74", Offset = "0x1276E74", VA = "0x1276E74")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000060")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000061")]
	public enum VideoShape
	{
		[Token(Token = "0x40001E5")]
		_360,
		[Token(Token = "0x40001E6")]
		_180,
		[Token(Token = "0x40001E7")]
		Quad
	}

	[Token(Token = "0x2000062")]
	public enum VideoStereo
	{
		[Token(Token = "0x40001E9")]
		Mono,
		[Token(Token = "0x40001EA")]
		TopBottom,
		[Token(Token = "0x40001EB")]
		LeftRight
	}

	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B63C", Offset = "0x104B63C")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001ED")]
			[Address(RVA = "0x12794E8", Offset = "0x12794E8", VA = "0x12794E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0x1279550", Offset = "0x1279550", VA = "0x1279550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x12778E8", Offset = "0x12778E8", VA = "0x12778E8")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x1279364", Offset = "0x1279364", VA = "0x1279364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1279368", Offset = "0x1279368", VA = "0x1279368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x12794F0", Offset = "0x12794F0", VA = "0x12794F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B64C", Offset = "0x104B64C")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1277B50", Offset = "0x1277B50", VA = "0x1277B50")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x1278F58", Offset = "0x1278F58", VA = "0x1278F58")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104E330", Offset = "0x104E330")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104E340", Offset = "0x104E340")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104E350", Offset = "0x104E350")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000033")]
	public bool IsPlaying
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x127732C", Offset = "0x127732C", VA = "0x127732C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B24", Offset = "0x1058B24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1277334", Offset = "0x1277334", VA = "0x1277334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B34", Offset = "0x1058B34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public long Duration
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1277340", Offset = "0x1277340", VA = "0x1277340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B44", Offset = "0x1058B44")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x1277348", Offset = "0x1277348", VA = "0x1277348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B54", Offset = "0x1058B54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1277350", Offset = "0x1277350", VA = "0x1277350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B64", Offset = "0x1058B64")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x1277358", Offset = "0x1277358", VA = "0x1277358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058B74", Offset = "0x1058B74")]
		private set
		{
		}
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1277360", Offset = "0x1277360", VA = "0x1277360")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x12775E0", Offset = "0x12775E0", VA = "0x12775E0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1277648", Offset = "0x1277648", VA = "0x1277648")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1277878", Offset = "0x1277878", VA = "0x1277878")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058B84", Offset = "0x1058B84")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1277914", Offset = "0x1277914", VA = "0x1277914")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1277B58", Offset = "0x1277B58", VA = "0x1277B58")]
	public void Play()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1277CE0", Offset = "0x1277CE0", VA = "0x1277CE0")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1277E64", Offset = "0x1277E64", VA = "0x1277E64")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x127809C", Offset = "0x127809C", VA = "0x127809C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1278AC0", Offset = "0x1278AC0", VA = "0x1278AC0")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1278CE0", Offset = "0x1278CE0", VA = "0x1278CE0")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1278E64", Offset = "0x1278E64", VA = "0x1278E64")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1278F48", Offset = "0x1278F48", VA = "0x1278F48")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B65C", Offset = "0x104B65C")]
[ExecuteInEditMode]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	private enum CubeFace
	{
		[Token(Token = "0x4000206")]
		Right,
		[Token(Token = "0x4000207")]
		Left,
		[Token(Token = "0x4000208")]
		Top,
		[Token(Token = "0x4000209")]
		Bottom,
		[Token(Token = "0x400020A")]
		Front,
		[Token(Token = "0x400020B")]
		Back,
		[Token(Token = "0x400020C")]
		COUNT
	}

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x159AFA8", Offset = "0x159AFA8", VA = "0x159AFA8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x159B108", Offset = "0x159B108", VA = "0x159B108")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x159B2C4", Offset = "0x159B2C4", VA = "0x159B2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x159B79C", Offset = "0x159B79C", VA = "0x159B79C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x159BA70", Offset = "0x159BA70", VA = "0x159BA70")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x159CCCC", Offset = "0x159CCCC", VA = "0x159CCCC")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x159CD2C", Offset = "0x159CD2C", VA = "0x159CD2C")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x159BDF0", Offset = "0x159BDF0", VA = "0x159BDF0")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x159CE14", Offset = "0x159CE14", VA = "0x159CE14")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x159D000", Offset = "0x159D000", VA = "0x159D000")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x159C2A8", Offset = "0x159C2A8", VA = "0x159C2A8")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x159C5D0", Offset = "0x159C5D0", VA = "0x159C5D0")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x159C928", Offset = "0x159C928", VA = "0x159C928")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x159D1B4", Offset = "0x159D1B4", VA = "0x159D1B4")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000067")]
public static class VectorUtil
{
	[Token(Token = "0x6000201")]
	[Address(RVA = "0x11951C4", Offset = "0x11951C4", VA = "0x11951C4")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104B6E0", Offset = "0x104B6E0")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000069")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000216")]
		MouseXAndY,
		[Token(Token = "0x4000217")]
		MouseX,
		[Token(Token = "0x4000218")]
		MouseY
	}

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1276FEC", Offset = "0x1276FEC", VA = "0x1276FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x127724C", Offset = "0x127724C", VA = "0x127724C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x127730C", Offset = "0x127730C", VA = "0x127730C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200006A")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200006B")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400021E")]
		Uninitialized = -1,
		[Token(Token = "0x400021F")]
		NotEnabled,
		[Token(Token = "0x4000220")]
		Success,
		[Token(Token = "0x4000221")]
		StreamError,
		[Token(Token = "0x4000222")]
		ProcessError,
		[Token(Token = "0x4000223")]
		MaxStatValue
	}

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1279E78", Offset = "0x1279E78", VA = "0x1279E78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x127A0AC", Offset = "0x127A0AC", VA = "0x127A0AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x127A2B0", Offset = "0x127A2B0", VA = "0x127A2B0")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200006C")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200006D")]
	private enum Parameters
	{
		[Token(Token = "0x400022F")]
		P_GAIN,
		[Token(Token = "0x4000230")]
		P_USEINVSQR,
		[Token(Token = "0x4000231")]
		P_NEAR,
		[Token(Token = "0x4000232")]
		P_FAR,
		[Token(Token = "0x4000233")]
		P_RADIUS,
		[Token(Token = "0x4000234")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000235")]
		P_AMBISTAT,
		[Token(Token = "0x4000236")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000237")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000238")]
		P_SENDLEVEL,
		[Token(Token = "0x4000239")]
		P_NUM
	}

	[Token(Token = "0x4000224")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000038")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x127A4FC", Offset = "0x127A4FC", VA = "0x127A4FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x127A504", Offset = "0x127A504", VA = "0x127A504")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float Gain
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x127A510", Offset = "0x127A510", VA = "0x127A510")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x127A518", Offset = "0x127A518", VA = "0x127A518")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x127A59C", Offset = "0x127A59C", VA = "0x127A59C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x127A5A4", Offset = "0x127A5A4", VA = "0x127A5A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float Near
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x127A5B0", Offset = "0x127A5B0", VA = "0x127A5B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x127A5B8", Offset = "0x127A5B8", VA = "0x127A5B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float Far
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x127A640", Offset = "0x127A640", VA = "0x127A640")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x127A648", Offset = "0x127A648", VA = "0x127A648")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x127A6D0", Offset = "0x127A6D0", VA = "0x127A6D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x127A6D8", Offset = "0x127A6D8", VA = "0x127A6D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float ReverbSend
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0x127A760", Offset = "0x127A760", VA = "0x127A760")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x127A768", Offset = "0x127A768", VA = "0x127A768")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x127A7F0", Offset = "0x127A7F0", VA = "0x127A7F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x127A7F8", Offset = "0x127A7F8", VA = "0x127A7F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x127A324", Offset = "0x127A324", VA = "0x127A324")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x1058C48", Offset = "0x1058C48")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600020A")]
	[Address(RVA = "0x127A41C", Offset = "0x127A41C", VA = "0x127A41C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x127A804", Offset = "0x127A804", VA = "0x127A804")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x127A978", Offset = "0x127A978", VA = "0x127A978")]
	private void Start()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x127A97C", Offset = "0x127A97C", VA = "0x127A97C")]
	private void Update()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x127A870", Offset = "0x127A870", VA = "0x127A870")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x127AA44", Offset = "0x127AA44", VA = "0x127AA44")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x127AEA4", Offset = "0x127AEA4", VA = "0x127AEA4")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000221")]
	[Address(RVA = "0x127A39C", Offset = "0x127A39C", VA = "0x127A39C")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x127AF74", Offset = "0x127AF74", VA = "0x127AF74")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200006E")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400023B")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400023D")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x127AF94", Offset = "0x127AF94", VA = "0x127AF94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x127AFA0", Offset = "0x127AFA0", VA = "0x127AFA0")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000226")]
	[Address(RVA = "0x127B058", Offset = "0x127B058", VA = "0x127B058")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000227")]
	[Address(RVA = "0x127AFD8", Offset = "0x127AFD8", VA = "0x127AFD8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x127B0D8", Offset = "0x127B0D8", VA = "0x127B0D8")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x200006F")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000070")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000071")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000244")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000040")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x127DB54", Offset = "0x127DB54", VA = "0x127DB54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public string filePath
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x127DBE0", Offset = "0x127DBE0", VA = "0x127DBE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x127DC58", Offset = "0x127DC58", VA = "0x127DC58")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x127DDA0", Offset = "0x127DDA0", VA = "0x127DDA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x127DDA4", Offset = "0x127DDA4", VA = "0x127DDA4")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x127E304", Offset = "0x127E304", VA = "0x127E304")]
	private void Update()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x127E69C", Offset = "0x127E69C", VA = "0x127E69C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x127E7F8", Offset = "0x127E7F8", VA = "0x127E7F8")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x127EED0", Offset = "0x127EED0", VA = "0x127EED0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x127EF0C", Offset = "0x127EF0C", VA = "0x127EF0C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1280704", Offset = "0x1280704", VA = "0x1280704")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1280448", Offset = "0x1280448", VA = "0x1280448")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x127E13C", Offset = "0x127E13C", VA = "0x127E13C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x127DF70", Offset = "0x127DF70", VA = "0x127DF70")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1280D18", Offset = "0x1280D18", VA = "0x1280D18")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1281154", Offset = "0x1281154", VA = "0x1281154")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000072")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000073")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400024D")]
		Int8,
		[Token(Token = "0x400024E")]
		UInt8,
		[Token(Token = "0x400024F")]
		Int16,
		[Token(Token = "0x4000250")]
		UInt16,
		[Token(Token = "0x4000251")]
		Int32,
		[Token(Token = "0x4000252")]
		UInt32,
		[Token(Token = "0x4000253")]
		Int64,
		[Token(Token = "0x4000254")]
		UInt64,
		[Token(Token = "0x4000255")]
		Float16,
		[Token(Token = "0x4000256")]
		Float32,
		[Token(Token = "0x4000257")]
		Float64
	}

	[Token(Token = "0x2000074")]
	public class ClientType
	{
		[Token(Token = "0x4000258")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000259")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400025A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400025B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400025C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400025D")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400025E")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400025F")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000260")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000261")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000262")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000263")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000264")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000265")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000266")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x4000267")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2021_1 = 15u;

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x127B58C", Offset = "0x127B58C", VA = "0x127B58C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000075")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600023E")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600023F")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000240")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000241")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000242")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000243")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000244")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000245")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000246")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000247")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000248")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000249")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600024A")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600024B")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600024C")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000076")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000268")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000043")]
		private IntPtr context
		{
			[Token(Token = "0x600024D")]
			[Address(RVA = "0x127C1FC", Offset = "0x127C1FC", VA = "0x127C1FC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x127C260", Offset = "0x127C260", VA = "0x127C260")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x127C2F0", Offset = "0x127C2F0", VA = "0x127C2F0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x127C380", Offset = "0x127C380", VA = "0x127C380", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x127C3A4", Offset = "0x127C3A4", VA = "0x127C3A4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x127C434", Offset = "0x127C434", VA = "0x127C434", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x127C458", Offset = "0x127C458", VA = "0x127C458")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x127C4E4", Offset = "0x127C4E4", VA = "0x127C4E4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x127C508", Offset = "0x127C508", VA = "0x127C508")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x127C588", Offset = "0x127C588", VA = "0x127C588", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x127C590", Offset = "0x127C590", VA = "0x127C590")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x127C6B0", Offset = "0x127C6B0", VA = "0x127C6B0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x127C7A8", Offset = "0x127C7A8", VA = "0x127C7A8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x127C840", Offset = "0x127C840", VA = "0x127C840", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x127C84C", Offset = "0x127C84C", VA = "0x127C84C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x127C978", Offset = "0x127C978", VA = "0x127C978", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x127C984", Offset = "0x127C984", VA = "0x127C984")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x127CA30", Offset = "0x127CA30", VA = "0x127CA30", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x127CA3C", Offset = "0x127CA3C", VA = "0x127CA3C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x127CAE8", Offset = "0x127CAE8", VA = "0x127CAE8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x127CAF4", Offset = "0x127CAF4", VA = "0x127CAF4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x127CBA0", Offset = "0x127CBA0", VA = "0x127CBA0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x127CBAC", Offset = "0x127CBAC", VA = "0x127CBAC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x127CC38", Offset = "0x127CC38", VA = "0x127CC38", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x127CC5C", Offset = "0x127CC5C", VA = "0x127CC5C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x127CCDC", Offset = "0x127CCDC", VA = "0x127CCDC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x127CCE4", Offset = "0x127CCE4", VA = "0x127CCE4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x127CD8C", Offset = "0x127CD8C", VA = "0x127CD8C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x127CD98", Offset = "0x127CD98", VA = "0x127CD98")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x127CE40", Offset = "0x127CE40", VA = "0x127CE40", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600026B")]
		[Address(RVA = "0x127CE50", Offset = "0x127CE50", VA = "0x127CE50")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x127CEE0", Offset = "0x127CEE0", VA = "0x127CEE0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x127B538", Offset = "0x127B538", VA = "0x127B538")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000077")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400026A")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000044")]
		private IntPtr context
		{
			[Token(Token = "0x600026E")]
			[Address(RVA = "0x127CEEC", Offset = "0x127CEEC", VA = "0x127CEEC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x127B380", Offset = "0x127B380", VA = "0x127B380")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000270")]
		[Address(RVA = "0x127CF50", Offset = "0x127CF50", VA = "0x127CF50")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x127CFE0", Offset = "0x127CFE0", VA = "0x127CFE0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x127D004", Offset = "0x127D004", VA = "0x127D004")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x127D094", Offset = "0x127D094", VA = "0x127D094", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x127D0B8", Offset = "0x127D0B8", VA = "0x127D0B8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x127D148", Offset = "0x127D148", VA = "0x127D148", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x127D16C", Offset = "0x127D16C", VA = "0x127D16C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000277")]
		[Address(RVA = "0x127D1EC", Offset = "0x127D1EC", VA = "0x127D1EC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x127D1F4", Offset = "0x127D1F4", VA = "0x127D1F4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000279")]
		[Address(RVA = "0x127D314", Offset = "0x127D314", VA = "0x127D314", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x127D40C", Offset = "0x127D40C", VA = "0x127D40C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x127D4A4", Offset = "0x127D4A4", VA = "0x127D4A4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600027C")]
		[Address(RVA = "0x127D4B0", Offset = "0x127D4B0", VA = "0x127D4B0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x127D5DC", Offset = "0x127D5DC", VA = "0x127D5DC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x127D5E8", Offset = "0x127D5E8", VA = "0x127D5E8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x127D694", Offset = "0x127D694", VA = "0x127D694", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x127D6A0", Offset = "0x127D6A0", VA = "0x127D6A0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x127D74C", Offset = "0x127D74C", VA = "0x127D74C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x127D758", Offset = "0x127D758", VA = "0x127D758")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x127D804", Offset = "0x127D804", VA = "0x127D804", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x127D810", Offset = "0x127D810", VA = "0x127D810")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x127D8A0", Offset = "0x127D8A0", VA = "0x127D8A0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x127D8C4", Offset = "0x127D8C4", VA = "0x127D8C4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x127D944", Offset = "0x127D944", VA = "0x127D944", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x127D94C", Offset = "0x127D94C", VA = "0x127D94C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x127D9F4", Offset = "0x127D9F4", VA = "0x127D9F4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x127DA00", Offset = "0x127DA00", VA = "0x127DA00")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x127DAA8", Offset = "0x127DAA8", VA = "0x127DAA8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x127DAB8", Offset = "0x127DAB8", VA = "0x127DAB8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x127DB48", Offset = "0x127DB48", VA = "0x127DB48", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x127B410", Offset = "0x127B410", VA = "0x127B410")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000078")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400026C")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000045")]
		private IntPtr context
		{
			[Token(Token = "0x600028F")]
			[Address(RVA = "0x127B594", Offset = "0x127B594", VA = "0x127B594")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000290")]
		[Address(RVA = "0x127B45C", Offset = "0x127B45C", VA = "0x127B45C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000291")]
		[Address(RVA = "0x127B5F8", Offset = "0x127B5F8", VA = "0x127B5F8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x127B688", Offset = "0x127B688", VA = "0x127B688", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x127B6AC", Offset = "0x127B6AC", VA = "0x127B6AC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x127B73C", Offset = "0x127B73C", VA = "0x127B73C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x127B760", Offset = "0x127B760", VA = "0x127B760")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x127B7F0", Offset = "0x127B7F0", VA = "0x127B7F0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000297")]
		[Address(RVA = "0x127B814", Offset = "0x127B814", VA = "0x127B814")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x127B894", Offset = "0x127B894", VA = "0x127B894", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000299")]
		[Address(RVA = "0x127B89C", Offset = "0x127B89C", VA = "0x127B89C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x127B9BC", Offset = "0x127B9BC", VA = "0x127B9BC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x127BAB4", Offset = "0x127BAB4", VA = "0x127BAB4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x127BB4C", Offset = "0x127BB4C", VA = "0x127BB4C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x127BB58", Offset = "0x127BB58", VA = "0x127BB58")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x127BC84", Offset = "0x127BC84", VA = "0x127BC84", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x127BC90", Offset = "0x127BC90", VA = "0x127BC90")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x127BD3C", Offset = "0x127BD3C", VA = "0x127BD3C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x127BD48", Offset = "0x127BD48", VA = "0x127BD48")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x127BDF4", Offset = "0x127BDF4", VA = "0x127BDF4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x127BE00", Offset = "0x127BE00", VA = "0x127BE00")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x127BEAC", Offset = "0x127BEAC", VA = "0x127BEAC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x127BEB8", Offset = "0x127BEB8", VA = "0x127BEB8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x127BF48", Offset = "0x127BF48", VA = "0x127BF48", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x127BF6C", Offset = "0x127BF6C", VA = "0x127BF6C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x127BFEC", Offset = "0x127BFEC", VA = "0x127BFEC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x127BFF4", Offset = "0x127BFF4", VA = "0x127BFF4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x127C09C", Offset = "0x127C09C", VA = "0x127C09C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x127C0A8", Offset = "0x127C0A8", VA = "0x127C0A8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x127C150", Offset = "0x127C150", VA = "0x127C150", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x127C160", Offset = "0x127C160", VA = "0x127C160")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x127C1F0", Offset = "0x127C1F0", VA = "0x127C1F0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x127B4EC", Offset = "0x127B4EC", VA = "0x127B4EC")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000042")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x127B0E8", Offset = "0x127B0E8", VA = "0x127B0E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x127B158", Offset = "0x127B158", VA = "0x127B158")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x127B584", Offset = "0x127B584", VA = "0x127B584")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000079")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200007A")]
	public enum Preset
	{
		[Token(Token = "0x4000274")]
		Custom,
		[Token(Token = "0x4000275")]
		AcousticTile,
		[Token(Token = "0x4000276")]
		Brick,
		[Token(Token = "0x4000277")]
		BrickPainted,
		[Token(Token = "0x4000278")]
		Carpet,
		[Token(Token = "0x4000279")]
		CarpetHeavy,
		[Token(Token = "0x400027A")]
		CarpetHeavyPadded,
		[Token(Token = "0x400027B")]
		CeramicTile,
		[Token(Token = "0x400027C")]
		Concrete,
		[Token(Token = "0x400027D")]
		ConcreteRough,
		[Token(Token = "0x400027E")]
		ConcreteBlock,
		[Token(Token = "0x400027F")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000280")]
		Curtain,
		[Token(Token = "0x4000281")]
		Foliage,
		[Token(Token = "0x4000282")]
		Glass,
		[Token(Token = "0x4000283")]
		GlassHeavy,
		[Token(Token = "0x4000284")]
		Grass,
		[Token(Token = "0x4000285")]
		Gravel,
		[Token(Token = "0x4000286")]
		GypsumBoard,
		[Token(Token = "0x4000287")]
		PlasterOnBrick,
		[Token(Token = "0x4000288")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000289")]
		Soil,
		[Token(Token = "0x400028A")]
		SoundProof,
		[Token(Token = "0x400028B")]
		Snow,
		[Token(Token = "0x400028C")]
		Steel,
		[Token(Token = "0x400028D")]
		Water,
		[Token(Token = "0x400028E")]
		WoodThin,
		[Token(Token = "0x400028F")]
		WoodThick,
		[Token(Token = "0x4000290")]
		WoodFloor,
		[Token(Token = "0x4000291")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200007B")]
	public sealed class Point
	{
		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1591218", Offset = "0x1591218", VA = "0x1591218")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x1591250", Offset = "0x1591250", VA = "0x1591250")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x15912C0", Offset = "0x15912C0", VA = "0x15912C0")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200007C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x104B718", Offset = "0x104B718")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200007D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B750", Offset = "0x104B750")]
		private sealed class <>c
		{
			[Token(Token = "0x4000296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60002DC")]
			[Address(RVA = "0x1591790", Offset = "0x1591790", VA = "0x1591790")]
			public <>c()
			{
			}

			[Token(Token = "0x60002DD")]
			[Address(RVA = "0x1591798", Offset = "0x1591798", VA = "0x1591798")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60002DE")]
			[Address(RVA = "0x15917B0", Offset = "0x15917B0", VA = "0x15917B0")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000047")]
		public float Item
		{
			[Token(Token = "0x60002D9")]
			[Address(RVA = "0x15912F8", Offset = "0x15912F8", VA = "0x15912F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x15916B4", Offset = "0x15916B4", VA = "0x15916B4")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E3E0", Offset = "0x104E3E0")]
	public Spectrum absorption;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E418", Offset = "0x104E418")]
	public Spectrum transmission;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E450", Offset = "0x104E450")]
	public Spectrum scattering;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000046")]
	public Preset preset
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x128122C", Offset = "0x128122C", VA = "0x128122C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x1281234", Offset = "0x1281234", VA = "0x1281234")]
		set
		{
		}
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x128125C", Offset = "0x128125C", VA = "0x128125C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1280BAC", Offset = "0x1280BAC", VA = "0x1280BAC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x128180C", Offset = "0x128180C", VA = "0x128180C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1281810", Offset = "0x1281810", VA = "0x1281810")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1281260", Offset = "0x1281260", VA = "0x1281260")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1280570", Offset = "0x1280570", VA = "0x1280570")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x12818F4", Offset = "0x12818F4", VA = "0x12818F4")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1281D94", Offset = "0x1281D94", VA = "0x1281D94")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1282238", Offset = "0x1282238", VA = "0x1282238")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x12826D8", Offset = "0x12826D8", VA = "0x12826D8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1282B8C", Offset = "0x1282B8C", VA = "0x1282B8C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x128302C", Offset = "0x128302C", VA = "0x128302C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x12834CC", Offset = "0x12834CC", VA = "0x12834CC")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1283974", Offset = "0x1283974", VA = "0x1283974")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1283E1C", Offset = "0x1283E1C", VA = "0x1283E1C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x12842C8", Offset = "0x12842C8", VA = "0x12842C8")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1284770", Offset = "0x1284770", VA = "0x1284770")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1284C20", Offset = "0x1284C20", VA = "0x1284C20")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x12850C0", Offset = "0x12850C0", VA = "0x12850C0")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x128556C", Offset = "0x128556C", VA = "0x128556C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x12859FC", Offset = "0x12859FC", VA = "0x12859FC")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1285E98", Offset = "0x1285E98", VA = "0x1285E98")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1286220", Offset = "0x1286220", VA = "0x1286220")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x12865A0", Offset = "0x12865A0", VA = "0x12865A0")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1286A50", Offset = "0x1286A50", VA = "0x1286A50")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1286EFC", Offset = "0x1286EFC", VA = "0x1286EFC")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x12873A0", Offset = "0x12873A0", VA = "0x12873A0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x128772C", Offset = "0x128772C", VA = "0x128772C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1287890", Offset = "0x1287890", VA = "0x1287890")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1287C0C", Offset = "0x1287C0C", VA = "0x1287C0C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x128809C", Offset = "0x128809C", VA = "0x128809C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1288540", Offset = "0x1288540", VA = "0x1288540")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x12889D8", Offset = "0x12889D8", VA = "0x12889D8")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1288E78", Offset = "0x1288E78", VA = "0x1288E78")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1289320", Offset = "0x1289320", VA = "0x1289320")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x12897C4", Offset = "0x12897C4", VA = "0x12897C4")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200007E")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x15917C8", Offset = "0x15917C8", VA = "0x15917C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x159189C", Offset = "0x159189C", VA = "0x159189C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200007F")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000048")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1591E58", Offset = "0x1591E58", VA = "0x1591E58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1591F6C", Offset = "0x1591F6C", VA = "0x1591F6C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000080")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400029C")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1591F7C", Offset = "0x1591F7C", VA = "0x1591F7C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1592014", Offset = "0x1592014", VA = "0x1592014")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1592120", Offset = "0x1592120", VA = "0x1592120")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1592124", Offset = "0x1592124", VA = "0x1592124")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1592128", Offset = "0x1592128", VA = "0x1592128")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000081")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40002AB")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40002B1")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x11CED40", Offset = "0x11CED40", VA = "0x11CED40")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x11CEB70", Offset = "0x11CEB70", VA = "0x11CEB70")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1058C5C", Offset = "0x1058C5C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x11CED78", Offset = "0x11CED78", VA = "0x11CED78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x11CEEAC", Offset = "0x11CEEAC", VA = "0x11CEEAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x11CEFA0", Offset = "0x11CEFA0", VA = "0x11CEFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x11CF958", Offset = "0x11CF958", VA = "0x11CF958")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x11CEE18", Offset = "0x11CEE18", VA = "0x11CEE18")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x11CEF10", Offset = "0x11CEF10", VA = "0x11CEF10")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x11CF6C0", Offset = "0x11CF6C0", VA = "0x11CF6C0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x11CF740", Offset = "0x11CF740", VA = "0x11CF740")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x11CF7C8", Offset = "0x11CF7C8", VA = "0x11CF7C8")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x11CF850", Offset = "0x11CF850", VA = "0x11CF850")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x11CF8D0", Offset = "0x11CF8D0", VA = "0x11CF8D0")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x11D0790", Offset = "0x11D0790", VA = "0x11D0790")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x11D0838", Offset = "0x11D0838", VA = "0x11D0838")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x11D08E0", Offset = "0x11D08E0", VA = "0x11D08E0")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000083")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000084")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x15918AC", Offset = "0x15918AC", VA = "0x15918AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x15918B0", Offset = "0x15918B0", VA = "0x15918B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x15918B4", Offset = "0x15918B4", VA = "0x15918B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1591A1C", Offset = "0x1591A1C", VA = "0x1591A1C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1591900", Offset = "0x1591900", VA = "0x1591900")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1591990", Offset = "0x1591990", VA = "0x1591990")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1591A68", Offset = "0x1591A68", VA = "0x1591A68")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1591B00", Offset = "0x1591B00", VA = "0x1591B00")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1591C68", Offset = "0x1591C68", VA = "0x1591C68")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1591DD0", Offset = "0x1591DD0", VA = "0x1591DD0")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000085")]
public class OculusSpatializerFMOD : MonoBehaviour
{
	[Token(Token = "0x2000086")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40002C7")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40002CD")]
	private const string strOSP = "OculusSpatializerFMOD";

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x11CC910", Offset = "0x11CC910", VA = "0x11CC910")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x11CC948", Offset = "0x11CC948", VA = "0x11CC948")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x11CCB18", Offset = "0x11CCB18", VA = "0x11CCB18")]
	private void Start()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x11CCB94", Offset = "0x11CCB94", VA = "0x11CCB94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x11CCC88", Offset = "0x11CCC88", VA = "0x11CCC88")]
	private void Update()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x11CD5E4", Offset = "0x11CD5E4", VA = "0x11CD5E4")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600030E")]
	[Address(RVA = "0x11CCBF8", Offset = "0x11CCBF8", VA = "0x11CCBF8")]
	private static extern int OSP_FMOD_AssignRayCastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600030F")]
	[Address(RVA = "0x11CD34C", Offset = "0x11CD34C", VA = "0x11CD34C")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000310")]
	[Address(RVA = "0x11CD3CC", Offset = "0x11CD3CC", VA = "0x11CD3CC")]
	private static extern int OSP_FMOD_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000311")]
	[Address(RVA = "0x11CD454", Offset = "0x11CD454", VA = "0x11CD454")]
	private static extern int OSP_FMOD_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000312")]
	[Address(RVA = "0x11CD4DC", Offset = "0x11CD4DC", VA = "0x11CD4DC")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000313")]
	[Address(RVA = "0x11CD55C", Offset = "0x11CD55C", VA = "0x11CD55C")]
	private static extern int OSP_FMOD_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000314")]
	[Address(RVA = "0x11CE41C", Offset = "0x11CE41C", VA = "0x11CE41C")]
	private static extern int OSP_FMOD_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000315")]
	[Address(RVA = "0x11CE4C4", Offset = "0x11CE4C4", VA = "0x11CE4C4")]
	private static extern int OSP_FMOD_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x11CE56C", Offset = "0x11CE56C", VA = "0x11CE56C")]
	public OculusSpatializerFMOD()
	{
	}
}
[Token(Token = "0x2000087")]
public class ParticleBySize : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Particle;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Multiplicator;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Maximum;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmissionModule _emission;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x11D2B30", Offset = "0x11D2B30", VA = "0x11D2B30")]
	private void Start()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x11D2B68", Offset = "0x11D2B68", VA = "0x11D2B68")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x11D2C6C", Offset = "0x11D2C6C", VA = "0x11D2C6C")]
	public ParticleBySize()
	{
	}
}
[Token(Token = "0x2000088")]
public class AttackAndMoveBehaviour : AttackBehaviour
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private int moveRadius;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float executionIteration;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _curExecutes;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _canMove;

	[Token(Token = "0x17000049")]
	public new IPathfinding pathfinding
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x132782C", Offset = "0x132782C", VA = "0x132782C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x13278BC", Offset = "0x13278BC", VA = "0x13278BC", Slot = "21")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x13278C4", Offset = "0x13278C4", VA = "0x13278C4")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x13278EC", Offset = "0x13278EC", VA = "0x13278EC", Slot = "25")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1327B84", Offset = "0x1327B84", VA = "0x1327B84")]
	public AttackAndMoveBehaviour()
	{
	}
}
[Token(Token = "0x2000089")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationOffset;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aimOrigin;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxAngle;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1274614", Offset = "0x1274614", VA = "0x1274614")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x127481C", Offset = "0x127481C", VA = "0x127481C")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x200008A")]
public class AdaptHandMeshToPlayerClass : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x132664C", Offset = "0x132664C", VA = "0x132664C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x13266A4", Offset = "0x13266A4", VA = "0x13266A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1326814", Offset = "0x1326814", VA = "0x1326814")]
	public AdaptHandMeshToPlayerClass()
	{
	}
}
[Token(Token = "0x200008B")]
public class AmmunitionAnimation : MonoBehaviour
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon Weapon;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator Animator;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x132747C", Offset = "0x132747C", VA = "0x132747C")]
	private void Start()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1327554", Offset = "0x1327554", VA = "0x1327554")]
	private void Update()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x13276DC", Offset = "0x13276DC", VA = "0x13276DC")]
	private void OnShotFired(WeaponBullet bullet)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x13277A0", Offset = "0x13277A0", VA = "0x13277A0")]
	private void OnReload()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1327824", Offset = "0x1327824", VA = "0x1327824")]
	public AmmunitionAnimation()
	{
	}
}
[Token(Token = "0x200008C")]
public class FMODListenerPosition : MonoBehaviour
{
	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1339B28", Offset = "0x1339B28", VA = "0x1339B28")]
	private void Start()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1339BD0", Offset = "0x1339BD0", VA = "0x1339BD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1339C78", Offset = "0x1339C78", VA = "0x1339C78")]
	public FMODListenerPosition()
	{
	}
}
[Token(Token = "0x200008D")]
public class MainFMODListener : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioListener listener;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainFMODListener instance;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1274888", Offset = "0x1274888", VA = "0x1274888")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x12748E0", Offset = "0x12748E0", VA = "0x12748E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1274970", Offset = "0x1274970", VA = "0x1274970")]
	public void Activate(bool val)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1274990", Offset = "0x1274990", VA = "0x1274990")]
	public MainFMODListener()
	{
	}
}
[Token(Token = "0x200008E")]
public class Walkman : MonoBehaviour
{
	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1195834", Offset = "0x1195834", VA = "0x1195834")]
	public Walkman()
	{
	}
}
[Token(Token = "0x200008F")]
public class BlobShadow : MonoBehaviour
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104E4C8", Offset = "0x104E4C8")]
	public Transform Model;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnitHealth Health;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask layer;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104E500", Offset = "0x104E500")]
	public float MaxDistance;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RaycastHit hit;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1327BA0", Offset = "0x1327BA0", VA = "0x1327BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1327C84", Offset = "0x1327C84", VA = "0x1327C84")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1327E58", Offset = "0x1327E58", VA = "0x1327E58")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1327ED4", Offset = "0x1327ED4", VA = "0x1327ED4")]
	public BlobShadow()
	{
	}
}
[Token(Token = "0x2000090")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x132869C", Offset = "0x132869C", VA = "0x132869C")]
	private void Update()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x13287A8", Offset = "0x13287A8", VA = "0x13287A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1328824", Offset = "0x1328824", VA = "0x1328824")]
	public Bullet()
	{
	}
}
[Token(Token = "0x2000091")]
public class BulletLine : MonoBehaviour
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer Line;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DelayPerMeter;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinLength;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDelay;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float delay;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startTime;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1328834", Offset = "0x1328834", VA = "0x1328834")]
	public void Start()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1328944", Offset = "0x1328944", VA = "0x1328944")]
	private void Update()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1328AD8", Offset = "0x1328AD8", VA = "0x1328AD8")]
	public BulletLine()
	{
	}
}
[Token(Token = "0x2000092")]
public class CampaignSettings : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CampaignSettings Instance;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1328C5C", Offset = "0x1328C5C", VA = "0x1328C5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1328CB0", Offset = "0x1328CB0", VA = "0x1328CB0")]
	public CampaignSettings()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104B760", Offset = "0x104B760")]
public class DisplayData : SerializedScriptableObject
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104E538", Offset = "0x104E538")]
	public EnumValueData Settings;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104E548", Offset = "0x104E548")]
	public List<List<WeaponElement>> Elements;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x132DE4C", Offset = "0x132DE4C", VA = "0x132DE4C")]
	public DisplayData()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104B7AC", Offset = "0x104B7AC")]
public class MaterialData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x1700004A")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x127547C", Offset = "0x127547C", VA = "0x127547C", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1275484", Offset = "0x1275484", VA = "0x1275484", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x127548C", Offset = "0x127548C", VA = "0x127548C", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1275494", Offset = "0x1275494", VA = "0x1275494", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x127549C", Offset = "0x127549C", VA = "0x127549C", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x12754A4", Offset = "0x12754A4", VA = "0x12754A4", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x127553C", Offset = "0x127553C", VA = "0x127553C", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1275540", Offset = "0x1275540", VA = "0x1275540")]
	public MaterialData()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104B7F8", Offset = "0x104B7F8")]
public class ParticleData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Prefab;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x1700004B")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x11D2C80", Offset = "0x11D2C80", VA = "0x11D2C80", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x11D2C88", Offset = "0x11D2C88", VA = "0x11D2C88", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x11D2C90", Offset = "0x11D2C90", VA = "0x11D2C90", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x11D2C98", Offset = "0x11D2C98", VA = "0x11D2C98", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x11D2CB4", Offset = "0x11D2CB4", VA = "0x11D2CB4", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x11D2CBC", Offset = "0x11D2CBC", VA = "0x11D2CBC", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x11D2CC4", Offset = "0x11D2CC4", VA = "0x11D2CC4", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x11D2CCC", Offset = "0x11D2CCC", VA = "0x11D2CCC")]
	public ParticleData()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104B844", Offset = "0x104B844")]
public class PopupTextData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIPopupText Prefab;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeTime;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Gradient Fade;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve Scale;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool Bounce;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Speed;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x1700004C")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x10E7E10", Offset = "0x10E7E10", VA = "0x10E7E10", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x10E7E18", Offset = "0x10E7E18", VA = "0x10E7E18", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x10E7E20", Offset = "0x10E7E20", VA = "0x10E7E20", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x10E7E28", Offset = "0x10E7E28", VA = "0x10E7E28", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x10E7E44", Offset = "0x10E7E44", VA = "0x10E7E44", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x10E7E4C", Offset = "0x10E7E4C", VA = "0x10E7E4C", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x10E7E54", Offset = "0x10E7E54", VA = "0x10E7E54", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x10E7E5C", Offset = "0x10E7E5C", VA = "0x10E7E5C")]
	public PopupTextData()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104B880", Offset = "0x104B880")]
public class SkyData : MaterialData
{
	[Token(Token = "0x600035B")]
	[Address(RVA = "0x10EBC78", Offset = "0x10EBC78", VA = "0x10EBC78")]
	public SkyData()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104B8CC", Offset = "0x104B8CC")]
public class UIBackgroundData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient Color;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite Image;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Duration;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool FadeOutMusic;

	[Token(Token = "0x1700004D")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x118B3C4", Offset = "0x118B3C4", VA = "0x118B3C4", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x118B3CC", Offset = "0x118B3CC", VA = "0x118B3CC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x118B3D4", Offset = "0x118B3D4", VA = "0x118B3D4", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x118B3DC", Offset = "0x118B3DC", VA = "0x118B3DC", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x118B3E4", Offset = "0x118B3E4", VA = "0x118B3E4", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x118B3EC", Offset = "0x118B3EC", VA = "0x118B3EC", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x118B480", Offset = "0x118B480", VA = "0x118B480", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x118B484", Offset = "0x118B484", VA = "0x118B484")]
	public UIBackgroundData()
	{
	}
}
[Token(Token = "0x2000099")]
public class DebugLineStrength : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> Materials;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DefaultLineWidth;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DefaultMaxLineWidth;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x132B3C0", Offset = "0x132B3C0", VA = "0x132B3C0")]
	public void Change(float strength)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x132B510", Offset = "0x132B510", VA = "0x132B510")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x132B64C", Offset = "0x132B64C", VA = "0x132B64C")]
	public DebugLineStrength()
	{
	}
}
[Token(Token = "0x200009A")]
public class DebugShowFps : MonoBehaviour
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup inputRight;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text label;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int fps;

	[Token(Token = "0x4000305")]
	private const float updateInterval = 0.5f;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastUpdate;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showMenu;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frames;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x132B6C8", Offset = "0x132B6C8", VA = "0x132B6C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x132B72C", Offset = "0x132B72C", VA = "0x132B72C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x132B878", Offset = "0x132B878", VA = "0x132B878")]
	public DebugShowFps()
	{
	}
}
[Token(Token = "0x200009B")]
public class DistrictTracker : SerializedMonoBehaviour
{
	[Token(Token = "0x200009C")]
	public class DistrictInfo
	{
		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetDistrict District;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BooleanValueData Value;

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x132E118", Offset = "0x132E118", VA = "0x132E118")]
		public DistrictInfo()
		{
		}
	}

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0x104E5C0", Offset = "0x104E5C0")]
	[InlineProperty]
	public List<DistrictInfo> Districts;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x132DEBC", Offset = "0x132DEBC", VA = "0x132DEBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x132E0A8", Offset = "0x132E0A8", VA = "0x132E0A8")]
	public DistrictTracker()
	{
	}
}
[Token(Token = "0x200009D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B918", Offset = "0x104B918")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B918", Offset = "0x104B918")]
public class PlayParticleSystem : SerializedMonoBehaviour
{
	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B9A4", Offset = "0x104B9A4")]
	private sealed class <StartEventsAndTimerAfterPlaytime>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayParticleSystem <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000378")]
			[Address(RVA = "0x10E7620", Offset = "0x10E7620", VA = "0x10E7620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600037A")]
			[Address(RVA = "0x10E7688", Offset = "0x10E7688", VA = "0x10E7688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x10E7010", Offset = "0x10E7010", VA = "0x10E7010")]
		[DebuggerHidden]
		public <StartEventsAndTimerAfterPlaytime>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x10E7554", Offset = "0x10E7554", VA = "0x10E7554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x10E7558", Offset = "0x10E7558", VA = "0x10E7558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x10E7628", Offset = "0x10E7628", VA = "0x10E7628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104B9B4", Offset = "0x104B9B4")]
	private sealed class <PlayParticleSystemAfterSeconds>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayParticleSystem <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600037E")]
			[Address(RVA = "0x10E74E4", Offset = "0x10E74E4", VA = "0x10E74E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000380")]
			[Address(RVA = "0x10E754C", Offset = "0x10E754C", VA = "0x10E754C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x10E710C", Offset = "0x10E710C", VA = "0x10E710C")]
		[DebuggerHidden]
		public <PlayParticleSystemAfterSeconds>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x10E737C", Offset = "0x10E737C", VA = "0x10E737C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x10E7380", Offset = "0x10E7380", VA = "0x10E7380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x10E74EC", Offset = "0x10E74EC", VA = "0x10E74EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OcclusionProp _occlusionProp;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[InlineProperty]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104E604", Offset = "0x104E604")]
	public List<IState> particleStateEvents;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxSliderAttribute", RVA = "0x104E650", Offset = "0x104E650")]
	private Vector2 waitTillPlayTimeSec;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _curWaitTillPlayTime;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x104E694", Offset = "0x104E694")]
	[SerializeField]
	private int _loopPlay;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _PlayInfinit;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x10E6DD0", Offset = "0x10E6DD0", VA = "0x10E6DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10E6EA8", Offset = "0x10E6EA8", VA = "0x10E6EA8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1058CC0", Offset = "0x1058CC0")]
	private void StartParticleSystem(bool enable)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x10E6FA0", Offset = "0x10E6FA0", VA = "0x10E6FA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058CD0", Offset = "0x1058CD0")]
	private IEnumerator StartEventsAndTimerAfterPlaytime()
	{
		return null;
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x10E703C", Offset = "0x10E703C", VA = "0x10E703C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10E709C", Offset = "0x10E709C", VA = "0x10E709C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058D34", Offset = "0x1058D34")]
	private IEnumerator PlayParticleSystemAfterSeconds()
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x10E7138", Offset = "0x10E7138", VA = "0x10E7138")]
	public PlayParticleSystem()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x10E71DC", Offset = "0x10E71DC", VA = "0x10E71DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058D98", Offset = "0x1058D98")]
	private void <StartParticleSystem>b__8_0(IState parteEvent)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x10E72AC", Offset = "0x10E72AC", VA = "0x10E72AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058DA8", Offset = "0x1058DA8")]
	private void <PlayParticleSystemAfterSeconds>b__11_0(IState parteEvent)
	{
	}
}
[Token(Token = "0x20000A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B9C4", Offset = "0x104B9C4")]
public class LinkToAimScript : MonoBehaviour
{
	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AimAtTransform AimAtTransform;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1271AEC", Offset = "0x1271AEC", VA = "0x1271AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1271B84", Offset = "0x1271B84", VA = "0x1271B84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1271B88", Offset = "0x1271B88", VA = "0x1271B88")]
	public LinkToAimScript()
	{
	}
}
[Token(Token = "0x20000A1")]
public class GameObjectSwitch : MonoBehaviour
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Weapon usedWeapon;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool state;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float onTime;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offTime;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float duration;

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x133EA84", Offset = "0x133EA84", VA = "0x133EA84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x133EA8C", Offset = "0x133EA8C", VA = "0x133EA8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x133EB64", Offset = "0x133EB64", VA = "0x133EB64")]
	public GameObjectSwitch()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BA28", Offset = "0x104BA28")]
public class HealthStageBehaviour : SerializedMonoBehaviour
{
	[Token(Token = "0x20000A3")]
	public class HealthPartAction
	{
		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Active;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104E724", Offset = "0x104E724")]
		public int Percentage;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ActionAtHealthPoints;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<IAction> HealthActions;

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x134765C", Offset = "0x134765C", VA = "0x134765C")]
		public HealthPartAction()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BA8C", Offset = "0x104BA8C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<HealthPartAction> <>9__4_1;

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x134762C", Offset = "0x134762C", VA = "0x134762C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x1347634", Offset = "0x1347634", VA = "0x1347634")]
		internal int <OnValidate>b__4_1(HealthPartAction a1, HealthPartAction a2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104E6E8", Offset = "0x104E6E8")]
	public List<HealthPartAction> ActionsAtHealthPointsList;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int index;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnitHealth _unitHealth;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1346FE8", Offset = "0x1346FE8", VA = "0x1346FE8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x134714C", Offset = "0x134714C", VA = "0x134714C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x13472D4", Offset = "0x13472D4", VA = "0x13472D4")]
	public void OnHealthLost(float damage, AttackInfo attack)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1347388", Offset = "0x1347388", VA = "0x1347388")]
	private void InvokeActionsAndGotToNextStage()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1347444", Offset = "0x1347444", VA = "0x1347444")]
	public void GoToNextStage()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1347244", Offset = "0x1347244", VA = "0x1347244")]
	private void SetActive(bool active)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1347518", Offset = "0x1347518", VA = "0x1347518")]
	public HealthStageBehaviour()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1347588", Offset = "0x1347588", VA = "0x1347588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1058E58", Offset = "0x1058E58")]
	private void <OnValidate>b__4_0(HealthPartAction partActions)
	{
	}
}
[Token(Token = "0x20000A5")]
public class MiningBotAttack : MonoBehaviour
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIBehaviourManager miningBotAI;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetBehaviourType patrolBehav;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetBehaviourType moveBehav;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DamageOnContact miningBotDamage;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1276EDC", Offset = "0x1276EDC", VA = "0x1276EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1276EF8", Offset = "0x1276EF8", VA = "0x1276EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1276FE4", Offset = "0x1276FE4", VA = "0x1276FE4")]
	public MiningBotAttack()
	{
	}
}
[Token(Token = "0x20000A6")]
public class SpiderWarningSphere : MonoBehaviour
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Peacemaker.ExplosionAttack attack;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 idleSize;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 activatedSize;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blinkInterval;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1183368", Offset = "0x1183368", VA = "0x1183368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1183524", Offset = "0x1183524", VA = "0x1183524")]
	public SpiderWarningSphere()
	{
	}
}
[Token(Token = "0x20000A7")]
public class StunEnemyOnHit : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnitHealthPart healthPart;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GEUnit unit;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hit;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float stunDuration;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x11835BC", Offset = "0x11835BC", VA = "0x11835BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1183678", Offset = "0x1183678", VA = "0x1183678")]
	private void Hp_OnHealthLost(UnitHealthPart arg1, float arg2)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x11836C0", Offset = "0x11836C0", VA = "0x11836C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1183748", Offset = "0x1183748", VA = "0x1183748")]
	public StunEnemyOnHit()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ShootingRangeSelection : MonoBehaviour
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool currentlySelected;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject selectedPrefab;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x10EA3D4", Offset = "0x10EA3D4", VA = "0x10EA3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x10EA3D8", Offset = "0x10EA3D8", VA = "0x10EA3D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x10EA3E4", Offset = "0x10EA3E4", VA = "0x10EA3E4")]
	public ShootingRangeSelection()
	{
	}
}
[Token(Token = "0x20000A9")]
public class OnTeleportTriggeredEvent : GenericEventEmitter
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104E740", Offset = "0x104E740")]
	[InlineProperty]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104E740", Offset = "0x104E740")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104E740", Offset = "0x104E740")]
	public List<IAction> Actions;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104E7D4", Offset = "0x104E7D4")]
	[InlineProperty]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104E7D4", Offset = "0x104E7D4")]
	public List<ITriggerAction> TriggerActions;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104E844", Offset = "0x104E844")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104E844", Offset = "0x104E844")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104E844", Offset = "0x104E844")]
	[InlineProperty]
	public List<IUnitAction> EnemyActions;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnTeleportTriggeredEvent teleportDestination;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxAngle;

	[Token(Token = "0x400033D")]
	private const float minTriggerInterval = 0.25f;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float lastTeleportTrigger;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Player currentPlayer;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Collider currentCollider;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x11D12B8", Offset = "0x11D12B8", VA = "0x11D12B8", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x11D12E8", Offset = "0x11D12E8", VA = "0x11D12E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x11D13F0", Offset = "0x11D13F0", VA = "0x11D13F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x11D190C", Offset = "0x11D190C", VA = "0x11D190C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x11D1B2C", Offset = "0x11D1B2C", VA = "0x11D1B2C")]
	public OnTeleportTriggeredEvent()
	{
	}
}
[Token(Token = "0x20000AA")]
public class SetBoolOnReachDistrict : MonoBehaviour
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BooleanValueData _value;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AssetDistrict _assetDistrict;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BooleanValueData LocalBooleanValueData;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BooleanValueData usedShortcut;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x10EA050", Offset = "0x10EA050", VA = "0x10EA050")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x10EA238", Offset = "0x10EA238", VA = "0x10EA238")]
	public SetBoolOnReachDistrict()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ConveyorBelt : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Mesh;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MoveSize;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Force;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<Rigidbody> movableObjects;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _rig;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1329E00", Offset = "0x1329E00", VA = "0x1329E00")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1329EC4", Offset = "0x1329EC4", VA = "0x1329EC4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1329F88", Offset = "0x1329F88", VA = "0x1329F88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x132A290", Offset = "0x132A290", VA = "0x132A290")]
	public ConveyorBelt()
	{
	}
}
[Token(Token = "0x20000AC")]
public class CraneTurning : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform crane;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float craneTurnSpeed;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float totalRotation;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool active;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool switchDirection;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool craneCorrected;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int cranePosition;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float correctionRotation;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x132A30C", Offset = "0x132A30C", VA = "0x132A30C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x132A310", Offset = "0x132A310", VA = "0x132A310")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x132A8E4", Offset = "0x132A8E4", VA = "0x132A8E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x132A918", Offset = "0x132A918", VA = "0x132A918")]
	private void CraneRotation()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x132A3F8", Offset = "0x132A3F8", VA = "0x132A3F8")]
	private void CraneCorrection()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x132A964", Offset = "0x132A964", VA = "0x132A964")]
	public CraneTurning()
	{
	}
}
[Token(Token = "0x20000AD")]
public class HealingField : MonoBehaviour
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float healTick;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float healAmount;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1346638", Offset = "0x1346638", VA = "0x1346638")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x134663C", Offset = "0x134663C", VA = "0x134663C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1346640", Offset = "0x1346640", VA = "0x1346640")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1346644", Offset = "0x1346644", VA = "0x1346644")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x13467F4", Offset = "0x13467F4", VA = "0x13467F4")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x13469BC", Offset = "0x13469BC", VA = "0x13469BC")]
	public HealingField()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Laser : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BA9C", Offset = "0x104BA9C")]
	private sealed class <ReactivateLaser>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Laser <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0x126F7A0", Offset = "0x126F7A0", VA = "0x126F7A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C0")]
			[Address(RVA = "0x126F808", Offset = "0x126F808", VA = "0x126F808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x126F6A4", Offset = "0x126F6A4", VA = "0x126F6A4")]
		[DebuggerHidden]
		public <ReactivateLaser>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x126F6D8", Offset = "0x126F6D8", VA = "0x126F6D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x126F6DC", Offset = "0x126F6DC", VA = "0x126F6DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x126F7A8", Offset = "0x126F7A8", VA = "0x126F7A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform laser;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float laserLength;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float laserReactivationTime;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float laserContactDamage;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightLaserBox;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float laserBoxPos;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LaserTrigger lt;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x126F4A4", Offset = "0x126F4A4", VA = "0x126F4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x126F5D8", Offset = "0x126F5D8", VA = "0x126F5D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x126F538", Offset = "0x126F538", VA = "0x126F538")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1058E68", Offset = "0x1058E68")]
	public void SetupLaser()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x126F634", Offset = "0x126F634", VA = "0x126F634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058EA0", Offset = "0x1058EA0")]
	private IEnumerator ReactivateLaser()
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x126F6D0", Offset = "0x126F6D0", VA = "0x126F6D0")]
	public Laser()
	{
	}
}
[Token(Token = "0x20000B0")]
public class LaserTrigger : MonoBehaviour
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Laser laser;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool triggered;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject laserVisual;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x12700A4", Offset = "0x12700A4", VA = "0x12700A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x12700A8", Offset = "0x12700A8", VA = "0x12700A8")]
	private void LaserCheck()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1270160", Offset = "0x1270160", VA = "0x1270160")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x127016C", Offset = "0x127016C", VA = "0x127016C")]
	public LaserTrigger()
	{
	}
}
[Token(Token = "0x20000B1")]
public class PerfectAimTowardsPlayer : MonoBehaviour
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon weapon;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion storedRotation;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x10E6C38", Offset = "0x10E6C38", VA = "0x10E6C38")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x10E6CCC", Offset = "0x10E6CCC", VA = "0x10E6CCC")]
	private void Weapon_OnShotFired(WeaponBullet weaponBullet)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x10E6DC8", Offset = "0x10E6DC8", VA = "0x10E6DC8")]
	public PerfectAimTowardsPlayer()
	{
	}
}
[Token(Token = "0x20000B2")]
public class PlayerFallToDeath : MonoBehaviour
{
	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x10E7E00", Offset = "0x10E7E00", VA = "0x10E7E00")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x10E7E04", Offset = "0x10E7E04", VA = "0x10E7E04")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x10E7E08", Offset = "0x10E7E08", VA = "0x10E7E08")]
	public PlayerFallToDeath()
	{
	}
}
[Token(Token = "0x20000B3")]
public class PressDamage : MonoBehaviour
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPosition;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DamageOnContact contactDamage;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E918", Offset = "0x104E918")]
	public float initialDamage;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x104E950", Offset = "0x104E950")]
	public float multiplyFactor;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float pressDistance;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float damageMultiplier;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float pressDamage;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x10E7FD4", Offset = "0x10E7FD4", VA = "0x10E7FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x10E8078", Offset = "0x10E8078", VA = "0x10E8078")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x10E81B4", Offset = "0x10E81B4", VA = "0x10E81B4")]
	public PressDamage()
	{
	}
}
[Token(Token = "0x20000B4")]
public class PressMachine : GenericEventEmitter
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform Press;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve Movement;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve Damage;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float StuckMinHeight;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104E988", Offset = "0x104E988")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104E988", Offset = "0x104E988")]
	[InlineProperty]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104E988", Offset = "0x104E988")]
	public List<IAction> PressDownActions;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[InlineProperty]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104EA1C", Offset = "0x104EA1C")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104EA1C", Offset = "0x104EA1C")]
	public List<IAction> PressHitActions;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 defaultPosition;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _time;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _damage;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _height;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private IAttackable _attack;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float stuckHeight;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastHeight;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isGround;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x10E81C4", Offset = "0x10E81C4", VA = "0x10E81C4")]
	private new void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x10E8204", Offset = "0x10E8204", VA = "0x10E8204")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x10E83E8", Offset = "0x10E83E8", VA = "0x10E83E8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x10E85C0", Offset = "0x10E85C0", VA = "0x10E85C0")]
	public PressMachine()
	{
	}
}
[Token(Token = "0x20000B5")]
public class RepeatedMovement : MonoBehaviour
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] movingObjects;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPoint;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endPoint;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distanceCheck;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x10E8EBC", Offset = "0x10E8EBC", VA = "0x10E8EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x10E9050", Offset = "0x10E9050", VA = "0x10E9050")]
	public RepeatedMovement()
	{
	}
}
[Token(Token = "0x20000B6")]
public class RoomConnectorSetup : MonoBehaviour
{
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetRoomConnector roomConnectorInfo;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoomConnector roomConnector;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnDoorLockedEvent clearRoomFirstInfoPrefab;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DoorHandling doorPrefab;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform doorParent;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DoorHandling door;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject debugVisualizer;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x10E922C", Offset = "0x10E922C", VA = "0x10E922C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x10E9620", Offset = "0x10E9620", VA = "0x10E9620")]
	private void RoomConnector_OnUpdateDoorModels(RoomConnector.Type type)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x10E9648", Offset = "0x10E9648", VA = "0x10E9648")]
	public RoomConnectorSetup()
	{
	}
}
[Token(Token = "0x20000B7")]
public class RotateTowardsPlayer180Degrees : MonoBehaviour
{
	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x10E9650", Offset = "0x10E9650", VA = "0x10E9650")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x10E9848", Offset = "0x10E9848", VA = "0x10E9848")]
	public RotateTowardsPlayer180Degrees()
	{
	}
}
[Token(Token = "0x20000B8")]
public class PracticeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject practiceTarget;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject practiceTargetPrefab;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x10E7E70", Offset = "0x10E7E70", VA = "0x10E7E70")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x10E7E74", Offset = "0x10E7E74", VA = "0x10E7E74")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x10E7FCC", Offset = "0x10E7FCC", VA = "0x10E7FCC")]
	public PracticeTargetSpawner()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ShootingRangeDistance : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform shootingTarget;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currentDistance;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float shootingTargetDistance;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceToReach;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lerpTime;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x10EA240", Offset = "0x10EA240", VA = "0x10EA240")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x10EA274", Offset = "0x10EA274", VA = "0x10EA274")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x10EA3A4", Offset = "0x10EA3A4", VA = "0x10EA3A4")]
	public ShootingRangeDistance()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ShootingRangePanel : MonoBehaviour
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShootingRangeDistance shootingRange;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distanceValue;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x10EA3AC", Offset = "0x10EA3AC", VA = "0x10EA3AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x10EA3CC", Offset = "0x10EA3CC", VA = "0x10EA3CC")]
	public ShootingRangePanel()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ShootingRangeTarget : MonoBehaviour
{
	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x10EA3EC", Offset = "0x10EA3EC", VA = "0x10EA3EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x10EA3F0", Offset = "0x10EA3F0", VA = "0x10EA3F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x10EA3F4", Offset = "0x10EA3F4", VA = "0x10EA3F4")]
	public ShootingRangeTarget()
	{
	}
}
[Token(Token = "0x20000BC")]
public class SpawnWeapon : MonoBehaviour
{
	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BAAC", Offset = "0x104BAAC")]
	private sealed class <CreateNewWeapon>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnWeapon <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x1183028", Offset = "0x1183028", VA = "0x1183028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x1183090", Offset = "0x1183090", VA = "0x1183090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1182E4C", Offset = "0x1182E4C", VA = "0x1182E4C")]
		[DebuggerHidden]
		public <CreateNewWeapon>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1182E80", Offset = "0x1182E80", VA = "0x1182E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1182E84", Offset = "0x1182E84", VA = "0x1182E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1183030", Offset = "0x1183030", VA = "0x1183030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject startWeapon;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject weaponToSpawn;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnContainer;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPosition;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeToSpawn;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool weaponTaken;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool weaponSpawned;

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1182B9C", Offset = "0x1182B9C", VA = "0x1182B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1182CBC", Offset = "0x1182CBC", VA = "0x1182CBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1182DDC", Offset = "0x1182DDC", VA = "0x1182DDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1058F54", Offset = "0x1058F54")]
	private IEnumerator CreateNewWeapon()
	{
		return null;
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1182E78", Offset = "0x1182E78", VA = "0x1182E78")]
	public SpawnWeapon()
	{
	}
}
[Token(Token = "0x20000BE")]
public class TriggerLevelGeneration : MonoBehaviour
{
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BABC", Offset = "0x104BABC")]
	private sealed class <DoRunMultipleTestRuns>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerLevelGeneration <>4__this;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <firstDistrict>5__2;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AssetWorldProgression.DistrictProgression>.Enumerator <>7__wrap2;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetWorldProgression.DistrictProgression <levelStructure>5__4;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <levelId>5__5;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<AssetLevel>.Enumerator <>7__wrap5;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <i>5__7;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x1189170", Offset = "0x1189170", VA = "0x1189170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x11891D8", Offset = "0x11891D8", VA = "0x11891D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1188AA8", Offset = "0x1188AA8", VA = "0x1188AA8")]
		[DebuggerHidden]
		public <DoRunMultipleTestRuns>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1188AEC", Offset = "0x1188AEC", VA = "0x1188AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x1188C20", Offset = "0x1188C20", VA = "0x1188C20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x1188BC8", Offset = "0x1188BC8", VA = "0x1188BC8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x1188B70", Offset = "0x1188B70", VA = "0x1188B70")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1189178", Offset = "0x1189178", VA = "0x1189178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GridBasedRoomGenerator Generator;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool multipleTestRuns;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x104EA8C", Offset = "0x104EA8C")]
	public int testRunCountPerLevel;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool testTrigger;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int overwriteSeedInEditor;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x104EAC8", Offset = "0x104EAC8")]
	public AssetDistrict district;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x104EB04", Offset = "0x104EB04")]
	public int level;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1188150", Offset = "0x1188150", VA = "0x1188150")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059008", Offset = "0x1059008")]
	public void TriggerViaButton()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1188214", Offset = "0x1188214", VA = "0x1188214")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059040", Offset = "0x1059040")]
	public void ShowCompleteLevel()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1188270", Offset = "0x1188270", VA = "0x1188270")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x118831C", Offset = "0x118831C", VA = "0x118831C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059078", Offset = "0x1059078")]
	private IEnumerator DoRunMultipleTestRuns()
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x118838C", Offset = "0x118838C", VA = "0x118838C")]
	private void Trigger()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1188AD4", Offset = "0x1188AD4", VA = "0x1188AD4")]
	public TriggerLevelGeneration()
	{
	}
}
[Token(Token = "0x20000C0")]
public class GenerateBackgroundCity : MonoBehaviour
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Prefab;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Count;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinRange;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxRange;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MinSize;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MaxSize;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MinHeight;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxHeight;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float YOffset;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x133EB6C", Offset = "0x133EB6C", VA = "0x133EB6C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105912C", Offset = "0x105912C")]
	public void Remove()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x133EC3C", Offset = "0x133EC3C", VA = "0x133EC3C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105913C", Offset = "0x105913C")]
	public void Generate()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x133EE80", Offset = "0x133EE80", VA = "0x133EE80")]
	public GenerateBackgroundCity()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ActivateOnHover : BaseHover
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Object;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1326604", Offset = "0x1326604", VA = "0x1326604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1326624", Offset = "0x1326624", VA = "0x1326624", Slot = "5")]
	protected override void OnHover(bool val)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1326644", Offset = "0x1326644", VA = "0x1326644")]
	public ActivateOnHover()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104BACC", Offset = "0x104BACC")]
public class HapticData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Length;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Frequency;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve Amplitude;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BooleanValueData Settings;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x17000058")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x13465FC", Offset = "0x13465FC", VA = "0x13465FC", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1346604", Offset = "0x1346604", VA = "0x1346604", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x134660C", Offset = "0x134660C", VA = "0x134660C", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1346614", Offset = "0x1346614", VA = "0x1346614", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x134661C", Offset = "0x134661C", VA = "0x134661C", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1346624", Offset = "0x1346624", VA = "0x1346624", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x134662C", Offset = "0x134662C", VA = "0x134662C", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1346630", Offset = "0x1346630", VA = "0x1346630")]
	public HapticData()
	{
	}
}
[Token(Token = "0x20000C3")]
public class Health : MonoBehaviour
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Current;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Max;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104EB50", Offset = "0x104EB50")]
	public float LowHealth;

	[Token(Token = "0x14000011")]
	public event Action OnDamage
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x13469C4", Offset = "0x13469C4", VA = "0x13469C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105914C", Offset = "0x105914C")]
		add
		{
		}
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x1346A68", Offset = "0x1346A68", VA = "0x1346A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105915C", Offset = "0x105915C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnLowHealth
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1346B0C", Offset = "0x1346B0C", VA = "0x1346B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105916C", Offset = "0x105916C")]
		add
		{
		}
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1346BB0", Offset = "0x1346BB0", VA = "0x1346BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105917C", Offset = "0x105917C")]
		remove
		{
		}
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1346C54", Offset = "0x1346C54", VA = "0x1346C54")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105918C", Offset = "0x105918C")]
	public void TakeDamage(float damage)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1346D34", Offset = "0x1346D34", VA = "0x1346D34")]
	public Health()
	{
	}
}
[Token(Token = "0x20000C4")]
public class HoloObject : MonoBehaviour
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public bool Destroyed;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x13476CC", Offset = "0x13476CC", VA = "0x13476CC")]
	public HoloObject()
	{
	}
}
[Token(Token = "0x20000C5")]
public class HoloRoom : MonoBehaviour
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer MeshRenderer;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x13476D4", Offset = "0x13476D4", VA = "0x13476D4")]
	public HoloRoom()
	{
	}
}
[Token(Token = "0x20000C6")]
public class InitSteam : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject steamPrefab;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1347D20", Offset = "0x1347D20", VA = "0x1347D20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1347D24", Offset = "0x1347D24", VA = "0x1347D24")]
	public InitSteam()
	{
	}
}
[Token(Token = "0x20000C7")]
public class AdjustSlotPosition : MonoBehaviour
{
	[Token(Token = "0x6000414")]
	[Address(RVA = "0x132746C", Offset = "0x132746C", VA = "0x132746C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1327470", Offset = "0x1327470", VA = "0x1327470")]
	private void Update()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1327474", Offset = "0x1327474", VA = "0x1327474")]
	public AdjustSlotPosition()
	{
	}
}
[Token(Token = "0x20000C8")]
public class HandleObjectInInventorySlot : MonoBehaviour
{
	[Token(Token = "0x6000417")]
	[Address(RVA = "0x13465EC", Offset = "0x13465EC", VA = "0x13465EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x13465F0", Offset = "0x13465F0", VA = "0x13465F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x13465F4", Offset = "0x13465F4", VA = "0x13465F4")]
	public HandleObjectInInventorySlot()
	{
	}
}
[Token(Token = "0x20000C9")]
public class HolsterSettings : MonoBehaviour
{
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BB18", Offset = "0x104BB18")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float holsterRotationSpeedValue;

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1347B90", Offset = "0x1347B90", VA = "0x1347B90")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x1347C94", Offset = "0x1347C94", VA = "0x1347C94")]
		internal void <ChangeSmoothChange>b__1(SlotPosition position)
		{
		}
	}

	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BB28", Offset = "0x104BB28")]
	private sealed class <>c__DisplayClass8_1
	{
		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float holsterXPositionOffset;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HolsterSettings <>4__this;

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1347B98", Offset = "0x1347B98", VA = "0x1347B98")]
		public <>c__DisplayClass8_1()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1347CB0", Offset = "0x1347CB0", VA = "0x1347CB0")]
		internal void <ChangeSmoothChange>b__2(SlotPosition position)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BB38", Offset = "0x104BB38")]
	private sealed class <>c
	{
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SlotPosition> <>9__8_0;

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1347C74", Offset = "0x1347C74", VA = "0x1347C74")]
		public <>c()
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x1347C7C", Offset = "0x1347C7C", VA = "0x1347C7C")]
		internal void <ChangeSmoothChange>b__8_0(SlotPosition position)
		{
		}
	}

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SlotPosition> _slotPositions;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FloatValueData holsterRotationSpeed;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BooleanValueData holsterRotationFreeze;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FloatValueData holsterPositionOffset;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float prevOffsetValue;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x13476DC", Offset = "0x13476DC", VA = "0x13476DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105919C", Offset = "0x105919C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1347744", Offset = "0x1347744", VA = "0x1347744")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x13477E8", Offset = "0x13477E8", VA = "0x13477E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x134788C", Offset = "0x134788C", VA = "0x134788C")]
	private void ChangeSmoothChange(ValueData valueData, object value)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1347BA0", Offset = "0x1347BA0", VA = "0x1347BA0")]
	public HolsterSettings()
	{
	}
}
[Token(Token = "0x20000CD")]
public class UpgradeSpawner : MonoBehaviour
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104EBD8", Offset = "0x104EBD8")]
	public AssetWorldProgression WorldProgression;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NoteUpgrade Note;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material Override;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material FadeOut;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104EC10", Offset = "0x104EC10")]
	public Vector3 Offset;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Space;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int CategoryLineCount;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CategoryOffset;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float IconOffsetY;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int RowMax;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float RowOffset;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104EC48", Offset = "0x104EC48")]
	public List<UpgradeCategoryData> ValidCategories;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x11930D0", Offset = "0x11930D0", VA = "0x11930D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1193BCC", Offset = "0x1193BCC", VA = "0x1193BCC")]
	public UpgradeSpawner()
	{
	}
}
[Token(Token = "0x20000CE")]
public class LeadeboardActive : SerializedMonoBehaviour
{
	[Token(Token = "0x20000CF")]
	public class LeaderboardInfo
	{
		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MinRank;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Object;

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1270888", Offset = "0x1270888", VA = "0x1270888")]
		public LeaderboardInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BB48", Offset = "0x104BB48")]
	private sealed class <>c
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<LeaderboardInfo, int> <>9__6_0;

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1270868", Offset = "0x1270868", VA = "0x1270868")]
		public <>c()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1270870", Offset = "0x1270870", VA = "0x1270870")]
		internal int <OnComplete>b__6_0(LeaderboardInfo it)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104EC80", Offset = "0x104EC80")]
	public LeaderboardData Profile;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104ECB8", Offset = "0x104ECB8")]
	[InlineProperty]
	public List<LeaderboardInfo> Activations;

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1270174", Offset = "0x1270174", VA = "0x1270174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x12703DC", Offset = "0x12703DC", VA = "0x12703DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1270324", Offset = "0x1270324", VA = "0x1270324")]
	private void UpdateLeaderboard()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x12704C8", Offset = "0x12704C8", VA = "0x12704C8")]
	private void OnComplete(List<GE.SocialFeatures.LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1270794", Offset = "0x1270794", VA = "0x1270794")]
	public LeadeboardActive()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ManualReloadWeapon : SerializedMonoBehaviour
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104ED04", Offset = "0x104ED04")]
	public Weapon Weapon;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PickableObject Pickable;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104ED3C", Offset = "0x104ED3C")]
	public Transform ReloadFrom;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104ED4C", Offset = "0x104ED4C")]
	public Transform ReloadTo;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104ED5C", Offset = "0x104ED5C")]
	public Transform MovablePart;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104ED6C", Offset = "0x104ED6C")]
	public Transform HoldPoint;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool UseAnimationCurve;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x104ED7C", Offset = "0x104ED7C")]
	public AnimationCurve AnimationCurve;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool Reload;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104EDB8", Offset = "0x104EDB8")]
	public float ReloadPrecision;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 offset;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[InlineProperty]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104EDD0", Offset = "0x104EDD0")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104EDD0", Offset = "0x104EDD0")]
	public List<IAction> HalfLoadActions;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104EE40", Offset = "0x104EE40")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104EE40", Offset = "0x104EE40")]
	[InlineProperty]
	public List<IAction> FullLoadActions;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Animator ReloadAnimator;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PlayerHand hand;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform pivot;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float distance;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float distance2;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float distance3;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float distance4;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int step;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[ReadOnly]
	public float reloadPercentage;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1274998", Offset = "0x1274998", VA = "0x1274998")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1274A08", Offset = "0x1274A08", VA = "0x1274A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1274BDC", Offset = "0x1274BDC", VA = "0x1274BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1274C28", Offset = "0x1274C28", VA = "0x1274C28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1274D4C", Offset = "0x1274D4C", VA = "0x1274D4C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1275208", Offset = "0x1275208", VA = "0x1275208")]
	public void OnPickUp(IPicking picking, IPickable pickable)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1275324", Offset = "0x1275324", VA = "0x1275324")]
	public void OnRelease(IPicking picking, IPickable pickable)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1275350", Offset = "0x1275350", VA = "0x1275350")]
	public void OnShotFired(WeaponBullet bullet)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1275358", Offset = "0x1275358", VA = "0x1275358")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x12753E0", Offset = "0x12753E0", VA = "0x12753E0")]
	public ManualReloadWeapon()
	{
	}
}
[Token(Token = "0x20000D2")]
public class NoteLibrary : MonoBehaviour
{
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NoteReader Prefab;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 direction;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotation;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string key;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1279ABC", Offset = "0x1279ABC", VA = "0x1279ABC")]
	private void Start()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1279E18", Offset = "0x1279E18", VA = "0x1279E18")]
	public NoteLibrary()
	{
	}
}
[Token(Token = "0x20000D3")]
public class ScaleObject : MonoBehaviour
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartSize;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float EndSize;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LifeTime;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve Size;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool DestroyOnFinish;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float duration;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x10E9850", Offset = "0x10E9850", VA = "0x10E9850")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x10E9A5C", Offset = "0x10E9A5C", VA = "0x10E9A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x10E987C", Offset = "0x10E987C", VA = "0x10E987C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x10591AC", Offset = "0x10591AC")]
	private void ResetSize()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x10E98A4", Offset = "0x10E98A4", VA = "0x10E98A4")]
	private void RefreshSize()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x10E9A60", Offset = "0x10E9A60", VA = "0x10E9A60")]
	public ScaleObject()
	{
	}
}
[Token(Token = "0x20000D4")]
public class SpawnObject : MonoBehaviour
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Object;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1182A7C", Offset = "0x1182A7C", VA = "0x1182A7C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x10591BC", Offset = "0x10591BC")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1182B94", Offset = "0x1182B94", VA = "0x1182B94")]
	public SpawnObject()
	{
	}
}
[Token(Token = "0x20000D5")]
public class OutlineShader : MonoBehaviour
{
	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter Mesh;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinnedMeshRenderer SkinnedMeshRenderer;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnly]
	public GameObject OutlineObject;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Type> componentFilter;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x11D1BF8", Offset = "0x11D1BF8", VA = "0x11D1BF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x11D1BFC", Offset = "0x11D1BFC", VA = "0x11D1BFC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x10591CC", Offset = "0x10591CC")]
	private void GenerateOutline()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x11D2238", Offset = "0x11D2238", VA = "0x11D2238")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x10591DC", Offset = "0x10591DC")]
	private void RemoveOutline()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x11D2948", Offset = "0x11D2948", VA = "0x11D2948")]
	private void ReverseNormals(Mesh mesh)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x11D22A4", Offset = "0x11D22A4", VA = "0x11D22A4")]
	private void WeldVertices(Mesh mesh)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x11D29F4", Offset = "0x11D29F4", VA = "0x11D29F4")]
	public OutlineShader()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Cheats : MonoBehaviour
{
	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup inputLeft;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetVRInputDeviceGroup inputRight;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnitHealth unitHealth;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1329D60", Offset = "0x1329D60", VA = "0x1329D60")]
	private void Update()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1329DF8", Offset = "0x1329DF8", VA = "0x1329DF8")]
	public Cheats()
	{
	}
}
[Token(Token = "0x20000D7")]
public class DashVisualisation : MonoBehaviour
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104EED0", Offset = "0x104EED0")]
	public DashMovement DashMovement;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Arrow;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Circle;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104EF08", Offset = "0x104EF08")]
	public float PrefabSize;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int NumPrefabs;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve ArcCurve;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> objects;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initialPosition;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 finalPosition;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 currPosition;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 nextPosition;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 forward;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float magnitude;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _progress;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _offset;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform _pointer;

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x132A974", Offset = "0x132A974", VA = "0x132A974")]
	private void Start()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x132AB5C", Offset = "0x132AB5C", VA = "0x132AB5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x132AF8C", Offset = "0x132AF8C", VA = "0x132AF8C")]
	private void ShowArrows()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x132B058", Offset = "0x132B058", VA = "0x132B058")]
	private void HideArrows()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x132B038", Offset = "0x132B038", VA = "0x132B038")]
	private void ShowPointer()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x132B104", Offset = "0x132B104", VA = "0x132B104")]
	private void HidePointer()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x132B124", Offset = "0x132B124", VA = "0x132B124")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x132B340", Offset = "0x132B340", VA = "0x132B340")]
	public DashVisualisation()
	{
	}
}
[Token(Token = "0x20000D8")]
public class HandSlotPosition : MonoBehaviour
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerHand playerHand;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1345EC4", Offset = "0x1345EC4", VA = "0x1345EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1345F58", Offset = "0x1345F58", VA = "0x1345F58")]
	private void PlayerHand_OnVisualModelUpdate(Transform obj)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1345FE8", Offset = "0x1345FE8", VA = "0x1345FE8")]
	public HandSlotPosition()
	{
	}
}
[Token(Token = "0x20000D9")]
public class MagazineSpawn : MonoBehaviour
{
	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MagazineSpawn Instance;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform LeftSpawn;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RightSpawn;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x127482C", Offset = "0x127482C", VA = "0x127482C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1274880", Offset = "0x1274880", VA = "0x1274880")]
	public MagazineSpawn()
	{
	}
}
[Token(Token = "0x20000DA")]
public class PlayerDamageOnContact : DamageOnContact
{
	[Token(Token = "0x6000459")]
	[Address(RVA = "0x10E7DF8", Offset = "0x10E7DF8", VA = "0x10E7DF8")]
	public PlayerDamageOnContact()
	{
	}
}
[Token(Token = "0x20000DB")]
public class ShowDebugBodyInfo : MonoBehaviour
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ValueData debug;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform visualHandLeft;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform visualHandRight;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform devicePositionLeft;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform devicePositionRight;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer physicalBody;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform debugHandLeft;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform debugHandRight;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x10EA6C4", Offset = "0x10EA6C4", VA = "0x10EA6C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x10EA768", Offset = "0x10EA768", VA = "0x10EA768")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x10EA80C", Offset = "0x10EA80C", VA = "0x10EA80C")]
	private void Instance_OnValueChanged(ValueData valueData, object val)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x10EA8E0", Offset = "0x10EA8E0", VA = "0x10EA8E0")]
	private void EnableDebugInfo(bool val)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x10EAA5C", Offset = "0x10EAA5C", VA = "0x10EAA5C")]
	private void RemoveScripts(Transform t)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x10EAB04", Offset = "0x10EAB04", VA = "0x10EAB04")]
	public ShowDebugBodyInfo()
	{
	}
}
[Token(Token = "0x20000DC")]
public class VisualizeDashPointerLine : MonoBehaviour
{
	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float prefabSize;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int numPrefabs;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float progressOffset;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve arcCurve;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DashMovement dashMovement;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> objects;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _pointer;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1195258", Offset = "0x1195258", VA = "0x1195258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1195428", Offset = "0x1195428", VA = "0x1195428")]
	private void Update()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x11957A8", Offset = "0x11957A8", VA = "0x11957A8")]
	public VisualizeDashPointerLine()
	{
	}
}
[Token(Token = "0x20000DD")]
public class PlayerClassUpgrades : MonoBehaviour
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> weapons;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> items;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> chips;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x10E7690", Offset = "0x10E7690", VA = "0x10E7690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x10E7D50", Offset = "0x10E7D50", VA = "0x10E7D50")]
	public PlayerClassUpgrades()
	{
	}
}
[Token(Token = "0x20000DE")]
public class EmptySpawnTestingTool : MonoBehaviour
{
	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BB58", Offset = "0x104BB58")]
	private sealed class <DoStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmptySpawnTestingTool <>4__this;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i2>5__2;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AssetDistrict>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetDistrict <district>5__4;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__5;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0x1339444", Offset = "0x1339444", VA = "0x1339444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0x13394AC", Offset = "0x13394AC", VA = "0x13394AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x133903C", Offset = "0x133903C", VA = "0x133903C")]
		[DebuggerHidden]
		public <DoStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1339108", Offset = "0x1339108", VA = "0x1339108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x133917C", Offset = "0x133917C", VA = "0x133917C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1339124", Offset = "0x1339124", VA = "0x1339124")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x133944C", Offset = "0x133944C", VA = "0x133944C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AssetDistrict> districts;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BoxContent> spawns;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numIterations;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1338FA0", Offset = "0x1338FA0", VA = "0x1338FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1338FCC", Offset = "0x1338FCC", VA = "0x1338FCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10591EC", Offset = "0x10591EC")]
	private IEnumerator DoStart()
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1339068", Offset = "0x1339068", VA = "0x1339068")]
	public EmptySpawnTestingTool()
	{
	}
}
[Token(Token = "0x20000E0")]
public class ReplaceGameObject : MonoBehaviour
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> replacements;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x10E9058", Offset = "0x10E9058", VA = "0x10E9058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x10E91BC", Offset = "0x10E91BC", VA = "0x10E91BC")]
	public ReplaceGameObject()
	{
	}
}
[Token(Token = "0x20000E1")]
public class RandomNote : MonoBehaviour
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NoteReader NoteReader;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LoreNoteData> sortedLoreNotes;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<LoreNoteData> loreNotes;

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x10E865C", Offset = "0x10E865C", VA = "0x10E865C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x10E88DC", Offset = "0x10E88DC", VA = "0x10E88DC")]
	public RandomNote()
	{
	}
}
[Token(Token = "0x20000E2")]
public class ReloadWeapon : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	public enum ReloadType
	{
		[Token(Token = "0x4000444")]
		UpOrDown,
		[Token(Token = "0x4000445")]
		Up,
		[Token(Token = "0x4000446")]
		Down,
		[Token(Token = "0x4000447")]
		UpAndDown,
		[Token(Token = "0x4000448")]
		DownAndUp
	}

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon Weapon;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PickableObject Pickable;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Range;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x104EF40", Offset = "0x104EF40")]
	public float SecondRange;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReloadType ReloadMode;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool reloadReady;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool valid;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int step;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x10E894C", Offset = "0x10E894C", VA = "0x10E894C")]
	private bool HasSecondRange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x10E8960", Offset = "0x10E8960", VA = "0x10E8960")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x10E89D0", Offset = "0x10E89D0", VA = "0x10E89D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x10E8C84", Offset = "0x10E8C84", VA = "0x10E8C84")]
	public ReloadWeapon()
	{
	}
}
[Token(Token = "0x20000E4")]
public class RemoveHoloObjects : MonoBehaviour
{
	[Token(Token = "0x4000449")]
	public const int HOLO_DESTROY_SEC = 2;

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x10E8C94", Offset = "0x10E8C94", VA = "0x10E8C94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x10E8EB4", Offset = "0x10E8EB4", VA = "0x10E8EB4")]
	public RemoveHoloObjects()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ShowCanvasGroupOnPlayerDistance : MonoBehaviour
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup Target;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MinDistance;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxDistance;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeSpeed;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float distance;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float targetAlpha;

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x10EA3FC", Offset = "0x10EA3FC", VA = "0x10EA3FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x10EA44C", Offset = "0x10EA44C", VA = "0x10EA44C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x10EA4A4", Offset = "0x10EA4A4", VA = "0x10EA4A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x10EA6A8", Offset = "0x10EA6A8", VA = "0x10EA6A8")]
	public ShowCanvasGroupOnPlayerDistance()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ShowOnPlayerDistance : MonoBehaviour
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MinDistance;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxDistance;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScaleSpeed;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float distance;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float destScale;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x10EAB0C", Offset = "0x10EAB0C", VA = "0x10EAB0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x10EABB0", Offset = "0x10EABB0", VA = "0x10EABB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x10EAE08", Offset = "0x10EAE08", VA = "0x10EAE08")]
	public ShowOnPlayerDistance()
	{
	}
}
[Token(Token = "0x20000E7")]
public class SolidifyMesh : MonoBehaviour
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wallThicknessDivide;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float tileSize;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Vector3, List<Vector3>> normalsDict;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelBuilder levelBuilder;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TilesetData wall;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TilesetData platform;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x10EBE0C", Offset = "0x10EBE0C", VA = "0x10EBE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x10EDB4C", Offset = "0x10EDB4C", VA = "0x10EDB4C")]
	public SolidifyMesh()
	{
	}
}
[Token(Token = "0x20000E8")]
public class SpawnEnemy : MonoBehaviour
{
	[Token(Token = "0x20000E9")]
	public class UnitInfo
	{
		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Note;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Object;

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x1182A74", Offset = "0x1182A74", VA = "0x1182A74")]
		public UnitInfo()
		{
		}
	}

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104EF7C", Offset = "0x104EF7C")]
	public Transform SpawnPoint;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material OverrideMaterial;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material FadeOutMaterial;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetUnitTag SpawnTag;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<UnitData, UnitInfo> units;

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x10EDB60", Offset = "0x10EDB60", VA = "0x10EDB60")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x10EE3B8", Offset = "0x10EE3B8", VA = "0x10EE3B8")]
	public void DeSpawn()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x10EE4E8", Offset = "0x10EE4E8", VA = "0x10EE4E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x10EE624", Offset = "0x10EE624", VA = "0x10EE624")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x10EDC68", Offset = "0x10EDC68", VA = "0x10EDC68")]
	private void CreateUnit(UnitData data, Transform note)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x10EE8C4", Offset = "0x10EE8C4", VA = "0x10EE8C4")]
	private bool IsMaterialValid(Material mat)
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x10EE938", Offset = "0x10EE938", VA = "0x10EE938")]
	public SpawnEnemy()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Speedlines : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BB68", Offset = "0x104BB68")]
	private sealed class <DoHide>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Speedlines <>4__this;

		[Token(Token = "0x1700005B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000492")]
			[Address(RVA = "0x11832CC", Offset = "0x11832CC", VA = "0x11832CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000494")]
			[Address(RVA = "0x1183334", Offset = "0x1183334", VA = "0x1183334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x11831BC", Offset = "0x11831BC", VA = "0x11831BC")]
		[DebuggerHidden]
		public <DoHide>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x11831F8", Offset = "0x11831F8", VA = "0x11831F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x11831FC", Offset = "0x11831FC", VA = "0x11831FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x11832D4", Offset = "0x11832D4", VA = "0x11832D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Particles;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HideTime;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1183098", Offset = "0x1183098", VA = "0x1183098")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x11830E0", Offset = "0x11830E0", VA = "0x11830E0")]
	public void Show()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x118309C", Offset = "0x118309C", VA = "0x118309C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x118314C", Offset = "0x118314C", VA = "0x118314C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10592A0", Offset = "0x10592A0")]
	private IEnumerator DoHide()
	{
		return null;
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x11831E8", Offset = "0x11831E8", VA = "0x11831E8")]
	public Speedlines()
	{
	}
}
[Token(Token = "0x20000EC")]
public class SpiderJoint : MonoBehaviour
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startOffset;

	[Token(Token = "0x1700005D")]
	public Vector3 Axis
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x118333C", Offset = "0x118333C", VA = "0x118333C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1183360", Offset = "0x1183360", VA = "0x1183360")]
	public SpiderJoint()
	{
	}
}
[Token(Token = "0x20000ED")]
public class TestDoor : MonoBehaviour
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SceneId;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneData Scene;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI Text;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1187814", Offset = "0x1187814", VA = "0x1187814")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1187910", Offset = "0x1187910", VA = "0x1187910")]
	public TestDoor()
	{
	}
}
[Token(Token = "0x20000EE")]
public class TestRooms : MonoBehaviour
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104EFB4", Offset = "0x104EFB4")]
	public List<SceneData> SpecificRooms;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform BuildWall;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SpecificWall;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TestDoor Door;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 DoorOffset;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _cnt;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1187918", Offset = "0x1187918", VA = "0x1187918")]
	private void Start()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1187BDC", Offset = "0x1187BDC", VA = "0x1187BDC")]
	public TestRooms()
	{
	}
}
[Token(Token = "0x20000EF")]
public class TriggerFinger : SerializedMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000F0")]
	public class JoinInfo
	{
		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Joint;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Angle;

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x1188148", Offset = "0x1188148", VA = "0x1188148")]
		public JoinInfo()
		{
		}
	}

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AssetVRInputDeviceGroup InputDevice;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerHand PlayerHand;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0x104EFEC", Offset = "0x104EFEC")]
	public List<JoinInfo> Joints;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1187E28", Offset = "0x1187E28", VA = "0x1187E28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x11880D8", Offset = "0x11880D8", VA = "0x11880D8")]
	public TriggerFinger()
	{
	}
}
[Token(Token = "0x20000F1")]
public class TunnelMan : SerializedMonoBehaviour
{
	[Token(Token = "0x20000F2")]
	public class TunnelInfo
	{
		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntegerValueData Progress;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104F054", Offset = "0x104F054")]
		public List<GameObject> Objects;

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x1189780", Offset = "0x1189780", VA = "0x1189780")]
		public TunnelInfo()
		{
		}
	}

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0x104F020", Offset = "0x104F020")]
	public Dictionary<AssetDistrict, TunnelInfo> Stages;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _valid;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _progress;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _complete;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _lastComplete;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x11891E0", Offset = "0x11891E0", VA = "0x11891E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1189710", Offset = "0x1189710", VA = "0x1189710")]
	public TunnelMan()
	{
	}
}
[Token(Token = "0x20000F3")]
public class LoadNextLevelOnTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1271B90", Offset = "0x1271B90", VA = "0x1271B90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1271CBC", Offset = "0x1271CBC", VA = "0x1271CBC")]
	public LoadNextLevelOnTriggerEnter()
	{
	}
}
[Token(Token = "0x20000F4")]
public class TutorialPointInventoryStore : TutorialPoint
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public PickableObject pickableObject;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool hasBeenPickedUp;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x11897F0", Offset = "0x11897F0", VA = "0x11897F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1189884", Offset = "0x1189884", VA = "0x1189884")]
	private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x11899AC", Offset = "0x11899AC", VA = "0x11899AC", Slot = "11")]
	public override bool Finished()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x11899B4", Offset = "0x11899B4", VA = "0x11899B4")]
	public TutorialPointInventoryStore()
	{
	}
}
[Token(Token = "0x20000F5")]
public class TutorialPointPlayerAction : TutorialPoint
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	public bool finishOnRotation;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
	public bool finishOnMovement;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool finishOnDragMovement;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public bool finishOnVisor;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public DashMovement dashMovement;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float minDistanceCovered;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AssetVRInputDeviceGroup inputLeft;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AssetVRInputDeviceGroup inputRight;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string dragMovementText;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text label;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string initialText;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float distanceCovered;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float startDistanceCovered;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool hasFinished;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x11899BC", Offset = "0x11899BC", VA = "0x11899BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1189BFC", Offset = "0x1189BFC", VA = "0x1189BFC")]
	private void DashMovement_OnDashStart()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1189C48", Offset = "0x1189C48", VA = "0x1189C48")]
	private void Visor_OnVisorChanged(bool obj)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1189CE0", Offset = "0x1189CE0", VA = "0x1189CE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1189D5C", Offset = "0x1189D5C", VA = "0x1189D5C")]
	private void Movement_OnMove(Vector3 deltaMovement)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1189F70", Offset = "0x1189F70", VA = "0x1189F70", Slot = "13")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x118A068", Offset = "0x118A068", VA = "0x118A068")]
	private void Movement_OnRotatePlayer()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1189C00", Offset = "0x1189C00", VA = "0x1189C00")]
	private void SetFinished()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x118A06C", Offset = "0x118A06C", VA = "0x118A06C", Slot = "11")]
	public override bool Finished()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x118A074", Offset = "0x118A074", VA = "0x118A074")]
	public TutorialPointPlayerAction()
	{
	}
}
[Token(Token = "0x20000F6")]
public class BuildInfo : MonoBehaviour
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset VersionInfo;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset DateInfo;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Version;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Date;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1328598", Offset = "0x1328598", VA = "0x1328598")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1328694", Offset = "0x1328694", VA = "0x1328694")]
	public BuildInfo()
	{
	}
}
[Token(Token = "0x20000F7")]
public class DisabledBaseInput : BaseInput
{
	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x132DE2C", Offset = "0x132DE2C", VA = "0x132DE2C", Slot = "23")]
	public override bool GetMouseButtonDown(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x132DE34", Offset = "0x132DE34", VA = "0x132DE34", Slot = "24")]
	public override bool GetMouseButtonUp(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x132DE3C", Offset = "0x132DE3C", VA = "0x132DE3C", Slot = "25")]
	public override bool GetMouseButton(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x132DE44", Offset = "0x132DE44", VA = "0x132DE44")]
	public DisabledBaseInput()
	{
	}
}
[Token(Token = "0x20000F8")]
public class HandgunDisplay : MonoBehaviour
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104F08C", Offset = "0x104F08C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F08C", Offset = "0x104F08C")]
	public Weapon Weapon;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ReloadBar;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _proc;

	[Token(Token = "0x4000497")]
	private const bool showHandgunDisplay = false;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1346184", Offset = "0x1346184", VA = "0x1346184")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x13461AC", Offset = "0x13461AC", VA = "0x13461AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x13465E4", Offset = "0x13465E4", VA = "0x13465E4")]
	public HandgunDisplay()
	{
	}
}
[Token(Token = "0x20000F9")]
public class HealthPosition : SlotPosition
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CanvasGroup Canvas;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIStatusbarMesh Statusbar;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve MoveOut;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve FadeOut;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 defaultOffset;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _alpha;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1346D50", Offset = "0x1346D50", VA = "0x1346D50")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1346D64", Offset = "0x1346D64", VA = "0x1346D64")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1346FE0", Offset = "0x1346FE0", VA = "0x1346FE0")]
	public HealthPosition()
	{
	}
}
[Token(Token = "0x20000FA")]
public class ScreenInfo : MonoBehaviour
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset versionNumber;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetWorldProgression World;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuildTagData SetSeedTag;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode keyCode;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool showUI;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string customInput;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string[] data;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int value;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x10E9A84", Offset = "0x10E9A84", VA = "0x10E9A84")]
	public ScreenInfo()
	{
	}
}
[Token(Token = "0x20000FB")]
public class SeedInfo : MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DistrictValueData DistrictData;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntegerValueData LevelData;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntegerValueData UserData;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Level;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Room;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Seed;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text UserID;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x10E9C50", Offset = "0x10E9C50", VA = "0x10E9C50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x10E9F88", Offset = "0x10E9F88", VA = "0x10E9F88")]
	private string GetCurrentRoom()
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x10EA048", Offset = "0x10EA048", VA = "0x10EA048")]
	public SeedInfo()
	{
	}
}
[Token(Token = "0x20000FC")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104BB78", Offset = "0x104BB78")]
public class TextIntValue : MonoBehaviour
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntegerValueData Value;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Add;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LocalisationText loc;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshProUGUI text;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1187C4C", Offset = "0x1187C4C", VA = "0x1187C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1187E1C", Offset = "0x1187E1C", VA = "0x1187E1C")]
	private void OnTranslated()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1187D70", Offset = "0x1187D70", VA = "0x1187D70")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1187E20", Offset = "0x1187E20", VA = "0x1187E20")]
	public TextIntValue()
	{
	}
}
[Token(Token = "0x20000FD")]
public class UIAggroMesh : MonoBehaviour
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F0D8", Offset = "0x104F0D8")]
	public MeshFilter MeshFilter;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer MeshRenderer;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F110", Offset = "0x104F110")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104F110", Offset = "0x104F110")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F110", Offset = "0x104F110")]
	public float StatusValue;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F18C", Offset = "0x104F18C")]
	public Gradient ForegroundColor;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color BackgroundColor;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color BorderColor;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 TopLeftOffset;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 TopRighttOffset;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F1C4", Offset = "0x104F1C4")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F1C4", Offset = "0x104F1C4")]
	public float LineSize;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F228", Offset = "0x104F228")]
	public float Gap;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F264", Offset = "0x104F264")]
	public Vector2 Size;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104F2A0", Offset = "0x104F2A0")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F2A0", Offset = "0x104F2A0")]
	public float Depth;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh mesh;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> vertices;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<int> triangles;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Color> colors;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int complexity;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Vector3> dynVertices;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color _foregroundColor;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x118A0D4", Offset = "0x118A0D4", VA = "0x118A0D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x118A59C", Offset = "0x118A59C", VA = "0x118A59C")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x118A5A4", Offset = "0x118A5A4", VA = "0x118A5A4")]
	public void Change()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x118A0D8", Offset = "0x118A0D8", VA = "0x118A0D8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059354", Offset = "0x1059354")]
	public void Generate()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x118A8BC", Offset = "0x118A8BC", VA = "0x118A8BC")]
	private void GeneradeQuad(Color color, Vector2 size, float offset, float padding, Vector2 topLeft, Vector2 topRight, float z = 0f)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x118ABC0", Offset = "0x118ABC0", VA = "0x118ABC0")]
	public UIAggroMesh()
	{
	}
}
[Token(Token = "0x20000FE")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104BB8C", Offset = "0x104BB8C")]
public class UIAmmo : WeaponElement
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F2F8", Offset = "0x104F2F8")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F330", Offset = "0x104F330")]
	public Gradient NumberColor;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LString ReloadTip;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int ReloadTipCount;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Weapon weapon;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ShootWeapon shootWeapon;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RectTransform rectWeapon;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _ammo;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x118AD14", Offset = "0x118AD14", VA = "0x118AD14")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x118AD44", Offset = "0x118AD44", VA = "0x118AD44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x118AEB0", Offset = "0x118AEB0", VA = "0x118AEB0")]
	public UIAmmo()
	{
	}
}
[Token(Token = "0x20000FF")]
public class UIBackground : SerializedMonoBehaviour
{
	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIBackground Instance;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image Background;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GenericFloatEvent> OnBackgroundIntensityChanged;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<UIBackgroundData> objects;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentVal;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastTime;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastVal;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x118AED0", Offset = "0x118AED0", VA = "0x118AED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x118AF24", Offset = "0x118AF24", VA = "0x118AF24")]
	private void Reset()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x118AFB4", Offset = "0x118AFB4", VA = "0x118AFB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x118B1B8", Offset = "0x118B1B8", VA = "0x118B1B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x118AFB8", Offset = "0x118AFB8", VA = "0x118AFB8")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x118B1BC", Offset = "0x118B1BC", VA = "0x118B1BC")]
	public void Show(UIBackgroundData mat, bool interrupt = false)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x118B28C", Offset = "0x118B28C", VA = "0x118B28C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x118B2E4", Offset = "0x118B2E4", VA = "0x118B2E4")]
	public void Hide(UIBackgroundData mat)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x118B34C", Offset = "0x118B34C", VA = "0x118B34C")]
	public UIBackground()
	{
	}
}
[Token(Token = "0x2000100")]
public class UIBillboard : MonoBehaviour
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Size;

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x118B494", Offset = "0x118B494", VA = "0x118B494")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x118B844", Offset = "0x118B844", VA = "0x118B844")]
	public UIBillboard()
	{
	}
}
[Token(Token = "0x2000101")]
public class UIDamage : SerializedMonoBehaviour
{
	[Token(Token = "0x2000102")]
	public enum Direction
	{
		[Token(Token = "0x40004E0")]
		Left,
		[Token(Token = "0x40004E1")]
		Right,
		[Token(Token = "0x40004E2")]
		Front,
		[Token(Token = "0x40004E3")]
		Behind
	}

	[Token(Token = "0x2000103")]
	public class DamageInfo
	{
		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Direction Mode;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Sprite;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		public float Time;

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x118C468", Offset = "0x118C468", VA = "0x118C468")]
		public DamageInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000104")]
	public class EffectInfo
	{
		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EffectType EffectType;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Sprite;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Active;

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x118C478", Offset = "0x118C478", VA = "0x118C478")]
		public EffectInfo()
		{
		}
	}

	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BBA0", Offset = "0x104BBA0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Direction mode;

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x118BF14", Offset = "0x118BF14", VA = "0x118BF14")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x118C388", Offset = "0x118C388", VA = "0x118C388")]
		internal bool <Show>b__0(DamageInfo it)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BBB0", Offset = "0x104BBB0")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EffectType effectType;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool effectIsActive;

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x118C2B0", Offset = "0x118C2B0", VA = "0x118C2B0")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x118C3AC", Offset = "0x118C3AC", VA = "0x118C3AC")]
		internal void <EnableEffectSprite>b__0(EffectInfo info)
		{
		}
	}

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIDamage Instance;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EffectComponent EffectComponent;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnitHealth Health;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image CritHealth;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<EffectInfo> EffectInfos;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F368", Offset = "0x104F368")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F368", Offset = "0x104F368")]
	public Color Color;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float Duration;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve CritStrength;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _critStrength;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0x104F3C8", Offset = "0x104F3C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F3C8", Offset = "0x104F3C8")]
	public List<DamageInfo> DamageInfos;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool disabled;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x118B858", Offset = "0x118B858", VA = "0x118B858")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x118B8AC", Offset = "0x118B8AC", VA = "0x118B8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x118BA60", Offset = "0x118BA60", VA = "0x118BA60")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x118BC88", Offset = "0x118BC88", VA = "0x118BC88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x118BE3C", Offset = "0x118BE3C", VA = "0x118BE3C")]
	public void Show(Direction mode)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x118BF1C", Offset = "0x118BF1C", VA = "0x118BF1C")]
	public void OnHealthChanged(float value)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x118BF20", Offset = "0x118BF20", VA = "0x118BF20")]
	public void RefreshCrit()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x118C008", Offset = "0x118C008", VA = "0x118C008")]
	public void Disable()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x118C1D0", Offset = "0x118C1D0", VA = "0x118C1D0")]
	private void OnEffectApplied(EffectType effectType)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x118C2A8", Offset = "0x118C2A8", VA = "0x118C2A8")]
	private void OnEffectRemoved(EffectType effectType)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x118C1D8", Offset = "0x118C1D8", VA = "0x118C1D8")]
	private void EnableEffectSprite(EffectType effectType, bool effectIsActive)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x118C2B8", Offset = "0x118C2B8", VA = "0x118C2B8")]
	public UIDamage()
	{
	}
}
[Token(Token = "0x2000107")]
public class UIDebugLog : MonoBehaviour
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Container;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Log;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x118C480", Offset = "0x118C480", VA = "0x118C480")]
	private void Start()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x118C5C4", Offset = "0x118C5C4", VA = "0x118C5C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x118C708", Offset = "0x118C708", VA = "0x118C708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x118C7B0", Offset = "0x118C7B0", VA = "0x118C7B0")]
	private void MessageLog(string log)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x118C7EC", Offset = "0x118C7EC", VA = "0x118C7EC")]
	public UIDebugLog()
	{
	}
}
[Token(Token = "0x2000108")]
public class UIHealth : WeaponElement
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeTime;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Gradient NumberColor;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color Positive;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color Negative;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lasthealth;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lastChange;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float progress;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x118C7F4", Offset = "0x118C7F4", VA = "0x118C7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x118C90C", Offset = "0x118C90C", VA = "0x118C90C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x118CBEC", Offset = "0x118CBEC", VA = "0x118CBEC")]
	public UIHealth()
	{
	}
}
[Token(Token = "0x2000109")]
public class UIHealthslider : WeaponElement
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider Slider;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Sprite;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float FadeTime;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient Neutral;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color Positive;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Negative;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lasthealth;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastChange;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float progress;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x118CC40", Offset = "0x118CC40", VA = "0x118CC40")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x118CCEC", Offset = "0x118CCEC", VA = "0x118CCEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x118CFC0", Offset = "0x118CFC0", VA = "0x118CFC0")]
	public UIHealthslider()
	{
	}
}
[Token(Token = "0x200010A")]
public class UIPlayerClass : MonoBehaviour
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F430", Offset = "0x104F430")]
	public PlayerClassData Class;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button Button;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Container;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F468", Offset = "0x104F468")]
	public UIUpgradeProgress UnlockProgress;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x118D014", Offset = "0x118D014", VA = "0x118D014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x118D25C", Offset = "0x118D25C", VA = "0x118D25C")]
	public UIPlayerClass()
	{
	}
}
[Token(Token = "0x200010B")]
public class UIPlayerUpgrades : MonoBehaviour
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F4A0", Offset = "0x104F4A0")]
	public Transform Container;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalisationText Title;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Poster;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F4D8", Offset = "0x104F4D8")]
	public UIUpgradeGroup UnlockGroup;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIUpgrade Unlock;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIUpgradeProgress UnlockProgress;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int cnt;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool locked;

	[Token(Token = "0x1700005E")]
	[ShowInInspector]
	[AttributeAttribute(Name = "TitleAttribute", RVA = "0x105D5E4", Offset = "0x105D5E4")]
	[ReadOnly]
	public PlayerClassData Selection
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x118D264", Offset = "0x118D264", VA = "0x118D264")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x118D2CC", Offset = "0x118D2CC", VA = "0x118D2CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x118DCFC", Offset = "0x118DCFC", VA = "0x118DCFC")]
	public UIPlayerUpgrades()
	{
	}
}
[Token(Token = "0x200010C")]
public class UIPopupText : MonoBehaviour
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F510", Offset = "0x104F510")]
	public PopupTextData Profile;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter NumberPrefab;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Mesh> Numbers;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F548", Offset = "0x104F548")]
	public float Distance;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startForce;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startSpeed;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _numString;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _startPos;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter _obj;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x118DD04", Offset = "0x118DD04", VA = "0x118DD04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x118DD90", Offset = "0x118DD90", VA = "0x118DD90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x118DE40", Offset = "0x118DE40", VA = "0x118DE40")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x118E21C", Offset = "0x118E21C", VA = "0x118E21C")]
	public void SetNumber(int number)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x118E48C", Offset = "0x118E48C", VA = "0x118E48C")]
	public UIPopupText()
	{
	}
}
[Token(Token = "0x200010D")]
public class UIStatusbar : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F580", Offset = "0x104F580")]
	public GameObject Prefab;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnitHealth Health;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform StatusContainer;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform LineContainer;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HorizontalLayoutGroup LineGroup;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image Foreground;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image Background;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image Changebar;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F5B8", Offset = "0x104F5B8")]
	public float StatusValue;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float StatusMax;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F5F0", Offset = "0x104F5F0")]
	public float StatusPointSize;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int StatusPointMax;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FadeTime;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Gradient ForegroundColorFrom;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Gradient ForegroundColorTo;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Gradient BackgroundColorFrom;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Gradient BackgroundColorTo;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float AddTime;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Gradient AddColor;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float RemoveTime;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Gradient RemoveColor;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float PointDiff;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<GameObject> linePoints;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int pointCount;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float lastValue;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastMax;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float lastChangeTime;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float lastChangeValue;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _foregroundValue;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _changeValue;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Color _foregroundColor;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Color _backgroundColor;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x118E504", Offset = "0x118E504", VA = "0x118E504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x118E5BC", Offset = "0x118E5BC", VA = "0x118E5BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x118ECFC", Offset = "0x118ECFC", VA = "0x118ECFC")]
	public UIStatusbar()
	{
	}
}
[Token(Token = "0x200010E")]
public class UIStatusbarMesh : MonoBehaviour
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F628", Offset = "0x104F628")]
	public UnitHealth Health;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter MeshFilter;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer MeshRenderer;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material CritMaterial;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F660", Offset = "0x104F660")]
	public float StatusValue;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float StatusMax;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F698", Offset = "0x104F698")]
	public float StatusPointSize;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int StatusPointMax;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FadeTime;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gradient ForegroundColor;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Gradient BackgroundColor;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color BorderColor;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float AddTime;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Gradient AddColor;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float RemoveTime;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Gradient RemoveColor;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104F6D0", Offset = "0x104F6D0")]
	public float CritPerc;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F6E8", Offset = "0x104F6E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104F6E8", Offset = "0x104F6E8")]
	public float Alpha;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F740", Offset = "0x104F740")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104F740", Offset = "0x104F740")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F740", Offset = "0x104F740")]
	public float Angle;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F7BC", Offset = "0x104F7BC")]
	public Vector2 Size;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F7F8", Offset = "0x104F7F8")]
	public float Padding;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F834", Offset = "0x104F834")]
	public float LineSize;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x104F870", Offset = "0x104F870")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x104F870", Offset = "0x104F870")]
	public float Depth;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Mesh mesh;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material defaultMaterial;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<int> triangles;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Color> colors;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int complexity;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<Vector3> dynVertices;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int lineOffset;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int pointCount;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float lastValue;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float lastMax;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float lastChangeTime;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float lastChangeValue;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _alpha;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _foregroundValue;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _changeValue;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Color _foregroundColor;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Color _backgroundColor;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Color _changeColor;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x118EDB8", Offset = "0x118EDB8", VA = "0x118EDB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x118EE6C", Offset = "0x118EE6C", VA = "0x118EE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x118FC9C", Offset = "0x118FC9C", VA = "0x118FC9C")]
	private void Freeze()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x118FCBC", Offset = "0x118FCBC", VA = "0x118FCBC")]
	public void Change()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x118F304", Offset = "0x118F304", VA = "0x118F304")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059364", Offset = "0x1059364")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x119079C", Offset = "0x119079C", VA = "0x119079C")]
	private void GeneradeQuad(Color color, Vector2 size, float offset, float padding, float z = 0f)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1190B5C", Offset = "0x1190B5C", VA = "0x1190B5C")]
	public UIStatusbarMesh()
	{
	}
}
[Token(Token = "0x200010F")]
public class UIStatuspoint : MonoBehaviour
{
	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Sprite;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1190CE0", Offset = "0x1190CE0", VA = "0x1190CE0")]
	public UIStatuspoint()
	{
	}
}
[Token(Token = "0x2000110")]
public class UIUnlockItem : MonoBehaviour
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalisationText Title;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIUnlockProgress UnlockProgress;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Container;

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1190CE8", Offset = "0x1190CE8", VA = "0x1190CE8")]
	public UIUnlockItem()
	{
	}
}
[Token(Token = "0x2000111")]
public class UIUnlockProgress : MonoBehaviour
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Title;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider Slider;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider PreviewSlider;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1190CF0", Offset = "0x1190CF0", VA = "0x1190CF0")]
	public UIUnlockProgress()
	{
	}
}
[Token(Token = "0x2000112")]
public class UIUnlocks : MonoBehaviour
{
	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BBC0", Offset = "0x104BBC0")]
	private sealed class <DoSlider>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIUnlocks <>4__this;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0x1192418", Offset = "0x1192418", VA = "0x1192418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0x1192480", Offset = "0x1192480", VA = "0x1192480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1191FAC", Offset = "0x1191FAC", VA = "0x1191FAC")]
		[DebuggerHidden]
		public <DoSlider>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1192070", Offset = "0x1192070", VA = "0x1192070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1192074", Offset = "0x1192074", VA = "0x1192074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x1192420", Offset = "0x1192420", VA = "0x1192420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F8C8", Offset = "0x104F8C8")]
	public RectTransform Container;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LString Upgrade;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F900", Offset = "0x104F900")]
	public UIUnlockItem Unlock;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> Items;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<Slider, float> Sliders;

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1190CF8", Offset = "0x1190CF8", VA = "0x1190CF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1191FA4", Offset = "0x1191FA4", VA = "0x1191FA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1191F34", Offset = "0x1191F34", VA = "0x1191F34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059374", Offset = "0x1059374")]
	private IEnumerator DoSlider()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1191FD8", Offset = "0x1191FD8", VA = "0x1191FD8")]
	public UIUnlocks()
	{
	}
}
[Token(Token = "0x2000114")]
public class UIUpgrade : MonoBehaviour
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F938", Offset = "0x104F938")]
	public LocalisationText Title;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalisationText Description;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Icon;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle Toggle;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	public int Unlock;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ReadOnly]
	public IntegerValueData Selection;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1192488", Offset = "0x1192488", VA = "0x1192488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x119252C", Offset = "0x119252C", VA = "0x119252C")]
	private void ChangeSelection(bool value)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x11925CC", Offset = "0x11925CC", VA = "0x11925CC")]
	public UIUpgrade()
	{
	}
}
[Token(Token = "0x2000115")]
public class UIUpgradeCondition : MonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Condition;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x11925D4", Offset = "0x11925D4", VA = "0x11925D4")]
	public UIUpgradeCondition()
	{
	}
}
[Token(Token = "0x2000116")]
public class UIUpgradeGroup : MonoBehaviour
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F990", Offset = "0x104F990")]
	public LocalisationText Title;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Label;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ProgressContainer;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UpgradeContainer;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ToggleGroup ToggleGroup;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image Poster;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104F9C8", Offset = "0x104F9C8")]
	public Sprite PosterSprite;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite PosterDisabledSprite;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LString Upgrade;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LString Locked;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x11925DC", Offset = "0x11925DC", VA = "0x11925DC")]
	public UIUpgradeGroup()
	{
	}
}
[Token(Token = "0x2000117")]
public class UIUpgradeProgress : MonoBehaviour
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FA00", Offset = "0x104FA00")]
	public Slider Progressbar;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Condition;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x11925E4", Offset = "0x11925E4", VA = "0x11925E4")]
	public UIUpgradeProgress()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104BBD0", Offset = "0x104BBD0")]
public class UIUpgrades : MonoBehaviour
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Container;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Icon;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RobotUpgrade robot;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image _icon;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x11925EC", Offset = "0x11925EC", VA = "0x11925EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x11927A4", Offset = "0x11927A4", VA = "0x11927A4")]
	public UIUpgrades()
	{
	}
}
[Token(Token = "0x2000119")]
public class VRHUD : MonoBehaviour
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRHUD Instance;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIBackground Background;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FA38", Offset = "0x104FA38")]
	public UnitHealth Health;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FA70", Offset = "0x104FA70")]
	public UIBackgroundData FlashBackground;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FAA8", Offset = "0x104FAA8")]
	public UIBackgroundData DeathBackground;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FAE0", Offset = "0x104FAE0")]
	public UIBackgroundData LoadBackground;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsShown;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastDeath;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isLoading;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isDamage;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x11944EC", Offset = "0x11944EC", VA = "0x11944EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1194554", Offset = "0x1194554", VA = "0x1194554")]
	private void Start()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1194778", Offset = "0x1194778", VA = "0x1194778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x119476C", Offset = "0x119476C", VA = "0x119476C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x11947C0", Offset = "0x11947C0", VA = "0x11947C0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x11947C8", Offset = "0x11947C8", VA = "0x11947C8")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1194804", Offset = "0x1194804", VA = "0x1194804")]
	private void OnGenerateFinished()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1194838", Offset = "0x1194838", VA = "0x1194838")]
	public VRHUD()
	{
	}
}
[Token(Token = "0x200011A")]
public class VRProfilerToggle : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRProfilerToggle Instance;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform EyeCenter;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRMenu Menu;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuData MenuItem;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string LastError;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104FB28", Offset = "0x104FB28")]
	public List<GameObject> ShowItems;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRMenu menu;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _active;

	[Token(Token = "0x14000013")]
	public event Action<string> OnErrorLog
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x118C520", Offset = "0x118C520", VA = "0x118C520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059428", Offset = "0x1059428")]
		add
		{
		}
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x118C664", Offset = "0x118C664", VA = "0x118C664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059438", Offset = "0x1059438")]
		remove
		{
		}
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1194848", Offset = "0x1194848", VA = "0x1194848")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1194974", Offset = "0x1194974", VA = "0x1194974")]
	private void Start()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x11949E8", Offset = "0x11949E8", VA = "0x11949E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1194A5C", Offset = "0x1194A5C", VA = "0x1194A5C")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1194AE8", Offset = "0x1194AE8", VA = "0x1194AE8")]
	public void Open(MenuData data)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1194C1C", Offset = "0x1194C1C", VA = "0x1194C1C")]
	public void Close()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1194D38", Offset = "0x1194D38", VA = "0x1194D38")]
	public void Select(MenuData data)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1194EAC", Offset = "0x1194EAC", VA = "0x1194EAC")]
	private void MessageLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1194F2C", Offset = "0x1194F2C", VA = "0x1194F2C")]
	public VRProfilerToggle()
	{
	}
}
[Token(Token = "0x200011B")]
public class WeaponDisplay : SerializedMonoBehaviour
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104FB60", Offset = "0x104FB60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FB60", Offset = "0x104FB60")]
	public Weapon Weapon;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104FBAC", Offset = "0x104FBAC")]
	public ShootWeapon ShootWeapon;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x104FBBC", Offset = "0x104FBBC")]
	public DisplayData Display;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VerticalLayoutGroup LayoutGroup;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FBCC", Offset = "0x104FBCC")]
	public bool ShowReloadHint;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104FC04", Offset = "0x104FC04")]
	[InlineProperty]
	public List<ISideAction> OnReloadActions;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	public RectTransform rectTrans;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int lastSetting;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _currSetting;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PickableObject _pickable;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Side currentSide;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x119583C", Offset = "0x119583C", VA = "0x119583C")]
	public Side GetCurrentSide()
	{
		return default(Side);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1195844", Offset = "0x1195844", VA = "0x1195844")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x11958B4", Offset = "0x11958B4", VA = "0x11958B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x119590C", Offset = "0x119590C", VA = "0x119590C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1195BB8", Offset = "0x1195BB8", VA = "0x1195BB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1195EFC", Offset = "0x1195EFC", VA = "0x1195EFC")]
	public WeaponDisplay()
	{
	}
}
[Token(Token = "0x200011C")]
public class WeaponElement : MonoBehaviour
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public WeaponDisplay WeaponDisplay;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x118AEC8", Offset = "0x118AEC8", VA = "0x118AEC8")]
	public WeaponElement()
	{
	}
}
[Token(Token = "0x200011D")]
public class UnlockProgression : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200011E")]
	public class ProgressInfo
	{
		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Condition;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Initial;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Current;

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x1193030", Offset = "0x1193030", VA = "0x1193030")]
		public ProgressInfo()
		{
		}
	}

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnlockProgression Instance;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ShowInInspector]
	[ReadOnly]
	private Dictionary<PlayerClassData, Dictionary<ProgressBase, ProgressInfo>> ClassProgress;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ShowInInspector]
	[ReadOnly]
	private Dictionary<PlayerClassData.GroupInfo, Dictionary<ProgressBase, ProgressInfo>> UpgradeProgress;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _progress;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _condition;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x11927AC", Offset = "0x11927AC", VA = "0x11927AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1192800", Offset = "0x1192800", VA = "0x1192800")]
	public void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1191A30", Offset = "0x1191A30", VA = "0x1191A30")]
	public Dictionary<PlayerClassData.GroupInfo, List<ProgressInfo>> GetUpgradeProgression()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x119152C", Offset = "0x119152C", VA = "0x119152C")]
	public Dictionary<PlayerClassData, List<ProgressInfo>> GetClassProgression()
	{
		return null;
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1193038", Offset = "0x1193038", VA = "0x1193038")]
	public UnlockProgression()
	{
	}
}
[Token(Token = "0x200011F")]
public class AddCollider : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	public enum ColliderOptions
	{
		[Token(Token = "0x40005B1")]
		Box,
		[Token(Token = "0x40005B2")]
		Sphere,
		[Token(Token = "0x40005B3")]
		Capsule,
		[Token(Token = "0x40005B4")]
		Mesh
	}

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColliderOptions selectedCollider;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider currentCollider;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool parentCreated;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x132681C", Offset = "0x132681C", VA = "0x132681C")]
	private void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1326820", Offset = "0x1326820", VA = "0x1326820")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059448", Offset = "0x1059448")]
	private void ColliderAddition()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1326994", Offset = "0x1326994", VA = "0x1326994")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059458", Offset = "0x1059458")]
	private void PutInParentObject()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1326AA4", Offset = "0x1326AA4", VA = "0x1326AA4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059468", Offset = "0x1059468")]
	private void FinalizeAsset()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1326BD8", Offset = "0x1326BD8", VA = "0x1326BD8")]
	public AddCollider()
	{
	}
}
[Token(Token = "0x2000121")]
public class AdjustHandPositionDebugTool : MonoBehaviour
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup inputDevice;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lockRotation;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool lockMovement;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lockPos;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion lockRot;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DeviceSpecificArmaturePosition armaturePositionScript;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previousInput;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool adjust;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BooleanValueData key;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1326BE0", Offset = "0x1326BE0", VA = "0x1326BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1326F74", Offset = "0x1326F74", VA = "0x1326F74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1326D54", Offset = "0x1326D54", VA = "0x1326D54")]
	private void Instance_OnValueChanged(ValueData key, object val)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1327064", Offset = "0x1327064", VA = "0x1327064")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1327464", Offset = "0x1327464", VA = "0x1327464")]
	public AdjustHandPositionDebugTool()
	{
	}
}
[Token(Token = "0x2000122")]
public class DamageUnitHealthPart : MonoBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnitHealthPart unitHealthPart;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float debugDamage;

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x132A96C", Offset = "0x132A96C", VA = "0x132A96C")]
	public DamageUnitHealthPart()
	{
	}
}
[Token(Token = "0x2000123")]
public class SkinnedMeshRendererInfo : MonoBehaviour
{
	[Token(Token = "0x600054B")]
	[Address(RVA = "0x10EB838", Offset = "0x10EB838", VA = "0x10EB838")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x1059478", Offset = "0x1059478")]
	private void Test(bool refresh = false)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x10EBC70", Offset = "0x10EBC70", VA = "0x10EBC70")]
	public SkinnedMeshRendererInfo()
	{
	}
}
[Token(Token = "0x2000124")]
public class UtilitySavePose : MonoBehaviour
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Skeleton_Pose pose;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1193C60", Offset = "0x1193C60", VA = "0x1193C60")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x10594B0", Offset = "0x10594B0")]
	protected void SaveHandData()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x11944E4", Offset = "0x11944E4", VA = "0x11944E4")]
	public UtilitySavePose()
	{
	}
}
[Token(Token = "0x2000125")]
public class VaryAnimation : MonoBehaviour
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string key;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> values;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FCE0", Offset = "0x104FCE0")]
	public float selectedValue;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1194F9C", Offset = "0x1194F9C", VA = "0x1194F9C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x119502C", Offset = "0x119502C", VA = "0x119502C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x11950FC", Offset = "0x11950FC", VA = "0x11950FC")]
	public VaryAnimation()
	{
	}
}
[Token(Token = "0x2000126")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BBE4", Offset = "0x104BBE4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BBE4", Offset = "0x104BBE4")]
public class ChangeWeaponProfileSpawnPoints : SerializedMonoBehaviour
{
	[Token(Token = "0x2000127")]
	public class WeaponProfileAndSpawnPoints
	{
		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x104FD38", Offset = "0x104FD38")]
		public WeaponData WeaponData;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> BulletSpawnPoints;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnType spawnMode;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool changeAfterSec;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x104FD70", Offset = "0x104FD70")]
		public int shotsFiredMax;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x104FDAC", Offset = "0x104FDAC")]
		public int secToChange;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isUnlocked;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x104FDE8", Offset = "0x104FDE8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x104FDE8", Offset = "0x104FDE8")]
		[InlineProperty]
		public List<IAction> WeaponChangeActions;

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x13298EC", Offset = "0x13298EC", VA = "0x13298EC")]
		public WeaponProfileAndSpawnPoints()
		{
		}
	}

	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BC70", Offset = "0x104BC70")]
	private sealed class <ChangeWeaponAfterSec>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChangeWeaponProfileSpawnPoints <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055D")]
			[Address(RVA = "0x132987C", Offset = "0x132987C", VA = "0x132987C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0x13298E4", Offset = "0x13298E4", VA = "0x13298E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x13296F0", Offset = "0x13296F0", VA = "0x13296F0")]
		[DebuggerHidden]
		public <ChangeWeaponAfterSec>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x132978C", Offset = "0x132978C", VA = "0x132978C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1329790", Offset = "0x1329790", VA = "0x1329790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1329884", Offset = "0x1329884", VA = "0x1329884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public List<WeaponProfileAndSpawnPoints> WeaponProfileAndSpawnPointList;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Weapon targetWeapon;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _curShotsFired;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BaseAttack _baseAttack;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _nextSecToChange;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int _shotFiredWithCurWeapon;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _listIndex;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x13291D8", Offset = "0x13291D8", VA = "0x13291D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1329284", Offset = "0x1329284", VA = "0x1329284")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x10594C0", Offset = "0x10594C0")]
	private void StartWeaponBehaviour(bool obj)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x13295F8", Offset = "0x13295F8", VA = "0x13295F8")]
	private void FireShot()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1329618", Offset = "0x1329618", VA = "0x1329618")]
	private void IncreaseIndexAndChangeWeapon()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1329348", Offset = "0x1329348", VA = "0x1329348")]
	private void ChangeWeapon()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1329680", Offset = "0x1329680", VA = "0x1329680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10594D0", Offset = "0x10594D0")]
	public IEnumerator ChangeWeaponAfterSec()
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x132971C", Offset = "0x132971C", VA = "0x132971C")]
	public ChangeWeaponProfileSpawnPoints()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104BC80", Offset = "0x104BC80")]
public class GunAimAngleAdjuster : MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ValueData angleKey;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public float currentGunAimAngle;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GunAimAngleAdjuster instance;

	[Token(Token = "0x14000014")]
	public event Action<float> OnGunAimAngleChanged
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1345C84", Offset = "0x1345C84", VA = "0x1345C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059584", Offset = "0x1059584")]
		add
		{
		}
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1345D28", Offset = "0x1345D28", VA = "0x1345D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059594", Offset = "0x1059594")]
		remove
		{
		}
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x13459B8", Offset = "0x13459B8", VA = "0x13459B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1345DCC", Offset = "0x1345DCC", VA = "0x1345DCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1345B4C", Offset = "0x1345B4C", VA = "0x1345B4C")]
	private void Instance_OnValueChanged(ValueData key, object val)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1345EBC", Offset = "0x1345EBC", VA = "0x1345EBC")]
	public GunAimAngleAdjuster()
	{
	}
}
[Token(Token = "0x200012A")]
public class SmoothLineRenderer : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> transformPoints;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x10EBC80", Offset = "0x10EBC80", VA = "0x10EBC80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x10EBCDC", Offset = "0x10EBCDC", VA = "0x10EBCDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x10EBD9C", Offset = "0x10EBD9C", VA = "0x10EBD9C")]
	public SmoothLineRenderer()
	{
	}
}
[Token(Token = "0x200012B")]
public class ScrollbarAnalogStick : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup InputDevice;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform Container;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScrollSpeed;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 axis;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x10E9AE8", Offset = "0x10E9AE8", VA = "0x10E9AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x10E9C40", Offset = "0x10E9C40", VA = "0x10E9C40")]
	public ScrollbarAnalogStick()
	{
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200012C")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40005E2")]
		TRIANGLES,
		[Token(Token = "0x40005E3")]
		QUADS
	}
	[Token(Token = "0x200012D")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40005E5")]
		ABSORPTION,
		[Token(Token = "0x40005E6")]
		TRANSMISSION,
		[Token(Token = "0x40005E7")]
		SCATTERING
	}
	[Token(Token = "0x200012E")]
	public struct MeshGroup
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200012F")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000063")]
		public bool Highlight
		{
			[Token(Token = "0x600056B")]
			[Address(RVA = "0x159FD28", Offset = "0x159FD28", VA = "0x159FD28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600056C")]
			[Address(RVA = "0x159FD30", Offset = "0x159FD30", VA = "0x159FD30")]
			set
			{
			}
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x159FD3C", Offset = "0x159FD3C", VA = "0x159FD3C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x159FF08", Offset = "0x159FF08", VA = "0x159FF08", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x159FF30", Offset = "0x159FF30", VA = "0x159FF30", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x159FF58", Offset = "0x159FF58", VA = "0x159FF58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x159FE08", Offset = "0x159FE08", VA = "0x159FE08")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x15A01AC", Offset = "0x15A01AC", VA = "0x15A01AC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000064")]
		public bool InRange
		{
			[Token(Token = "0x6000574")]
			[Address(RVA = "0x15A0298", Offset = "0x15A0298", VA = "0x15A0298")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x15A02A0", Offset = "0x15A02A0", VA = "0x15A02A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public bool Targeted
		{
			[Token(Token = "0x6000576")]
			[Address(RVA = "0x15A0428", Offset = "0x15A0428", VA = "0x15A0428")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000577")]
			[Address(RVA = "0x15A0430", Offset = "0x15A0430", VA = "0x15A0430")]
			set
			{
			}
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x15A043C", Offset = "0x15A043C", VA = "0x15A043C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x15A02AC", Offset = "0x15A02AC", VA = "0x15A02AC")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x15A0608", Offset = "0x15A0608", VA = "0x15A0608")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x15A064C", Offset = "0x15A064C", VA = "0x15A064C")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x15A06A8", Offset = "0x15A06A8", VA = "0x15A06A8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BC94", Offset = "0x104BC94")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000066")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0x15A06B0", Offset = "0x15A06B0", VA = "0x15A06B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600057E")]
			[Address(RVA = "0x15A06B8", Offset = "0x15A06B8", VA = "0x15A06B8")]
			set
			{
			}
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x15A06D4", Offset = "0x15A06D4", VA = "0x15A06D4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x15A0860", Offset = "0x15A0860", VA = "0x15A0860", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x15A11F4", Offset = "0x15A11F4", VA = "0x15A11F4", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x15A17B0", Offset = "0x15A17B0", VA = "0x15A17B0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x15A1B90", Offset = "0x15A1B90", VA = "0x15A1B90")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x15A0B28", Offset = "0x15A0B28", VA = "0x15A0B28")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x15A1C6C", Offset = "0x15A1C6C", VA = "0x15A1C6C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x15A20A4", Offset = "0x15A20A4", VA = "0x15A20A4", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x15A20BC", Offset = "0x15A20BC", VA = "0x15A20BC", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x15A20C4", Offset = "0x15A20C4", VA = "0x15A20C4")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x15A388C", Offset = "0x15A388C", VA = "0x15A388C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x15A393C", Offset = "0x15A393C", VA = "0x15A393C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x15A39E8", Offset = "0x15A39E8", VA = "0x15A39E8")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000134")]
		public enum CrosshairState
		{
			[Token(Token = "0x400060E")]
			Disabled,
			[Token(Token = "0x400060F")]
			Enabled,
			[Token(Token = "0x4000610")]
			Targeted
		}

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x15A39F0", Offset = "0x15A39F0", VA = "0x15A39F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x15A056C", Offset = "0x15A056C", VA = "0x15A056C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x15A3A58", Offset = "0x15A3A58", VA = "0x15A3A58")]
		private void Update()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x15A3AA0", Offset = "0x15A3AA0", VA = "0x15A3AA0")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x15A6C3C", Offset = "0x15A6C3C", VA = "0x15A6C3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x15A6D08", Offset = "0x15A6D08", VA = "0x15A6D08")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x15A6D14", Offset = "0x15A6D14", VA = "0x15A6D14")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x15A6D20", Offset = "0x15A6D20", VA = "0x15A6D20")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x159E73C", Offset = "0x159E73C", VA = "0x159E73C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x159E794", Offset = "0x159E794", VA = "0x159E794")]
		private void Update()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x159EA38", Offset = "0x159EA38", VA = "0x159EA38")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x159EB28", Offset = "0x159EB28", VA = "0x159EB28")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x159E798", Offset = "0x159E798", VA = "0x159E798")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x159EC18", Offset = "0x159EC18", VA = "0x159EC18")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000138")]
		public enum ContactTest
		{
			[Token(Token = "0x4000622")]
			PerpenTest,
			[Token(Token = "0x4000623")]
			BackwardsPress
		}

		[Token(Token = "0x4000614")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000615")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000067")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x159ECB0", Offset = "0x159ECB0", VA = "0x159ECB0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000068")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x159ECB8", Offset = "0x159ECB8", VA = "0x159ECB8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x159ECC4", Offset = "0x159ECC4", VA = "0x159ECC4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x159EE14", Offset = "0x159EE14", VA = "0x159EE14")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x159F018", Offset = "0x159F018", VA = "0x159F018")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x159F178", Offset = "0x159F178", VA = "0x159F178")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x159F2D8", Offset = "0x159F2D8", VA = "0x159F2D8", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x159F79C", Offset = "0x159F79C", VA = "0x159F79C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x159F928", Offset = "0x159F928", VA = "0x159F928")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x159FA1C", Offset = "0x159FA1C", VA = "0x159FA1C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x159FB48", Offset = "0x159FB48", VA = "0x159FB48")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104FFB8", Offset = "0x104FFB8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104FFC8", Offset = "0x104FFC8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000069")]
		public Collider Collider
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x159FC34", Offset = "0x159FC34", VA = "0x159FC34", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10595A4", Offset = "0x10595A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x159FC3C", Offset = "0x159FC3C", VA = "0x159FC3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10595B4", Offset = "0x10595B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0x159FC44", Offset = "0x159FC44", VA = "0x159FC44", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10595C4", Offset = "0x10595C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x159FC4C", Offset = "0x159FC4C", VA = "0x159FC4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10595D4", Offset = "0x10595D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x159FC54", Offset = "0x159FC54", VA = "0x159FC54", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x159FCA4", Offset = "0x159FCA4", VA = "0x159FCA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x159FD20", Offset = "0x159FD20", VA = "0x159FD20")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700006C")]
		Collider Collider
		{
			[Token(Token = "0x60005AC")]
			get;
		}

		[Token(Token = "0x1700006D")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60005AD")]
			get;
		}

		[Token(Token = "0x1700006E")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60005AE")]
			get;
		}
	}
	[Token(Token = "0x200013B")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x159EF74", Offset = "0x159EF74", VA = "0x159EF74")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200013C")]
	public enum InteractionType
	{
		[Token(Token = "0x400062C")]
		Enter,
		[Token(Token = "0x400062D")]
		Stay,
		[Token(Token = "0x400062E")]
		Exit
	}
	[Token(Token = "0x200013D")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200013E")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000640")]
			Mesh,
			[Token(Token = "0x4000641")]
			Skeleton,
			[Token(Token = "0x4000642")]
			Both
		}

		[Token(Token = "0x200013F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BCF8", Offset = "0x104BCF8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700007A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005D1")]
				[Address(RVA = "0x15A4A7C", Offset = "0x15A4A7C", VA = "0x15A4A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005D3")]
				[Address(RVA = "0x15A4AE4", Offset = "0x15A4AE4", VA = "0x15A4AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005CE")]
			[Address(RVA = "0x15A4488", Offset = "0x15A4488", VA = "0x15A4488")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60005CF")]
			[Address(RVA = "0x15A485C", Offset = "0x15A485C", VA = "0x15A485C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005D0")]
			[Address(RVA = "0x15A4860", Offset = "0x15A4860", VA = "0x15A4860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x15A4A84", Offset = "0x15A4A84", VA = "0x15A4A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400062F")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104FFF8", Offset = "0x104FFF8")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700006F")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x15A2988", Offset = "0x15A2988", VA = "0x15A2988")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x15A3AA8", Offset = "0x15A3AA8", VA = "0x15A3AA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0x15A3510", Offset = "0x15A3510", VA = "0x15A3510")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x15A3B10", Offset = "0x15A3B10", VA = "0x15A3B10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x15A3B78", Offset = "0x15A3B78", VA = "0x15A3B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0x15A3BB0", Offset = "0x15A3BB0", VA = "0x15A3BB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0x15A3C18", Offset = "0x15A3C18", VA = "0x15A3C18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x15A3C50", Offset = "0x15A3C50", VA = "0x15A3C50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x15A3CB8", Offset = "0x15A3CB8", VA = "0x15A3CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x15A3CF0", Offset = "0x15A3CF0", VA = "0x15A3CF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x15A2954", Offset = "0x15A2954", VA = "0x15A2954")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x15A3D58", Offset = "0x15A3D58", VA = "0x15A3D58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x15A34DC", Offset = "0x15A34DC", VA = "0x15A34DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x15A3DBC", Offset = "0x15A3DBC", VA = "0x15A3DBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x15A3E20", Offset = "0x15A3E20", VA = "0x15A3E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x15A3E54", Offset = "0x15A3E54", VA = "0x15A3E54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x15A3EB8", Offset = "0x15A3EB8", VA = "0x15A3EB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x15A3EEC", Offset = "0x15A3EEC", VA = "0x15A3EEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x15A3F50", Offset = "0x15A3F50", VA = "0x15A3F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0x15A3F84", Offset = "0x15A3F84", VA = "0x15A3F84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x15A3FE8", Offset = "0x15A3FE8", VA = "0x15A3FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10595E4", Offset = "0x10595E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x15A4038", Offset = "0x15A4038", VA = "0x15A4038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10595F4", Offset = "0x10595F4")]
			private set
			{
			}
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x15A408C", Offset = "0x15A408C", VA = "0x15A408C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x15A4400", Offset = "0x15A4400", VA = "0x15A4400")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x15A4390", Offset = "0x15A4390", VA = "0x15A4390")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059604", Offset = "0x1059604")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x15A44B4", Offset = "0x15A44B4", VA = "0x15A44B4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x15A459C", Offset = "0x15A459C", VA = "0x15A459C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x15A3548", Offset = "0x15A3548", VA = "0x15A3548")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x15A27C4", Offset = "0x15A27C4", VA = "0x15A27C4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x15A477C", Offset = "0x15A477C", VA = "0x15A477C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000141")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60005E5")]
			[Address(RVA = "0x15A5234", Offset = "0x15A5234", VA = "0x15A5234")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700007C")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x15A4AEC", Offset = "0x15A4AEC", VA = "0x15A4AEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0x15A4AF4", Offset = "0x15A4AF4", VA = "0x15A4AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0x15A4AFC", Offset = "0x15A4AFC", VA = "0x15A4AFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0x15A4B04", Offset = "0x15A4B04", VA = "0x15A4B04", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x15A4B0C", Offset = "0x15A4B0C", VA = "0x15A4B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10596B8", Offset = "0x10596B8")]
			add
			{
			}
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x15A4BB0", Offset = "0x15A4BB0", VA = "0x15A4BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10596C8", Offset = "0x10596C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x15A4CC8", Offset = "0x15A4CC8", VA = "0x15A4CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10596D8", Offset = "0x10596D8")]
			add
			{
			}
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x15A4D6C", Offset = "0x15A4D6C", VA = "0x15A4D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10596E8", Offset = "0x10596E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60005DE")]
			[Address(RVA = "0x15A4E84", Offset = "0x15A4E84", VA = "0x15A4E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10596F8", Offset = "0x10596F8")]
			add
			{
			}
			[Token(Token = "0x60005DF")]
			[Address(RVA = "0x15A4F28", Offset = "0x15A4F28", VA = "0x15A4F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059708", Offset = "0x1059708")]
			remove
			{
			}
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x15A4C54", Offset = "0x15A4C54", VA = "0x15A4C54", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x15A4E10", Offset = "0x15A4E10", VA = "0x15A4E10", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x15A4FCC", Offset = "0x15A4FCC", VA = "0x15A4FCC", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60005E1")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x159EDB0", Offset = "0x159EDB0", VA = "0x159EDB0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x15A5108", Offset = "0x15A5108", VA = "0x15A5108", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x159FC2C", Offset = "0x159FC2C", VA = "0x159FC2C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400064E")]
		None,
		[Token(Token = "0x400064F")]
		Proximity,
		[Token(Token = "0x4000650")]
		Contact,
		[Token(Token = "0x4000651")]
		Action
	}
	[Token(Token = "0x2000143")]
	public enum InteractableState
	{
		[Token(Token = "0x4000653")]
		Default,
		[Token(Token = "0x4000654")]
		ProximityState,
		[Token(Token = "0x4000655")]
		ContactState,
		[Token(Token = "0x4000656")]
		ActionState
	}
	[Token(Token = "0x2000144")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x159F884", Offset = "0x159F884", VA = "0x159F884")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000080")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60005E7")]
			[Address(RVA = "0x15A5284", Offset = "0x15A5284", VA = "0x15A5284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x15A5040", Offset = "0x15A5040", VA = "0x15A5040")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x15A516C", Offset = "0x15A516C", VA = "0x15A516C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x15A52EC", Offset = "0x15A52EC", VA = "0x15A52EC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000147")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BD08", Offset = "0x104BD08")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400065F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000081")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005F4")]
				[Address(RVA = "0x15A63D4", Offset = "0x15A63D4", VA = "0x15A63D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000082")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005F6")]
				[Address(RVA = "0x15A643C", Offset = "0x15A643C", VA = "0x15A643C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005F0")]
			[Address(RVA = "0x15A5E98", Offset = "0x15A5E98", VA = "0x15A5E98")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x15A5FC4", Offset = "0x15A5FC4", VA = "0x15A5FC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x15A6038", Offset = "0x15A6038", VA = "0x15A6038", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005F3")]
			[Address(RVA = "0x15A5FE0", Offset = "0x15A5FE0", VA = "0x15A5FE0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x15A63DC", Offset = "0x15A63DC", VA = "0x15A63DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x15A5D90", Offset = "0x15A5D90", VA = "0x15A5D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x15A5E0C", Offset = "0x15A5E0C", VA = "0x15A5E0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059718", Offset = "0x1059718")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x15A5EC4", Offset = "0x15A5EC4", VA = "0x15A5EC4")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x15A5FBC", Offset = "0x15A5FBC", VA = "0x15A5FBC")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000083")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60005F7")]
			[Address(RVA = "0x15A2200", Offset = "0x15A2200", VA = "0x15A2200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x15A2368", Offset = "0x15A2368", VA = "0x15A2368")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x15A6444", Offset = "0x15A6444", VA = "0x15A6444")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x15A64F0", Offset = "0x15A64F0", VA = "0x15A64F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x15A67B8", Offset = "0x15A67B8", VA = "0x15A67B8")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x15A6800", Offset = "0x15A6800", VA = "0x15A6800")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x15A6A50", Offset = "0x15A6A50", VA = "0x15A6A50")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x15A6B7C", Offset = "0x15A6B7C", VA = "0x15A6B7C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200014A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BD18", Offset = "0x104BD18")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400067A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400067B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400067C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000088")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000610")]
				[Address(RVA = "0x15A3758", Offset = "0x15A3758", VA = "0x15A3758", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000089")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000612")]
				[Address(RVA = "0x15A37C0", Offset = "0x15A37C0", VA = "0x15A37C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600060D")]
			[Address(RVA = "0x15A2484", Offset = "0x15A2484", VA = "0x15A2484")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600060E")]
			[Address(RVA = "0x15A316C", Offset = "0x15A316C", VA = "0x15A316C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600060F")]
			[Address(RVA = "0x15A3170", Offset = "0x15A3170", VA = "0x15A3170", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000611")]
			[Address(RVA = "0x15A3760", Offset = "0x15A3760", VA = "0x15A3760", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400066F")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000084")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x15A20E4", Offset = "0x15A20E4", VA = "0x15A20E4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000085")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x15A20EC", Offset = "0x15A20EC", VA = "0x15A20EC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000086")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0x15A20F4", Offset = "0x15A20F4", VA = "0x15A20F4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public override bool EnableState
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x15A20FC", Offset = "0x15A20FC", VA = "0x15A20FC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000603")]
			[Address(RVA = "0x15A2128", Offset = "0x15A2128", VA = "0x15A2128", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x15A2164", Offset = "0x15A2164", VA = "0x15A2164", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x15A2414", Offset = "0x15A2414", VA = "0x15A2414")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10597CC", Offset = "0x10597CC")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x15A24B0", Offset = "0x15A24B0", VA = "0x15A24B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x15A29C0", Offset = "0x15A29C0", VA = "0x15A29C0")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x15A2C38", Offset = "0x15A2C38", VA = "0x15A2C38")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x15A2D78", Offset = "0x15A2D78", VA = "0x15A2D78", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x15A3040", Offset = "0x15A3040", VA = "0x15A3040", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x15A3044", Offset = "0x15A3044", VA = "0x15A3044", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x15A3048", Offset = "0x15A3048", VA = "0x15A3048")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1050088", Offset = "0x1050088")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1050098", Offset = "0x1050098")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10500A8", Offset = "0x10500A8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700008A")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0x15A37C8", Offset = "0x15A37C8", VA = "0x15A37C8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059880", Offset = "0x1059880")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000614")]
			[Address(RVA = "0x15A37D0", Offset = "0x15A37D0", VA = "0x15A37D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059890", Offset = "0x1059890")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public bool EnableState
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0x15A37D8", Offset = "0x15A37D8", VA = "0x15A37D8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000616")]
			[Address(RVA = "0x15A37F4", Offset = "0x15A37F4", VA = "0x15A37F4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0x15A3814", Offset = "0x15A3814", VA = "0x15A3814", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10598A0", Offset = "0x10598A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000618")]
			[Address(RVA = "0x15A381C", Offset = "0x15A381C", VA = "0x15A381C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10598B0", Offset = "0x10598B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public float SphereRadius
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x15A3828", Offset = "0x15A3828", VA = "0x15A3828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10598C0", Offset = "0x10598C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600061A")]
			[Address(RVA = "0x15A3830", Offset = "0x15A3830", VA = "0x15A3830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10598D0", Offset = "0x10598D0")]
			private set
			{
			}
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x15A3838", Offset = "0x15A3838", VA = "0x15A3838")]
		private void Awake()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x15A3880", Offset = "0x15A3880", VA = "0x15A3880", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x15A3884", Offset = "0x15A3884", VA = "0x15A3884")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200014C")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000682")]
		None = 0,
		[Token(Token = "0x4000683")]
		Ray = 1,
		[Token(Token = "0x4000684")]
		Poke = 4,
		[Token(Token = "0x4000685")]
		All = -1
	}
	[Token(Token = "0x200014D")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000687")]
		Inactive,
		[Token(Token = "0x4000688")]
		PrimaryInputDown,
		[Token(Token = "0x4000689")]
		PrimaryInputDownStay,
		[Token(Token = "0x400068A")]
		PrimaryInputUp
	}
	[Token(Token = "0x200014E")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x15A2FFC", Offset = "0x15A2FFC", VA = "0x15A2FFC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200014F")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10500B8", Offset = "0x10500B8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10500C8", Offset = "0x10500C8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10500D8", Offset = "0x10500D8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700008E")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0x159FB40", Offset = "0x159FB40", VA = "0x159FB40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000620")]
			[Address(RVA = "0x15A5368", Offset = "0x15A5368", VA = "0x15A5368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10598E0", Offset = "0x10598E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000621")]
			[Address(RVA = "0x15A5370", Offset = "0x15A5370", VA = "0x15A5370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10598F0", Offset = "0x10598F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000622")]
			get;
		}

		[Token(Token = "0x17000091")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000623")]
			get;
		}

		[Token(Token = "0x17000092")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000624")]
			get;
		}

		[Token(Token = "0x17000093")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000625")]
			[Address(RVA = "0x15A537C", Offset = "0x15A537C", VA = "0x15A537C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059900", Offset = "0x1059900")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000626")]
			[Address(RVA = "0x15A5388", Offset = "0x15A5388", VA = "0x15A5388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059910", Offset = "0x1059910")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0x15A5394", Offset = "0x15A5394", VA = "0x15A5394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059920", Offset = "0x1059920")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000628")]
			[Address(RVA = "0x15A53A0", Offset = "0x15A53A0", VA = "0x15A53A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059930", Offset = "0x1059930")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600062D")]
			get;
			[Token(Token = "0x600062E")]
			set;
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x15A53AC", Offset = "0x15A53AC", VA = "0x15A53AC")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600062A")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600062B")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600062C")]
		public abstract void DeFocus();

		[Token(Token = "0x600062F")]
		public abstract void Initialize();

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x15A53B4", Offset = "0x15A53B4", VA = "0x15A53B4")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x15A5404", Offset = "0x15A5404", VA = "0x15A5404")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x15A545C", Offset = "0x15A545C", VA = "0x15A545C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x15A56A0", Offset = "0x15A56A0", VA = "0x15A56A0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x15A305C", Offset = "0x15A305C", VA = "0x15A305C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000096")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000635")]
			get;
		}

		[Token(Token = "0x17000097")]
		bool EnableState
		{
			[Token(Token = "0x6000637")]
			get;
			[Token(Token = "0x6000638")]
			set;
		}

		[Token(Token = "0x17000098")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000639")]
			get;
			[Token(Token = "0x600063A")]
			set;
		}

		[Token(Token = "0x6000636")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000151")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000152")]
		private enum PinchState
		{
			[Token(Token = "0x400069B")]
			None,
			[Token(Token = "0x400069C")]
			PinchDown,
			[Token(Token = "0x400069D")]
			PinchStay,
			[Token(Token = "0x400069E")]
			PinchUp
		}

		[Token(Token = "0x4000697")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000099")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0x15A6D28", Offset = "0x15A6D28", VA = "0x15A6D28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0x15A6DB4", Offset = "0x15A6DB4", VA = "0x15A6DB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009B")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0x15A6E40", Offset = "0x15A6E40", VA = "0x15A6E40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x15A6ECC", Offset = "0x15A6ECC", VA = "0x15A6ECC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x15A6EF8", Offset = "0x15A6EF8", VA = "0x15A6EF8")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400069F")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40006A0")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40006A1")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40006A2")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40006A3")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10500F8", Offset = "0x10500F8")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700009C")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000640")]
			[Address(RVA = "0x15A707C", Offset = "0x15A707C", VA = "0x15A707C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700009D")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000641")]
			[Address(RVA = "0x15A7084", Offset = "0x15A7084", VA = "0x15A7084", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700009E")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000642")]
			[Address(RVA = "0x15A70EC", Offset = "0x15A70EC", VA = "0x15A70EC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009F")]
		public override bool EnableState
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0x15A70F4", Offset = "0x15A70F4", VA = "0x15A70F4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000644")]
			[Address(RVA = "0x15A7110", Offset = "0x15A7110", VA = "0x15A7110", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x15A7130", Offset = "0x15A7130", VA = "0x15A7130", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x15A7188", Offset = "0x15A7188", VA = "0x15A7188")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x15A7224", Offset = "0x15A7224", VA = "0x15A7224")]
		private void Update()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x15A74EC", Offset = "0x15A74EC", VA = "0x15A74EC")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x15A75E8", Offset = "0x15A75E8", VA = "0x15A75E8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x15A794C", Offset = "0x15A794C", VA = "0x15A794C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x15A7AF0", Offset = "0x15A7AF0", VA = "0x15A7AF0")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x15A7C18", Offset = "0x15A7C18", VA = "0x15A7C18")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x15A7F50", Offset = "0x15A7F50", VA = "0x15A7F50")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x15A8360", Offset = "0x15A8360", VA = "0x15A8360", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x15A8398", Offset = "0x15A8398", VA = "0x15A8398", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x15A83D0", Offset = "0x15A83D0", VA = "0x15A83D0")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40006AF")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40006B0")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105016C", Offset = "0x105016C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000A0")]
		public bool EnableState
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0x11CC004", Offset = "0x11CC004", VA = "0x11CC004", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000652")]
			[Address(RVA = "0x11CC020", Offset = "0x11CC020", VA = "0x11CC020", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0x11CC078", Offset = "0x11CC078", VA = "0x11CC078", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000654")]
			[Address(RVA = "0x11CC080", Offset = "0x11CC080", VA = "0x11CC080", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000656")]
			[Address(RVA = "0x11CC2E4", Offset = "0x11CC2E4", VA = "0x11CC2E4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059940", Offset = "0x1059940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000657")]
			[Address(RVA = "0x11CC2EC", Offset = "0x11CC2EC", VA = "0x11CC2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059950", Offset = "0x1059950")]
			set
			{
			}
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x11CC0BC", Offset = "0x11CC0BC", VA = "0x11CC0BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x11CC2F4", Offset = "0x11CC2F4", VA = "0x11CC2F4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x11CC394", Offset = "0x11CC394", VA = "0x11CC394")]
		private void Update()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x11CC6C0", Offset = "0x11CC6C0", VA = "0x11CC6C0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x11CC8B0", Offset = "0x11CC8B0", VA = "0x11CC8B0")]
		public RayToolView()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BD38", Offset = "0x104BD38")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000156")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BD9C", Offset = "0x104BD9C")]
		private sealed class <>c
		{
			[Token(Token = "0x40006D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40006D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000669")]
			[Address(RVA = "0x159E3CC", Offset = "0x159E3CC", VA = "0x159E3CC")]
			public <>c()
			{
			}

			[Token(Token = "0x600066A")]
			[Address(RVA = "0x159E3D4", Offset = "0x159E3D4", VA = "0x159E3D4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006B9")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40006BA")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40006BB")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40006BC")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40006BD")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40006BE")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40006BF")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40006C0")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40006C1")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40006C2")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40006C3")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x159D610", Offset = "0x159D610", VA = "0x159D610")]
		private void Awake()
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x159D668", Offset = "0x159D668", VA = "0x159D668")]
		private void Start()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x159DA70", Offset = "0x159DA70", VA = "0x159DA70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x159DB3C", Offset = "0x159DB3C", VA = "0x159DB3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x159DC48", Offset = "0x159DC48", VA = "0x159DC48")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x159DF80", Offset = "0x159DF80", VA = "0x159DF80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x159E0E8", Offset = "0x159E0E8", VA = "0x159E0E8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x159E234", Offset = "0x159E234", VA = "0x159E234")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x159DCE4", Offset = "0x159DCE4", VA = "0x159DCE4")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x159DD84", Offset = "0x159DD84", VA = "0x159DD84")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x159D8C4", Offset = "0x159D8C4", VA = "0x159D8C4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x159E350", Offset = "0x159E350", VA = "0x159E350")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public enum HandPoseId
	{
		[Token(Token = "0x40006D8")]
		Default,
		[Token(Token = "0x40006D9")]
		Generic,
		[Token(Token = "0x40006DA")]
		PingPongBall,
		[Token(Token = "0x40006DB")]
		Controller
	}
	[Token(Token = "0x2000158")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000A3")]
		public bool AllowPointing
		{
			[Token(Token = "0x600066B")]
			[Address(RVA = "0x159E400", Offset = "0x159E400", VA = "0x159E400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A4")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600066C")]
			[Address(RVA = "0x159E408", Offset = "0x159E408", VA = "0x159E408")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A5")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600066D")]
			[Address(RVA = "0x159E410", Offset = "0x159E410", VA = "0x159E410")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x159E418", Offset = "0x159E418", VA = "0x159E418")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x159E420", Offset = "0x159E420", VA = "0x159E420")]
		private void Update()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x159E694", Offset = "0x159E694", VA = "0x159E694")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x159E6F0", Offset = "0x159E6F0", VA = "0x159E6F0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x159E734", Offset = "0x159E734", VA = "0x159E734")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200015A")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x10501FC", Offset = "0x10501FC")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x159AEDC", Offset = "0x159AEDC", VA = "0x159AEDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x159AEE0", Offset = "0x159AEE0", VA = "0x159AEE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x159AFA0", Offset = "0x159AFA0", VA = "0x159AFA0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050248", Offset = "0x1050248")]
		public bool autoRetrigger;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x1050280", Offset = "0x1050280")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10502A4", Offset = "0x10502A4")]
		public Transform[] playPositions;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1592130", Offset = "0x1592130", VA = "0x1592130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x15922B4", Offset = "0x15922B4", VA = "0x15922B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1592490", Offset = "0x1592490", VA = "0x1592490")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1592314", Offset = "0x1592314", VA = "0x1592314")]
		public void Play()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x15925D0", Offset = "0x15925D0", VA = "0x15925D0")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1592744", Offset = "0x1592744", VA = "0x1592744")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40006EF")]
		Default,
		[Token(Token = "0x40006F0")]
		Preload,
		[Token(Token = "0x40006F1")]
		ManualPreload
	}
	[Token(Token = "0x200015D")]
	public enum Fade
	{
		[Token(Token = "0x40006F3")]
		In,
		[Token(Token = "0x40006F4")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public class SoundGroup
	{
		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10502DC", Offset = "0x10502DC")]
		public int maxPlayingSounds;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x159ADBC", Offset = "0x159ADBC", VA = "0x159ADBC")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x159AE50", Offset = "0x159AE50", VA = "0x159AE50")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x1599828", Offset = "0x1599828", VA = "0x1599828")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x1599968", Offset = "0x1599968", VA = "0x1599968")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x159A420", Offset = "0x159A420", VA = "0x159A420")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200015F")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000160")]
		public enum Fade
		{
			[Token(Token = "0x400071C")]
			In,
			[Token(Token = "0x400071D")]
			Out
		}

		[Token(Token = "0x2000161")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BDAC", Offset = "0x104BDAC")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400071E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x1596968", Offset = "0x1596968", VA = "0x1596968")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x15992E4", Offset = "0x15992E4", VA = "0x15992E4")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000162")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BDBC", Offset = "0x104BDBC")]
		private sealed class <>c
		{
			[Token(Token = "0x400071F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x159924C", Offset = "0x159924C", VA = "0x159924C")]
			public <>c()
			{
			}

			[Token(Token = "0x60006BA")]
			[Address(RVA = "0x1599254", Offset = "0x1599254", VA = "0x1599254")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050308", Offset = "0x1050308")]
		public bool makePersistent;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050340", Offset = "0x1050340")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050378", Offset = "0x1050378")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10503B0", Offset = "0x10503B0")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10503E8", Offset = "0x10503E8")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050420", Offset = "0x1050420")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050458", Offset = "0x1050458")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050490", Offset = "0x1050490")]
		public bool verboseLogging;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10504C8", Offset = "0x10504C8")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050500", Offset = "0x1050500")]
		public float volumeSoundFX;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050538", Offset = "0x1050538")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000A6")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x1592804", Offset = "0x1592804", VA = "0x1592804")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A7")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000682")]
			[Address(RVA = "0x15928E4", Offset = "0x15928E4", VA = "0x15928E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0x159294C", Offset = "0x159294C", VA = "0x159294C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A9")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000684")]
			[Address(RVA = "0x15929C0", Offset = "0x15929C0", VA = "0x15929C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AA")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0x1592A34", Offset = "0x1592A34", VA = "0x1592A34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x1592AA8", Offset = "0x1592AA8", VA = "0x1592AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0x1592B1C", Offset = "0x1592B1C", VA = "0x1592B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0x159488C", Offset = "0x159488C", VA = "0x159488C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1592B90", Offset = "0x1592B90", VA = "0x1592B90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1592DB8", Offset = "0x1592DB8", VA = "0x1592DB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x1592B94", Offset = "0x1592B94", VA = "0x1592B94")]
		private void Init()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x1593A04", Offset = "0x1593A04", VA = "0x1593A04")]
		private void Update()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x1592F10", Offset = "0x1592F10", VA = "0x1592F10")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1594028", Offset = "0x1594028", VA = "0x1594028")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x15941A8", Offset = "0x15941A8", VA = "0x15941A8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1594344", Offset = "0x1594344", VA = "0x1594344")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1594444", Offset = "0x1594444", VA = "0x1594444")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x15944D4", Offset = "0x15944D4", VA = "0x15944D4")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x15948F4", Offset = "0x15948F4", VA = "0x15948F4")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x159496C", Offset = "0x159496C", VA = "0x159496C")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x159335C", Offset = "0x159335C", VA = "0x159335C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1593A08", Offset = "0x1593A08", VA = "0x1593A08")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1594BFC", Offset = "0x1594BFC", VA = "0x1594BFC")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1594D00", Offset = "0x1594D00", VA = "0x1594D00")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1594E08", Offset = "0x1594E08", VA = "0x1594E08")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1594AC4", Offset = "0x1594AC4", VA = "0x1594AC4")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1594F74", Offset = "0x1594F74", VA = "0x1594F74")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x15950C8", Offset = "0x15950C8", VA = "0x15950C8")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x1595278", Offset = "0x1595278", VA = "0x1595278")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x1592520", Offset = "0x1592520", VA = "0x1592520")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x1592694", Offset = "0x1592694", VA = "0x1592694")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x1595424", Offset = "0x1595424", VA = "0x1595424")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x15954F0", Offset = "0x15954F0", VA = "0x15954F0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x1595584", Offset = "0x1595584", VA = "0x1595584")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1595648", Offset = "0x1595648", VA = "0x1595648")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x15956EC", Offset = "0x15956EC", VA = "0x15956EC")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x15957CC", Offset = "0x15957CC", VA = "0x15957CC")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x15962B0", Offset = "0x15962B0", VA = "0x15962B0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x1596970", Offset = "0x1596970", VA = "0x1596970")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x1596B50", Offset = "0x1596B50", VA = "0x1596B50")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x1597894", Offset = "0x1597894", VA = "0x1597894")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x15959D4", Offset = "0x15959D4", VA = "0x15959D4")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x15979B4", Offset = "0x15979B4", VA = "0x15979B4")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x1597A88", Offset = "0x1597A88", VA = "0x1597A88")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x1597B68", Offset = "0x1597B68", VA = "0x1597B68")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x1597F20", Offset = "0x1597F20", VA = "0x1597F20")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x159811C", Offset = "0x159811C", VA = "0x159811C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x1598238", Offset = "0x1598238", VA = "0x1598238")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x1598400", Offset = "0x1598400", VA = "0x1598400")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x15984D8", Offset = "0x15984D8", VA = "0x15984D8")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x159860C", Offset = "0x159860C", VA = "0x159860C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x15989F8", Offset = "0x15989F8", VA = "0x15989F8")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000722")]
		None = -1,
		[Token(Token = "0x4000723")]
		Reserved,
		[Token(Token = "0x4000724")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x15993E0", Offset = "0x15993E0", VA = "0x15993E0")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x1599384", Offset = "0x1599384", VA = "0x1599384")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000167")]
		public enum FadeState
		{
			[Token(Token = "0x400073B")]
			Null,
			[Token(Token = "0x400073C")]
			FadingIn,
			[Token(Token = "0x400073D")]
			FadingOut,
			[Token(Token = "0x400073E")]
			Ducking
		}

		[Token(Token = "0x2000168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BDCC", Offset = "0x104BDCC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400073F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170000B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006E9")]
				[Address(RVA = "0x1599E2C", Offset = "0x1599E2C", VA = "0x1599E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006EB")]
				[Address(RVA = "0x1599E94", Offset = "0x1599E94", VA = "0x1599E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x1599B0C", Offset = "0x1599B0C", VA = "0x1599B0C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60006E7")]
			[Address(RVA = "0x1599D3C", Offset = "0x1599D3C", VA = "0x1599D3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x1599D40", Offset = "0x1599D40", VA = "0x1599D40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006EA")]
			[Address(RVA = "0x1599E34", Offset = "0x1599E34", VA = "0x1599E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000169")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BDDC", Offset = "0x104BDDC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x400074A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x400074B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x400074C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400074D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170000B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006EF")]
				[Address(RVA = "0x159A2E0", Offset = "0x159A2E0", VA = "0x159A2E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006F1")]
				[Address(RVA = "0x159A348", Offset = "0x159A348", VA = "0x159A348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x1599CCC", Offset = "0x1599CCC", VA = "0x1599CCC")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60006ED")]
			[Address(RVA = "0x159A174", Offset = "0x159A174", VA = "0x159A174", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x159A178", Offset = "0x159A178", VA = "0x159A178", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006F0")]
			[Address(RVA = "0x159A2E8", Offset = "0x159A2E8", VA = "0x159A2E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200016A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BDEC", Offset = "0x104BDEC")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400074E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400074F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170000BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006F5")]
				[Address(RVA = "0x159A104", Offset = "0x159A104", VA = "0x159A104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006F7")]
				[Address(RVA = "0x159A16C", Offset = "0x159A16C", VA = "0x159A16C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x1599CF8", Offset = "0x1599CF8", VA = "0x1599CF8")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x1599E9C", Offset = "0x1599E9C", VA = "0x1599E9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x1599EA0", Offset = "0x1599EA0", VA = "0x1599EA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x159A10C", Offset = "0x159A10C", VA = "0x159A10C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000AE")]
		public float volume
		{
			[Token(Token = "0x60006BD")]
			[Address(RVA = "0x1597878", Offset = "0x1597878", VA = "0x1597878")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x1599480", Offset = "0x1599480", VA = "0x1599480")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public float pitch
		{
			[Token(Token = "0x60006BF")]
			[Address(RVA = "0x159949C", Offset = "0x159949C", VA = "0x159949C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006C0")]
			[Address(RVA = "0x15994B8", Offset = "0x15994B8", VA = "0x15994B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public AudioClip clip
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x15994D4", Offset = "0x15994D4", VA = "0x15994D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006C2")]
			[Address(RVA = "0x15994F0", Offset = "0x15994F0", VA = "0x15994F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public float time
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x159950C", Offset = "0x159950C", VA = "0x159950C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0x15957B0", Offset = "0x15957B0", VA = "0x15957B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public float length
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x1599528", Offset = "0x1599528", VA = "0x1599528")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B3")]
		public bool loop
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x15995E0", Offset = "0x15995E0", VA = "0x15995E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x15995FC", Offset = "0x15995FC", VA = "0x15995FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public bool mute
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x159961C", Offset = "0x159961C", VA = "0x159961C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x1599638", Offset = "0x1599638", VA = "0x1599638")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x1599658", Offset = "0x1599658", VA = "0x1599658")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x1599674", Offset = "0x1599674", VA = "0x1599674")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public bool isPlaying
		{
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x1599690", Offset = "0x1599690", VA = "0x1599690")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x15996AC", Offset = "0x15996AC", VA = "0x15996AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1597864", Offset = "0x1597864", VA = "0x1597864")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x15998B8", Offset = "0x15998B8", VA = "0x15998B8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1597B60", Offset = "0x1597B60", VA = "0x1597B60")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x15998C0", Offset = "0x15998C0", VA = "0x15998C0")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x15998C8", Offset = "0x15998C8", VA = "0x15998C8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1598358", Offset = "0x1598358", VA = "0x1598358")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1594B90", Offset = "0x1594B90", VA = "0x1594B90")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x15998D0", Offset = "0x15998D0", VA = "0x15998D0")]
		public void Play()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1599930", Offset = "0x1599930", VA = "0x1599930")]
		public void Pause()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x15949E4", Offset = "0x15949E4", VA = "0x15949E4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x15999F8", Offset = "0x15999F8", VA = "0x15999F8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1597E24", Offset = "0x1597E24", VA = "0x1597E24")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1598064", Offset = "0x1598064", VA = "0x1598064")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1594F34", Offset = "0x1594F34", VA = "0x1594F34")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1599A50", Offset = "0x1599A50", VA = "0x1599A50")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1599A7C", Offset = "0x1599A7C", VA = "0x1599A7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059960", Offset = "0x1059960")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1599B38", Offset = "0x1599B38", VA = "0x1599B38")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1595330", Offset = "0x1595330", VA = "0x1595330")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x15953AC", Offset = "0x15953AC", VA = "0x15953AC")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x15951E0", Offset = "0x15951E0", VA = "0x15951E0")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x159502C", Offset = "0x159502C", VA = "0x159502C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1599BA0", Offset = "0x1599BA0", VA = "0x1599BA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10599C4", Offset = "0x10599C4")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1599C24", Offset = "0x1599C24", VA = "0x1599C24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059A28", Offset = "0x1059A28")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1599D24", Offset = "0x1599D24", VA = "0x1599D24")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public enum SoundFXNext
	{
		[Token(Token = "0x400075B")]
		Random,
		[Token(Token = "0x400075C")]
		Sequential
	}
	[Token(Token = "0x200016C")]
	public enum FreqHint
	{
		[Token(Token = "0x400075E")]
		None,
		[Token(Token = "0x400075F")]
		Wide,
		[Token(Token = "0x4000760")]
		Narrow
	}
	[Token(Token = "0x200016D")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000762")]
		VeryLow = -2,
		[Token(Token = "0x4000763")]
		Low,
		[Token(Token = "0x4000764")]
		Default,
		[Token(Token = "0x4000765")]
		High,
		[Token(Token = "0x4000766")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public class OSPProps
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050620", Offset = "0x1050620")]
		public bool enableSpatialization;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050658", Offset = "0x1050658")]
		public bool useFastOverride;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1050690", Offset = "0x1050690")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050690", Offset = "0x1050690")]
		public float gain;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10506E4", Offset = "0x10506E4")]
		public bool enableInvSquare;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105071C", Offset = "0x105071C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105071C", Offset = "0x105071C")]
		public float volumetric;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050774", Offset = "0x1050774")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x1050774", Offset = "0x1050774")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x15993F0", Offset = "0x15993F0", VA = "0x15993F0")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class SoundFX
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10507D4", Offset = "0x10507D4")]
		public string name;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105080C", Offset = "0x105080C")]
		public SoundFXNext playback;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1050844", Offset = "0x1050844")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050844", Offset = "0x1050844")]
		public float volume;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x1050898", Offset = "0x1050898")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050898", Offset = "0x1050898")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x10508F4", Offset = "0x10508F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10508F4", Offset = "0x10508F4")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050954", Offset = "0x1050954")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105098C", Offset = "0x105098C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10509C4", Offset = "0x10509C4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10509FC", Offset = "0x10509FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10509FC", Offset = "0x10509FC")]
		public float spread;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1050A54", Offset = "0x1050A54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050A54", Offset = "0x1050A54")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050AA8", Offset = "0x1050AA8")]
		public SoundPriority priority;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050AE0", Offset = "0x1050AE0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x1050AE0", Offset = "0x1050AE0")]
		public Vector2 delay;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050B3C", Offset = "0x1050B3C")]
		public bool looping;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050B74", Offset = "0x1050B74")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000BD")]
		public int Length
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x159A350", Offset = "0x159A350", VA = "0x159A350")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000BE")]
		public bool IsValid
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x159A36C", Offset = "0x159A36C", VA = "0x159A36C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		public SoundGroup Group
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x159A410", Offset = "0x159A410", VA = "0x159A410")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x159A418", Offset = "0x159A418", VA = "0x159A418")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x159776C", Offset = "0x159776C", VA = "0x159776C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C1")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x15977A0", Offset = "0x15977A0", VA = "0x15977A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1598D00", Offset = "0x1598D00", VA = "0x1598D00")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x159769C", Offset = "0x159769C", VA = "0x159769C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x15977C4", Offset = "0x15977C4", VA = "0x15977C4")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1597778", Offset = "0x1597778", VA = "0x1597778")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x159A440", Offset = "0x159A440", VA = "0x159A440")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x15977B8", Offset = "0x15977B8", VA = "0x15977B8")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x159A53C", Offset = "0x159A53C", VA = "0x159A53C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x159A618", Offset = "0x159A618", VA = "0x159A618")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x159A72C", Offset = "0x159A72C", VA = "0x159A72C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x159A7B8", Offset = "0x159A7B8", VA = "0x159A7B8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x159A84C", Offset = "0x159A84C", VA = "0x159A84C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x159A8D8", Offset = "0x159A8D8", VA = "0x159A8D8")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x159A964", Offset = "0x159A964", VA = "0x159A964")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000170")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000C2")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x159A9DC", Offset = "0x159A9DC", VA = "0x159A9DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public string name
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x159AAD0", Offset = "0x159AAD0", VA = "0x159AAD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x159AAD8", Offset = "0x159AAD8", VA = "0x159AAD8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public int Length
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x159AAE0", Offset = "0x159AAE0", VA = "0x159AAE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C5")]
		public bool IsValid
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x159AB24", Offset = "0x159AB24", VA = "0x159AB24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x159AA0C", Offset = "0x159AA0C", VA = "0x159AA0C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x159AB5C", Offset = "0x159AB5C", VA = "0x159AB5C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x159AB94", Offset = "0x159AB94", VA = "0x159AB94")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x159ABD4", Offset = "0x159ABD4", VA = "0x159ABD4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x15924A0", Offset = "0x15924A0", VA = "0x15924A0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x159AC1C", Offset = "0x159AC1C", VA = "0x159AC1C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x159AC5C", Offset = "0x159AC5C", VA = "0x159AC5C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x159ACAC", Offset = "0x159ACAC", VA = "0x159ACAC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x159ACE4", Offset = "0x159ACE4", VA = "0x159ACE4")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x159AD24", Offset = "0x159AD24", VA = "0x159AD24")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x159AD5C", Offset = "0x159AD5C", VA = "0x159AD5C")]
		public SoundFXRef()
		{
		}
	}
}
namespace LIV.Lesp
{
	[Token(Token = "0x2000171")]
	public struct XRPose
	{
		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rw;

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1347D90", Offset = "0x1347D90", VA = "0x1347D90")]
		public static XRPose FromPositionRotation(Vector3 position, Quaternion rotation)
		{
			return default(XRPose);
		}
	}
	[Token(Token = "0x2000172")]
	public struct InputPayload_OculusController
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint buttons;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint touches;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float joystickX;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float joystickY;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float gripTrigger;
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000173")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4000791")]
		NONE = 0u,
		[Token(Token = "0x4000792")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4000793")]
		STAGE = 2u,
		[Token(Token = "0x4000794")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4000795")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BE0C", Offset = "0x104BE0C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BE0C", Offset = "0x104BE0C")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x2000175")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BE6C", Offset = "0x104BE6C")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x170000D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000747")]
				[Address(RVA = "0x134924C", Offset = "0x134924C", VA = "0x134924C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000749")]
				[Address(RVA = "0x13492B4", Offset = "0x13492B4", VA = "0x13492B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000744")]
			[Address(RVA = "0x1348750", Offset = "0x1348750", VA = "0x1348750")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6000745")]
			[Address(RVA = "0x13490A0", Offset = "0x13490A0", VA = "0x13490A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000746")]
			[Address(RVA = "0x13490A4", Offset = "0x13490A4", VA = "0x13490A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000748")]
			[Address(RVA = "0x1349254", Offset = "0x1349254", VA = "0x1349254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050BAC", Offset = "0x1050BAC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050BAC", Offset = "0x1050BAC")]
		private Transform _stage;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050C1C", Offset = "0x1050C1C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050C1C", Offset = "0x1050C1C")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050C8C", Offset = "0x1050C8C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050C8C", Offset = "0x1050C8C")]
		private Camera _HMDCamera;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050CFC", Offset = "0x1050CFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050CFC", Offset = "0x1050CFC")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050D6C", Offset = "0x1050D6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050D6C", Offset = "0x1050D6C")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050DDC", Offset = "0x1050DDC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050DDC", Offset = "0x1050DDC")]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050E4C", Offset = "0x1050E4C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050E4C", Offset = "0x1050E4C")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050EBC", Offset = "0x1050EBC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1050EBC", Offset = "0x1050EBC")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x170000C6")]
		public Transform stage
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0x1347DA4", Offset = "0x1347DA4", VA = "0x1347DA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600071E")]
			[Address(RVA = "0x1347E44", Offset = "0x1347E44", VA = "0x1347E44")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x105D650", Offset = "0x105D650")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x1347F4C", Offset = "0x1347F4C", VA = "0x1347F4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000720")]
			[Address(RVA = "0x1347F50", Offset = "0x1347F50", VA = "0x1347F50")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0x1347F54", Offset = "0x1347F54", VA = "0x1347F54")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000C9")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x1348034", Offset = "0x1348034", VA = "0x1348034")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000CA")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000723")]
			[Address(RVA = "0x1348114", Offset = "0x1348114", VA = "0x1348114")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000724")]
			[Address(RVA = "0x134811C", Offset = "0x134811C", VA = "0x134811C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0x1348124", Offset = "0x1348124", VA = "0x1348124")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000726")]
			[Address(RVA = "0x134812C", Offset = "0x134812C", VA = "0x134812C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x1348220", Offset = "0x1348220", VA = "0x1348220")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000728")]
			[Address(RVA = "0x1348228", Offset = "0x1348228", VA = "0x1348228")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x13482BC", Offset = "0x13482BC", VA = "0x13482BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600072A")]
			[Address(RVA = "0x13482C4", Offset = "0x13482C4", VA = "0x13482C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x13482D0", Offset = "0x13482D0", VA = "0x13482D0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x13482D8", Offset = "0x13482D8", VA = "0x13482D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x13482E0", Offset = "0x13482E0", VA = "0x13482E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x13482E8", Offset = "0x13482E8", VA = "0x13482E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0x1348308", Offset = "0x1348308", VA = "0x1348308")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x1348310", Offset = "0x1348310", VA = "0x1348310")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public bool isValid
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0x134831C", Offset = "0x134831C", VA = "0x134831C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D2")]
		public bool isActive
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0x134848C", Offset = "0x134848C", VA = "0x134848C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D3")]
		private bool _isReady
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0x1348494", Offset = "0x1348494", VA = "0x1348494")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D4")]
		public SDKRender render
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0x13485D0", Offset = "0x13485D0", VA = "0x13485D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x13485D8", Offset = "0x13485D8", VA = "0x13485D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x134863C", Offset = "0x134863C", VA = "0x134863C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x13486D8", Offset = "0x13486D8", VA = "0x13486D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x13486E0", Offset = "0x13486E0", VA = "0x13486E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059B7C", Offset = "0x1059B7C")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x13485E4", Offset = "0x13485E4", VA = "0x13485E4")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x134877C", Offset = "0x134877C", VA = "0x134877C")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1348788", Offset = "0x1348788", VA = "0x1348788")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1348830", Offset = "0x1348830", VA = "0x1348830")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1348A4C", Offset = "0x1348A4C", VA = "0x1348A4C")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1348B3C", Offset = "0x1348B3C", VA = "0x1348B3C")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1348ABC", Offset = "0x1348ABC", VA = "0x1348ABC")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1348B0C", Offset = "0x1348B0C", VA = "0x1348B0C")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x13488E0", Offset = "0x13488E0", VA = "0x13488E0")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1348660", Offset = "0x1348660", VA = "0x1348660")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1348F04", Offset = "0x1348F04", VA = "0x1348F04")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public static class SDKBridge
	{
		[Token(Token = "0x2000177")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x170000D7")]
		public static bool IsActive
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0x1348518", Offset = "0x1348518", VA = "0x1348518")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x13494F8", Offset = "0x13494F8", VA = "0x13494F8")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1349500", Offset = "0x1349500", VA = "0x1349500")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1349508", Offset = "0x1349508", VA = "0x1349508")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1349510", Offset = "0x1349510", VA = "0x1349510")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1349518", Offset = "0x1349518", VA = "0x1349518")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1349520", Offset = "0x1349520", VA = "0x1349520")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1349560", Offset = "0x1349560", VA = "0x1349560")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x13495A0", Offset = "0x13495A0", VA = "0x13495A0")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x13495A8", Offset = "0x13495A8", VA = "0x13495A8")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x13495B0", Offset = "0x13495B0", VA = "0x13495B0")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x13495F0", Offset = "0x13495F0", VA = "0x13495F0")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1349630", Offset = "0x1349630", VA = "0x1349630")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1349670", Offset = "0x1349670", VA = "0x1349670")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1349678", Offset = "0x1349678", VA = "0x1349678")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1349700", Offset = "0x1349700", VA = "0x1349700")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x13497FC", Offset = "0x13497FC", VA = "0x13497FC")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x13498B8", Offset = "0x13498B8", VA = "0x13498B8")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1349924", Offset = "0x1349924", VA = "0x1349924")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1349990", Offset = "0x1349990", VA = "0x1349990")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1348D68", Offset = "0x1348D68", VA = "0x1348D68")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x600075F")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000760")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000761")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000762")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000763")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1349A4C", Offset = "0x1349A4C", VA = "0x1349A4C")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1349E04", Offset = "0x1349E04", VA = "0x1349E04")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1349FEC", Offset = "0x1349FEC", VA = "0x1349FEC")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x134A104", Offset = "0x134A104", VA = "0x134A104")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x134A254", Offset = "0x134A254", VA = "0x134A254")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x134A2EC", Offset = "0x134A2EC", VA = "0x134A2EC")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000178")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x170000D8")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x134C4CC", Offset = "0x134C4CC", VA = "0x134C4CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D9")]
		private bool interlacedRendering
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x134C524", Offset = "0x134C524", VA = "0x134C524")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DA")]
		private bool canRenderBackground
		{
			[Token(Token = "0x600076F")]
			[Address(RVA = "0x134C53C", Offset = "0x134C53C", VA = "0x134C53C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DB")]
		private bool canRenderForeground
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0x134C5D8", Offset = "0x134C5D8", VA = "0x134C5D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x134C688", Offset = "0x134C688", VA = "0x134C688")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DD")]
		public LIV liv
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x134FF34", Offset = "0x134FF34", VA = "0x134FF34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x600077B")]
			[Address(RVA = "0x134FF3C", Offset = "0x134FF3C", VA = "0x134FF3C")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x170000DF")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x134FF4C", Offset = "0x134FF4C", VA = "0x134FF4C")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x170000E0")]
		public SDKResolution resolution
		{
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x134FF5C", Offset = "0x134FF5C", VA = "0x134FF5C")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x170000E1")]
		public Camera cameraInstance
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x134FF64", Offset = "0x134FF64", VA = "0x134FF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		public Camera cameraReference
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x134F35C", Offset = "0x134F35C", VA = "0x134F35C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public Camera hmdCamera
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x134FF6C", Offset = "0x134FF6C", VA = "0x134FF6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		public Transform stage
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x134FF88", Offset = "0x134FF88", VA = "0x134FF88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x134FFA0", Offset = "0x134FFA0", VA = "0x134FFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x134FFBC", Offset = "0x134FFBC", VA = "0x134FFBC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000E7")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x134E710", Offset = "0x134E710", VA = "0x134E710")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000E8")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0x134E7D0", Offset = "0x134E7D0", VA = "0x134E7D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E9")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x134ED60", Offset = "0x134ED60", VA = "0x134ED60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		public bool canSetPose
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x13500A4", Offset = "0x13500A4", VA = "0x13500A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x134C2F4", Offset = "0x134C2F4", VA = "0x134C2F4")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x134C420", Offset = "0x134C420", VA = "0x134C420")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1348B68", Offset = "0x1348B68", VA = "0x1348B68")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1349178", Offset = "0x1349178", VA = "0x1349178")]
		public void Render()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x134D368", Offset = "0x134D368", VA = "0x134D368")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x134D650", Offset = "0x134D650", VA = "0x134D650")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x134DFF0", Offset = "0x134DFF0", VA = "0x134DFF0")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x134C710", Offset = "0x134C710", VA = "0x134C710")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x134FC9C", Offset = "0x134FC9C", VA = "0x134FC9C")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1348CB0", Offset = "0x1348CB0", VA = "0x1348CB0", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x13500C4", Offset = "0x13500C4", VA = "0x13500C4")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1350554", Offset = "0x1350554", VA = "0x1350554")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1350748", Offset = "0x1350748", VA = "0x1350748")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x13507C4", Offset = "0x13507C4", VA = "0x13507C4")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x134FE1C", Offset = "0x134FE1C", VA = "0x134FE1C")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x134CD00", Offset = "0x134CD00", VA = "0x134CD00")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x134CD68", Offset = "0x134CD68", VA = "0x134CD68")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x134D2F8", Offset = "0x134D2F8", VA = "0x134D2F8")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x134E504", Offset = "0x134E504", VA = "0x134E504")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x134EAE4", Offset = "0x134EAE4", VA = "0x134EAE4")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x134EC58", Offset = "0x134EC58", VA = "0x134EC58")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x134F194", Offset = "0x134F194", VA = "0x134F194")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x134F204", Offset = "0x134F204", VA = "0x134F204")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x135099C", Offset = "0x135099C", VA = "0x135099C")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1350BA0", Offset = "0x1350BA0", VA = "0x1350BA0")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1350C38", Offset = "0x1350C38", VA = "0x1350C38")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1350CD0", Offset = "0x1350CD0", VA = "0x1350CD0")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x134D038", Offset = "0x134D038", VA = "0x134D038")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x134EB54", Offset = "0x134EB54", VA = "0x134EB54")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x2000179")]
	internal static class SDKShaders
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x40007DE")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x40007DF")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x40007E0")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x40007E1")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x40007E2")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x40007E3")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x40007E4")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x40007E5")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x40007E6")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x40007E7")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x40007E8")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x134EA4C", Offset = "0x134EA4C", VA = "0x134EA4C")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x134ED14", Offset = "0x134ED14", VA = "0x134ED14")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x134F148", Offset = "0x134F148", VA = "0x134F148")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x134F274", Offset = "0x134F274", VA = "0x134F274")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x134EA98", Offset = "0x134EA98", VA = "0x134EA98")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x134ECC8", Offset = "0x134ECC8", VA = "0x134ECC8")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public struct SDKConstants
	{
		[Token(Token = "0x40007E9")]
		public const string SDK_ID = "QK3WHUFHLSGNXAF56TKDHNM3MYUBAWHQ";

		[Token(Token = "0x40007EA")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x40007EB")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x200017B")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x40007ED")]
		NONE = 0,
		[Token(Token = "0x40007EE")]
		GAME = 63
	}
	[Token(Token = "0x200017C")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x40007F0")]
		NONE = 0uL,
		[Token(Token = "0x40007F1")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x40007F2")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x40007F3")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x40007F4")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x40007F5")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x40007F6")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x40007F7")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x40007F8")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x40007F9")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x40007FA")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x40007FB")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x200017D")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x40007FD")]
		UNDEFINED = 0u,
		[Token(Token = "0x40007FE")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x40007FF")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4000800")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x200017E")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4000802")]
		UNDEFINED,
		[Token(Token = "0x4000803")]
		COLOR_BUFFER
	}
	[Token(Token = "0x200017F")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4000805")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000806")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000180")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4000808")]
		UNDEFINED,
		[Token(Token = "0x4000809")]
		RAW,
		[Token(Token = "0x400080A")]
		DIRECTX,
		[Token(Token = "0x400080B")]
		OPENGL,
		[Token(Token = "0x400080C")]
		VULKAN,
		[Token(Token = "0x400080D")]
		METAL
	}
	[Token(Token = "0x2000181")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x400080F")]
		UNDEFINED,
		[Token(Token = "0x4000810")]
		LINEAR,
		[Token(Token = "0x4000811")]
		SRGB
	}
	[Token(Token = "0x2000182")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4000813")]
		UNDEFINED,
		[Token(Token = "0x4000814")]
		FORWARD,
		[Token(Token = "0x4000815")]
		DEFERRED,
		[Token(Token = "0x4000816")]
		VERTEX_LIT,
		[Token(Token = "0x4000817")]
		UNIVERSAL,
		[Token(Token = "0x4000818")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x2000183")]
	public struct SDKResolution
	{
		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x170000EB")]
		public static SDKResolution zero
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x134A4DC", Offset = "0x134A4DC", VA = "0x134A4DC")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1350E68", Offset = "0x1350E68", VA = "0x1350E68", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000184")]
	public struct SDKVector3
	{
		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x170000EC")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x134A74C", Offset = "0x134A74C", VA = "0x134A74C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000ED")]
		public static SDKVector3 one
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x1351520", Offset = "0x1351520", VA = "0x1351520")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000EE")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x13519DC", Offset = "0x13519DC", VA = "0x13519DC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000EF")]
		public static SDKVector3 up
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x134B984", Offset = "0x134B984", VA = "0x134B984")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000F0")]
		public static SDKVector3 right
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x13519EC", Offset = "0x13519EC", VA = "0x13519EC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x135171C", Offset = "0x135171C", VA = "0x135171C")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x134B96C", Offset = "0x134B96C", VA = "0x134B96C")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x13519FC", Offset = "0x13519FC", VA = "0x13519FC")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x1351A0C", Offset = "0x1351A0C", VA = "0x1351A0C")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x1351A1C", Offset = "0x1351A1C", VA = "0x1351A1C")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1351A2C", Offset = "0x1351A2C", VA = "0x1351A2C")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x1351A3C", Offset = "0x1351A3C", VA = "0x1351A3C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000185")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x170000F1")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x134A75C", Offset = "0x134A75C", VA = "0x134A75C")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x134BEF0", Offset = "0x134BEF0", VA = "0x134BEF0")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x134BF20", Offset = "0x134BF20", VA = "0x134BF20")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x134BF24", Offset = "0x134BF24", VA = "0x134BF24")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x134C038", Offset = "0x134C038", VA = "0x134C038")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x134C0AC", Offset = "0x134C0AC", VA = "0x134C0AC")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x134C150", Offset = "0x134C150", VA = "0x134C150", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000186")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x170000F2")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0x134A518", Offset = "0x134A518", VA = "0x134A518")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x134AE84", Offset = "0x134AE84", VA = "0x134AE84")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x134AEC8", Offset = "0x134AEC8", VA = "0x134AEC8")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x134AF0C", Offset = "0x134AF0C", VA = "0x134AF0C")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x134B014", Offset = "0x134B014", VA = "0x134B014")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x134B0C0", Offset = "0x134B0C0", VA = "0x134B0C0")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x134B118", Offset = "0x134B118", VA = "0x134B118")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x134B154", Offset = "0x134B154", VA = "0x134B154")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x134B1E8", Offset = "0x134B1E8", VA = "0x134B1E8")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x134B214", Offset = "0x134B214", VA = "0x134B214")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x134B300", Offset = "0x134B300", VA = "0x134B300", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public struct SDKPlane
	{
		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x170000F3")]
		public static SDKPlane empty
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x134B970", Offset = "0x134B970", VA = "0x134B970")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x134B90C", Offset = "0x134B90C", VA = "0x134B90C")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x134B994", Offset = "0x134B994", VA = "0x134B994", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000188")]
	public struct SDKPriority
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x170000F4")]
		public static SDKPriority empty
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x134AB5C", Offset = "0x134AB5C", VA = "0x134AB5C")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x134BC8C", Offset = "0x134BC8C", VA = "0x134BC8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000189")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x170000F5")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x1348CF4", Offset = "0x1348CF4", VA = "0x1348CF4")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x13492BC", Offset = "0x13492BC", VA = "0x13492BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018A")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x170000F6")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0x1349CF4", Offset = "0x1349CF4", VA = "0x1349CF4")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x134AB68", Offset = "0x134AB68", VA = "0x134AB68")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x134AB78", Offset = "0x134AB78", VA = "0x134AB78")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x134AB8C", Offset = "0x134AB8C", VA = "0x134AB8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018B")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x170000F7")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x134B7A4", Offset = "0x134B7A4", VA = "0x134B7A4")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x134B860", Offset = "0x134B860", VA = "0x134B860", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018C")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x170000F8")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x134B804", Offset = "0x134B804", VA = "0x134B804")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x13512FC", Offset = "0x13512FC", VA = "0x13512FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018D")]
	public struct SDKTexture
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x170000F9")]
		public static SDKTexture empty
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x1349F9C", Offset = "0x1349F9C", VA = "0x1349F9C")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1350FA8", Offset = "0x1350FA8", VA = "0x1350FA8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018E")]
	public struct SDKTransform
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x170000FA")]
		public static SDKTransform empty
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x134AB48", Offset = "0x134AB48", VA = "0x134AB48")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1351530", Offset = "0x1351530", VA = "0x1351530", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018F")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x170000FB")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x134A4E4", Offset = "0x134A4E4", VA = "0x134A4E4")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x134A544", Offset = "0x134A544", VA = "0x134A544", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000190")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x170000FC")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x134A700", Offset = "0x134A700", VA = "0x134A700")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x134A770", Offset = "0x134A770", VA = "0x134A770", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000191")]
	public struct SDKPose
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x170000FD")]
		public static SDKPose empty
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x134AACC", Offset = "0x134AACC", VA = "0x134AACC")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x134BA40", Offset = "0x134BA40", VA = "0x134BA40", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000192")]
	public static class SDKUtils
	{
		[Token(Token = "0x170000FE")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x1351620", Offset = "0x1351620", VA = "0x1351620")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x134F70C", Offset = "0x134F70C", VA = "0x134F70C")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1351608", Offset = "0x1351608", VA = "0x1351608")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1350DCC", Offset = "0x1350DCC", VA = "0x1350DCC")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1351650", Offset = "0x1351650", VA = "0x1351650")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1350D68", Offset = "0x1350D68", VA = "0x1350D68")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1348EF8", Offset = "0x1348EF8", VA = "0x1348EF8")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1347F38", Offset = "0x1347F38", VA = "0x1347F38")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x1351670", Offset = "0x1351670", VA = "0x1351670")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x134F3F8", Offset = "0x134F3F8", VA = "0x134F3F8")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x134E7F0", Offset = "0x134E7F0", VA = "0x134E7F0")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1350430", Offset = "0x1350430", VA = "0x1350430")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1351750", Offset = "0x1351750", VA = "0x1351750")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x60007E8")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x60007E9")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1350A34", Offset = "0x1350A34", VA = "0x1350A34")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x134FE90", Offset = "0x134FE90", VA = "0x134FE90")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x134CEF0", Offset = "0x134CEF0", VA = "0x134CEF0")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x134E574", Offset = "0x134E574", VA = "0x134E574")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x134C530", Offset = "0x134C530", VA = "0x134C530")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x134ED7C", Offset = "0x134ED7C", VA = "0x134ED7C")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x134F2C0", Offset = "0x134F2C0", VA = "0x134F2C0")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x134EEE4", Offset = "0x134EEE4", VA = "0x134EEE4")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace Peacemaker
{
	[Token(Token = "0x2000193")]
	public class StopAudioOnStopRotation : MonoBehaviour
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotateObject rotateObject;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FMODContinuousSpeedBasedEvent fmodEvent;

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x11032C4", Offset = "0x11032C4", VA = "0x11032C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1103358", Offset = "0x1103358", VA = "0x1103358")]
		private void RotateObject_OnStopRotation(float percentage)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1103374", Offset = "0x1103374", VA = "0x1103374")]
		public StopAudioOnStopRotation()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class ActivateBehavioursBehaviour : AIBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000195")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BE8C", Offset = "0x104BE8C")]
		private sealed class <>c
		{
			[Token(Token = "0x400087A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<AIBehaviour> <>9__1_0;

			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<AIBehaviour> <>9__2_0;

			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x11DEA14", Offset = "0x11DEA14", VA = "0x11DEA14")]
			public <>c()
			{
			}

			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x11DEA1C", Offset = "0x11DEA1C", VA = "0x11DEA1C")]
			internal void <Start>b__1_0(AIBehaviour b)
			{
			}

			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x11DEA3C", Offset = "0x11DEA3C", VA = "0x11DEA3C")]
			internal void <Execute>b__2_0(AIBehaviour b)
			{
			}
		}

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<AIBehaviour> activateBehaviours;

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x11DE6B8", Offset = "0x11DE6B8", VA = "0x11DE6B8", Slot = "22")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x11DE7BC", Offset = "0x11DE7BC", VA = "0x11DE7BC", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x11DE8B4", Offset = "0x11DE8B4", VA = "0x11DE8B4", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x11DE940", Offset = "0x11DE940", VA = "0x11DE940")]
		public ActivateBehavioursBehaviour()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class AlarmTriggeredCondition : Condition
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x11E0EE0", Offset = "0x11E0EE0", VA = "0x11E0EE0", Slot = "21")]
		protected override bool IsTrueInternal(ConditionInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x11E0F8C", Offset = "0x11E0F8C", VA = "0x11E0F8C")]
		public AlarmTriggeredCondition()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class ArmoredUnitHealth : UnitHealth
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<AssetInfoTag> requiredInfoTags;

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x11E24D0", Offset = "0x11E24D0", VA = "0x11E24D0", Slot = "15")]
		public override void LoseHealth(float damage, [Optional] AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x11E2630", Offset = "0x11E2630", VA = "0x11E2630")]
		public ArmoredUnitHealth()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class BotJumpAnimation : MonoBehaviour
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMeleeAttack meleeAttack;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x10CB414", Offset = "0x10CB414", VA = "0x10CB414")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x10CB484", Offset = "0x10CB484", VA = "0x10CB484")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x10CB658", Offset = "0x10CB658", VA = "0x10CB658")]
		public BotJumpAnimation()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class BreakThroughEnvironment : MonoBehaviour
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask environmentLayer;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Collider> colliders;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float breakThroughSpeed;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject breakThroughParticleEffect;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BaseAttack baseAttack;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float disableTime;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float disabledTime;

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x10CB850", Offset = "0x10CB850", VA = "0x10CB850")]
		private void Start()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x10CB85C", Offset = "0x10CB85C", VA = "0x10CB85C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x10CB8D8", Offset = "0x10CB8D8", VA = "0x10CB8D8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x10CBD24", Offset = "0x10CBD24", VA = "0x10CBD24")]
		public BreakThroughEnvironment()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class EventTracker : GlobalEventTracker
	{
		[Token(Token = "0x200019B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BE9C", Offset = "0x104BE9C")]
		private sealed class <DoConnectToOcclusionCamera>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventTracker <>4__this;

			[Token(Token = "0x170000FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000818")]
				[Address(RVA = "0x113B8EC", Offset = "0x113B8EC", VA = "0x113B8EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600081A")]
				[Address(RVA = "0x113B954", Offset = "0x113B954", VA = "0x113B954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000815")]
			[Address(RVA = "0x113AA10", Offset = "0x113AA10", VA = "0x113AA10")]
			[DebuggerHidden]
			public <DoConnectToOcclusionCamera>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000816")]
			[Address(RVA = "0x113B7D8", Offset = "0x113B7D8", VA = "0x113B7D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000817")]
			[Address(RVA = "0x113B7DC", Offset = "0x113B7DC", VA = "0x113B7DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000819")]
			[Address(RVA = "0x113B8F4", Offset = "0x113B8F4", VA = "0x113B8F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200019C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BEAC", Offset = "0x104BEAC")]
		private sealed class <>c
		{
			[Token(Token = "0x400089A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400089B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AIBehaviour> <>9__21_0;

			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<AIBehaviour> <>9__22_0;

			[Token(Token = "0x600081C")]
			[Address(RVA = "0x113B6F8", Offset = "0x113B6F8", VA = "0x113B6F8")]
			public <>c()
			{
			}

			[Token(Token = "0x600081D")]
			[Address(RVA = "0x113B700", Offset = "0x113B700", VA = "0x113B700")]
			internal bool <SetNumEnemiesAttackingPlayer>b__21_0(AIBehaviour c)
			{
				return default(bool);
			}

			[Token(Token = "0x600081E")]
			[Address(RVA = "0x113B76C", Offset = "0x113B76C", VA = "0x113B76C")]
			internal bool <UpdateEnemyTracker>b__22_0(AIBehaviour c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public new static EventTracker instance;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetUnitTag playerTag;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetUnitTag enemyTag;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetBehaviourType attackBehaviourType;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetBehaviourType moveTowardsBehaviourType;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AchievementUnlockData EnemyFirstKillAchievement;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1050F2C", Offset = "0x1050F2C")]
		public List<AchievementProgressData> EnemyKillAchievements;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float damageDealtByPlayer;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int numEnemiesAttackingPlayer;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int playerKills;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int enemiesKills;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int bulletsFired;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public List<AIBehaviour> currentAttacking;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[ReadOnly]
		public List<AIBehaviour> disabledAttacks;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lastCheck;

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x113A900", Offset = "0x113A900", VA = "0x113A900", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x113A9A0", Offset = "0x113A9A0", VA = "0x113A9A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059C30", Offset = "0x1059C30")]
		private IEnumerator DoConnectToOcclusionCamera()
		{
			return null;
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x113AA3C", Offset = "0x113AA3C", VA = "0x113AA3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x113AB2C", Offset = "0x113AB2C", VA = "0x113AB2C")]
		private void Instance_OnRoomChanged(OcclusionContainer obj)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x113AE58", Offset = "0x113AE58", VA = "0x113AE58")]
		private void HandleShotFired()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x113AE68", Offset = "0x113AE68", VA = "0x113AE68", Slot = "5")]
		protected override void HandleBehaviourExecutionStarted(AIBehaviourManager manager, AIBehaviour behaviour)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x113B064", Offset = "0x113B064", VA = "0x113B064")]
		private void SetNumEnemiesAttackingPlayer(int val)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x113AB30", Offset = "0x113AB30", VA = "0x113AB30")]
		private void UpdateEnemyTracker()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x113B170", Offset = "0x113B170", VA = "0x113B170")]
		private void Update()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x113B1B8", Offset = "0x113B1B8", VA = "0x113B1B8", Slot = "6")]
		protected override void HandleBehaviourExecutionEnded(AIBehaviourManager manager, AIBehaviour behaviour)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x113B264", Offset = "0x113B264", VA = "0x113B264", Slot = "8")]
		protected override void HandleDeath(UnitHealth unitHealth, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x113B4A0", Offset = "0x113B4A0", VA = "0x113B4A0", Slot = "7")]
		protected override void HandleHealthLost(UnitHealth unitHealth, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x113B5D4", Offset = "0x113B5D4", VA = "0x113B5D4")]
		public EventTracker()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class ExtendedSubObjectAttack : MonoBehaviour, IAttack, IAiming
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BaseAttack> attacks;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AimAtTransform> aimAtTransforms;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ShieldAttack> shieldAttacks;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int attackFrameTimeout;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _curAttackFrame;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int coolDownTillNextSec;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _coolDownTillNextSec;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _haveToWaitForTimeout;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool autoSelect;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ReloadParameter;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AttackState;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AmmunitionParameter;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int ReloadTrigger;

		[Token(Token = "0x17000101")]
		public bool IsAttacking
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x111CBF8", Offset = "0x111CBF8", VA = "0x111CBF8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public virtual bool AutoAttack
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0x111D9B0", Offset = "0x111D9B0", VA = "0x111D9B0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000103")]
		public virtual bool BurstAttack
		{
			[Token(Token = "0x600082C")]
			[Address(RVA = "0x111D9B8", Offset = "0x111D9B8", VA = "0x111D9B8", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x111CB3C", Offset = "0x111CB3C", VA = "0x111CB3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x111CB48", Offset = "0x111CB48", VA = "0x111CB48")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x111CD00", Offset = "0x111CD00", VA = "0x111CD00", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x111CDFC", Offset = "0x111CDFC", VA = "0x111CDFC", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x111CF04", Offset = "0x111CF04", VA = "0x111CF04", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x111D10C", Offset = "0x111D10C", VA = "0x111D10C", Slot = "7")]
		public bool Attack(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x111D34C", Offset = "0x111D34C", VA = "0x111D34C", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x111D770", Offset = "0x111D770", VA = "0x111D770", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x111D794", Offset = "0x111D794", VA = "0x111D794", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x111D798", Offset = "0x111D798", VA = "0x111D798", Slot = "12")]
		public void SetTargetDirection(Vector3 position)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x111D8B8", Offset = "0x111D8B8", VA = "0x111D8B8", Slot = "13")]
		public void ResetTarget()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x111D9C0", Offset = "0x111D9C0", VA = "0x111D9C0")]
		public ExtendedSubObjectAttack()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class FinalBoss : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200019F")]
		public class Stage
		{
			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SpecialAttack> specialAttacks;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Transform> weaponSpawnPoints;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> activateObjects;

			[Token(Token = "0x6000838")]
			[Address(RVA = "0x111F6BC", Offset = "0x111F6BC", VA = "0x111F6BC")]
			public Stage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A0")]
		public class SpecialAttack
		{
			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WeaponData profile;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float duration;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float cooldown;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialAimDuration;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float generalAimDuration;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpawnType spawnType;

			[Token(Token = "0x6000839")]
			[Address(RVA = "0x111F6A0", Offset = "0x111F6A0", VA = "0x111F6A0")]
			public SpecialAttack()
			{
			}
		}

		[Token(Token = "0x20001A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BEBC", Offset = "0x104BEBC")]
		private sealed class <DoSetKinematic>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FinalBoss <>4__this;

			[Token(Token = "0x17000105")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600083D")]
				[Address(RVA = "0x111F374", Offset = "0x111F374", VA = "0x111F374", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000106")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600083F")]
				[Address(RVA = "0x111F3DC", Offset = "0x111F3DC", VA = "0x111F3DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600083A")]
			[Address(RVA = "0x111E1CC", Offset = "0x111E1CC", VA = "0x111E1CC")]
			[DebuggerHidden]
			public <DoSetKinematic>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600083B")]
			[Address(RVA = "0x111F1E8", Offset = "0x111F1E8", VA = "0x111F1E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600083C")]
			[Address(RVA = "0x111F1EC", Offset = "0x111F1EC", VA = "0x111F1EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600083E")]
			[Address(RVA = "0x111F37C", Offset = "0x111F37C", VA = "0x111F37C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BECC", Offset = "0x104BECC")]
		private sealed class <>c
		{
			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__27_0;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject> <>9__27_1;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GameObject> <>9__27_2;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<GameObject> <>9__27_3;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<UnitHealth, bool> <>9__32_0;

			[Token(Token = "0x6000841")]
			[Address(RVA = "0x111F02C", Offset = "0x111F02C", VA = "0x111F02C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000842")]
			[Address(RVA = "0x111F034", Offset = "0x111F034", VA = "0x111F034")]
			internal bool <SetCurrentStage>b__27_0(GameObject o)
			{
				return default(bool);
			}

			[Token(Token = "0x6000843")]
			[Address(RVA = "0x111F0A0", Offset = "0x111F0A0", VA = "0x111F0A0")]
			internal void <SetCurrentStage>b__27_1(GameObject o)
			{
			}

			[Token(Token = "0x6000844")]
			[Address(RVA = "0x111F0C0", Offset = "0x111F0C0", VA = "0x111F0C0")]
			internal bool <SetCurrentStage>b__27_2(GameObject o)
			{
				return default(bool);
			}

			[Token(Token = "0x6000845")]
			[Address(RVA = "0x111F12C", Offset = "0x111F12C", VA = "0x111F12C")]
			internal void <SetCurrentStage>b__27_3(GameObject o)
			{
			}

			[Token(Token = "0x6000846")]
			[Address(RVA = "0x111F14C", Offset = "0x111F14C", VA = "0x111F14C")]
			internal bool <DoSetStageForLimitedTime>b__32_0(UnitHealth c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BEDC", Offset = "0x104BEDC")]
		private sealed class <DoSetStageForLimitedTime>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FinalBoss <>4__this;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int id;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <prevStageId>5__2;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetHealthPercentage>5__3;

			[Token(Token = "0x17000107")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600084A")]
				[Address(RVA = "0x111F630", Offset = "0x111F630", VA = "0x111F630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000108")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600084C")]
				[Address(RVA = "0x111F698", Offset = "0x111F698", VA = "0x111F698", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000847")]
			[Address(RVA = "0x111EEE0", Offset = "0x111EEE0", VA = "0x111EEE0")]
			[DebuggerHidden]
			public <DoSetStageForLimitedTime>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000848")]
			[Address(RVA = "0x111F3E4", Offset = "0x111F3E4", VA = "0x111F3E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000849")]
			[Address(RVA = "0x111F3E8", Offset = "0x111F3E8", VA = "0x111F3E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600084B")]
			[Address(RVA = "0x111F638", Offset = "0x111F638", VA = "0x111F638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseAttack attack;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeUntilNextAttack;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeUntilStop;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WeaponData emptyWeapon;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int currentStageId;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Weapon weapon;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpecialAttack currentSpecialAttack;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Stage> stages;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnitHealth unitHealth;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Rigidbody rigidbody;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SmoothDampMovement movement;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform pivotPoint;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve introCurveY;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float introDuration;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float sinSpeed;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float sinScale;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Transform> patrolPoints;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public Transform currentPatrolPoint;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<UnitHealth> cannons;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 initialLocalPosition;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 initialPivotPointPosition;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float timeAlive;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool stageLocked;

		[Token(Token = "0x17000104")]
		public Stage CurrentStage
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x111DF34", Offset = "0x111DF34", VA = "0x111DF34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x111DFA4", Offset = "0x111DFA4", VA = "0x111DFA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x111E130", Offset = "0x111E130", VA = "0x111E130")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x111E15C", Offset = "0x111E15C", VA = "0x111E15C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059CE4", Offset = "0x1059CE4")]
		private IEnumerator DoSetKinematic()
		{
			return null;
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x111E1F8", Offset = "0x111E1F8", VA = "0x111E1F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x111E90C", Offset = "0x111E90C", VA = "0x111E90C")]
		private void SetCurrentStage(int id)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x111EE10", Offset = "0x111EE10", VA = "0x111EE10")]
		private void Cannon_OnDeath()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x111EE60", Offset = "0x111EE60", VA = "0x111EE60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059D48", Offset = "0x1059D48")]
		private IEnumerator DoSetStageForLimitedTime(int id)
		{
			return null;
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x111EF0C", Offset = "0x111EF0C", VA = "0x111EF0C")]
		public FinalBoss()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class GlitchThroughEnvironment : MonoBehaviour
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float glitchDuration;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material defaultMaterial;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material glitchMaterial;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SmoothDampMovement smoothDampMovement;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float collisionMult;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BaseAttack baseAttack;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Collider collider;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultSpeed;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float initialMaxAIShootDistance;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timeActive;

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1123960", Offset = "0x1123960", VA = "0x1123960")]
		private void Start()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x112396C", Offset = "0x112396C", VA = "0x112396C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1123B7C", Offset = "0x1123B7C", VA = "0x1123B7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1123C08", Offset = "0x1123C08", VA = "0x1123C08")]
		public GlitchThroughEnvironment()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class IsBelowCondition : Condition
	{
		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxDistance;

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x11301DC", Offset = "0x11301DC", VA = "0x11301DC", Slot = "21")]
		protected override bool IsTrueInternal(ConditionInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x11303F4", Offset = "0x11303F4", VA = "0x11303F4", Slot = "22")]
		public override string GetDescription(UnitTag currentTarget)
		{
			return null;
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1130474", Offset = "0x1130474", VA = "0x1130474")]
		public IsBelowCondition()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class RobotLookAtEnemies : MonoBehaviour
	{
		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IsDetectedCondition condition;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1050FC4", Offset = "0x1050FC4")]
		public Transform currentTarget;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetPosition;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int numViews;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotateSpeed;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxRotation;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion targetOffset;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion currentOffset;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Animator animator;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int takeHit;

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1119950", Offset = "0x1119950", VA = "0x1119950")]
		private void Start()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1119AF0", Offset = "0x1119AF0", VA = "0x1119AF0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1119B08", Offset = "0x1119B08", VA = "0x1119B08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x111A1C0", Offset = "0x111A1C0", VA = "0x111A1C0")]
		public RobotLookAtEnemies()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class RobotUpgrade : MonoBehaviour
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon weapon;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandleLoseWeapon handleLoseWeapon;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UpgradeData> upgrades;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GEUnit Unit;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnitHealth unitHealth;

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x111AD44", Offset = "0x111AD44", VA = "0x111AD44")]
		public void Start()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x111B510", Offset = "0x111B510", VA = "0x111B510")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x111B7B0", Offset = "0x111B7B0", VA = "0x111B7B0")]
		private void HandleLoseWeapon_OnLoseWeapon()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x111AED4", Offset = "0x111AED4", VA = "0x111AED4")]
		private void InitWeaponState(UpgradeData upgrade, Weapon weapon)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x111B1AC", Offset = "0x111B1AC", VA = "0x111B1AC")]
		private void EnterWeaponState(UpgradeData upgrade, Weapon weapon)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x111B8E8", Offset = "0x111B8E8", VA = "0x111B8E8")]
		private void LeaveWeaponState(UpgradeData upgrade, Weapon weapon)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x111BC4C", Offset = "0x111BC4C", VA = "0x111BC4C")]
		public RobotUpgrade()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class SetMusicParameters : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001A9")]
		public class DistrictMusic
		{
			[Token(Token = "0x4000929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict district;

			[Token(Token = "0x400092A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AssetFMODEvent audioEvent;

			[Token(Token = "0x400092B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetFMODEvent elevatorMusic;

			[Token(Token = "0x6000874")]
			[Address(RVA = "0x10FA9B4", Offset = "0x10FA9B4", VA = "0x10FA9B4")]
			public DistrictMusic()
			{
			}
		}

		[Token(Token = "0x20001AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BEEC", Offset = "0x104BEEC")]
		private sealed class <DoDelayedInitialization>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400092C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400092D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400092E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetMusicParameters <>4__this;

			[Token(Token = "0x17000109")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000878")]
				[Address(RVA = "0x10FA5E0", Offset = "0x10FA5E0", VA = "0x10FA5E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600087A")]
				[Address(RVA = "0x10FA648", Offset = "0x10FA648", VA = "0x10FA648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000875")]
			[Address(RVA = "0x10F898C", Offset = "0x10F898C", VA = "0x10F898C")]
			[DebuggerHidden]
			public <DoDelayedInitialization>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6000876")]
			[Address(RVA = "0x10FA514", Offset = "0x10FA514", VA = "0x10FA514", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000877")]
			[Address(RVA = "0x10FA518", Offset = "0x10FA518", VA = "0x10FA518", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000879")]
			[Address(RVA = "0x10FA5E8", Offset = "0x10FA5E8", VA = "0x10FA5E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BEFC", Offset = "0x104BEFC")]
		private sealed class <DoStartMusicDelayed>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400092F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetMusicParameters <>4__this;

			[Token(Token = "0x1700010B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600087E")]
				[Address(RVA = "0x10FA944", Offset = "0x10FA944", VA = "0x10FA944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000880")]
				[Address(RVA = "0x10FA9AC", Offset = "0x10FA9AC", VA = "0x10FA9AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600087B")]
			[Address(RVA = "0x10F902C", Offset = "0x10F902C", VA = "0x10F902C")]
			[DebuggerHidden]
			public <DoStartMusicDelayed>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600087C")]
			[Address(RVA = "0x10FA80C", Offset = "0x10FA80C", VA = "0x10FA80C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600087D")]
			[Address(RVA = "0x10FA810", Offset = "0x10FA810", VA = "0x10FA810", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600087F")]
			[Address(RVA = "0x10FA94C", Offset = "0x10FA94C", VA = "0x10FA94C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BF0C", Offset = "0x104BF0C")]
		private sealed class <DoSetOneTimeParameter>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetAudioParameter parameter;

			[Token(Token = "0x4000935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SetMusicParameters <>4__this;

			[Token(Token = "0x1700010D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000884")]
				[Address(RVA = "0x10FA79C", Offset = "0x10FA79C", VA = "0x10FA79C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000886")]
				[Address(RVA = "0x10FA804", Offset = "0x10FA804", VA = "0x10FA804", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000881")]
			[Address(RVA = "0x10F9E68", Offset = "0x10F9E68", VA = "0x10F9E68")]
			[DebuggerHidden]
			public <DoSetOneTimeParameter>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000882")]
			[Address(RVA = "0x10FA650", Offset = "0x10FA650", VA = "0x10FA650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000883")]
			[Address(RVA = "0x10FA654", Offset = "0x10FA654", VA = "0x10FA654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000885")]
			[Address(RVA = "0x10FA7A4", Offset = "0x10FA7A4", VA = "0x10FA7A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EventTracker eventTracker;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SetMusicParameters instance;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[ReadOnly]
		public int numEnemiesInRoom;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[ReadOnly]
		public bool playerHoldsWeapon;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public float detectionAlertLevel;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[ReadOnly]
		public float generalAlertLevel;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float maxProximity;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<AssetUnitTag> enemyTags;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<string> stopBusesOnLevelTransition;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[ReadOnly]
		public float proximityToEnemy;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[ReadOnly]
		public float playerHealthPercentage;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[ReadOnly]
		public float stealthKill;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[ReadOnly]
		public int numEnemiesAttackingPlayer;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public float mainVolume;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[ReadOnly]
		public float sfxVolume;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ReadOnly]
		public float musicVolume;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<GenericEvent> stealthMeleeKillEvents;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AssetUnitTag enemyTag;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AssetAudioParameter numEnemiesInRoomParameter;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AssetAudioParameter playerHoldsWeaponParameter;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AssetAudioParameter alertLevelParameter;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AssetAudioParameter proximityToEnemyParameter;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AssetAudioParameter playerHealthParameter;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AssetAudioParameter stealthKillParameter;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AssetAudioParameter combatKillParameter;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AssetAudioParameter numEnemiesAttackingPlayerParameter;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool isTutorialLevel;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10510AC", Offset = "0x10510AC")]
		public ValueData alarmLevelData;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AssetAudioParameter alarmLevelParameter;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[ReadOnly]
		public int alarmLevel;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10510F4", Offset = "0x10510F4")]
		public ValueData mainVolumeData;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ValueData sfxVolumeData;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public ValueData musicVolumeData;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AssetAudioParameter mainVolumeParameter;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AssetAudioParameter sfxVolumeParameter;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AssetAudioParameter musicVolumeParameter;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105112C", Offset = "0x105112C")]
		public AssetFMODEvent defaultInGameMusic;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AssetFMODEvent elevatorMusic;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AssetFMODEvent deathMusic;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public AssetFMODEvent mainTheme;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ValueData districtKey;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public List<DistrictMusic> districtInGameMusic;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool playMusic;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private StudioEventEmitter inGameMusic;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool initialized;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool playerHasDied;

		[Token(Token = "0x4000924")]
		private const float stingerDuration = 8f;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float stingerStartTime;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GameObject levelTransitionObject;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static StudioEventEmitter levelTransitionEventEmitter;

		[Token(Token = "0x4000928")]
		private const float stealthKillDuration = 0.05f;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x10F87F4", Offset = "0x10F87F4", VA = "0x10F87F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x10F8860", Offset = "0x10F8860", VA = "0x10F8860")]
		public void StopMusic()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x10F88F0", Offset = "0x10F88F0", VA = "0x10F88F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x10F891C", Offset = "0x10F891C", VA = "0x10F891C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059E4C", Offset = "0x1059E4C")]
		private IEnumerator DoDelayedInitialization()
		{
			return null;
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x10F89B8", Offset = "0x10F89B8", VA = "0x10F89B8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x10F8F1C", Offset = "0x10F8F1C", VA = "0x10F8F1C")]
		private void Instance_OnResetProgress()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x10F8EAC", Offset = "0x10F8EAC", VA = "0x10F8EAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059EB0", Offset = "0x1059EB0")]
		private IEnumerator DoStartMusicDelayed()
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x10F9058", Offset = "0x10F9058", VA = "0x10F9058")]
		private void Health_OnDeath()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x10F95C4", Offset = "0x10F95C4", VA = "0x10F95C4")]
		private void Instance_OnMoveToNextScene()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x10F8F20", Offset = "0x10F8F20", VA = "0x10F8F20")]
		private void StopBuses()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x10F9994", Offset = "0x10F9994", VA = "0x10F9994")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x10F9BE8", Offset = "0x10F9BE8", VA = "0x10F9BE8")]
		private void MeleeDamage_OnAnyMeleeKill(IAttackable obj)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x10F9DEC", Offset = "0x10F9DEC", VA = "0x10F9DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059F14", Offset = "0x1059F14")]
		private IEnumerator DoSetOneTimeParameter(AssetAudioParameter parameter)
		{
			return null;
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x10F9E94", Offset = "0x10F9E94", VA = "0x10F9E94")]
		private void UnitHealth_OnAnyDeath(UnitHealth unitHealth, AttackInfo info)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x10F9F2C", Offset = "0x10F9F2C", VA = "0x10F9F2C")]
		private void OnDetectionProgressChanged_OnGlobalDetectionProgressChanged(float progress)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x10F9F34", Offset = "0x10F9F34", VA = "0x10F9F34")]
		private void Update()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x10F913C", Offset = "0x10F913C", VA = "0x10F913C")]
		private void UpdateParameters()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x10F9120", Offset = "0x10F9120", VA = "0x10F9120")]
		private void ResetAllParameters()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x10FA3DC", Offset = "0x10FA3DC", VA = "0x10FA3DC")]
		public void PrepareLevelTransition()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x10FA3E0", Offset = "0x10FA3E0", VA = "0x10FA3E0")]
		public SetMusicParameters()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class StopInGameMusicEvent : GenericEvent
	{
		[Token(Token = "0x6000887")]
		[Address(RVA = "0x110337C", Offset = "0x110337C", VA = "0x110337C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1103480", Offset = "0x1103480", VA = "0x1103480")]
		public StopInGameMusicEvent()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class SwitchUnitTags : MonoBehaviour
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AIBehaviourManager manager;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetUnitTag current;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetUnitTag next;

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x11042E8", Offset = "0x11042E8", VA = "0x11042E8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1104340", Offset = "0x1104340", VA = "0x1104340")]
		private void Start()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1104350", Offset = "0x1104350", VA = "0x1104350")]
		public static void Switch(AIBehaviourManager manager, AssetUnitTag current, AssetUnitTag next)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x11047A0", Offset = "0x11047A0", VA = "0x11047A0")]
		public SwitchUnitTags()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class SwitchUnitsEvent : GenericRigidbodyEvent
	{
		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag current;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetUnitTag next;

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x11047A8", Offset = "0x11047A8", VA = "0x11047A8", Slot = "4")]
		public override void Execute(Transform emitter, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x1104880", Offset = "0x1104880", VA = "0x1104880")]
		public SwitchUnitsEvent()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class SwitchWeapons : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B1")]
		public class WeaponSelection
		{
			[Token(Token = "0x4000941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AvatarIKGoal hand;

			[Token(Token = "0x4000942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AvatarIKGoal secondHand;

			[Token(Token = "0x4000943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform shoulder;

			[Token(Token = "0x4000944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon weapon;

			[Token(Token = "0x6000892")]
			[Address(RVA = "0x1104AA8", Offset = "0x1104AA8", VA = "0x1104AA8")]
			public WeaponSelection()
			{
			}
		}

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseAttack baseAttack;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKWeaponAim weaponAim;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<WeaponSelection> weapons;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentWeaponId;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float changeInterval;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastChange;

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1104888", Offset = "0x1104888", VA = "0x1104888")]
		private void Update()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x11048D0", Offset = "0x11048D0", VA = "0x11048D0")]
		private void SwitchWeapon()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1104A30", Offset = "0x1104A30", VA = "0x1104A30")]
		public SwitchWeapons()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class ReportLeaderboardPoints : GenericEvent, IAction
	{
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x11180FC", Offset = "0x11180FC", VA = "0x11180FC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x111826C", Offset = "0x111826C", VA = "0x111826C")]
		public ReportLeaderboardPoints()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class ReportLeaderboardGameFinished : GenericEvent, IAction
	{
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1118004", Offset = "0x1118004", VA = "0x1118004", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x11180F4", Offset = "0x11180F4", VA = "0x11180F4")]
		public ReportLeaderboardGameFinished()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class SetCurrentLeaderboard : GenericEvent, IAction
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardBaseData leaderboard;

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x10F7F8C", Offset = "0x10F7F8C", VA = "0x10F7F8C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x10F80E8", Offset = "0x10F80E8", VA = "0x10F80E8")]
		public SetCurrentLeaderboard()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class SetCurrentClassLeaderboard : GenericEvent, IAction
	{
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x10F7DB8", Offset = "0x10F7DB8", VA = "0x10F7DB8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x10F7F84", Offset = "0x10F7F84", VA = "0x10F7F84")]
		public SetCurrentClassLeaderboard()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class DrillAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseAttack attack;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 deltaRotation;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ParticleSystem> drillEffects;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 currentLocalRotation;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool lastAttacking;

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1137B28", Offset = "0x1137B28", VA = "0x1137B28")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1137E14", Offset = "0x1137E14", VA = "0x1137E14")]
		public DrillAnimation()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class KeepAnimatorStateOnDisable : MonoBehaviour
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1130948", Offset = "0x1130948", VA = "0x1130948")]
		private void Reset()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x11309A0", Offset = "0x11309A0", VA = "0x11309A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1130AC4", Offset = "0x1130AC4", VA = "0x1130AC4")]
		public KeepAnimatorStateOnDisable()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class WeaponAnimation : SerializedMonoBehaviour
	{
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051164", Offset = "0x1051164")]
		public Weapon Weapon;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PickableObject Pickable;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator Animator;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject StaticModel;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject AnimatedModel;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105119C", Offset = "0x105119C")]
		public bool ReloadAnimation;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool OnlyTwoHanded;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool HoldAnimation;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool TwoHandedHoldAnimation;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool EmptyAnimation;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool HoldToReload;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public bool EmptyPercentage;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		public bool UseFullNumbers;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool TwoMagazines;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float smoothTime;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10511D4", Offset = "0x10511D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10511D4", Offset = "0x10511D4")]
		public List<IAction> HoldAction;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<IAction> TwoHandedHoldEnterAction;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<IAction> TwoHandedHoldLeaveAction;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051234", Offset = "0x1051234")]
		public List<IAction> ReleaseAction;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105126C", Offset = "0x105126C")]
		public BooleanValueData AnimationShowcase;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int emptyAnimationId;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int emptyAnimationLeftId;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int emptyAnimationRightId;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int emptyId;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int reloadHoldId;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int reloadProgressId;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool isHeldTwoHanded;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float currentEmptyMagazine;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float currentEmptyMagazineLeft;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float currentEmptyMagazineRight;

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x10E2C58", Offset = "0x10E2C58", VA = "0x10E2C58")]
		private void Reset()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x10E2CE0", Offset = "0x10E2CE0", VA = "0x10E2CE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x10E30A8", Offset = "0x10E30A8", VA = "0x10E30A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x10E323C", Offset = "0x10E323C", VA = "0x10E323C")]
		private void OnShotFired(WeaponBullet bullet)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x10E3408", Offset = "0x10E3408", VA = "0x10E3408")]
		private void OnPreReload()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x10E3580", Offset = "0x10E3580", VA = "0x10E3580")]
		private void OnReload()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x10E36F8", Offset = "0x10E36F8", VA = "0x10E36F8")]
		private void OnStopReload()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x10E372C", Offset = "0x10E372C", VA = "0x10E372C")]
		private void OnEmpty()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x10E3888", Offset = "0x10E3888", VA = "0x10E3888")]
		private void OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x10E3C20", Offset = "0x10E3C20", VA = "0x10E3C20")]
		private void SetHoldTwoHanded(bool val)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x10E3CCC", Offset = "0x10E3CCC", VA = "0x10E3CCC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x10E3A98", Offset = "0x10E3A98", VA = "0x10E3A98")]
		private void SetHold(bool val)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x10E40B0", Offset = "0x10E40B0", VA = "0x10E40B0")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x10E3A54", Offset = "0x10E3A54", VA = "0x10E3A54")]
		private void ActivateWeapon()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x10E3044", Offset = "0x10E3044", VA = "0x10E3044")]
		private void DeactivateWeapon()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x10E4170", Offset = "0x10E4170", VA = "0x10E4170")]
		public WeaponAnimation()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class ApplyDebugMaterial : MonoBehaviour
	{
		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugMaterialConfiguration material;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsDebug;

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x11E1D90", Offset = "0x11E1D90", VA = "0x11E1D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x11E1E8C", Offset = "0x11E1E8C", VA = "0x11E1E8C")]
		public ApplyDebugMaterial()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class ContinuousHealthAudio : MonoBehaviour
	{
		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10512A4", Offset = "0x10512A4")]
		public UnitHealth unitHealth;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter generalHealthParameter;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10512DC", Offset = "0x10512DC")]
		public AssetAudioParameter generalProgressParameter;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051314", Offset = "0x1051314")]
		public float FadeoutDuration;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StudioEventEmitter emitter;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastDamage;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x10D3E54", Offset = "0x10D3E54", VA = "0x10D3E54")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x10D3FE4", Offset = "0x10D3FE4", VA = "0x10D3FE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x10D40FC", Offset = "0x10D40FC", VA = "0x10D40FC")]
		private void OnHealthLost(float damage, AttackInfo attack)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x10D4124", Offset = "0x10D4124", VA = "0x10D4124")]
		public ContinuousHealthAudio()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class FMODTestSceneSetup : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve movementCurve;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float speed;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float distance;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FMODAudioEvent shotEvent;

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x111DB5C", Offset = "0x111DB5C", VA = "0x111DB5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x111DBF0", Offset = "0x111DBF0", VA = "0x111DBF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x111DCF0", Offset = "0x111DCF0", VA = "0x111DCF0")]
		public FMODTestSceneSetup()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class ChangeLayer : MonoBehaviour
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask LayerDefault;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask LayerChange;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> Objects;

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x10CE5A0", Offset = "0x10CE5A0", VA = "0x10CE5A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x10CE61C", Offset = "0x10CE61C", VA = "0x10CE61C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x10CE698", Offset = "0x10CE698", VA = "0x10CE698")]
		private void HandleVisorChanged(bool isVisor)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x10CE858", Offset = "0x10CE858", VA = "0x10CE858")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x10CEA48", Offset = "0x10CEA48", VA = "0x10CEA48")]
		public ChangeLayer()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class ChangeSceneSettingsOnMapGeneration : MonoBehaviour
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneSettings sceneSettings;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelGenerator levelGenerator;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SceneSettingsData> artStyles;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int artIterator;

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x10CF248", Offset = "0x10CF248", VA = "0x10CF248")]
		private void Start()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x10CF2D4", Offset = "0x10CF2D4", VA = "0x10CF2D4")]
		private void LevelGenerator_OnGeneratedNewWorld()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x10CF3B0", Offset = "0x10CF3B0", VA = "0x10CF3B0")]
		public ChangeSceneSettingsOnMapGeneration()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class DamageTagCondition : IAttackCondition
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetInfoTag InfoTag;

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1131B44", Offset = "0x1131B44", VA = "0x1131B44", Slot = "4")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1131BC0", Offset = "0x1131BC0", VA = "0x1131BC0")]
		public DamageTagCondition()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class HasHeardCondition : IAttackCondition
	{
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x112AFC4", Offset = "0x112AFC4", VA = "0x112AFC4", Slot = "4")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x112B070", Offset = "0x112B070", VA = "0x112B070")]
		public HasHeardCondition()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class EnemyDeadCondition : IAttackCondition
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x11390D8", Offset = "0x11390D8", VA = "0x11390D8", Slot = "4")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x11391E0", Offset = "0x11391E0", VA = "0x11391E0")]
		public EnemyDeadCondition()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class MultipleDamageTagsCondition : IAttackCondition
	{
		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AssetInfoTag> InfoTags;

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x110C4B4", Offset = "0x110C4B4", VA = "0x110C4B4", Slot = "4")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x110C5F0", Offset = "0x110C5F0", VA = "0x110C5F0")]
		public MultipleDamageTagsCondition()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class PlayerDetectedCondition : IUnitCondition, IAttackCondition
	{
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1111FA0", Offset = "0x1111FA0", VA = "0x1111FA0", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1112004", Offset = "0x1112004", VA = "0x1112004", Slot = "5")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1112090", Offset = "0x1112090", VA = "0x1112090")]
		public PlayerDetectedCondition()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class RandomCondition : ICondition, ITriggerCondition, ICollisionCondition, IUnitCondition, ISideCondition
	{
		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105134C", Offset = "0x105134C")]
		public float Chance;

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1116148", Offset = "0x1116148", VA = "0x1116148")]
		public bool HasChance(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x111617C", Offset = "0x111617C", VA = "0x111617C", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x11161D0", Offset = "0x11161D0", VA = "0x11161D0", Slot = "6")]
		public bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1116224", Offset = "0x1116224", VA = "0x1116224", Slot = "5")]
		public bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1116278", Offset = "0x1116278", VA = "0x1116278", Slot = "7")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x11162CC", Offset = "0x11162CC", VA = "0x11162CC", Slot = "8")]
		public bool Execute(Transform emitter, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1116320", Offset = "0x1116320", VA = "0x1116320")]
		public RandomCondition()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class SelfTagCondition : GenericTriggerCondition
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x1051364", Offset = "0x1051364")]
		public string Tag;

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x10F7B4C", Offset = "0x10F7B4C", VA = "0x10F7B4C", Slot = "4")]
		public override bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x10F7B90", Offset = "0x10F7B90", VA = "0x10F7B90")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x10F7BDC", Offset = "0x10F7BDC", VA = "0x10F7BDC")]
		public SelfTagCondition()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class TagCondition : ICondition, ITriggerCondition, ICollisionCondition, IUnitCondition, ISideCondition, IAttackCondition
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x105139C", Offset = "0x105139C")]
		public string Tag;

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1104CA8", Offset = "0x1104CA8", VA = "0x1104CA8")]
		public bool HasTag(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1104CE0", Offset = "0x1104CE0", VA = "0x1104CE0", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1104D18", Offset = "0x1104D18", VA = "0x1104D18", Slot = "6")]
		public bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1104D50", Offset = "0x1104D50", VA = "0x1104D50", Slot = "5")]
		public bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1104D88", Offset = "0x1104D88", VA = "0x1104D88", Slot = "7")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1104DC0", Offset = "0x1104DC0", VA = "0x1104DC0", Slot = "8")]
		public bool Execute(Transform emitter, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1104DF8", Offset = "0x1104DF8", VA = "0x1104DF8", Slot = "9")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1104E30", Offset = "0x1104E30", VA = "0x1104E30")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1104E7C", Offset = "0x1104E7C", VA = "0x1104E7C")]
		public TagCondition()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class GenericTagCondition : GenericCondition
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x10513D4", Offset = "0x10513D4")]
		public string Tag;

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x112389C", Offset = "0x112389C", VA = "0x112389C")]
		public bool HasTag(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x11238D4", Offset = "0x11238D4", VA = "0x11238D4")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1123920", Offset = "0x1123920", VA = "0x1123920", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1123958", Offset = "0x1123958", VA = "0x1123958")]
		public GenericTagCondition()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class TargetTagCondition : ITargetCondition, ITargetSideCondition
	{
		[Token(Token = "0x20001C8")]
		public enum TargetType
		{
			[Token(Token = "0x4000988")]
			Self,
			[Token(Token = "0x4000989")]
			Target
		}

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetType Target;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x105140C", Offset = "0x105140C")]
		public string Tag;

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1104E84", Offset = "0x1104E84", VA = "0x1104E84")]
		public bool HasTag(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1104EBC", Offset = "0x1104EBC", VA = "0x1104EBC", Slot = "4")]
		public bool Execute(Transform emitter, Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1104F04", Offset = "0x1104F04", VA = "0x1104F04", Slot = "5")]
		public bool Execute(Transform emitter, Transform target, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1104F4C", Offset = "0x1104F4C", VA = "0x1104F4C")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1104F98", Offset = "0x1104F98", VA = "0x1104F98")]
		public TargetTagCondition()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class SceneNameCondition : GenericCondition, ICondition
	{
		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneData scene;

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x10F41FC", Offset = "0x10F41FC", VA = "0x10F41FC", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x10F429C", Offset = "0x10F429C", VA = "0x10F429C")]
		public SceneNameCondition()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class BuildTagCondition : GenericCondition, ICondition, ITriggerCondition, ICollisionCondition, IUnitCondition, ISideCondition
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildTagData Tag;

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x10CC120", Offset = "0x10CC120", VA = "0x10CC120")]
		public bool HasTag(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x10CC194", Offset = "0x10CC194", VA = "0x10CC194", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x10CC1C8", Offset = "0x10CC1C8", VA = "0x10CC1C8", Slot = "7")]
		public bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x10CC1FC", Offset = "0x10CC1FC", VA = "0x10CC1FC", Slot = "6")]
		public bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x10CC230", Offset = "0x10CC230", VA = "0x10CC230", Slot = "8")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x10CC264", Offset = "0x10CC264", VA = "0x10CC264", Slot = "9")]
		public bool Execute(Transform emitter, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x10CC298", Offset = "0x10CC298", VA = "0x10CC298")]
		public BuildTagCondition()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class UnitTagCondition : IUnitCondition, IAttackCondition
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Not;

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x10DE5D4", Offset = "0x10DE5D4", VA = "0x10DE5D4", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x10DE69C", Offset = "0x10DE69C", VA = "0x10DE69C", Slot = "5")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x10DE770", Offset = "0x10DE770", VA = "0x10DE770")]
		public UnitTagCondition()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class UnitDisabledCondition : IUnitCondition
	{
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x10DE5A0", Offset = "0x10DE5A0", VA = "0x10DE5A0", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x10DE5CC", Offset = "0x10DE5CC", VA = "0x10DE5CC")]
		public UnitDisabledCondition()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class UnitDeadCondition : IUnitCondition
	{
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x10DE560", Offset = "0x10DE560", VA = "0x10DE560", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x10DE598", Offset = "0x10DE598", VA = "0x10DE598")]
		public UnitDeadCondition()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class DecorationData : ObjectData, IValidation, IStatus, IDatabase
	{
		[Token(Token = "0x20001CF")]
		public enum DecorationType
		{
			[Token(Token = "0x4000996")]
			StaticCombinable,
			[Token(Token = "0x4000997")]
			Moving,
			[Token(Token = "0x4000998")]
			WallAttachment,
			[Token(Token = "0x4000999")]
			StaticChangeable,
			[Token(Token = "0x400099A")]
			Pickable
		}

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051444", Offset = "0x1051444")]
		public bool isStackOfOtherDecorationData;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public ContentStatus _status;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DecorationType Type;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105148C", Offset = "0x105148C")]
		public bool hasDynamicCollisionSounds;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> allowedMaterials;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool validatedInPropSpawner;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "FilePathAttribute", RVA = "0x10514C4", Offset = "0x10514C4")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x10514C4", Offset = "0x10514C4")]
		private string assetString;

		[Token(Token = "0x1700010F")]
		public ContentStatus ContentStatus
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x113257C", Offset = "0x113257C", VA = "0x113257C", Slot = "12")]
			get
			{
				return default(ContentStatus);
			}
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0x1132584", Offset = "0x1132584", VA = "0x1132584", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x113258C", Offset = "0x113258C", VA = "0x113258C", Slot = "10")]
		public override string GetError(ValidationMode mode)
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1133E04", Offset = "0x1133E04", VA = "0x1133E04")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105A068", Offset = "0x105A068")]
		public void FixFMODDynamicObjectWithGenericType()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1133E08", Offset = "0x1133E08", VA = "0x1133E08", Slot = "11")]
		public override void FixError()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1133EB8", Offset = "0x1133EB8", VA = "0x1133EB8")]
		public static void MakeInteractable(GameObject selection, DecorationType type)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1133F40", Offset = "0x1133F40", VA = "0x1133F40")]
		private static void MakeInteractable(GameObject selection, string layer, bool makeCombinedMesh = false, bool hasRigidbody = false, bool isKinematic = false, bool hasNavMeshObstacle = true, bool hasOcclusionProp = true)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1133F44", Offset = "0x1133F44", VA = "0x1133F44")]
		private static Material GetEnvInlineMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x1133F4C", Offset = "0x1133F4C", VA = "0x1133F4C")]
		private static Material GetObjectInlineMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000901")]
		public static T CopyComponent<T>(T original, GameObject destination) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x11339BC", Offset = "0x11339BC", VA = "0x11339BC")]
		private string ObjectDataCheckSuccessful(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1133F54", Offset = "0x1133F54", VA = "0x1133F54", Slot = "17")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1133F5C", Offset = "0x1133F5C", VA = "0x1133F5C", Slot = "14")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1133F64", Offset = "0x1133F64", VA = "0x1133F64", Slot = "16")]
		public Texture GetTexture()
		{
			return null;
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x1133F6C", Offset = "0x1133F6C", VA = "0x1133F6C", Slot = "15")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1133F70", Offset = "0x1133F70", VA = "0x1133F70")]
		public DecorationData()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104BF1C", Offset = "0x104BF1C")]
	public class MarkerData : ScriptableObject
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Prefab;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x110B5F0", Offset = "0x110B5F0", VA = "0x110B5F0")]
		public MarkerData()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104BF58", Offset = "0x104BF58")]
	public class ProfilerData : ScriptableObject, IDatabase, IStatus
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051514", Offset = "0x1051514")]
		public string Name;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture Icon;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105154C", Offset = "0x105154C")]
		public int Vert;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Mesh;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Material;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Collider;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ContentStatus _status;

		[Token(Token = "0x17000110")]
		public ContentStatus ContentStatus
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x11156BC", Offset = "0x11156BC", VA = "0x11156BC", Slot = "8")]
			get
			{
				return default(ContentStatus);
			}
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x11156C4", Offset = "0x11156C4", VA = "0x11156C4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x11156CC", Offset = "0x11156CC", VA = "0x11156CC", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x11156D4", Offset = "0x11156D4", VA = "0x11156D4", Slot = "4")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x11156DC", Offset = "0x11156DC", VA = "0x11156DC", Slot = "6")]
		public Texture GetTexture()
		{
			return null;
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x11156E4", Offset = "0x11156E4", VA = "0x11156E4", Slot = "5")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x11156EC", Offset = "0x11156EC", VA = "0x11156EC")]
		public ProfilerData()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class DebugFadeSwitch : MonoBehaviour
	{
		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode Shortcut;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051594", Offset = "0x1051594")]
		public List<SceneSettingsData> SceneSettings;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int selectedScene;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1131FB8", Offset = "0x1131FB8", VA = "0x1131FB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1132074", Offset = "0x1132074", VA = "0x1132074")]
		public DebugFadeSwitch()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104BF94", Offset = "0x104BF94")]
	public class DebugMaterialConfiguration : ScriptableObject
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x11321F4", Offset = "0x11321F4", VA = "0x11321F4")]
		public DebugMaterialConfiguration()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class DestructibleWall : MonoBehaviour, IAttackable
	{
		[Serializable]
		[Token(Token = "0x20001D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104BFE8", Offset = "0x104BFE8")]
		private sealed class <>c
		{
			[Token(Token = "0x40009AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<CombinedMesh> <>9__6_0;

			[Token(Token = "0x40009AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Collider> <>9__6_1;

			[Token(Token = "0x600091A")]
			[Address(RVA = "0x11352E4", Offset = "0x11352E4", VA = "0x11352E4")]
			public <>c()
			{
			}

			[Token(Token = "0x600091B")]
			[Address(RVA = "0x11352EC", Offset = "0x11352EC", VA = "0x11352EC")]
			internal void <LoseHealth>b__6_0(CombinedMesh cm)
			{
			}

			[Token(Token = "0x600091C")]
			[Address(RVA = "0x1135308", Offset = "0x1135308", VA = "0x1135308")]
			internal void <LoseHealth>b__6_1(Collider c)
			{
			}
		}

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CombinedMesh> wallParts;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject explosion;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Collider> colliders;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NavMeshObstacle navMeshObstacle;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isAlive;

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1134F84", Offset = "0x1134F84", VA = "0x1134F84", Slot = "5")]
		public bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1134F8C", Offset = "0x1134F8C", VA = "0x1134F8C", Slot = "4")]
		public void LoseHealth(float lives, [Optional] AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1135264", Offset = "0x1135264", VA = "0x1135264")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105A078", Offset = "0x105A078")]
		public void Destruct()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1135268", Offset = "0x1135268", VA = "0x1135268", Slot = "6")]
		public Transform GetRootTransform()
		{
			return null;
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1135270", Offset = "0x1135270", VA = "0x1135270")]
		public DestructibleWall()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class ApplyEffectOnTriggerEnter : SerializedMonoBehaviour
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BaseEffect enterEffect;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BaseEffect exitEffect;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GEUnit _geUnit;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Dictionary<GEUnit, int> _geUnitsWithEffect;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x11E1E94", Offset = "0x11E1E94", VA = "0x11E1E94")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x11E2114", Offset = "0x11E2114", VA = "0x11E2114")]
		private void AddAffectedUnitToListAndEnterEffect()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x11E2064", Offset = "0x11E2064", VA = "0x11E2064")]
		private bool CheckIfContainsUnitAndIncrementEffectParts()
		{
			return default(bool);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x11E2244", Offset = "0x11E2244", VA = "0x11E2244")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x11E226C", Offset = "0x11E226C", VA = "0x11E226C")]
		private void DecrementAffectedPartsAndSwitchEffectsIfPartsZero()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x11E1F44", Offset = "0x11E1F44", VA = "0x11E1F44")]
		private GEUnit GetGeUnit(Collider other)
		{
			return null;
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x11E217C", Offset = "0x11E217C", VA = "0x11E217C")]
		private void AddEnterEffect()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x11E2398", Offset = "0x11E2398", VA = "0x11E2398")]
		private void SwitchEffect()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x11E2460", Offset = "0x11E2460", VA = "0x11E2460")]
		public ApplyEffectOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104BFF8", Offset = "0x104BFF8")]
	public class BaseEffect : SerializedScriptableObject, IDatabaseInfo, IDatabaseSingleInfo, IValidation
	{
		[Token(Token = "0x20001D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C04C", Offset = "0x104C04C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x6000930")]
			[Address(RVA = "0x10C9EC8", Offset = "0x10C9EC8", VA = "0x10C9EC8")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000931")]
			[Address(RVA = "0x10CA638", Offset = "0x10CA638", VA = "0x10CA638")]
			internal void <OnExecute>b__0(IAction effect)
			{
			}
		}

		[Token(Token = "0x20001D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C05C", Offset = "0x104C05C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40009C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GEUnit targetUnit;

			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit sourceUnit;

			[Token(Token = "0x6000932")]
			[Address(RVA = "0x10CA074", Offset = "0x10CA074", VA = "0x10CA074")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6000933")]
			[Address(RVA = "0x10CA704", Offset = "0x10CA704", VA = "0x10CA704")]
			internal void <OnExecute>b__0(IUnitAction effect)
			{
			}

			[Token(Token = "0x6000934")]
			[Address(RVA = "0x10CA7D4", Offset = "0x10CA7D4", VA = "0x10CA7D4")]
			internal void <OnExecute>b__1(IUnitAttackInfoAction effect)
			{
			}
		}

		[Token(Token = "0x20001DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C06C", Offset = "0x104C06C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x6000935")]
			[Address(RVA = "0x10CA194", Offset = "0x10CA194", VA = "0x10CA194")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000936")]
			[Address(RVA = "0x10CA8AC", Offset = "0x10CA8AC", VA = "0x10CA8AC")]
			internal void <OnRemove>b__0(IState effect)
			{
			}

			[Token(Token = "0x6000937")]
			[Address(RVA = "0x10CA97C", Offset = "0x10CA97C", VA = "0x10CA97C")]
			internal void <OnRemove>b__1(IAction effect)
			{
			}
		}

		[Token(Token = "0x20001DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C07C", Offset = "0x104C07C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x6000938")]
			[Address(RVA = "0x10CA260", Offset = "0x10CA260", VA = "0x10CA260")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6000939")]
			[Address(RVA = "0x10CAA48", Offset = "0x10CAA48", VA = "0x10CAA48")]
			internal void <OnEquip>b__0(IState effect)
			{
			}
		}

		[Token(Token = "0x20001DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C08C", Offset = "0x104C08C")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GEUnit unit;

			[Token(Token = "0x600093A")]
			[Address(RVA = "0x10CA384", Offset = "0x10CA384", VA = "0x10CA384")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600093B")]
			[Address(RVA = "0x10CAB18", Offset = "0x10CAB18", VA = "0x10CAB18")]
			internal void <OnEquip>b__0(IState effect)
			{
			}

			[Token(Token = "0x600093C")]
			[Address(RVA = "0x10CABE8", Offset = "0x10CABE8", VA = "0x10CABE8")]
			internal void <OnEquip>b__1(IUnitAction effect)
			{
			}
		}

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10515FC", Offset = "0x10515FC")]
		public float effectDuration;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool repeatInfinite;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x1051634", Offset = "0x1051634")]
		public int repeatEffect;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool executeAtStart;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color EffectColor;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051670", Offset = "0x1051670")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1051670", Offset = "0x1051670")]
		public List<IUnitAction> onExecutionUnitEffect;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10516E0", Offset = "0x10516E0")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10516E0", Offset = "0x10516E0")]
		public List<IUnitAttackInfoAction> onExecutionUnitWithAttackInfoEffect;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1051750", Offset = "0x1051750")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051750", Offset = "0x1051750")]
		[InlineProperty]
		public List<IAction> onExecuteEffect;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10517C0", Offset = "0x10517C0")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10517C0", Offset = "0x10517C0")]
		public List<IAction> onRemoveEffect;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1051830", Offset = "0x1051830")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051830", Offset = "0x1051830")]
		public List<IState> onEquipEffect;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10518A0", Offset = "0x10518A0")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10518A0", Offset = "0x10518A0")]
		public List<IUnitAction> onStartEffect;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<UnitData> ImmuneUnites;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnitData> cachedWorldProgression;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<UnitData> cachedUnitDatas;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public EffectType _effectType;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<EffectType> cachedEffectTypes;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051910", Offset = "0x1051910")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1051910", Offset = "0x1051910")]
		public List<IPlayerState> PlayerStates;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<EffectType> EffectTypesInDatabase;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x1051980", Offset = "0x1051980")]
		public bool removable;

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x10C9E04", Offset = "0x10C9E04", VA = "0x10C9E04")]
		public void OnExecute(Transform transform)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x10C9ED0", Offset = "0x10C9ED0", VA = "0x10C9ED0")]
		public void OnExecute(Transform transform, GEUnit targetUnit, GEUnit sourceUnit)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x10CA07C", Offset = "0x10CA07C", VA = "0x10CA07C")]
		public void OnRemove(Transform transform)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x10CA19C", Offset = "0x10CA19C", VA = "0x10CA19C")]
		public void OnEquip(Transform transform)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x10CA268", Offset = "0x10CA268", VA = "0x10CA268")]
		public void OnEquip(Transform transform, GEUnit unit)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x10CA38C", Offset = "0x10CA38C", VA = "0x10CA38C", Slot = "8")]
		public void Print()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x10CA390", Offset = "0x10CA390", VA = "0x10CA390", Slot = "9")]
		public void PrintSingle()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x10CA394", Offset = "0x10CA394", VA = "0x10CA394", Slot = "10")]
		public string GetError(ValidationMode mode)
		{
			return null;
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x10CA41C", Offset = "0x10CA41C", VA = "0x10CA41C")]
		public BaseEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DD")]
	public class AppliedEffect
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseEffect baseEffect;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float nextTimeToExecute;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int repeatCounter;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GEUnit source;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GEUnit target;

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x11E1D88", Offset = "0x11E1D88", VA = "0x11E1D88")]
		public AppliedEffect()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class EffectComponent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C09C", Offset = "0x104C09C")]
		private sealed class <>c
		{
			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AppliedEffect> <>9__10_0;

			[Token(Token = "0x6000951")]
			[Address(RVA = "0x1138D2C", Offset = "0x1138D2C", VA = "0x1138D2C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000952")]
			[Address(RVA = "0x1138D34", Offset = "0x1138D34", VA = "0x1138D34")]
			internal bool <Update>b__10_0(AppliedEffect effect)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C0AC", Offset = "0x104C0AC")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool containsEffect;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BaseEffect baseEffect;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppliedEffect curAppliedEffect;

			[Token(Token = "0x6000953")]
			[Address(RVA = "0x113875C", Offset = "0x113875C", VA = "0x113875C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000954")]
			[Address(RVA = "0x1138D54", Offset = "0x1138D54", VA = "0x1138D54")]
			internal void <ApplyEffect>b__0(AppliedEffect effect)
			{
			}
		}

		[Token(Token = "0x20001E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C0BC", Offset = "0x104C0BC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EffectType effectType;

			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EffectComponent <>4__this;

			[Token(Token = "0x6000955")]
			[Address(RVA = "0x1138994", Offset = "0x1138994", VA = "0x1138994")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6000956")]
			[Address(RVA = "0x1138DF0", Offset = "0x1138DF0", VA = "0x1138DF0")]
			internal void <RemoveAllEffectsWithType>b__0(AppliedEffect effect)
			{
			}

			[Token(Token = "0x6000957")]
			[Address(RVA = "0x1138EBC", Offset = "0x1138EBC", VA = "0x1138EBC")]
			internal bool <RemoveAllEffectsWithType>b__1(AppliedEffect effect)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C0CC", Offset = "0x104C0CC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EffectType effectType;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EffectComponent <>4__this;

			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool anEffectWasRemoved;

			[Token(Token = "0x6000958")]
			[Address(RVA = "0x1138AEC", Offset = "0x1138AEC", VA = "0x1138AEC")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000959")]
			[Address(RVA = "0x1138F4C", Offset = "0x1138F4C", VA = "0x1138F4C")]
			internal void <RemoveAllEffectsDependingIfRemovable>b__0(AppliedEffect effect)
			{
			}

			[Token(Token = "0x600095A")]
			[Address(RVA = "0x113901C", Offset = "0x113901C", VA = "0x113901C")]
			internal bool <RemoveAllEffectsDependingIfRemovable>b__1(AppliedEffect effect)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<AppliedEffect> _appliedEffects;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<EffectType> _immuneEffectTypes;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GEUnit sourceUnit;

		[Token(Token = "0x14000018")]
		public event Action<EffectType> OnApplyEffect
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x1137E9C", Offset = "0x1137E9C", VA = "0x1137E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A088", Offset = "0x105A088")]
			add
			{
			}
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x1137F40", Offset = "0x1137F40", VA = "0x1137F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A098", Offset = "0x105A098")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<EffectType> OnRemoveEffect
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x1137FE4", Offset = "0x1137FE4", VA = "0x1137FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A0A8", Offset = "0x105A0A8")]
			add
			{
			}
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x1138088", Offset = "0x1138088", VA = "0x1138088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A0B8", Offset = "0x105A0B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x113812C", Offset = "0x113812C", VA = "0x113812C")]
		public void SetSourceUnit(GEUnit unit)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1138134", Offset = "0x1138134", VA = "0x1138134")]
		private void Update()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x11382D0", Offset = "0x11382D0", VA = "0x11382D0")]
		private void CheckForNextExecution(AppliedEffect effect)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x11384A8", Offset = "0x11384A8", VA = "0x11384A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1138320", Offset = "0x1138320", VA = "0x1138320")]
		private void ExecuteEffectAndCheckRemove(AppliedEffect effect, bool executedOnStart = false)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x1138544", Offset = "0x1138544", VA = "0x1138544")]
		public void ApplyEffect(BaseEffect baseEffect)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x1138764", Offset = "0x1138764", VA = "0x1138764")]
		public void RemoveAllEffectsAndAddNew(BaseEffect exitEffect)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x11388E0", Offset = "0x11388E0", VA = "0x11388E0")]
		public void RemoveAllEffects()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x113879C", Offset = "0x113879C", VA = "0x113879C")]
		public void RemoveAllEffectsWithType(EffectType effectType)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x113899C", Offset = "0x113899C", VA = "0x113899C")]
		public void RemoveAllEffectsDependingIfRemovable(EffectType effectType)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x1138AF4", Offset = "0x1138AF4", VA = "0x1138AF4")]
		public EffectComponent()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1138B8C", Offset = "0x1138B8C", VA = "0x1138B8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A0C8", Offset = "0x105A0C8")]
		private void <Update>b__10_1(AppliedEffect effect)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1138C50", Offset = "0x1138C50", VA = "0x1138C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A0D8", Offset = "0x105A0D8")]
		private void <OnDestroy>b__12_0(AppliedEffect effect)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1138C8C", Offset = "0x1138C8C", VA = "0x1138C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A0E8", Offset = "0x105A0E8")]
		private void <RemoveAllEffects>b__16_0(AppliedEffect effect)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104C0DC", Offset = "0x104C0DC")]
	public class EffectType : ScriptableObject
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x1051A00", Offset = "0x1051A00")]
		public string description;

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x11390D0", Offset = "0x11390D0", VA = "0x11390D0")]
		public EffectType()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class TelegraphShots : BaseTelegraphShots
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startScale;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float endScale;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool multipleSpawnPoints;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1051A10", Offset = "0x1051A10")]
		public Weapon weapon;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1051A4C", Offset = "0x1051A4C")]
		public int spawnPointId;

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1104FA0", Offset = "0x1104FA0", VA = "0x1104FA0", Slot = "8")]
		protected override void VisualizeProgress(float percentage)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1105244", Offset = "0x1105244", VA = "0x1105244")]
		public TelegraphShots()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class TelegraphSniperShot : BaseTelegraphShots
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GE.WeaponConfigurator.LaserPointer laserPointer;

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1105260", Offset = "0x1105260", VA = "0x1105260", Slot = "8")]
		protected override void VisualizeProgress(float percentage)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1105348", Offset = "0x1105348", VA = "0x1105348")]
		public TelegraphSniperShot()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class RepairActivity : BaseActivity
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator animator;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string parameter;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float repairSpeed;

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1117EC4", Offset = "0x1117EC4", VA = "0x1117EC4", Slot = "6")]
		public override void Execute(GEUnit targetUnit)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1117FE4", Offset = "0x1117FE4", VA = "0x1117FE4", Slot = "4")]
		public override void StartExecution(GEUnit targetUnit)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1117FEC", Offset = "0x1117FEC", VA = "0x1117FEC", Slot = "5")]
		public override void EndExecution(GEUnit targetUnit)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1117FF4", Offset = "0x1117FF4", VA = "0x1117FF4")]
		public RepairActivity()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class ExplosionAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x20001E8")]
		public enum State
		{
			[Token(Token = "0x4000A01")]
			Idle,
			[Token(Token = "0x4000A02")]
			Activated,
			[Token(Token = "0x4000A03")]
			Disabled
		}

		[Serializable]
		[Token(Token = "0x20001E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C130", Offset = "0x104C130")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__0_0;

			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject> <>9__25_0;

			[Token(Token = "0x6000977")]
			[Address(RVA = "0x11436A4", Offset = "0x11436A4", VA = "0x11436A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000978")]
			[Address(RVA = "0x11436AC", Offset = "0x11436AC", VA = "0x11436AC")]
			internal void <Start>b__0_0(GameObject obj)
			{
			}

			[Token(Token = "0x6000979")]
			[Address(RVA = "0x11436CC", Offset = "0x11436CC", VA = "0x11436CC")]
			internal void <Attack>b__25_0(GameObject obj)
			{
			}
		}

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseMovement movement;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxAttackDistance;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float attackDelay;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExternalRagdoll externalRagdoll;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnitData explosionSource;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject explosionPrefab;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform explosionParent;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<GameObject> destroyOnExplosion;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<GameObject> enableOnActivate;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<AssetInfoTag> infoTags;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Rigidbody> addExtraForce;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float extraForceVelocity;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool explodeOnDeath;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool triggerAttackOnDeath;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		private bool isAttacking;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GEUnit geUnit;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timer;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool hasExploded;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051A88", Offset = "0x1051A88")]
		private State <state>k__BackingField;

		[Token(Token = "0x17000111")]
		public bool IsAttacking
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x11432FC", Offset = "0x11432FC", VA = "0x11432FC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public bool AutoAttack
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x1143304", Offset = "0x1143304", VA = "0x1143304")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		public bool BurstAttack
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x114330C", Offset = "0x114330C", VA = "0x114330C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public State state
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x1143570", Offset = "0x1143570", VA = "0x1143570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A0F8", Offset = "0x105A0F8")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x1143578", Offset = "0x1143578", VA = "0x1143578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A108", Offset = "0x105A108")]
			private set
			{
			}
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1142AB0", Offset = "0x1142AB0", VA = "0x1142AB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x1142C2C", Offset = "0x1142C2C", VA = "0x1142C2C")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1143314", Offset = "0x1143314", VA = "0x1143314", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x11431B8", Offset = "0x11431B8", VA = "0x11431B8", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1143380", Offset = "0x1143380", VA = "0x1143380", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x11434B4", Offset = "0x11434B4", VA = "0x11434B4", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1143514", Offset = "0x1143514", VA = "0x1143514", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x1143518", Offset = "0x1143518", VA = "0x1143518", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1143520", Offset = "0x1143520", VA = "0x1143520")]
		private void Update()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1142CC4", Offset = "0x1142CC4", VA = "0x1142CC4")]
		public void Explode()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1143580", Offset = "0x1143580", VA = "0x1143580")]
		internal void Deactivate()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x114358C", Offset = "0x114358C", VA = "0x114358C", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1143594", Offset = "0x1143594", VA = "0x1143594")]
		public ExplosionAttack()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class RobotDisassemble : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C140", Offset = "0x104C140")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SkinnedMeshRenderer> <>9__9_0;

			[Token(Token = "0x6000982")]
			[Address(RVA = "0x11198B4", Offset = "0x11198B4", VA = "0x11198B4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000983")]
			[Address(RVA = "0x11198BC", Offset = "0x11198BC", VA = "0x11198BC")]
			internal void <UnitHealth_OnDeath>b__9_0(SkinnedMeshRenderer s)
			{
			}
		}

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SkinnedMeshRenderer> skinnedMeshRenderers;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<RobotPart> robotParts;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetInfoTag explosionTag;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool disassembleCompletelyOnDeath;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[ReadOnly]
		public List<UnitHealthPart> damagedParts;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x11185F8", Offset = "0x11185F8", VA = "0x11185F8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1118680", Offset = "0x1118680", VA = "0x1118680")]
		private void Start()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x1118A5C", Offset = "0x1118A5C", VA = "0x1118A5C")]
		private void UnitHealth_OnHealthLost(float arg1, AttackInfo info)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x1118BC0", Offset = "0x1118BC0", VA = "0x1118BC0")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x111958C", Offset = "0x111958C", VA = "0x111958C")]
		private void Part_OnHealthLost(UnitHealthPart healthPart, float damage)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1118B78", Offset = "0x1118B78", VA = "0x1118B78")]
		private void Disassemble(RobotPart robotPart)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x11197B8", Offset = "0x11197B8", VA = "0x11197B8")]
		public RobotDisassemble()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class RobotPart : MonoBehaviour
	{
		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollBoneLink ragdollBoneLink;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnitHealthPart unitHealthPart;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Joint joint;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float priorityDistanceMultiplicator;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<UnitHealthPart> subUnitHealthParts;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051AA8", Offset = "0x1051AA8")]
		public List<RobotPart> childRobotParts;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051AE0", Offset = "0x1051AE0")]
		public GameObject disassembleEffect;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool parentDisassembleEffect;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float disassembleEffectLifeTime;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool mainPickable;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool canBeDisassembled;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool isPickableAfterDisassemble;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051B18", Offset = "0x1051B18")]
		public bool disassembleWhileAlive;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[ReadOnly]
		public bool disassembled;

		[Token(Token = "0x4000A1E")]
		private const float maxAcceptedSpeed = 13f;

		[Token(Token = "0x4000A1F")]
		private const float maxAcceptedAngularSpeed = 2f;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051B60", Offset = "0x1051B60")]
		private PickableObject <PickableObject>k__BackingField;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isPickable;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool isPickedUp;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 lastRigidbodyPosition;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion lastRigidbodyRotation;

		[Token(Token = "0x17000115")]
		public PickableObject PickableObject
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x111A3DC", Offset = "0x111A3DC", VA = "0x111A3DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A118", Offset = "0x105A118")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x111A3E4", Offset = "0x111A3E4", VA = "0x111A3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A128", Offset = "0x105A128")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action OnDisassembled
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x111AAC0", Offset = "0x111AAC0", VA = "0x111AAC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A138", Offset = "0x105A138")]
			add
			{
			}
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x111AB64", Offset = "0x111AB64", VA = "0x111AB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A148", Offset = "0x105A148")]
			remove
			{
			}
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x111A1D4", Offset = "0x111A1D4", VA = "0x111A1D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x111A1E0", Offset = "0x111A1E0", VA = "0x111A1E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x111A26C", Offset = "0x111A26C", VA = "0x111A26C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1119358", Offset = "0x1119358", VA = "0x1119358")]
		public void MakePickable()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x111A3EC", Offset = "0x111A3EC", VA = "0x111A3EC")]
		private void Po_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x111A58C", Offset = "0x111A58C", VA = "0x111A58C")]
		private void Po_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x111A784", Offset = "0x111A784", VA = "0x111A784")]
		private void OnVisualModelUpdated()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x111A7A0", Offset = "0x111A7A0", VA = "0x111A7A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x111A8E8", Offset = "0x111A8E8", VA = "0x111A8E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x111A634", Offset = "0x111A634", VA = "0x111A634")]
		private void BreakToEnsureStability()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1118F44", Offset = "0x1118F44", VA = "0x1118F44")]
		internal void Disassemble(bool isAlive, bool disassembleCompletelyOnDeath = false)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x111AC08", Offset = "0x111AC08", VA = "0x111AC08")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105A158", Offset = "0x105A158")]
		public void DebugDisassemble()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1119704", Offset = "0x1119704", VA = "0x1119704")]
		public bool ContainsHealthPart(UnitHealthPart healthPart)
		{
			return default(bool);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x111AC2C", Offset = "0x111AC2C", VA = "0x111AC2C")]
		public RobotPart()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x111ACBC", Offset = "0x111ACBC", VA = "0x111ACBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A168", Offset = "0x105A168")]
		private bool <Update>b__30_0(RagdollPerformance.RagdollInfo r)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001ED")]
	public class RotateOnMissingLegs : MonoBehaviour
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 missingLegOffset;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 missingLegRotationOffset;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<RobotPart> robotParts;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool disableSpiderOnAllLegsLost;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExplosionAttack explosionAttack;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnitHealth health;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialLocalPosition;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion initialLocalRotation;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector3> localOffsets;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 currentRotation;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 currentLocalOffset;

		[Token(Token = "0x4000A31")]
		private const float lerpSpeed = 7f;

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x111BC54", Offset = "0x111BC54", VA = "0x111BC54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x111BE94", Offset = "0x111BE94", VA = "0x111BE94")]
		private void Health_OnDeath()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x111BF9C", Offset = "0x111BF9C", VA = "0x111BF9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x111C5A8", Offset = "0x111C5A8", VA = "0x111C5A8")]
		public RotateOnMissingLegs()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C150", Offset = "0x104C150")]
	public class SpiderHangFromCeiling : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C164", Offset = "0x104C164")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SpiderLeg> <>9__10_0;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SpiderLeg> <>9__12_0;

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x10FF7EC", Offset = "0x10FF7EC", VA = "0x10FF7EC")]
			public <>c()
			{
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x10FF7F4", Offset = "0x10FF7F4", VA = "0x10FF7F4")]
			internal void <Start>b__10_0(SpiderLeg leg)
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x10FF810", Offset = "0x10FF810", VA = "0x10FF810")]
			internal void <ActivateBehaviour_OnStartExecution>b__12_0(SpiderLeg leg)
			{
			}
		}

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Rigidbody rigidBody;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AIBehaviourManager manager;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ActivateBehavioursBehaviour activateBehaviour;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<SpiderLeg> spiderLegs;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SpiderMovement movement;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<IAction> OnReleaseActions;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<IAction> OnLandOnGroundActions;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isFallingDown;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool stickToCeiling;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Vector3 ceilingOffset;

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x10FEB30", Offset = "0x10FEB30", VA = "0x10FEB30")]
		private void Start()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x10FEFB4", Offset = "0x10FEFB4", VA = "0x10FEFB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x10FF504", Offset = "0x10FF504", VA = "0x10FF504")]
		private void ActivateBehaviour_OnStartExecution()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x10FF680", Offset = "0x10FF680", VA = "0x10FF680")]
		private void Reset()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x10FF718", Offset = "0x10FF718", VA = "0x10FF718")]
		public SpiderHangFromCeiling()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class SpiderMovement : AnimatedMovement
	{
		[Token(Token = "0x20001F1")]
		public class LegTarget
		{
			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 initialLocalPosition;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int initialPosition;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpiderLeg spiderLeg;

			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x1100B38", Offset = "0x1100B38", VA = "0x1100B38")]
			public LegTarget(Transform transform, Vector3 initialLocalPosition, int currentPosition, SpiderLeg spiderLeg)
			{
			}
		}

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051BA0", Offset = "0x1051BA0")]
		public List<SpiderLeg> spiderLegs;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<LegTarget> legTargets;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[ExposedInUnitDesigner]
		public Transform hip;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051BE8", Offset = "0x1051BE8")]
		[ExposedInUnitDesigner]
		public float legLength;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051C34", Offset = "0x1051C34")]
		public float legMovementLength;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051C6C", Offset = "0x1051C6C")]
		[ExposedInUnitDesigner]
		public float liftLegHeight;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051CB8", Offset = "0x1051CB8")]
		public bool isDizzy;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Vector3 finalMovement;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public bool fallInAir;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		public bool disableAnimatorOnDeath;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float currentTime;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float timeSinceWaitingSpider;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Dictionary<SpiderLeg, int> offsets;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float timeSinceLastMove;

		[Token(Token = "0x1400001B")]
		public event Action<Transform> OnLegChange
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x1100C3C", Offset = "0x1100C3C", VA = "0x1100C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A178", Offset = "0x105A178")]
			add
			{
			}
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x1100CE4", Offset = "0x1100CE4", VA = "0x1100CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A188", Offset = "0x105A188")]
			remove
			{
			}
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1100914", Offset = "0x1100914", VA = "0x1100914", Slot = "45")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1100BA0", Offset = "0x1100BA0", VA = "0x1100BA0")]
		private void SpiderMovement_OnEnableRagdoll(ExternalRagdoll arg1, bool arg2)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1100D8C", Offset = "0x1100D8C", VA = "0x1100D8C", Slot = "46")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1100DD0", Offset = "0x1100DD0", VA = "0x1100DD0", Slot = "42")]
		protected override void FollowNMA()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1101C2C", Offset = "0x1101C2C", VA = "0x1101C2C")]
		public SpiderMovement()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class StopMovementOnDamage : MonoBehaviour
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseMovement movement;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float stopTime;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeSinceDizzy;

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1103488", Offset = "0x1103488", VA = "0x1103488")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x110352C", Offset = "0x110352C", VA = "0x110352C")]
		private void UnitHealth_OnHealthLost(float arg1, AttackInfo arg2)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1103558", Offset = "0x1103558", VA = "0x1103558")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x11035BC", Offset = "0x11035BC", VA = "0x11035BC")]
		public StopMovementOnDamage()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class Submerge : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C174", Offset = "0x104C174")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SkinnedMeshRenderer> <>9__22_0;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SkinnedMeshRenderer> <>9__26_0;

			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x1103E3C", Offset = "0x1103E3C", VA = "0x1103E3C")]
			public <>c()
			{
			}

			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x1103E44", Offset = "0x1103E44", VA = "0x1103E44")]
			internal void <Update>b__22_0(SkinnedMeshRenderer r)
			{
			}

			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x1103E64", Offset = "0x1103E64", VA = "0x1103E64")]
			internal void <Appear>b__26_0(SkinnedMeshRenderer r)
			{
			}
		}

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SpiderMovement movement;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Animator animator;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 timeSubmerged;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2 timeEmerged;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051D00", Offset = "0x1051D00")]
		public float submergeDuration;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float submergedSpeedMultiplicator;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2 minDistanceToEnemyOnSubmerge;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051D38", Offset = "0x1051D38")]
		public float reappearDuration;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform externalRagdoll;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<SkinnedMeshRenderer> renderers;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform submergedModel;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<AssetBehaviourType> submergeBehaviourTypes;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AIBehaviourManager aiManager;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051D70", Offset = "0x1051D70")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1051D70", Offset = "0x1051D70")]
		public List<IAction> SubmergeActions;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1051DE0", Offset = "0x1051DE0")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051DE0", Offset = "0x1051DE0")]
		[InlineProperty]
		public List<IAction> ReappearActions;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float timeSinceLastReappear;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float timeSinceLastSubmerge;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float nextSubmerge;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float nextAppear;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isSubmerged;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float spiderMovementSpeed;

		[Token(Token = "0x17000116")]
		private float DistanceToEnemy
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x11038D0", Offset = "0x11038D0", VA = "0x11038D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x11035CC", Offset = "0x11035CC", VA = "0x11035CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1103620", Offset = "0x1103620", VA = "0x1103620")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1103BF4", Offset = "0x1103BF4", VA = "0x1103BF4")]
		private void SubmergeUnit()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1103A68", Offset = "0x1103A68", VA = "0x1103A68")]
		private void Appear()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1103C94", Offset = "0x1103C94", VA = "0x1103C94")]
		public Submerge()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class EntityCounter : SerializedMonoBehaviour
	{
		[Token(Token = "0x20001F6")]
		public class AmountInfo
		{
			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetUnitTag Tag;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizationData Localisation;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Amount;

			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x113A89C", Offset = "0x113A89C", VA = "0x113A89C")]
			public AmountInfo()
			{
			}
		}

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051E50", Offset = "0x1051E50")]
		public Text Label;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051E88", Offset = "0x1051E88")]
		public LString Title;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LString Success;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051EC0", Offset = "0x1051EC0")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x1051EC0", Offset = "0x1051EC0")]
		public List<AmountInfo> AmountCondition;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051F1C", Offset = "0x1051F1C")]
		public bool DeleteItems;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool DeactivateSelf;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1051F54", Offset = "0x1051F54")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1051F54", Offset = "0x1051F54")]
		public List<IAction> Actions;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1051FC4", Offset = "0x1051FC4")]
		public HashSet<IEntity> Entities;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Dictionary<AssetUnitTag, HashSet<IEntity>> Groups;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IEntity _entity;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _valid;

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x11394C0", Offset = "0x11394C0", VA = "0x11394C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1139848", Offset = "0x1139848", VA = "0x1139848")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x11398C4", Offset = "0x11398C4", VA = "0x11398C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x11398C8", Offset = "0x11398C8", VA = "0x11398C8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x113A3A8", Offset = "0x113A3A8", VA = "0x113A3A8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1139544", Offset = "0x1139544", VA = "0x1139544")]
		private void RefreshConditions([Optional] LanguageData language)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1139E08", Offset = "0x1139E08", VA = "0x1139E08")]
		private void CheckCondition()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x113A7B4", Offset = "0x113A7B4", VA = "0x113A7B4")]
		public EntityCounter()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class BackgroundCity : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001F8")]
		public class Sky
		{
			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict district;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SkyData skybox;

			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x10C9768", Offset = "0x10C9768", VA = "0x10C9768")]
			public Sky()
			{
			}
		}

		[Token(Token = "0x20001F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C184", Offset = "0x104C184")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict currentDistrict;

			[Token(Token = "0x60009C7")]
			[Address(RVA = "0x10C9604", Offset = "0x10C9604", VA = "0x10C9604")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x10C96E0", Offset = "0x10C96E0", VA = "0x10C96E0")]
			internal bool <Awake>b__0(Sky s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BackgroundCity instance;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject city;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Sky> skyboxes;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkyData defaultSkybox;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sky currentSky;

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x10C94C8", Offset = "0x10C94C8", VA = "0x10C94C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x10C960C", Offset = "0x10C960C", VA = "0x10C960C")]
		public void EnableBackgroundCity(bool val)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x10C9670", Offset = "0x10C9670", VA = "0x10C9670")]
		public BackgroundCity()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class DoorHandling : SerializedMonoBehaviour
	{
		[Token(Token = "0x20001FB")]
		public enum LockType
		{
			[Token(Token = "0x4000AA3")]
			LockInBattle,
			[Token(Token = "0x4000AA4")]
			Manually
		}

		[Serializable]
		[Token(Token = "0x20001FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C194", Offset = "0x104C194")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GEUnit> <>9__18_0;

			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GEUnit> <>9__43_0;

			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GEUnit> <>9__49_0;

			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x11379DC", Offset = "0x11379DC", VA = "0x11379DC")]
			public <>c()
			{
			}

			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x11379E4", Offset = "0x11379E4", VA = "0x11379E4")]
			internal bool <Instance_OnRoomChanged>b__18_0(GEUnit c)
			{
				return default(bool);
			}

			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x1137A50", Offset = "0x1137A50", VA = "0x1137A50")]
			internal bool <OnTriggerEnter>b__43_0(GEUnit c)
			{
				return default(bool);
			}

			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x1137ABC", Offset = "0x1137ABC", VA = "0x1137ABC")]
			internal bool <RemoveUnit>b__49_0(GEUnit c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator doorAnim;

		[Token(Token = "0x4000A85")]
		private const float minCloseDistanceToDoor = 1.5f;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RoomConnector roomConnector;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LockType lockType;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isLocked;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshFilter doorLeft;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshFilter doorRight;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshFilter panelLocked;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MeshFilter panelUnlocked;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AssetUnitTag requiredTag;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public bool entered;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NavMeshObstacle navMeshOstacle;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float unlockDoorTimestamp;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool debugLock;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[ReadOnly]
		public List<GEUnit> currentUnits;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[ReadOnly]
		public List<GEUnit> disabledObjects;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<GenericEvent> DoorLockedEvents;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<GenericEvent> DoorUnlockedEvents;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<GenericEvent> DoorOpenEvents;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<GenericEvent> DoorCloseEvents;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<GenericEvent> DoorFailedToOpenEvents;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool roomCenterPointSetUp;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 roomCenterPoint;

		[Token(Token = "0x4000A9C")]
		private const float maxLockTime = 45f;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[ReadOnly]
		[SerializeField]
		private float lockTime;

		[Token(Token = "0x4000A9E")]
		private const float doorCloseTimer = 0.5f;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float closeAfterBattleTimer;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isOpen;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool closeAfterBattle;

		[Token(Token = "0x1400001C")]
		public event Action<bool> OnDoorLocked
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x1136998", Offset = "0x1136998", VA = "0x1136998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A198", Offset = "0x105A198")]
			add
			{
			}
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x1136A3C", Offset = "0x1136A3C", VA = "0x1136A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A1A8", Offset = "0x105A1A8")]
			remove
			{
			}
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1135AA8", Offset = "0x1135AA8", VA = "0x1135AA8")]
		public void UpdateDoorModels(AssetRoomConnector roomConnectorInfo, RoomConnector.Type type)
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1135B34", Offset = "0x1135B34", VA = "0x1135B34")]
		internal void SetDoorPanels(Mesh panelClosed, Mesh panelOpen)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1135C28", Offset = "0x1135C28", VA = "0x1135C28")]
		private void Start()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1136008", Offset = "0x1136008", VA = "0x1136008")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x11360F8", Offset = "0x11360F8", VA = "0x11360F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x11361E8", Offset = "0x11361E8", VA = "0x11361E8")]
		private void Instance_OnRoomChanged(OcclusionContainer occlusionContainer)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x11365FC", Offset = "0x11365FC", VA = "0x11365FC")]
		public void LockDoor()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1136770", Offset = "0x1136770", VA = "0x1136770")]
		public void UnlockDoor()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x1136AE0", Offset = "0x1136AE0", VA = "0x1136AE0")]
		private bool LeadsToDeactivatedRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1136CDC", Offset = "0x1136CDC", VA = "0x1136CDC")]
		private bool GetPlayerInfrontOfDoor()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1136EC0", Offset = "0x1136EC0", VA = "0x1136EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x11373F8", Offset = "0x11373F8", VA = "0x11373F8")]
		private GEUnit GetUnit(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1137560", Offset = "0x1137560", VA = "0x1137560")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x11364E8", Offset = "0x11364E8", VA = "0x11364E8")]
		private void OpenDoor()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1135DC0", Offset = "0x1135DC0", VA = "0x1135DC0")]
		private void CloseDoor()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1137794", Offset = "0x1137794", VA = "0x1137794")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x11372AC", Offset = "0x11372AC", VA = "0x11372AC")]
		private void RemoveUnit(GEUnit unit)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x1137858", Offset = "0x1137858", VA = "0x1137858")]
		public DoorHandling()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class FallingObject : MonoBehaviour
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rb;

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x111DE30", Offset = "0x111DE30", VA = "0x111DE30")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x111DED4", Offset = "0x111DED4", VA = "0x111DED4")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x111DF2C", Offset = "0x111DF2C", VA = "0x111DF2C")]
		public FallingObject()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class MoveInDirection : MonoBehaviour
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 direction;

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x110C3A0", Offset = "0x110C3A0", VA = "0x110C3A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x110C45C", Offset = "0x110C45C", VA = "0x110C45C")]
		public MoveInDirection()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class RenderBackground : MonoBehaviour
	{
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1117EBC", Offset = "0x1117EBC", VA = "0x1117EBC")]
		public RenderBackground()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class SpawnShootingRangeBot : MonoBehaviour
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spawnPosition;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform spawnContainer;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnitData spawnEnemy;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnitHealth unitHealth;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 spawnPosVector;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool spawnPossible;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool respawning;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float time;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x10FE1FC", Offset = "0x10FE1FC", VA = "0x10FE1FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x10FE240", Offset = "0x10FE240", VA = "0x10FE240")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x10FE24C", Offset = "0x10FE24C", VA = "0x10FE24C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x10FE468", Offset = "0x10FE468", VA = "0x10FE468")]
		private void DestroyRemainingBots()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x10FE410", Offset = "0x10FE410", VA = "0x10FE410")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x10FE270", Offset = "0x10FE270", VA = "0x10FE270")]
		private void SpawnBot()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x10FE6E0", Offset = "0x10FE6E0", VA = "0x10FE6E0")]
		public SpawnShootingRangeBot()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class AnimatorStateEvents : StateMachineBehaviour
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isContinuous;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter eventScript;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x1052074", Offset = "0x1052074")]
		public bool isPlayedOnStateExit;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x10520B0", Offset = "0x10520B0")]
		public bool isPlayedOnStateUpdate;

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x11E117C", Offset = "0x11E117C", VA = "0x11E117C", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x11E118C", Offset = "0x11E118C", VA = "0x11E118C")]
		private void PlaySound(Animator animator)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x11E1BE8", Offset = "0x11E1BE8", VA = "0x11E1BE8", Slot = "7")]
		public override void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x11E1C40", Offset = "0x11E1C40", VA = "0x11E1C40", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x11E1C44", Offset = "0x11E1C44", VA = "0x11E1C44", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x11E1D80", Offset = "0x11E1D80", VA = "0x11E1D80")]
		public AnimatorStateEvents()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class OnAnyUnitAttackingPlayer : GenericEventEmitter
	{
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool state;

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x110EB04", Offset = "0x110EB04", VA = "0x110EB04")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x110EBDC", Offset = "0x110EBDC", VA = "0x110EBDC")]
		public OnAnyUnitAttackingPlayer()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C1A4", Offset = "0x104C1A4")]
	public class OnDistrictEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AssetDistrict district;

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x110EF8C", Offset = "0x110EF8C", VA = "0x110EF8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x110F088", Offset = "0x110F088", VA = "0x110F088")]
		public OnDistrictEvent()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class OnTutorialFinishedEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TutorialPoint tutorialPoint;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x110F090", Offset = "0x110F090", VA = "0x110F090", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x110F128", Offset = "0x110F128", VA = "0x110F128")]
		private void TutorialPoint_OnTutorialPointFinished()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x110F134", Offset = "0x110F134", VA = "0x110F134")]
		public OnTutorialFinishedEvent()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class OnVerticalAimEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AimVerticallyAtTarget aimVertically;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x110F13C", Offset = "0x110F13C", VA = "0x110F13C")]
		private new void Start()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x110F1C8", Offset = "0x110F1C8", VA = "0x110F1C8")]
		private void AimVertically_OnVerticalAimUpdated()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x110F1D4", Offset = "0x110F1D4", VA = "0x110F1D4")]
		public OnVerticalAimEvent()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class ActivateLift : MonoBehaviour
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LiftMovement lift;

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x11DEA5C", Offset = "0x11DEA5C", VA = "0x11DEA5C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105A1B8", Offset = "0x105A1B8")]
		private void Activate()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x11DEA7C", Offset = "0x11DEA7C", VA = "0x11DEA7C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x11DEA9C", Offset = "0x11DEA9C", VA = "0x11DEA9C")]
		public ActivateLift()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class CallLiftEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LiftMovement lift;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int id;

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x10CE500", Offset = "0x10CE500", VA = "0x10CE500", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x10CE598", Offset = "0x10CE598", VA = "0x10CE598")]
		public CallLiftEvent()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class BreakableWall : MonoBehaviour
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject intact;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject broken;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Rigidbody> breakableRigidbodies;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float forceMultiplier;

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x10CBDA4", Offset = "0x10CBDA4", VA = "0x10CBDA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x10CBE38", Offset = "0x10CBE38", VA = "0x10CBE38")]
		private void UnitHealth_OnHealthLost(float damage, AttackInfo info)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x10CC110", Offset = "0x10CC110", VA = "0x10CC110")]
		public BreakableWall()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class Currency : SerializedMonoBehaviour
	{
		[Token(Token = "0x200020A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C1B8", Offset = "0x104C1B8")]
		private sealed class <DoReleaseAndDestroy>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Currency <>4__this;

			[Token(Token = "0x17000117")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A0F")]
				[Address(RVA = "0x10D59E4", Offset = "0x10D59E4", VA = "0x10D59E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000118")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A11")]
				[Address(RVA = "0x10D5A4C", Offset = "0x10D5A4C", VA = "0x10D5A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0x10D56D4", Offset = "0x10D56D4", VA = "0x10D56D4")]
			[DebuggerHidden]
			public <DoReleaseAndDestroy>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x10D5778", Offset = "0x10D5778", VA = "0x10D5778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0x10D577C", Offset = "0x10D577C", VA = "0x10D577C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x10D59EC", Offset = "0x10D59EC", VA = "0x10D59EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<GenericEvent> pickUpCompleteEvents;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int addAmount;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool allowDestruction;

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x10D554C", Offset = "0x10D554C", VA = "0x10D554C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x10D5638", Offset = "0x10D5638", VA = "0x10D5638")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x10D5664", Offset = "0x10D5664", VA = "0x10D5664")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A1F0", Offset = "0x105A1F0")]
		private IEnumerator DoReleaseAndDestroy()
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x10D5700", Offset = "0x10D5700", VA = "0x10D5700")]
		public Currency()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class CustomUsabelItem : UsableItem
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10520EC", Offset = "0x10520EC")]
		public TextMeshProUGUI InfoText;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052124", Offset = "0x1052124")]
		public bool singleUse;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public Color UsableColor;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public Color UsedColor;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public LString UsableDescription;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public LString UsedDescription;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x10D5A54", Offset = "0x10D5A54", VA = "0x10D5A54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x10D5AF4", Offset = "0x10D5AF4", VA = "0x10D5AF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x10D5B70", Offset = "0x10D5B70", VA = "0x10D5B70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x10D5BEC", Offset = "0x10D5BEC", VA = "0x10D5BEC", Slot = "15")]
		protected override void TriggerItem(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x10D5A58", Offset = "0x10D5A58", VA = "0x10D5A58")]
		private void RefreshDescription([Optional] LanguageData data)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x10D5D20", Offset = "0x10D5D20", VA = "0x10D5D20")]
		public CustomUsabelItem()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class DebugFPSControls : MonoBehaviour
	{
		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sensitivity;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera mainCam;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TrackedPoseDriver> trackedPoseDrivers;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRMovement vrMovement;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isSetUp;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 handOffsetLeft;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 handOffsetRight;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHandPosition;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightHandPosition;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PlayerHand leftHand;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PlayerHand rightHand;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UseAbility useAbilityLeftHand;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UseAbility useAbilityRightHand;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float handUpwardsModifier;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 leftHandRotation;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 rightHandRotation;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AssetUnitTag enemyTag;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private OnJoystickMove joystickMoveEvent;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float x;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float y;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1131BC8", Offset = "0x1131BC8", VA = "0x1131BC8")]
		private void SetUp()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1131EAC", Offset = "0x1131EAC", VA = "0x1131EAC")]
		public DebugFPSControls()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class DestroyCurrencyInChildren : MonoBehaviour
	{
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1134E74", Offset = "0x1134E74", VA = "0x1134E74")]
		public DestroyCurrencyInChildren()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class DistrictAppearanceProbability : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200020F")]
		public class DistrictValues
		{
			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict District;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10521A8", Offset = "0x10521A8")]
			public List<float> LevelProbabilities;

			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x1135A38", Offset = "0x1135A38", VA = "0x1135A38")]
			public DistrictValues()
			{
			}
		}

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105215C", Offset = "0x105215C")]
		protected List<DistrictValues> Districts;

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1135744", Offset = "0x1135744", VA = "0x1135744")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x11359C8", Offset = "0x11359C8", VA = "0x11359C8")]
		public DistrictAppearanceProbability()
		{
		}
	}
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C1C8", Offset = "0x104C1C8")]
	public class FloorPosition : MonoBehaviour
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetFloorHeight;

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x111F72C", Offset = "0x111F72C", VA = "0x111F72C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x111F82C", Offset = "0x111F82C", VA = "0x111F82C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x111F730", Offset = "0x111F730", VA = "0x111F730")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x111F830", Offset = "0x111F830", VA = "0x111F830")]
		public FloorPosition()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class Healthkit : UsableItem
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10521E0", Offset = "0x10521E0")]
		public TextMeshProUGUI InfoText;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052218", Offset = "0x1052218")]
		public float healAmount;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public bool singleUse;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Color UsableColor;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Color UsedColor;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public LString UsableDescription;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public LString UsedDescription;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Action<GEUnit> successHealAction;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public string MultiplierKey;

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x112C74C", Offset = "0x112C74C", VA = "0x112C74C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x112C7EC", Offset = "0x112C7EC", VA = "0x112C7EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x112C868", Offset = "0x112C868", VA = "0x112C868")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x112C8E4", Offset = "0x112C8E4", VA = "0x112C8E4", Slot = "15")]
		protected override void TriggerItem(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x112C750", Offset = "0x112C750", VA = "0x112C750")]
		private void RefreshDescription([Optional] LanguageData data)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x112CB54", Offset = "0x112CB54", VA = "0x112CB54")]
		public Healthkit()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class IgnoreExplosionForce : MonoBehaviour, INotAffectedByExplosionForce
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x112EAB0", Offset = "0x112EAB0", VA = "0x112EAB0")]
		public IgnoreExplosionForce()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class Ladder : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000214")]
		public class PickUpInfo
		{
			[Token(Token = "0x4000AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float timestamp;

			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IPicking picking;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float prevProgress;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lerpSpeed;

			[Token(Token = "0x17000119")]
			public float Progress
			{
				[Token(Token = "0x6000A30")]
				[Address(RVA = "0x11076FC", Offset = "0x11076FC", VA = "0x11076FC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x11076B0", Offset = "0x11076B0", VA = "0x11076B0")]
			public PickUpInfo(float timestamp, IPicking picking, float lerpSpeed)
			{
			}
		}

		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C1DC", Offset = "0x104C1DC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform hand;

			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x11076A8", Offset = "0x11076A8", VA = "0x11076A8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x1107838", Offset = "0x1107838", VA = "0x1107838")]
			internal float <OnVisualModelUpdate>b__0(Transform t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Transform> ladderPoints;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lerpSpeed;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float rotationBasedOffset;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<GenericEvent> onGrabCompleteEvents;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool CLIMPING;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IPicking currentPicking;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<Transform, PickUpInfo> handPickUp;

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1106C5C", Offset = "0x1106C5C", VA = "0x1106C5C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1106CB4", Offset = "0x1106CB4", VA = "0x1106CB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1106D8C", Offset = "0x1106D8C", VA = "0x1106D8C")]
		private void PickableObject_OnEndClimb(IPicking picking)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1107068", Offset = "0x1107068", VA = "0x1107068")]
		private void PickableObject_OnStartClimb(IPicking picking)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1107178", Offset = "0x1107178", VA = "0x1107178")]
		private void OnVisualModelUpdate(Transform hand)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1107794", Offset = "0x1107794", VA = "0x1107794")]
		public Ladder()
		{
		}
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C1EC", Offset = "0x104C1EC")]
	public class LiftMovement : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000217")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C200", Offset = "0x104C200")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UnitTag, bool> <>9__30_0;

			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x110AAF8", Offset = "0x110AAF8", VA = "0x110AAF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x110AB00", Offset = "0x110AB00", VA = "0x110AB00")]
			internal bool <OnCollisionEnter>b__30_0(UnitTag u)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C210", Offset = "0x104C210")]
		private sealed class <DoWait>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LiftMovement <>4__this;

			[Token(Token = "0x1700011A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A48")]
				[Address(RVA = "0x110ACA8", Offset = "0x110ACA8", VA = "0x110ACA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A4A")]
				[Address(RVA = "0x110AD10", Offset = "0x110AD10", VA = "0x110AD10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x110A9A8", Offset = "0x110A9A8", VA = "0x110A9A8")]
			[DebuggerHidden]
			public <DoWait>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x110ABDC", Offset = "0x110ABDC", VA = "0x110ABDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x110ABE0", Offset = "0x110ABE0", VA = "0x110ABE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x110ACB0", Offset = "0x110ACB0", VA = "0x110ACB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform[] waypoints;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float speed;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 movementVector;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 distanceVector;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool returnIfPlayerJumpsOff;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052260", Offset = "0x1052260")]
		public bool activeOnStart;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052298", Offset = "0x1052298")]
		public bool loop;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool stopOnEachWaypoint;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10522D0", Offset = "0x10522D0")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x10522D0", Offset = "0x10522D0")]
		public float waitTime;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float acceptableDistance;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[InlineProperty]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052334", Offset = "0x1052334")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052334", Offset = "0x1052334")]
		public List<GenericEvent> startEvents;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10523A4", Offset = "0x10523A4")]
		[InlineProperty]
		public List<GenericEvent> stopEvents;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<GenericEvent> moveUpEvents;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<GenericEvent> moveDownEvents;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[ReadOnly]
		public bool waypointReached;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[ReadOnly]
		public bool reverse;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[ReadOnly]
		public int currentTargetWaypoint;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int waypointIncrement;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool isPaused;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float pauseTimestamp;

		[Token(Token = "0x4000B19")]
		private const float moveDelay = 1.5f;

		[Token(Token = "0x1400001D")]
		public event Action<bool> OnActivateLift
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x11097A0", Offset = "0x11097A0", VA = "0x11097A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2A4", Offset = "0x105A2A4")]
			add
			{
			}
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x1109844", Offset = "0x1109844", VA = "0x1109844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2B4", Offset = "0x105A2B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x11098E8", Offset = "0x11098E8", VA = "0x11098E8")]
		public void Activate(bool val)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1109D30", Offset = "0x1109D30", VA = "0x1109D30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1109DA0", Offset = "0x1109DA0", VA = "0x1109DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x110A1B4", Offset = "0x110A1B4", VA = "0x110A1B4")]
		private void UpdateLiftMovement()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x110A0B4", Offset = "0x110A0B4", VA = "0x110A0B4")]
		private void CheckReturn()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x110A320", Offset = "0x110A320", VA = "0x110A320")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x110A6A4", Offset = "0x110A6A4", VA = "0x110A6A4")]
		private void OnCollisionExit(Collision other)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x110A7DC", Offset = "0x110A7DC", VA = "0x110A7DC")]
		public void CallToWaypoint(int id)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x1109DE4", Offset = "0x1109DE4", VA = "0x1109DE4")]
		private void WaypointVectorCalculation()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1109B48", Offset = "0x1109B48", VA = "0x1109B48")]
		private void UpdateTargetVectors()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1109EAC", Offset = "0x1109EAC", VA = "0x1109EAC")]
		private void WaypointDistance()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x110A938", Offset = "0x110A938", VA = "0x110A938")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A2C4", Offset = "0x105A2C4")]
		private IEnumerator DoWait()
		{
			return null;
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x110A9D4", Offset = "0x110A9D4", VA = "0x110A9D4")]
		public LiftMovement()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class ActivateMovement : GenericEvent, IAction
	{
		[Serializable]
		[Token(Token = "0x200021A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C220", Offset = "0x104C220")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<TwoStateMovement> <>9__1_0;

			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x11DEC7C", Offset = "0x11DEC7C", VA = "0x11DEC7C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x11DEC84", Offset = "0x11DEC84", VA = "0x11DEC84")]
			internal void <Execute>b__1_0(TwoStateMovement movement)
			{
			}
		}

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TwoStateMovement> TwoStateMovement;

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x11DEAA4", Offset = "0x11DEAA4", VA = "0x11DEAA4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x11DEBA8", Offset = "0x11DEBA8", VA = "0x11DEBA8")]
		public ActivateMovement()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class SynchronizedMovement : MovementInfo.IMovementAction
	{
		[Token(Token = "0x200021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C230", Offset = "0x104C230")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MovementInfo movementInfo;

			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x1104B90", Offset = "0x1104B90", VA = "0x1104B90")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x1104C08", Offset = "0x1104C08", VA = "0x1104C08")]
			internal void <Execute>b__0(TwoStateMovement movement)
			{
			}
		}

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TwoStateMovement> TwoStateMovement;

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1104ABC", Offset = "0x1104ABC", VA = "0x1104ABC", Slot = "4")]
		public void Execute(Transform emitter, MovementInfo movementInfo)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1104B98", Offset = "0x1104B98", VA = "0x1104B98")]
		public SynchronizedMovement()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class StartAndInverseMovementState : GenericEvent, IAction
	{
		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C240", Offset = "0x104C240")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool movementBlocked;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform emitter;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StartAndInverseMovementState <>4__this;

			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x1101E7C", Offset = "0x1101E7C", VA = "0x1101E7C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x1102014", Offset = "0x1102014", VA = "0x1102014")]
			internal void <Execute>b__0(TwoStateMovement movement)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200021F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C250", Offset = "0x104C250")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<TwoStateMovement> <>9__2_1;

			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x1101F80", Offset = "0x1101F80", VA = "0x1101F80")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x1101F88", Offset = "0x1101F88", VA = "0x1101F88")]
			internal void <Execute>b__2_1(TwoStateMovement movement)
			{
			}
		}

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TwoStateMovement> TwoStateMovement;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IAction> MovementBlockedActions;

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1101CEC", Offset = "0x1101CEC", VA = "0x1101CEC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1101E84", Offset = "0x1101E84", VA = "0x1101E84")]
		public StartAndInverseMovementState()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class StartWithMovementState : GenericEvent, IAction
	{
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TwoStateMovement> TwoStateMovement;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TwoStateMovement.MovementState MovementState;

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x11020E0", Offset = "0x11020E0", VA = "0x11020E0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1102188", Offset = "0x1102188", VA = "0x1102188")]
		public StartWithMovementState()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x11021F8", Offset = "0x11021F8", VA = "0x11021F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A378", Offset = "0x105A378")]
		private void <Execute>b__2_0(TwoStateMovement movement)
		{
		}
	}
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C260", Offset = "0x104C260")]
	public class AimVerticallyAtTarget : AimAtTransform
	{
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _reverseForward;

		[Token(Token = "0x1400001E")]
		public event Action OnVerticalAimUpdated
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x11DFEB4", Offset = "0x11DFEB4", VA = "0x11DFEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A388", Offset = "0x105A388")]
			add
			{
			}
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x11DFF58", Offset = "0x11DFF58", VA = "0x11DFF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A398", Offset = "0x105A398")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x11DFFFC", Offset = "0x11DFFFC", VA = "0x11DFFFC", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x11E0000", Offset = "0x11E0000", VA = "0x11E0000")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x11E0178", Offset = "0x11E0178", VA = "0x11E0178")]
		public AimVerticallyAtTarget()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class MovementInfo
	{
		[Token(Token = "0x2000223")]
		public interface IMovementAction
		{
			[Token(Token = "0x6000A64")]
			void Execute(Transform emitter, MovementInfo movementInfo);
		}

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool calculateSpeedWithTravelTime;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _travelTimeSec;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _movementSpeed;

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x110C464", Offset = "0x110C464", VA = "0x110C464")]
		public MovementInfo(bool calculateSpeedWithTravelTime, float travelTimeSec, float movementSpeed)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class TwoStateMovement : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000225")]
		public enum MovementState
		{
			[Token(Token = "0x4000B58")]
			State1,
			[Token(Token = "0x4000B59")]
			State2,
			[Token(Token = "0x4000B5A")]
			Between
		}

		[Token(Token = "0x2000226")]
		public enum MovementType
		{
			[Token(Token = "0x4000B5C")]
			Position,
			[Token(Token = "0x4000B5D")]
			Rotation
		}

		[Token(Token = "0x2000227")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C274", Offset = "0x104C274")]
		private sealed class <StartAutoStart>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwoStateMovement <>4__this;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A7D")]
				[Address(RVA = "0x10DBE64", Offset = "0x10DBE64", VA = "0x10DBE64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A7F")]
				[Address(RVA = "0x10DBECC", Offset = "0x10DBECC", VA = "0x10DBECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x10DA7B0", Offset = "0x10DA7B0", VA = "0x10DA7B0")]
			[DebuggerHidden]
			public <StartAutoStart>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x10DBDAC", Offset = "0x10DBDAC", VA = "0x10DBDAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x10DBDB0", Offset = "0x10DBDB0", VA = "0x10DBDB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x10DBE6C", Offset = "0x10DBE6C", VA = "0x10DBE6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C284", Offset = "0x104C284")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MovementInfo movementInfo;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TwoStateMovement <>4__this;

			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x10DB0B4", Offset = "0x10DB0B4", VA = "0x10DB0B4")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x10DBBFC", Offset = "0x10DBBFC", VA = "0x10DBBFC")]
			internal void <StartMovement>b__0(MovementInfo.IMovementAction action)
			{
			}
		}

		[Token(Token = "0x2000229")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C294", Offset = "0x104C294")]
		private sealed class <>c__DisplayClass47_1
		{
			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MovementInfo movementInfo;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TwoStateMovement <>4__this;

			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x10DB314", Offset = "0x10DB314", VA = "0x10DB314")]
			public <>c__DisplayClass47_1()
			{
			}

			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x10DBCD4", Offset = "0x10DBCD4", VA = "0x10DBCD4")]
			internal void <StartMovement>b__1(MovementInfo.IMovementAction action)
			{
			}
		}

		[Token(Token = "0x200022A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C2A4", Offset = "0x104C2A4")]
		private sealed class <StartMovementToTopInSec>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwoStateMovement <>4__this;

			[Token(Token = "0x1700011E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A87")]
				[Address(RVA = "0x10DC0FC", Offset = "0x10DC0FC", VA = "0x10DC0FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A89")]
				[Address(RVA = "0x10DC164", Offset = "0x10DC164", VA = "0x10DC164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x10DB3C4", Offset = "0x10DB3C4", VA = "0x10DB3C4")]
			[DebuggerHidden]
			public <StartMovementToTopInSec>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x10DC024", Offset = "0x10DC024", VA = "0x10DC024", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A86")]
			[Address(RVA = "0x10DC028", Offset = "0x10DC028", VA = "0x10DC028", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x10DC104", Offset = "0x10DC104", VA = "0x10DC104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C2B4", Offset = "0x104C2B4")]
		private sealed class <StartMovementInSec>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwoStateMovement <>4__this;

			[Token(Token = "0x17000120")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A8D")]
				[Address(RVA = "0x10DBFB4", Offset = "0x10DBFB4", VA = "0x10DBFB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A8F")]
				[Address(RVA = "0x10DC01C", Offset = "0x10DC01C", VA = "0x10DC01C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x10DB3F0", Offset = "0x10DB3F0", VA = "0x10DB3F0")]
			[DebuggerHidden]
			public <StartMovementInSec>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x10DBED4", Offset = "0x10DBED4", VA = "0x10DBED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x10DBED8", Offset = "0x10DBED8", VA = "0x10DBED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x10DBFBC", Offset = "0x10DBFBC", VA = "0x10DBFBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C2C4", Offset = "0x104C2C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__55_0;

			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x10DBB2C", Offset = "0x10DBB2C", VA = "0x10DBB2C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x10DBB34", Offset = "0x10DBB34", VA = "0x10DBB34")]
			internal bool <CleanBlockList>b__55_0(GameObject bGameObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MovementType movementType;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052440", Offset = "0x1052440")]
		public Transform objectToBeMoved;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform state1Transform;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform state2Transform;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MovementState currentMovementState;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private MovementState _targetMovement;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool calculateSpeedWithTravelTime;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[ShowInInspector]
		[AttributeAttribute(Name = "PropertyRangeAttribute", RVA = "0x1052498", Offset = "0x1052498")]
		[AttributeAttribute(Name = "EnableIfAttribute", RVA = "0x1052498", Offset = "0x1052498")]
		private float _travelTimeSec;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "DisableIfAttribute", RVA = "0x10524FC", Offset = "0x10524FC")]
		[AttributeAttribute(Name = "PropertyRangeAttribute", RVA = "0x10524FC", Offset = "0x10524FC")]
		[ShowInInspector]
		private float _movementSpeed;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve animationCurve;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _startTransform;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _endTransform;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "DisableIfAttribute", RVA = "0x1052560", Offset = "0x1052560")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1052560", Offset = "0x1052560")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052560", Offset = "0x1052560")]
		private bool autostart;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "PropertyRangeAttribute", RVA = "0x10525E0", Offset = "0x10525E0")]
		[AttributeAttribute(Name = "EnableIfAttribute", RVA = "0x10525E0", Offset = "0x10525E0")]
		[ShowInInspector]
		private float autostartSecDelay;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "DisableIfAttribute", RVA = "0x1052644", Offset = "0x1052644")]
		[AttributeAttribute(Name = "DisableIfAttribute", RVA = "0x1052644", Offset = "0x1052644")]
		[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x1052644", Offset = "0x1052644")]
		[SerializeField]
		private bool changeState2Automatically;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "PropertyRangeAttribute", RVA = "0x10526E0", Offset = "0x10526E0")]
		[AttributeAttribute(Name = "EnableIfAttribute", RVA = "0x10526E0", Offset = "0x10526E0")]
		[ShowInInspector]
		private float state2ChangeSecTime;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x1052744", Offset = "0x1052744")]
		[SerializeField]
		private bool changeStatesAutomatically;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[ShowInInspector]
		[AttributeAttribute(Name = "PropertyRangeAttribute", RVA = "0x1052798", Offset = "0x1052798")]
		[AttributeAttribute(Name = "EnableIfAttribute", RVA = "0x1052798", Offset = "0x1052798")]
		private float stateChangeSecTime;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _bottomTimerStarted;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool _stateChangeTimerStartet;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		private bool _noPlayerInteractionAtState2;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _startTime;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _journeyLength;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10527FC", Offset = "0x10527FC")]
		[SerializeField]
		private List<MovementInfo.IMovementAction> SyncronyzedMovementActions;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052848", Offset = "0x1052848")]
		private List<IAction> _startActions;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private List<IAction> _moveState2to1Action;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private List<IAction> _reachedState2Actions;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private List<IAction> _moveState1to2Action;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private List<IAction> _reachedState1Actions;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private List<IAction> _endActions;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _bottomChangeAutomaticallyNoPlayerInteraction;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _ReachedStatePercentage;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public WheelPickUpConstraint WheelPickUpConstraint;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float fractionOfJourney;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool movementIsBlocked;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<GameObject> blockingGameObjects;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private NavMeshObstacle _navMeshObstacle;

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x10DA5A4", Offset = "0x10DA5A4", VA = "0x10DA5A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x10DA708", Offset = "0x10DA708", VA = "0x10DA708")]
		public void EnableAutoStart()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x10DA654", Offset = "0x10DA654", VA = "0x10DA654")]
		private void SetInitialPosition()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x10DA740", Offset = "0x10DA740", VA = "0x10DA740")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A3A8", Offset = "0x105A3A8")]
		private IEnumerator StartAutoStart()
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x10DA7DC", Offset = "0x10DA7DC", VA = "0x10DA7DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x10DADD0", Offset = "0x10DADD0", VA = "0x10DADD0")]
		public void SynchronizedMovement(MovementInfo movementInfo)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x10DB080", Offset = "0x10DB080", VA = "0x10DB080")]
		public void SetStartAndInverseTargetState()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x10DB0A0", Offset = "0x10DB0A0", VA = "0x10DB0A0")]
		public void StartMovementWithState(MovementState movementState)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x10DAE14", Offset = "0x10DAE14", VA = "0x10DAE14")]
		public void StartMovement()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x10DB370", Offset = "0x10DB370", VA = "0x10DB370")]
		private void StartState1ToState2Movement()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x10DB31C", Offset = "0x10DB31C", VA = "0x10DB31C")]
		private void StartState2ToState1Movement()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x10DB0BC", Offset = "0x10DB0BC", VA = "0x10DB0BC")]
		private void CalculateJourneyLengthChangeToInBetweenState()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x10DACF0", Offset = "0x10DACF0", VA = "0x10DACF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A40C", Offset = "0x105A40C")]
		private IEnumerator StartMovementToTopInSec()
		{
			return null;
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x10DAD60", Offset = "0x10DAD60", VA = "0x10DAD60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A470", Offset = "0x105A470")]
		private IEnumerator StartMovementInSec()
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x10DB41C", Offset = "0x10DB41C", VA = "0x10DB41C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x10DB51C", Offset = "0x10DB51C", VA = "0x10DB51C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x10DB600", Offset = "0x10DB600", VA = "0x10DB600")]
		public void CleanBlockList()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x10DB708", Offset = "0x10DB708", VA = "0x10DB708")]
		public TwoStateMovement()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x10DB864", Offset = "0x10DB864", VA = "0x10DB864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4D4", Offset = "0x105A4D4")]
		private void <Update>b__43_0(IAction endAction)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x10DB930", Offset = "0x10DB930", VA = "0x10DB930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4E4", Offset = "0x105A4E4")]
		private void <Update>b__43_1(IAction state1Action)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x10DB9FC", Offset = "0x10DB9FC", VA = "0x10DB9FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4F4", Offset = "0x105A4F4")]
		private void <Update>b__43_2(IAction state2Action)
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class RefreshRate : MonoBehaviour
	{
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1116518", Offset = "0x1116518", VA = "0x1116518")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x1116674", Offset = "0x1116674", VA = "0x1116674")]
		public RefreshRate()
		{
		}
	}
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104C2D4", Offset = "0x104C2D4")]
	public class AssetRoomConnector : ScriptableObject
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh doorEntranceLeft;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh doorEntranceRight;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh doorExitLeft;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh doorExitRight;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh panelClosed;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh panelOpen;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject closedWallGameObject;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 closedWallLocalPosition;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 closedWallLocalRotation;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x11E26A8", Offset = "0x11E26A8", VA = "0x11E26A8")]
		public AssetRoomConnector()
		{
		}
	}
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C310", Offset = "0x104C310")]
	public class RotateTowardsImaginaryElbow : MonoBehaviour
	{
		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform shoulder;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform imaginaryElbow;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform wrist;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float percentage;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxAngle;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float armLength;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float angleOffset;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Side side;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion initialRotation;

		[Token(Token = "0x17000122")]
		private float halfArmLength
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x10EF9A8", Offset = "0x10EF9A8", VA = "0x10EF9A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x10EF9B8", Offset = "0x10EF9B8", VA = "0x10EF9B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x10EF9F4", Offset = "0x10EF9F4", VA = "0x10EF9F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x10EFF6C", Offset = "0x10EFF6C", VA = "0x10EFF6C")]
		public RotateTowardsImaginaryElbow()
		{
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C324", Offset = "0x104C324")]
	public class SceneIndependentStateHandler : MonoBehaviour
	{
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x10F41EC", Offset = "0x10F41EC", VA = "0x10F41EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x10F41F0", Offset = "0x10F41F0", VA = "0x10F41F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x10F41F4", Offset = "0x10F41F4", VA = "0x10F41F4")]
		public SceneIndependentStateHandler()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class ServerDisplayBone : MonoBehaviour
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interval;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentMagnitude;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastUpdate;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 initialLocalPos;

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x10F7BE4", Offset = "0x10F7BE4", VA = "0x10F7BE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x10F7C20", Offset = "0x10F7C20", VA = "0x10F7C20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x10F7D98", Offset = "0x10F7D98", VA = "0x10F7D98")]
		public ServerDisplayBone()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class PracticeTarget : MonoBehaviour
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnitHealth practiceTargetHealth;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer practiceTargetMeshRenderer;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float reactivationTime;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material inactiveMat;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject practiceTargetContainer;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LiftMovement liftMove;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1113284", Offset = "0x1113284", VA = "0x1113284")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1113358", Offset = "0x1113358", VA = "0x1113358")]
		private void PracticeTargetHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1113400", Offset = "0x1113400", VA = "0x1113400")]
		public PracticeTarget()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class SlopeConfigurator : MonoBehaviour
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject colliderObj;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxWalkableSlopeAngle;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[ReadOnly]
		public float angle;

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x10FE0F8", Offset = "0x10FE0F8", VA = "0x10FE0F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x10FE1EC", Offset = "0x10FE1EC", VA = "0x10FE1EC")]
		public SlopeConfigurator()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class SpeedBoots : UsableItem
	{
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float speedBoostAmount;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x10FE888", Offset = "0x10FE888", VA = "0x10FE888", Slot = "15")]
		protected override void TriggerItem(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x10FEB20", Offset = "0x10FEB20", VA = "0x10FEB20")]
		public SpeedBoots()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class TriggerDelayedAttackOnDeath : MonoBehaviour
	{
		[Token(Token = "0x2000236")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C338", Offset = "0x104C338")]
		private sealed class <DoDestroy>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerDelayedAttackOnDeath <>4__this;

			[Token(Token = "0x17000123")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AB0")]
				[Address(RVA = "0x10D77D0", Offset = "0x10D77D0", VA = "0x10D77D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000124")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AB2")]
				[Address(RVA = "0x10D7838", Offset = "0x10D7838", VA = "0x10D7838", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x10D75A4", Offset = "0x10D75A4", VA = "0x10D75A4")]
			[DebuggerHidden]
			public <DoDestroy>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x10D76B4", Offset = "0x10D76B4", VA = "0x10D76B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x10D76B8", Offset = "0x10D76B8", VA = "0x10D76B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x10D77D8", Offset = "0x10D77D8", VA = "0x10D77D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseAttack attack;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float attackDelay;

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x10D73D4", Offset = "0x10D73D4", VA = "0x10D73D4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x10D747C", Offset = "0x10D747C", VA = "0x10D747C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x10D7508", Offset = "0x10D7508", VA = "0x10D7508")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x10D7534", Offset = "0x10D7534", VA = "0x10D7534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A5F4", Offset = "0x105A5F4")]
		private IEnumerator DoDestroy()
		{
			return null;
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x10D75D0", Offset = "0x10D75D0", VA = "0x10D75D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x10D76A0", Offset = "0x10D76A0", VA = "0x10D76A0")]
		public TriggerDelayedAttackOnDeath()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public abstract class UsableItem : Weapon
	{
		[Token(Token = "0x2000238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C348", Offset = "0x104C348")]
		private sealed class <DoReleaseAndDestroy>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UsableItem <>4__this;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AC4")]
				[Address(RVA = "0x10E1034", Offset = "0x10E1034", VA = "0x10E1034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AC6")]
				[Address(RVA = "0x10E109C", Offset = "0x10E109C", VA = "0x10E109C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x10E0DF0", Offset = "0x10E0DF0", VA = "0x10E0DF0")]
			[DebuggerHidden]
			public <DoReleaseAndDestroy>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x10E0E2C", Offset = "0x10E0E2C", VA = "0x10E0E2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x10E0E30", Offset = "0x10E0E30", VA = "0x10E0E30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x10E103C", Offset = "0x10E103C", VA = "0x10E103C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool releaseAndDestroyAfterUse;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		protected bool hasBeenUsed;

		[Token(Token = "0x1400001F")]
		public event Action<GEUnit> OnUse
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x10E0A8C", Offset = "0x10E0A8C", VA = "0x10E0A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A6A8", Offset = "0x105A6A8")]
			add
			{
			}
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x10E0B34", Offset = "0x10E0B34", VA = "0x10E0B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A6B8", Offset = "0x105A6B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x10E0BDC", Offset = "0x10E0BDC", VA = "0x10E0BDC", Slot = "4")]
		public override BaseBullet GetBullet()
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x10E0BE4", Offset = "0x10E0BE4", VA = "0x10E0BE4", Slot = "7")]
		public override Vector3 GetCurrentShotDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x10E0C44", Offset = "0x10E0C44", VA = "0x10E0C44", Slot = "14")]
		public override float GetNoiseRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x10E0C4C", Offset = "0x10E0C4C", VA = "0x10E0C4C", Slot = "12")]
		public override float GetRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x10E0C54", Offset = "0x10E0C54", VA = "0x10E0C54", Slot = "13")]
		public override Transform GetShotSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x10E0C5C", Offset = "0x10E0C5C", VA = "0x10E0C5C", Slot = "5")]
		public override bool IsReadyToShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x10E0C6C", Offset = "0x10E0C6C", VA = "0x10E0C6C", Slot = "9")]
		public override void Release()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x10E0C70", Offset = "0x10E0C70", VA = "0x10E0C70", Slot = "8")]
		public override bool RequiresRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABD")]
		protected abstract void TriggerItem(GEUnit owner, List<Collider> unitColliders);

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x10E0C78", Offset = "0x10E0C78", VA = "0x10E0C78", Slot = "6")]
		public override void Shoot(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x10E0D80", Offset = "0x10E0D80", VA = "0x10E0D80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A6C8", Offset = "0x105A6C8")]
		private IEnumerator DoReleaseAndDestroy()
		{
			return null;
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x10E0E1C", Offset = "0x10E0E1C", VA = "0x10E0E1C")]
		protected UsableItem()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class WinScreen : MonoBehaviour
	{
		[Token(Token = "0x200023A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C358", Offset = "0x104C358")]
		private sealed class <DoCheckForItems>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WinScreen <>4__this;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ACD")]
				[Address(RVA = "0x10E624C", Offset = "0x10E624C", VA = "0x10E624C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ACF")]
				[Address(RVA = "0x10E62B4", Offset = "0x10E62B4", VA = "0x10E62B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x10E5A00", Offset = "0x10E5A00", VA = "0x10E5A00")]
			[DebuggerHidden]
			public <DoCheckForItems>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x10E5A34", Offset = "0x10E5A34", VA = "0x10E5A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x10E5A38", Offset = "0x10E5A38", VA = "0x10E5A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x10E6254", Offset = "0x10E6254", VA = "0x10E6254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject breakdown;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject perfectEnding;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectData fuelCellObjectData;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SavePlayerState sps;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AchievementUnlockData SecretAchievement;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AchievementUnlockData FinishWithoutShortcutsAchievement;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x10E5964", Offset = "0x10E5964", VA = "0x10E5964")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x10E5990", Offset = "0x10E5990", VA = "0x10E5990")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A77C", Offset = "0x105A77C")]
		private IEnumerator DoCheckForItems()
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x10E5A2C", Offset = "0x10E5A2C", VA = "0x10E5A2C")]
		public WinScreen()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class ChangeMaterialOnHover_Skinned : BaseHover
	{
		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material hoverMaterial;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Mesh;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052934", Offset = "0x1052934")]
		public Material defaultMaterial;

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x10CEA50", Offset = "0x10CEA50", VA = "0x10CEA50", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x10CEB0C", Offset = "0x10CEB0C", VA = "0x10CEB0C", Slot = "5")]
		protected override void OnHover(bool val)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x10CEB44", Offset = "0x10CEB44", VA = "0x10CEB44")]
		public ChangeMaterialOnHover_Skinned()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class OutlineThicknessTests : MonoBehaviour
	{
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int textureSize;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera mainCam;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[,] cubes;

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x110F1DC", Offset = "0x110F1DC", VA = "0x110F1DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x110F5C4", Offset = "0x110F5C4", VA = "0x110F5C4")]
		public OutlineThicknessTests()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class RagdollHover : MonoBehaviour
	{
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RobotPart> robotParts;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material hoverMaterial;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Mesh;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105296C", Offset = "0x105296C")]
		public Material defaultMaterial;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool currentState;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1115D10", Offset = "0x1115D10", VA = "0x1115D10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1115E18", Offset = "0x1115E18", VA = "0x1115E18")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1115E24", Offset = "0x1115E24", VA = "0x1115E24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1116008", Offset = "0x1116008", VA = "0x1116008")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105A830", Offset = "0x105A830")]
		private void AssignParts(Transform parent)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x11160D8", Offset = "0x11160D8", VA = "0x11160D8")]
		public RagdollHover()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class HealAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit Unit;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10529A4", Offset = "0x10529A4")]
		public List<AssetUnitTag> Tags;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Range;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Delay;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Amount;

		[Token(Token = "0x4000BB6")]
		private const float unitSizeConstValue = 0.5f;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10529DC", Offset = "0x10529DC")]
		private bool <IsAttacking>k__BackingField;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[ReadOnly]
		public List<UnitTag> closeUnits;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastAttack;

		[Token(Token = "0x17000129")]
		public bool IsAttacking
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x112B0F4", Offset = "0x112B0F4", VA = "0x112B0F4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A868", Offset = "0x105A868")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x112B0FC", Offset = "0x112B0FC", VA = "0x112B0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A878", Offset = "0x105A878")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public bool AutoAttack
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x112B108", Offset = "0x112B108", VA = "0x112B108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012B")]
		public bool BurstAttack
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x112B110", Offset = "0x112B110", VA = "0x112B110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x112B118", Offset = "0x112B118", VA = "0x112B118", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x112B184", Offset = "0x112B184", VA = "0x112B184", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x112B49C", Offset = "0x112B49C", VA = "0x112B49C", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x112B578", Offset = "0x112B578", VA = "0x112B578", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x112B5D8", Offset = "0x112B5D8", VA = "0x112B5D8", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x112B5E0", Offset = "0x112B5E0", VA = "0x112B5E0", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x112B5E4", Offset = "0x112B5E4", VA = "0x112B5E4", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x112B5EC", Offset = "0x112B5EC", VA = "0x112B5EC")]
		public HealAttack()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x112B69C", Offset = "0x112B69C", VA = "0x112B69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A888", Offset = "0x105A888")]
		private bool <Attack>b__17_0(UnitTag p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023F")]
	public class HoloMap : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000240")]
		public class RoomInfo
		{
			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds Bounds;

			[Token(Token = "0x4000BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color Color;

			[Token(Token = "0x4000BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool IsExit;

			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x112DF7C", Offset = "0x112DF7C", VA = "0x112DF7C")]
			public RoomInfo()
			{
			}
		}

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<RoomInfo> Rooms;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10529FC", Offset = "0x10529FC")]
		public Transform Container;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform Hand;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshFilter MeshFilter;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform LeftHandPivot;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform RightHandPivot;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform LeftParent;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform RightParent;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052A34", Offset = "0x1052A34")]
		public float Scale;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color CurrentColor;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color KnownColor;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Color UnknownColor;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Color ExitColor;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AssetRoomTag exitTag;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052A6C", Offset = "0x1052A6C")]
		public GameObject Player;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject player;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RoomInfo _room;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float _dx;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float _dz;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RoomInfo currentRoom;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052AA4", Offset = "0x1052AA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052AA4", Offset = "0x1052AA4")]
		public List<IState> OpenStates;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052B04", Offset = "0x1052B04")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052B04", Offset = "0x1052B04")]
		public List<IAction> OnOpenEvents;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052B64", Offset = "0x1052B64")]
		public List<IAction> OnCloseEvents;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[ReadOnly]
		public float currentAngle;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool holoMapEnabled;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Mesh mesh;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<Vector3> vertices;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<int> triangles;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<Color> colors;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int complexity;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool changed;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public EnumValueData handednessKey;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool isLeftSide;

		[Token(Token = "0x14000020")]
		public event Action OnOpen
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x112CBBC", Offset = "0x112CBBC", VA = "0x112CBBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A898", Offset = "0x105A898")]
			add
			{
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x112CC64", Offset = "0x112CC64", VA = "0x112CC64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A8A8", Offset = "0x105A8A8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x112CD0C", Offset = "0x112CD0C", VA = "0x112CD0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x112D0C8", Offset = "0x112D0C8", VA = "0x112D0C8")]
		private void Instance_OnValueChanged(ValueData arg1, object arg2)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x112CF50", Offset = "0x112CF50", VA = "0x112CF50")]
		private void UpdateHandedness()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x112D0CC", Offset = "0x112D0CC", VA = "0x112D0CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x112D170", Offset = "0x112D170", VA = "0x112D170")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x112CE78", Offset = "0x112CE78", VA = "0x112CE78")]
		private void EnableHoloMap(bool val)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x112D8A0", Offset = "0x112D8A0", VA = "0x112D8A0")]
		private void OnGenerateFinished()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x112D5F0", Offset = "0x112D5F0", VA = "0x112D5F0")]
		private void GenerateRooms()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x112DF84", Offset = "0x112DF84", VA = "0x112DF84")]
		private void GenerateRoom(Bounds bound, Color color)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x112E94C", Offset = "0x112E94C", VA = "0x112E94C")]
		public HoloMap()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class AdjustHoldPointOnInventory : MonoBehaviour
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion playerHandHoldRotation;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion inventoryHoldRotation;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool overwritePositions;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1052BBC", Offset = "0x1052BBC")]
		public Vector3 playerHandHoldPosition;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1052BF8", Offset = "0x1052BF8")]
		public Vector3 inventoryHoldPosition;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PickableObject po;

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x11DFC1C", Offset = "0x11DFC1C", VA = "0x11DFC1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x11DFCB0", Offset = "0x11DFCB0", VA = "0x11DFCB0")]
		private void Po_OnBeforePickup(IPicking picking)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x11DFDD0", Offset = "0x11DFDD0", VA = "0x11DFDD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x11DFEAC", Offset = "0x11DFEAC", VA = "0x11DFEAC")]
		public AdjustHoldPointOnInventory()
		{
		}
	}
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104C368", Offset = "0x104C368")]
	public class AssetInventoryType : ScriptableObject
	{
		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int id;

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x11E26A0", Offset = "0x11E26A0", VA = "0x11E26A0")]
		public AssetInventoryType()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104C3BC", Offset = "0x104C3BC")]
	public class AssetSpecialInventoryItem : ScriptableObject
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x11E273C", Offset = "0x11E273C", VA = "0x11E273C")]
		public AssetSpecialInventoryItem()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class ChangeMaterialOnInventorySlotHover : MonoBehaviour
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer renderer;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material extendedRangeMaterial;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material errorMaterial;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExtendedInventorySlot slot;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material defaultMaterial;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<IPickable> pickables;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x10CEB4C", Offset = "0x10CEB4C", VA = "0x10CEB4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x10CEBF4", Offset = "0x10CEBF4", VA = "0x10CEBF4")]
		private void Slot_OnHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x10CED24", Offset = "0x10CED24", VA = "0x10CED24")]
		public ChangeMaterialOnInventorySlotHover()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class ChangeSlotPositionWhenSeated : MonoBehaviour
	{
		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SlotPosition slotPosition;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnumValueData seatedStandingKey;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnumValueData inventoryHeightKey;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yOffsetSeated;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 defaultSlotPosition;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x10CF420", Offset = "0x10CF420", VA = "0x10CF420")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x10CF770", Offset = "0x10CF770", VA = "0x10CF770")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x10CF560", Offset = "0x10CF560", VA = "0x10CF560")]
		private void Instance_OnValueChanged(ValueData key, object val)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x10CF860", Offset = "0x10CF860", VA = "0x10CF860")]
		public ChangeSlotPositionWhenSeated()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class ExtendedInventorySlot : SerializedMonoBehaviour, IPicking
	{
		[Token(Token = "0x2000247")]
		public enum LimitType
		{
			[Token(Token = "0x4000C28")]
			Whitelist,
			[Token(Token = "0x4000C29")]
			Blacklist,
			[Token(Token = "0x4000C2A")]
			None
		}

		[Token(Token = "0x2000248")]
		private class PickedUpColliderLayer
		{
			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider collider;

			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int currentLayer;

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x111CB00", Offset = "0x111CB00", VA = "0x111CB00")]
			public PickedUpColliderLayer(Collider collider, int currentLayer)
			{
			}
		}

		[Token(Token = "0x2000249")]
		public enum RangeInfo
		{
			[Token(Token = "0x4000C2E")]
			InCloseRange,
			[Token(Token = "0x4000C2F")]
			InExtendedRange,
			[Token(Token = "0x4000C30")]
			Blacklisted,
			[Token(Token = "0x4000C31")]
			NotInRange
		}

		[Token(Token = "0x200024A")]
		private enum WhitelistInfo
		{
			[Token(Token = "0x4000C33")]
			Whitelisted,
			[Token(Token = "0x4000C34")]
			Blacklisted
		}

		[Serializable]
		[Token(Token = "0x200024B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C410", Offset = "0x104C410")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<IPickable> <>9__46_0;

			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x111C784", Offset = "0x111C784", VA = "0x111C784")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x111C78C", Offset = "0x111C78C", VA = "0x111C78C")]
			internal bool <Update>b__46_0(IPickable p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200024C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C420", Offset = "0x104C420")]
		private sealed class <>c__DisplayClass102_0
		{
			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider collider;

			[Token(Token = "0x6000B40")]
			[Address(RVA = "0x111C7AC", Offset = "0x111C7AC", VA = "0x111C7AC")]
			public <>c__DisplayClass102_0()
			{
			}

			[Token(Token = "0x6000B41")]
			[Address(RVA = "0x111C7B4", Offset = "0x111C7B4", VA = "0x111C7B4")]
			internal bool <ChangeLayers>b__0(PickedUpColliderLayer info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200024D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C430", Offset = "0x104C430")]
		private sealed class <DoTestExtendedPickUp>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExtendedInventorySlot <>4__this;

			[Token(Token = "0x4000C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPickable pickable;

			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x1700012E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B45")]
				[Address(RVA = "0x111CA90", Offset = "0x111CA90", VA = "0x111CA90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B47")]
				[Address(RVA = "0x111CAF8", Offset = "0x111CAF8", VA = "0x111CAF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B42")]
			[Address(RVA = "0x111C864", Offset = "0x111C864", VA = "0x111C864")]
			[DebuggerHidden]
			public <DoTestExtendedPickUp>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x111C890", Offset = "0x111C890", VA = "0x111C890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B44")]
			[Address(RVA = "0x111C894", Offset = "0x111C894", VA = "0x111C894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x111CA98", Offset = "0x111CA98", VA = "0x111CA98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRMovement movement;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052C34", Offset = "0x1052C34")]
		public float pickUpRange;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LayerMask layerMask;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<PlayerHand> playerHands;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int maxNumPickUps;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool pushOutPreviousItem;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052C6C", Offset = "0x1052C6C")]
		public List<ExtendedInventorySlot> alternativesBeforePushingOut;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float pushOutSpeed;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052CA4", Offset = "0x1052CA4")]
		public PlayerHand equipHandIfEmptyGrab;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool canBeRemovedAfterPickUp;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool overwriteHoldPositionToZeroOnPickUp;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject hoverCircle;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052CDC", Offset = "0x1052CDC")]
		public bool changeScaleOnPickUp;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1052D14", Offset = "0x1052D14")]
		public float scaleMultiplier;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1052D50", Offset = "0x1052D50")]
		public float changeScaleSpeed;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052D8C", Offset = "0x1052D8C")]
		public bool debug;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected List<IPickable> currentPickUps;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<ExtendedInventorySlot> otherSlots;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float distanceMultiplicatorOnPickUp;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Side side;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052E04", Offset = "0x1052E04")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1052E04", Offset = "0x1052E04")]
		[InlineProperty]
		public List<GenericEvent> hoverEvents;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1052E74", Offset = "0x1052E74")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052E74", Offset = "0x1052E74")]
		public List<GenericSideEvent> hoverEventsSide;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1052EE4", Offset = "0x1052EE4")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1052EE4", Offset = "0x1052EE4")]
		[InlineProperty]
		public List<GenericStringEvent> stringHoverEvents;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool allowStacking;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1052F54", Offset = "0x1052F54")]
		public GameObject stackDisplayPrefab;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[ReadOnly]
		public Text stackLabel;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1052FA0", Offset = "0x1052FA0")]
		[ReadOnly]
		public int stackCount;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<IPickable> currentPlayerHandPickUps;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject stackDisplay;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Transform cachedFixedHoldTransform;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Dictionary<IPickable, float> initialDistanceMultiplicators;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Dictionary<PickableObject, Vector3> initialScale;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Dictionary<PickableObject, bool> currentScaledObjects;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052FF0", Offset = "0x1052FF0")]
		public bool useExtendedPickUp;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053028", Offset = "0x1053028")]
		public float extendedPickUpStartDelay;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053060", Offset = "0x1053060")]
		public float extendedPickUpDuration;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float extendedRange;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1053098", Offset = "0x1053098")]
		public LimitType limitType;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x10530D0", Offset = "0x10530D0")]
		public List<AssetSpecialInventoryItem> whitelistedTypes;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1053164", Offset = "0x1053164")]
		public List<AssetSpecialInventoryItem> blacklistedTypes;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool hideAllRenderersOnPickUp;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public LayerMask pickedUpLayer;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public VRMovement vrMovement;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Dictionary<IPickable, List<PickedUpColliderLayer>> currentlyPickedUpColliderLayers;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<IPickable> extendedHold;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Dictionary<IPickable, SpecialInventoryItem> whitelistDict;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private HashSet<IPickable> previousPickUps;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private List<Renderer> deactivatedRenderers;

		[Token(Token = "0x1700012C")]
		public List<IPickable> CurrentPickedUpObjects
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x11436EC", Offset = "0x11436EC", VA = "0x11436EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x11455FC", Offset = "0x11455FC", VA = "0x11455FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<IPickable> OnPickUp
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x11436F4", Offset = "0x11436F4", VA = "0x11436F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A8B8", Offset = "0x105A8B8")]
			add
			{
			}
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x1143798", Offset = "0x1143798", VA = "0x1143798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A8C8", Offset = "0x105A8C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<IPickable> OnRelease
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x114383C", Offset = "0x114383C", VA = "0x114383C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A8D8", Offset = "0x105A8D8")]
			add
			{
			}
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x11438E0", Offset = "0x11438E0", VA = "0x11438E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A8E8", Offset = "0x105A8E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<IPickable, RangeInfo> OnSlotHover
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x113F7E8", Offset = "0x113F7E8", VA = "0x113F7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A8F8", Offset = "0x105A8F8")]
			add
			{
			}
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0x1143984", Offset = "0x1143984", VA = "0x1143984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A908", Offset = "0x105A908")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<IPickable, bool> OnHover
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x1143A28", Offset = "0x1143A28", VA = "0x1143A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A918", Offset = "0x105A918")]
			add
			{
			}
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x1143ACC", Offset = "0x1143ACC", VA = "0x1143ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A928", Offset = "0x105A928")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1143B70", Offset = "0x1143B70", VA = "0x1143B70")]
		private void Hand_OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1143BD8", Offset = "0x1143BD8", VA = "0x1143BD8", Slot = "29")]
		protected virtual bool InCloseRange(IPickable pickable, out float distance, out float otherSlotsMinDistance, bool checkOtherSlots)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1144034", Offset = "0x1144034", VA = "0x1144034")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1145380", Offset = "0x1145380", VA = "0x1145380")]
		private bool GetAllowStacking(IPickable pickUp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x11454E4", Offset = "0x11454E4", VA = "0x11454E4")]
		private bool AllowPushOut()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1145658", Offset = "0x1145658", VA = "0x1145658", Slot = "30")]
		protected virtual bool CanStoreNewItem(IPickable pickable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x11456A4", Offset = "0x11456A4", VA = "0x11456A4")]
		private void Hand_OnRelease(IPickable pickable)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x11456A8", Offset = "0x11456A8", VA = "0x11456A8")]
		protected bool HandleRelease(IPickable pickable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x1145BBC", Offset = "0x1145BBC", VA = "0x1145BBC", Slot = "31")]
		public virtual Side GetSide()
		{
			return default(Side);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1145BC4", Offset = "0x1145BC4", VA = "0x1145BC4", Slot = "32")]
		public virtual TwoHandedPickingMode AllowTwoHandedPickUp()
		{
			return default(TwoHandedPickingMode);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1145BCC", Offset = "0x1145BCC", VA = "0x1145BCC", Slot = "33")]
		public virtual Transform GetExternalMovement()
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1145BE8", Offset = "0x1145BE8", VA = "0x1145BE8", Slot = "34")]
		public virtual bool GetInteractionKeyPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1145BF0", Offset = "0x1145BF0", VA = "0x1145BF0", Slot = "35")]
		public virtual Transform GetTarget()
		{
			return null;
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1145BF8", Offset = "0x1145BF8", VA = "0x1145BF8", Slot = "36")]
		public virtual bool GetToggleKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1145C00", Offset = "0x1145C00", VA = "0x1145C00", Slot = "37")]
		public virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1145C08", Offset = "0x1145C08", VA = "0x1145C08", Slot = "38")]
		public virtual void HandleVisualModelUpdate()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1145C0C", Offset = "0x1145C0C", VA = "0x1145C0C")]
		private void UpdateStackDisplay()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1145EF8", Offset = "0x1145EF8", VA = "0x1145EF8", Slot = "39")]
		public virtual void PickUp(IPickable pickable, Rigidbody other, Vector3 objToHandVector)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1146C90", Offset = "0x1146C90", VA = "0x1146C90")]
		private void ResetPriorityDistanceOnRelease(IPicking arg1, IPickable pickable)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1146DB4", Offset = "0x1146DB4", VA = "0x1146DB4", Slot = "40")]
		public virtual void ReleaseAndPickUp()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1146FBC", Offset = "0x1146FBC", VA = "0x1146FBC", Slot = "41")]
		public virtual void Release(IPickable pickable)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x11467D8", Offset = "0x11467D8", VA = "0x11467D8")]
		private void MinimizeObject(PickableObject pickable, bool isPickedUp)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1147224", Offset = "0x1147224", VA = "0x1147224", Slot = "42")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x114729C", Offset = "0x114729C", VA = "0x114729C", Slot = "43")]
		public virtual void Release(Vector3 velocity)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1147634", Offset = "0x1147634", VA = "0x1147634", Slot = "44")]
		public virtual bool CanBeStolenByOtherHand()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x114763C", Offset = "0x114763C", VA = "0x114763C", Slot = "45")]
		public virtual void RegisterOnPickUp(Action<IPickable> callback)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1147640", Offset = "0x1147640", VA = "0x1147640", Slot = "46")]
		public virtual void UnregisterOnPickUp(Action<IPickable> callback)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1147644", Offset = "0x1147644", VA = "0x1147644", Slot = "47")]
		public virtual void RegisterOnHover(Action<IPickable, bool> callback)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1147648", Offset = "0x1147648", VA = "0x1147648", Slot = "48")]
		public virtual void UnregisterOnHover(Action<IPickable, bool> callback)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x114764C", Offset = "0x114764C", VA = "0x114764C")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1147AB0", Offset = "0x1147AB0", VA = "0x1147AB0")]
		private void Hand_OnBeforeTestPickUp()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1147C2C", Offset = "0x1147C2C", VA = "0x1147C2C")]
		private void VRMovement_OnMove(Vector3 deltaPos)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1147AB4", Offset = "0x1147AB4", VA = "0x1147AB4")]
		private void SnapToTargetPosition()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1147C30", Offset = "0x1147C30", VA = "0x1147C30")]
		private void EquipHandIfEmptyGrab_OnClosestItemSelected(PlayerHand.SelectionInfo selectionInfo)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1147CAC", Offset = "0x1147CAC", VA = "0x1147CAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1147DEC", Offset = "0x1147DEC", VA = "0x1147DEC")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1147DF8", Offset = "0x1147DF8", VA = "0x1147DF8")]
		private void OtherSlot_OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x1147E60", Offset = "0x1147E60", VA = "0x1147E60")]
		public static int LayerMaskToLayer(LayerMask layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1147EB0", Offset = "0x1147EB0", VA = "0x1147EB0")]
		private bool HandleReleaseDelayed(IPickable pickable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x11468B8", Offset = "0x11468B8", VA = "0x11468B8")]
		private void ChangeLayers(IPickable pickable)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1145B40", Offset = "0x1145B40", VA = "0x1145B40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A938", Offset = "0x105A938")]
		private IEnumerator DoTestExtendedPickUp(IPickable pickable)
		{
			return null;
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x114817C", Offset = "0x114817C", VA = "0x114817C")]
		private void OnReleaseFromInventory(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x1143F30", Offset = "0x1143F30", VA = "0x1143F30")]
		protected RangeInfo CanPickUp(IPickable pickable, bool checkOtherSlots)
		{
			return default(RangeInfo);
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1144D94", Offset = "0x1144D94", VA = "0x1144D94")]
		protected RangeInfo InRange(IPickable pickable, bool checkOtherSlots)
		{
			return default(RangeInfo);
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x1145100", Offset = "0x1145100", VA = "0x1145100")]
		private WhitelistInfo GetWhitelistInfo(IPickable pickable)
		{
			return default(WhitelistInfo);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1148414", Offset = "0x1148414", VA = "0x1148414", Slot = "27")]
		public void RegisterOnVisualModelUpdate(Action<Transform> callback)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1148474", Offset = "0x1148474", VA = "0x1148474", Slot = "28")]
		public void UnregisterOnVisualModelUpdate(Action<Transform> callback)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x11484D4", Offset = "0x11484D4", VA = "0x11484D4", Slot = "17")]
		public List<IPickable> GetCurrentPickUps()
		{
			return null;
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x11484DC", Offset = "0x11484DC", VA = "0x11484DC")]
		public ExtendedInventorySlot()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class InventoryAudio : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ExtendedInventorySlot inventorySlot;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AssetInventoryType inventoryType;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AssetFMODEvent pickUp;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AssetFMODEvent release;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AssetFMODEvent hover;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AssetAudioParameter inventoryTypeParameter;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FMODAudioEvent pickUpAudioEvent;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FMODAudioEvent releaseAudioEvent;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FMODAudioEvent hoverAudioEvent;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<GenericEvent> pickUpEvents;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<IPickable, ExtendedInventorySlot.RangeInfo> hoverInfo;

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x112F8CC", Offset = "0x112F8CC", VA = "0x112F8CC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x112F924", Offset = "0x112F924", VA = "0x112F924")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x112FD2C", Offset = "0x112FD2C", VA = "0x112FD2C")]
		private void InventorySlot_OnSlotHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x112FE1C", Offset = "0x112FE1C", VA = "0x112FE1C")]
		private void InventorySlot_OnPickUp(IPickable pickable)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x112FFC4", Offset = "0x112FFC4", VA = "0x112FFC4")]
		private void InventorySlot_OnRelease(IPickable pickable)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x113016C", Offset = "0x113016C", VA = "0x113016C")]
		public InventoryAudio()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class OverwriteInventoryAudioEvents : MonoBehaviour
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent overwritePickUpEvent;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetFMODEvent overwriteReleaseEvent;

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x110F658", Offset = "0x110F658", VA = "0x110F658")]
		public OverwriteInventoryAudioEvents()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C440", Offset = "0x104C440")]
	public class PlaceInventoryAtPosition : MonoBehaviour
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ExtendedInventorySlot> inventorySlots;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1111B08", Offset = "0x1111B08", VA = "0x1111B08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1111E08", Offset = "0x1111E08", VA = "0x1111E08")]
		public PlaceInventoryAtPosition()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class PlayerUpgradeList : MonoBehaviour
	{
		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UpgradeSlot upgradeLeft1;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpgradeSlot upgradeLeft2;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpgradeSlot upgradeRight1;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpgradeSlot upgradeRight2;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerUpgradeList instance;

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1112940", Offset = "0x1112940", VA = "0x1112940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1112994", Offset = "0x1112994", VA = "0x1112994")]
		public PlayerUpgradeList()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class PreventInventoryOnActivate : MonoBehaviour
	{
		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GE.WeaponConfigurator.ExplosionAttack explosionAttack;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpecialInventoryItem specialInventoryItem;

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1113408", Offset = "0x1113408", VA = "0x1113408")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1113494", Offset = "0x1113494", VA = "0x1113494")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1113504", Offset = "0x1113504", VA = "0x1113504")]
		private void ExplosionAttack_OnCountdownStarted()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1113570", Offset = "0x1113570", VA = "0x1113570")]
		public PreventInventoryOnActivate()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class SpecialInventoryItem : MonoBehaviour
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetSpecialInventoryItem> types;

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x10FE6F8", Offset = "0x10FE6F8", VA = "0x10FE6F8")]
		internal bool Contains(List<AssetSpecialInventoryItem> whitelistedTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x10FE818", Offset = "0x10FE818", VA = "0x10FE818")]
		public SpecialInventoryItem()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class UpgradeChip : SerializedMonoBehaviour, IEntity
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10531FC", Offset = "0x10531FC")]
		public PickableObject Pickable;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ObjectDataInstance DataInstance;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform EffectContainer;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1053234", Offset = "0x1053234")]
		public float HoverOffset;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float HoldOffset;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 Offset;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject particle;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UpgradeData upgradeData;

		[Token(Token = "0x17000130")]
		public UpgradeData UpgradeData
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x10DEDF4", Offset = "0x10DEDF4", VA = "0x10DEDF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x10DEDFC", Offset = "0x10DEDFC", VA = "0x10DEDFC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x10DEEDC", Offset = "0x10DEEDC", VA = "0x10DEEDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x10DEFC8", Offset = "0x10DEFC8", VA = "0x10DEFC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x10DF1A4", Offset = "0x10DF1A4", VA = "0x10DF1A4")]
		private void OnHover(IPicking picking, bool hover)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x10DF598", Offset = "0x10DF598", VA = "0x10DF598")]
		private void OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x10DF738", Offset = "0x10DF738", VA = "0x10DF738")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x10DF3F0", Offset = "0x10DF3F0", VA = "0x10DF3F0")]
		private void ShowTooltip(TooltipType id, UpgradeData upgrade, Side side, string desc, bool detail, float offset)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x10DF8C4", Offset = "0x10DF8C4", VA = "0x10DF8C4")]
		public UpgradeChip()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class UpgradeSlot : MonoBehaviour
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExtendedInventorySlot Slot;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerUpgrades Player;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Side Side;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int SlotId;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UpgradeChip equippedUpgradeChip;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<UpgradeSlot> otherSlots;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105326C", Offset = "0x105326C")]
		public LString Title;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LString Description;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool currentUpgradeInfoState;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x10DFB84", Offset = "0x10DFB84", VA = "0x10DFB84")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x10DFC64", Offset = "0x10DFC64", VA = "0x10DFC64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x10DFC68", Offset = "0x10DFC68", VA = "0x10DFC68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x10DFD40", Offset = "0x10DFD40", VA = "0x10DFD40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x10DFE18", Offset = "0x10DFE18", VA = "0x10DFE18")]
		public void HideSlotLookAtInfo()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x10DFE9C", Offset = "0x10DFE9C", VA = "0x10DFE9C")]
		public void ShowSlotLookAtInfo()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x10E0260", Offset = "0x10E0260", VA = "0x10E0260")]
		private void OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x10E039C", Offset = "0x10E039C", VA = "0x10E039C")]
		private void OnRelease(IPickable obj)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x10E0500", Offset = "0x10E0500", VA = "0x10E0500")]
		public void ShowUpgradeInfo(bool val)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x10E0520", Offset = "0x10E0520", VA = "0x10E0520")]
		public UpgradeSlot()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class UpgradeSlotInformation : MonoBehaviour
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float tolerance;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UpgradeSlot> slots;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UpgradeSlot visibleSlot;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Side side;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x10E0590", Offset = "0x10E0590", VA = "0x10E0590")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x10E0A14", Offset = "0x10E0A14", VA = "0x10E0A14")]
		public UpgradeSlotInformation()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class BreakAfterTime : MonoBehaviour
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lifetime;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timePassed;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isReleased;

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x10CB660", Offset = "0x10CB660", VA = "0x10CB660")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x10CB6B8", Offset = "0x10CB6B8", VA = "0x10CB6B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x10CB75C", Offset = "0x10CB75C", VA = "0x10CB75C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x10CB834", Offset = "0x10CB834", VA = "0x10CB834")]
		private void StartCountdown(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x10CB840", Offset = "0x10CB840", VA = "0x10CB840")]
		public BreakAfterTime()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class ChipIcon : MonoBehaviour
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float animationSpeed;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float foldSpeed;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timer;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float targetFoldVal;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float foldVal;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x10D0434", Offset = "0x10D0434", VA = "0x10D0434")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x10D050C", Offset = "0x10D050C", VA = "0x10D050C")]
		private void PickableObject_OnRelease(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x10D0518", Offset = "0x10D0518", VA = "0x10D0518")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x10D0520", Offset = "0x10D0520", VA = "0x10D0520")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x10D0674", Offset = "0x10D0674", VA = "0x10D0674")]
		public ChipIcon()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class DeflectiveMaterial : SerializedMonoBehaviour, GE.WeaponConfigurator.IDeflective
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GEUnit unit;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<GenericEvent> deflectEvents;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ReflectiveType _reflectiveType;

		[Token(Token = "0x14000025")]
		public event Action<Rigidbody> OnDeflect
		{
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x1134044", Offset = "0x1134044", VA = "0x1134044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A9EC", Offset = "0x105A9EC")]
			add
			{
			}
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x11340E8", Offset = "0x11340E8", VA = "0x11340E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A9FC", Offset = "0x105A9FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x113418C", Offset = "0x113418C", VA = "0x113418C", Slot = "10")]
		public GEUnit GetGEUnit()
		{
			return null;
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1134194", Offset = "0x1134194", VA = "0x1134194")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x11344B8", Offset = "0x11344B8", VA = "0x11344B8", Slot = "11")]
		public void InformAboutDeflection()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x11344E4", Offset = "0x11344E4", VA = "0x11344E4", Slot = "12")]
		public ReflectiveType GetReflectionType()
		{
			return default(ReflectiveType);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x11344EC", Offset = "0x11344EC", VA = "0x11344EC")]
		public DeflectiveMaterial()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class ExpandChip : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200025B")]
		public class StaticState
		{
			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject mesh;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Collider collider;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshFilter meshFilter;

			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x1142AA8", Offset = "0x1142AA8", VA = "0x1142AA8")]
			public StaticState()
			{
			}
		}

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float expandDuration;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StaticState closedState;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StaticState openState;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject dynamicMesh;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshFilter icon;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UpgradeChip upgradeChip;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SkinnedMeshRenderer skinnedMeshRenderer;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float currentExpandProgress;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float targetExpand;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1142180", Offset = "0x1142180", VA = "0x1142180")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x11421F0", Offset = "0x11421F0", VA = "0x11421F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1142320", Offset = "0x1142320", VA = "0x1142320")]
		private void SetMeshModels()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x11425A4", Offset = "0x11425A4", VA = "0x11425A4")]
		private void SetExpandProgress(float progress)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1142784", Offset = "0x1142784", VA = "0x1142784")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1142824", Offset = "0x1142824", VA = "0x1142824")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1142A60", Offset = "0x1142A60", VA = "0x1142A60")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1142A8C", Offset = "0x1142A8C", VA = "0x1142A8C")]
		public ExpandChip()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class Visor : MonoBehaviour
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetVRInputDeviceGroup InputDevice;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaleObject VisorPing;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Visor instance;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isVisor;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera visorCamera;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastActivation;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ScaleObject ping;

		[Token(Token = "0x14000026")]
		public static event Action<bool> OnVisorChanged
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x10E1BD8", Offset = "0x10E1BD8", VA = "0x10E1BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AA0C", Offset = "0x105AA0C")]
			add
			{
			}
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x10E1C90", Offset = "0x10E1C90", VA = "0x10E1C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AA1C", Offset = "0x105AA1C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x10E1D48", Offset = "0x10E1D48", VA = "0x10E1D48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x10E1DA0", Offset = "0x10E1DA0", VA = "0x10E1DA0")]
		private void UpdateDepthTexture()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x10E1DD8", Offset = "0x10E1DD8", VA = "0x10E1DD8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AA2C", Offset = "0x105AA2C")]
		public void ToggleVisor()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x10E1F40", Offset = "0x10E1F40", VA = "0x10E1F40")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AA3C", Offset = "0x105AA3C")]
		private void Ping()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x10E1FF4", Offset = "0x10E1FF4", VA = "0x10E1FF4")]
		public Visor()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class VisorActivator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C454", Offset = "0x104C454")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__2_0;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject> <>9__5_0;

			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x10E250C", Offset = "0x10E250C", VA = "0x10E250C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x10E2514", Offset = "0x10E2514", VA = "0x10E2514")]
			internal void <PickableObject_OnRelease>b__2_0(GameObject o)
			{
			}

			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x10E2534", Offset = "0x10E2534", VA = "0x10E2534")]
			internal void <PickableObject_OnPickUp>b__5_0(GameObject o)
			{
			}
		}

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> disableOnHead;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform currentPickingTransform;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x10E200C", Offset = "0x10E200C", VA = "0x10E200C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x10E20E4", Offset = "0x10E20E4", VA = "0x10E20E4")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x10E22A4", Offset = "0x10E22A4", VA = "0x10E22A4")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x10E24A0", Offset = "0x10E24A0", VA = "0x10E24A0")]
		public VisorActivator()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class InitializeLevelEventsAction : BaseAction
	{
		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C464", Offset = "0x104C464")]
		private sealed class <DoExecute>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InitializeLevelEventsAction <>4__this;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GenerationInfo generationInfo;

			[Token(Token = "0x17000131")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B9D")]
				[Address(RVA = "0x112F3E4", Offset = "0x112F3E4", VA = "0x112F3E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000132")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B9F")]
				[Address(RVA = "0x112F44C", Offset = "0x112F44C", VA = "0x112F44C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x112F284", Offset = "0x112F284", VA = "0x112F284")]
			[DebuggerHidden]
			public <DoExecute>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x112F314", Offset = "0x112F314", VA = "0x112F314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x112F318", Offset = "0x112F318", VA = "0x112F318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x112F3EC", Offset = "0x112F3EC", VA = "0x112F3EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x112F208", Offset = "0x112F208", VA = "0x112F208", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AA4C", Offset = "0x105AA4C")]
		public override IEnumerator DoExecute(GenerationInfo generationInfo)
		{
			return null;
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x112F2B0", Offset = "0x112F2B0", VA = "0x112F2B0")]
		private void InitializeWorldEventForLevel(GenerationInfo generationInfo)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x112F30C", Offset = "0x112F30C", VA = "0x112F30C")]
		public InitializeLevelEventsAction()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class LevelObjects : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LevelObjects Instance;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Player Player;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<AssetUnitTag, HashSet<GEUnit>> Units;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Dictionary<AssetUnitTag, HashSet<Weapon>> Weapons;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HashSet<UpgradeChip> Upgrades;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1108374", Offset = "0x1108374", VA = "0x1108374")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1108454", Offset = "0x1108454", VA = "0x1108454")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1108598", Offset = "0x1108598", VA = "0x1108598")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1108720", Offset = "0x1108720", VA = "0x1108720")]
		private void OnAdd(IEntity entity)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1109298", Offset = "0x1109298", VA = "0x1109298")]
		private void OnRemove(IEntity entity)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x1107A28", Offset = "0x1107A28", VA = "0x1107A28")]
		public void OnLevelLoad()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x11095C8", Offset = "0x11095C8", VA = "0x11095C8")]
		public LevelObjects()
		{
		}
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C474", Offset = "0x104C474")]
	public class EnforcePosition : MonoBehaviour
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 targetLocalPosition;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x11391E8", Offset = "0x11391E8", VA = "0x11391E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x11392E8", Offset = "0x11392E8", VA = "0x11392E8")]
		public EnforcePosition()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class OnDestinationReached : Condition
	{
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x110EF24", Offset = "0x110EF24", VA = "0x110EF24", Slot = "21")]
		protected override bool IsTrueInternal(ConditionInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x110EF84", Offset = "0x110EF84", VA = "0x110EF84")]
		public OnDestinationReached()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class PausePlayerOnLevelLoad : MonoBehaviour
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DashMovement dashMovement;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera playerCam;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float loadViewDepth;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _viewDepth;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1110134", Offset = "0x1110134", VA = "0x1110134")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x11103BC", Offset = "0x11103BC", VA = "0x11103BC")]
		private void Instance_OnGenerateFinished()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x11104F0", Offset = "0x11104F0", VA = "0x11104F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x111027C", Offset = "0x111027C", VA = "0x111027C")]
		private void Instance_OnGenerateStarted()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1110628", Offset = "0x1110628", VA = "0x1110628")]
		public PausePlayerOnLevelLoad()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class ResetHeightOnSteps : MonoBehaviour
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRMovement vrMovement;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minStepHeight;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxStepHeight;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float testInterval;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastTest;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask environmentLayer;

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1118274", Offset = "0x1118274", VA = "0x1118274")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1118530", Offset = "0x1118530", VA = "0x1118530")]
		public ResetHeightOnSteps()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class RotationMovement : MonoBehaviour, IPathfinding
	{
		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected bool hasTarget;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected Vector3 currentForwardTarget;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector3 currentMovementTarget;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[ExposedInUnitDesigner]
		public float speed;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[ExposedInUnitDesigner]
		public float angularSpeed;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected float speedPercentage;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053304", Offset = "0x1053304")]
		private readonly Vector3 <MovementTarget>k__BackingField;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053314", Offset = "0x1053314")]
		private readonly bool <HasTarget>k__BackingField;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform Plane;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool _isMoving;

		[Token(Token = "0x17000133")]
		public Vector3 MovementTarget
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x10EFF80", Offset = "0x10EFF80", VA = "0x10EFF80", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB00", Offset = "0x105AB00")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000134")]
		public bool HasTarget
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x10EFF8C", Offset = "0x10EFF8C", VA = "0x10EFF8C", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB10", Offset = "0x105AB10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000135")]
		public virtual bool IsActive
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x10EFF94", Offset = "0x10EFF94", VA = "0x10EFF94", Slot = "17")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x10EFF9C", Offset = "0x10EFF9C", VA = "0x10EFF9C", Slot = "18")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public virtual bool IsMoving
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x10EFFD8", Offset = "0x10EFFD8", VA = "0x10EFFD8", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x10EFFE0", Offset = "0x10EFFE0", VA = "0x10EFFE0", Slot = "4")]
		public bool SetMovementTarget(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x10F0124", Offset = "0x10F0124", VA = "0x10F0124", Slot = "6")]
		public void ResetMovementTarget()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x10F0198", Offset = "0x10F0198", VA = "0x10F0198", Slot = "7")]
		public bool DestinationReached(float tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x10F00E4", Offset = "0x10F00E4", VA = "0x10F00E4", Slot = "8")]
		public void SetTargetLookDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x10F0274", Offset = "0x10F0274", VA = "0x10F0274", Slot = "9")]
		public void ResetTargetLookDirection()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x10F02E4", Offset = "0x10F02E4", VA = "0x10F02E4", Slot = "10")]
		public void TeleportToPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x10F02E8", Offset = "0x10F02E8", VA = "0x10F02E8", Slot = "11")]
		public Vector3 GetNextWaypoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x10F02F4", Offset = "0x10F02F4", VA = "0x10F02F4", Slot = "12")]
		public void SetSpeedPercentage(float val)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x10F02FC", Offset = "0x10F02FC", VA = "0x10F02FC", Slot = "20")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x10F0524", Offset = "0x10F0524", VA = "0x10F0524")]
		public RotationMovement()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class SwitchSeatedOrStanding : MonoBehaviour
	{
		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float standingOffset;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetVRInputDeviceGroup inputDevice;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SeatedNotification;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string StandingNotification;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnumValueData positionKey;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool allowSwitchingWithJoystick;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool isStanding;

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1103E84", Offset = "0x1103E84", VA = "0x1103E84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1104048", Offset = "0x1104048", VA = "0x1104048")]
		private void Instance_OnValueChanged(ValueData arg1, object arg2)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x11040E4", Offset = "0x11040E4", VA = "0x11040E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x11041D4", Offset = "0x11041D4", VA = "0x11041D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1103F34", Offset = "0x1103F34", VA = "0x1103F34")]
		private void Refresh(bool showNotifications = true)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x11042CC", Offset = "0x11042CC", VA = "0x11042CC")]
		public SwitchSeatedOrStanding()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class TeleportUsingJoystick : MonoBehaviour
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float climbDelay;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private JoystickMovement currentJoystickMovement;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float climbProgress;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Player currentPlayer;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GameObject> progressIndicators;

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1105350", Offset = "0x1105350", VA = "0x1105350")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x11054EC", Offset = "0x11054EC", VA = "0x11054EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1105640", Offset = "0x1105640", VA = "0x1105640")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x110578C", Offset = "0x110578C", VA = "0x110578C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1105A50", Offset = "0x1105A50", VA = "0x1105A50")]
		private void TeleportToTop()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1105BE4", Offset = "0x1105BE4", VA = "0x1105BE4")]
		public TeleportUsingJoystick()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class MarkerObject : MonoBehaviour
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MarkerData Marker;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform marker;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x110B5F8", Offset = "0x110B5F8", VA = "0x110B5F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x110B7C8", Offset = "0x110B7C8", VA = "0x110B7C8")]
		public MarkerObject()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class BakeEnvironmentHandler : MonoBehaviour
	{
		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombinedMeshHandler combinedMeshHandler;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material environmentMaterial;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material replacementMaterial;

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x10C9770", Offset = "0x10C9770", VA = "0x10C9770")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x10C9804", Offset = "0x10C9804", VA = "0x10C9804")]
		private void CombinedMeshHandler_OnCombineMeshes(List<GameObject> combinedObjects)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x10C9A64", Offset = "0x10C9A64", VA = "0x10C9A64")]
		public static void AddUVs(GameObject helper, Mesh mesh, MeshRenderer mr, Material replacementMaterial)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x10C9C8C", Offset = "0x10C9C8C", VA = "0x10C9C8C")]
		public BakeEnvironmentHandler()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class BakeEnvironmentObject : MonoBehaviour
	{
		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material replacementMaterial;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x10C9C94", Offset = "0x10C9C94", VA = "0x10C9C94")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x10C9D04", Offset = "0x10C9D04", VA = "0x10C9D04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x10C9DFC", Offset = "0x10C9DFC", VA = "0x10C9DFC")]
		public BakeEnvironmentObject()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class RemoveInvisibleTriangles : MonoBehaviour
	{
		[Token(Token = "0x200026D")]
		public class Triangle
		{
			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRepresentation mesh;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int id;

			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int outlineVal;

			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> vertexIds;

			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x1116F84", Offset = "0x1116F84", VA = "0x1116F84")]
			public Triangle(MeshRepresentation mesh, int id)
			{
			}

			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x1117968", Offset = "0x1117968", VA = "0x1117968", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x1117A28", Offset = "0x1117A28", VA = "0x1117A28", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x1117D00", Offset = "0x1117D00", VA = "0x1117D00")]
			public List<Vector3> GetVertices()
			{
				return null;
			}

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x111712C", Offset = "0x111712C", VA = "0x111712C")]
			public bool HasSamePoints(Triangle otherTriangle)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200026E")]
		public class MeshRepresentation
		{
			[Token(Token = "0x200026F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C488", Offset = "0x104C488")]
			private sealed class <>c__DisplayClass13_0
			{
				[Token(Token = "0x4000CDA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int i;

				[Token(Token = "0x6000BE3")]
				[Address(RVA = "0x111793C", Offset = "0x111793C", VA = "0x111793C")]
				public <>c__DisplayClass13_0()
				{
				}

				[Token(Token = "0x6000BE4")]
				[Address(RVA = "0x1117944", Offset = "0x1117944", VA = "0x1117944")]
				internal bool <ApplyRemovedTriangles>b__0(Triangle t)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4000CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int> triangles;

			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector3> vertices;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Color> colors;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector3> normals;

			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Vector2> uv;

			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<Vector2> uv2;

			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<int> unusedVertices;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Triangle> unusedTriangles;

			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x1116E20", Offset = "0x1116E20", VA = "0x1116E20")]
			public MeshRepresentation(Mesh mesh)
			{
			}

			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x11177D4", Offset = "0x11177D4", VA = "0x11177D4")]
			public void Apply()
			{
			}

			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x11173EC", Offset = "0x11173EC", VA = "0x11173EC")]
			public void StartRemovingTriangles()
			{
			}

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x111747C", Offset = "0x111747C", VA = "0x111747C")]
			public void RemoveTriangle(Triangle triangle)
			{
			}

			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x11174E4", Offset = "0x11174E4", VA = "0x11174E4")]
			public void ApplyRemovedTriangles()
			{
			}
		}

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombinedMeshHandler combinedMeshHandler;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool removeAdjacentTriangles;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool raycastTestEveryTriangle;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomOcclusion roomOcclusion;

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x111667C", Offset = "0x111667C", VA = "0x111667C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1116710", Offset = "0x1116710", VA = "0x1116710")]
		private void CombinedMeshHandler_OnCombineMeshes(List<GameObject> combinedObjects)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x111792C", Offset = "0x111792C", VA = "0x111792C")]
		public RemoveInvisibleTriangles()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class NonHumanoidRagdoll : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000271")]
		public class RagdollBone
		{
			[Token(Token = "0x2000272")]
			public enum Type
			{
				[Token(Token = "0x4000CE2")]
				Body,
				[Token(Token = "0x4000CE3")]
				Leg
			}

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int legParts;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float legThickness;

			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform attachedTo;

			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x110CD04", Offset = "0x110CD04", VA = "0x110CD04")]
			public RagdollBone()
			{
			}
		}

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RagdollBone> ragdollBones;

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x110C5F8", Offset = "0x110C5F8", VA = "0x110C5F8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AB20", Offset = "0x105AB20")]
		public void CreateRagdoll()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x110CCFC", Offset = "0x110CCFC", VA = "0x110CCFC")]
		public NonHumanoidRagdoll()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class EntityHandler : MonoBehaviour
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EntityHandler instance;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x113A8A4", Offset = "0x113A8A4", VA = "0x113A8A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x113A8F8", Offset = "0x113A8F8", VA = "0x113A8F8")]
		public EntityHandler()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class PickableRagdoll : MonoBehaviour
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMovement movement;

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x11117D8", Offset = "0x11117D8", VA = "0x11117D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x111186C", Offset = "0x111186C", VA = "0x111186C")]
		private void Movement_OnEnableRagdoll(ExternalRagdoll ragdoll, bool val)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1111A70", Offset = "0x1111A70", VA = "0x1111A70")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1111B00", Offset = "0x1111B00", VA = "0x1111B00")]
		public PickableRagdoll()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class SidedPickableObject : PickableObject
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public Transform rotatableModel;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public Transform inverseRotatableModel;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Transform leftOneHanded;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public Transform leftTwoHanded;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public Transform rightOneHanded;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public Transform rightTwoHanded;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public Vector3 centerClosed;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public Vector3 sizeClosed;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public Vector3 centerOpenLeft;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public Vector3 sizeOpenLeft;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public Vector3 centerOpenRight;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public Vector3 sizeOpenRight;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x10FDD54", Offset = "0x10FDD54", VA = "0x10FDD54", Slot = "44")]
		public override void PickUp(IPicking picking, Vector3 objToHandVector)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x10FE07C", Offset = "0x10FE07C", VA = "0x10FE07C", Slot = "45")]
		public override void Release(IPicking picking)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x10FE0F0", Offset = "0x10FE0F0", VA = "0x10FE0F0")]
		public SidedPickableObject()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class AbilityCooldown : MonoBehaviour
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UseAbility useAbility;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Side side;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material activeMaterial;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material cooldownMaterial;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x11DE3DC", Offset = "0x11DE3DC", VA = "0x11DE3DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x11DE45C", Offset = "0x11DE45C", VA = "0x11DE45C")]
		public AbilityCooldown()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class AddMomentumOnEndClimbing : MonoBehaviour
	{
		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRMovement movement;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand playerHand;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody playerRigidbody;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float threshold;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 momentum;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 initialMomentum;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float slowDownSpeed;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VelocityRecorder velocity;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x11DF2A8", Offset = "0x11DF2A8", VA = "0x11DF2A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x11DF43C", Offset = "0x11DF43C", VA = "0x11DF43C")]
		private void PlayerHand_OnEndClimbing()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x11DF498", Offset = "0x11DF498", VA = "0x11DF498")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x11DF680", Offset = "0x11DF680", VA = "0x11DF680")]
		public AddMomentumOnEndClimbing()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class EnsureMinHeightAboveTransform : MonoBehaviour
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 initialLocalPosition;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform reference;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minHeight;

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x11392F0", Offset = "0x11392F0", VA = "0x11392F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x113932C", Offset = "0x113932C", VA = "0x113932C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x11394B0", Offset = "0x11394B0", VA = "0x11394B0")]
		public EnsureMinHeightAboveTransform()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class PlayerAttributes : MonoBehaviour
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerAttributes instance;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashMovement dashMovement;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GEUnit unit;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float defaultJoystickMovementSpeed;

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1111E10", Offset = "0x1111E10", VA = "0x1111E10")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1111E68", Offset = "0x1111E68", VA = "0x1111E68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1111EBC", Offset = "0x1111EBC", VA = "0x1111EBC")]
		public void ChangeMovementSpeed(float newVal)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1111EE0", Offset = "0x1111EE0", VA = "0x1111EE0")]
		public void ResetMovementSpeed()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1111F08", Offset = "0x1111F08", VA = "0x1111F08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1111F98", Offset = "0x1111F98", VA = "0x1111F98")]
		public PlayerAttributes()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class ChangeMovementSpeedEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x10CED94", Offset = "0x10CED94", VA = "0x10CED94", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x10CEE4C", Offset = "0x10CEE4C", VA = "0x10CEE4C")]
		public ChangeMovementSpeedEvent()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class ChangeMovementSpeedForSecondsEvent : GenericEvent, IAction, IState
	{
		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C498", Offset = "0x104C498")]
		private sealed class <DoSlowDownTime>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChangeMovementSpeedForSecondsEvent <>4__this;

			[Token(Token = "0x17000137")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C0B")]
				[Address(RVA = "0x10CF0FC", Offset = "0x10CF0FC", VA = "0x10CF0FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000138")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C0D")]
				[Address(RVA = "0x10CF164", Offset = "0x10CF164", VA = "0x10CF164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x10CEF08", Offset = "0x10CEF08", VA = "0x10CEF08")]
			[DebuggerHidden]
			public <DoSlowDownTime>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x10CF008", Offset = "0x10CF008", VA = "0x10CF008", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x10CF00C", Offset = "0x10CF00C", VA = "0x10CF00C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x10CF104", Offset = "0x10CF104", VA = "0x10CF104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float speedMovementForSeconds;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float oldSpeed;

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x10CEE54", Offset = "0x10CEE54", VA = "0x10CEE54", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x10CEE98", Offset = "0x10CEE98", VA = "0x10CEE98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AB30", Offset = "0x105AB30")]
		private IEnumerator DoSlowDownTime()
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x10CEF34", Offset = "0x10CEF34", VA = "0x10CEF34", Slot = "6")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x10CEF38", Offset = "0x10CEF38", VA = "0x10CEF38", Slot = "7")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x10CEF9C", Offset = "0x10CEF9C", VA = "0x10CEF9C", Slot = "8")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x10CEFF8", Offset = "0x10CEFF8", VA = "0x10CEFF8")]
		public ChangeMovementSpeedForSecondsEvent()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class ChangeMovementSpeedMultiplicator : GenericEvent, IAction
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DashMovement dashMovement;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float val;

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x10CF16C", Offset = "0x10CF16C", VA = "0x10CF16C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x10CF238", Offset = "0x10CF238", VA = "0x10CF238")]
		public ChangeMovementSpeedMultiplicator()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class ResetMovementSpeedEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1118544", Offset = "0x1118544", VA = "0x1118544", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x11185F0", Offset = "0x11185F0", VA = "0x11185F0")]
		public ResetMovementSpeedEvent()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class RefreshHoverOnLanguageChange : MonoBehaviour
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand playerHand;

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1116330", Offset = "0x1116330", VA = "0x1116330")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1116388", Offset = "0x1116388", VA = "0x1116388")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1116404", Offset = "0x1116404", VA = "0x1116404")]
		private void LocalisationSystem_OnLateLanguageChange(LanguageData language)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1116494", Offset = "0x1116494", VA = "0x1116494")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1116510", Offset = "0x1116510", VA = "0x1116510")]
		public RefreshHoverOnLanguageChange()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class UpdateMovementSettings : MonoBehaviour
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRMovement movement;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand LeftHand;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHand RightHand;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnumValueData movementKey;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<AssetMovementSettings> movementSettingsLeft;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<AssetMovementSettings> movementSettings;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EnumValueData snapTurnAngleKey;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EnumValueData turnTypeKey;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EnumValueData smoothRotationSpeedKey;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public EnumValueData fallDownBehaviourKey;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public EnumValueData movementDirectionKey;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public EnumValueData holdWeaponKey;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public EnumValueData handednessKey;

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x10DE778", Offset = "0x10DE778", VA = "0x10DE778")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x10DE870", Offset = "0x10DE870", VA = "0x10DE870")]
		private void UpdateValues()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x10DE9EC", Offset = "0x10DE9EC", VA = "0x10DE9EC")]
		private void SetMovementType(int id)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x10DEBA0", Offset = "0x10DEBA0", VA = "0x10DEBA0")]
		private void SetMovementDirection(JoystickMovement.OrientationType orientationType)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x10DEB00", Offset = "0x10DEB00", VA = "0x10DEB00")]
		private void SetFallDownBehaviour(FallDownBehaviour.FallDownType val)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x10DEAC0", Offset = "0x10DEAC0", VA = "0x10DEAC0")]
		private void SetSmoothRotation(int id)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x10DEAE4", Offset = "0x10DEAE4", VA = "0x10DEAE4")]
		private void SetSmoothRotationSpeed(float val)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x10DEAA4", Offset = "0x10DEAA4", VA = "0x10DEAA4")]
		private void SetRotationAmount(float val)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x10DEBBC", Offset = "0x10DEBBC", VA = "0x10DEBBC")]
		private void SetHoldWeapon(bool val)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x10DEC70", Offset = "0x10DEC70", VA = "0x10DEC70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x10DED60", Offset = "0x10DED60", VA = "0x10DED60")]
		private void Instance_OnValueChanged(ValueData index, object value)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x10DED64", Offset = "0x10DED64", VA = "0x10DED64")]
		public UpdateMovementSettings()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class UseAbility : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C4A8", Offset = "0x104C4A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UpgradeData, bool> <>9__12_0;

			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x10E1720", Offset = "0x10E1720", VA = "0x10E1720")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x10E1728", Offset = "0x10E1728", VA = "0x10E1728")]
			internal bool <get_NumUpgrades>b__12_0(UpgradeData u)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlayerUpgrades playerUpgrades;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform aimPivot;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GEUnit Unit;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnitHealth Health;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PlayerHand Playerhand;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Side side;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AssetVRInputDeviceGroup input;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public KeyCode debugKeyCode;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float lastCoolDown;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<IAction> OnUseEvents;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<IAction> OnUseFailedEvents;

		[Token(Token = "0x17000139")]
		public int NumUpgrades
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x10E10A4", Offset = "0x10E10A4", VA = "0x10E10A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013A")]
		public bool HasActiveUpgrade
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x10E11E4", Offset = "0x10E11E4", VA = "0x10E11E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x10E12D8", Offset = "0x10E12D8", VA = "0x10E12D8")]
		public float GetCoolDownProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x10E11B4", Offset = "0x10E11B4", VA = "0x10E11B4")]
		private List<UpgradeData> GetUpgradeData()
		{
			return null;
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x10E1488", Offset = "0x10E1488", VA = "0x10E1488")]
		public void Execute()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x10E1648", Offset = "0x10E1648", VA = "0x10E1648")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x10E16AC", Offset = "0x10E16AC", VA = "0x10E16AC")]
		public UseAbility()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class LootBox : MonoBehaviour
	{
		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxContent boxContent;

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x110B2D8", Offset = "0x110B2D8", VA = "0x110B2D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x110B36C", Offset = "0x110B36C", VA = "0x110B36C")]
		private void BoxContent_OnGameObjectSpawned(GameObject obj)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x110B460", Offset = "0x110B460", VA = "0x110B460")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x110B5E8", Offset = "0x110B5E8", VA = "0x110B5E8")]
		public LootBox()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class SetGoldLimitAction : BaseAction
	{
		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C4B8", Offset = "0x104C4B8")]
		private sealed class <DoExecute>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GenerationInfo generationInfo;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SetGoldLimitAction <>4__this;

			[Token(Token = "0x1700013B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C36")]
				[Address(RVA = "0x10F8674", Offset = "0x10F8674", VA = "0x10F8674", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C38")]
				[Address(RVA = "0x10F86DC", Offset = "0x10F86DC", VA = "0x10F86DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x10F816C", Offset = "0x10F816C", VA = "0x10F816C")]
			[DebuggerHidden]
			public <DoExecute>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x10F81A8", Offset = "0x10F81A8", VA = "0x10F81A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x10F81AC", Offset = "0x10F81AC", VA = "0x10F81AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x10F867C", Offset = "0x10F867C", VA = "0x10F867C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int goldLimitPerLevel;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x10F80F0", Offset = "0x10F80F0", VA = "0x10F80F0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105ABE4", Offset = "0x105ABE4")]
		public override IEnumerator DoExecute(GenerationInfo generationInfo)
		{
			return null;
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x10F8198", Offset = "0x10F8198", VA = "0x10F8198")]
		public SetGoldLimitAction()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class Profiler : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000287")]
		public class StatInfo
		{
			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Value;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Max;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x105366C", Offset = "0x105366C")]
			public string Percentage;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInTables]
			public float Perc;

			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x1115684", Offset = "0x1115684", VA = "0x1115684")]
			public Color PercColor()
			{
				return default(Color);
			}

			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x11151DC", Offset = "0x11151DC", VA = "0x11151DC")]
			public StatInfo()
			{
			}
		}

		[Token(Token = "0x2000288")]
		public enum MeshOrderType
		{
			[Token(Token = "0x4000D4A")]
			Count,
			[Token(Token = "0x4000D4B")]
			Vert,
			[Token(Token = "0x4000D4C")]
			Total
		}

		[Serializable]
		[Token(Token = "0x2000289")]
		public class MeshInfo
		{
			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x10536B4", Offset = "0x10536B4")]
			[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0x10536B4", Offset = "0x10536B4")]
			public Mesh Mesh;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x1053714", Offset = "0x1053714")]
			public int Count;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[ReadOnly]
			public int Vert;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public int VertTotal;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x1053774", Offset = "0x1053774")]
			[ReadOnly]
			public string Perc;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public string PercTotal;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10537C4", Offset = "0x10537C4")]
			public List<GameObject> Objects;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x1053810", Offset = "0x1053810")]
			public bool Anim;

			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x1114E24", Offset = "0x1114E24", VA = "0x1114E24")]
			public MeshInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028A")]
		public class MaterialInfo
		{
			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public Material Material;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x1053860", Offset = "0x1053860")]
			[ReadOnly]
			public int Count;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x10538A0", Offset = "0x10538A0")]
			public string Perc;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10538E0", Offset = "0x10538E0")]
			public List<GameObject> Objects;

			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x1114E94", Offset = "0x1114E94", VA = "0x1114E94")]
			public MaterialInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200028B")]
		public class ColliderInfo
		{
			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x105392C", Offset = "0x105392C")]
			public string Type;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x105396C", Offset = "0x105396C")]
			[ReadOnly]
			public int Count;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x10539AC", Offset = "0x10539AC")]
			public string Perc;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10539EC", Offset = "0x10539EC")]
			public HashSet<GameObject> Objects;

			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x1114F14", Offset = "0x1114F14", VA = "0x1114F14")]
			public ColliderInfo()
			{
			}
		}

		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C4C8", Offset = "0x104C4C8")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshFilter meshFilter;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<Renderer, bool> <>9__4;

			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x1114E14", Offset = "0x1114E14", VA = "0x1114E14")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x11153D4", Offset = "0x11153D4", VA = "0x11153D4")]
			internal bool <LogGameObject>b__4(Renderer r)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x11154D0", Offset = "0x11154D0", VA = "0x11154D0")]
			internal bool <LogGameObject>b__2(MeshInfo it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200028D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C4D8", Offset = "0x104C4D8")]
		private sealed class <>c__DisplayClass24_1
		{
			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRenderer rend;

			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x1114E1C", Offset = "0x1114E1C", VA = "0x1114E1C")]
			public <>c__DisplayClass24_1()
			{
			}

			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x1115534", Offset = "0x1115534", VA = "0x1115534")]
			internal bool <LogGameObject>b__3(MaterialInfo it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C4E8", Offset = "0x104C4E8")]
		private sealed class <>c__DisplayClass24_2
		{
			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkinnedMeshRenderer skin;

			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x1114F04", Offset = "0x1114F04", VA = "0x1114F04")]
			public <>c__DisplayClass24_2()
			{
			}

			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x1115598", Offset = "0x1115598", VA = "0x1115598")]
			internal bool <LogGameObject>b__5(MeshInfo it)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x11155FC", Offset = "0x11155FC", VA = "0x11155FC")]
			internal bool <LogGameObject>b__6(MaterialInfo it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200028F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C4F8", Offset = "0x104C4F8")]
		private sealed class <>c__DisplayClass24_3
		{
			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string type;

			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x1114F0C", Offset = "0x1114F0C", VA = "0x1114F0C")]
			public <>c__DisplayClass24_3()
			{
			}

			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x1115660", Offset = "0x1115660", VA = "0x1115660")]
			internal bool <LogGameObject>b__7(ColliderInfo it)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C508", Offset = "0x104C508")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MaterialInfo, int> <>9__24_0;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ColliderInfo, int> <>9__24_1;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshInfo, int> <>9__26_0;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MeshInfo, int> <>9__26_1;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<MeshInfo, int> <>9__26_2;

			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x1115354", Offset = "0x1115354", VA = "0x1115354")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x111535C", Offset = "0x111535C", VA = "0x111535C")]
			internal int <LogGameObject>b__24_0(MaterialInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x1115374", Offset = "0x1115374", VA = "0x1115374")]
			internal int <LogGameObject>b__24_1(ColliderInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x111538C", Offset = "0x111538C", VA = "0x111538C")]
			internal int <SortMesh>b__26_0(MeshInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x11153A4", Offset = "0x11153A4", VA = "0x11153A4")]
			internal int <SortMesh>b__26_1(MeshInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x11153BC", Offset = "0x11153BC", VA = "0x11153BC")]
			internal int <SortMesh>b__26_2(MeshInfo it)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Profiler Instance;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0x1053334", Offset = "0x1053334")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0x1053334", Offset = "0x1053334")]
		[AttributeAttribute(Name = "PropertyOrderAttribute", RVA = "0x1053334", Offset = "0x1053334")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1053334", Offset = "0x1053334")]
		[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x1053334", Offset = "0x1053334")]
		public ProfilerData Template;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[ReadOnly]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x10533E4", Offset = "0x10533E4")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0x10533E4", Offset = "0x10533E4")]
		public List<StatInfo> Stats;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0x1053470", Offset = "0x1053470")]
		[EnumToggleButtons]
		public MeshOrderType MeshOrder;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0x10534E0", Offset = "0x10534E0")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x10534E0", Offset = "0x10534E0")]
		public List<MeshInfo> Meshes;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0x1053568", Offset = "0x1053568")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x1053568", Offset = "0x1053568")]
		public List<MaterialInfo> Materials;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x10535F0", Offset = "0x10535F0")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0x10535F0", Offset = "0x10535F0")]
		public List<ColliderInfo> Collider;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int meshCount;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int vertCount;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int matCount;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int matTotalCount;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int collCount;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float countPerc;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float vertPerc;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float matPerc;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float collPerc;

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1113744", Offset = "0x1113744", VA = "0x1113744")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x11135F8", Offset = "0x11135F8", VA = "0x11135F8")]
		public void LogScene()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1114DE8", Offset = "0x1114DE8", VA = "0x1114DE8")]
		private void LogObject()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1113798", Offset = "0x1113798", VA = "0x1113798")]
		public void LogGameObject(GameObject obj)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x11151E4", Offset = "0x11151E4", VA = "0x11151E4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1114F84", Offset = "0x1114F84", VA = "0x1114F84")]
		public void SortMesh()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x11151E8", Offset = "0x11151E8", VA = "0x11151E8")]
		public int GetMeshCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x11151F0", Offset = "0x11151F0", VA = "0x11151F0")]
		public int GetVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x11151F8", Offset = "0x11151F8", VA = "0x11151F8")]
		public int GetMaterialCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1115200", Offset = "0x1115200", VA = "0x1115200")]
		public int GetColliderCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1115208", Offset = "0x1115208", VA = "0x1115208")]
		public Profiler()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class SavePlayerState : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000292")]
		public class SaveState
		{
			[Token(Token = "0x2000293")]
			public class InventoryPickUp
			{
				[Token(Token = "0x4000D75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int slotId;

				[Token(Token = "0x4000D76")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public ObjectData objectData;

				[Token(Token = "0x4000D77")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public bool isHand;

				[Token(Token = "0x6000C6E")]
				[Address(RVA = "0x10F2A78", Offset = "0x10F2A78", VA = "0x10F2A78")]
				public InventoryPickUp(int slotId, ObjectData objectData, bool isHand)
				{
				}
			}

			[Token(Token = "0x2000294")]
			public enum SlotType
			{
				[Token(Token = "0x4000D79")]
				LEFT_HAND = 0,
				[Token(Token = "0x4000D7A")]
				RIGHT_HAND = 1,
				[Token(Token = "0x4000D7B")]
				LEFT_HOLSTER = 2,
				[Token(Token = "0x4000D7C")]
				RIGHT_HOLSTER = 3,
				[Token(Token = "0x4000D7D")]
				SMALL_LEFT_HOLSTER = 4,
				[Token(Token = "0x4000D7E")]
				SMALL_RIGHT_HOLSTER = 5,
				[Token(Token = "0x4000D7F")]
				BACK_HOLSTER = 6,
				[Token(Token = "0x4000D80")]
				UPGRADE_LEFT1 = 8,
				[Token(Token = "0x4000D81")]
				UPGRADE_LEFT2 = 9,
				[Token(Token = "0x4000D82")]
				UPGRADE_RIGHT1 = 10,
				[Token(Token = "0x4000D83")]
				UPGRADE_RIGHT2 = 11,
				[Token(Token = "0x4000D84")]
				SMALL_LEFT_UP_HOLSTER = 12,
				[Token(Token = "0x4000D85")]
				SMALL_RIGHT_UP_HOLSTER = 13
			}

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<InventoryPickUp> pickUps;

			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float currentLives;

			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x10F29F8", Offset = "0x10F29F8", VA = "0x10F29F8")]
			public SaveState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C518", Offset = "0x104C518")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<IPicking> <>9__8_0;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SceneData, bool> <>9__9_0;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<SceneData, bool> <>9__9_1;

			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x10F375C", Offset = "0x10F375C", VA = "0x10F375C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x10F3764", Offset = "0x10F3764", VA = "0x10F3764")]
			internal bool <Awake>b__8_0(IPicking p)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x10F3770", Offset = "0x10F3770", VA = "0x10F3770")]
			internal bool <Start>b__9_0(SceneData s)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x10F3814", Offset = "0x10F3814", VA = "0x10F3814")]
			internal bool <Start>b__9_1(SceneData s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C528", Offset = "0x104C528")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pickName;

			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x10F2A70", Offset = "0x10F2A70", VA = "0x10F2A70")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x10F38B8", Offset = "0x10F38B8", VA = "0x10F38B8")]
			internal bool <LoadFromMemory>b__0(ObjectData it)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x10F38F0", Offset = "0x10F38F0", VA = "0x10F38F0")]
			internal bool <LoadFromMemory>b__1(ObjectData it)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x10F3928", Offset = "0x10F3928", VA = "0x10F3928")]
			internal bool <LoadFromMemory>b__2(ObjectData it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C538", Offset = "0x104C538")]
		private sealed class <DoPickUpAfterOneFrame>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isHand;

			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPicking picking;

			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SavePlayerState <>4__this;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PickableObject pickable;

			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <targetPosition>5__2;

			[Token(Token = "0x1700013E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C7B")]
				[Address(RVA = "0x10F3EE8", Offset = "0x10F3EE8", VA = "0x10F3EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C7D")]
				[Address(RVA = "0x10F3F50", Offset = "0x10F3F50", VA = "0x10F3F50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x10F3548", Offset = "0x10F3548", VA = "0x10F3548")]
			[DebuggerHidden]
			public <DoPickUpAfterOneFrame>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x10F3960", Offset = "0x10F3960", VA = "0x10F3960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x10F3964", Offset = "0x10F3964", VA = "0x10F3964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x10F3EF0", Offset = "0x10F3EF0", VA = "0x10F3EF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SavePlayerState instance;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<PlayerHand> playerHands;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<ExtendedInventorySlot> inventorySlots;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1053A38", Offset = "0x1053A38")]
		public List<ValueData> GlobalValues;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1053A70", Offset = "0x1053A70")]
		public List<SceneData> whitelistedScenes;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 weaponsOffset;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<IPicking> pickingList;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SaveState latestSaveState;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SaveState homebaseEquipSaveState;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053AA8", Offset = "0x1053AA8")]
		private List<IPickable> <CurrentHandObjects>k__BackingField;

		[Token(Token = "0x1700013D")]
		public List<IPickable> CurrentHandObjects
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x10F3538", Offset = "0x10F3538", VA = "0x10F3538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105ACA8", Offset = "0x105ACA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x10F3540", Offset = "0x10F3540", VA = "0x10F3540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105ACB8", Offset = "0x105ACB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x10F165C", Offset = "0x10F165C", VA = "0x10F165C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x10F1704", Offset = "0x10F1704", VA = "0x10F1704")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x10F1880", Offset = "0x10F1880", VA = "0x10F1880")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x10F2964", Offset = "0x10F2964", VA = "0x10F2964")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AC98", Offset = "0x105AC98")]
		public void Test()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x10F0DD0", Offset = "0x10F0DD0", VA = "0x10F0DD0")]
		public void SaveToMemory(SaveState saveState)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x10F1BF4", Offset = "0x10F1BF4", VA = "0x10F1BF4")]
		public SaveState LoadFromMemory()
		{
			return null;
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x10F06A0", Offset = "0x10F06A0", VA = "0x10F06A0")]
		public bool HasMemory()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x10F241C", Offset = "0x10F241C", VA = "0x10F241C")]
		public void ClearMemory()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x10F070C", Offset = "0x10F070C", VA = "0x10F070C")]
		public SaveState GetSaveState()
		{
			return null;
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x10F27C4", Offset = "0x10F27C4", VA = "0x10F27C4")]
		public void CreateSaveState()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x10F2AC0", Offset = "0x10F2AC0", VA = "0x10F2AC0")]
		public void SetHomebaseEquipSaveState()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x10F28F4", Offset = "0x10F28F4", VA = "0x10F28F4")]
		private void LoadLatestSaveState()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x10F2B2C", Offset = "0x10F2B2C", VA = "0x10F2B2C")]
		private void LoadSaveState(SaveState saveState)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x10F34A0", Offset = "0x10F34A0", VA = "0x10F34A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105ACC8", Offset = "0x105ACC8")]
		private IEnumerator DoPickUpAfterOneFrame(IPicking picking, PickableObject pickable, bool isHand)
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x10F3574", Offset = "0x10F3574", VA = "0x10F3574")]
		public void DeleteSaveState()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x10F3644", Offset = "0x10F3644", VA = "0x10F3644")]
		public SavePlayerState()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class SaveCompleteStateEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x10F05B0", Offset = "0x10F05B0", VA = "0x10F05B0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x10F1654", Offset = "0x10F1654", VA = "0x10F1654")]
		public SaveCompleteStateEvent()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class ClearCompleteStateEvent : IAction
	{
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x10D08D4", Offset = "0x10D08D4", VA = "0x10D08D4", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x10D09BC", Offset = "0x10D09BC", VA = "0x10D09BC")]
		public ClearCompleteStateEvent()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class HasSavedLevelStateEvent : ICondition
	{
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x112B078", Offset = "0x112B078", VA = "0x112B078", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x112B0EC", Offset = "0x112B0EC", VA = "0x112B0EC")]
		public HasSavedLevelStateEvent()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class LoadSavedLevelStateEvent : IAction
	{
		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C548", Offset = "0x104C548")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string districtName;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string playerClassName;

			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x110B184", Offset = "0x110B184", VA = "0x110B184")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x110B194", Offset = "0x110B194", VA = "0x110B194")]
			internal bool <Execute>b__0(AssetWorldProgression.DistrictProgression it)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x110B1E0", Offset = "0x110B1E0", VA = "0x110B1E0")]
			internal bool <Execute>b__1(ScriptableObject it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x110AD18", Offset = "0x110AD18", VA = "0x110AD18", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x110B18C", Offset = "0x110B18C", VA = "0x110B18C")]
		public LoadSavedLevelStateEvent()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class CreateSaveStateEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x10D4540", Offset = "0x10D4540", VA = "0x10D4540", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x10D464C", Offset = "0x10D464C", VA = "0x10D464C")]
		public CreateSaveStateEvent()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class DeleteSaveStateEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x11344F4", Offset = "0x11344F4", VA = "0x11344F4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x113462C", Offset = "0x113462C", VA = "0x113462C")]
		public DeleteSaveStateEvent()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class SetHomebaseEquipState : GenericEvent, IAction
	{
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x10F86E4", Offset = "0x10F86E4", VA = "0x10F86E4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x10F87EC", Offset = "0x10F87EC", VA = "0x10F87EC")]
		public SetHomebaseEquipState()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class SceneSettings : MonoBehaviour
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InlineEditorAttribute", RVA = "0x1053AB8", Offset = "0x1053AB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1053AB8", Offset = "0x1053AB8")]
		public SceneSettingsData Settings;

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x10F42A4", Offset = "0x10F42A4", VA = "0x10F42A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x10F4338", Offset = "0x10F4338", VA = "0x10F4338")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x10F42A8", Offset = "0x10F42A8", VA = "0x10F42A8")]
		private void RefreshShader()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x10F44B0", Offset = "0x10F44B0", VA = "0x10F44B0")]
		public SceneSettings()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104C558", Offset = "0x104C558")]
	public class SceneSettingsData : ScriptableObject
	{
		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1053B18", Offset = "0x1053B18")]
		[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0x1053B18", Offset = "0x1053B18")]
		public Texture FadeTextureLEGACY;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0x1053B7C", Offset = "0x1053B7C")]
		[HideLabel]
		public Texture2D GradientTexture;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1053BBC", Offset = "0x1053BBC")]
		[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x1053BBC", Offset = "0x1053BBC")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1053BBC", Offset = "0x1053BBC")]
		public List<Gradient> Gradients;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x1053C54", Offset = "0x1053C54")]
		[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x1053C54", Offset = "0x1053C54")]
		public string Name;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1053CE0", Offset = "0x1053CE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053CE0", Offset = "0x1053CE0")]
		public float FogFadeColor;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float FogHeight;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float FogHeightFade;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float FogDistance;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float FogDistanceFade;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053D44", Offset = "0x1053D44")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1053D44", Offset = "0x1053D44")]
		public float SkyFadeColorTop;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053DA8", Offset = "0x1053DA8")]
		public float SkyFadeColorBottom;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053DC0", Offset = "0x1053DC0")]
		public float SkyColorHeight;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053DD8", Offset = "0x1053DD8")]
		public float SkyColorFade;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053DF0", Offset = "0x1053DF0")]
		public float SkyFogHeight;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053E08", Offset = "0x1053E08")]
		public float SkyFogFade;

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x10F44B8", Offset = "0x10F44B8", VA = "0x10F44B8")]
		[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x105AD7C", Offset = "0x105AD7C")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x105AD7C", Offset = "0x105AD7C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AD7C", Offset = "0x105AD7C")]
		public void SaveGradient()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x10F4738", Offset = "0x10F4738", VA = "0x10F4738")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x10F433C", Offset = "0x10F433C", VA = "0x10F433C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AE0C", Offset = "0x105AE0C")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x105AE0C", Offset = "0x105AE0C")]
		public void RefreshShader()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x10F4764", Offset = "0x10F4764", VA = "0x10F4764")]
		public SceneSettingsData()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class SetPistolHoldPointRotation : MonoBehaviour
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 localRotation;

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x10FA9BC", Offset = "0x10FA9BC", VA = "0x10FA9BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x10FAA6C", Offset = "0x10FAA6C", VA = "0x10FAA6C")]
		public SetPistolHoldPointRotation()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class Shield : BaseWeapon, IIgnoreDamageOnContact, GE.WeaponConfigurator.IDeflective
	{
		[Serializable]
		[Token(Token = "0x20002A4")]
		public struct EnergyLevelAction
		{
			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int EnergyTreashold;

			[Token(Token = "0x4000DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject ParticlePrefab;

			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> levelGameObjects;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BaseEffect BaseEffect;
		}

		[Serializable]
		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C594", Offset = "0x104C594")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__30_1;

			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<EnergyLevelAction> <>9__30_0;

			[Token(Token = "0x4000DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<GameObject> <>9__36_1;

			[Token(Token = "0x4000DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<GameObject> <>9__36_2;

			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x10FC908", Offset = "0x10FC908", VA = "0x10FC908")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x10FC910", Offset = "0x10FC910", VA = "0x10FC910")]
			internal void <Awake>b__30_0(EnergyLevelAction action)
			{
			}

			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x10FCA08", Offset = "0x10FCA08", VA = "0x10FCA08")]
			internal void <Awake>b__30_1(GameObject o)
			{
			}

			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x10FCA28", Offset = "0x10FCA28", VA = "0x10FCA28")]
			internal void <CheckLevelThresholdAndEmit>b__36_1(GameObject levelObject)
			{
			}

			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x10FCAB8", Offset = "0x10FCAB8", VA = "0x10FCAB8")]
			internal void <CheckLevelThresholdAndEmit>b__36_2(GameObject levelObject)
			{
			}
		}

		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C5A4", Offset = "0x104C5A4")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4000DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Shield <>4__this;

			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EnergyLevelAction energyLevel;

			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x10FBBB0", Offset = "0x10FBBB0", VA = "0x10FBBB0")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x10FCAD8", Offset = "0x10FCAD8", VA = "0x10FCAD8")]
			internal void <CheckLevelThresholdAndEmit>b__0(EnergyLevelAction levelAction)
			{
			}
		}

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EnergyLevel;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GEUnit owner;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShieldData ShieldProfile;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053E20", Offset = "0x1053E20")]
		public float energy;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float energyLossPerBullet;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool canReflectShots;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool autoShoot;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer meshRenderer;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ParticleSystem ParticleSystem;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Gradient colorGradient;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Gradient damageGradient;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float damageDuration;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxActiveTime;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float mineActivationTime;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float animationSpeed;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ReflectiveType ReflectiveType;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float regenerationSpeed;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float timeLossPerHit;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[ReadOnly]
		public bool isActive;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[ReadOnly]
		public float currentEnergy;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[ReadOnly]
		private float currentAnimation;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[ReadOnly]
		[SerializeField]
		private float targetAnimation;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Animator energyAnimator;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<EnergyLevelAction> _energyLevelActions;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public GameObject DefaultParticlePrefab;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AssetInfoTag deflectInfoTag;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private EnergyLevelAction curEnergyLevelAction;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool hasEnergy;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool isShooting;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float lastHitTimestamp;

		[Token(Token = "0x14000027")]
		public event Action<Rigidbody> OnReflect
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x10FBBB8", Offset = "0x10FBBB8", VA = "0x10FBBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AE68", Offset = "0x105AE68")]
			add
			{
			}
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x10FBC5C", Offset = "0x10FBC5C", VA = "0x10FBC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AE78", Offset = "0x105AE78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<float> OnAnimate
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x10FBD00", Offset = "0x10FBD00", VA = "0x10FBD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AE88", Offset = "0x105AE88")]
			add
			{
			}
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x10FBDA4", Offset = "0x10FBDA4", VA = "0x10FBDA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AE98", Offset = "0x105AE98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<float> OnDeteriorate
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x10FBE48", Offset = "0x10FBE48", VA = "0x10FBE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AEA8", Offset = "0x105AEA8")]
			add
			{
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x10FBEEC", Offset = "0x10FBEEC", VA = "0x10FBEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AEB8", Offset = "0x105AEB8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action OnActivate
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x10FBF90", Offset = "0x10FBF90", VA = "0x10FBF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AEC8", Offset = "0x105AEC8")]
			add
			{
			}
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x10FC034", Offset = "0x10FC034", VA = "0x10FC034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AED8", Offset = "0x105AED8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action OnDeactivate
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x10FC0D8", Offset = "0x10FC0D8", VA = "0x10FC0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AEE8", Offset = "0x105AEE8")]
			add
			{
			}
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x10FC17C", Offset = "0x10FC17C", VA = "0x10FC17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AEF8", Offset = "0x105AEF8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action OnStartActivation
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x10FC220", Offset = "0x10FC220", VA = "0x10FC220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF08", Offset = "0x105AF08")]
			add
			{
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x10FC2C8", Offset = "0x10FC2C8", VA = "0x10FC2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF18", Offset = "0x105AF18")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action OnStartDeactivation
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x10FC370", Offset = "0x10FC370", VA = "0x10FC370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF28", Offset = "0x105AF28")]
			add
			{
			}
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x10FC418", Offset = "0x10FC418", VA = "0x10FC418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF38", Offset = "0x105AF38")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action OnFailActivation
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x10FC4C0", Offset = "0x10FC4C0", VA = "0x10FC4C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF48", Offset = "0x105AF48")]
			add
			{
			}
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x10FC568", Offset = "0x10FC568", VA = "0x10FC568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF58", Offset = "0x105AF58")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x10FABF8", Offset = "0x10FABF8", VA = "0x10FABF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x10FADF0", Offset = "0x10FADF0", VA = "0x10FADF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x10FB6A0", Offset = "0x10FB6A0", VA = "0x10FB6A0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x10FBB9C", Offset = "0x10FBB9C", VA = "0x10FBB9C", Slot = "15")]
		public GEUnit GetGEUnit()
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x10FBBA4", Offset = "0x10FBBA4", VA = "0x10FBBA4", Slot = "16")]
		public void InformAboutDeflection()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x10FBBA8", Offset = "0x10FBBA8", VA = "0x10FBBA8", Slot = "17")]
		public ReflectiveType GetReflectionType()
		{
			return default(ReflectiveType);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x10FB30C", Offset = "0x10FB30C", VA = "0x10FB30C")]
		private void CheckLevelThresholdAndEmit()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x10FB098", Offset = "0x10FB098", VA = "0x10FB098")]
		private void UpdateVisualModel()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x10FC610", Offset = "0x10FC610", VA = "0x10FC610")]
		public void LoosSpecificEnergy(int energyLoss)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x10FBB54", Offset = "0x10FBB54", VA = "0x10FBB54")]
		private void LoseEnergy()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x10FC65C", Offset = "0x10FC65C", VA = "0x10FC65C", Slot = "4")]
		public override BaseBullet GetBullet()
		{
			return null;
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x10FC664", Offset = "0x10FC664", VA = "0x10FC664", Slot = "5")]
		public override bool IsReadyToShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x10FC66C", Offset = "0x10FC66C", VA = "0x10FC66C", Slot = "6")]
		public override void Shoot(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x10FC71C", Offset = "0x10FC71C", VA = "0x10FC71C", Slot = "7")]
		public override Vector3 GetCurrentShotDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x10FC740", Offset = "0x10FC740", VA = "0x10FC740", Slot = "8")]
		public override bool RequiresRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x10FAD04", Offset = "0x10FAD04", VA = "0x10FAD04")]
		private void SetShieldActive(bool val)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x10FC748", Offset = "0x10FC748", VA = "0x10FC748", Slot = "9")]
		public override void Release()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x10FB070", Offset = "0x10FB070", VA = "0x10FB070")]
		private void DeactivateShield()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x10FC6D0", Offset = "0x10FC6D0", VA = "0x10FC6D0")]
		private void ActivateShield()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x10FC708", Offset = "0x10FC708", VA = "0x10FC708")]
		private void FailActivateShield()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x10FC774", Offset = "0x10FC774", VA = "0x10FC774", Slot = "10")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x10FC778", Offset = "0x10FC778", VA = "0x10FC778", Slot = "12")]
		public override float GetRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x10FC784", Offset = "0x10FC784", VA = "0x10FC784", Slot = "13")]
		public override Transform GetShotSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x10FC78C", Offset = "0x10FC78C", VA = "0x10FC78C", Slot = "14")]
		public override float GetNoiseRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x10FC794", Offset = "0x10FC794", VA = "0x10FC794")]
		public Shield()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class ShieldAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit Unit;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shield Shield;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform SpawnPoint;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float shieldDistance;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053FD0", Offset = "0x1053FD0")]
		private bool <IsAttacking>k__BackingField;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shield shield;

		[Token(Token = "0x17000140")]
		public bool IsAttacking
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x10FCB10", Offset = "0x10FCB10", VA = "0x10FCB10", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF68", Offset = "0x105AF68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x10FCB18", Offset = "0x10FCB18", VA = "0x10FCB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AF78", Offset = "0x105AF78")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool AutoAttack
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x10FCB24", Offset = "0x10FCB24", VA = "0x10FCB24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool BurstAttack
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x10FCB2C", Offset = "0x10FCB2C", VA = "0x10FCB2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x10FCB34", Offset = "0x10FCB34", VA = "0x10FCB34", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x10FCCF0", Offset = "0x10FCCF0", VA = "0x10FCCF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x10FCDF0", Offset = "0x10FCDF0", VA = "0x10FCDF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x10FCF1C", Offset = "0x10FCF1C", VA = "0x10FCF1C")]
		private void Health_OnDeath()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x10FCBA8", Offset = "0x10FCBA8", VA = "0x10FCBA8", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x10FCFE8", Offset = "0x10FCFE8", VA = "0x10FCFE8", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x10FD11C", Offset = "0x10FD11C", VA = "0x10FD11C", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x10FD17C", Offset = "0x10FD17C", VA = "0x10FD17C", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x10FD184", Offset = "0x10FD184", VA = "0x10FD184", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x10FD188", Offset = "0x10FD188", VA = "0x10FD188", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x10FD190", Offset = "0x10FD190", VA = "0x10FD190")]
		public ShieldAttack()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class SpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform body;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform a;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform midPoint;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform b;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform endPoint;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform targetEndPoint;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float legSmoothing;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float legSpeed;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RagdollBoneLink ragdollBoneLink;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lerpedEndPoint;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion lerpedEndRotation;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 lerpedVelocity;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion deriv;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform helperVisualizer;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public float angle;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float offsetY;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool setLength;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform hip;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool isReversed;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float reverseSpeed;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float isReversedVal;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion initialLocalRotation;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 movementDirection;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool firstUpdate;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 cross;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x10FF828", Offset = "0x10FF828", VA = "0x10FF828")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AF88", Offset = "0x105AF88")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x10FF8FC", Offset = "0x10FF8FC", VA = "0x10FF8FC")]
		internal bool IsOnItsFeet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x10FF910", Offset = "0x10FF910", VA = "0x10FF910")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x10FFA84", Offset = "0x10FFA84", VA = "0x10FFA84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x10FFB5C", Offset = "0x10FFB5C", VA = "0x10FFB5C")]
		private void RagdollBoneLink_OnRagdollEnable(bool val, Vector3 force)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x10FFB6C", Offset = "0x10FFB6C", VA = "0x10FFB6C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x10FFFCC", Offset = "0x10FFFCC", VA = "0x10FFFCC")]
		private void Calculate(out Vector3 currentMidPoint, out Vector3 targetBPoint, out Vector3 currentUp, out Vector3 currentSidewards, bool reverse = false)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1100428", Offset = "0x1100428", VA = "0x1100428")]
		private bool LerpTowardsTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x10FF120", Offset = "0x10FF120", VA = "0x10FF120")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AF98", Offset = "0x105AF98")]
		public Vector3 UpdateLeg()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1100710", Offset = "0x1100710", VA = "0x1100710")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x11008F0", Offset = "0x11008F0", VA = "0x11008F0")]
		public SpiderLeg()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class LevelTime : MonoBehaviour
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float overseerArrivalTime;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float levelTime;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LevelTime instance;

		[Token(Token = "0x17000143")]
		public float OverseerApproachTime
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x1109688", Offset = "0x1109688", VA = "0x1109688")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1109704", Offset = "0x1109704", VA = "0x1109704")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1109758", Offset = "0x1109758", VA = "0x1109758")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1109790", Offset = "0x1109790", VA = "0x1109790")]
		public LevelTime()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class AutomaticTileSet : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		public class Tile
		{
			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Int pos;

			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x10C948C", Offset = "0x10C948C", VA = "0x10C948C")]
			public Tile(Vector3Int pos)
			{
			}

			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x10C6D54", Offset = "0x10C6D54", VA = "0x10C6D54")]
			public Tile(int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x20002AC")]
		public class Connection
		{
			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 pos;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 forward;

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x10C8F80", Offset = "0x10C8F80", VA = "0x10C8F80")]
			public Connection(Vector3 pos, Vector3 forward)
			{
			}
		}

		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C5B4", Offset = "0x104C5B4")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 centerPoint;

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x10C8F70", Offset = "0x10C8F70", VA = "0x10C8F70")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x10C91F0", Offset = "0x10C91F0", VA = "0x10C91F0")]
			internal bool <CreateTile>b__0(Connection endPoint)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x10C92BC", Offset = "0x10C92BC", VA = "0x10C92BC")]
			internal int <CreateTile>b__1(Connection o)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C5C4", Offset = "0x104C5C4")]
		private sealed class <>c__DisplayClass13_1
		{
			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Int relPos;

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x10C8F78", Offset = "0x10C8F78", VA = "0x10C8F78")]
			public <>c__DisplayClass13_1()
			{
			}

			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x10C93EC", Offset = "0x10C93EC", VA = "0x10C93EC")]
			internal bool <CreateTile>b__2(Tile t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawSpheres;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool autoCreateCompleteListOfCombinations;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelBuilder levelBuilder;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LevelTile tile;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3Int gridPos;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Vector3Int, AutomaticTileSet> positionDict;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Vector3Int> tiles;

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x10C67D0", Offset = "0x10C67D0", VA = "0x10C67D0")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105AFA8", Offset = "0x105AFA8")]
		public void UpdateTiles()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x10C6AF0", Offset = "0x10C6AF0", VA = "0x10C6AF0")]
		public void UpdateTile()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x10C8CB0", Offset = "0x10C8CB0", VA = "0x10C8CB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x10C6DC4", Offset = "0x10C6DC4", VA = "0x10C6DC4")]
		private void CreateTile(List<Tile> combination, Vector3 offset)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x10C8FE0", Offset = "0x10C8FE0", VA = "0x10C8FE0")]
		private void AddConnection(List<Connection> connectionList, Connection connection)
		{
		}

		[Token(Token = "0x6000CEE")]
		public static List<List<T>> GetAllCombos<T>(List<T> list)
		{
			return null;
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x10C910C", Offset = "0x10C910C", VA = "0x10C910C")]
		public AutomaticTileSet()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class InGameInfo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B0")]
		public class Info
		{
			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string infoKey;

			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LString title;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LString description;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public TutorialPoint tutorialPrefab;

			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool isActive;

			[Token(Token = "0x4000E10")]
			private const string tutorialKey = "Tutorial_";

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TutorialPoint tutorialPoint;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action InitializeAction;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action FinishAction;

			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action<IPickable> PickableCallback1;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<IPickable> PickableCallback2;

			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x112ED00", Offset = "0x112ED00", VA = "0x112ED00")]
			public void SetUp()
			{
			}

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x112EF74", Offset = "0x112EF74", VA = "0x112EF74")]
			public void Show()
			{
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x112F128", Offset = "0x112F128", VA = "0x112F128")]
			public bool IsFinished()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x112F078", Offset = "0x112F078", VA = "0x112F078")]
			public void Finish()
			{
			}

			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x112F1B0", Offset = "0x112F1B0", VA = "0x112F1B0")]
			public Info()
			{
			}
		}

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialPoint tutorialPrefab;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand leftHand;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHand rightHand;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExtendedInventorySlot backSlot;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Info twoHandedHolster;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Info> inGameInfos;

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x112EAB8", Offset = "0x112EAB8", VA = "0x112EAB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x112EBBC", Offset = "0x112EBBC", VA = "0x112EBBC")]
		private void SetUpTwoHandedHolster()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x112ED40", Offset = "0x112ED40", VA = "0x112ED40")]
		public InGameInfo()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x112EDB0", Offset = "0x112EDB0", VA = "0x112EDB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AFB8", Offset = "0x105AFB8")]
		private void <SetUpTwoHandedHolster>b__8_0()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x112EE20", Offset = "0x112EE20", VA = "0x112EE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AFC8", Offset = "0x105AFC8")]
		private void <SetUpTwoHandedHolster>b__8_1()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x112EE90", Offset = "0x112EE90", VA = "0x112EE90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AFD8", Offset = "0x105AFD8")]
		private void <SetUpTwoHandedHolster>b__8_2(IPickable pickable)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x112F060", Offset = "0x112F060", VA = "0x112F060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AFE8", Offset = "0x105AFE8")]
		private void <SetUpTwoHandedHolster>b__8_3(IPickable pickable)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class TutorialChip : MonoBehaviour
	{
		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject po;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform target;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _rightHandHint;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _leftHandHint;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _useParticles;

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x10D8B94", Offset = "0x10D8B94", VA = "0x10D8B94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x10D8CD4", Offset = "0x10D8CD4", VA = "0x10D8CD4")]
		private void Po_OnRelease(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x10D8D34", Offset = "0x10D8D34", VA = "0x10D8D34")]
		private void Po_OnVisualModelUpdated()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x10D8E94", Offset = "0x10D8E94", VA = "0x10D8E94")]
		private void Po_OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x10D9038", Offset = "0x10D9038", VA = "0x10D9038")]
		public TutorialChip()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class TutorialHandgun : MonoBehaviour
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _minHoldTime;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PickableObject _pickableObject;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpecialInventoryItem _inventoryItem;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AssetSpecialInventoryItem> _types;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _pickUpLocation;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _pickUpDuration;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x10D9040", Offset = "0x10D9040", VA = "0x10D9040")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x10D919C", Offset = "0x10D919C", VA = "0x10D919C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x10D9238", Offset = "0x10D9238", VA = "0x10D9238")]
		private void PickableObject_OnRelease(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x10D9330", Offset = "0x10D9330", VA = "0x10D9330")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x10D9408", Offset = "0x10D9408", VA = "0x10D9408")]
		public TutorialHandgun()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class TutorialPoint : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float viewDistance;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject container;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TutorialPoint previousTutorial;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LocalisationText titleLabel;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LocalisationText descriptionLabel;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private List<IAction> _startedActions;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool placeOnTargetPosition;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool setYToZero;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform targetTransform;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool rotateTowardsPlayer;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float smoothTime;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float appearanceDelay;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool requireHandsFree;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float verticalRotationSpeed;

		[Token(Token = "0x4000E30")]
		private const float fadeInDuration = 0.3f;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float finishedTimestamp;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LineRenderer lineRendererConnection;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LineRenderer lineRendererUnderscore;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float targetTransparency;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float currentTransparency;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isFinished;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool hasStarted;

		[Token(Token = "0x17000144")]
		protected VRMovement movement
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x10D9480", Offset = "0x10D9480", VA = "0x10D9480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		protected PlayerHand leftHand
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x10D9618", Offset = "0x10D9618", VA = "0x10D9618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		protected PlayerHand rightHand
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x10D967C", Offset = "0x10D967C", VA = "0x10D967C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action OnTutorialPointFinished
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x10D94D0", Offset = "0x10D94D0", VA = "0x10D94D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AFF8", Offset = "0x105AFF8")]
			add
			{
			}
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x10D9574", Offset = "0x10D9574", VA = "0x10D9574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B008", Offset = "0x105B008")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x10D96E0", Offset = "0x10D96E0", VA = "0x10D96E0")]
		public void SetTitle(LocalizationData text)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x10D96FC", Offset = "0x10D96FC", VA = "0x10D96FC")]
		public void SetDescription(LocalizationData text)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x10D9718", Offset = "0x10D9718", VA = "0x10D9718", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x10D9888", Offset = "0x10D9888", VA = "0x10D9888")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x10D98F4", Offset = "0x10D98F4", VA = "0x10D98F4", Slot = "11")]
		public virtual bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x10D98FC", Offset = "0x10D98FC", VA = "0x10D98FC", Slot = "12")]
		public virtual bool Started()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x10D99FC", Offset = "0x10D99FC", VA = "0x10D99FC", Slot = "13")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x10DA308", Offset = "0x10DA308", VA = "0x10DA308")]
		public TutorialPoint()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class TutorialPointGrenade : TutorialPoint
	{
		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PickableObject grenade;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool hasFinished;

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x10DA394", Offset = "0x10DA394", VA = "0x10DA394")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x10DA420", Offset = "0x10DA420", VA = "0x10DA420")]
		private void ShootWeapon_OnShoot()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x10DA45C", Offset = "0x10DA45C", VA = "0x10DA45C", Slot = "11")]
		public override bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x10DA464", Offset = "0x10DA464", VA = "0x10DA464", Slot = "12")]
		public override bool Started()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x10DA480", Offset = "0x10DA480", VA = "0x10DA480")]
		public TutorialPointGrenade()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class TutorialPointPickUp : TutorialPoint
	{
		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool hasBeenPickedUp;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x10DA484", Offset = "0x10DA484", VA = "0x10DA484")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x10DA55C", Offset = "0x10DA55C", VA = "0x10DA55C")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x10DA598", Offset = "0x10DA598", VA = "0x10DA598", Slot = "11")]
		public override bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x10DA5A0", Offset = "0x10DA5A0", VA = "0x10DA5A0")]
		public TutorialPointPickUp()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class VerticalSliceSelection : MonoBehaviour
	{
		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PickableObject> pickableWeapons;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PickableObject> pickableChips;

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x10E1B64", Offset = "0x10E1B64", VA = "0x10E1B64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x10E1B68", Offset = "0x10E1B68", VA = "0x10E1B68")]
		public VerticalSliceSelection()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class CityPoster : MonoBehaviour
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> mapPoints;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer map;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite[] districtMapSprites;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] districtMapTitles;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform dot;

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x10D0694", Offset = "0x10D0694", VA = "0x10D0694")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x10D0864", Offset = "0x10D0864", VA = "0x10D0864")]
		public CityPoster()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class DebugPinboard : MonoBehaviour
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugPinboard instance;

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x11321FC", Offset = "0x11321FC", VA = "0x11321FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x1132250", Offset = "0x1132250", VA = "0x1132250")]
		public void SetInfo(string info)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1132274", Offset = "0x1132274", VA = "0x1132274")]
		public DebugPinboard()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class ExclamationMark : MonoBehaviour
	{
		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject outrageIcon;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image interior;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AssetBehaviourType> activeBehaviours;

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1141F48", Offset = "0x1141F48", VA = "0x1141F48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1142110", Offset = "0x1142110", VA = "0x1142110")]
		public ExclamationMark()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class PeacemakerLeaderboardEntry : UILeaderboardEntry
	{
		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text GearsLabel;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text DateLabel;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public float value;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LeaderboardBaseData dailyRunKey;

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1110638", Offset = "0x1110638", VA = "0x1110638", Slot = "4")]
		public override void SetUp(GE.SocialFeatures.LeaderboardEntry entry, LeaderboardBaseData profile)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x111086C", Offset = "0x111086C", VA = "0x111086C")]
		public PeacemakerLeaderboardEntry()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class ShowHoverHighlightObject : MonoBehaviour
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand hand;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject obj;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform head;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offset;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<IPickable> currentHovers;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x10FD84C", Offset = "0x10FD84C", VA = "0x10FD84C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x10FD904", Offset = "0x10FD904", VA = "0x10FD904")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x10FDBB4", Offset = "0x10FDBB4", VA = "0x10FDBB4")]
		private void Hand_OnHover(IPickable pickable, bool val)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x10FDCD8", Offset = "0x10FDCD8", VA = "0x10FDCD8")]
		public ShowHoverHighlightObject()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class UIHealthbar : MonoBehaviour
	{
		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x10DDED4", Offset = "0x10DDED4", VA = "0x10DDED4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x10DDF54", Offset = "0x10DDF54", VA = "0x10DDF54")]
		public UIHealthbar()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class UIMarker : MonoBehaviour
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Marker;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x10DDF5C", Offset = "0x10DDF5C", VA = "0x10DDF5C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x10DE10C", Offset = "0x10DE10C", VA = "0x10DE10C")]
		public UIMarker()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class UIProfiler : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Profiler Profiler;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ProfilerData Profil;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054070", Offset = "0x1054070")]
		public Text Mesh;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text MeshPerc;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10540A8", Offset = "0x10540A8")]
		public Text Vertex;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text VertexPerc;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10540E0", Offset = "0x10540E0")]
		public Text Material;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Text MaterialPerc;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054118", Offset = "0x1054118")]
		public Text Collider;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Text ColliderPerc;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x10DE11C", Offset = "0x10DE11C", VA = "0x10DE11C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x10DE120", Offset = "0x10DE120", VA = "0x10DE120")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x10DE504", Offset = "0x10DE504", VA = "0x10DE504")]
		private float GetPerc(int value, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x10DE520", Offset = "0x10DE520", VA = "0x10DE520")]
		private Color GetColor(int value, int max)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x10DE558", Offset = "0x10DE558", VA = "0x10DE558")]
		public UIProfiler()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class VRPointer : MonoBehaviour
	{
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUILaserBeam Laserbeam;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetVRInputDeviceGroup LeftDevice;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetVRInputDeviceGroup RightDevice;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Child;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftParent;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RightParent;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetVRInputDeviceGroup currDevice;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isButtonPressed;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isButtonDown;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool isLeftPressed;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool isRightPressed;

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x10E1794", Offset = "0x10E1794", VA = "0x10E1794")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x10E17A0", Offset = "0x10E17A0", VA = "0x10E17A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x10E1B5C", Offset = "0x10E1B5C", VA = "0x10E1B5C")]
		public VRPointer()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class CheckLeaderboardForSpecificUsers : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C1")]
		public class Entry
		{
			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string username;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LeaderboardData leaderboard;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int value;

			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x10D042C", Offset = "0x10D042C", VA = "0x10D042C")]
			public Entry()
			{
			}
		}

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Entry> entries;

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x10CFED0", Offset = "0x10CFED0", VA = "0x10CFED0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x10CFF78", Offset = "0x10CFF78", VA = "0x10CFF78")]
		private void OnReceiveUsername(Message<User> message)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x10D03BC", Offset = "0x10D03BC", VA = "0x10D03BC")]
		public CheckLeaderboardForSpecificUsers()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class CycleThroughGameObjects : MonoBehaviour
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetVRInputDeviceGroup inputDevice;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> list;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int iterator;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera editorCamera;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera buildCamera;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject currentCopy;

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x10D5D30", Offset = "0x10D5D30", VA = "0x10D5D30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x10D5E6C", Offset = "0x10D5E6C", VA = "0x10D5E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x10D6038", Offset = "0x10D6038", VA = "0x10D6038")]
		public CycleThroughGameObjects()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class DestroyIfNotDemoBuild : MonoBehaviour
	{
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1134E7C", Offset = "0x1134E7C", VA = "0x1134E7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1134EF8", Offset = "0x1134EF8", VA = "0x1134EF8")]
		public DestroyIfNotDemoBuild()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class DestroyIfNotDeveloperBuild : MonoBehaviour
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1134F00", Offset = "0x1134F00", VA = "0x1134F00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1134F7C", Offset = "0x1134F7C", VA = "0x1134F7C")]
		public DestroyIfNotDeveloperBuild()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C5D4", Offset = "0x104C5D4")]
	public class FaceCamera : MonoBehaviour
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x111DD04", Offset = "0x111DD04", VA = "0x111DD04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x111DD98", Offset = "0x111DD98", VA = "0x111DD98")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x111DE28", Offset = "0x111DE28", VA = "0x111DE28")]
		public FaceCamera()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public static class Layers
	{
		[Token(Token = "0x4000E76")]
		public const int Default = 0;

		[Token(Token = "0x4000E77")]
		public const int Environment = 14;

		[Token(Token = "0x4000E78")]
		public const int Decoration = 17;

		[Token(Token = "0x4000E79")]
		public const int CollideWithEnvironmentOnly = 21;
	}
	[Token(Token = "0x20002C7")]
	public class LogCollisions : MonoBehaviour
	{
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x110B2D0", Offset = "0x110B2D0", VA = "0x110B2D0")]
		public LogCollisions()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class PropTester : MonoBehaviour
	{
		[Token(Token = "0x20002C9")]
		public class TransformCheck
		{
			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 pos;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4000E81")]
			private const float posMargin = 0.1f;

			[Token(Token = "0x4000E82")]
			private const float rotMargin = 5f;

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x1115A80", Offset = "0x1115A80", VA = "0x1115A80")]
			public TransformCheck(Transform transform, Vector3 pos, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x1115AF8", Offset = "0x1115AF8", VA = "0x1115AF8")]
			public bool StillInCorrectPosition()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C5E8", Offset = "0x104C5E8")]
		private sealed class <DoTest>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D58")]
				[Address(RVA = "0x1115A10", Offset = "0x1115A10", VA = "0x1115A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5A")]
				[Address(RVA = "0x1115A78", Offset = "0x1115A78", VA = "0x1115A78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x1115998", Offset = "0x1115998", VA = "0x1115998")]
			[DebuggerHidden]
			public <DoTest>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x11159D8", Offset = "0x11159D8", VA = "0x11159D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x11159DC", Offset = "0x11159DC", VA = "0x11159DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x1115A18", Offset = "0x1115A18", VA = "0x1115A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waitTime;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numInstancesPerObject;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onlyTestMovingObjects;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<DecorationData> decorationData;

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x11156F4", Offset = "0x11156F4", VA = "0x11156F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1115780", Offset = "0x1115780", VA = "0x1115780")]
		public static Bounds GetCombinedBoundingBoxOfChildren(Transform root)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1115720", Offset = "0x1115720", VA = "0x1115720")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B018", Offset = "0x105B018")]
		private IEnumerator DoTest()
		{
			return null;
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x11159C4", Offset = "0x11159C4", VA = "0x11159C4")]
		public PropTester()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class ActiveOnPlayerPickUp : MonoBehaviour
	{
		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject Pickable;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054150", Offset = "0x1054150")]
		public List<GameObject> activateGameObjects;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054188", Offset = "0x1054188")]
		public List<GameObject> deactivateGameObjects;

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x11DED10", Offset = "0x11DED10", VA = "0x11DED10")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x11DED68", Offset = "0x11DED68", VA = "0x11DED68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x11DF090", Offset = "0x11DF090", VA = "0x11DF090")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x11DF168", Offset = "0x11DF168", VA = "0x11DF168")]
		private void OnPickup(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x11DF204", Offset = "0x11DF204", VA = "0x11DF204")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x11DEE4C", Offset = "0x11DEE4C", VA = "0x11DEE4C")]
		private void SetGameObjects(bool status)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x11DF2A0", Offset = "0x11DF2A0", VA = "0x11DF2A0")]
		public ActiveOnPlayerPickUp()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104C5F8", Offset = "0x104C5F8")]
	public class AdditionalMeleeDamage : GenericEventEmitter
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C65C", Offset = "0x104C65C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AdditionalMeleeDamage <>4__this;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AttackInfo attackInfo;

			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x11DFAB8", Offset = "0x11DFAB8", VA = "0x11DFAB8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000D68")]
			[Address(RVA = "0x11DFB44", Offset = "0x11DFB44", VA = "0x11DFB44")]
			internal void <OnAdditionalDamage>b__0(IAttackAction action)
			{
			}
		}

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Shield shield;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int attackEnergyCost;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BaseEffect additionalDamageEffect;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BaseEffect _defaultEffect;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeleeDamage meleeDamage;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool AddEffectOnTrigger;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<IAttackAction> AttackActions;

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x11DF71C", Offset = "0x11DF71C", VA = "0x11DF71C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x11DF774", Offset = "0x11DF774", VA = "0x11DF774", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x11DF8A0", Offset = "0x11DF8A0", VA = "0x11DF8A0")]
		private void OnAdditionalDamage(GEUnit targetUnit)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x11DFAC0", Offset = "0x11DFAC0", VA = "0x11DFAC0")]
		public void ResetToBaseEffect()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x11DFACC", Offset = "0x11DFACC", VA = "0x11DFACC")]
		public AdditionalMeleeDamage()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class Boomerang : MonoBehaviour
	{
		[Token(Token = "0x20002CF")]
		public enum ReturnType
		{
			[Token(Token = "0x4000E9F")]
			ReturnToThrowPosition,
			[Token(Token = "0x4000EA0")]
			ReturnToThrowingHand
		}

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeBeforeReturn;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float returnSpeed;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minFlySpeed;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speedMultiplicator;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float stopReturnThreshold;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ReturnType returnType;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject explosionPrefab;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform pickingHand;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LayerMask fallDownLayer;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float releaseTimestamp;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 throwPosition;

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x10CACB8", Offset = "0x10CACB8", VA = "0x10CACB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x10CADEC", Offset = "0x10CADEC", VA = "0x10CADEC")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x10CAEB0", Offset = "0x10CAEB0", VA = "0x10CAEB0")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x10CADB0", Offset = "0x10CADB0", VA = "0x10CADB0")]
		private void Disable()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x10CAFE8", Offset = "0x10CAFE8", VA = "0x10CAFE8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x10CB190", Offset = "0x10CB190", VA = "0x10CB190")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x10CB3F0", Offset = "0x10CB3F0", VA = "0x10CB3F0")]
		public Boomerang()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class ChangeWeaponOnPlayerPickUp : MonoBehaviour
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10541F0", Offset = "0x10541F0")]
		public PickableObject Pickable;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponData weaponProfile;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Weapon weapon;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054228", Offset = "0x1054228")]
		public List<GameObject> activateGameObjects;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> deactivateGameObjects;

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x10CF874", Offset = "0x10CF874", VA = "0x10CF874")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x10CF8CC", Offset = "0x10CF8CC", VA = "0x10CF8CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x10CFC44", Offset = "0x10CFC44", VA = "0x10CFC44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x10CFD28", Offset = "0x10CFD28", VA = "0x10CFD28")]
		private void OnPickup(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x10CFE2C", Offset = "0x10CFE2C", VA = "0x10CFE2C")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x10CFA08", Offset = "0x10CFA08", VA = "0x10CFA08")]
		private void SetGameObjects(bool status)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x10CFEC8", Offset = "0x10CFEC8", VA = "0x10CFEC8")]
		public ChangeWeaponOnPlayerPickUp()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class CreateEnemyPrefabs : MonoBehaviour
	{
		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance unitDataInstance;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStatusbarMesh healthDisplayPrefab;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIAggroMesh aggroDisplayPrefab;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlobShadow blobShadowPrefab;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AIBehaviourManager aiBehaviourManager;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 healthDisplayOffset;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 aggroDisplayOffset;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float BlobShadowDistance;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x10D4134", Offset = "0x10D4134", VA = "0x10D4134")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x10D41A4", Offset = "0x10D41A4", VA = "0x10D41A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x10D44A0", Offset = "0x10D44A0", VA = "0x10D44A0")]
		public CreateEnemyPrefabs()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C66C", Offset = "0x104C66C")]
	public class CreateWeaponForRobot : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D3")]
		public class UpgradeProbability
		{
			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UpgradeData upgradeData;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float probability;

			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x10D5544", Offset = "0x10D5544", VA = "0x10D5544")]
			public UpgradeProbability()
			{
			}
		}

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance unitDataInstance;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatedMovement movement;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BaseAttack robotAttack;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform weaponHoldPoint;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform secondaryWeaponHoldPoint;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<UpgradeData> upgrades;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AssetContentPool upgradeContentPool;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RequiredAttribute", RVA = "0x1054260", Offset = "0x1054260")]
		public CapsuleCollider movementCollider;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool canLoseWeapon;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool telegraphLaserPointer;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LayerMask ignoreBulletsLayer;

		[Token(Token = "0x17000149")]
		private UnitData unitData
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x10D4654", Offset = "0x10D4654", VA = "0x10D4654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x10D4670", Offset = "0x10D4670", VA = "0x10D4670")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x10D54CC", Offset = "0x10D54CC", VA = "0x10D54CC")]
		public CreateWeaponForRobot()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class DamageEnemy : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D5")]
		public class Damage
		{
			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float probability;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<RagdollBoneLink> damagableBoneLinks;

			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x1131ACC", Offset = "0x1131ACC", VA = "0x1131ACC")]
			public Damage()
			{
			}
		}

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance unitDataInstance;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Damage> damages;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x10D60A8", Offset = "0x10D60A8", VA = "0x10D60A8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x10D6364", Offset = "0x10D6364", VA = "0x10D6364")]
		public DamageEnemy()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class DeployableZipLine : MonoBehaviour
	{
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C680", Offset = "0x104C680")]
		private sealed class <DoHandleShot>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponBullet bullet;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DeployableZipLine <>4__this;

			[Token(Token = "0x1700014A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D89")]
				[Address(RVA = "0x1134E04", Offset = "0x1134E04", VA = "0x1134E04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D8B")]
				[Address(RVA = "0x1134E6C", Offset = "0x1134E6C", VA = "0x1134E6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x1134770", Offset = "0x1134770", VA = "0x1134770")]
			[DebuggerHidden]
			public <DoHandleShot>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x11348DC", Offset = "0x11348DC", VA = "0x11348DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x11348E0", Offset = "0x11348E0", VA = "0x11348E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x1134E0C", Offset = "0x1134E0C", VA = "0x1134E0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon weapon;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZipLine zipLinePrefab;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask allowedLayerMask;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform a;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform b;

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1134634", Offset = "0x1134634", VA = "0x1134634")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x11346C8", Offset = "0x11346C8", VA = "0x11346C8")]
		private void Weapon_OnShotFired(WeaponBullet bullet)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x11346F4", Offset = "0x11346F4", VA = "0x11346F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B0CC", Offset = "0x105B0CC")]
		private IEnumerator DoHandleShot(WeaponBullet bullet)
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x113479C", Offset = "0x113479C", VA = "0x113479C")]
		private void DeployZipLine()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x11348D4", Offset = "0x11348D4", VA = "0x11348D4")]
		public DeployableZipLine()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C690", Offset = "0x104C690")]
	public class GrapplingHook : SerializedMonoBehaviour
	{
		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C6A4", Offset = "0x104C6A4")]
		private sealed class <DoMove>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponBullet bullet;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GrapplingHook <>4__this;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <targetPosition>5__2;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <movement>5__3;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <relativeStartPosition>5__4;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 <relativeStartForward>5__5;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody <kinematicRigidbody>5__6;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Rigidbody <nonKinematicRigidbody>5__7;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <prevFallDelay>5__8;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <timeSinceBackwardsStart>5__9;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool <validArrow>5__10;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private FallDownBehaviour <fallDownBehaviour>5__11;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private bool <hasClaimedLock>5__12;

			[Token(Token = "0x1700014C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D9A")]
				[Address(RVA = "0x112686C", Offset = "0x112686C", VA = "0x112686C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D9C")]
				[Address(RVA = "0x11268D4", Offset = "0x11268D4", VA = "0x11268D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x1124FC0", Offset = "0x1124FC0", VA = "0x1124FC0")]
			[DebuggerHidden]
			public <DoMove>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x11251E8", Offset = "0x11251E8", VA = "0x11251E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x11251EC", Offset = "0x11251EC", VA = "0x11251EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x1126874", Offset = "0x1126874", VA = "0x1126874", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform weaponArrow;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Weapon weapon;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PickableObject pickable;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float speed;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float pullObjectsSpeed;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float pullObjectsSpeedKinematic;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float distanceThreshold;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float moveBackwardsDistance;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float arcDuration;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LayerMask layerMask;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[InlineProperty]
		public List<GenericEvent> reelInStartEvents;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[InlineProperty]
		public List<GenericEvent> reelInStopEvents;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<ISideAction> reelInStartEventsSide;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[InlineProperty]
		public List<GenericEvent> canHoldOntoObjectEvents;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[InlineProperty]
		public List<GenericEvent> stopHoldOntoObjectEvents;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float pullMassThreshold;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private VRMovement currentMovement;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10542B0", Offset = "0x10542B0")]
		public Transform bulletLineStart;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform bulletLineEnd;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public LineRenderer bulletLine;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool hasMovedHandBackwards;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform weaponArrowParent;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 weaponArrowLocalPosition;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 initialWeaponArrowLocalPosition;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Quaternion weaponArrowLocalRotation;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private HandleLoseWeapon currentHlw;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 movementBackwardsDirection;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float defaultGeneralMovementMultiplicator;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GrapplingHook currentLock;

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1124A5C", Offset = "0x1124A5C", VA = "0x1124A5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1124C2C", Offset = "0x1124C2C", VA = "0x1124C2C")]
		private void Pickable_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1124D40", Offset = "0x1124D40", VA = "0x1124D40")]
		private void Weapon_OnShotFired(WeaponBullet bullet)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1124DE8", Offset = "0x1124DE8", VA = "0x1124DE8")]
		private void Weapon_OnReleased()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1124E14", Offset = "0x1124E14", VA = "0x1124E14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1124D6C", Offset = "0x1124D6C", VA = "0x1124D6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B180", Offset = "0x105B180")]
		private IEnumerator DoMove(WeaponBullet bullet)
		{
			return null;
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1124FEC", Offset = "0x1124FEC", VA = "0x1124FEC")]
		public GrapplingHook()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1125020", Offset = "0x1125020", VA = "0x1125020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B1E4", Offset = "0x105B1E4")]
		private void <DoMove>b__35_1(GenericEvent e)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x112505C", Offset = "0x112505C", VA = "0x112505C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B1F4", Offset = "0x105B1F4")]
		private void <DoMove>b__35_2(ISideAction e)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x11251AC", Offset = "0x11251AC", VA = "0x11251AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B204", Offset = "0x105B204")]
		private void <DoMove>b__35_0(GenericEvent e)
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class GrapplingHookBoundingBox : MonoBehaviour
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 gridDimension;

		[Token(Token = "0x4000EF7")]
		private const float gridSize = 4f;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<GrapplingHookBoundingBox> instances;

		[Token(Token = "0x1700014E")]
		private Vector3 RotatedScale
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x1126A10", Offset = "0x1126A10", VA = "0x1126A10")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700014F")]
		private Vector3 CenterPoint
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x112693C", Offset = "0x112693C", VA = "0x112693C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x11268DC", Offset = "0x11268DC", VA = "0x11268DC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1126660", Offset = "0x1126660", VA = "0x1126660")]
		public static bool ContainsWorldPoint(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1126A48", Offset = "0x1126A48", VA = "0x1126A48")]
		private bool WithinCube(Vector3 cubePos, Vector3 cubeScale, Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1126B84", Offset = "0x1126B84", VA = "0x1126B84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x1126C08", Offset = "0x1126C08", VA = "0x1126C08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1126C8C", Offset = "0x1126C8C", VA = "0x1126C8C")]
		public GrapplingHookBoundingBox()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class JetPackGlove : BaseWeapon
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRMovement currentMovement;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FallDownBehaviour fallDownBehaviour;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float noiseRange;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastTimestamp;

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1130484", Offset = "0x1130484", VA = "0x1130484")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x1130518", Offset = "0x1130518", VA = "0x1130518")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x113062C", Offset = "0x113062C", VA = "0x113062C", Slot = "4")]
		public override BaseBullet GetBullet()
		{
			return null;
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1130634", Offset = "0x1130634", VA = "0x1130634", Slot = "5")]
		public override bool IsReadyToShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x113063C", Offset = "0x113063C", VA = "0x113063C", Slot = "10")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1130640", Offset = "0x1130640", VA = "0x1130640", Slot = "9")]
		public override void Release()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x11306D0", Offset = "0x11306D0", VA = "0x11306D0", Slot = "8")]
		public override bool RequiresRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x11306D8", Offset = "0x11306D8", VA = "0x11306D8", Slot = "6")]
		public override void Shoot(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x11308B4", Offset = "0x11308B4", VA = "0x11308B4", Slot = "7")]
		public override Vector3 GetCurrentShotDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x11308D8", Offset = "0x11308D8", VA = "0x11308D8", Slot = "12")]
		public override float GetRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x11308E4", Offset = "0x11308E4", VA = "0x11308E4", Slot = "13")]
		public override Transform GetShotSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x11308EC", Offset = "0x11308EC", VA = "0x11308EC", Slot = "14")]
		public override float GetNoiseRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x113092C", Offset = "0x113092C", VA = "0x113092C")]
		public JetPackGlove()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class OnCollisionWithAdditionalMeleeDamage : GenericEventEmitter
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AdditionalMeleeDamage additionalMeleeDamage;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10542E8", Offset = "0x10542E8")]
		public List<GenericCollisionEvent> DefaultImpactEvents;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<BaseEffect, List<GenericCollisionEvent>> ImpactEvents;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054320", Offset = "0x1054320")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1054320", Offset = "0x1054320")]
		[InlineProperty]
		public List<ICollisionAction> DefaultCollisionActions;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Dictionary<BaseEffect, List<ICollisionAction>> CollisionActions;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float minInterval;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float minRelativeForce;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastExecution;

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x110EBE4", Offset = "0x110EBE4", VA = "0x110EBE4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x110EE28", Offset = "0x110EE28", VA = "0x110EE28")]
		public OnCollisionWithAdditionalMeleeDamage()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C6B4", Offset = "0x104C6B4")]
	public class OverwriteAttackValues : MonoBehaviour
	{
		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance instance;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseAttack baseAttack;

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x110F5D4", Offset = "0x110F5D4", VA = "0x110F5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x110F650", Offset = "0x110F650", VA = "0x110F650")]
		public OverwriteAttackValues()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104C6C8", Offset = "0x104C6C8")]
	public class ZipLine : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform a;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform b;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject rope;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject zipper;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float startPos;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PickableObject po;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 forwardVector;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float speed;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<GenericEvent> startEvents;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<GenericEvent> stopEvents;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HashSet<IPicking> currentPickings;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool reverse;

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x10E62BC", Offset = "0x10E62BC", VA = "0x10E62BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x10E6694", Offset = "0x10E6694", VA = "0x10E6694")]
		private void StopZipper()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x10E66A0", Offset = "0x10E66A0", VA = "0x10E66A0")]
		private void StartZipper(IPicking picking)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x10E6784", Offset = "0x10E6784", VA = "0x10E6784")]
		private void ResetZipper(IPicking picking)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x10E6874", Offset = "0x10E6874", VA = "0x10E6874")]
		private float GetProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x10E69A8", Offset = "0x10E69A8", VA = "0x10E69A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x10E6B6C", Offset = "0x10E6B6C", VA = "0x10E6B6C")]
		public ZipLine()
		{
		}
	}
}
namespace Peacemaker.Visualization
{
	[Token(Token = "0x20002DF")]
	public class VisualizeHandSelection : MonoBehaviour
	{
		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand playerHand;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject visualizerPrefab;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material green;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material red;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int maxRays;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> rays;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ValueData optionsKey;

		[Token(Token = "0x4000F1D")]
		private const float rayThickness = 0.01f;

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x10E2554", Offset = "0x10E2554", VA = "0x10E2554")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x10E26E0", Offset = "0x10E26E0", VA = "0x10E26E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x10E27D0", Offset = "0x10E27D0", VA = "0x10E27D0")]
		private void Instance_OnValueChanged(ValueData data, object val)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x10E265C", Offset = "0x10E265C", VA = "0x10E265C")]
		private void CheckSetUp()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x10E27D4", Offset = "0x10E27D4", VA = "0x10E27D4")]
		private void SetUp()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x10E28E0", Offset = "0x10E28E0", VA = "0x10E28E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x10E2BE0", Offset = "0x10E2BE0", VA = "0x10E2BE0")]
		public VisualizeHandSelection()
		{
		}
	}
}
namespace Peacemaker.Tutorial
{
	[Token(Token = "0x20002E0")]
	public class LargeItemStoreTooltip : TutorialTooltip
	{
		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PlayerHand playerHandLeft;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PlayerHand playerHandRight;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExtendedInventorySlot inventorySlot;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isShowing;

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x10D7840", Offset = "0x10D7840", VA = "0x10D7840", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x10D7B30", Offset = "0x10D7B30", VA = "0x10D7B30")]
		private void InventorySlot_OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x10D7EA4", Offset = "0x10D7EA4", VA = "0x10D7EA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x10D80E4", Offset = "0x10D80E4", VA = "0x10D80E4")]
		private void OnRelease()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x10D8110", Offset = "0x10D8110", VA = "0x10D8110")]
		private void OnPickUp(IPickable pickable)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x10D7CC4", Offset = "0x10D7CC4", VA = "0x10D7CC4")]
		private void FinishInventoryStorage()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x10D8360", Offset = "0x10D8360", VA = "0x10D8360")]
		public LargeItemStoreTooltip()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class MapTooltip : TutorialTooltip
	{
		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HoloMap map;

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x10D83E4", Offset = "0x10D83E4", VA = "0x10D83E4", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x10D84E8", Offset = "0x10D84E8", VA = "0x10D84E8")]
		private void Map_OnOpen()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x10D857C", Offset = "0x10D857C", VA = "0x10D857C")]
		public MapTooltip()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class ShieldTooltip : TutorialTooltip
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<ISideState> showSideEvents;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Side currentSide;

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x10D8580", Offset = "0x10D8580", VA = "0x10D8580", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x10D8770", Offset = "0x10D8770", VA = "0x10D8770")]
		private void ShootWeapon_OnShoot()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x10D8894", Offset = "0x10D8894", VA = "0x10D8894")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x10D8934", Offset = "0x10D8934", VA = "0x10D8934")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x10D8A40", Offset = "0x10D8A40", VA = "0x10D8A40", Slot = "12")]
		public override void Close()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x10D8AB4", Offset = "0x10D8AB4", VA = "0x10D8AB4", Slot = "11")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x10D8B28", Offset = "0x10D8B28", VA = "0x10D8B28")]
		public ShieldTooltip()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class TutorialTooltip : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<IState> showEvents;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string infoKey;

		[Token(Token = "0x4000F29")]
		protected const string tutorialKey = "Tutorial_";

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x10D79FC", Offset = "0x10D79FC", VA = "0x10D79FC", Slot = "10")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x10D8AFC", Offset = "0x10D8AFC", VA = "0x10D8AFC", Slot = "11")]
		public virtual void Trigger()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x10D8A88", Offset = "0x10D8A88", VA = "0x10D8A88", Slot = "12")]
		public virtual void Close()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x10D82C4", Offset = "0x10D82C4", VA = "0x10D82C4")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x10D8364", Offset = "0x10D8364", VA = "0x10D8364")]
		public TutorialTooltip()
		{
		}
	}
}
namespace Peacemaker.WeaponState
{
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class ChangeDamage : IWeaponState
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x10E5278", Offset = "0x10E5278", VA = "0x10E5278", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x10E527C", Offset = "0x10E527C", VA = "0x10E527C", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x10E5314", Offset = "0x10E5314", VA = "0x10E5314", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x10E53AC", Offset = "0x10E53AC", VA = "0x10E53AC")]
		public ChangeDamage()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public enum MathType
	{
		[Token(Token = "0x4000F2C")]
		Multiplicative,
		[Token(Token = "0x4000F2D")]
		Additive
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class ChangeDamagePercentage : IWeaponState
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MathType Type;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PercentageAmount;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x10E53B4", Offset = "0x10E53B4", VA = "0x10E53B4", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x10E53B8", Offset = "0x10E53B8", VA = "0x10E53B8", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x10E54C0", Offset = "0x10E54C0", VA = "0x10E54C0", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x10E5584", Offset = "0x10E5584", VA = "0x10E5584")]
		public ChangeDamagePercentage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class DamageModifier : IWeaponState
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x10E5594", Offset = "0x10E5594", VA = "0x10E5594", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x10E5598", Offset = "0x10E5598", VA = "0x10E5598", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x10E5630", Offset = "0x10E5630", VA = "0x10E5630", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x10E56C8", Offset = "0x10E56C8", VA = "0x10E56C8")]
		public DamageModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class ChangeAmunitionPercentage : IWeaponState
	{
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PercentageAmount;

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x10E49F8", Offset = "0x10E49F8", VA = "0x10E49F8", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x10E49FC", Offset = "0x10E49FC", VA = "0x10E49FC", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x10E4AF0", Offset = "0x10E4AF0", VA = "0x10E4AF0", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x10E4BE4", Offset = "0x10E4BE4", VA = "0x10E4BE4")]
		public ChangeAmunitionPercentage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E9")]
	public class ChangeAmunitionRecoil : IWeaponState
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PercentageAmount;

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x10E4BF4", Offset = "0x10E4BF4", VA = "0x10E4BF4", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x10E4BF8", Offset = "0x10E4BF8", VA = "0x10E4BF8", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x10E4CE4", Offset = "0x10E4CE4", VA = "0x10E4CE4", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x10E4DD0", Offset = "0x10E4DD0", VA = "0x10E4DD0")]
		public ChangeAmunitionRecoil()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class ChangeAmunitionAccuracy : IWeaponState
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PercentageAmount;

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x10E48B0", Offset = "0x10E48B0", VA = "0x10E48B0", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x10E48B4", Offset = "0x10E48B4", VA = "0x10E48B4", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x10E494C", Offset = "0x10E494C", VA = "0x10E494C", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x10E49E4", Offset = "0x10E49E4", VA = "0x10E49E4")]
		public ChangeAmunitionAccuracy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class ChangeCooldown : IWeaponState
	{
		[Token(Token = "0x20002EC")]
		public enum Type
		{
			[Token(Token = "0x4000F37")]
			Add,
			[Token(Token = "0x4000F38")]
			Multiply
		}

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Type type;

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x10E50EC", Offset = "0x10E50EC", VA = "0x10E50EC", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x10E50F0", Offset = "0x10E50F0", VA = "0x10E50F0", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x10E51AC", Offset = "0x10E51AC", VA = "0x10E51AC", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x10E5268", Offset = "0x10E5268", VA = "0x10E5268")]
		public ChangeCooldown()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class BulletCondition : IWeaponCondition
	{
		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletData bullet;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x10E4820", Offset = "0x10E4820", VA = "0x10E4820", Slot = "4")]
		public bool Execute(Transform emitter, Weapon weapon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x10E48A8", Offset = "0x10E48A8", VA = "0x10E48A8")]
		public BulletCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EE")]
	public class ReplaceBullets : IWeaponState
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<BulletData, BulletData> replacements;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<BulletData, BulletData> exitStates;

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x10E56D8", Offset = "0x10E56D8", VA = "0x10E56D8", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x10E56DC", Offset = "0x10E56DC", VA = "0x10E56DC", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x10E580C", Offset = "0x10E580C", VA = "0x10E580C", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x10E58D4", Offset = "0x10E58D4", VA = "0x10E58D4")]
		public ReplaceBullets()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EF")]
	public class ChangeBullet : IWeaponState
	{
		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletData Bullet;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054390", Offset = "0x1054390")]
		public List<WeaponData> Exceptions;

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x10E4DE4", Offset = "0x10E4DE4", VA = "0x10E4DE4")]
		private bool IsException(Weapon weapon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x10E4F30", Offset = "0x10E4F30", VA = "0x10E4F30", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x10E4F34", Offset = "0x10E4F34", VA = "0x10E4F34", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x10E4FD4", Offset = "0x10E4FD4", VA = "0x10E4FD4", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x10E507C", Offset = "0x10E507C", VA = "0x10E507C")]
		public ChangeBullet()
		{
		}
	}
}
namespace Peacemaker.DebugState
{
	[Serializable]
	[Token(Token = "0x20002F0")]
	public class DebugText : IState, ISideState
	{
		[Token(Token = "0x20002F1")]
		public enum DebugType
		{
			[Token(Token = "0x4000F42")]
			Info,
			[Token(Token = "0x4000F43")]
			Warning,
			[Token(Token = "0x4000F44")]
			Error
		}

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EnterText;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LeaveText;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugType Type;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1132474", Offset = "0x1132474", VA = "0x1132474", Slot = "7")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1132478", Offset = "0x1132478", VA = "0x1132478", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1132480", Offset = "0x1132480", VA = "0x1132480", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1132484", Offset = "0x1132484", VA = "0x1132484", Slot = "8")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x11324FC", Offset = "0x11324FC", VA = "0x11324FC", Slot = "9")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x113247C", Offset = "0x113247C", VA = "0x113247C")]
		public void ExecuteDebug(string text)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1132574", Offset = "0x1132574", VA = "0x1132574")]
		public DebugText()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F2")]
	public class DebugTag : IState, ISideState
	{
		[Token(Token = "0x20002F3")]
		public enum DebugType
		{
			[Token(Token = "0x4000F49")]
			Info,
			[Token(Token = "0x4000F4A")]
			Warning,
			[Token(Token = "0x4000F4B")]
			Error
		}

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EnterText;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LeaveText;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugType Type;

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x113227C", Offset = "0x113227C", VA = "0x113227C", Slot = "7")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1132280", Offset = "0x1132280", VA = "0x1132280", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x11322CC", Offset = "0x11322CC", VA = "0x11322CC", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1132314", Offset = "0x1132314", VA = "0x1132314", Slot = "8")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x11323C0", Offset = "0x11323C0", VA = "0x11323C0", Slot = "9")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x11322C8", Offset = "0x11322C8", VA = "0x11322C8")]
		public void ExecuteDebug(string text)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x113246C", Offset = "0x113246C", VA = "0x113246C")]
		public DebugTag()
		{
		}
	}
}
namespace Peacemaker.Abilities
{
	[Token(Token = "0x20002F4")]
	public abstract class GenericEnemySelectionEvent : ISuccessAction
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxRange;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxAngle;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetUnitTag> tags;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GEUnit unit;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool success;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10543C8", Offset = "0x10543C8")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10543C8", Offset = "0x10543C8")]
		[InlineProperty]
		public List<IAction> SuccessEvents;

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x11DC988", Offset = "0x11DC988", VA = "0x11DC988", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E11")]
		protected abstract bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source);

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x11DCB74", Offset = "0x11DCB74", VA = "0x11DCB74")]
		protected GEUnit GetSelectedUnit(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x11DC134", Offset = "0x11DC134", VA = "0x11DC134")]
		protected GenericEnemySelectionEvent()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class TeleportTowardsEnemy : GenericEnemySelectionEvent
	{
		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceToEnemy;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxNavMeshSearchRadius;

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x11DDA84", Offset = "0x11DDA84", VA = "0x11DDA84", Slot = "5")]
		protected override bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x11DDC6C", Offset = "0x11DDC6C", VA = "0x11DDC6C")]
		public TeleportTowardsEnemy()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class TransferHealthToUnit : GenericEnemySelectionEvent
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Amount;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AttackInfo attackInfo;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevHealth;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float actualHealthloss;

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x11DE1B0", Offset = "0x11DE1B0", VA = "0x11DE1B0", Slot = "5")]
		protected override bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x11DE3D0", Offset = "0x11DE3D0", VA = "0x11DE3D0")]
		public TransferHealthToUnit()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class ApplyEffectOnEnemy : GenericEnemySelectionEvent
	{
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnitEventData unitEventData;

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x11DBE38", Offset = "0x11DBE38", VA = "0x11DBE38", Slot = "5")]
		protected override bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x11DC130", Offset = "0x11DC130", VA = "0x11DC130")]
		public ApplyEffectOnEnemy()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class TeleportPlayerToPosition : GenericEvent, IAction
	{
		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C6DC", Offset = "0x104C6DC")]
		private sealed class <DoTeleport>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportPlayerToPosition <>4__this;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <prevFallDelay>5__3;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private FallDownBehaviour <fdb>5__4;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ResetHeightOnSteps <resetHeight>5__5;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <i>5__6;

			[Token(Token = "0x17000150")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E22")]
				[Address(RVA = "0x11DD500", Offset = "0x11DD500", VA = "0x11DD500", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000151")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E24")]
				[Address(RVA = "0x11DD568", Offset = "0x11DD568", VA = "0x11DD568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x11DD0EC", Offset = "0x11DD0EC", VA = "0x11DD0EC")]
			[DebuggerHidden]
			public <DoTeleport>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x11DD180", Offset = "0x11DD180", VA = "0x11DD180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x11DD184", Offset = "0x11DD184", VA = "0x11DD184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x11DD508", Offset = "0x11DD508", VA = "0x11DD508", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform startTransform;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTeleportInterval;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numFrames;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x11DCE34", Offset = "0x11DCE34", VA = "0x11DCE34", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x11DD058", Offset = "0x11DD058", VA = "0x11DD058")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B264", Offset = "0x105B264")]
		private IEnumerator DoTeleport(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x11DCF3C", Offset = "0x11DCF3C", VA = "0x11DCF3C")]
		private void Teleport(Vector3 position)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x11DD118", Offset = "0x11DD118", VA = "0x11DD118")]
		public TeleportPlayerToPosition()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class TeleportUnitToPosition : GenericEvent, IAction
	{
		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C6EC", Offset = "0x104C6EC")]
		private sealed class <DoTeleport>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportUnitToPosition <>4__this;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x17000152")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2D")]
				[Address(RVA = "0x11DE140", Offset = "0x11DE140", VA = "0x11DE140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000153")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2F")]
				[Address(RVA = "0x11DE1A8", Offset = "0x11DE1A8", VA = "0x11DE1A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x11DDF4C", Offset = "0x11DDF4C", VA = "0x11DDF4C")]
			[DebuggerHidden]
			public <DoTeleport>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x11DDFE0", Offset = "0x11DDFE0", VA = "0x11DDFE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x11DDFE4", Offset = "0x11DDFE4", VA = "0x11DDFE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x11DE148", Offset = "0x11DE148", VA = "0x11DE148", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform startTransform;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTeleportInterval;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numFrames;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x11DDC7C", Offset = "0x11DDC7C", VA = "0x11DDC7C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x11DDEB8", Offset = "0x11DDEB8", VA = "0x11DDEB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B318", Offset = "0x105B318")]
		private IEnumerator DoTeleport(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x11DDD9C", Offset = "0x11DDD9C", VA = "0x11DDD9C")]
		private void Teleport(Vector3 position)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x11DDF78", Offset = "0x11DDF78", VA = "0x11DDF78")]
		public TeleportUnitToPosition()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class TeleportPlayerToPositionSuccessAction : ISuccessAction
	{
		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C6FC", Offset = "0x104C6FC")]
		private sealed class <DoTeleport>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportPlayerToPositionSuccessAction <>4__this;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x17000154")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E38")]
				[Address(RVA = "0x11DDA14", Offset = "0x11DDA14", VA = "0x11DDA14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000155")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3A")]
				[Address(RVA = "0x11DDA7C", Offset = "0x11DDA7C", VA = "0x11DDA7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x11DD820", Offset = "0x11DD820", VA = "0x11DD820")]
			[DebuggerHidden]
			public <DoTeleport>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x11DD8B4", Offset = "0x11DD8B4", VA = "0x11DD8B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x11DD8B8", Offset = "0x11DD8B8", VA = "0x11DD8B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x11DDA1C", Offset = "0x11DDA1C", VA = "0x11DDA1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform startTransform;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTeleportInterval;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numFrames;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x11DD570", Offset = "0x11DD570", VA = "0x11DD570", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x11DD78C", Offset = "0x11DD78C", VA = "0x11DD78C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B3CC", Offset = "0x105B3CC")]
		private IEnumerator DoTeleport(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x11DD670", Offset = "0x11DD670", VA = "0x11DD670")]
		private void Teleport(Vector3 position)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x11DD84C", Offset = "0x11DD84C", VA = "0x11DD84C")]
		public TeleportPlayerToPositionSuccessAction()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class AttachGameObjectToEmitter : GenericEvent, IAction
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefab;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject currentObj;

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x11DC1D8", Offset = "0x11DC1D8", VA = "0x11DC1D8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x11DC2CC", Offset = "0x11DC2CC", VA = "0x11DC2CC")]
		public AttachGameObjectToEmitter()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class EnterEventStatesForLimitedTime : GenericEvent, IAction
	{
		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C70C", Offset = "0x104C70C")]
		private sealed class <DoEnterStates>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnterEventStatesForLimitedTime <>4__this;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x17000156")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E43")]
				[Address(RVA = "0x11DC918", Offset = "0x11DC918", VA = "0x11DC918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000157")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E45")]
				[Address(RVA = "0x11DC980", Offset = "0x11DC980", VA = "0x11DC980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x11DC458", Offset = "0x11DC458", VA = "0x11DC458")]
			[DebuggerHidden]
			public <DoEnterStates>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x11DC4FC", Offset = "0x11DC4FC", VA = "0x11DC4FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x11DC500", Offset = "0x11DC500", VA = "0x11DC500", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x11DC920", Offset = "0x11DC920", VA = "0x11DC920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054438", Offset = "0x1054438")]
		[InlineProperty]
		public List<IState> States;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool initDone;

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x11DC388", Offset = "0x11DC388", VA = "0x11DC388", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x11DC3DC", Offset = "0x11DC3DC", VA = "0x11DC3DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B480", Offset = "0x105B480")]
		private IEnumerator DoEnterStates(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x11DC484", Offset = "0x11DC484", VA = "0x11DC484")]
		public EnterEventStatesForLimitedTime()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class ChangeGlobalDamageMultiplicator : IState
	{
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float multiplicator;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float defaultVal;

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x11DC2DC", Offset = "0x11DC2DC", VA = "0x11DC2DC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x11DC310", Offset = "0x11DC310", VA = "0x11DC310", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x11DC344", Offset = "0x11DC344", VA = "0x11DC344", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x11DC378", Offset = "0x11DC378", VA = "0x11DC378")]
		public ChangeGlobalDamageMultiplicator()
		{
		}
	}
}
namespace Peacemaker.Pickable
{
	[Token(Token = "0x2000302")]
	public abstract class BasePickUpConstraint : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PickableObject pickableObject;

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x1110B14", Offset = "0x1110B14", VA = "0x1110B14", Slot = "10")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x1110C28", Offset = "0x1110C28", VA = "0x1110C28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E4C")]
		public abstract void HandleRelease(IPicking picking, IPickable pickable);

		[Token(Token = "0x6000E4D")]
		public abstract void ApplyConstraint();

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x1110D3C", Offset = "0x1110D3C", VA = "0x1110D3C")]
		protected BasePickUpConstraint()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class WheelPickUpConstraint : BasePickUpConstraint
	{
		[Token(Token = "0x2000304")]
		private enum WheelState
		{
			[Token(Token = "0x4000F9C")]
			LeftState,
			[Token(Token = "0x4000F9D")]
			RightState
		}

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform wheelCenter;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform wheel;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float angleLockRight;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float angleLockLeft;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float wheelSize;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float maxWheelDistance;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject collidersParentObj;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform startState1;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform startState2;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WheelState _curWheelState;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10544F4", Offset = "0x10544F4")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10544F4", Offset = "0x10544F4")]
		public List<IAction> OnRightLockReachedActions;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1054564", Offset = "0x1054564")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054564", Offset = "0x1054564")]
		[InlineProperty]
		public List<IAction> OnLeftLockReachedActions;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _lastConstraintPosition;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion _lastConstraintRotation;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 _lastNotLockedPosition;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _emitActionsAtStart;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool initialized;

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1110D44", Offset = "0x1110D44", VA = "0x1110D44", Slot = "11")]
		public override void HandleRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x1110DA0", Offset = "0x1110DA0", VA = "0x1110DA0", Slot = "12")]
		public override void ApplyConstraint()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x1111020", Offset = "0x1111020", VA = "0x1111020")]
		private Vector3 CalculateLocalOffset(Vector3 originalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x11111D4", Offset = "0x11111D4", VA = "0x11111D4")]
		private bool CheckIfWheelDistanceIsTooFarAndRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x1111108", Offset = "0x1111108", VA = "0x1111108")]
		private float CalculateAngleDeg(Vector3 localOffset)
		{
			return default(float);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x111136C", Offset = "0x111136C", VA = "0x111136C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1111408", Offset = "0x1111408", VA = "0x1111408")]
		public void SetWheelStartPos(TwoStateMovement.MovementState currentMovementState)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x111173C", Offset = "0x111173C", VA = "0x111173C")]
		public WheelPickUpConstraint()
		{
		}
	}
}
namespace Peacemaker.ShootingRange
{
	[Token(Token = "0x2000305")]
	public class ShootingRangeMinigame : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10545D4", Offset = "0x10545D4")]
		public UnitHealth targetPrefab;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI TimeLabel;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI ScoreLabel;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI MaxScoreLabel;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x105460C", Offset = "0x105460C")]
		public float gameDuration;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AssetInfoTag critTag;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int critScore;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int normalScore;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float appearanceDelay;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 dimension;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ReadOnly]
		public UnitHealth currentTarget;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[ReadOnly]
		public int currentScore;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int lastScore;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[InlineProperty]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054664", Offset = "0x1054664")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054664", Offset = "0x1054664")]
		public List<IAction> OnFinished;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float appearanceTimer;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float currentGameTime;

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x10FD1A0", Offset = "0x10FD1A0", VA = "0x10FD1A0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x10FD1E0", Offset = "0x10FD1E0", VA = "0x10FD1E0")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105B534", Offset = "0x105B534")]
		public void StartGame()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x10FD24C", Offset = "0x10FD24C", VA = "0x10FD24C")]
		public void StopGame()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x10FD450", Offset = "0x10FD450", VA = "0x10FD450")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x10FD45C", Offset = "0x10FD45C", VA = "0x10FD45C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x10FD6C0", Offset = "0x10FD6C0", VA = "0x10FD6C0")]
		private void DisableCurrentTarget(float damage, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x10FD7B4", Offset = "0x10FD7B4", VA = "0x10FD7B4")]
		public ShootingRangeMinigame()
		{
		}
	}
}
namespace Peacemaker.WeaponEvent
{
	[Serializable]
	[Token(Token = "0x2000306")]
	public class ReloadWeapon : GenericEvent, IAction
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon Weapon;

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x10E4310", Offset = "0x10E4310", VA = "0x10E4310", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x10E4330", Offset = "0x10E4330", VA = "0x10E4330")]
		public ReloadWeapon()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000307")]
	public class ReloadTargetWeapon : IAction, ITriggerAction
	{
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Weapon weapon;

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x10E4254", Offset = "0x10E4254", VA = "0x10E4254", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x10E4274", Offset = "0x10E4274", VA = "0x10E4274", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x10E4308", Offset = "0x10E4308", VA = "0x10E4308")]
		public ReloadTargetWeapon()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class RemoveSpawnPointFromWeapon : IAction
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spawnPoint;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x10E4338", Offset = "0x10E4338", VA = "0x10E4338", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x10E44AC", Offset = "0x10E44AC", VA = "0x10E44AC")]
		public RemoveSpawnPointFromWeapon()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000309")]
	public class WeaponReload : IWeaponAction
	{
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x10E47C4", Offset = "0x10E47C4", VA = "0x10E47C4", Slot = "4")]
		public void Execute(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x10E4818", Offset = "0x10E4818", VA = "0x10E4818")]
		public WeaponReload()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class ShowWeaponTooltip : ISideState
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10546D4", Offset = "0x10546D4")]
		public Vector3 Offset;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105470C", Offset = "0x105470C")]
		public float OffsetY;

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x10E44B4", Offset = "0x10E44B4", VA = "0x10E44B4", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x10E44B8", Offset = "0x10E44B8", VA = "0x10E44B8", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x10E4748", Offset = "0x10E4748", VA = "0x10E4748", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x10E47B0", Offset = "0x10E47B0", VA = "0x10E47B0")]
		public ShowWeaponTooltip()
		{
		}
	}
}
namespace Peacemaker.UpgradeEvent
{
	[Serializable]
	[Token(Token = "0x200030B")]
	public class UpgradeEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UpgradeData Upgrade;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x10DFB04", Offset = "0x10DFB04", VA = "0x10DFB04", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x10DFB7C", Offset = "0x10DFB7C", VA = "0x10DFB7C")]
		public UpgradeEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030C")]
	public class TriggerUpgradesBulletAction : IBulletAction
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side Side;

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x10DF8D8", Offset = "0x10DF8D8", VA = "0x10DF8D8", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x10DFAEC", Offset = "0x10DFAEC", VA = "0x10DFAEC")]
		public TriggerUpgradesBulletAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030D")]
	public class TriggerUpgradesUnitAction : IUnitAction
	{
		[Token(Token = "0x200030E")]
		public enum ActionType
		{
			[Token(Token = "0x4000FBA")]
			OnPlayerHit,
			[Token(Token = "0x4000FBB")]
			OnEnemyHit
		}

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side Side;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ActionType Action;

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x10DFAF4", Offset = "0x10DFAF4", VA = "0x10DFAF4", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x10DFAF8", Offset = "0x10DFAF8", VA = "0x10DFAF8")]
		public void TriggerUpgrade(UpgradeData[] upgrades, GEUnit unit)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x10DFAFC", Offset = "0x10DFAFC", VA = "0x10DFAFC")]
		public TriggerUpgradesUnitAction()
		{
		}
	}
}
namespace Peacemaker.AlarmSystem
{
	[Serializable]
	[Token(Token = "0x200030F")]
	public class TriggerAlarm : GenericEvent, IAction
	{
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueData alarmValue;

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x11E0DB0", Offset = "0x11E0DB0", VA = "0x11E0DB0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x11E0ED8", Offset = "0x11E0ED8", VA = "0x11E0ED8")]
		public TriggerAlarm()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class EnableAlarm : GenericEvent, IAction
	{
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueData alarmValue;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enabled;

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x11E0CF0", Offset = "0x11E0CF0", VA = "0x11E0CF0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x11E0DA0", Offset = "0x11E0DA0", VA = "0x11E0DA0")]
		public EnableAlarm()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class AlarmSystem : MonoBehaviour
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AlarmSystem Instance;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Material> alarmMaterials;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ValueData alarmStat;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient AlarmGradient;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Speed;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture AlarmTexture;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve AlarmStrength;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, float> defaultFade;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, Texture> defaultTextures;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float triggerTime;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool setUpDefaultMats;

		[Token(Token = "0x14000030")]
		public event Action<bool> OnAlarmTriggered
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x11E0180", Offset = "0x11E0180", VA = "0x11E0180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B544", Offset = "0x105B544")]
			add
			{
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x11E0224", Offset = "0x11E0224", VA = "0x11E0224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B554", Offset = "0x105B554")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x11E02C8", Offset = "0x11E02C8", VA = "0x11E02C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x11E031C", Offset = "0x11E031C", VA = "0x11E031C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x11E044C", Offset = "0x11E044C", VA = "0x11E044C")]
		private void Instance_OnValueChanged(ValueData stat, object value)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x11E0528", Offset = "0x11E0528", VA = "0x11E0528")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105B564", Offset = "0x105B564")]
		public void EnableAlarm(bool val)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x11E09F4", Offset = "0x11E09F4", VA = "0x11E09F4")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x11E09FC", Offset = "0x11E09FC", VA = "0x11E09FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x11E0B60", Offset = "0x11E0B60", VA = "0x11E0B60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x11E0C50", Offset = "0x11E0C50", VA = "0x11E0C50")]
		public AlarmSystem()
		{
		}
	}
}
namespace Peacemaker.Settings
{
	[Serializable]
	[Token(Token = "0x2000312")]
	public class DeleteSavedPrefsEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x10FAB94", Offset = "0x10FAB94", VA = "0x10FAB94", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x10FABF0", Offset = "0x10FABF0", VA = "0x10FABF0")]
		public DeleteSavedPrefsEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000313")]
	public class DeleteAllPlayerPrefs : GenericEvent, IAction
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x10FAACC", Offset = "0x10FAACC", VA = "0x10FAACC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x10FAB28", Offset = "0x10FAB28", VA = "0x10FAB28")]
		public DeleteAllPlayerPrefs()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000314")]
	public class DeleteAllProgression : GenericEvent, IAction
	{
		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x10FAB30", Offset = "0x10FAB30", VA = "0x10FAB30", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x10FAB8C", Offset = "0x10FAB8C", VA = "0x10FAB8C")]
		public DeleteAllProgression()
		{
		}
	}
}
namespace Peacemaker.Scene
{
	[Serializable]
	[Token(Token = "0x2000315")]
	public class LoadScene : GenericEvent, IAction
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneData Scene;

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x10F3F58", Offset = "0x10F3F58", VA = "0x10F3F58", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x10F3FD4", Offset = "0x10F3FD4", VA = "0x10F3FD4")]
		public LoadScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000316")]
	public class LoadSpecificSeed : GenericStringEvent
	{
		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetWorldProgression World;

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x10F3FDC", Offset = "0x10F3FDC", VA = "0x10F3FDC", Slot = "4")]
		public override void Execute(Transform emitter, string seed)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x10F41E4", Offset = "0x10F41E4", VA = "0x10F41E4")]
		public LoadSpecificSeed()
		{
		}
	}
}
namespace Peacemaker.Quality
{
	[Serializable]
	[Token(Token = "0x2000317")]
	public class SetQuality : GenericEvent, IAction
	{
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x1054754", Offset = "0x1054754")]
		public string Quality;

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x1115C54", Offset = "0x1115C54", VA = "0x1115C54", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1115D00", Offset = "0x1115D00", VA = "0x1115D00")]
		public string[] GetQuality()
		{
			return null;
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1115C70", Offset = "0x1115C70", VA = "0x1115C70")]
		public int GetQualityByName(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1115D08", Offset = "0x1115D08", VA = "0x1115D08")]
		public SetQuality()
		{
		}
	}
}
namespace Peacemaker.Profile
{
	[Serializable]
	[Token(Token = "0x2000318")]
	public class OpenProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x1113608", Offset = "0x1113608", VA = "0x1113608", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x111366C", Offset = "0x111366C", VA = "0x111366C")]
		public OpenProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000319")]
	public class CloseProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x1113578", Offset = "0x1113578", VA = "0x1113578", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x11135D4", Offset = "0x11135D4", VA = "0x11135D4")]
		public CloseProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031A")]
	public class SelectProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x1113674", Offset = "0x1113674", VA = "0x1113674", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x11136D8", Offset = "0x11136D8", VA = "0x11136D8")]
		public SelectProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031B")]
	public class ToggleProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x11136E0", Offset = "0x11136E0", VA = "0x11136E0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x111373C", Offset = "0x111373C", VA = "0x111373C")]
		public ToggleProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031C")]
	public class LogProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Profiler Profiler;

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x11135DC", Offset = "0x11135DC", VA = "0x11135DC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1113600", Offset = "0x1113600", VA = "0x1113600")]
		public LogProfiler()
		{
		}
	}
}
namespace Peacemaker.PopupText
{
	[Serializable]
	[Token(Token = "0x200031D")]
	public class ShowWorldPopup : GenericEvent, IAction, ISideAction, IAttackAction
	{
		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Text;

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1113040", Offset = "0x1113040", VA = "0x1113040", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1113188", Offset = "0x1113188", VA = "0x1113188", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1113194", Offset = "0x1113194", VA = "0x1113194", Slot = "7")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x11131A0", Offset = "0x11131A0", VA = "0x11131A0")]
		public ShowWorldPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031E")]
	public class ShowWorldFloatPopup : GenericFloatEvent
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1112EC4", Offset = "0x1112EC4", VA = "0x1112EC4", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1113038", Offset = "0x1113038", VA = "0x1113038")]
		public ShowWorldFloatPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031F")]
	public class ShowWorldAttackPopup : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1112DC0", Offset = "0x1112DC0", VA = "0x1112DC0", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo info)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1112EBC", Offset = "0x1112EBC", VA = "0x1112EBC")]
		public ShowWorldAttackPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000320")]
	public class ShowWorldVectorPopup : GenericVectorEvent, IVector3Action
	{
		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Value;

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x11131A8", Offset = "0x11131A8", VA = "0x11131A8", Slot = "4")]
		public override void Execute(Transform emitter, Vector3 position)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x111327C", Offset = "0x111327C", VA = "0x111327C")]
		public ShowWorldVectorPopup()
		{
		}
	}
}
namespace Peacemaker.Playerhand
{
	[Serializable]
	[Token(Token = "0x2000321")]
	public class SpawnMagazine : GenericSideEvent
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MagazineData Magazine;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Opposite;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1112C10", Offset = "0x1112C10", VA = "0x1112C10", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x1112DB8", Offset = "0x1112DB8", VA = "0x1112DB8")]
		public SpawnMagazine()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class ReleaseAndDestroy : GenericEvent
	{
		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C71C", Offset = "0x104C71C")]
		private sealed class <DoReleaseAndDestroy>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReleaseAndDestroy <>4__this;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x17000158")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EAA")]
				[Address(RVA = "0x1112BA0", Offset = "0x1112BA0", VA = "0x1112BA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000159")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EAC")]
				[Address(RVA = "0x1112C08", Offset = "0x1112C08", VA = "0x1112C08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x1112A6C", Offset = "0x1112A6C", VA = "0x1112A6C")]
			[DebuggerHidden]
			public <DoReleaseAndDestroy>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x1112AA0", Offset = "0x1112AA0", VA = "0x1112AA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x1112AA4", Offset = "0x1112AA4", VA = "0x1112AA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x1112BA8", Offset = "0x1112BA8", VA = "0x1112BA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PickableObject pickableObject;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x111299C", Offset = "0x111299C", VA = "0x111299C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x11129F0", Offset = "0x11129F0", VA = "0x11129F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B574", Offset = "0x105B574")]
		private IEnumerator DoReleaseAndDestroy(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1112A98", Offset = "0x1112A98", VA = "0x1112A98")]
		public ReleaseAndDestroy()
		{
		}
	}
}
namespace Peacemaker.PlayerEvents
{
	[Token(Token = "0x2000324")]
	public class TeleportPlayerInDirection : GenericVectorEvent
	{
		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float distance;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool warpToNavMesh;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x10547A0", Offset = "0x10547A0")]
		public float maxNavMeshSearchRadius;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask obstacleLayer;

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1112610", Offset = "0x1112610", VA = "0x1112610", Slot = "4")]
		public override void Execute(Transform emitter, Vector3 value)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1112928", Offset = "0x1112928", VA = "0x1112928")]
		public TeleportPlayerInDirection()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class HealPlayerEvent : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float multiplicator;

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x11122EC", Offset = "0x11122EC", VA = "0x11122EC", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x11123CC", Offset = "0x11123CC", VA = "0x11123CC")]
		public HealPlayerEvent()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class LosePlayerHealth : GenericEvent
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float damage;

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1112480", Offset = "0x1112480", VA = "0x1112480", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x111254C", Offset = "0x111254C", VA = "0x111254C")]
		public LosePlayerHealth()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class MakePlayerInvincible : GenericEvent, ICollisionAction, IAction
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x111255C", Offset = "0x111255C", VA = "0x111255C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x11125FC", Offset = "0x11125FC", VA = "0x11125FC", Slot = "5")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1112608", Offset = "0x1112608", VA = "0x1112608")]
		public MakePlayerInvincible()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class IsAliveCondition : GenericCondition
	{
		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitHealth unitHealth;

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x11123DC", Offset = "0x11123DC", VA = "0x11123DC", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1112478", Offset = "0x1112478", VA = "0x1112478")]
		public IsAliveCondition()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class DistanceToPlayerCondition : GenericCondition
	{
		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDistance;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDistance;

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1112098", Offset = "0x1112098", VA = "0x1112098", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x11121F8", Offset = "0x11121F8", VA = "0x11121F8")]
		public DistanceToPlayerCondition()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class HealPlayer : GenericEvent
	{
		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float amount;

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x111220C", Offset = "0x111220C", VA = "0x111220C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x11122DC", Offset = "0x11122DC", VA = "0x11122DC")]
		public HealPlayer()
		{
		}
	}
}
namespace Peacemaker.Particle
{
	[Serializable]
	[Token(Token = "0x200032B")]
	public class SpawnParticle : GenericEvent, IAction, ITriggerAction, IVector3Action, IUnitAction, IAttackAction
	{
		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleData Profile;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x110FBF8", Offset = "0x110FBF8", VA = "0x110FBF8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x110FD14", Offset = "0x110FD14", VA = "0x110FD14", Slot = "6")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x110FE90", Offset = "0x110FE90", VA = "0x110FE90", Slot = "7")]
		public void Execute(Transform emitter, Vector3 position)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x110FFE4", Offset = "0x110FFE4", VA = "0x110FFE4", Slot = "8")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x110FFF0", Offset = "0x110FFF0", VA = "0x110FFF0", Slot = "9")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x110FFFC", Offset = "0x110FFFC", VA = "0x110FFFC")]
		public SpawnParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032C")]
	public class SpawnParticleAtParent : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleData Profile;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform parent;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Offset;

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1110004", Offset = "0x1110004", VA = "0x1110004", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1110120", Offset = "0x1110120", VA = "0x1110120", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x111012C", Offset = "0x111012C", VA = "0x111012C")]
		public SpawnParticleAtParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032D")]
	public class SpawnCollisionParticle : GenericCollisionEvent, ICollisionAction
	{
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleData Profile;

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x110F9D4", Offset = "0x110F9D4", VA = "0x110F9D4", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x110FBF0", Offset = "0x110FBF0", VA = "0x110FBF0")]
		public SpawnCollisionParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032E")]
	public class SetParticlePlaybackTime : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ParticleSystem> particleSystems;

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x110F660", Offset = "0x110F660", VA = "0x110F660", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x110F7B0", Offset = "0x110F7B0", VA = "0x110F7B0")]
		public SetParticlePlaybackTime()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032F")]
	public class SetSpecificParticlePlaybackTime : GenericEvent, IAction
	{
		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ParticleSystem> particleSystems;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x110F820", Offset = "0x110F820", VA = "0x110F820", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x110F964", Offset = "0x110F964", VA = "0x110F964")]
		public SetSpecificParticlePlaybackTime()
		{
		}
	}
}
namespace Peacemaker.NoteEvents
{
	[Serializable]
	[Token(Token = "0x2000330")]
	public class UnlockNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NoteData Note;

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x110D190", Offset = "0x110D190", VA = "0x110D190", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x110D250", Offset = "0x110D250", VA = "0x110D250")]
		public UnlockNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public class HasNote : GenericCondition
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NoteData Note;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Not;

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x110CDAC", Offset = "0x110CDAC", VA = "0x110CDAC", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x110CE78", Offset = "0x110CE78", VA = "0x110CE78")]
		public HasNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000332")]
	public class IncreaseShootWeaponNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WeaponNoteData Note;

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x110D008", Offset = "0x110D008", VA = "0x110D008", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x110D0C4", Offset = "0x110D0C4", VA = "0x110D0C4")]
		public IncreaseShootWeaponNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class IncreaseKillUnitNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitNoteData Note;

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x110CF44", Offset = "0x110CF44", VA = "0x110CF44", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x110D000", Offset = "0x110D000", VA = "0x110D000")]
		public IncreaseKillUnitNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class IncreaseUseItemNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemNoteData Note;

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x110D0CC", Offset = "0x110D0CC", VA = "0x110D0CC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x110D188", Offset = "0x110D188", VA = "0x110D188")]
		public IncreaseUseItemNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class IncreaseEquipUpgradeNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UpgradeNoteData Note;

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x110CE80", Offset = "0x110CE80", VA = "0x110CE80", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x110CF3C", Offset = "0x110CF3C", VA = "0x110CF3C")]
		public IncreaseEquipUpgradeNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000336")]
	public class ChangePlayerNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NoteReader noteReader;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LoreNoteData Note;

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x110CD1C", Offset = "0x110CD1C", VA = "0x110CD1C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x110CDA4", Offset = "0x110CDA4", VA = "0x110CDA4")]
		public ChangePlayerNote()
		{
		}
	}
}
namespace Peacemaker.Materials
{
	[Serializable]
	[Token(Token = "0x2000337")]
	public class SetMaterial : GenericEvent, IAction
	{
		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Objects;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IncludeChildren;

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x110BAC8", Offset = "0x110BAC8", VA = "0x110BAC8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x110BCF0", Offset = "0x110BCF0", VA = "0x110BCF0")]
		public void Replace(Material material)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x110BC2C", Offset = "0x110BC2C", VA = "0x110BC2C")]
		public void ReplaceMaterial(Transform trans, Material material)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x110BE64", Offset = "0x110BE64", VA = "0x110BE64")]
		public SetMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000338")]
	public class SetLevelMaterial : GenericEvent, IAction
	{
		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x110B940", Offset = "0x110B940", VA = "0x110B940", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x110B9FC", Offset = "0x110B9FC", VA = "0x110B9FC")]
		public void ReplaceMaterial(Transform trans, Material material)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x110BAC0", Offset = "0x110BAC0", VA = "0x110BAC0")]
		public SetLevelMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class SetGlobalMaterial : GenericEvent, IAction
	{
		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x110B7F8", Offset = "0x110B7F8", VA = "0x110B7F8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x110B938", Offset = "0x110B938", VA = "0x110B938")]
		public SetGlobalMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033A")]
	public class SetSpriteColor : GenericEvent, IAction
	{
		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer spriteRenderer;

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x110BED4", Offset = "0x110BED4", VA = "0x110BED4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x110BEFC", Offset = "0x110BEFC", VA = "0x110BEFC")]
		public SetSpriteColor()
		{
		}
	}
}
namespace Peacemaker.Level
{
	[Serializable]
	[Token(Token = "0x200033B")]
	public class SetSeed : GenericEvent, IAction
	{
		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SeedType SeedMode;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x105480C", Offset = "0x105480C")]
		public int Seed;

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x11082AC", Offset = "0x11082AC", VA = "0x11082AC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x110836C", Offset = "0x110836C", VA = "0x110836C")]
		public SetSeed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033C")]
	public class RandomLevel : GenericEvent, IAction
	{
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x1107D50", Offset = "0x1107D50", VA = "0x1107D50", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x1107DB8", Offset = "0x1107DB8", VA = "0x1107DB8")]
		public RandomLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033D")]
	public class ReloadLevel : GenericEvent, IAction
	{
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1107F8C", Offset = "0x1107F8C", VA = "0x1107F8C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x1107FF4", Offset = "0x1107FF4", VA = "0x1107FF4")]
		public ReloadLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033E")]
	public class LoadScene : GenericEvent, IAction
	{
		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneData Scene;

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1107C4C", Offset = "0x1107C4C", VA = "0x1107C4C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1107D48", Offset = "0x1107D48", VA = "0x1107D48")]
		public LoadScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class ReloadScene : GenericEvent, IAction
	{
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1107FFC", Offset = "0x1107FFC", VA = "0x1107FFC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x110807C", Offset = "0x110807C", VA = "0x110807C")]
		public ReloadScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000340")]
	public class ReloadSceneIfTrue : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1108084", Offset = "0x1108084", VA = "0x1108084", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1108114", Offset = "0x1108114", VA = "0x1108114")]
		public ReloadSceneIfTrue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000341")]
	public class LoadLevelActions : IAction
	{
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x11079C8", Offset = "0x11079C8", VA = "0x11079C8", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1107C44", Offset = "0x1107C44", VA = "0x1107C44")]
		public LoadLevelActions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000342")]
	public class RemoveUnitByTag : IUnitAction
	{
		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x110811C", Offset = "0x110811C", VA = "0x110811C", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x11081DC", Offset = "0x11081DC", VA = "0x11081DC")]
		public RemoveUnitByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000343")]
	public class RemoveWeaponByTag : IWeaponAction
	{
		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x11081E4", Offset = "0x11081E4", VA = "0x11081E4", Slot = "4")]
		public void Execute(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x11082A4", Offset = "0x11082A4", VA = "0x11082A4")]
		public RemoveWeaponByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	public class ReduceUnitHealthByTag : IUnitAction
	{
		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10548A4", Offset = "0x10548A4")]
		public float Percentage;

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1107E8C", Offset = "0x1107E8C", VA = "0x1107E8C", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1107F7C", Offset = "0x1107F7C", VA = "0x1107F7C")]
		public ReduceUnitHealthByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000345")]
	public class DebugUnitByTag : IUnitAction
	{
		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1107914", Offset = "0x1107914", VA = "0x1107914", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x11079C0", Offset = "0x11079C0", VA = "0x11079C0")]
		public DebugUnitByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000346")]
	public class ReducePlayerHealth : IAction, IPlayerAction
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10548BC", Offset = "0x10548BC")]
		public float Percentage;

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1107DC0", Offset = "0x1107DC0", VA = "0x1107DC0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1107E44", Offset = "0x1107E44", VA = "0x1107E44", Slot = "5")]
		public void Execute(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1107E7C", Offset = "0x1107E7C", VA = "0x1107E7C")]
		public ReducePlayerHealth()
		{
		}
	}
}
namespace Peacemaker.Interaction
{
	[Serializable]
	[Token(Token = "0x2000347")]
	public class ChangeThrowBehaviour : GenericEvent, IAction
	{
		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PickableObject pickableObject;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetThrowBehaviour throwBehaviour;

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x112F55C", Offset = "0x112F55C", VA = "0x112F55C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x112F57C", Offset = "0x112F57C", VA = "0x112F57C")]
		public ChangeThrowBehaviour()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class ReleaseFromHand : GenericEvent, IAction
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand playerHand;

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x112F8A8", Offset = "0x112F8A8", VA = "0x112F8A8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x112F8C4", Offset = "0x112F8C4", VA = "0x112F8C4")]
		public ReleaseFromHand()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class ReleaseEvent : GenericEvent, IAction
	{
		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C72C", Offset = "0x104C72C")]
		private sealed class <DoReleaseAtEndOfFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPicking picking;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PickableObject po;

			[Token(Token = "0x1700015A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F07")]
				[Address(RVA = "0x112F838", Offset = "0x112F838", VA = "0x112F838", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F09")]
				[Address(RVA = "0x112F8A0", Offset = "0x112F8A0", VA = "0x112F8A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x112F6F0", Offset = "0x112F6F0", VA = "0x112F6F0")]
			[DebuggerHidden]
			public <DoReleaseAtEndOfFrame>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x112F724", Offset = "0x112F724", VA = "0x112F724", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x112F728", Offset = "0x112F728", VA = "0x112F728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x112F840", Offset = "0x112F840", VA = "0x112F840", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PickableObject pickableObject;

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x112F584", Offset = "0x112F584", VA = "0x112F584", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x112F674", Offset = "0x112F674", VA = "0x112F674")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B628", Offset = "0x105B628")]
		private IEnumerator DoReleaseAtEndOfFrame(IPicking picking, PickableObject po, Vector3 initialPosition)
		{
			return null;
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x112F71C", Offset = "0x112F71C", VA = "0x112F71C")]
		public ReleaseEvent()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class AllowHandPickUp : GenericEvent, IAction
	{
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand playerHand;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool val;

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x112F534", Offset = "0x112F534", VA = "0x112F534", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x112F554", Offset = "0x112F554", VA = "0x112F554")]
		public AllowHandPickUp()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034C")]
	public class ActivateLift : GenericEvent, IAction
	{
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LiftMovement Lift;

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x112F454", Offset = "0x112F454", VA = "0x112F454", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x112F52C", Offset = "0x112F52C", VA = "0x112F52C")]
		public ActivateLift()
		{
		}
	}
}
namespace Peacemaker.Haptic
{
	[Serializable]
	[Token(Token = "0x200034D")]
	public class HapticEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BooleanValueData HapticsSettings;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float HapticLength;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve HapticFrequency;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve HapticAmplitude;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool useHaptics;

		[Token(Token = "0x400101C")]
		private const float precision = 0.1f;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1129EA4", Offset = "0x1129EA4", VA = "0x1129EA4", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1129FA8", Offset = "0x1129FA8", VA = "0x1129FA8")]
		public HapticEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	public class HapticDataEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticData Haptic;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float frequencyMult;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float amplitudeMult;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useHaptics;

		[Token(Token = "0x4001021")]
		private const float precision = 0.1f;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1129C0C", Offset = "0x1129C0C", VA = "0x1129C0C", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1129E9C", Offset = "0x1129E9C", VA = "0x1129E9C")]
		public HapticDataEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034F")]
	public class HapticSideEvent : GenericEvent, IAction, ICollisionAction
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side Side;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticData Haptic;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float frequencyMult;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float amplitudeMult;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool useHaptics;

		[Token(Token = "0x4001027")]
		private const float precision = 0.1f;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1129FB0", Offset = "0x1129FB0", VA = "0x1129FB0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x112A0F8", Offset = "0x112A0F8", VA = "0x112A0F8", Slot = "6")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x112A104", Offset = "0x112A104", VA = "0x112A104")]
		public HapticSideEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	public class StartContinuousHapticSideEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C73C", Offset = "0x104C73C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x112ADC4", Offset = "0x112ADC4", VA = "0x112ADC4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x112ADDC", Offset = "0x112ADDC", VA = "0x112ADDC")]
			internal bool <Execute>b__0(ContinuousHaptic h)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticData Haptic;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interval;

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x112AB3C", Offset = "0x112AB3C", VA = "0x112AB3C", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x112ADCC", Offset = "0x112ADCC", VA = "0x112ADCC")]
		public StartContinuousHapticSideEvent()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class StopContinuousHapticSideEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C74C", Offset = "0x104C74C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x112AF90", Offset = "0x112AF90", VA = "0x112AF90")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x112AFA0", Offset = "0x112AFA0", VA = "0x112AFA0")]
			internal bool <Execute>b__0(ContinuousHaptic h)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticData Haptic;

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x112AE00", Offset = "0x112AE00", VA = "0x112AE00", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x112AF98", Offset = "0x112AF98", VA = "0x112AF98")]
		public StopContinuousHapticSideEvent()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public static class HapticBaseEvent
	{
		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C75C", Offset = "0x104C75C")]
		private sealed class <DoPlayOVRCurve>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve HapticFrequency;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float HapticLength;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve HapticAmplitude;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Side side;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <frequencyMult>5__2;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <amplitudeMult>5__3;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private OVRInput.Controller <controller>5__4;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AssetVRInputDeviceGroup <inputDevice>5__5;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <i>5__6;

			[Token(Token = "0x1700015C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F21")]
				[Address(RVA = "0x1129B9C", Offset = "0x1129B9C", VA = "0x1129B9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F23")]
				[Address(RVA = "0x1129C04", Offset = "0x1129C04", VA = "0x1129C04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x11296E8", Offset = "0x11296E8", VA = "0x11296E8")]
			[DebuggerHidden]
			public <DoPlayOVRCurve>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x1129714", Offset = "0x1129714", VA = "0x1129714", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x1129718", Offset = "0x1129718", VA = "0x1129718", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x1129BA4", Offset = "0x1129BA4", VA = "0x1129BA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x1129530", Offset = "0x1129530", VA = "0x1129530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B6DC", Offset = "0x105B6DC")]
		public static IEnumerator DoPlayOVRCurve(float HapticLength, AnimationCurve HapticFrequency, AnimationCurve HapticAmplitude, Side side)
		{
			return null;
		}
	}
	[Token(Token = "0x2000356")]
	public class EnterLeaveSideState : ISideState
	{
		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ISideAction> enterSideAction;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ISideAction> leaveSideAction;

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x112962C", Offset = "0x112962C", VA = "0x112962C", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1129640", Offset = "0x1129640", VA = "0x1129640", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1129644", Offset = "0x1129644", VA = "0x1129644", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1129658", Offset = "0x1129658", VA = "0x1129658")]
		public EnterLeaveSideState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000357")]
	public class HapticWeaponEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C76C", Offset = "0x104C76C")]
		private sealed class <DoPlayOVRCurve>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Side side;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticWeaponEvent <>4__this;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private OVRInput.Controller <controller>5__2;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <i>5__3;

			[Token(Token = "0x1700015E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F2E")]
				[Address(RVA = "0x112A578", Offset = "0x112A578", VA = "0x112A578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F30")]
				[Address(RVA = "0x112A5E0", Offset = "0x112A5E0", VA = "0x112A5E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x112A37C", Offset = "0x112A37C", VA = "0x112A37C")]
			[DebuggerHidden]
			public <DoPlayOVRCurve>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x112A3B0", Offset = "0x112A3B0", VA = "0x112A3B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x112A3B4", Offset = "0x112A3B4", VA = "0x112A3B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x112A580", Offset = "0x112A580", VA = "0x112A580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon Weapon;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BooleanValueData HapticsSettings;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WeaponData profile;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float frequencyMult;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float amplitudeMult;

		[Token(Token = "0x400103F")]
		private const float precision = 0.1f;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool useHaptics;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x112A10C", Offset = "0x112A10C", VA = "0x112A10C", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x112A2FC", Offset = "0x112A2FC", VA = "0x112A2FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B790", Offset = "0x105B790")]
		private IEnumerator DoPlayOVRCurve(Side side)
		{
			return null;
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x112A3A8", Offset = "0x112A3A8", VA = "0x112A3A8")]
		public HapticWeaponEvent()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class ContinuousHaptic : MonoBehaviour
	{
		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticData haptic;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Side side;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float updateInterval;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastUpdate;

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1129420", Offset = "0x1129420", VA = "0x1129420")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x11295C8", Offset = "0x11295C8", VA = "0x11295C8")]
		public ContinuousHaptic()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class HapticsDebugVisualizer : MonoBehaviour
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HapticsDebugVisualizer instance;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float leftAmplitude;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float rightAmplitude;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture2D _staticRectTexture;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GUIStyle _staticRectStyle;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float smoothVal;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float smoothLeftAmplitude;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float smoothRightAmplitude;

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x112A5E8", Offset = "0x112A5E8", VA = "0x112A5E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x112A650", Offset = "0x112A650", VA = "0x112A650")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x112A90C", Offset = "0x112A90C", VA = "0x112A90C")]
		public static void GUIDrawRect(Rect position, Color color)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1129B80", Offset = "0x1129B80", VA = "0x1129B80")]
		internal void Set(float amplitude, Side side)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x112AB2C", Offset = "0x112AB2C", VA = "0x112AB2C")]
		public HapticsDebugVisualizer()
		{
		}
	}
}
namespace Peacemaker.Graphics
{
	[Token(Token = "0x200035B")]
	public class OverwriteMaterialState_Float : GenericEvent, IAction, IUnitAction
	{
		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialFloatParameter floatParam;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float val;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool useCurve;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x10548D4", Offset = "0x10548D4")]
		public AnimationCurve curve;

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x11244F8", Offset = "0x11244F8", VA = "0x11244F8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1124604", Offset = "0x1124604", VA = "0x1124604", Slot = "6")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1124610", Offset = "0x1124610", VA = "0x1124610")]
		public OverwriteMaterialState_Float()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class OverwriteMaterialState_Color : GenericEvent, IAction, IUnitAction
	{
		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color val;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x11243F0", Offset = "0x11243F0", VA = "0x11243F0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x11244E4", Offset = "0x11244E4", VA = "0x11244E4", Slot = "6")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x11244F0", Offset = "0x11244F0", VA = "0x11244F0")]
		public OverwriteMaterialState_Color()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class OverwriteMaterialState_Gradient : GenericEvent, IAction, IUnitAction
	{
		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient val;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x1124618", Offset = "0x1124618", VA = "0x1124618", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x1124718", Offset = "0x1124718", VA = "0x1124718", Slot = "6")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x1124724", Offset = "0x1124724", VA = "0x1124724")]
		public OverwriteMaterialState_Gradient()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class EventState : IState
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IAction> enterEvents;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IAction> exitEvents;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1123D34", Offset = "0x1123D34", VA = "0x1123D34", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1123D48", Offset = "0x1123D48", VA = "0x1123D48", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1123D64", Offset = "0x1123D64", VA = "0x1123D64", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1123D78", Offset = "0x1123D78", VA = "0x1123D78")]
		public EventState()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class MaterialState : IState
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient val;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054910", Offset = "0x1054910")]
		public float stopPosition;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool affectSpecificMaterial;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1054948", Offset = "0x1054948")]
		public List<string> specificMaterials;

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1123EF8", Offset = "0x1123EF8", VA = "0x1123EF8", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1124000", Offset = "0x1124000", VA = "0x1124000", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x112400C", Offset = "0x112400C", VA = "0x112400C", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x11240F4", Offset = "0x11240F4", VA = "0x11240F4")]
		public MaterialState()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class MaterialState_Float : IState
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialFloatParameter param;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float val;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054984", Offset = "0x1054984")]
		public float stopPosition;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool affectSpecificMaterial;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x10549BC", Offset = "0x10549BC")]
		public List<string> specificMaterials;

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x1124170", Offset = "0x1124170", VA = "0x1124170", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1124278", Offset = "0x1124278", VA = "0x1124278", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1124284", Offset = "0x1124284", VA = "0x1124284", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x112436C", Offset = "0x112436C", VA = "0x112436C")]
		public MaterialState_Float()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class EnterMaterialState_Gradient : GenericEvent, IAction
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient val;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10549F8", Offset = "0x10549F8")]
		public float stopPosition;

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1123C28", Offset = "0x1123C28", VA = "0x1123C28", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1123D20", Offset = "0x1123D20", VA = "0x1123D20")]
		public EnterMaterialState_Gradient()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class ExitMaterialState_Gradient : GenericEvent, IAction
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1123E08", Offset = "0x1123E08", VA = "0x1123E08", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1123EF0", Offset = "0x1123EF0", VA = "0x1123EF0")]
		public ExitMaterialState_Gradient()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class OverwriteMaterialState_Texture : GenericEvent, IAction
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialTextureParameter param;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture val;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x112472C", Offset = "0x112472C", VA = "0x112472C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x112481C", Offset = "0x112481C", VA = "0x112481C")]
		public OverwriteMaterialState_Texture()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class OverwriteMaterialState_TwoColors : GenericEvent, IAction
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture colorTexture;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color lineColor;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1124824", Offset = "0x1124824", VA = "0x1124824", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1124A18", Offset = "0x1124A18", VA = "0x1124A18")]
		public OverwriteMaterialState_TwoColors()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class SetBlendShapeValue : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int shapeKeyIndex;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float multiplicator;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1124A20", Offset = "0x1124A20", VA = "0x1124A20", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1124A4C", Offset = "0x1124A4C", VA = "0x1124A4C")]
		public SetBlendShapeValue()
		{
		}
	}
}
namespace Peacemaker.DebugLog
{
	[Serializable]
	[Token(Token = "0x2000366")]
	public class DebugLog : GenericEvent, IAction
	{
		[Token(Token = "0x2000367")]
		public enum DebugType
		{
			[Token(Token = "0x400107F")]
			Info,
			[Token(Token = "0x4001080")]
			Warning,
			[Token(Token = "0x4001081")]
			Error
		}

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public string Text;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideLabel]
		public DebugType Type;

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x11320EC", Offset = "0x11320EC", VA = "0x11320EC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x11321EC", Offset = "0x11321EC", VA = "0x11321EC")]
		public DebugLog()
		{
		}
	}
}
namespace Peacemaker.Physic
{
	[Serializable]
	[Token(Token = "0x2000368")]
	public class IgnoreCollisionTag : GenericCollisionEvent
	{
		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x1054A50", Offset = "0x1054A50")]
		public string Tag;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054A88", Offset = "0x1054A88")]
		public List<Collider> Collider;

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1110920", Offset = "0x1110920", VA = "0x1110920", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1110A58", Offset = "0x1110A58", VA = "0x1110A58")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1110AA4", Offset = "0x1110AA4", VA = "0x1110AA4")]
		public IgnoreCollisionTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000369")]
	public class AddRelativeForce : GenericEvent, IAction
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Direction;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Strength;

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1110874", Offset = "0x1110874", VA = "0x1110874", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1110918", Offset = "0x1110918", VA = "0x1110918")]
		public AddRelativeForce()
		{
		}
	}
}
namespace Peacemaker.AchievementEvents
{
	[Serializable]
	[Token(Token = "0x200036A")]
	public class UnlockAchievement : GenericEvent, IAction
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementUnlockData Unlock;

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x11DE5F4", Offset = "0x11DE5F4", VA = "0x11DE5F4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x11DE6B0", Offset = "0x11DE6B0", VA = "0x11DE6B0")]
		public UnlockAchievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036B")]
	public class ProgressAchievement : GenericEvent, IAction
	{
		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementProgressData Progress;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x11DE52C", Offset = "0x11DE52C", VA = "0x11DE52C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x11DE5EC", Offset = "0x11DE5EC", VA = "0x11DE5EC")]
		public ProgressAchievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036C")]
	public class HasAchievement : ICondition
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementUnlockData Unlock;

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x11DE464", Offset = "0x11DE464", VA = "0x11DE464", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x11DE524", Offset = "0x11DE524", VA = "0x11DE524")]
		public HasAchievement()
		{
		}
	}
}
namespace Peacemaker.UI
{
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104C77C", Offset = "0x104C77C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C77C", Offset = "0x104C77C")]
	public class OnMultToggleEvent : GenericEventEmitter
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054AC0", Offset = "0x1054AC0")]
		public List<ValueEvent> valueEvents;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Toggle toggle;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<OnMultToggleEvent> relatedToggleEvents;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ValueData Index;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ScriptableObject Value;

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x10DC3C4", Offset = "0x10DC3C4", VA = "0x10DC3C4", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x10DC690", Offset = "0x10DC690", VA = "0x10DC690")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x10DC560", Offset = "0x10DC560", VA = "0x10DC560")]
		public void OnValueChanged(ValueData index, object value)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x10DC780", Offset = "0x10DC780", VA = "0x10DC780")]
		private void OnToggle(bool value)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x10DC7E4", Offset = "0x10DC7E4", VA = "0x10DC7E4")]
		public OnMultToggleEvent()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C804", Offset = "0x104C804")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104C804", Offset = "0x104C804")]
	public class OnToggleEvent : GenericEventEmitter
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054AF8", Offset = "0x1054AF8")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1054AF8", Offset = "0x1054AF8")]
		public List<IAction> Actions;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054B68", Offset = "0x1054B68")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1054B68", Offset = "0x1054B68")]
		[InlineProperty]
		public List<IBoolAction> ToggleActions;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1054BD8", Offset = "0x1054BD8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054BD8", Offset = "0x1054BD8")]
		[InlineProperty]
		public List<GenericBooleanEvent> EventsBoolean;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054C48", Offset = "0x1054C48")]
		public ValueData Index;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Toggle toggle;

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x10DC87C", Offset = "0x10DC87C", VA = "0x10DC87C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x10DC8D4", Offset = "0x10DC8D4", VA = "0x10DC8D4", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x10DCC04", Offset = "0x10DCC04", VA = "0x10DCC04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x10DCA90", Offset = "0x10DCA90", VA = "0x10DCA90")]
		private void Instance_OnValueChanged(ValueData index, object value)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x10DCCF4", Offset = "0x10DCCF4", VA = "0x10DCCF4")]
		private void OnToggle(bool value)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x10DCF0C", Offset = "0x10DCF0C", VA = "0x10DCF0C")]
		public OnToggleEvent()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class ShowIntegerValueOnUI : IntegerValueEvent
	{
		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text label;

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x10DD804", Offset = "0x10DD804", VA = "0x10DD804", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x10DD8C8", Offset = "0x10DD8C8", VA = "0x10DD8C8")]
		public ShowIntegerValueOnUI()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class DailyRunButton : MonoBehaviour
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x17000160")]
		public static string DailySeedKey
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x10DC1E0", Offset = "0x10DC1E0", VA = "0x10DC1E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x10DC16C", Offset = "0x10DC16C", VA = "0x10DC16C")]
		public void StoreCurrentDailySeed()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x10DC278", Offset = "0x10DC278", VA = "0x10DC278")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x10DC314", Offset = "0x10DC314", VA = "0x10DC314")]
		private void CheckButtonInteractable()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x10DC3B4", Offset = "0x10DC3B4", VA = "0x10DC3B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x10DC3B8", Offset = "0x10DC3B8", VA = "0x10DC3B8")]
		public DailyRunButton()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x10DC3C0", Offset = "0x10DC3C0", VA = "0x10DC3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B844", Offset = "0x105B844")]
		private void <Start>b__2_0()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class PullTextFromUrl : MonoBehaviour
	{
		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C88C", Offset = "0x104C88C")]
		private sealed class <DoCheck>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PullTextFromUrl <>4__this;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WWW <w>5__2;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F7E")]
				[Address(RVA = "0x10DD2C0", Offset = "0x10DD2C0", VA = "0x10DD2C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F80")]
				[Address(RVA = "0x10DD328", Offset = "0x10DD328", VA = "0x10DD328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x10DD0A8", Offset = "0x10DD0A8", VA = "0x10DD0A8")]
			[DebuggerHidden]
			public <DoCheck>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x10DD0DC", Offset = "0x10DD0DC", VA = "0x10DD0DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x10DD0E0", Offset = "0x10DD0E0", VA = "0x10DD0E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x10DD2C8", Offset = "0x10DD2C8", VA = "0x10DD2C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string url;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpro;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x10DCFCC", Offset = "0x10DCFCC", VA = "0x10DCFCC")]
		public void Start()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x10DD038", Offset = "0x10DD038", VA = "0x10DD038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B854", Offset = "0x105B854")]
		private IEnumerator DoCheck()
		{
			return null;
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x10DD0D4", Offset = "0x10DD0D4", VA = "0x10DD0D4")]
		public PullTextFromUrl()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class SetLanguageBasedOnGlobalSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C89C", Offset = "0x104C89C")]
		private sealed class <>c
		{
			[Token(Token = "0x400109F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LanguageData, bool> <>9__2_0;

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x10DD7C8", Offset = "0x10DD7C8", VA = "0x10DD7C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x10DD7D0", Offset = "0x10DD7D0", VA = "0x10DD7D0")]
			internal bool <Start>b__2_0(LanguageData it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageEnumValueData LanguageData;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BooleanValueData FirstStart;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x10DD330", Offset = "0x10DD330", VA = "0x10DD330")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x10DD57C", Offset = "0x10DD57C", VA = "0x10DD57C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x10DD66C", Offset = "0x10DD66C", VA = "0x10DD66C")]
		private void Instance_OnValueChanged(ValueData key, object arg2)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x10DD75C", Offset = "0x10DD75C", VA = "0x10DD75C")]
		public SetLanguageBasedOnGlobalSettings()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class UIVignette : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000376")]
		public class VignetteInfo
		{
			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0x1054D24", Offset = "0x1054D24")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0x1054D24", Offset = "0x1054D24")]
			public Sprite Image;

			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Strength;

			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x10DDEC4", Offset = "0x10DDEC4", VA = "0x10DDEC4")]
			public VignetteInfo()
			{
			}
		}

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UIVignette Instance;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054C80", Offset = "0x1054C80")]
		public Image Vignette;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054CB8", Offset = "0x1054CB8")]
		public EnumValueData ShowVignetteKey;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x1054CF0", Offset = "0x1054CF0")]
		public List<VignetteInfo> Vignettes;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeIn;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float FadeOut;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int showVignette;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float percentage;

		[Token(Token = "0x40010A9")]
		private const float tolerance = 0.1f;

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x10DDBA4", Offset = "0x10DDBA4", VA = "0x10DDBA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x10DDCA8", Offset = "0x10DDCA8", VA = "0x10DDCA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x10DDD98", Offset = "0x10DDD98", VA = "0x10DDD98")]
		private void Instance_OnValueChanged(ValueData valueKey, object val)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x10DD984", Offset = "0x10DD984", VA = "0x10DD984")]
		public void Show(float speed)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x10DDE48", Offset = "0x10DDE48", VA = "0x10DDE48")]
		public UIVignette()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class ShowVignette : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x10DD8D0", Offset = "0x10DD8D0", VA = "0x10DD8D0", Slot = "4")]
		public override void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x10DDB9C", Offset = "0x10DDB9C", VA = "0x10DDB9C")]
		public ShowVignette()
		{
		}
	}
}
namespace Peacemaker.Events
{
	[Token(Token = "0x2000378")]
	public class OnEnemyArrivalEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool wasInvisible;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform appearanceCenter;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x113F5C0", Offset = "0x113F5C0", VA = "0x113F5C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x113F734", Offset = "0x113F734", VA = "0x113F734")]
		public OnEnemyArrivalEvent()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class OnAlarmTriggeredEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1054D64", Offset = "0x1054D64")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054D64", Offset = "0x1054D64")]
		public List<GenericBooleanEvent> EventsBool;

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x113E9C8", Offset = "0x113E9C8", VA = "0x113E9C8", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x113EA78", Offset = "0x113EA78", VA = "0x113EA78")]
		private void Instance_OnAlarmTriggered(bool enabled)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x113EAC0", Offset = "0x113EAC0", VA = "0x113EAC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x113EBB0", Offset = "0x113EBB0", VA = "0x113EBB0")]
		public OnAlarmTriggeredEvent()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class OnAnyHoverEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CurvedUIInputModule inputModule;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[ReadOnly]
		public GameObject current;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x113EC20", Offset = "0x113EC20", VA = "0x113EC20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x113ED40", Offset = "0x113ED40", VA = "0x113ED40")]
		public OnAnyHoverEvent()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class OnChargeEvent : SerializedMonoBehaviour
	{
		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<IState> chargeStates;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ChargeBehaviour chargeBehaviour;

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x113ED48", Offset = "0x113ED48", VA = "0x113ED48")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x113EDA0", Offset = "0x113EDA0", VA = "0x113EDA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x113EE34", Offset = "0x113EE34", VA = "0x113EE34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x113EF0C", Offset = "0x113EF0C", VA = "0x113EF0C")]
		private void ChargeBehaviour_OnCharge(bool val)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x113EF4C", Offset = "0x113EF4C", VA = "0x113EF4C")]
		public OnChargeEvent()
		{
		}
	}
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C8AC", Offset = "0x104C8AC")]
	public class OnDisassembledEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RobotPart robotPart;

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x113EFBC", Offset = "0x113EFBC", VA = "0x113EFBC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x113F014", Offset = "0x113F014", VA = "0x113F014", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x113F0AC", Offset = "0x113F0AC", VA = "0x113F0AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x113F17C", Offset = "0x113F17C", VA = "0x113F17C")]
		private void RobotPart_OnDisassembled()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x113F188", Offset = "0x113F188", VA = "0x113F188")]
		public OnDisassembledEvent()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class OnDoorLockedEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DoorHandling door;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1054DE4", Offset = "0x1054DE4")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054DE4", Offset = "0x1054DE4")]
		public List<GenericBooleanEvent> EventsBoolean;

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x113F190", Offset = "0x113F190", VA = "0x113F190", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x113F320", Offset = "0x113F320", VA = "0x113F320")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x113F2D8", Offset = "0x113F2D8", VA = "0x113F2D8")]
		private void Door_OnDoorLocked(bool locked)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x113F3F8", Offset = "0x113F3F8", VA = "0x113F3F8")]
		public OnDoorLockedEvent()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class OnElevatorActivateEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LiftMovement elevator;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<GenericBooleanEvent> boolEvents;

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x113F468", Offset = "0x113F468", VA = "0x113F468", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x113F508", Offset = "0x113F508", VA = "0x113F508")]
		private void Elevator_OnActivateLift(bool val)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x113F550", Offset = "0x113F550", VA = "0x113F550")]
		public OnElevatorActivateEvent()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class OnInventoryErrorEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExtendedInventorySlot slot;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<IPickable> pickables;

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x113F73C", Offset = "0x113F73C", VA = "0x113F73C", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x113F88C", Offset = "0x113F88C", VA = "0x113F88C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x113F9FC", Offset = "0x113F9FC", VA = "0x113F9FC")]
		private void Slot_OnSlotHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x113FAE8", Offset = "0x113FAE8", VA = "0x113FAE8")]
		public OnInventoryErrorEvent()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class OnInventorySlotHoverEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0x1054E44", Offset = "0x1054E44")]
		[AttributeAttribute(Name = "PropertyOrderAttribute", RVA = "0x1054E44", Offset = "0x1054E44")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054E44", Offset = "0x1054E44")]
		[InlineProperty]
		public List<GenericEvent> endEvents;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "PropertyOrderAttribute", RVA = "0x1054EE4", Offset = "0x1054EE4")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1054EE4", Offset = "0x1054EE4")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0x1054EE4", Offset = "0x1054EE4")]
		public List<ISideAction> sideActions;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[ReadOnly]
		public ExtendedInventorySlot slot;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<IPickable> pickables;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool prevState;

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x113FB58", Offset = "0x113FB58", VA = "0x113FB58", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x113FC0C", Offset = "0x113FC0C", VA = "0x113FC0C")]
		private void Slot_OnHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x113FF18", Offset = "0x113FF18", VA = "0x113FF18")]
		public OnInventorySlotHoverEvent()
		{
		}
	}
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C8E4", Offset = "0x104C8E4")]
	public class OnLevelTimePassedEvent : GenericEventEmitter
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x113FFD8", Offset = "0x113FFD8", VA = "0x113FFD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1140068", Offset = "0x1140068", VA = "0x1140068")]
		public OnLevelTimePassedEvent()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class OnShieldReflectEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shield shield;

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1140070", Offset = "0x1140070", VA = "0x1140070", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1140110", Offset = "0x1140110", VA = "0x1140110")]
		private void Shield_OnReflect(Rigidbody obj)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x114011C", Offset = "0x114011C", VA = "0x114011C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1140174", Offset = "0x1140174", VA = "0x1140174")]
		public OnShieldReflectEvent()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class OnSpawnOverseerEvent : GenericEventEmitter
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x114017C", Offset = "0x114017C", VA = "0x114017C")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1140304", Offset = "0x1140304", VA = "0x1140304")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x114048C", Offset = "0x114048C", VA = "0x114048C")]
		private void Instance_OnSpawnOverseer()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1140498", Offset = "0x1140498", VA = "0x1140498")]
		public OnSpawnOverseerEvent()
		{
		}
	}
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C91C", Offset = "0x104C91C")]
	public class OnSpiderLegChangeEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpiderMovement spiderMovement;

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x11404A0", Offset = "0x11404A0", VA = "0x11404A0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x11404F8", Offset = "0x11404F8", VA = "0x11404F8", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1140598", Offset = "0x1140598", VA = "0x1140598")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1140670", Offset = "0x1140670", VA = "0x1140670")]
		private void HandleLegChange(Transform leg)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x114067C", Offset = "0x114067C", VA = "0x114067C")]
		public OnSpiderLegChangeEvent()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class SpawnOverseerEvent : GenericEventEmitter
	{
		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float overseerApproachTime;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public float timer;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpawnOverseerEvent instance;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject overseer;

		[Token(Token = "0x14000031")]
		public event Action OnSpawnOverseer
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1140260", Offset = "0x1140260", VA = "0x1140260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B908", Offset = "0x105B908")]
			add
			{
			}
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x11403E8", Offset = "0x11403E8", VA = "0x11403E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B918", Offset = "0x105B918")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1141534", Offset = "0x1141534", VA = "0x1141534")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1141588", Offset = "0x1141588", VA = "0x1141588", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1141694", Offset = "0x1141694", VA = "0x1141694")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105B928", Offset = "0x105B928")]
		public void TestEmit()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x11416A0", Offset = "0x11416A0", VA = "0x11416A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x11416F8", Offset = "0x11416F8", VA = "0x11416F8")]
		public void TriggerOverseer()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x114173C", Offset = "0x114173C", VA = "0x114173C")]
		public SpawnOverseerEvent()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class TriggerOverseerArrival : GenericEvent
	{
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1141AD8", Offset = "0x1141AD8", VA = "0x1141AD8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1141BC0", Offset = "0x1141BC0", VA = "0x1141BC0")]
		public TriggerOverseerArrival()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class AnimationEvent : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boolName;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool boolValue;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x113C388", Offset = "0x113C388", VA = "0x113C388", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x113C420", Offset = "0x113C420", VA = "0x113C420", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x113C42C", Offset = "0x113C42C", VA = "0x113C42C")]
		public AnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class AnimationTriggerEvent : GenericEvent, IAction
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boolName;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x113C5B8", Offset = "0x113C5B8", VA = "0x113C5B8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x113C64C", Offset = "0x113C64C", VA = "0x113C64C")]
		public AnimationTriggerEvent()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class AnimationFloatEvent : GenericEvent, IAction
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string paramterName;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float parameterValue;

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x113C434", Offset = "0x113C434", VA = "0x113C434", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x113C4CC", Offset = "0x113C4CC", VA = "0x113C4CC")]
		public AnimationFloatEvent()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class AnimationMagazineSizeLeft : GenericEvent, IAction
	{
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon weapon;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string paramterName;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x113C4D4", Offset = "0x113C4D4", VA = "0x113C4D4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x113C5B0", Offset = "0x113C5B0", VA = "0x113C5B0")]
		public AnimationMagazineSizeLeft()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class AnimationBooleanEvent : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boolName;

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x113C20C", Offset = "0x113C20C", VA = "0x113C20C", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x113C324", Offset = "0x113C324", VA = "0x113C324")]
		public AnimationBooleanEvent()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class AnimationBooleanStateEvent : IState
	{
		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boolName;

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x113C32C", Offset = "0x113C32C", VA = "0x113C32C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x113C330", Offset = "0x113C330", VA = "0x113C330", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x113C358", Offset = "0x113C358", VA = "0x113C358", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x113C380", Offset = "0x113C380", VA = "0x113C380")]
		public AnimationBooleanStateEvent()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class ChangeLayerEvent : GenericEvent, IAction
	{
		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask layer;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> gameObjects;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x113C8A4", Offset = "0x113C8A4", VA = "0x113C8A4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x113C9F0", Offset = "0x113C9F0", VA = "0x113C9F0")]
		public ChangeLayerEvent()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class AddGoldEvent : GenericEvent
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueData goldKey;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int amount;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x113B990", Offset = "0x113B990", VA = "0x113B990", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x113B9F4", Offset = "0x113B9F4", VA = "0x113B9F4")]
		public AddGoldEvent()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class EnableGameObjectEvent : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool val;

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x113DA08", Offset = "0x113DA08", VA = "0x113DA08", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x113DA9C", Offset = "0x113DA9C", VA = "0x113DA9C", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x113DB30", Offset = "0x113DB30", VA = "0x113DB30")]
		public EnableGameObjectEvent()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class EnableAndDisableObjectEvent : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObjectEnable;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gameObjectDisable;

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x113D744", Offset = "0x113D744", VA = "0x113D744", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x113D824", Offset = "0x113D824", VA = "0x113D824", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x113D904", Offset = "0x113D904", VA = "0x113D904")]
		public EnableAndDisableObjectEvent()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class SetLocalScale : GenericEvent, IAction
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 scale;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1140BE4", Offset = "0x1140BE4", VA = "0x1140BE4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x1140C7C", Offset = "0x1140C7C", VA = "0x1140C7C")]
		public SetLocalScale()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class InstantiateGameObjectEvent : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x1054FAC", Offset = "0x1054FAC")]
		public bool useCustomParent;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1054FEC", Offset = "0x1054FEC")]
		public Transform customParent;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x113E4A4", Offset = "0x113E4A4", VA = "0x113E4A4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x113E6A0", Offset = "0x113E6A0", VA = "0x113E6A0", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x113E4A8", Offset = "0x113E4A8", VA = "0x113E4A8")]
		private void InstanciateGameObject(Transform emitter)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x113E6A4", Offset = "0x113E6A4", VA = "0x113E6A4")]
		public InstantiateGameObjectEvent()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class EnableGameObjectEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool invert;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x113DB38", Offset = "0x113DB38", VA = "0x113DB38", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x113DBF0", Offset = "0x113DBF0", VA = "0x113DBF0")]
		public EnableGameObjectEventBoolean()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class Unparent : GenericEvent, IAction
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1141F20", Offset = "0x1141F20", VA = "0x1141F20", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1141F40", Offset = "0x1141F40", VA = "0x1141F40")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class SetLocalRotation : GenericEvent, IAction
	{
		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localRotation;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1140AF4", Offset = "0x1140AF4", VA = "0x1140AF4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1140BDC", Offset = "0x1140BDC", VA = "0x1140BDC")]
		public SetLocalRotation()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class CopyGlobalRotation : GenericEvent, IAction
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform reference;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x113D42C", Offset = "0x113D42C", VA = "0x113D42C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x113D4D0", Offset = "0x113D4D0", VA = "0x113D4D0")]
		public CopyGlobalRotation()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class CopyGlobalPositionAndRotation : GenericEvent, IAction
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform reference;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x113D35C", Offset = "0x113D35C", VA = "0x113D35C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x113D424", Offset = "0x113D424", VA = "0x113D424")]
		public CopyGlobalPositionAndRotation()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class BooleanEvents : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GenericEvent> enableEvents;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GenericEvent> disableEvents;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x113C6F8", Offset = "0x113C6F8", VA = "0x113C6F8", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x113C718", Offset = "0x113C718", VA = "0x113C718")]
		public BooleanEvents()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class SetLocalPosition : GenericEvent, IAction
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPosition;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1140A54", Offset = "0x1140A54", VA = "0x1140A54", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1140AEC", Offset = "0x1140AEC", VA = "0x1140AEC")]
		public SetLocalPosition()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class ChangeMeshEvent : GenericEvent, IAction
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x113CA70", Offset = "0x113CA70", VA = "0x113CA70", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x113CB04", Offset = "0x113CB04", VA = "0x113CB04")]
		public ChangeMeshEvent()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class ChangeMeshSecEvent : GenericEvent, IAction
	{
		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C954", Offset = "0x104C954")]
		private sealed class <ChangeMeshForSec>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChangeMeshSecEvent <>4__this;

			[Token(Token = "0x17000163")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFE")]
				[Address(RVA = "0x113CD7C", Offset = "0x113CD7C", VA = "0x113CD7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000164")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001000")]
				[Address(RVA = "0x113CDE4", Offset = "0x113CDE4", VA = "0x113CDE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x113CC54", Offset = "0x113CC54", VA = "0x113CC54")]
			[DebuggerHidden]
			public <ChangeMeshForSec>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x113CC88", Offset = "0x113CC88", VA = "0x113CC88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x113CC8C", Offset = "0x113CC8C", VA = "0x113CC8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x113CD84", Offset = "0x113CD84", VA = "0x113CD84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int secToChange;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonoBehaviour targetMonoBehaviour;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh orgMesh;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x113CB0C", Offset = "0x113CB0C", VA = "0x113CB0C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x113CBE4", Offset = "0x113CBE4", VA = "0x113CBE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B938", Offset = "0x105B938")]
		private IEnumerator ChangeMeshForSec()
		{
			return null;
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x113CC80", Offset = "0x113CC80", VA = "0x113CC80")]
		public ChangeMeshSecEvent()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class ChangeSkinnedMeshEvent : GenericEvent, IAction
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer meshFilter;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x113CDEC", Offset = "0x113CDEC", VA = "0x113CDEC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x113CE80", Offset = "0x113CE80", VA = "0x113CE80")]
		public ChangeSkinnedMeshEvent()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class RotateLocal : GenericEvent, IAction
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localRotation;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1140684", Offset = "0x1140684", VA = "0x1140684", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1140754", Offset = "0x1140754", VA = "0x1140754")]
		public RotateLocal()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class ApplyLocalRotation : GenericEvent, IAction
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localRotation;

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x113C654", Offset = "0x113C654", VA = "0x113C654", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x113C6F0", Offset = "0x113C6F0", VA = "0x113C6F0")]
		public ApplyLocalRotation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A0")]
	public class ActiveSelf : GenericCondition
	{
		[Token(Token = "0x6001007")]
		[Address(RVA = "0x113B95C", Offset = "0x113B95C", VA = "0x113B95C", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x113B988", Offset = "0x113B988", VA = "0x113B988")]
		public ActiveSelf()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A1")]
	public class ToggleMeshEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh a;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh b;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1141A9C", Offset = "0x1141A9C", VA = "0x1141A9C", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1141AD0", Offset = "0x1141AD0", VA = "0x1141AD0")]
		public ToggleMeshEventBoolean()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A2")]
	public class EnableComponentEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour component;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool val;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x113D90C", Offset = "0x113D90C", VA = "0x113D90C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x113DA00", Offset = "0x113DA00", VA = "0x113DA00")]
		public EnableComponentEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A3")]
	public class ChangeCapsuleColliderHeight : GenericEvent, IAction
	{
		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CapsuleCollider collider;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float height;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x113C7A8", Offset = "0x113C7A8", VA = "0x113C7A8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x113C89C", Offset = "0x113C89C", VA = "0x113C89C")]
		public ChangeCapsuleColliderHeight()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A4")]
	public class SetParentEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Child;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Parent;

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1140C84", Offset = "0x1140C84", VA = "0x1140C84", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1140D78", Offset = "0x1140D78", VA = "0x1140D78")]
		public SetParentEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class StartRotation : GenericEvent, IAction
	{
		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RotateObject rotateObject;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startDelay;

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x11418C8", Offset = "0x11418C8", VA = "0x11418C8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x11418EC", Offset = "0x11418EC", VA = "0x11418EC")]
		public StartRotation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A6")]
	public class StopRotation : GenericEvent, IAction
	{
		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RotateObject rotateObject;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float stopDelay;

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x11418FC", Offset = "0x11418FC", VA = "0x11418FC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1141920", Offset = "0x1141920", VA = "0x1141920")]
		public StopRotation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A7")]
	public class SpawnExplosion : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExplosionForce explosionForce;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pivot;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1141354", Offset = "0x1141354", VA = "0x1141354", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x114152C", Offset = "0x114152C", VA = "0x114152C")]
		public SpawnExplosion()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class SavePrefsEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1140764", Offset = "0x1140764", VA = "0x1140764", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x11407C4", Offset = "0x11407C4", VA = "0x11407C4")]
		public SavePrefsEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A9")]
	public class HapticSuitEvent : GenericEvent, IAction, IAttackAction, ISideAction, IUnitAction
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticSuitData haptic;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Side side;

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x113E35C", Offset = "0x113E35C", VA = "0x113E35C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x113E408", Offset = "0x113E408", VA = "0x113E408", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x113E414", Offset = "0x113E414", VA = "0x113E414", Slot = "7")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x113E488", Offset = "0x113E488", VA = "0x113E488", Slot = "8")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x113E494", Offset = "0x113E494", VA = "0x113E494")]
		public HapticSuitEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class ConditionalDirectionBasedHapticSuitEvent : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<AssetInfoTag, HapticSuitData> haptics;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticSuitData fallback;

		[Token(Token = "0x4001112")]
		private const float playerBodyHeight = 0.671256f;

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x113CE88", Offset = "0x113CE88", VA = "0x113CE88", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x113D354", Offset = "0x113D354", VA = "0x113D354")]
		public ConditionalDirectionBasedHapticSuitEvent()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class DirectionBasedHapticSuitEvent : IAttackAction
	{
		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticSuitData haptic;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Side side;

		[Token(Token = "0x4001115")]
		private const float playerBodyHeight = 0.671256f;

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x113D4D8", Offset = "0x113D4D8", VA = "0x113D4D8", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x113D734", Offset = "0x113D734", VA = "0x113D734")]
		public DirectionBasedHapticSuitEvent()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class SpecificMultiplierState : IState
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialStateModificatorData materialStateModifier;

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x114174C", Offset = "0x114174C", VA = "0x114174C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1141804", Offset = "0x1141804", VA = "0x1141804", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1141808", Offset = "0x1141808", VA = "0x1141808", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x11418C0", Offset = "0x11418C0", VA = "0x11418C0")]
		public SpecificMultiplierState()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class MoveRigidbodyToPosition : GenericEvent
	{
		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C964", Offset = "0x104C964")]
		private sealed class <DoMoveTowards>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MoveRigidbodyToPosition <>4__this;

			[Token(Token = "0x17000165")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600102C")]
				[Address(RVA = "0x113E958", Offset = "0x113E958", VA = "0x113E958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000166")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600102E")]
				[Address(RVA = "0x113E9C0", Offset = "0x113E9C0", VA = "0x113E9C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x113E71C", Offset = "0x113E71C", VA = "0x113E71C")]
			[DebuggerHidden]
			public <DoMoveTowards>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x113E79C", Offset = "0x113E79C", VA = "0x113E79C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x113E7A0", Offset = "0x113E7A0", VA = "0x113E7A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0x113E960", Offset = "0x113E960", VA = "0x113E960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetPosition;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x113E6AC", Offset = "0x113E6AC", VA = "0x113E6AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B9EC", Offset = "0x105B9EC")]
		private IEnumerator DoMoveTowards()
		{
			return null;
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x113E748", Offset = "0x113E748", VA = "0x113E748", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x113E78C", Offset = "0x113E78C", VA = "0x113E78C")]
		public MoveRigidbodyToPosition()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class SetRigidbodyKinematic : GenericEvent
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rigidbody;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool val;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x1140D80", Offset = "0x1140D80", VA = "0x1140D80", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x1140E48", Offset = "0x1140E48", VA = "0x1140E48")]
		public SetRigidbodyKinematic()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class ShieldEvents : SerializedMonoBehaviour
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<GenericFloatEvent> animationEvents;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<GenericFloatEvent> deteriorateEvents;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<GenericEvent> activatedEvents;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<GenericEvent> deactivatedEvents;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<GenericEvent> startActivatedEvents;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<GenericEvent> startDeactivatedEvents;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<GenericEvent> failActivationEvents;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<GenericEvent> ReflectionEvents;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shield shieldWeapon;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1140F5C", Offset = "0x1140F5C", VA = "0x1140F5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x11411F8", Offset = "0x11411F8", VA = "0x11411F8")]
		private void ShieldWeapon_OnFailActivation()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1141224", Offset = "0x1141224", VA = "0x1141224")]
		private void ShieldWeapon_OnReflect(Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1141250", Offset = "0x1141250", VA = "0x1141250")]
		private void ShieldWeapon_OnDeteriorate(float val)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x114128C", Offset = "0x114128C", VA = "0x114128C")]
		private void ShieldWeapon_OnStartDeactivation()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x11412B8", Offset = "0x11412B8", VA = "0x11412B8")]
		private void ShieldWeapon_OnStartActivation()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x11412E4", Offset = "0x11412E4", VA = "0x11412E4")]
		private void ShieldWeapon_OnAnimate(float progress)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1141320", Offset = "0x1141320", VA = "0x1141320")]
		private void ShieldWeapon_OnActivate()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x11411CC", Offset = "0x11411CC", VA = "0x11411CC")]
		private void ShieldWeapon_OnDeactivate()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x114134C", Offset = "0x114134C", VA = "0x114134C")]
		public ShieldEvents()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class TriggerOverseerEvent : GenericEvent, IAction
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1141BC8", Offset = "0x1141BC8", VA = "0x1141BC8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1141C64", Offset = "0x1141C64", VA = "0x1141C64")]
		public TriggerOverseerEvent()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class FinishTutorialEvent : GenericEvent
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialPoint tutorialPoint;

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x113DBF8", Offset = "0x113DBF8", VA = "0x113DBF8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x113DC14", Offset = "0x113DC14", VA = "0x113DC14")]
		public FinishTutorialEvent()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class SetColorByGradient : GenericFloatEvent
	{
		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpriteRenderer spriteRenderer;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image image;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x114087C", Offset = "0x114087C", VA = "0x114087C", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x114099C", Offset = "0x114099C", VA = "0x114099C")]
		public SetColorByGradient()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class SetFilledAmount : GenericFloatEvent
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x11409A4", Offset = "0x11409A4", VA = "0x11409A4", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1140A4C", Offset = "0x1140A4C", VA = "0x1140A4C")]
		public SetFilledAmount()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class SetAggroAmount : GenericFloatEvent
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIAggroMesh Aggro;

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x11407CC", Offset = "0x11407CC", VA = "0x11407CC", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1140874", Offset = "0x1140874", VA = "0x1140874")]
		public SetAggroAmount()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class SetSlowMotionValue : GenericEvent, IAction
	{
		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeScale;

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1140F40", Offset = "0x1140F40", VA = "0x1140F40", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1140F4C", Offset = "0x1140F4C", VA = "0x1140F4C")]
		public SetSlowMotionValue()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class AddToGameObjectDependingOnTagPrefabs : IState
	{
		[Serializable]
		[Token(Token = "0x20003B8")]
		public struct ApplySpecificGameObject
		{
			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string tag;

			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject GameObject;

			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject appliedGameObjectPrefab;
		}

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C974", Offset = "0x104C974")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parentObject;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AddToGameObjectDependingOnTagPrefabs <>4__this;

			[Token(Token = "0x600104B")]
			[Address(RVA = "0x113BFA0", Offset = "0x113BFA0", VA = "0x113BFA0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x113C144", Offset = "0x113C144", VA = "0x113C144")]
			internal void <Enter>b__0(ApplySpecificGameObject specificGameObject)
			{
			}
		}

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<ApplySpecificGameObject> _applySpecificGameObjects;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject defaultAppliedGameObjectPrefab;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x1055048", Offset = "0x1055048")]
		private Dictionary<int, GameObject> _gameObjectInstances;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 _vector3Offset;

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x113BD48", Offset = "0x113BD48", VA = "0x113BD48", Slot = "5")]
		public void Enter(Transform parentObject)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x113BFA8", Offset = "0x113BFA8", VA = "0x113BFA8", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x113BFAC", Offset = "0x113BFAC", VA = "0x113BFAC", Slot = "6")]
		public void Leave(Transform parentObject)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x113C0AC", Offset = "0x113C0AC", VA = "0x113C0AC")]
		public AddToGameObjectDependingOnTagPrefabs()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class AddToGameObject : IState
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject _gameObjectPrefab;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dictionary<int, GameObject> _gameObjectInstances;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 _vector3Offset;

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x113B9FC", Offset = "0x113B9FC", VA = "0x113B9FC", Slot = "5")]
		public void Enter(Transform parentObject)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x113BBD4", Offset = "0x113BBD4", VA = "0x113BBD4", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x113BBD8", Offset = "0x113BBD8", VA = "0x113BBD8", Slot = "6")]
		public void Leave(Transform parentObject)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x113BCD8", Offset = "0x113BCD8", VA = "0x113BCD8")]
		public AddToGameObject()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class TimeState : IState
	{
		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float val;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1141930", Offset = "0x1141930", VA = "0x1141930", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x11419B0", Offset = "0x11419B0", VA = "0x11419B0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x11419BC", Offset = "0x11419BC", VA = "0x11419BC", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1141A38", Offset = "0x1141A38", VA = "0x1141A38")]
		public TimeState()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class SetSlowMotionForLimitedTime : GenericEvent, IAction, IUnitAction
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeScale;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float duration;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1140E50", Offset = "0x1140E50", VA = "0x1140E50", Slot = "6")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1140E5C", Offset = "0x1140E5C", VA = "0x1140E5C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1140EDC", Offset = "0x1140EDC", VA = "0x1140EDC")]
		public SetSlowMotionForLimitedTime()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class TwoHandedWieldingBonus : MonoBehaviour
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform weaponBonus;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickableObject pickable;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1141C6C", Offset = "0x1141C6C", VA = "0x1141C6C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1141CFC", Offset = "0x1141CFC", VA = "0x1141CFC")]
		private void Start()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1141E04", Offset = "0x1141E04", VA = "0x1141E04")]
		private void Pickable_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1141E50", Offset = "0x1141E50", VA = "0x1141E50")]
		private void Pickable_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1141EBC", Offset = "0x1141EBC", VA = "0x1141EBC")]
		private void Update()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1141F18", Offset = "0x1141F18", VA = "0x1141F18")]
		public TwoHandedWieldingBonus()
		{
		}
	}
}
namespace Peacemaker.Events.Gameplay
{
	[Token(Token = "0x20003BE")]
	public class OpenDoorEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DoorHandling door;

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x113E018", Offset = "0x113E018", VA = "0x113E018", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x113E0E8", Offset = "0x113E0E8", VA = "0x113E0E8")]
		public OpenDoorEvent()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class UnlockAllNotes : GenericEvent, IAction
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetWorldProgression worldProgression;

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x113E1B0", Offset = "0x113E1B0", VA = "0x113E1B0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x113E354", Offset = "0x113E354", VA = "0x113E354")]
		public UnlockAllNotes()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class ResetDailyRun : GenericEvent, IAction
	{
		[Token(Token = "0x6001062")]
		[Address(RVA = "0x113E0F0", Offset = "0x113E0F0", VA = "0x113E0F0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x113E1A8", Offset = "0x113E1A8", VA = "0x113E1A8")]
		public ResetDailyRun()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class EnableBackground : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x6001064")]
		[Address(RVA = "0x113DC1C", Offset = "0x113DC1C", VA = "0x113DC1C", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x113DCD4", Offset = "0x113DCD4", VA = "0x113DCD4")]
		public EnableBackground()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class OnMeleeEventSlowMotion : GenericEvent, IUnitAction
	{
		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C984", Offset = "0x104C984")]
		private sealed class <DoExecuteSlowMotionForSeconds>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OnMeleeEventSlowMotion <>4__this;

			[Token(Token = "0x17000167")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106D")]
				[Address(RVA = "0x113DFA8", Offset = "0x113DFA8", VA = "0x113DFA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000168")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600106F")]
				[Address(RVA = "0x113E010", Offset = "0x113E010", VA = "0x113E010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600106A")]
			[Address(RVA = "0x113DDD4", Offset = "0x113DDD4", VA = "0x113DDD4")]
			[DebuggerHidden]
			public <DoExecuteSlowMotionForSeconds>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600106B")]
			[Address(RVA = "0x113DE60", Offset = "0x113DE60", VA = "0x113DE60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106C")]
			[Address(RVA = "0x113DE64", Offset = "0x113DE64", VA = "0x113DE64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600106E")]
			[Address(RVA = "0x113DFB0", Offset = "0x113DFB0", VA = "0x113DFB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10550DC", Offset = "0x10550DC")]
		[SerializeField]
		public float timeScaleParamter;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float SlomoTimeSec;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _meleeeventslowmotion;

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x113DCDC", Offset = "0x113DCDC", VA = "0x113DCDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x113DD90", Offset = "0x113DD90", VA = "0x113DD90", Slot = "5")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x113DD20", Offset = "0x113DD20", VA = "0x113DD20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BAA0", Offset = "0x105BAA0")]
		private IEnumerator DoExecuteSlowMotionForSeconds()
		{
			return null;
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x113DE00", Offset = "0x113DE00", VA = "0x113DE00")]
		public OnMeleeEventSlowMotion()
		{
		}
	}
}
namespace Peacemaker.Conditions
{
	[Token(Token = "0x20003C4")]
	public abstract class ValueCondition : GenericCondition, ICondition
	{
		[Token(Token = "0x20003C5")]
		public enum NumberOperator
		{
			[Token(Token = "0x4001155")]
			Equal,
			[Token(Token = "0x4001156")]
			LessEqual,
			[Token(Token = "0x4001157")]
			GreaterEqual,
			[Token(Token = "0x4001158")]
			Less,
			[Token(Token = "0x4001159")]
			Greater,
			[Token(Token = "0x400115A")]
			Unequal
		}

		[Token(Token = "0x20003C6")]
		public enum StringOperator
		{
			[Token(Token = "0x400115C")]
			Equal,
			[Token(Token = "0x400115D")]
			Unequal
		}

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x105512C", Offset = "0x105512C")]
		public ValueData Index;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1055188", Offset = "0x1055188")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x1055188", Offset = "0x1055188")]
		public NumberOperator NumberOp;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x105520C", Offset = "0x105520C")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x105520C", Offset = "0x105520C")]
		public StringOperator StringOp;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1055290", Offset = "0x1055290")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x1055290", Offset = "0x1055290")]
		public int IntValue;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1055314", Offset = "0x1055314")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x1055314", Offset = "0x1055314")]
		public float FloatValue;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1055398", Offset = "0x1055398")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x1055398", Offset = "0x1055398")]
		public string StringValue;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x105541C", Offset = "0x105541C")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x105541C", Offset = "0x105541C")]
		public bool BoolValue;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x10554A0", Offset = "0x10554A0")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x10554A0", Offset = "0x10554A0")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x10554A0", Offset = "0x10554A0")]
		[HideLabel]
		public string EnumValue;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideLabel]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0x1055548", Offset = "0x1055548")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1055548", Offset = "0x1055548")]
		public AssetDistrict DistrictValue;

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x10D369C", Offset = "0x10D369C", VA = "0x10D369C")]
		public bool CheckValue(GenericValues values)
		{
			return default(bool);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x10D3950", Offset = "0x10D3950", VA = "0x10D3950")]
		public bool CheckOperator(NumberOperator op, float value1, float value2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x10D39C0", Offset = "0x10D39C0", VA = "0x10D39C0")]
		public bool CheckOperator(StringOperator op, string value1, string value2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x10D39F4", Offset = "0x10D39F4", VA = "0x10D39F4")]
		public bool IsNumber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x10D3AAC", Offset = "0x10D3AAC", VA = "0x10D3AAC")]
		public bool IsInt()
		{
			return default(bool);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x10D3B30", Offset = "0x10D3B30", VA = "0x10D3B30")]
		public bool IsFloat()
		{
			return default(bool);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x10D3BB4", Offset = "0x10D3BB4", VA = "0x10D3BB4")]
		public bool IsEnum()
		{
			return default(bool);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x10D3C38", Offset = "0x10D3C38", VA = "0x10D3C38")]
		public bool IsString()
		{
			return default(bool);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x10D3CBC", Offset = "0x10D3CBC", VA = "0x10D3CBC")]
		public bool IsBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x10D3D40", Offset = "0x10D3D40", VA = "0x10D3D40")]
		public bool IsDistrict()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x10D3DC4", Offset = "0x10D3DC4", VA = "0x10D3DC4")]
		private List<string> EnumDropdown()
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x10D3E4C", Offset = "0x10D3E4C", VA = "0x10D3E4C")]
		protected ValueCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	public class IfCondition : GenericEvent, IAction
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10555CC", Offset = "0x10555CC")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10555CC", Offset = "0x10555CC")]
		public List<GenericCondition> Conditions;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105563C", Offset = "0x105563C")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105563C", Offset = "0x105563C")]
		public List<GenericEvent> events;

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x10D1554", Offset = "0x10D1554", VA = "0x10D1554", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x10D1730", Offset = "0x10D1730", VA = "0x10D1730")]
		public IfCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C8")]
	public class IfElseCondition : GenericEvent, IAction
	{
		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10556AC", Offset = "0x10556AC")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10556AC", Offset = "0x10556AC")]
		public List<GenericCondition> Conditions;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105571C", Offset = "0x105571C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105571C", Offset = "0x105571C")]
		[InlineProperty]
		public List<GenericEvent> ifEvents;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105578C", Offset = "0x105578C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105578C", Offset = "0x105578C")]
		public List<GenericEvent> elseEvents;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x10D1CE4", Offset = "0x10D1CE4", VA = "0x10D1CE4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x10D2014", Offset = "0x10D2014", VA = "0x10D2014")]
		public IfElseCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C9")]
	public class IfCollisionCondition : GenericCollisionEvent, ICollisionAction
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10557FC", Offset = "0x10557FC")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10557FC", Offset = "0x10557FC")]
		public List<GenericCollisionCondition> Conditions;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105586C", Offset = "0x105586C")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105586C", Offset = "0x105586C")]
		public List<GenericEvent> events;

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x10D1058", Offset = "0x10D1058", VA = "0x10D1058", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x10D123C", Offset = "0x10D123C", VA = "0x10D123C")]
		public IfCollisionCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	public class IfCollisionConditionCollisionEvent : GenericCollisionEvent
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10558DC", Offset = "0x10558DC")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10558DC", Offset = "0x10558DC")]
		public List<GenericCollisionCondition> Conditions;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105594C", Offset = "0x105594C")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105594C", Offset = "0x105594C")]
		public List<GenericCollisionEvent> collisionEvents;

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x10D12D4", Offset = "0x10D12D4", VA = "0x10D12D4", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x10D14BC", Offset = "0x10D14BC", VA = "0x10D14BC")]
		public IfCollisionConditionCollisionEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CB")]
	public class IfTriggerCondition : ITriggerAction
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10559BC", Offset = "0x10559BC")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10559BC", Offset = "0x10559BC")]
		[InlineProperty]
		public List<ITriggerCondition> Conditions;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055A2C", Offset = "0x1055A2C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055A2C", Offset = "0x1055A2C")]
		[InlineProperty]
		public List<ITriggerAction> events;

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x10D301C", Offset = "0x10D301C", VA = "0x10D301C", Slot = "4")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x10D32C4", Offset = "0x10D32C4", VA = "0x10D32C4")]
		public IfTriggerCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CC")]
	public class IfUnitCondition : IUnitAction
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055A9C", Offset = "0x1055A9C")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055A9C", Offset = "0x1055A9C")]
		public List<IUnitCondition> Conditions;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055B0C", Offset = "0x1055B0C")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055B0C", Offset = "0x1055B0C")]
		public List<IUnitAction> Actions;

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x10D335C", Offset = "0x10D335C", VA = "0x10D335C", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x10D3604", Offset = "0x10D3604", VA = "0x10D3604")]
		public IfUnitCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	public class IfSideCondition : ISideAction
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055B7C", Offset = "0x1055B7C")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055B7C", Offset = "0x1055B7C")]
		[InlineProperty]
		public List<ISideCondition> Conditions;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055BEC", Offset = "0x1055BEC")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055BEC", Offset = "0x1055BEC")]
		public List<ISideAction> Actions;

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x10D20CC", Offset = "0x10D20CC", VA = "0x10D20CC", Slot = "4")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x10D2374", Offset = "0x10D2374", VA = "0x10D2374")]
		public IfSideCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CE")]
	public class IfAttackCondition : IAttackAction
	{
		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055C5C", Offset = "0x1055C5C")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055C5C", Offset = "0x1055C5C")]
		public List<IAttackCondition> Conditions;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055CCC", Offset = "0x1055CCC")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055CCC", Offset = "0x1055CCC")]
		[InlineProperty]
		public List<IAttackAction> events;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055D3C", Offset = "0x1055D3C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055D3C", Offset = "0x1055D3C")]
		[InlineProperty]
		public List<IAttackAction> elseEvents;

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x10D0B40", Offset = "0x10D0B40", VA = "0x10D0B40", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x10D0FA0", Offset = "0x10D0FA0", VA = "0x10D0FA0")]
		public IfAttackCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CF")]
	public class IfElseAttackCondition : IAttackAction
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055DAC", Offset = "0x1055DAC")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055DAC", Offset = "0x1055DAC")]
		public List<IAttackCondition> Conditions;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055E1C", Offset = "0x1055E1C")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055E1C", Offset = "0x1055E1C")]
		[InlineProperty]
		public List<IAttackAction> IfActions;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055E8C", Offset = "0x1055E8C")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055E8C", Offset = "0x1055E8C")]
		public List<IAttackAction> ElseActions;

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x10D17C8", Offset = "0x10D17C8", VA = "0x10D17C8", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x10D1C2C", Offset = "0x10D1C2C", VA = "0x10D1C2C")]
		public IfElseAttackCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D0")]
	public class IfSideStateCondition : ISideState
	{
		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055EFC", Offset = "0x1055EFC")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055EFC", Offset = "0x1055EFC")]
		public List<ISideCondition> Conditions;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055F6C", Offset = "0x1055F6C")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055F6C", Offset = "0x1055F6C")]
		public List<ISideState> States;

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x10D240C", Offset = "0x10D240C", VA = "0x10D240C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x10D2410", Offset = "0x10D2410", VA = "0x10D2410", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x10D26BC", Offset = "0x10D26BC", VA = "0x10D26BC", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x10D2968", Offset = "0x10D2968", VA = "0x10D2968")]
		public IfSideStateCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D1")]
	public class IfTargetSideStateCondition : ITargetSideState
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1055FDC", Offset = "0x1055FDC")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1055FDC", Offset = "0x1055FDC")]
		[InlineProperty]
		public List<ITargetSideCondition> Conditions;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105604C", Offset = "0x105604C")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105604C", Offset = "0x105604C")]
		[InlineProperty]
		public List<ITargetSideState> States;

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x10D2A00", Offset = "0x10D2A00", VA = "0x10D2A00", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x10D2A04", Offset = "0x10D2A04", VA = "0x10D2A04", Slot = "5")]
		public void Enter(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x10D2CC4", Offset = "0x10D2CC4", VA = "0x10D2CC4", Slot = "6")]
		public void Leave(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x10D2F84", Offset = "0x10D2F84", VA = "0x10D2F84")]
		public IfTargetSideStateCondition()
		{
		}
	}
}
namespace Peacemaker.Stats
{
	[Serializable]
	[Token(Token = "0x20003D2")]
	public class CheckStat : ValueCondition
	{
		[Token(Token = "0x6001096")]
		[Address(RVA = "0x110271C", Offset = "0x110271C", VA = "0x110271C", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1102778", Offset = "0x1102778", VA = "0x1102778")]
		public CheckStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D3")]
	public class CheckGlobalStat : ValueCondition
	{
		[Token(Token = "0x6001098")]
		[Address(RVA = "0x11025B8", Offset = "0x11025B8", VA = "0x11025B8", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1102614", Offset = "0x1102614", VA = "0x1102614")]
		public CheckGlobalStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D4")]
	public class CheckProgressionStat : ValueCondition
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x110261C", Offset = "0x110261C", VA = "0x110261C", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1102678", Offset = "0x1102678", VA = "0x1102678")]
		public CheckProgressionStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D5")]
	public class CheckGameType : ICondition
	{
		[Token(Token = "0x20003D6")]
		public enum OperatorType
		{
			[Token(Token = "0x400117A")]
			Equal,
			[Token(Token = "0x400117B")]
			Unequal
		}

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OperatorType Operator;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SeedType SeedType;

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1102538", Offset = "0x1102538", VA = "0x1102538", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x11025B0", Offset = "0x11025B0", VA = "0x11025B0")]
		public CheckGameType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D7")]
	public class CheckSceneName : ICondition
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1102680", Offset = "0x1102680", VA = "0x1102680", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1102714", Offset = "0x1102714", VA = "0x1102714")]
		public CheckSceneName()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D8")]
	public class SetGlobalSettings : SetValueEvent, ITriggerAction, ICollisionAction
	{
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x11029B4", Offset = "0x11029B4", VA = "0x11029B4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1102A10", Offset = "0x1102A10", VA = "0x1102A10", Slot = "7")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1102A1C", Offset = "0x1102A1C", VA = "0x1102A1C", Slot = "8")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1102A28", Offset = "0x1102A28", VA = "0x1102A28")]
		public SetGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D9")]
	public class AddGlobalSettings : AddValueEvent, ITriggerAction, ICollisionAction
	{
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x1102304", Offset = "0x1102304", VA = "0x1102304", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1102360", Offset = "0x1102360", VA = "0x1102360", Slot = "7")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x110236C", Offset = "0x110236C", VA = "0x110236C", Slot = "8")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1102378", Offset = "0x1102378", VA = "0x1102378")]
		public AddGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DA")]
	public class SetFloatGlobalSettings : FloatValueEvent
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x11028CC", Offset = "0x11028CC", VA = "0x11028CC", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1102938", Offset = "0x1102938", VA = "0x1102938")]
		public SetFloatGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DB")]
	public class AddFloatGlobalSettings : FloatValueEvent
	{
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x110221C", Offset = "0x110221C", VA = "0x110221C", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1102288", Offset = "0x1102288", VA = "0x1102288")]
		public AddFloatGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DC")]
	public class SetIntegerGlobalSettings : IntegerValueEvent
	{
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1102A30", Offset = "0x1102A30", VA = "0x1102A30", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1102A9C", Offset = "0x1102A9C", VA = "0x1102A9C")]
		public SetIntegerGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DD")]
	public class AddIntegerGlobalSettings : IntegerValueEvent
	{
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x1102380", Offset = "0x1102380", VA = "0x1102380", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x11023EC", Offset = "0x11023EC", VA = "0x11023EC")]
		public AddIntegerGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DE")]
	public class SetStringGlobalSettings : StringValueEvent
	{
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x1102CC8", Offset = "0x1102CC8", VA = "0x1102CC8", Slot = "4")]
		public override void Execute(Transform emitter, string value)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x1102D34", Offset = "0x1102D34", VA = "0x1102D34")]
		public SetStringGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DF")]
	public class SetBooleanGlobalSettings : BooleanValueEvent
	{
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x11027E4", Offset = "0x11027E4", VA = "0x11027E4", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1102850", Offset = "0x1102850", VA = "0x1102850")]
		public SetBooleanGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E0")]
	public class SetMovementGlobalSettings : ValueEvent
	{
		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetMovementSettings value;

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x1102B18", Offset = "0x1102B18", VA = "0x1102B18", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1102B7C", Offset = "0x1102B7C", VA = "0x1102B7C")]
		public SetMovementGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E1")]
	public class ToggleBooleanGlobalSettings : BooleanValueEvent
	{
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x11031FC", Offset = "0x11031FC", VA = "0x11031FC", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1103258", Offset = "0x1103258", VA = "0x1103258")]
		public ToggleBooleanGlobalSettings()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class BoolValue
	{
		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1102530", Offset = "0x1102530", VA = "0x1102530")]
		public BoolValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E3")]
	public class SetProgressionSettings : SetValueEvent
	{
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1102B84", Offset = "0x1102B84", VA = "0x1102B84", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1102BE0", Offset = "0x1102BE0", VA = "0x1102BE0")]
		public SetProgressionSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public class AddProgressionSettings : AddValueEvent
	{
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1102468", Offset = "0x1102468", VA = "0x1102468", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x11024C4", Offset = "0x11024C4", VA = "0x11024C4")]
		public AddProgressionSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E5")]
	public class SetStat : SetValueEvent, IAction
	{
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1102BE8", Offset = "0x1102BE8", VA = "0x1102BE8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1102C44", Offset = "0x1102C44", VA = "0x1102C44")]
		public SetStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E6")]
	public class SetStatLocalized : SetValueEvent, IAction
	{
		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LString localizedAsset;

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1102C4C", Offset = "0x1102C4C", VA = "0x1102C4C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1102CC0", Offset = "0x1102CC0", VA = "0x1102CC0")]
		public SetStatLocalized()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E7")]
	public class AddStat : AddValueEvent, IAction
	{
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x11024CC", Offset = "0x11024CC", VA = "0x11024CC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1102528", Offset = "0x1102528", VA = "0x1102528")]
		public AddStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E8")]
	public class SetFloatStat : FloatValueEvent
	{
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1102940", Offset = "0x1102940", VA = "0x1102940", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x11029AC", Offset = "0x11029AC", VA = "0x11029AC")]
		public SetFloatStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public class AddFloatStat : FloatValueEvent
	{
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1102290", Offset = "0x1102290", VA = "0x1102290", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x11022FC", Offset = "0x11022FC", VA = "0x11022FC")]
		public AddFloatStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EA")]
	public class SetIntegerStat : IntegerValueEvent
	{
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1102AA4", Offset = "0x1102AA4", VA = "0x1102AA4", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1102B10", Offset = "0x1102B10", VA = "0x1102B10")]
		public SetIntegerStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EB")]
	public class AddIntegerStat : IntegerValueEvent
	{
		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x11023F4", Offset = "0x11023F4", VA = "0x11023F4", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1102460", Offset = "0x1102460", VA = "0x1102460")]
		public AddIntegerStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EC")]
	public class SetStringStat : StringValueEvent, IAttackAction
	{
		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<AssetInfoTag, LocalizationData> Tags;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnitDataInstance data;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1102D3C", Offset = "0x1102D3C", VA = "0x1102D3C", Slot = "4")]
		public override void Execute(Transform emitter, string value)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1102DA8", Offset = "0x1102DA8", VA = "0x1102DA8", Slot = "5")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1103014", Offset = "0x1103014", VA = "0x1103014")]
		public SetStringStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003ED")]
	public class SetBooleanStat : BooleanValueEvent
	{
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1102858", Offset = "0x1102858", VA = "0x1102858", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x11028C4", Offset = "0x11028C4", VA = "0x11028C4")]
		public SetBooleanStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EE")]
	public class ToggleBooleanStat : BooleanValueEvent
	{
		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1103260", Offset = "0x1103260", VA = "0x1103260", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x11032BC", Offset = "0x11032BC", VA = "0x11032BC")]
		public ToggleBooleanStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EF")]
	public class ResetStats : GenericEvent, IAction
	{
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1102780", Offset = "0x1102780", VA = "0x1102780", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x11027DC", Offset = "0x11027DC", VA = "0x11027DC")]
		public ResetStats()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class StatLabel : MonoBehaviour
	{
		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ValueData Stat;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Label;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object stat;

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1103084", Offset = "0x1103084", VA = "0x1103084")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x11031F4", Offset = "0x11031F4", VA = "0x11031F4")]
		public StatLabel()
		{
		}
	}
}
namespace Peacemaker.CollisionConditions
{
	[Token(Token = "0x20003F1")]
	public class HasTagCondition : GenericCollisionCondition
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x10560BC", Offset = "0x10560BC")]
		public string Tag;

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x10D0A6C", Offset = "0x10D0A6C", VA = "0x10D0A6C", Slot = "4")]
		public override bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x10D0AB0", Offset = "0x10D0AB0", VA = "0x10D0AB0")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x10D0AFC", Offset = "0x10D0AFC", VA = "0x10D0AFC")]
		public HasTagCondition()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class IsDeadCondition : GenericCollisionCondition
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitHealth unitHealth;

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x10D0B04", Offset = "0x10D0B04", VA = "0x10D0B04", Slot = "4")]
		public override bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x10D0B38", Offset = "0x10D0B38", VA = "0x10D0B38")]
		public IsDeadCondition()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class HasLayerCondition : GenericCollisionCondition
	{
		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask layer;

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x10D09C4", Offset = "0x10D09C4", VA = "0x10D09C4", Slot = "4")]
		public override bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x10D0A18", Offset = "0x10D0A18", VA = "0x10D0A18")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x10D0A64", Offset = "0x10D0A64", VA = "0x10D0A64")]
		public HasLayerCondition()
		{
		}
	}
}
namespace Peacemaker.Animation
{
	[Token(Token = "0x20003F4")]
	public class MovementAnimationTests : MonoBehaviour
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMovement movement;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 targetMovement;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 targetLookDirection;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float speedPercentage;

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x11E0F94", Offset = "0x11E0F94", VA = "0x11E0F94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x11E10E0", Offset = "0x11E10E0", VA = "0x11E10E0")]
		public MovementAnimationTests()
		{
		}
	}
}
namespace Peacemaker.MaterialAction
{
	[Serializable]
	[Token(Token = "0x20003F5")]
	public class SetSky : IAction
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkyData Sky;

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x110B7D0", Offset = "0x110B7D0", VA = "0x110B7D0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x110B7F0", Offset = "0x110B7F0", VA = "0x110B7F0")]
		public SetSky()
		{
		}
	}
}
namespace Peacemaker.LocalisationAction
{
	[Serializable]
	[Token(Token = "0x20003F6")]
	public class SetLocalisation : IAction
	{
		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationData Localization;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalisationText Text;

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x110B2A4", Offset = "0x110B2A4", VA = "0x110B2A4", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x110B2C8", Offset = "0x110B2C8", VA = "0x110B2C8")]
		public SetLocalisation()
		{
		}
	}
}
namespace Peacemaker.Localisation
{
	[Serializable]
	[Token(Token = "0x20003F7")]
	public class SetLanguage : IAction
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageData Language;

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x110B290", Offset = "0x110B290", VA = "0x110B290", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x110B29C", Offset = "0x110B29C", VA = "0x110B29C")]
		public SetLanguage()
		{
		}
	}
}
namespace Peacemaker.Health
{
	[Serializable]
	[Token(Token = "0x20003F8")]
	public class ChangeHealthAction : IUnitAction, IHealthAction
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x112BA18", Offset = "0x112BA18", VA = "0x112BA18", Slot = "5")]
		public void Execute(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x112BA4C", Offset = "0x112BA4C", VA = "0x112BA4C", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x112BA9C", Offset = "0x112BA9C", VA = "0x112BA9C")]
		public ChangeHealthAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F9")]
	public class StealHealthAction : IUnitAction, IHealthAction, IAttackAction
	{
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x112C52C", Offset = "0x112C52C", VA = "0x112C52C", Slot = "5")]
		public void Execute(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x112C620", Offset = "0x112C620", VA = "0x112C620", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x112C65C", Offset = "0x112C65C", VA = "0x112C65C", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x112C744", Offset = "0x112C744", VA = "0x112C744")]
		public StealHealthAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public class ChangeHealthOverTimeAction : IUnitAction, IHealthAction
	{
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C994", Offset = "0x104C994")]
		private sealed class <DoExecute>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChangeHealthOverTimeAction <>4__this;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnitHealth health;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <x>5__3;

			[Token(Token = "0x17000169")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F4")]
				[Address(RVA = "0x112BD00", Offset = "0x112BD00", VA = "0x112BD00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F6")]
				[Address(RVA = "0x112BD68", Offset = "0x112BD68", VA = "0x112BD68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x112BBB8", Offset = "0x112BBB8", VA = "0x112BBB8")]
			[DebuggerHidden]
			public <DoExecute>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x112BBF4", Offset = "0x112BBF4", VA = "0x112BBF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x112BBF8", Offset = "0x112BBF8", VA = "0x112BBF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x112BD08", Offset = "0x112BD08", VA = "0x112BD08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float AmountPerTick;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TickCount;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TickDelay;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool InstantTick;

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x112BAA4", Offset = "0x112BAA4", VA = "0x112BAA4", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x112BAE8", Offset = "0x112BAE8", VA = "0x112BAE8", Slot = "5")]
		public void Execute(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x112BB3C", Offset = "0x112BB3C", VA = "0x112BB3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BB54", Offset = "0x105BB54")]
		private IEnumerator DoExecute(Transform emitter, UnitHealth health)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x112BBE4", Offset = "0x112BBE4", VA = "0x112BBE4")]
		public ChangeHealthOverTimeAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FC")]
	public class MultiplyHealAction : IHealthFloatAction
	{
		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Multiplicator;

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x112C3E0", Offset = "0x112C3E0", VA = "0x112C3E0", Slot = "4")]
		public void Execute(Transform emitter, UnitHealth health, float value)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x112C41C", Offset = "0x112C41C", VA = "0x112C41C")]
		public MultiplyHealAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FD")]
	public class ChangeMaxHealth : IUnitState, IHealthState
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x112BD70", Offset = "0x112BD70", VA = "0x112BD70", Slot = "4")]
		public void Init(Transform emitter, GEUnit unit, bool state)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x112BD74", Offset = "0x112BD74", VA = "0x112BD74", Slot = "7")]
		public void Enter(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x112BDC4", Offset = "0x112BDC4", VA = "0x112BDC4", Slot = "5")]
		public void Enter(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x112BE00", Offset = "0x112BE00", VA = "0x112BE00", Slot = "8")]
		public void Leave(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x112BE50", Offset = "0x112BE50", VA = "0x112BE50", Slot = "6")]
		public void Leave(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x112BE8C", Offset = "0x112BE8C", VA = "0x112BE8C")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x112BE90", Offset = "0x112BE90", VA = "0x112BE90")]
		public ChangeMaxHealth()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class ChangeMaxPlayerHealth : IState
	{
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Multiplier;

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x112BE98", Offset = "0x112BE98", VA = "0x112BE98", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x112BFB4", Offset = "0x112BFB4", VA = "0x112BFB4", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x112BFB8", Offset = "0x112BFB8", VA = "0x112BFB8", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x112C0D4", Offset = "0x112C0D4", VA = "0x112C0D4")]
		public ChangeMaxPlayerHealth()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class Regeneration : IUnitState
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Intervall;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x112C42C", Offset = "0x112C42C", VA = "0x112C42C", Slot = "4")]
		public void Init(Transform emitter, GEUnit unit, bool state)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x112C430", Offset = "0x112C430", VA = "0x112C430", Slot = "5")]
		public void Enter(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x112C498", Offset = "0x112C498", VA = "0x112C498", Slot = "6")]
		public void Leave(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x112C51C", Offset = "0x112C51C", VA = "0x112C51C")]
		public Regeneration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000400")]
	public class HealthModifier : IPlayerState
	{
		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x112C328", Offset = "0x112C328", VA = "0x112C328", Slot = "4")]
		public void Enter(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x112C37C", Offset = "0x112C37C", VA = "0x112C37C", Slot = "5")]
		public void Leave(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x112C3D0", Offset = "0x112C3D0", VA = "0x112C3D0")]
		public HealthModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000401")]
	public class ChangeSpeedModifier : IPlayerState, IState
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool setModifierInsteadOfAdd;

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x112C0E4", Offset = "0x112C0E4", VA = "0x112C0E4", Slot = "4")]
		public void Enter(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x112C12C", Offset = "0x112C12C", VA = "0x112C12C", Slot = "7")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x112C1DC", Offset = "0x112C1DC", VA = "0x112C1DC", Slot = "6")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x112C1E0", Offset = "0x112C1E0", VA = "0x112C1E0", Slot = "5")]
		public void Leave(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x112C220", Offset = "0x112C220", VA = "0x112C220", Slot = "8")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x112C2D0", Offset = "0x112C2D0", VA = "0x112C2D0")]
		public ChangeSpeedModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public class ChangeVisibilityModifier : IPlayerState
	{
		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10560F4", Offset = "0x10560F4")]
		public float Modifier;

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x112C2D8", Offset = "0x112C2D8", VA = "0x112C2D8", Slot = "4")]
		public void Enter(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x112C2F8", Offset = "0x112C2F8", VA = "0x112C2F8", Slot = "5")]
		public void Leave(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x112C318", Offset = "0x112C318", VA = "0x112C318")]
		public ChangeVisibilityModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000403")]
	public class ChangeHandMass : IHandState
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float bodyImpactMultiplicator;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float meleeDamageMultiplicator;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x112B714", Offset = "0x112B714", VA = "0x112B714", Slot = "4")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x112B840", Offset = "0x112B840", VA = "0x112B840")]
		private void MultiplyValues(PlayerUpgrades.HandAttributes hand)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x112B888", Offset = "0x112B888", VA = "0x112B888")]
		private void DivideValues(PlayerUpgrades.HandAttributes hand)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x112B8D0", Offset = "0x112B8D0", VA = "0x112B8D0", Slot = "5")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x112B9FC", Offset = "0x112B9FC", VA = "0x112B9FC")]
		public ChangeHandMass()
		{
		}
	}
}
namespace Peacemaker.HUD
{
	[Serializable]
	[Token(Token = "0x2000404")]
	public class ShowUIBackground : IAction
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIBackgroundData Background;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Interrupt;

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1128154", Offset = "0x1128154", VA = "0x1128154", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1128210", Offset = "0x1128210", VA = "0x1128210")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x11282CC", Offset = "0x11282CC", VA = "0x11282CC")]
		public ShowUIBackground()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000405")]
	public class HideUIBackground : IAction
	{
		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1127914", Offset = "0x1127914", VA = "0x1127914", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1127970", Offset = "0x1127970", VA = "0x1127970")]
		public HideUIBackground()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public class ShowUIDamage : IAttackAction
	{
		[Token(Token = "0x600111E")]
		[Address(RVA = "0x11282D4", Offset = "0x11282D4", VA = "0x11282D4", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1128560", Offset = "0x1128560", VA = "0x1128560")]
		public ShowUIDamage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000407")]
	public class DisableUIDamage : IAction
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1126E38", Offset = "0x1126E38", VA = "0x1126E38", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1126E94", Offset = "0x1126E94", VA = "0x1126E94")]
		public DisableUIDamage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000408")]
	public class ShowSpeedlines : IAction, ITriggerAction
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Speedlines Speedlines;

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1127DA0", Offset = "0x1127DA0", VA = "0x1127DA0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x1127DBC", Offset = "0x1127DBC", VA = "0x1127DBC", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1127DD8", Offset = "0x1127DD8", VA = "0x1127DD8")]
		public ShowSpeedlines()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000409")]
	public class HideSpeedlines : IAction
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Speedlines Speedlines;

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x11278F0", Offset = "0x11278F0", VA = "0x11278F0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x112790C", Offset = "0x112790C", VA = "0x112790C")]
		public HideSpeedlines()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040A")]
	public class ShowHUD : GenericEvent, IAction
	{
		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1127BBC", Offset = "0x1127BBC", VA = "0x1127BBC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1127BC0", Offset = "0x1127BC0", VA = "0x1127BC0")]
		public ShowHUD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040B")]
	public class HideHUD : GenericEvent, IAction
	{
		[Token(Token = "0x6001129")]
		[Address(RVA = "0x112744C", Offset = "0x112744C", VA = "0x112744C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1127450", Offset = "0x1127450", VA = "0x1127450")]
		public HideHUD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040C")]
	public class ShowHUDPopup : GenericEvent, IAction, IFloatAction
	{
		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color Color;

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1127D4C", Offset = "0x1127D4C", VA = "0x1127D4C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1127D50", Offset = "0x1127D50", VA = "0x1127D50", Slot = "6")]
		public void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1127D54", Offset = "0x1127D54", VA = "0x1127D54")]
		public ShowHUDPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040D")]
	public class ShowHUDPopupCurrentLevel : GenericEvent, IAction
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DistrictValueData districtKey;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntegerValueData levelKey;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1127D5C", Offset = "0x1127D5C", VA = "0x1127D5C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1127D60", Offset = "0x1127D60", VA = "0x1127D60")]
		public ShowHUDPopupCurrentLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040E")]
	public class ShowHUDFloatPopup : GenericFloatEvent
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Color;

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1127BC8", Offset = "0x1127BC8", VA = "0x1127BC8", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1127BCC", Offset = "0x1127BCC", VA = "0x1127BCC")]
		public ShowHUDFloatPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public class ShowHUDStringPopup : GenericStringEvent
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Color;

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1127D94", Offset = "0x1127D94", VA = "0x1127D94", Slot = "4")]
		public override void Execute(Transform emitter, string text)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1127D98", Offset = "0x1127D98", VA = "0x1127D98")]
		public ShowHUDStringPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000410")]
	public class HideHUDPopup : GenericEvent, IAction
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1127458", Offset = "0x1127458", VA = "0x1127458", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x112745C", Offset = "0x112745C", VA = "0x112745C")]
		public HideHUDPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000411")]
	public class ShowHUDInfotext : GenericEvent, IAction, ISideAction
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LString Description;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x105612C", Offset = "0x105612C")]
		public string Text;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Delay;

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1127BD4", Offset = "0x1127BD4", VA = "0x1127BD4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1127CD8", Offset = "0x1127CD8", VA = "0x1127CD8", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1127CE4", Offset = "0x1127CE4", VA = "0x1127CE4")]
		public ShowHUDInfotext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	public class HUDPopup : IState
	{
		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color Color;

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x11273B8", Offset = "0x11273B8", VA = "0x11273B8", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x11273BC", Offset = "0x11273BC", VA = "0x11273BC", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x11273C0", Offset = "0x11273C0", VA = "0x11273C0", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x11273C4", Offset = "0x11273C4", VA = "0x11273C4")]
		public HUDPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000413")]
	public class HUDPopupUpgrade : IState
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UpgradeData Upgrade;

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x11273CC", Offset = "0x11273CC", VA = "0x11273CC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x11273D0", Offset = "0x11273D0", VA = "0x11273D0", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x11273D4", Offset = "0x11273D4", VA = "0x11273D4", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x11273D8", Offset = "0x11273D8", VA = "0x11273D8")]
		public HUDPopupUpgrade()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000414")]
	public class SetMaterial : IState
	{
		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer Mesh;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material defaultMaterial;

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x11279B0", Offset = "0x11279B0", VA = "0x11279B0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x11279E4", Offset = "0x11279E4", VA = "0x11279E4", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1127A08", Offset = "0x1127A08", VA = "0x1127A08", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1127A2C", Offset = "0x1127A2C", VA = "0x1127A2C")]
		public SetMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	public class ShowGameObject : IState
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Obj;

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1127B54", Offset = "0x1127B54", VA = "0x1127B54", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1127B74", Offset = "0x1127B74", VA = "0x1127B74", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1127B94", Offset = "0x1127B94", VA = "0x1127B94", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1127BB4", Offset = "0x1127BB4", VA = "0x1127BB4")]
		public ShowGameObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000416")]
	public class HideGameObject : IState
	{
		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Obj;

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x11273E0", Offset = "0x11273E0", VA = "0x11273E0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x1127404", Offset = "0x1127404", VA = "0x1127404", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1127424", Offset = "0x1127424", VA = "0x1127424", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1127444", Offset = "0x1127444", VA = "0x1127444")]
		public HideGameObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000417")]
	public class HidePlayerWeapons : IState
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Weapon weapon;

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1127778", Offset = "0x1127778", VA = "0x1127778", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x11278D8", Offset = "0x11278D8", VA = "0x11278D8", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x11278E0", Offset = "0x11278E0", VA = "0x11278E0", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x1127780", Offset = "0x1127780", VA = "0x1127780")]
		private void SetWeapons(bool state)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x11278E8", Offset = "0x11278E8", VA = "0x11278E8")]
		public HidePlayerWeapons()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000418")]
	public class HidePlayerPickups : IState
	{
		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1127464", Offset = "0x1127464", VA = "0x1127464", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1127760", Offset = "0x1127760", VA = "0x1127760", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1127768", Offset = "0x1127768", VA = "0x1127768", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x112746C", Offset = "0x112746C", VA = "0x112746C")]
		private void SetPickup(bool state)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x1127770", Offset = "0x1127770", VA = "0x1127770")]
		public HidePlayerPickups()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	public class SetTimeScale : IState
	{
		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Scale;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float defaultTime;

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1127A34", Offset = "0x1127A34", VA = "0x1127A34", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x1127A5C", Offset = "0x1127A5C", VA = "0x1127A5C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x1127A68", Offset = "0x1127A68", VA = "0x1127A68", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1127A74", Offset = "0x1127A74", VA = "0x1127A74")]
		public SetTimeScale()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class PauseGame : IState
	{
		[Token(Token = "0x600115B")]
		[Address(RVA = "0x1127978", Offset = "0x1127978", VA = "0x1127978", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1127990", Offset = "0x1127990", VA = "0x1127990", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x112799C", Offset = "0x112799C", VA = "0x112799C", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x11279A8", Offset = "0x11279A8", VA = "0x11279A8")]
		public PauseGame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041B")]
	public class Tooltip : ISideState
	{
		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TooltipType Id;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LString Title;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LString Description;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Color;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105613C", Offset = "0x105613C")]
		public Vector3 Offset;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1056174", Offset = "0x1056174")]
		public float OffsetY;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Detail;

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1128568", Offset = "0x1128568", VA = "0x1128568", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x112856C", Offset = "0x112856C", VA = "0x112856C", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x11286D4", Offset = "0x11286D4", VA = "0x11286D4", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x1128748", Offset = "0x1128748", VA = "0x1128748")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class ShowTooltipForSeconds : GenericStringEvent
	{
		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104C9A4", Offset = "0x104C9A4")]
		private sealed class <DoShowTooltip>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform emitter;

			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShowTooltipForSeconds <>4__this;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string text;

			[Token(Token = "0x1700016B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001169")]
				[Address(RVA = "0x11280E4", Offset = "0x11280E4", VA = "0x11280E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600116B")]
				[Address(RVA = "0x112814C", Offset = "0x112814C", VA = "0x112814C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0x1127EC0", Offset = "0x1127EC0", VA = "0x1127EC0")]
			[DebuggerHidden]
			public <DoShowTooltip>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x1127F34", Offset = "0x1127F34", VA = "0x1127F34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x1127F38", Offset = "0x1127F38", VA = "0x1127F38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0x11280EC", Offset = "0x11280EC", VA = "0x11280EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float seconds;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TooltipType Id;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Side side;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10561AC", Offset = "0x10561AC")]
		public Vector3 Offset;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10561E4", Offset = "0x10561E4")]
		public float OffsetY;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool Detail;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color Color;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x1127DE0", Offset = "0x1127DE0", VA = "0x1127DE0", Slot = "4")]
		public override void Execute(Transform emitter, string value)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1127E3C", Offset = "0x1127E3C", VA = "0x1127E3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BC08", Offset = "0x105BC08")]
		private IEnumerator DoShowTooltip(Transform emitter, string text)
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x1127EEC", Offset = "0x1127EEC", VA = "0x1127EEC")]
		public ShowTooltipForSeconds()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041E")]
	public class TooltipFixedHand : IState
	{
		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side side;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TooltipType Id;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LString Title;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LString Description;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Color;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105621C", Offset = "0x105621C")]
		public Vector3 Offset;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1056254", Offset = "0x1056254")]
		public float OffsetY;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Detail;

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x11287EC", Offset = "0x11287EC", VA = "0x11287EC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x11287F0", Offset = "0x11287F0", VA = "0x11287F0", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x1128948", Offset = "0x1128948", VA = "0x1128948", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x11289AC", Offset = "0x11289AC", VA = "0x11289AC")]
		public TooltipFixedHand()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041F")]
	public class TooltipTarget : ITargetSideState
	{
		[Token(Token = "0x2000420")]
		public enum TargetType
		{
			[Token(Token = "0x40011E4")]
			Self,
			[Token(Token = "0x40011E5")]
			Target
		}

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TooltipType Id;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TargetType Target;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LString Title;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LString Description;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Color;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105628C", Offset = "0x105628C")]
		public Vector3 Offset;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10562C4", Offset = "0x10562C4")]
		public float OffsetY;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Detail;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x1128FA0", Offset = "0x1128FA0", VA = "0x1128FA0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1128FA4", Offset = "0x1128FA4", VA = "0x1128FA4", Slot = "5")]
		public void Enter(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1129100", Offset = "0x1129100", VA = "0x1129100", Slot = "6")]
		public void Leave(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x1129174", Offset = "0x1129174", VA = "0x1129174")]
		public TooltipTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000421")]
	public class TooltipUpgrade : ISideState
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TooltipType Id;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UpgradeData Upgrade;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10562FC", Offset = "0x10562FC")]
		public Vector3 Offset;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1056334", Offset = "0x1056334")]
		public float OffsetY;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool Detail;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[ReadOnly]
		public bool CurrentState;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[ReadOnly]
		public Side CurrentSide;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x1129218", Offset = "0x1129218", VA = "0x1129218", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x112921C", Offset = "0x112921C", VA = "0x112921C", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x1129390", Offset = "0x1129390", VA = "0x1129390", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x112940C", Offset = "0x112940C", VA = "0x112940C")]
		public TooltipUpgrade()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000422")]
	public class TooltipSlots : ISideState
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationData Title;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizationData Empty;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color Color;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TooltipType Id;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105638C", Offset = "0x105638C")]
		public Vector3 Offset;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10563C4", Offset = "0x10563C4")]
		public float OffsetY;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[ReadOnly]
		public bool CurrentState;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public Side CurrentSide;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<UpgradeData> _upgrades;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StringBuilder _sb;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _slotASCII;

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1128A50", Offset = "0x1128A50", VA = "0x1128A50", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1128A54", Offset = "0x1128A54", VA = "0x1128A54", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1128CB0", Offset = "0x1128CB0", VA = "0x1128CB0")]
		private void AddSlotName(int id, bool first, bool last)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x1128F10", Offset = "0x1128F10", VA = "0x1128F10", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x1128F8C", Offset = "0x1128F8C", VA = "0x1128F8C")]
		public TooltipSlots()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000423")]
	public class EnableTooltips : IState
	{
		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1126E9C", Offset = "0x1126E9C", VA = "0x1126E9C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x1126F0C", Offset = "0x1126F0C", VA = "0x1126F0C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1126F68", Offset = "0x1126F68", VA = "0x1126F68", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1126FC4", Offset = "0x1126FC4", VA = "0x1126FC4")]
		public EnableTooltips()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000424")]
	public class DisableTooltips : IState
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1126D08", Offset = "0x1126D08", VA = "0x1126D08", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1126D78", Offset = "0x1126D78", VA = "0x1126D78", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1126DD4", Offset = "0x1126DD4", VA = "0x1126DD4", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x1126E30", Offset = "0x1126E30", VA = "0x1126E30")]
		public DisableTooltips()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000425")]
	public class SetUIBackground : IState
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIBackgroundData Background;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Interrupt;

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x1127A7C", Offset = "0x1127A7C", VA = "0x1127A7C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x1127A80", Offset = "0x1127A80", VA = "0x1127A80", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x1127AE8", Offset = "0x1127AE8", VA = "0x1127AE8", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1127B4C", Offset = "0x1127B4C", VA = "0x1127B4C")]
		public SetUIBackground()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000426")]
	public class FMODAudio : IState
	{
		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1126FCC", Offset = "0x1126FCC", VA = "0x1126FCC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1126FD8", Offset = "0x1126FD8", VA = "0x1126FD8", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x11270C8", Offset = "0x11270C8", VA = "0x11270C8", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1127174", Offset = "0x1127174", VA = "0x1127174")]
		public FMODAudio()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000427")]
	public class FMODAudioActivateAndDeactivateEvent : IState
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent activateEvent;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent deactivateEvent;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x11271E4", Offset = "0x11271E4", VA = "0x11271E4", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x11271F0", Offset = "0x11271F0", VA = "0x11271F0", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x112729C", Offset = "0x112729C", VA = "0x112729C", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1127348", Offset = "0x1127348", VA = "0x1127348")]
		public FMODAudioActivateAndDeactivateEvent()
		{
		}
	}
}
namespace Peacemaker.Discord
{
	[Serializable]
	[Token(Token = "0x2000428")]
	public class SendDiscord : IAction
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1135328", Offset = "0x1135328", VA = "0x1135328", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1135428", Offset = "0x1135428", VA = "0x1135428")]
		public SendDiscord()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000429")]
	public class SendWinDiscord : SendDiscordBase, IAction
	{
		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1135738", Offset = "0x1135738", VA = "0x1135738", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x113573C", Offset = "0x113573C", VA = "0x113573C")]
		public SendWinDiscord()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042A")]
	public class SendLoseDiscord : SendDiscordBase, IAction
	{
		[Token(Token = "0x6001195")]
		[Address(RVA = "0x113572C", Offset = "0x113572C", VA = "0x113572C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1135730", Offset = "0x1135730", VA = "0x1135730")]
		public SendLoseDiscord()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public abstract class SendDiscordBase
	{
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1135430", Offset = "0x1135430", VA = "0x1135430")]
		public void Send(string message, string district, int level)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1135724", Offset = "0x1135724", VA = "0x1135724")]
		protected SendDiscordBase()
		{
		}
	}
}
namespace Peacemaker.Object
{
	[Serializable]
	[Token(Token = "0x200042C")]
	public class DestroySelf : IAction, ITriggerAction, ISideAction, IAttackAction
	{
		[Token(Token = "0x6001199")]
		[Address(RVA = "0x110D2C4", Offset = "0x110D2C4", VA = "0x110D2C4", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x110D2F4", Offset = "0x110D2F4", VA = "0x110D2F4", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x110D2F8", Offset = "0x110D2F8", VA = "0x110D2F8", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x110D2FC", Offset = "0x110D2FC", VA = "0x110D2FC", Slot = "7")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x110D300", Offset = "0x110D300", VA = "0x110D300")]
		public DestroySelf()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042D")]
	public class DestroyTarget : IAction, ITriggerAction, ICollisionAction, IAttackAction
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x110D308", Offset = "0x110D308", VA = "0x110D308", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x110D338", Offset = "0x110D338", VA = "0x110D338", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x110D360", Offset = "0x110D360", VA = "0x110D360", Slot = "6")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x110D388", Offset = "0x110D388", VA = "0x110D388", Slot = "7")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x110D38C", Offset = "0x110D38C", VA = "0x110D38C")]
		public DestroyTarget()
		{
		}
	}
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104C9B4", Offset = "0x104C9B4")]
	public class ObjectTagData : ScriptableObject, IStatus
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public ContentStatus _status;

		[Token(Token = "0x1700016D")]
		public ContentStatus ContentStatus
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x110E884", Offset = "0x110E884", VA = "0x110E884", Slot = "4")]
			get
			{
				return default(ContentStatus);
			}
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x110E88C", Offset = "0x110E88C", VA = "0x110E88C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x110E894", Offset = "0x110E894", VA = "0x110E894")]
		public ObjectTagData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042F")]
	public class SpawnObjectAtParent : GenericEvent
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ObjectData Object;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Parent;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Position;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion Rotation;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 Scale;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x110E908", Offset = "0x110E908", VA = "0x110E908", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x110EA4C", Offset = "0x110EA4C", VA = "0x110EA4C")]
		public SpawnObjectAtParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000430")]
	public class IgnoreTag : ITriggerAction, ICollisionAction
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x105642C", Offset = "0x105642C")]
		public string Tag;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1056464", Offset = "0x1056464")]
		public List<Collider> Collider;

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x110D394", Offset = "0x110D394", VA = "0x110D394", Slot = "4")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x110D3FC", Offset = "0x110D3FC", VA = "0x110D3FC", Slot = "5")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x110D534", Offset = "0x110D534", VA = "0x110D534")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x110D580", Offset = "0x110D580", VA = "0x110D580")]
		public IgnoreTag()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class AddBuildTag : IAction
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildTagData Tag;

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x110D258", Offset = "0x110D258", VA = "0x110D258", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x110D2BC", Offset = "0x110D2BC", VA = "0x110D2BC")]
		public AddBuildTag()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class RemoveBuildTag : IAction
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildTagData Tag;

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x110E89C", Offset = "0x110E89C", VA = "0x110E89C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x110E900", Offset = "0x110E900", VA = "0x110E900")]
		public RemoveBuildTag()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class ObjectActiveCondition : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000434")]
		public enum ActivationType
		{
			[Token(Token = "0x4001210")]
			Awake,
			[Token(Token = "0x4001211")]
			Start,
			[Token(Token = "0x4001212")]
			Enable,
			[Token(Token = "0x4001213")]
			Disable
		}

		[Token(Token = "0x2000435")]
		public enum OperatorType
		{
			[Token(Token = "0x4001215")]
			AND,
			[Token(Token = "0x4001216")]
			OR
		}

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ActivationType Activation;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public OperatorType Operator;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool Not;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject Target;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x105649C", Offset = "0x105649C")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105649C", Offset = "0x105649C")]
		public List<ICondition> Conditions;

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x110D5F0", Offset = "0x110D5F0", VA = "0x110D5F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x110D728", Offset = "0x110D728", VA = "0x110D728")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x110D73C", Offset = "0x110D73C", VA = "0x110D73C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x110D750", Offset = "0x110D750", VA = "0x110D750")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x110D690", Offset = "0x110D690", VA = "0x110D690")]
		private void Execute()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x110D764", Offset = "0x110D764", VA = "0x110D764")]
		public ObjectActiveCondition()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class ObjectActiveSwitch : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000437")]
		public enum ActivationType
		{
			[Token(Token = "0x400121B")]
			Awake,
			[Token(Token = "0x400121C")]
			Start,
			[Token(Token = "0x400121D")]
			Enable
		}

		[Token(Token = "0x2000438")]
		public enum OperatorType
		{
			[Token(Token = "0x400121F")]
			AND,
			[Token(Token = "0x4001220")]
			OR
		}

		[Token(Token = "0x2000439")]
		public class SwitchInfo
		{
			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject Target;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OperatorType Operator;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool Not;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[InlineProperty]
			[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1056558", Offset = "0x1056558")]
			[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1056558", Offset = "0x1056558")]
			public List<ICondition> Conditions;

			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x110DBC8", Offset = "0x110DBC8", VA = "0x110DBC8")]
			public SwitchInfo()
			{
			}
		}

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ActivationType Activation;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105650C", Offset = "0x105650C")]
		[InlineProperty]
		public List<SwitchInfo> Switch;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _valid;

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x110D7D4", Offset = "0x110D7D4", VA = "0x110D7D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x110DB30", Offset = "0x110DB30", VA = "0x110DB30")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x110DB44", Offset = "0x110DB44", VA = "0x110DB44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x110D934", Offset = "0x110D934", VA = "0x110D934")]
		private void Execute()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x110DB58", Offset = "0x110DB58", VA = "0x110DB58")]
		public ObjectActiveSwitch()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class ObjectCleaner : SerializedMonoBehaviour
	{
		[Token(Token = "0x200043B")]
		public struct CountInfo
		{
			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjectTagData Category;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Limit;
		}

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ObjectCleaner Instance;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x10565C8", Offset = "0x10565C8")]
		public List<CountInfo> ObjectListPC;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0x10565FC", Offset = "0x10565FC")]
		public List<CountInfo> ObjectListMobile;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<CountInfo> ObjectList;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<ObjectTagData, int> objectsLimit;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<ObjectTagData, HashSet<ObjectPriority>> objectsAlways;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<ObjectTagData, HashSet<ObjectPriority>> objectsHigh;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<ObjectTagData, HashSet<ObjectPriority>> objectsLow;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x110DC38", Offset = "0x110DC38", VA = "0x110DC38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x110DED4", Offset = "0x110DED4", VA = "0x110DED4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x110DF64", Offset = "0x110DF64", VA = "0x110DF64")]
		public bool Register(Priority priority, ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x110E054", Offset = "0x110E054", VA = "0x110E054")]
		public bool RegisterAlways(ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x110E228", Offset = "0x110E228", VA = "0x110E228")]
		public bool RegisterHigh(ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x110E3B8", Offset = "0x110E3B8", VA = "0x110E3B8")]
		public bool RegisterLow(ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x110E4E8", Offset = "0x110E4E8", VA = "0x110E4E8")]
		public void UnRegister(Priority priority, ObjectTagData tag, ObjectPriority obj, bool remove = false)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x110E604", Offset = "0x110E604", VA = "0x110E604")]
		public ObjectCleaner()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public enum Priority
	{
		[Token(Token = "0x4001230")]
		Always,
		[Token(Token = "0x4001231")]
		High,
		[Token(Token = "0x4001232")]
		Low
	}
	[Token(Token = "0x200043D")]
	public class ObjectPriority : MonoBehaviour
	{
		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0x1056630", Offset = "0x1056630")]
		public ObjectTagData Category;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056668", Offset = "0x1056668")]
		public Priority PriorityType;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isRegistered;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x110E6AC", Offset = "0x110E6AC", VA = "0x110E6AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x110E7B0", Offset = "0x110E7B0", VA = "0x110E7B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x110E87C", Offset = "0x110E87C", VA = "0x110E87C")]
		public ObjectPriority()
		{
		}
	}
}
namespace Peacemaker.General
{
	[Serializable]
	[Token(Token = "0x200043E")]
	public class DebugAction : IAction, IUnitAction, IBulletAction, IAttackAction, ISideAction
	{
		[Token(Token = "0x200043F")]
		public enum DebugType
		{
			[Token(Token = "0x4001239")]
			Info,
			[Token(Token = "0x400123A")]
			Warning,
			[Token(Token = "0x400123B")]
			Error
		}

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public string Text;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideLabel]
		public DebugType Type;

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x111F92C", Offset = "0x111F92C", VA = "0x111F92C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x111FA2C", Offset = "0x111FA2C", VA = "0x111FA2C", Slot = "5")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x111FA30", Offset = "0x111FA30", VA = "0x111FA30", Slot = "6")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x111FA34", Offset = "0x111FA34", VA = "0x111FA34", Slot = "7")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x111FA38", Offset = "0x111FA38", VA = "0x111FA38", Slot = "8")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x111FA3C", Offset = "0x111FA3C", VA = "0x111FA3C")]
		public DebugAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000440")]
	public class DelayEvent : GenericEvent, IAction, ISideAction
	{
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA00", Offset = "0x104CA00")]
		private sealed class <DoDelay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DelayEvent <>4__this;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <x>5__2;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011D4")]
				[Address(RVA = "0x111FDAC", Offset = "0x111FDAC", VA = "0x111FDAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011D6")]
				[Address(RVA = "0x111FE14", Offset = "0x111FE14", VA = "0x111FE14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x111FB20", Offset = "0x111FB20", VA = "0x111FB20")]
			[DebuggerHidden]
			public <DoDelay>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x111FBC4", Offset = "0x111FBC4", VA = "0x111FBC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x111FBC8", Offset = "0x111FBC8", VA = "0x111FBC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x111FDB4", Offset = "0x111FDB4", VA = "0x111FDB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Delay;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10566C0", Offset = "0x10566C0")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10566C0", Offset = "0x10566C0")]
		public List<IAction> Actions;

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x111FA44", Offset = "0x111FA44", VA = "0x111FA44", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x111FB14", Offset = "0x111FB14", VA = "0x111FB14", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x111FA98", Offset = "0x111FA98", VA = "0x111FA98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BCBC", Offset = "0x105BCBC")]
		private IEnumerator DoDelay(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x111FB4C", Offset = "0x111FB4C", VA = "0x111FB4C")]
		public DelayEvent()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class ScaleOverTimeEvent : GenericEvent, IAction
	{
		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA10", Offset = "0x104CA10")]
		private sealed class <DoScale>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform emitter;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScaleOverTimeEvent <>4__this;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <initialScale>5__2;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <x>5__3;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011DD")]
				[Address(RVA = "0x112038C", Offset = "0x112038C", VA = "0x112038C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011DF")]
				[Address(RVA = "0x11203F4", Offset = "0x11203F4", VA = "0x11203F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x112019C", Offset = "0x112019C", VA = "0x112019C")]
			[DebuggerHidden]
			public <DoScale>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x11201D8", Offset = "0x11201D8", VA = "0x11201D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x11201DC", Offset = "0x11201DC", VA = "0x11201DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x1120394", Offset = "0x1120394", VA = "0x1120394", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x11200CC", Offset = "0x11200CC", VA = "0x11200CC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1120120", Offset = "0x1120120", VA = "0x1120120")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BD70", Offset = "0x105BD70")]
		private IEnumerator DoScale(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x11201C8", Offset = "0x11201C8", VA = "0x11201C8")]
		public ScaleOverTimeEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000444")]
	public class Quit : GenericEvent, IAction
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x11200BC", Offset = "0x11200BC", VA = "0x11200BC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x11200C4", Offset = "0x11200C4", VA = "0x11200C4")]
		public Quit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000445")]
	public class OpenUrl : GenericEvent, IAction
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string url;

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x11200A8", Offset = "0x11200A8", VA = "0x11200A8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x11200B4", Offset = "0x11200B4", VA = "0x11200B4")]
		public OpenUrl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000446")]
	[HideLabel]
	public class CustomEvent : GenericEvent, IAction
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideReferenceObjectPicker]
		public UnityEvent Event;

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x111F838", Offset = "0x111F838", VA = "0x111F838", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x111F854", Offset = "0x111F854", VA = "0x111F854")]
		public CustomEvent()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class DestroyEvent : GenericEvent, IAction
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x111FE1C", Offset = "0x111FE1C", VA = "0x111FE1C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x111FEA0", Offset = "0x111FEA0", VA = "0x111FEA0")]
		public DestroyEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000448")]
	public class DestroyGameObjectEvent : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj;

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x111FEA8", Offset = "0x111FEA8", VA = "0x111FEA8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x111FF14", Offset = "0x111FF14", VA = "0x111FF14", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x111FF20", Offset = "0x111FF20", VA = "0x111FF20")]
		public DestroyGameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000449")]
	public class DestroyObjectDataInstanceEvent : GenericEvent, IAction
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ObjectDataInstance data;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x111FF28", Offset = "0x111FF28", VA = "0x111FF28", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x1120014", Offset = "0x1120014", VA = "0x1120014")]
		public DestroyObjectDataInstanceEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044A")]
	public class DestroySelfEvent : GenericEvent, IAction
	{
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x112001C", Offset = "0x112001C", VA = "0x112001C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x11200A0", Offset = "0x11200A0", VA = "0x11200A0")]
		public DestroySelfEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044B")]
	public class CustomFloatEvent : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent<float> Event;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x111F8BC", Offset = "0x111F8BC", VA = "0x111F8BC", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x111F924", Offset = "0x111F924", VA = "0x111F924")]
		public CustomFloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044C")]
	public class SetTimeScale : GenericEvent, IAction
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float defaultFixedDeltaTime;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float TimeScale;

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x11206E0", Offset = "0x11206E0", VA = "0x11206E0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x11207CC", Offset = "0x11207CC", VA = "0x11207CC")]
		public SetTimeScale()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044D")]
	public class SetTimeScaleForSec : GenericEvent, IAction, IState
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA30", Offset = "0x104CA30")]
		private sealed class <DoSlowDownTime>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetTimeScaleForSec <>4__this;

			[Token(Token = "0x17000172")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011FD")]
				[Address(RVA = "0x1120B70", Offset = "0x1120B70", VA = "0x1120B70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011FF")]
				[Address(RVA = "0x1120BD8", Offset = "0x1120BD8", VA = "0x1120BD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x11208DC", Offset = "0x11208DC", VA = "0x11208DC")]
			[DebuggerHidden]
			public <DoSlowDownTime>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x1120A6C", Offset = "0x1120A6C", VA = "0x1120A6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x1120A70", Offset = "0x1120A70", VA = "0x1120A70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x1120B78", Offset = "0x1120B78", VA = "0x1120B78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float defaultFixedDeltaTime;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float scaleTimeForSeconds;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TimeScale;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Key;

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1120828", Offset = "0x1120828", VA = "0x1120828", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x112086C", Offset = "0x112086C", VA = "0x112086C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BE24", Offset = "0x105BE24")]
		private IEnumerator DoSlowDownTime()
		{
			return null;
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x1120908", Offset = "0x1120908", VA = "0x1120908", Slot = "6")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x112090C", Offset = "0x112090C", VA = "0x112090C", Slot = "7")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x112098C", Offset = "0x112098C", VA = "0x112098C", Slot = "8")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1120A08", Offset = "0x1120A08", VA = "0x1120A08")]
		public SetTimeScaleForSec()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044F")]
	public class SetTimeScaleOverTime : GenericEvent, IAction
	{
		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA40", Offset = "0x104CA40")]
		private sealed class <DoSlowDownTime>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetTimeScaleOverTime <>4__this;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <x>5__2;

			[Token(Token = "0x17000174")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001207")]
				[Address(RVA = "0x1120F74", Offset = "0x1120F74", VA = "0x1120F74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001209")]
				[Address(RVA = "0x1120FDC", Offset = "0x1120FDC", VA = "0x1120FDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0x1120D24", Offset = "0x1120D24", VA = "0x1120D24")]
			[DebuggerHidden]
			public <DoSlowDownTime>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001205")]
			[Address(RVA = "0x1120E08", Offset = "0x1120E08", VA = "0x1120E08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001206")]
			[Address(RVA = "0x1120E0C", Offset = "0x1120E0C", VA = "0x1120E0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001208")]
			[Address(RVA = "0x1120F7C", Offset = "0x1120F7C", VA = "0x1120F7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float defaultFixedDeltaTime;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Delay;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeScale;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Key;

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1120BE0", Offset = "0x1120BE0", VA = "0x1120BE0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1120CB4", Offset = "0x1120CB4", VA = "0x1120CB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BED8", Offset = "0x105BED8")]
		private IEnumerator DoSlowDownTime()
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1120D50", Offset = "0x1120D50", VA = "0x1120D50")]
		public SetTimeScaleOverTime()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000451")]
	public class SetSeedViaKeyboard : GenericEvent, IAction
	{
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA50", Offset = "0x104CA50")]
		private sealed class <DoSetSeed>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetSeedViaKeyboard <>4__this;

			[Token(Token = "0x17000176")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001210")]
				[Address(RVA = "0x1120670", Offset = "0x1120670", VA = "0x1120670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000177")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001212")]
				[Address(RVA = "0x11206D8", Offset = "0x11206D8", VA = "0x11206D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600120D")]
			[Address(RVA = "0x11204B0", Offset = "0x11204B0", VA = "0x11204B0")]
			[DebuggerHidden]
			public <DoSetSeed>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600120E")]
			[Address(RVA = "0x11204E4", Offset = "0x11204E4", VA = "0x11204E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0x11204E8", Offset = "0x11204E8", VA = "0x11204E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001211")]
			[Address(RVA = "0x1120678", Offset = "0x1120678", VA = "0x1120678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TouchScreenKeyboard overlayKeyboard;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x11203FC", Offset = "0x11203FC", VA = "0x11203FC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1120440", Offset = "0x1120440", VA = "0x1120440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105BF8C", Offset = "0x105BF8C")]
		private IEnumerator DoSetSeed()
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x11204DC", Offset = "0x11204DC", VA = "0x11204DC")]
		public SetSeedViaKeyboard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000453")]
	public class SpawnHoloWeapon : ISideAction
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA60", Offset = "0x104CA60")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnHoloWeapon <>4__this;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject go;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rigidbody rig;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPickable pickable;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SearchTargetOnReleaseScript searchTargetScript;

			[Token(Token = "0x6001218")]
			[Address(RVA = "0x11230D4", Offset = "0x11230D4", VA = "0x11230D4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001219")]
			[Address(RVA = "0x11230DC", Offset = "0x11230DC", VA = "0x11230DC")]
			internal void <DoPickup>b__0(IPicking picking, IPickable pickable1)
			{
			}

			[Token(Token = "0x600121A")]
			[Address(RVA = "0x112320C", Offset = "0x112320C", VA = "0x112320C")]
			internal void <DoPickup>b__1(IPicking <p0>, IPickable <p1>)
			{
			}
		}

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA70", Offset = "0x104CA70")]
		private sealed class <DoPickup>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnHoloWeapon <>4__this;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject go;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody rig;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IPickable pickable;

			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public OnPlayerShootEvent shootEvent;

			[Token(Token = "0x17000178")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600121E")]
				[Address(RVA = "0x112382C", Offset = "0x112382C", VA = "0x112382C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001220")]
				[Address(RVA = "0x1123894", Offset = "0x1123894", VA = "0x1123894", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600121B")]
			[Address(RVA = "0x1122DD8", Offset = "0x1122DD8", VA = "0x1122DD8")]
			[DebuggerHidden]
			public <DoPickup>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600121C")]
			[Address(RVA = "0x1123318", Offset = "0x1123318", VA = "0x1123318", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600121D")]
			[Address(RVA = "0x112331C", Offset = "0x112331C", VA = "0x112331C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600121F")]
			[Address(RVA = "0x1123834", Offset = "0x1123834", VA = "0x1123834", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WeaponData Weapon;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material OverrideMaterial;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material FadeOutMaterial;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerHand currHand;

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x11229BC", Offset = "0x11229BC", VA = "0x11229BC", Slot = "4")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1122D40", Offset = "0x1122D40", VA = "0x1122D40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C040", Offset = "0x105C040")]
		private IEnumerator DoPickup(Side side, GameObject go, Weapon weapon, IPickable pickable, Rigidbody rig, OnPlayerShootEvent shootEvent)
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1122E04", Offset = "0x1122E04", VA = "0x1122E04")]
		private void FadeOutHoloObject(GameObject go, Rigidbody rig)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1122EC8", Offset = "0x1122EC8", VA = "0x1122EC8")]
		private void ChangeMaterial(GameObject go, Material mat)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x11230CC", Offset = "0x11230CC", VA = "0x11230CC")]
		public SpawnHoloWeapon()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000456")]
	public class SpawnHoloItem : ISideAction
	{
		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA80", Offset = "0x104CA80")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpawnHoloItem <>4__this;

			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rigidbody rig;

			[Token(Token = "0x6001226")]
			[Address(RVA = "0x11216D8", Offset = "0x11216D8", VA = "0x11216D8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001227")]
			[Address(RVA = "0x11216E0", Offset = "0x11216E0", VA = "0x11216E0")]
			internal void <DoPickup>b__0(IPicking <p0>, IPickable <p1>)
			{
			}
		}

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CA90", Offset = "0x104CA90")]
		private sealed class <DoPickup>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpawnHoloItem <>4__this;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody rig;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IPickable pickable;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public OnActivateGrenadeEvent activateEvent;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x1700017A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600122B")]
				[Address(RVA = "0x1121B50", Offset = "0x1121B50", VA = "0x1121B50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600122D")]
				[Address(RVA = "0x1121BB8", Offset = "0x1121BB8", VA = "0x1121BB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001228")]
			[Address(RVA = "0x11213EC", Offset = "0x11213EC", VA = "0x11213EC")]
			[DebuggerHidden]
			public <DoPickup>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001229")]
			[Address(RVA = "0x1121810", Offset = "0x1121810", VA = "0x1121810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600122A")]
			[Address(RVA = "0x1121814", Offset = "0x1121814", VA = "0x1121814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600122C")]
			[Address(RVA = "0x1121B58", Offset = "0x1121B58", VA = "0x1121B58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemData Item;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material OverrideMaterial;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material FadeOutMaterial;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerHand currHand;

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1120FE4", Offset = "0x1120FE4", VA = "0x1120FE4", Slot = "4")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1121354", Offset = "0x1121354", VA = "0x1121354")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C0F4", Offset = "0x105C0F4")]
		private IEnumerator DoPickup(Side side, GameObject go, ShootWeapon weapon, IPickable pickable, Rigidbody rig, OnActivateGrenadeEvent activateEvent)
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1121418", Offset = "0x1121418", VA = "0x1121418")]
		private void ChangeMaterial(GameObject go, Material mat)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x112165C", Offset = "0x112165C", VA = "0x112165C")]
		private bool IsMaterialValid(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x11216D0", Offset = "0x11216D0", VA = "0x11216D0")]
		public SpawnHoloItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000459")]
	public class SpawnHoloUpgrade : ISideAction
	{
		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CAA0", Offset = "0x104CAA0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnHoloUpgrade <>4__this;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Side side;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UpgradeChip upgrade;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IPickable pickable;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Rigidbody rig;

			[Token(Token = "0x6001233")]
			[Address(RVA = "0x1122370", Offset = "0x1122370", VA = "0x1122370")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001234")]
			[Address(RVA = "0x1122378", Offset = "0x1122378", VA = "0x1122378")]
			internal void <DoPickup>b__0(IPicking <p0>, IPickable <p1>)
			{
			}
		}

		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CAB0", Offset = "0x104CAB0")]
		private sealed class <DoPickup>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnHoloUpgrade <>4__this;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Side side;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject go;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UpgradeChip upgrade;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IPickable pickable;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Rigidbody rig;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public OnEquipUpgradeEvent equipEvent;

			[Token(Token = "0x1700017C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001238")]
				[Address(RVA = "0x1122744", Offset = "0x1122744", VA = "0x1122744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600123A")]
				[Address(RVA = "0x11227AC", Offset = "0x11227AC", VA = "0x11227AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001235")]
			[Address(RVA = "0x112207C", Offset = "0x112207C", VA = "0x112207C")]
			[DebuggerHidden]
			public <DoPickup>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001236")]
			[Address(RVA = "0x11223CC", Offset = "0x11223CC", VA = "0x11223CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0x11223D0", Offset = "0x11223D0", VA = "0x11223D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001239")]
			[Address(RVA = "0x112274C", Offset = "0x112274C", VA = "0x112274C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CAC0", Offset = "0x104CAC0")]
		private sealed class <DoRelease>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPickable pickable;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject go;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpawnHoloUpgrade <>4__this;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Rigidbody rig;

			[Token(Token = "0x1700017E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600123E")]
				[Address(RVA = "0x112294C", Offset = "0x112294C", VA = "0x112294C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001240")]
				[Address(RVA = "0x11229B4", Offset = "0x11229B4", VA = "0x11229B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600123B")]
			[Address(RVA = "0x1122138", Offset = "0x1122138", VA = "0x1122138")]
			[DebuggerHidden]
			public <DoRelease>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600123C")]
			[Address(RVA = "0x11227B4", Offset = "0x11227B4", VA = "0x11227B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600123D")]
			[Address(RVA = "0x11227B8", Offset = "0x11227B8", VA = "0x11227B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600123F")]
			[Address(RVA = "0x1122954", Offset = "0x1122954", VA = "0x1122954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UpgradeData Upgrade;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material OverrideMaterial;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material FadeOutMaterial;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerHand currHand;

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1121BC0", Offset = "0x1121BC0", VA = "0x1121BC0", Slot = "4")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x1121FCC", Offset = "0x1121FCC", VA = "0x1121FCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C1A8", Offset = "0x105C1A8")]
		private IEnumerator DoPickup(Side side, GameObject go, UpgradeChip upgrade, IPickable pickable, Rigidbody rig, OnEquipUpgradeEvent equipEvent)
		{
			return null;
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x11220A8", Offset = "0x11220A8", VA = "0x11220A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C20C", Offset = "0x105C20C")]
		private IEnumerator DoRelease(Side side, GameObject go, UpgradeChip upgrade, IPickable pickable, Rigidbody rig)
		{
			return null;
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1122164", Offset = "0x1122164", VA = "0x1122164")]
		private void ChangeMaterial(GameObject go, Material mat)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1122368", Offset = "0x1122368", VA = "0x1122368")]
		public SpawnHoloUpgrade()
		{
		}
	}
}
namespace Peacemaker.Bullet
{
	[Serializable]
	[Token(Token = "0x200045D")]
	public class IncreaseBulletDamageAction : IBulletAction
	{
		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x10CCD00", Offset = "0x10CCD00", VA = "0x10CCD00", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x10CCE64", Offset = "0x10CCE64", VA = "0x10CCE64")]
		public IncreaseBulletDamageAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045E")]
	public class ChangeColorAction : IBulletAction
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gradient Color;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x10CC840", Offset = "0x10CC840", VA = "0x10CC840", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x10CC930", Offset = "0x10CC930", VA = "0x10CC930")]
		public ChangeColorAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class LeechAction : IBulletAction
	{
		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float percentageHealthGain;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetUnitTag> leechTags;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FloatValueData> leechProgressPermanent;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<FloatValueData> leechProgressRun;

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x10CCE74", Offset = "0x10CCE74", VA = "0x10CCE74", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x10CCFB8", Offset = "0x10CCFB8", VA = "0x10CCFB8")]
		private void WeaponBullet_OnDamage(IAttackable attackable, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x10CD444", Offset = "0x10CD444", VA = "0x10CD444")]
		public LeechAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000460")]
	public class ExplodeStunnedAction : IBulletAction
	{
		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExplosionForce explosionPrefab;

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x10CC998", Offset = "0x10CC998", VA = "0x10CC998", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x10CCADC", Offset = "0x10CCADC", VA = "0x10CCADC")]
		private void WeaponBullet_OnDamage(IAttackable attackable, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x10CCCF8", Offset = "0x10CCCF8", VA = "0x10CCCF8")]
		public ExplodeStunnedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000461")]
	public class RemoveAllPlayerEffectAction : IAction
	{
		[Token(Token = "0x600124B")]
		[Address(RVA = "0x10CD4C0", Offset = "0x10CD4C0", VA = "0x10CD4C0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x10CD530", Offset = "0x10CD530", VA = "0x10CD530")]
		public RemoveAllPlayerEffectAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	public class RemovePlayerEffectTypeAction : IAction
	{
		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private EffectType effectType;

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x10CD538", Offset = "0x10CD538", VA = "0x10CD538", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x10CD5B0", Offset = "0x10CD5B0", VA = "0x10CD5B0")]
		public RemovePlayerEffectTypeAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000463")]
	public class ApplyEffectAction : IBulletAction, IUnitAction, ITriggerAction, IAttackAction
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseEffect baseEffect;

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x10CC2A0", Offset = "0x10CC2A0", VA = "0x10CC2A0", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x10CC3E4", Offset = "0x10CC3E4", VA = "0x10CC3E4", Slot = "5")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x10CC4B8", Offset = "0x10CC4B8", VA = "0x10CC4B8")]
		private void WeaponBullet_OnDamage(IAttackable attackable, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x10CC650", Offset = "0x10CC650", VA = "0x10CC650", Slot = "6")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x10CC750", Offset = "0x10CC750", VA = "0x10CC750", Slot = "7")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x10CC838", Offset = "0x10CC838", VA = "0x10CC838")]
		public ApplyEffectAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000464")]
	public class UnitEffectAction : IBulletAction
	{
		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitEventData eventData;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WeaponBullet weaponBullet;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x10CD5B8", Offset = "0x10CD5B8", VA = "0x10CD5B8", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x10CD6D8", Offset = "0x10CD6D8", VA = "0x10CD6D8")]
		private void WeaponBullet_OnDamage(IAttackable attackable, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x10CE4F8", Offset = "0x10CE4F8", VA = "0x10CE4F8")]
		public UnitEffectAction()
		{
		}
	}
}
namespace Peacemaker.Scripts.Tutorial
{
	[Token(Token = "0x2000465")]
	public class ThrowTooltip : TutorialTooltip
	{
		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PickableObject pickableObject;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OnThrowEvent OnThrowEventScript;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<ISideState> showSideEvents;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Side currentSide;

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x10F759C", Offset = "0x10F759C", VA = "0x10F759C", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x10F7790", Offset = "0x10F7790", VA = "0x10F7790")]
		private void ShootWeapon_OnThrow()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x10F78B8", Offset = "0x10F78B8", VA = "0x10F78B8")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x10F7958", Offset = "0x10F7958", VA = "0x10F7958")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x10F7A64", Offset = "0x10F7A64", VA = "0x10F7A64", Slot = "12")]
		public override void Close()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x10F7AA0", Offset = "0x10F7AA0", VA = "0x10F7AA0", Slot = "11")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x10F7ADC", Offset = "0x10F7ADC", VA = "0x10F7ADC")]
		public ThrowTooltip()
		{
		}
	}
}
namespace Peacemaker.Scripts.Events
{
	[Token(Token = "0x2000466")]
	public class SearchTargetOnReleaseScript : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CAD0", Offset = "0x104CAD0")]
		private sealed class <>c
		{
			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Collider> <>9__28_0;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Collider> <>9__35_0;

			[Token(Token = "0x600126E")]
			[Address(RVA = "0x10F6CB4", Offset = "0x10F6CB4", VA = "0x10F6CB4")]
			public <>c()
			{
			}

			[Token(Token = "0x600126F")]
			[Address(RVA = "0x10F6CBC", Offset = "0x10F6CBC", VA = "0x10F6CBC")]
			internal void <FixedUpdate>b__28_0(Collider pickableCollider)
			{
			}

			[Token(Token = "0x6001270")]
			[Address(RVA = "0x10F6CDC", Offset = "0x10F6CDC", VA = "0x10F6CDC")]
			internal void <ReturnObjectToPlayer>b__35_0(Collider collider)
			{
			}
		}

		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CAE0", Offset = "0x104CAE0")]
		private sealed class <DoWaitForSecondsBeforePlayer>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SearchTargetOnReleaseScript <>4__this;

			[Token(Token = "0x17000180")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001274")]
				[Address(RVA = "0x10F752C", Offset = "0x10F752C", VA = "0x10F752C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000181")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001276")]
				[Address(RVA = "0x10F7594", Offset = "0x10F7594", VA = "0x10F7594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001271")]
			[Address(RVA = "0x10F62B8", Offset = "0x10F62B8", VA = "0x10F62B8")]
			[DebuggerHidden]
			public <DoWaitForSecondsBeforePlayer>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001272")]
			[Address(RVA = "0x10F7450", Offset = "0x10F7450", VA = "0x10F7450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001273")]
			[Address(RVA = "0x10F7454", Offset = "0x10F7454", VA = "0x10F7454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001275")]
			[Address(RVA = "0x10F7534", Offset = "0x10F7534", VA = "0x10F7534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CAF0", Offset = "0x104CAF0")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SearchTargetOnReleaseScript <>4__this;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float closestDistance;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit enemyInAngle;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool foundEnemy;

			[Token(Token = "0x6001277")]
			[Address(RVA = "0x10F6CFC", Offset = "0x10F6CFC", VA = "0x10F6CFC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001278")]
			[Address(RVA = "0x10F6D04", Offset = "0x10F6D04", VA = "0x10F6D04")]
			internal void <DoStartTargetSearchingAfterSec>b__0(GEUnit enemyUnit)
			{
			}
		}

		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CB00", Offset = "0x104CB00")]
		private sealed class <DoStartTargetSearchingAfterSec>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SearchTargetOnReleaseScript <>4__this;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass30_0 <>8__1;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <initialPos>5__2;

			[Token(Token = "0x17000182")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600127C")]
				[Address(RVA = "0x10F73E0", Offset = "0x10F73E0", VA = "0x10F73E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000183")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600127E")]
				[Address(RVA = "0x10F7448", Offset = "0x10F7448", VA = "0x10F7448", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001279")]
			[Address(RVA = "0x10F62E4", Offset = "0x10F62E4", VA = "0x10F62E4")]
			[DebuggerHidden]
			public <DoStartTargetSearchingAfterSec>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600127A")]
			[Address(RVA = "0x10F70A4", Offset = "0x10F70A4", VA = "0x10F70A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600127B")]
			[Address(RVA = "0x10F70A8", Offset = "0x10F70A8", VA = "0x10F70A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600127D")]
			[Address(RVA = "0x10F73E8", Offset = "0x10F73E8", VA = "0x10F73E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CB10", Offset = "0x104CB10")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 initialPos;

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 direction;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SearchTargetOnReleaseScript <>4__this;

			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string debugTargetName;

			[Token(Token = "0x600127F")]
			[Address(RVA = "0x10F642C", Offset = "0x10F642C", VA = "0x10F642C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001280")]
			[Address(RVA = "0x10F6E18", Offset = "0x10F6E18", VA = "0x10F6E18")]
			internal void <SearchForEnemiesInAngle>b__0(UnitTag enemyUnitTag)
			{
			}
		}

		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CB20", Offset = "0x104CB20")]
		private sealed class <DoPlayerPickUpAfterSeconds>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SearchTargetOnReleaseScript <>4__this;

			[Token(Token = "0x17000184")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001284")]
				[Address(RVA = "0x10F7034", Offset = "0x10F7034", VA = "0x10F7034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000185")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001286")]
				[Address(RVA = "0x10F709C", Offset = "0x10F709C", VA = "0x10F709C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001281")]
			[Address(RVA = "0x10F6A34", Offset = "0x10F6A34", VA = "0x10F6A34")]
			[DebuggerHidden]
			public <DoPlayerPickUpAfterSeconds>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001282")]
			[Address(RVA = "0x10F6F64", Offset = "0x10F6F64", VA = "0x10F6F64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001283")]
			[Address(RVA = "0x10F6F68", Offset = "0x10F6F68", VA = "0x10F6F68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001285")]
			[Address(RVA = "0x10F703C", Offset = "0x10F703C", VA = "0x10F703C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PickableObject pickableObject;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AssetThrowBehaviour throwBehaviour;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1056760", Offset = "0x1056760")]
		[SerializeField]
		private float secToStartTargeting;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float maxAngle;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AssetUnitTag enemyUnitTag;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MeleeUnitIsUnnoticedScript _meleeUnitIsUnnoticedScript;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float playerPickUpAfterSec;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10567FC", Offset = "0x10567FC")]
		private int forceStrengthToTarget;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int forceStrengthBack;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float daggerHandDistance;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float freezeForSec;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float _distanceToShortToReturnToPlayer;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1056888", Offset = "0x1056888")]
		private List<IAction> OnReturnToPlayerActions;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool hasFoundTarget;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GEUnit closestEnemy;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int _elapsedFrames;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _prevDistance;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PlayerHand lastHoldPlayerHand;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _lerpToHandPose;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<GEUnit> enemiesInAngleUnitList;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool daggerHasBeenThrown;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool distanceIsToShortToReturnToPlayer;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action<GameObject, Rigidbody> OnDistanceIsToShortToReturnToPlayerAction;

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x10F59D0", Offset = "0x10F59D0", VA = "0x10F59D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x10F5AA8", Offset = "0x10F5AA8", VA = "0x10F5AA8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x10F5B50", Offset = "0x10F5B50", VA = "0x10F5B50")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x10F5CB8", Offset = "0x10F5CB8", VA = "0x10F5CB8")]
		private void OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x10F5CD8", Offset = "0x10F5CD8", VA = "0x10F5CD8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x10F6248", Offset = "0x10F6248", VA = "0x10F6248")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C310", Offset = "0x105C310")]
		private IEnumerator DoWaitForSecondsBeforePlayer()
		{
			return null;
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x10F5C48", Offset = "0x10F5C48", VA = "0x10F5C48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C374", Offset = "0x105C374")]
		private IEnumerator DoStartTargetSearchingAfterSec()
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x10F6310", Offset = "0x10F6310", VA = "0x10F6310")]
		private string SearchForEnemiesInAngle(List<UnitTag> enemyUnitTagList, Vector3 initialPos, Vector3 direction, out GEUnit enemyInAngle)
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x10F6434", Offset = "0x10F6434", VA = "0x10F6434")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x10F651C", Offset = "0x10F651C", VA = "0x10F651C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x10F69C4", Offset = "0x10F69C4", VA = "0x10F69C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C3D8", Offset = "0x105C3D8")]
		private IEnumerator DoPlayerPickUpAfterSeconds()
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x10F6704", Offset = "0x10F6704", VA = "0x10F6704")]
		private void ReturnObjectToPlayer()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x10F6A60", Offset = "0x10F6A60", VA = "0x10F6A60")]
		public SearchTargetOnReleaseScript()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x10F6B04", Offset = "0x10F6B04", VA = "0x10F6B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105C43C", Offset = "0x105C43C")]
		private void <OnDrawGizmos>b__32_0(GEUnit enemy)
		{
		}
	}
}
namespace Peacemaker.Scripts.EventEmitter
{
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104CB30", Offset = "0x104CB30")]
	public class StartAutoStartOfTwoStateMovement : MonoBehaviour
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TwoStateMovement TwoStateMovement;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OcclusionProp _occlusionProp;

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x10F5820", Offset = "0x10F5820", VA = "0x10F5820")]
		private void Start()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x10F58CC", Offset = "0x10F58CC", VA = "0x10F58CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x10F59A4", Offset = "0x10F59A4", VA = "0x10F59A4")]
		private void EnableAutostart(bool enable)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x10F59C8", Offset = "0x10F59C8", VA = "0x10F59C8")]
		public StartAutoStartOfTwoStateMovement()
		{
		}
	}
}
namespace Peacemaker.Scripts.Enemies
{
	[Token(Token = "0x200046E")]
	public class StickScript : MonoBehaviour
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "DisableIfAttribute", RVA = "0x10568D4", Offset = "0x10568D4")]
		[SerializeField]
		private bool stickUpwards;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		[AttributeAttribute(Name = "DisableIfAttribute", RVA = "0x1056920", Offset = "0x1056920")]
		private bool stickDownwards;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 ceilingOffset;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x10F54E4", Offset = "0x10F54E4", VA = "0x10F54E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x10F5818", Offset = "0x10F5818", VA = "0x10F5818")]
		public StickScript()
		{
		}
	}
}
namespace Peacemaker.Scripts.Actions
{
	[Token(Token = "0x200046F")]
	public class ParticleAction
	{
		[Serializable]
		[Token(Token = "0x2000470")]
		public class PlayParticleSystem : IAction
		{
			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ParticleSystem ParticleSystem;

			[Token(Token = "0x600128E")]
			[Address(RVA = "0x10F54C0", Offset = "0x10F54C0", VA = "0x10F54C0", Slot = "4")]
			public void Execute(Transform emitter)
			{
			}

			[Token(Token = "0x600128F")]
			[Address(RVA = "0x10F54DC", Offset = "0x10F54DC", VA = "0x10F54DC")]
			public PlayParticleSystem()
			{
			}
		}

		[Token(Token = "0x2000471")]
		public class InstantiateParticleSystemAndPlayAtTrasnform : IAction
		{
			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private ParticleSystem _particleSystem;

			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform _parentTransform;

			[Token(Token = "0x6001290")]
			[Address(RVA = "0x10F5430", Offset = "0x10F5430", VA = "0x10F5430", Slot = "4")]
			public void Execute(Transform emitter)
			{
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0x10F54B8", Offset = "0x10F54B8", VA = "0x10F54B8")]
			public InstantiateParticleSystemAndPlayAtTrasnform()
			{
			}
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x10F5428", Offset = "0x10F5428", VA = "0x10F5428")]
		public ParticleAction()
		{
		}
	}
}
namespace Peacemaker.Scripts.AI
{
	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104CB94", Offset = "0x104CB94")]
	public class MeleeUnitIsUnnoticedScript : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000473")]
		public enum NoticedStatus
		{
			[Token(Token = "0x40012EF")]
			NOTICED,
			[Token(Token = "0x40012F0")]
			UNNOTICED,
			[Token(Token = "0x40012F1")]
			THROWN
		}

		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CBF8", Offset = "0x104CBF8")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool pIsNoticed;

			[Token(Token = "0x6001299")]
			[Address(RVA = "0x10F4F98", Offset = "0x10F4F98", VA = "0x10F4F98")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0x10F5044", Offset = "0x10F5044", VA = "0x10F5044")]
			internal void <PlayerIsNoticed>b__0(GameObject noticedEffect)
			{
			}

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x10F5068", Offset = "0x10F5068", VA = "0x10F5068")]
			internal void <PlayerIsNoticed>b__1(GameObject noticedEffect)
			{
			}
		}

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BaseEffect noticedEffect;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<GameObject> noticedGameObjectList;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BaseEffect unnoticedEffect;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<GameObject> unnoticedGameObjectList;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PickableObject pickableObject;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10569EC", Offset = "0x10569EC")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10569EC", Offset = "0x10569EC")]
		[InlineProperty]
		public List<IAction> OnNoticedActions;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1056A5C", Offset = "0x1056A5C")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1056A5C", Offset = "0x1056A5C")]
		public List<IAction> OnUnnoticedActions;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AdditionalMeleeDamage _additionalMeleeDamage;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public NoticedStatus noticedStatus;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private NoticedStatus _prevStatus;

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x10F4B6C", Offset = "0x10F4B6C", VA = "0x10F4B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x10F4DC4", Offset = "0x10F4DC4", VA = "0x10F4DC4")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x10F4E0C", Offset = "0x10F4E0C", VA = "0x10F4E0C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x10F4E64", Offset = "0x10F4E64", VA = "0x10F4E64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x10F4CB0", Offset = "0x10F4CB0", VA = "0x10F4CB0")]
		private void PlayerIsNoticed(bool pIsNoticed)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x10F4FA0", Offset = "0x10F4FA0", VA = "0x10F4FA0")]
		public void SetThrownStatus(bool setStatus)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x10F4FB4", Offset = "0x10F4FB4", VA = "0x10F4FB4")]
		public MeleeUnitIsUnnoticedScript()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class OnChargeEvent : GenericEventEmitter
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ChargeBehaviour _chargeBehaviour;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<IAction> _onChargeStartAction;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<IAction> _onChargeFinishedAction;

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x10F5094", Offset = "0x10F5094", VA = "0x10F5094")]
		private new void Start()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x10F51FC", Offset = "0x10F51FC", VA = "0x10F51FC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x10F5340", Offset = "0x10F5340", VA = "0x10F5340")]
		private void OnChargeFinished()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x10F536C", Offset = "0x10F536C", VA = "0x10F536C")]
		private void OnChargeStart()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x10F5398", Offset = "0x10F5398", VA = "0x10F5398")]
		public OnChargeEvent()
		{
		}
	}
}
namespace Peacemaker.Scripts.AI.Boss
{
	[Token(Token = "0x2000476")]
	public class BossStagesScript : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000477")]
		public class BossLevelUnlocks
		{
			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<WeaponData> WeaponDataUnlocks;

			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x10F4ABC", Offset = "0x10F4ABC", VA = "0x10F4ABC")]
			public BossLevelUnlocks()
			{
			}
		}

		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CC08", Offset = "0x104CC08")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChangeWeaponProfileSpawnPoints.WeaponProfileAndSpawnPoints profileAndSpawnPoint;

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x10F4A14", Offset = "0x10F4A14", VA = "0x10F4A14")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x10F4A1C", Offset = "0x10F4A1C", VA = "0x10F4A1C")]
			internal void <UnlockNewWeapons>b__1(WeaponData wData)
			{
			}
		}

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BossStage;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BossLevelUnlocks> BossLevelUnlocksList;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChangeWeaponProfileSpawnPoints weaponProfileSpawnPoints;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x10F47BC", Offset = "0x10F47BC", VA = "0x10F47BC")]
		public void IncreaseBossStageAction()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x10F47E8", Offset = "0x10F47E8", VA = "0x10F47E8")]
		private void UnlockNewWeapons()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x10F488C", Offset = "0x10F488C", VA = "0x10F488C")]
		public BossStagesScript()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x10F48FC", Offset = "0x10F48FC", VA = "0x10F48FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105C53C", Offset = "0x105C53C")]
		private void <UnlockNewWeapons>b__5_0(ChangeWeaponProfileSpawnPoints.WeaponProfileAndSpawnPoints profileAndSpawnPoint)
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class NexBossStageAction : IAction
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossStagesScript BossStagesScript;

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x10F4B2C", Offset = "0x10F4B2C", VA = "0x10F4B2C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x10F4B64", Offset = "0x10F4B64", VA = "0x10F4B64")]
		public NexBossStageAction()
		{
		}
	}
}
namespace Peacemaker.Audio
{
	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104CC18", Offset = "0x104CC18")]
	public class AssetAudioMaterial : ScriptableObject, IDatabase, IValidation
	{
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string descriptiveName;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minSoundThreshold;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSoundThreshold;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useScrapeSound;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1056AEC", Offset = "0x1056AEC")]
		public AssetFMODEvent scrapeEvent;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x11E2744", Offset = "0x11E2744", VA = "0x11E2744")]
		private void Reset()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x11E276C", Offset = "0x11E276C", VA = "0x11E276C", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x11E2774", Offset = "0x11E2774", VA = "0x11E2774", Slot = "4")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x11E277C", Offset = "0x11E277C", VA = "0x11E277C", Slot = "6")]
		public Texture GetTexture()
		{
			return null;
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x11E2784", Offset = "0x11E2784", VA = "0x11E2784", Slot = "5")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x11E278C", Offset = "0x11E278C", VA = "0x11E278C", Slot = "8")]
		public string GetError(ValidationMode mode)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x11E2824", Offset = "0x11E2824", VA = "0x11E2824")]
		public AssetAudioMaterial()
		{
		}
	}
	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104CC6C", Offset = "0x104CC6C")]
	public class AssetAudioParameter : ScriptableObject
	{
		[Token(Token = "0x200047C")]
		public enum Type
		{
			[Token(Token = "0x4001304")]
			Int,
			[Token(Token = "0x4001305")]
			Float
		}

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Type type;

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x11E2888", Offset = "0x11E2888", VA = "0x11E2888")]
		public AssetAudioParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047D")]
	public class AudioParameterValue
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetAudioParameter audioParameter;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1056B28", Offset = "0x1056B28")]
		public float floatVal;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1056BC0", Offset = "0x1056BC0")]
		public int intVal;

		[Token(Token = "0x17000186")]
		public AssetAudioParameter.Type type
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x10BE6D0", Offset = "0x10BE6D0", VA = "0x10BE6D0")]
			get
			{
				return default(AssetAudioParameter.Type);
			}
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x10BE760", Offset = "0x10BE760", VA = "0x10BE760")]
		public AudioParameterValue(AssetAudioParameter parameter, float val)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x10BE79C", Offset = "0x10BE79C", VA = "0x10BE79C")]
		public AudioParameterValue(AssetAudioParameter parameter, int val)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x10BE7D8", Offset = "0x10BE7D8", VA = "0x10BE7D8")]
		internal string GetValue()
		{
			return null;
		}
	}
	[Token(Token = "0x200047E")]
	public class AudioHandler : MonoBehaviour
	{
		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioHandler instance;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool debug;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FMODAudioVisualizer visualizePrefab;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BooleanValueData visualizeAudioSetting;

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x11E3220", Offset = "0x11E3220", VA = "0x11E3220")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x11E3278", Offset = "0x11E3278", VA = "0x11E3278")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x11E327C", Offset = "0x11E327C", VA = "0x11E327C")]
		private void OVRManager_AudioOutChanged()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x11E3474", Offset = "0x11E3474", VA = "0x11E3474")]
		private bool IsOculusSDK()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x11E34C8", Offset = "0x11E34C8", VA = "0x11E34C8")]
		public void StopBus(string guid)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x11E3578", Offset = "0x11E3578", VA = "0x11E3578")]
		public void SetGlobalParameter(AssetAudioParameter parameter, float val)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x11E3614", Offset = "0x11E3614", VA = "0x11E3614")]
		public void SetGlobalParameter(AssetAudioParameter parameter, int val)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x11E1634", Offset = "0x11E1634", VA = "0x11E1634")]
		public void PlayOneShot(Guid guid, Vector3 point, [Optional] List<AudioParameterValue> parameters)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x11E1280", Offset = "0x11E1280", VA = "0x11E1280")]
		internal StudioEventEmitter Play(Guid guid, Transform emitter, List<AudioParameterValue> parameters)
		{
			return null;
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x11E36B0", Offset = "0x11E36B0", VA = "0x11E36B0")]
		private object Print(List<AudioParameterValue> parameters)
		{
			return null;
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x11E39A4", Offset = "0x11E39A4", VA = "0x11E39A4")]
		public AudioHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047F")]
	public class FMODAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x10BF90C", Offset = "0x10BF90C", VA = "0x10BF90C")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x105C54C", Offset = "0x105C54C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105C54C", Offset = "0x105C54C")]
		private void CreateNewEvent(string name, string guid)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x10BF910", Offset = "0x10BF910", VA = "0x10BF910")]
		private bool HasEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x10BF980", Offset = "0x10BF980", VA = "0x10BF980", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x10BFAE0", Offset = "0x10BFAE0", VA = "0x10BFAE0")]
		public FMODAudioEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000480")]
	public class FMODAudioEventEverySec : GenericEvent, IAction
	{
		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CCC0", Offset = "0x104CCC0")]
		private sealed class <DoRepeatEverySec>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FMODAudioEventEverySec <>4__this;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012CD")]
				[Address(RVA = "0x10C013C", Offset = "0x10C013C", VA = "0x10C013C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012CF")]
				[Address(RVA = "0x10C01A4", Offset = "0x10C01A4", VA = "0x10C01A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x10BFF20", Offset = "0x10BFF20", VA = "0x10BFF20")]
			[DebuggerHidden]
			public <DoRepeatEverySec>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x10BFFBC", Offset = "0x10BFFBC", VA = "0x10BFFBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x10BFFC0", Offset = "0x10BFFC0", VA = "0x10BFFC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x10C0144", Offset = "0x10C0144", VA = "0x10C0144", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _repeatEverySec;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _gameObjectHasTobeActive;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x10BFCD4", Offset = "0x10BFCD4", VA = "0x10BFCD4")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x105C5B0", Offset = "0x105C5B0")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105C5B0", Offset = "0x105C5B0")]
		private void CreateNewEvent(string name, string guid)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x10BFCD8", Offset = "0x10BFCD8", VA = "0x10BFCD8")]
		private bool HasEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x10BFD48", Offset = "0x10BFD48", VA = "0x10BFD48", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x10BFEA4", Offset = "0x10BFEA4", VA = "0x10BFEA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C614", Offset = "0x105C614")]
		private IEnumerator DoRepeatEverySec(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x10BFF4C", Offset = "0x10BFF4C", VA = "0x10BFF4C")]
		public FMODAudioEventEverySec()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class FMODAudioEventWithStartDelay : GenericEvent, IAction
	{
		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CCD0", Offset = "0x104CCD0")]
		private sealed class <StartAudioAfterDelay>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FMODAudioEventWithStartDelay <>4__this;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D8")]
				[Address(RVA = "0x10C0EF8", Offset = "0x10C0EF8", VA = "0x10C0EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012DA")]
				[Address(RVA = "0x10C0F60", Offset = "0x10C0F60", VA = "0x10C0F60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x10C0CB0", Offset = "0x10C0CB0", VA = "0x10C0CB0")]
			[DebuggerHidden]
			public <StartAudioAfterDelay>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x10C0D4C", Offset = "0x10C0D4C", VA = "0x10C0D4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x10C0D50", Offset = "0x10C0D50", VA = "0x10C0D50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x10C0F00", Offset = "0x10C0F00", VA = "0x10C0F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float StartDelaySec;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject attachedGameObject;

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x10C0B38", Offset = "0x10C0B38", VA = "0x10C0B38")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x105C6C8", Offset = "0x105C6C8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105C6C8", Offset = "0x105C6C8")]
		private void CreateNewEvent(string name, string guid)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x10C0B3C", Offset = "0x10C0B3C", VA = "0x10C0B3C")]
		private bool HasEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x10C0BAC", Offset = "0x10C0BAC", VA = "0x10C0BAC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x10C0C34", Offset = "0x10C0C34", VA = "0x10C0C34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C72C", Offset = "0x105C72C")]
		private IEnumerator StartAudioAfterDelay(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x10C0CDC", Offset = "0x10C0CDC", VA = "0x10C0CDC")]
		public FMODAudioEventWithStartDelay()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class FMODAudioHealthEvent : FMODAudioEvent
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter healthParameter;

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x10C0F68", Offset = "0x10C0F68", VA = "0x10C0F68", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x10C105C", Offset = "0x10C105C", VA = "0x10C105C")]
		public FMODAudioHealthEvent()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class DistanceBasedDelayedEvent : GenericEvent, IAction
	{
		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CCE0", Offset = "0x104CCE0")]
		private sealed class <DoDelayEvent>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform emitter;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DistanceBasedDelayedEvent <>4__this;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E3")]
				[Address(RVA = "0x10BF3C0", Offset = "0x10BF3C0", VA = "0x10BF3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E5")]
				[Address(RVA = "0x10BF428", Offset = "0x10BF428", VA = "0x10BF428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x10BF1B8", Offset = "0x10BF1B8", VA = "0x10BF1B8")]
			[DebuggerHidden]
			public <DoDelayEvent>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x10BF260", Offset = "0x10BF260", VA = "0x10BF260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x10BF264", Offset = "0x10BF264", VA = "0x10BF264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x10BF3C8", Offset = "0x10BF3C8", VA = "0x10BF3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IAction> events;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delayPerMeter;

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x10BF0E8", Offset = "0x10BF0E8", VA = "0x10BF0E8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x10BF13C", Offset = "0x10BF13C", VA = "0x10BF13C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C7E0", Offset = "0x105C7E0")]
		private IEnumerator DoDelayEvent(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x10BF1E4", Offset = "0x10BF1E4", VA = "0x10BF1E4")]
		public DistanceBasedDelayedEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000487")]
	public class FMODParameterPropertyAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x10C3A10", Offset = "0x10C3A10", VA = "0x10C3A10", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x10C3C4C", Offset = "0x10C3C4C", VA = "0x10C3C4C")]
		public FMODParameterPropertyAudioEvent()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class SetEndOfLevelIntensity : GenericFloatEvent
	{
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x10C63BC", Offset = "0x10C63BC", VA = "0x10C63BC", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x10C6424", Offset = "0x10C6424", VA = "0x10C6424")]
		public SetEndOfLevelIntensity()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class SetInitialEndOfLevelIntensity : GenericEvent
	{
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x10C642C", Offset = "0x10C642C", VA = "0x10C642C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x10C6488", Offset = "0x10C6488", VA = "0x10C6488")]
		public SetInitialEndOfLevelIntensity()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class SetPauseIntensity : GenericFloatEvent
	{
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x10C64F4", Offset = "0x10C64F4", VA = "0x10C64F4", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x10C655C", Offset = "0x10C655C", VA = "0x10C655C")]
		public SetPauseIntensity()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class SetInitialPauseIntensity : GenericEvent
	{
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x10C6490", Offset = "0x10C6490", VA = "0x10C6490", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x10C64EC", Offset = "0x10C64EC", VA = "0x10C64EC")]
		public SetInitialPauseIntensity()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public class FMODAudioEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent eventEnabled;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent eventDisabled;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x10BFB50", Offset = "0x10BFB50", VA = "0x10BFB50", Slot = "4")]
		public override void Execute(Transform emitter, bool enabled)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x10BFCCC", Offset = "0x10BFCCC", VA = "0x10BFCCC")]
		public FMODAudioEventBoolean()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048D")]
	public class FMODContinuousAudioEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent continousEvent;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StudioEventEmitter audioEmitter;

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x10C1EE0", Offset = "0x10C1EE0", VA = "0x10C1EE0", Slot = "4")]
		public override void Execute(Transform emitter, bool enabled)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x10C2064", Offset = "0x10C2064", VA = "0x10C2064")]
		public FMODContinuousAudioEventBoolean()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class FMODSetParameterFloat : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x10C4014", Offset = "0x10C4014", VA = "0x10C4014", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x10C418C", Offset = "0x10C418C", VA = "0x10C418C")]
		public FMODSetParameterFloat()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class FMODSetGlobalParameterFloat : GenericFloatEvent
	{
		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x10C3F98", Offset = "0x10C3F98", VA = "0x10C3F98", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x10C400C", Offset = "0x10C400C", VA = "0x10C400C")]
		public FMODSetGlobalParameterFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000490")]
	public class FMODContinuousAudioEventFloat : GenericFloatEvent
	{
		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool stopIfValueIsZero;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x10C206C", Offset = "0x10C206C", VA = "0x10C206C", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x10C23F4", Offset = "0x10C23F4", VA = "0x10C23F4")]
		public FMODContinuousAudioEventFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000491")]
	public class FMODAudioEventFloat : GenericFloatEvent
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x10C01AC", Offset = "0x10C01AC", VA = "0x10C01AC", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x10C02F8", Offset = "0x10C02F8", VA = "0x10C02F8")]
		public FMODAudioEventFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class FMODStartEventEmitter : GenericEvent, IAction
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x10C4C34", Offset = "0x10C4C34", VA = "0x10C4C34", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x10C4CDC", Offset = "0x10C4CDC", VA = "0x10C4CDC")]
		public FMODStartEventEmitter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000493")]
	public class FMODStopEventEmitter : GenericEvent, IAction
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x10C4D98", Offset = "0x10C4D98", VA = "0x10C4D98", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x10C4E2C", Offset = "0x10C4E2C", VA = "0x10C4E2C")]
		public FMODStopEventEmitter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000494")]
	public class FMODSetEventEmitterParameter : GenericEvent, IAction
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter progressParameter;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float value;

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x10C3E78", Offset = "0x10C3E78", VA = "0x10C3E78", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x10C3F90", Offset = "0x10C3F90", VA = "0x10C3F90")]
		public FMODSetEventEmitterParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000495")]
	public class FMODTransformProgressAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CCF0", Offset = "0x104CCF0")]
		private sealed class <DoAdjustProgress>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StudioEventEmitter eventScript;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FMODTransformProgressAudioEvent <>4__this;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x1700018D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001308")]
				[Address(RVA = "0x10C516C", Offset = "0x10C516C", VA = "0x10C516C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600130A")]
				[Address(RVA = "0x10C51D4", Offset = "0x10C51D4", VA = "0x10C51D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001305")]
			[Address(RVA = "0x10C4EB0", Offset = "0x10C4EB0", VA = "0x10C4EB0")]
			[DebuggerHidden]
			public <DoAdjustProgress>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001306")]
			[Address(RVA = "0x10C5088", Offset = "0x10C5088", VA = "0x10C5088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001307")]
			[Address(RVA = "0x10C508C", Offset = "0x10C508C", VA = "0x10C508C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001309")]
			[Address(RVA = "0x10C5174", Offset = "0x10C5174", VA = "0x10C5174", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonoBehaviour eventEmitter;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter progressParameter;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x10C4E34", Offset = "0x10C4E34", VA = "0x10C4E34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105C894", Offset = "0x105C894")]
		private IEnumerator DoAdjustProgress(StudioEventEmitter eventScript)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x10C4EDC", Offset = "0x10C4EDC", VA = "0x10C4EDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x10C5078", Offset = "0x10C5078", VA = "0x10C5078")]
		public FMODTransformProgressAudioEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000497")]
	public class FMODTransformProgressFloatAudioEvent : ContinuousFloatEvent
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioParameter progressParameter;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter eventScript;

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x10C51DC", Offset = "0x10C51DC", VA = "0x10C51DC", Slot = "4")]
		public override void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x10C54A8", Offset = "0x10C54A8", VA = "0x10C54A8", Slot = "5")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x10C553C", Offset = "0x10C553C", VA = "0x10C553C")]
		public FMODTransformProgressFloatAudioEvent()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x10C5544", Offset = "0x10C5544", VA = "0x10C5544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105C948", Offset = "0x105C948")]
		private bool <Execute>b__4_0(AudioParameterValue p)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000498")]
	public class FMODAudioImpactEvent : GenericImpactEvent
	{
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x10C1060", Offset = "0x10C1060", VA = "0x10C1060", Slot = "4")]
		public override void Execute(Transform emitter, Rigidbody value, Vector3 point, float impactSpeed)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x10C1290", Offset = "0x10C1290", VA = "0x10C1290")]
		public FMODAudioImpactEvent()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x10C1298", Offset = "0x10C1298", VA = "0x10C1298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105C958", Offset = "0x105C958")]
		private bool <Execute>b__3_0(AudioParameterValue p)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000499")]
	public class FMODAudioCollisionEvent : GenericCollisionEvent
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter weightParameter;

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x10BF43C", Offset = "0x10BF43C", VA = "0x10BF43C", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x10BF7F4", Offset = "0x10BF7F4", VA = "0x10BF7F4")]
		public FMODAudioCollisionEvent()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x10BF7FC", Offset = "0x10BF7FC", VA = "0x10BF7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105C968", Offset = "0x105C968")]
		private bool <Execute>b__4_0(AudioParameterValue p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x10BF884", Offset = "0x10BF884", VA = "0x10BF884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105C978", Offset = "0x105C978")]
		private bool <Execute>b__4_1(AudioParameterValue p)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200049A")]
	public class FMODDynamicMaterialAudioEvent : GenericImpactEvent
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetAudioMaterial material;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioMaterial concrete;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioMaterial metal;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioMaterial enemy;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float speedValue;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool useSizeParameter;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1056C74", Offset = "0x1056C74")]
		public AssetAudioParameter sizeParameter;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1056CB0", Offset = "0x1056CB0")]
		public FMODDynamicObject.Size size;

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x10C2844", Offset = "0x10C2844", VA = "0x10C2844", Slot = "4")]
		public override void Execute(Transform emitter, Rigidbody rigidbody, Vector3 point, float speed)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x10C2B0C", Offset = "0x10C2B0C", VA = "0x10C2B0C")]
		public FMODDynamicMaterialAudioEvent()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class FMODAudioVisualizer : MonoBehaviour
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text label;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject canvas;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		public bool willBeDestroyed;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool hasEmitter;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float occlusion;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string eventName;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<AudioParameterValue> parameters;

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x10C1320", Offset = "0x10C1320", VA = "0x10C1320")]
		internal void SetUp(EventInstance instance, string path, Vector3 point, float occlusion, List<AudioParameterValue> parameters)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x10C0710", Offset = "0x10C0710", VA = "0x10C0710")]
		internal void SetUp(StudioEventEmitter emitterScript, string audioEvent, Transform emitter, float occlusion, List<AudioParameterValue> parameters)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x10C1908", Offset = "0x10C1908", VA = "0x10C1908")]
		private void Update()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x10C1ED8", Offset = "0x10C1ED8", VA = "0x10C1ED8")]
		public FMODAudioVisualizer()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class FMODContinuousParameterHandler : MonoBehaviour
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal StudioEventEmitter eventEmitter;

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x10C23FC", Offset = "0x10C23FC", VA = "0x10C23FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x10C248C", Offset = "0x10C248C", VA = "0x10C248C")]
		private void Update()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x10C2628", Offset = "0x10C2628", VA = "0x10C2628")]
		public FMODContinuousParameterHandler()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class FMODContinuousSpeedBasedEvent : MonoBehaviour
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent soundEvent;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedPercentage;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter fmodEmitter;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x10C2630", Offset = "0x10C2630", VA = "0x10C2630")]
		private void Start()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x10C2784", Offset = "0x10C2784", VA = "0x10C2784")]
		public void UpdateSpeed(float val)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x10C2834", Offset = "0x10C2834", VA = "0x10C2834")]
		public FMODContinuousSpeedBasedEvent()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class FMODDynamicObject : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		public enum Size
		{
			[Token(Token = "0x400137A")]
			Small,
			[Token(Token = "0x400137B")]
			Medium,
			[Token(Token = "0x400137C")]
			Large
		}

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioMaterial material;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useSizeParameter;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1056CFC", Offset = "0x1056CFC")]
		public AssetAudioParameter sizeParameter;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1056D38", Offset = "0x1056D38")]
		public Size size;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool useScrapeSound;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minAudioInterval;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[ReadOnly]
		public bool isPlaying;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4001373")]
		private const float scrapeMinTime = 0.1f;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float scrapeTimer;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StudioEventEmitter fmodEmitter;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool testScrape;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Collider> collidersInContact;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastCollision;

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x10C2B14", Offset = "0x10C2B14", VA = "0x10C2B14")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x10C2B6C", Offset = "0x10C2B6C", VA = "0x10C2B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x10C2BFC", Offset = "0x10C2BFC", VA = "0x10C2BFC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105C988", Offset = "0x105C988")]
		public void TestScrape()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x10C2C14", Offset = "0x10C2C14", VA = "0x10C2C14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x10C2E20", Offset = "0x10C2E20", VA = "0x10C2E20")]
		private void Disable()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x10C2EC4", Offset = "0x10C2EC4", VA = "0x10C2EC4")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x10C2F98", Offset = "0x10C2F98", VA = "0x10C2F98")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x10C346C", Offset = "0x10C346C", VA = "0x10C346C")]
		public FMODDynamicObject()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class FMODEnvironmentAudio : MonoBehaviour
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxDistance;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float panOverrideDistance;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera mainCam;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isPlaying;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventInstance eventInstance;

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x10C3664", Offset = "0x10C3664", VA = "0x10C3664")]
		private void Update()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x10C38B0", Offset = "0x10C38B0", VA = "0x10C38B0")]
		private void Stop()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x10C39F8", Offset = "0x10C39F8", VA = "0x10C39F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x10C38F4", Offset = "0x10C38F4", VA = "0x10C38F4")]
		private void Play()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x10C39FC", Offset = "0x10C39FC", VA = "0x10C39FC")]
		public FMODEnvironmentAudio()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class FMODStartContinuousAudioEvent : FMODAudioEvent
	{
		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FMODAudioVisualizer visualizer;

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x10C48C0", Offset = "0x10C48C0", VA = "0x10C48C0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x10C4C30", Offset = "0x10C4C30", VA = "0x10C4C30")]
		public FMODStartContinuousAudioEvent()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class FMODAudioEventOnTransform : FMODAudioEvent
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float audioDuration;

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x10C0300", Offset = "0x10C0300", VA = "0x10C0300", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x10C0B2C", Offset = "0x10C0B2C", VA = "0x10C0B2C")]
		public FMODAudioEventOnTransform()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class FMODStopContinuousAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6001333")]
		[Address(RVA = "0x10C4CE4", Offset = "0x10C4CE4", VA = "0x10C4CE4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x10C4D90", Offset = "0x10C4D90", VA = "0x10C4D90")]
		public FMODStopContinuousAudioEvent()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class FMODWeaponAudioEvent : GenericEvent
	{
		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x10C55CC", Offset = "0x10C55CC", VA = "0x10C55CC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x10C5738", Offset = "0x10C5738", VA = "0x10C5738")]
		public FMODWeaponAudioEvent()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class FMODEmptyWeaponAudioEvent : GenericEvent
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x10C34F0", Offset = "0x10C34F0", VA = "0x10C34F0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x10C365C", Offset = "0x10C365C", VA = "0x10C365C")]
		public FMODEmptyWeaponAudioEvent()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class FMODReloadWeaponAudioEvent : GenericEvent
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x10C3C54", Offset = "0x10C3C54", VA = "0x10C3C54", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x10C3E70", Offset = "0x10C3E70", VA = "0x10C3E70")]
		public FMODReloadWeaponAudioEvent()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class GlobalAudioLibrary : MonoBehaviour
	{
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GlobalAudioLibrary instance;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent chipOpen;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x10C5740", Offset = "0x10C5740", VA = "0x10C5740")]
		private void Awake()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x10C5794", Offset = "0x10C5794", VA = "0x10C5794")]
		public GlobalAudioLibrary()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104CD00", Offset = "0x104CD00")]
	public class AssetFMODCollisionMatrix : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004A9")]
		public class MatrixElement
		{
			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideLabel]
			public string descriptiveName;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "LabelWidthAttribute", RVA = "0x1056D94", Offset = "0x1056D94")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x1056D94", Offset = "0x1056D94")]
			[HideLabel]
			[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1056D94", Offset = "0x1056D94")]
			public AssetAudioMaterial emitter;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x1056E30", Offset = "0x1056E30")]
			[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1056E30", Offset = "0x1056E30")]
			[HideLabel]
			[AttributeAttribute(Name = "LabelWidthAttribute", RVA = "0x1056E30", Offset = "0x1056E30")]
			public AssetAudioMaterial receiver;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideLabel]
			[AttributeAttribute(Name = "LabelWidthAttribute", RVA = "0x1056ECC", Offset = "0x1056ECC")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x1056ECC", Offset = "0x1056ECC")]
			[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1056ECC", Offset = "0x1056ECC")]
			public AssetFMODEvent audioEvent;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x1056F68", Offset = "0x1056F68")]
			public List<AssetAudioParameter> audioParameters;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0x1056FA4", Offset = "0x1056FA4")]
			public List<AudioParameterValue> parameterValues;

			[Token(Token = "0x600133F")]
			[Address(RVA = "0x11E3188", Offset = "0x11E3188", VA = "0x11E3188")]
			public MatrixElement()
			{
			}
		}

		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CD54", Offset = "0x104CD54")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetAudioMaterial a;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AssetAudioMaterial b;

			[Token(Token = "0x6001340")]
			[Address(RVA = "0x11E2E40", Offset = "0x11E2E40", VA = "0x11E2E40")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001341")]
			[Address(RVA = "0x11E2EC8", Offset = "0x11E2EC8", VA = "0x11E2EC8")]
			internal bool <GetEventForCollision>b__0(MatrixElement c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001342")]
			[Address(RVA = "0x11E2FA4", Offset = "0x11E2FA4", VA = "0x11E2FA4")]
			internal bool <GetEventForCollision>b__1(MatrixElement c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CD64", Offset = "0x104CD64")]
		private sealed class <>c__DisplayClass2_1
		{
			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetAudioParameter audioParameter;

			[Token(Token = "0x6001343")]
			[Address(RVA = "0x11E2E48", Offset = "0x11E2E48", VA = "0x11E2E48")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x6001344")]
			[Address(RVA = "0x11E3070", Offset = "0x11E3070", VA = "0x11E3070")]
			internal bool <GetEventForCollision>b__2(AudioParameterValue p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CD74", Offset = "0x104CD74")]
		private sealed class <>c__DisplayClass2_2
		{
			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioParameterValue parameterValue;

			[Token(Token = "0x6001345")]
			[Address(RVA = "0x11E2E50", Offset = "0x11E2E50", VA = "0x11E2E50")]
			public <>c__DisplayClass2_2()
			{
			}

			[Token(Token = "0x6001346")]
			[Address(RVA = "0x11E30F8", Offset = "0x11E30F8", VA = "0x11E30F8")]
			internal bool <GetEventForCollision>b__3(AudioParameterValue p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MatrixElement> combinations;

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x11E2890", Offset = "0x11E2890", VA = "0x11E2890")]
		public CollisionInfo GetEventForCollision(AssetAudioMaterial a, AssetAudioMaterial b, List<AudioParameterValue> audioParameterValues)
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x11E2E58", Offset = "0x11E2E58", VA = "0x11E2E58")]
		public AssetFMODCollisionMatrix()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class AudioParameterProperty : MonoBehaviour
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter parameter;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int value;

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x10BE6C8", Offset = "0x10BE6C8", VA = "0x10BE6C8")]
		public AudioParameterProperty()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class ClosingAudioBehindPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056FE0", Offset = "0x1056FE0")]
		public Transform targetRoot;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057018", Offset = "0x1057018")]
		public Transform target;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startDistance;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endDistance;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve lerpCurve;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float approachDuration;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float currentYAngle;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentYVelocity;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float targetYAngle;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float percentage;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 currentVelocity;

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x10BE880", Offset = "0x10BE880", VA = "0x10BE880")]
		private void Start()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x10BEABC", Offset = "0x10BEABC", VA = "0x10BEABC")]
		private float GetTargetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x10BE8E8", Offset = "0x10BE8E8", VA = "0x10BE8E8")]
		private void UpdateTargetY()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x10BEBC4", Offset = "0x10BEBC4", VA = "0x10BEBC4")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x10BED28", Offset = "0x10BED28", VA = "0x10BED28")]
		private void UpdateYAngle()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x10BE93C", Offset = "0x10BE93C", VA = "0x10BE93C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x10BEDD8", Offset = "0x10BEDD8", VA = "0x10BEDD8")]
		private void Update()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x10BEF34", Offset = "0x10BEF34", VA = "0x10BEF34")]
		public ClosingAudioBehindPlayer()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class CollisionInfo
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid eventName;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hasError;

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x10BF08C", Offset = "0x10BF08C", VA = "0x10BF08C")]
		public CollisionInfo(AssetFMODEvent eventName, List<AudioParameterValue> parameters, bool hasError = false)
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class FMODAlertLevel : MonoBehaviour
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioGlobalParameterTrigger alertLevel;

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x10BF430", Offset = "0x10BF430", VA = "0x10BF430")]
		private void Update()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x10BF434", Offset = "0x10BF434", VA = "0x10BF434")]
		public FMODAlertLevel()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104CD84", Offset = "0x104CD84")]
	public class FMODSettings : MonoBehaviour
	{
		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FMODSettings instance;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioGlobalParameterTrigger roomWidth;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StudioGlobalParameterTrigger roomHeight;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StudioGlobalParameterTrigger roomLength;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StudioGlobalParameterTrigger levelTime;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StudioGlobalParameterTrigger overseerApproach;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StudioGlobalParameterTrigger alertLevel;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public StudioGlobalParameterTrigger endOfLevelIntensity;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public StudioGlobalParameterTrigger pauseIntensity;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StudioEventEmitter transitionEventEmitter;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AssetFMODCollisionMatrix fMODCollisionMatrix;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntegerValueData alarmStat;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float overseerApproachDelay;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve roomSizeToParameterValue;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[ReadOnly]
		public float levelTimeValue;

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x10C4194", Offset = "0x10C4194", VA = "0x10C4194")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x10C41E8", Offset = "0x10C41E8", VA = "0x10C41E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x10C423C", Offset = "0x10C423C", VA = "0x10C423C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105C998", Offset = "0x105C998")]
		public void UpdateRoomSize(Vector3 roomSize)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x10C4344", Offset = "0x10C4344", VA = "0x10C4344")]
		private void Update()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x10C4368", Offset = "0x10C4368", VA = "0x10C4368")]
		private void UpdateLevelTime()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x10C43BC", Offset = "0x10C43BC", VA = "0x10C43BC")]
		private void UpdateAlertLevel()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x10C454C", Offset = "0x10C454C", VA = "0x10C454C")]
		public void SetEndOfLevelIntensity(float val)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x10C469C", Offset = "0x10C469C", VA = "0x10C469C")]
		public void SetPauseIntensity(float val)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x10C46D4", Offset = "0x10C46D4", VA = "0x10C46D4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x105C9D0", Offset = "0x105C9D0")]
		private void SetRandomRoomSize()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x10C48B0", Offset = "0x10C48B0", VA = "0x10C48B0")]
		public FMODSettings()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class UpdateReverbOnMovement : MonoBehaviour
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OcclusionCamera occlusionCamera;

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x10C6564", Offset = "0x10C6564", VA = "0x10C6564")]
		private void Awake()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x10C6670", Offset = "0x10C6670", VA = "0x10C6670")]
		private void OcclusionCamera_OnGridPositionChanged(Vector3Int gridPos)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x10C67C8", Offset = "0x10C67C8", VA = "0x10C67C8")]
		public UpdateReverbOnMovement()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104CD98", Offset = "0x104CD98")]
	public class OnSuccessfulHealEvent : GenericEventEmitter
	{
		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Healthkit Healthkit;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057060", Offset = "0x1057060")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057060", Offset = "0x1057060")]
		public List<IAction> Actions;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x10C5E38", Offset = "0x10C5E38", VA = "0x10C5E38", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x10C5F04", Offset = "0x10C5F04", VA = "0x10C5F04")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x10C5F94", Offset = "0x10C5F94", VA = "0x10C5F94")]
		private void OnUseItem(GEUnit unit)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x10C5FA8", Offset = "0x10C5FA8", VA = "0x10C5FA8")]
		public OnSuccessfulHealEvent()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104CDD0", Offset = "0x104CDD0")]
	public class OnUseEvent : GenericEventEmitter
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UsableItem Item;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10570D0", Offset = "0x10570D0")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10570D0", Offset = "0x10570D0")]
		public List<IAction> Actions;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057140", Offset = "0x1057140")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057140", Offset = "0x1057140")]
		public List<IUnitAction> UnitActions;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10571B0", Offset = "0x10571B0")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x10571B0", Offset = "0x10571B0")]
		public List<ISideAction> SideActions;

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x10C6018", Offset = "0x10C6018", VA = "0x10C6018", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x10C60B8", Offset = "0x10C60B8", VA = "0x10C60B8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x10C6148", Offset = "0x10C6148", VA = "0x10C6148")]
		private void OnUseItem(GEUnit unit)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x10C62FC", Offset = "0x10C62FC", VA = "0x10C62FC")]
		public OnUseEvent()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class OcclusionHandler : MonoBehaviour
	{
		[Token(Token = "0x20004B6")]
		private class OcclusionInfluence
		{
			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float influence;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float occlusion;

			[Token(Token = "0x6001370")]
			[Address(RVA = "0x10C5E00", Offset = "0x10C5E00", VA = "0x10C5E00")]
			public OcclusionInfluence(float influence, float occlusion)
			{
			}
		}

		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CE08", Offset = "0x104CE08")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Int pos;

			[Token(Token = "0x6001371")]
			[Address(RVA = "0x10C5CB8", Offset = "0x10C5CB8", VA = "0x10C5CB8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001372")]
			[Address(RVA = "0x10C5CC0", Offset = "0x10C5CC0", VA = "0x10C5CC0")]
			internal bool <GetOcclusionAtPoint>b__0(OcclusionPoint p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001373")]
			[Address(RVA = "0x10C5D60", Offset = "0x10C5D60", VA = "0x10C5D60")]
			internal bool <GetOcclusionAtPoint>b__1(OcclusionPoint p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask occlusionMask;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxRaycastDistance;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1057220", Offset = "0x1057220")]
		public bool debug;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numVisualizedRaycasts;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OcclusionHandler _instance;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioListener mainListener;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Tuple<Vector3, Vector3>> lastRaycasts;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool started;

		[Token(Token = "0x1700018F")]
		public static OcclusionHandler Instance
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x10C2530", Offset = "0x10C2530", VA = "0x10C2530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x10C5834", Offset = "0x10C5834", VA = "0x10C5834")]
		private void Start()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x10C5920", Offset = "0x10C5920", VA = "0x10C5920")]
		private void Instance_OnGenerateFinished()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x10C579C", Offset = "0x10C579C", VA = "0x10C579C")]
		private void SetUp()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x10C2620", Offset = "0x10C2620", VA = "0x10C2620")]
		public float GetOcclusionAtPoint(Vector3 source)
		{
			return default(float);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x10C5924", Offset = "0x10C5924", VA = "0x10C5924")]
		private Vector3Int GetIndexGridPosition(Vector3 pos, int i)
		{
			return default(Vector3Int);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x10C5B34", Offset = "0x10C5B34", VA = "0x10C5B34")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x10C5C38", Offset = "0x10C5C38", VA = "0x10C5C38")]
		public OcclusionHandler()
		{
		}
	}
}
namespace Peacemaker.Menu
{
	[Token(Token = "0x20004B8")]
	public class MenuEffect : MonoBehaviour
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MenuEffect Instance;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x110C040", Offset = "0x110C040", VA = "0x110C040")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x110C094", Offset = "0x110C094", VA = "0x110C094")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x110C130", Offset = "0x110C130", VA = "0x110C130")]
		public MenuEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004B9")]
	public class OpenMenu : GenericEvent, IAction
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableContinueButtons;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IgnoreLock;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x110C138", Offset = "0x110C138", VA = "0x110C138", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x110C1A4", Offset = "0x110C1A4", VA = "0x110C1A4")]
		public OpenMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BA")]
	public class CloseMenu : IAction
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0x110BF04", Offset = "0x110BF04", VA = "0x110BF04", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x110BF60", Offset = "0x110BF60", VA = "0x110BF60")]
		public CloseMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BB")]
	public class ShowMenuEffect : GenericEvent, IAction
	{
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x110C218", Offset = "0x110C218", VA = "0x110C218", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x110C2D0", Offset = "0x110C2D0", VA = "0x110C2D0")]
		public ShowMenuEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BC")]
	public class HideMenuEffect : IAction
	{
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x110BF68", Offset = "0x110BF68", VA = "0x110BF68", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x110BFD4", Offset = "0x110BFD4", VA = "0x110BFD4")]
		public HideMenuEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BD")]
	public class SelectMenu : GenericEvent, IAction
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x110C1AC", Offset = "0x110C1AC", VA = "0x110C1AC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x110C210", Offset = "0x110C210", VA = "0x110C210")]
		public SelectMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BE")]
	public class ToggleMenu : GenericEvent, IAction
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x110C2D8", Offset = "0x110C2D8", VA = "0x110C2D8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x110C334", Offset = "0x110C334", VA = "0x110C334")]
		public ToggleMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BF")]
	public class LockMenu : GenericEvent, IAction
	{
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x110BFDC", Offset = "0x110BFDC", VA = "0x110BFDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x110C038", Offset = "0x110C038", VA = "0x110C038")]
		public LockMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C0")]
	public class UnLockMenu : GenericEvent, IAction
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x110C33C", Offset = "0x110C33C", VA = "0x110C33C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x110C398", Offset = "0x110C398", VA = "0x110C398")]
		public UnLockMenu()
		{
		}
	}
}
namespace Peacemaker.AI
{
	[Token(Token = "0x20004C1")]
	public class RobotAttackBehaviour : AIBehaviour
	{
		[Token(Token = "0x20004C2")]
		public enum State
		{
			[Token(Token = "0x40013D9")]
			Attack,
			[Token(Token = "0x40013DA")]
			Reposition
		}

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1057258", Offset = "0x1057258")]
		public int numShotsBeforeMoving;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float repositionDistance;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float repositionDuration;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float repositionSpeedPercentage;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[ReadOnly]
		public int numShots;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[ReadOnly]
		public State currentState;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 repositionTarget;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool lookInDirectionOfShot;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float respositionTimer;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BaseAttack baseAttack;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10572B0", Offset = "0x10572B0")]
		private float <lastAttack>k__BackingField;

		[Token(Token = "0x17000190")]
		public float lastAttack
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x11D8610", Offset = "0x11D8610", VA = "0x11D8610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CA08", Offset = "0x105CA08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x11D8618", Offset = "0x11D8618", VA = "0x11D8618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CA18", Offset = "0x105CA18")]
			private set
			{
			}
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x11D7C74", Offset = "0x11D7C74", VA = "0x11D7C74", Slot = "21")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x11D7C84", Offset = "0x11D7C84", VA = "0x11D7C84")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x11D7CD4", Offset = "0x11D7CD4", VA = "0x11D7CD4")]
		private Vector3 GetTargetLookDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x11D7E34", Offset = "0x11D7E34", VA = "0x11D7E34", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x11D81D0", Offset = "0x11D81D0", VA = "0x11D81D0")]
		private void SetRepositionState(UnitTag firstTarget)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x11D8544", Offset = "0x11D8544", VA = "0x11D8544", Slot = "28")]
		public override void EndExecution()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x11D8620", Offset = "0x11D8620", VA = "0x11D8620", Slot = "29")]
		public override void DrawProperties(Rect currentRect, GUIStyle style)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x11D8628", Offset = "0x11D8628", VA = "0x11D8628", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x11D86B0", Offset = "0x11D86B0", VA = "0x11D86B0")]
		public RobotAttackBehaviour()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class ChargeBehaviour : AIBehaviour
	{
		[Token(Token = "0x20004C4")]
		public enum State
		{
			[Token(Token = "0x40013E7")]
			Charging,
			[Token(Token = "0x40013E8")]
			Cooldown,
			[Token(Token = "0x40013E9")]
			Preparing
		}

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float acceptedAngle;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float chargeDistance;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float chargeDuration;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float chargeCooldown;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float lastStateChange;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[ReadOnly]
		public State currentState;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[ReadOnly]
		public float currentAngle;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action OnChargeStart;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action OnChargeFinished;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 originalPosition;

		[Token(Token = "0x14000032")]
		public event Action<bool> OnCharge
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x11D38FC", Offset = "0x11D38FC", VA = "0x11D38FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CA28", Offset = "0x105CA28")]
			add
			{
			}
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x11D39A0", Offset = "0x11D39A0", VA = "0x11D39A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CA38", Offset = "0x105CA38")]
			remove
			{
			}
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x11D3A44", Offset = "0x11D3A44", VA = "0x11D3A44", Slot = "21")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x11D3A4C", Offset = "0x11D3A4C", VA = "0x11D3A4C", Slot = "22")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x11D3A94", Offset = "0x11D3A94", VA = "0x11D3A94", Slot = "29")]
		public override void DrawProperties(Rect currentRect, GUIStyle style)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x11D3A9C", Offset = "0x11D3A9C", VA = "0x11D3A9C", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x11D3F70", Offset = "0x11D3F70", VA = "0x11D3F70", Slot = "27")]
		public override void StartExecution()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x11D3FE0", Offset = "0x11D3FE0", VA = "0x11D3FE0", Slot = "28")]
		public override void EndExecution()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x11D4050", Offset = "0x11D4050", VA = "0x11D4050", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x11D4098", Offset = "0x11D4098", VA = "0x11D4098")]
		internal void Stop()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x11D40D8", Offset = "0x11D40D8", VA = "0x11D40D8")]
		public ChargeBehaviour()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class DistanceBasedViewDetection : BaseDetectUnits
	{
		[Serializable]
		[Token(Token = "0x20004C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CE18", Offset = "0x104CE18")]
		private sealed class <>c
		{
			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GEUnit> <>9__5_0;

			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x11D4F94", Offset = "0x11D4F94", VA = "0x11D4F94")]
			public <>c()
			{
			}

			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x11D4F9C", Offset = "0x11D4F9C", VA = "0x11D4F9C")]
			internal bool <UpdateSight>b__5_0(GEUnit v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxDistance;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int updateInterval;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int counter;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AIBehaviourManager manager;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GEUnit myUnit;

		[Token(Token = "0x14000033")]
		public event Action<List<GEUnit>> OnUnitsUpdated
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x11D4D04", Offset = "0x11D4D04", VA = "0x11D4D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CA48", Offset = "0x105CA48")]
			add
			{
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x11D4DA8", Offset = "0x11D4DA8", VA = "0x11D4DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CA58", Offset = "0x105CA58")]
			remove
			{
			}
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x11D47F4", Offset = "0x11D47F4", VA = "0x11D47F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x11D4824", Offset = "0x11D4824", VA = "0x11D4824")]
		private void Update()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x11D4864", Offset = "0x11D4864", VA = "0x11D4864")]
		private void UpdateSight()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x11D4D00", Offset = "0x11D4D00", VA = "0x11D4D00", Slot = "6")]
		public override void InformAboutUnit(GEUnit unit)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x11D4E4C", Offset = "0x11D4E4C", VA = "0x11D4E4C", Slot = "4")]
		public override void RegisterCallback(Action<List<GEUnit>> callback)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x11D4E50", Offset = "0x11D4E50", VA = "0x11D4E50", Slot = "7")]
		public override void SetManager(AIBehaviourManager manager)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x11D4F18", Offset = "0x11D4F18", VA = "0x11D4F18", Slot = "5")]
		public override void UnregisterCallback(Action<List<GEUnit>> callback)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x11D4F1C", Offset = "0x11D4F1C", VA = "0x11D4F1C")]
		public DistanceBasedViewDetection()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class InteractWithTerminalBehaviour : AIBehaviour
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[ReadOnly]
		public InteractiveTerminalPoint terminalPoint;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public IKWeaponAim weaponAim;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool hasTriggered;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x11D6314", Offset = "0x11D6314", VA = "0x11D6314", Slot = "27")]
		public override void StartExecution()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x11D6658", Offset = "0x11D6658", VA = "0x11D6658", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x11D6764", Offset = "0x11D6764", VA = "0x11D6764", Slot = "28")]
		public override void EndExecution()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x11D6830", Offset = "0x11D6830", VA = "0x11D6830", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x11D6878", Offset = "0x11D6878", VA = "0x11D6878")]
		public InteractWithTerminalBehaviour()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class InteractiveTerminalPoint : MonoBehaviour
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysicalButton physicalButton;

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x11D6880", Offset = "0x11D6880", VA = "0x11D6880")]
		public InteractiveTerminalPoint()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class PropDamageOnContact : DamageOnContact
	{
		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public DamageData damageData;

		[Token(Token = "0x17000191")]
		protected override float CurrentDamage
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x11D7A5C", Offset = "0x11D7A5C", VA = "0x11D7A5C", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x11D7B24", Offset = "0x11D7B24", VA = "0x11D7B24")]
		public PropDamageOnContact()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class SimpleAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit unit;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon weapon;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Collider> unitColliders;

		[Token(Token = "0x17000192")]
		public bool IsAttacking
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x11D89FC", Offset = "0x11D89FC", VA = "0x11D89FC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x11D898C", Offset = "0x11D898C", VA = "0x11D898C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x11D8A04", Offset = "0x11D8A04", VA = "0x11D8A04", Slot = "6")]
		public bool Attack(UnitTag unitTag)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x11D8A64", Offset = "0x11D8A64", VA = "0x11D8A64", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x11D8AC4", Offset = "0x11D8AC4", VA = "0x11D8AC4", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x11D8ACC", Offset = "0x11D8ACC", VA = "0x11D8ACC", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x11D8AEC", Offset = "0x11D8AEC", VA = "0x11D8AEC", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x11D8AF4", Offset = "0x11D8AF4", VA = "0x11D8AF4", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x11D8AF8", Offset = "0x11D8AF8", VA = "0x11D8AF8", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x11D8B00", Offset = "0x11D8B00", VA = "0x11D8B00")]
		public SimpleAttack()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class SpawnEnemiesAttack : SerializedMonoBehaviour, IAttack
	{
		[Serializable]
		[Token(Token = "0x20004CC")]
		public struct EnemyPrefabSpawn
		{
			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnitData spawnUnit;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10575E4", Offset = "0x10575E4")]
			public int spawnProbability;
		}

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CE28", Offset = "0x104CE28")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RouletteWheel<UnitData> rouletteWheel;

			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x11D8D34", Offset = "0x11D8D34", VA = "0x11D8D34")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x11D97D4", Offset = "0x11D97D4", VA = "0x11D97D4")]
			internal void <GetGeUnit>b__0(AssetContentPool.PoolProbability poolObject)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CE38", Offset = "0x104CE38")]
		private sealed class <>c
		{
			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GEUnit> <>9__30_0;

			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x11D971C", Offset = "0x11D971C", VA = "0x11D971C")]
			public <>c()
			{
			}

			[Token(Token = "0x60013D2")]
			[Address(RVA = "0x11D9724", Offset = "0x11D9724", VA = "0x11D9724")]
			internal bool <Update>b__30_0(GEUnit u)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CE48", Offset = "0x104CE48")]
		private sealed class <StartSpawnAnimationPauseAndSpawn>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnEnemiesAttack <>4__this;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x17000194")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013D6")]
				[Address(RVA = "0x11D9B98", Offset = "0x11D9B98", VA = "0x11D9B98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000195")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D8")]
				[Address(RVA = "0x11D9C00", Offset = "0x11D9C00", VA = "0x11D9C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D3")]
			[Address(RVA = "0x11D93DC", Offset = "0x11D93DC", VA = "0x11D93DC")]
			[DebuggerHidden]
			public <StartSpawnAnimationPauseAndSpawn>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x11D9884", Offset = "0x11D9884", VA = "0x11D9884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x11D9888", Offset = "0x11D9888", VA = "0x11D9888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x11D9BA0", Offset = "0x11D9BA0", VA = "0x11D9BA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x1057310", Offset = "0x1057310")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x1057310", Offset = "0x1057310")]
		private AssetContentPool _assetContentPool;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool _useSingleUnitSpawn;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x105739C", Offset = "0x105739C")]
		public UnitData spawnedUnit;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform spawnPoint;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int maxNumInSceneSpawn;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool useMaxSpawnNum;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x10573D8", Offset = "0x10573D8")]
		public int maxSpawnNum;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _curSpawnedUnits;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float spawnInterval;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[ReadOnly]
		public List<GEUnit> spawnedUnits;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float timeSinceLastSpawn;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float lastAttack;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float WaitBeforeSpawn;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Animator EnemyAnimator;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int SpawnProgress;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int SpawnsLeftProgress;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int SpawnEnemyTrigger;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool IncreaseProgressOnlyWhenPlayerIsDetected;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057424", Offset = "0x1057424")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057424", Offset = "0x1057424")]
		public List<GenericEvent> SpawnEnemyEvents;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057494", Offset = "0x1057494")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057494", Offset = "0x1057494")]
		public List<IFloatAction> ProductionFloatAction;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057504", Offset = "0x1057504")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057504", Offset = "0x1057504")]
		[InlineProperty]
		public List<GenericEvent> StartProductionEvent;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057574", Offset = "0x1057574")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057574", Offset = "0x1057574")]
		public List<GenericEvent> StopProductionEvent;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _productionStarted;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool _productionStoped;

		[Token(Token = "0x17000193")]
		public bool IsAttacking
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x11D8B08", Offset = "0x11D8B08", VA = "0x11D8B08", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x11D8B40", Offset = "0x11D8B40", VA = "0x11D8B40")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x11D8B44", Offset = "0x11D8B44", VA = "0x11D8B44")]
		private GEUnit GetGeUnit()
		{
			return null;
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x11D8D3C", Offset = "0x11D8D3C", VA = "0x11D8D3C", Slot = "12")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x11D8FD8", Offset = "0x11D8FD8", VA = "0x11D8FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x11D8D74", Offset = "0x11D8D74", VA = "0x11D8D74", Slot = "13")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x11D9348", Offset = "0x11D9348", VA = "0x11D9348")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CA68", Offset = "0x105CA68")]
		private IEnumerator StartSpawnAnimationPauseAndSpawn(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x11D9260", Offset = "0x11D9260", VA = "0x11D9260")]
		private GEUnit SpawnUnit(GEUnit spawnedUnit, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x11D9408", Offset = "0x11D9408", VA = "0x11D9408", Slot = "11")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x11D9410", Offset = "0x11D9410", VA = "0x11D9410", Slot = "15")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x11D942C", Offset = "0x11D942C", VA = "0x11D942C", Slot = "17")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x11D9434", Offset = "0x11D9434", VA = "0x11D9434", Slot = "14")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x11D943C", Offset = "0x11D943C", VA = "0x11D943C", Slot = "16")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x11D9440", Offset = "0x11D9440", VA = "0x11D9440")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x11D946C", Offset = "0x11D946C", VA = "0x11D946C")]
		public SpawnEnemiesAttack()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x11D9640", Offset = "0x11D9640", VA = "0x11D9640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CACC", Offset = "0x105CACC")]
		private void <Attack>b__31_0(GenericEvent enemyEvent)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x11D967C", Offset = "0x11D967C", VA = "0x11D967C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CADC", Offset = "0x105CADC")]
		private void <StartSpawnAnimationPauseAndSpawn>b__32_0(GenericEvent enemyEvent)
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class TimeSinceDetectedCondition : Condition, IListenToNoise
	{
		[Serializable]
		[Token(Token = "0x20004D1")]
		public class UnitVisibilityInfo
		{
			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnitTag unitTag;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float lastVisible;

			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float visibleSince;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool currentlyInSight;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool isDetected;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float detectionProgress;

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x11DA90C", Offset = "0x11DA90C", VA = "0x11DA90C")]
			public UnitVisibilityInfo(UnitTag unitTag, float lastVisible, float visibleSince)
			{
			}
		}

		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CE58", Offset = "0x104CE58")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<UnitTag, UnitVisibilityInfo> pair;

			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x11DB0F0", Offset = "0x11DB0F0", VA = "0x11DB0F0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x11DB870", Offset = "0x11DB870", VA = "0x11DB870")]
			internal bool <ViewCone_OnViewConeUpdated>b__0(UnitVisibilityInfo p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maximumTimeSinceDetection;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BaseDetectUnits viewCone;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float timeMemory;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float detectionTime;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool hasEars;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool reportDetectionToNearbyUnits;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float reportDistance;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Dictionary<UnitTag, UnitVisibilityInfo> currentTags;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastProgress;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _isTrueMaxProgress;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool debug;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1057610", Offset = "0x1057610")]
		public List<UnitVisibilityInfo> currentlyVisible;

		[Token(Token = "0x17000196")]
		private float isTrueMaxProgress
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x11DB2E8", Offset = "0x11DB2E8", VA = "0x11DB2E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x11DA3E8", Offset = "0x11DA3E8", VA = "0x11DA3E8")]
			set
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<float> OnIsTrueProgressChanged
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x11DB0F8", Offset = "0x11DB0F8", VA = "0x11DB0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CB3C", Offset = "0x105CB3C")]
			add
			{
			}
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x11DB19C", Offset = "0x11DB19C", VA = "0x11DB19C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CB4C", Offset = "0x105CB4C")]
			remove
			{
			}
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x11DA168", Offset = "0x11DA168", VA = "0x11DA168", Slot = "31")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x11DA1CC", Offset = "0x11DA1CC", VA = "0x11DA1CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x11DA36C", Offset = "0x11DA36C", VA = "0x11DA36C")]
		private void Manager_OnUpdateComplete()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x11DA420", Offset = "0x11DA420", VA = "0x11DA420")]
		public void AddTarget(UnitTag unitTag)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x11DA94C", Offset = "0x11DA94C", VA = "0x11DA94C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x11DAA2C", Offset = "0x11DAA2C", VA = "0x11DAA2C")]
		private void ViewCone_OnViewConeUpdated(List<GEUnit> units)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x11DB240", Offset = "0x11DB240", VA = "0x11DB240", Slot = "22")]
		public override string GetDescription(UnitTag currentTarget)
		{
			return null;
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x11DB2F0", Offset = "0x11DB2F0", VA = "0x11DB2F0", Slot = "21")]
		protected override bool IsTrueInternal(ConditionInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x11DB574", Offset = "0x11DB574", VA = "0x11DB574", Slot = "24")]
		public override void DrawProperties(Rect currentRect, GUIStyle style)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x11DB69C", Offset = "0x11DB69C", VA = "0x11DB69C", Slot = "32")]
		public void ReportNoise(UnitTag unitTag)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x11DB7D8", Offset = "0x11DB7D8", VA = "0x11DB7D8")]
		public TimeSinceDetectedCondition()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class TurretMovement : BaseMovement
	{
		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform turretBase;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform weaponBase;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BaseAttack baseAttack;

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x11DB9D4", Offset = "0x11DB9D4", VA = "0x11DB9D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x11DBAAC", Offset = "0x11DBAAC", VA = "0x11DBAAC")]
		private void BaseAttack_OnAim(Vector3 targetPos, float shotAngle)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x11DBC64", Offset = "0x11DBC64", VA = "0x11DBC64", Slot = "26")]
		public override void SetTargetLookDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x11DBCAC", Offset = "0x11DBCAC", VA = "0x11DBCAC", Slot = "30")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x11DBE30", Offset = "0x11DBE30", VA = "0x11DBE30")]
		public TurretMovement()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104CE68", Offset = "0x104CE68")]
	public class DamageData : ScriptableObject
	{
		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damage;

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x11D40F4", Offset = "0x11D40F4", VA = "0x11D40F4")]
		public DamageData()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x104CEB4", Offset = "0x104CEB4")]
	public class AddRotatedNavMeshes : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D6")]
		public class NavMesh
		{
			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 direction;

			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject navMeshAgentPrefab;

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x11D30BC", Offset = "0x11D30BC", VA = "0x11D30BC")]
			public NavMesh()
			{
			}
		}

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NavMeshMovement navMeshMovement;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<NavMesh> navMeshes;

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x11D2E24", Offset = "0x11D2E24", VA = "0x11D2E24")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x11D304C", Offset = "0x11D304C", VA = "0x11D304C")]
		public AddRotatedNavMeshes()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class DroneMovement : PhysicsBasedMovement
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1057648", Offset = "0x1057648")]
		public float velocityAdaptationSpeed;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float smoothDampTime;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float angularBreakSpeed;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool placeOnNavMeshPositionAtStart;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool placeNavMeshOnTargetPositionIfNoPathIsFound;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[ReadOnly]
		[SerializeField]
		private Vector3 currentTargetVelocity;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Vector3 offsetFromMovementTarget;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float offsetRandomizationY;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10576B8", Offset = "0x10576B8")]
		public float verticalRange;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float changeVerticalHeightInterval;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10576F0", Offset = "0x10576F0")]
		public float externalForceMultiplicator;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float externalForceRandomizer;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float externalAngularForce;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float maxSpeed;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float maxAngularSpeed;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float currentVerticalOffset;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float lastVerticalChange;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float timeSinceWaitingDrone;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 currentDroneMovementTarget;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 droneForwardTarget;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool initialized;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 stackedImpactForce;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float stackedImpactTimestamp;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x11D5008", Offset = "0x11D5008", VA = "0x11D5008", Slot = "37")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x11D5010", Offset = "0x11D5010", VA = "0x11D5010")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x11D5124", Offset = "0x11D5124", VA = "0x11D5124", Slot = "30")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x11D51F4", Offset = "0x11D51F4", VA = "0x11D51F4", Slot = "42")]
		protected override void FollowNMA()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x11D5528", Offset = "0x11D5528", VA = "0x11D5528")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x11D5A48", Offset = "0x11D5A48", VA = "0x11D5A48", Slot = "35")]
		public override void KnockOffFeet(Vector3 force)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x11D6194", Offset = "0x11D6194", VA = "0x11D6194", Slot = "36")]
		public override void KnockOffFeet()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x11D6198", Offset = "0x11D6198", VA = "0x11D6198")]
		public DroneMovement()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class ActivateUnitEvent : GenericEvent, IAction
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GEUnit geUnit;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enable;

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x11D2CD4", Offset = "0x11D2CD4", VA = "0x11D2CD4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x11D2D6C", Offset = "0x11D2D6C", VA = "0x11D2D6C")]
		public ActivateUnitEvent()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class LoseHealthEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damage;

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x11D6888", Offset = "0x11D6888", VA = "0x11D6888", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x11D692C", Offset = "0x11D692C", VA = "0x11D692C")]
		public LoseHealthEvent()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class LoseHealthUnitEvent : IUnitAttackInfoAction
	{
		[Token(Token = "0x20004DB")]
		public class Multiplicators
		{
			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<AssetUnitTag> tags;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float multiplicator;

			[Token(Token = "0x6001403")]
			[Address(RVA = "0x11D6F68", Offset = "0x11D6F68", VA = "0x11D6F68")]
			public Multiplicators()
			{
			}
		}

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float damage;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetInfoTag> AssetInfoTags;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Multiplicators> multiplicators;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x11D6934", Offset = "0x11D6934", VA = "0x11D6934")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x11D6BFC", Offset = "0x11D6BFC", VA = "0x11D6BFC", Slot = "4")]
		public void Execute(Transform emitter, GEUnit targetUnit, GEUnit attackingUnit)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x11D6ED0", Offset = "0x11D6ED0", VA = "0x11D6ED0")]
		public LoseHealthUnitEvent()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class DisableUnitInRangeForSeconds : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CEC8", Offset = "0x104CEC8")]
		private sealed class <DoDisableUnit>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit unit;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DisableUnitInRangeForSeconds <>4__this;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x17000197")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600140A")]
				[Address(RVA = "0x11D4784", Offset = "0x11D4784", VA = "0x11D4784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600140C")]
				[Address(RVA = "0x11D47EC", Offset = "0x11D47EC", VA = "0x11D47EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0x11D45C0", Offset = "0x11D45C0", VA = "0x11D45C0")]
			[DebuggerHidden]
			public <DoDisableUnit>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001408")]
			[Address(RVA = "0x11D4608", Offset = "0x11D4608", VA = "0x11D4608", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001409")]
			[Address(RVA = "0x11D460C", Offset = "0x11D460C", VA = "0x11D460C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600140B")]
			[Address(RVA = "0x11D478C", Offset = "0x11D478C", VA = "0x11D478C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MaxUnits;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Range;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Duration;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] _hitColliders;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _numColliders;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GEUnit _unit;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _numUnits;

		[Token(Token = "0x400145E")]
		private const int maxColliders = 20;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x11D43D4", Offset = "0x11D43D4", VA = "0x11D43D4", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x11D4544", Offset = "0x11D4544", VA = "0x11D4544")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CB5C", Offset = "0x105CB5C")]
		private IEnumerator DoDisableUnit(GEUnit unit)
		{
			return null;
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x11D45EC", Offset = "0x11D45EC", VA = "0x11D45EC")]
		public DisableUnitInRangeForSeconds()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class ChangeMaterialForSeconds : GenericUnitEvent, IUnitAction, IBulletAction
	{
		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CED8", Offset = "0x104CED8")]
		private sealed class <DoAddEffect>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnitDataInstance script;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChangeMaterialForSeconds <>4__this;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Material> <prevMaterial>5__2;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__3;

			[Token(Token = "0x17000199")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001415")]
				[Address(RVA = "0x11D388C", Offset = "0x11D388C", VA = "0x11D388C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001417")]
				[Address(RVA = "0x11D38F4", Offset = "0x11D38F4", VA = "0x11D38F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001412")]
			[Address(RVA = "0x11D328C", Offset = "0x11D328C", VA = "0x11D328C")]
			[DebuggerHidden]
			public <DoAddEffect>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001413")]
			[Address(RVA = "0x11D35E8", Offset = "0x11D35E8", VA = "0x11D35E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001414")]
			[Address(RVA = "0x11D35EC", Offset = "0x11D35EC", VA = "0x11D35EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001416")]
			[Address(RVA = "0x11D3894", Offset = "0x11D3894", VA = "0x11D3894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WeaponBullet weaponBullet;

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x11D3118", Offset = "0x11D3118", VA = "0x11D3118", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x11D3210", Offset = "0x11D3210", VA = "0x11D3210")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CC10", Offset = "0x105CC10")]
		private IEnumerator DoAddEffect(UnitDataInstance script)
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x11D32B8", Offset = "0x11D32B8", VA = "0x11D32B8", Slot = "6")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x11D33D8", Offset = "0x11D33D8", VA = "0x11D33D8")]
		private void Execute(IAttackable attackAble, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x11D35D8", Offset = "0x11D35D8", VA = "0x11D35D8")]
		public ChangeMaterialForSeconds()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class DisableUnitForSeconds : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CEE8", Offset = "0x104CEE8")]
		private sealed class <DoDisableUnit>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit unit;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DisableUnitForSeconds <>4__this;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x1700019B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600141E")]
				[Address(RVA = "0x11D4364", Offset = "0x11D4364", VA = "0x11D4364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001420")]
				[Address(RVA = "0x11D43CC", Offset = "0x11D43CC", VA = "0x11D43CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600141B")]
			[Address(RVA = "0x11D41CC", Offset = "0x11D41CC", VA = "0x11D41CC")]
			[DebuggerHidden]
			public <DoDisableUnit>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600141C")]
			[Address(RVA = "0x11D4208", Offset = "0x11D4208", VA = "0x11D4208", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600141D")]
			[Address(RVA = "0x11D420C", Offset = "0x11D420C", VA = "0x11D420C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600141F")]
			[Address(RVA = "0x11D436C", Offset = "0x11D436C", VA = "0x11D436C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x11D40FC", Offset = "0x11D40FC", VA = "0x11D40FC", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x11D4150", Offset = "0x11D4150", VA = "0x11D4150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CCC4", Offset = "0x105CCC4")]
		private IEnumerator DoDisableUnit(GEUnit unit)
		{
			return null;
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x11D41F8", Offset = "0x11D41F8", VA = "0x11D41F8")]
		public DisableUnitForSeconds()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class PlaySoundEffectOnUnitForSeconds : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CEF8", Offset = "0x104CEF8")]
		private sealed class <DoPlayAudioOnUnit>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit unit;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlaySoundEffectOnUnitForSeconds <>4__this;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <unitEffect>5__2;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__3;

			[Token(Token = "0x1700019D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001427")]
				[Address(RVA = "0x11D79EC", Offset = "0x11D79EC", VA = "0x11D79EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001429")]
				[Address(RVA = "0x11D7A54", Offset = "0x11D7A54", VA = "0x11D7A54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001424")]
			[Address(RVA = "0x11D7618", Offset = "0x11D7618", VA = "0x11D7618")]
			[DebuggerHidden]
			public <DoPlayAudioOnUnit>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001425")]
			[Address(RVA = "0x11D76BC", Offset = "0x11D76BC", VA = "0x11D76BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001426")]
			[Address(RVA = "0x11D76C0", Offset = "0x11D76C0", VA = "0x11D76C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0x11D79F4", Offset = "0x11D79F4", VA = "0x11D79F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AssetUnitTag> ignoredTags;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x11D751C", Offset = "0x11D751C", VA = "0x11D751C", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x11D759C", Offset = "0x11D759C", VA = "0x11D759C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CD78", Offset = "0x105CD78")]
		private IEnumerator DoPlayAudioOnUnit(GEUnit unit)
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x11D7644", Offset = "0x11D7644", VA = "0x11D7644")]
		public PlaySoundEffectOnUnitForSeconds()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class ToggleUnitEvent : GenericEvent, IAction
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minToggleInterval;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit geUnit;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastTrigger;

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x11DB8F8", Offset = "0x11DB8F8", VA = "0x11DB8F8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x11DB97C", Offset = "0x11DB97C", VA = "0x11DB97C")]
		public ToggleUnitEvent()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class ActivateUnitEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GEUnit geUnit;

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x11D2D74", Offset = "0x11D2D74", VA = "0x11D2D74", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x11D2E1C", Offset = "0x11D2E1C", VA = "0x11D2E1C")]
		public ActivateUnitEventBoolean()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class EnableRendererEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x11D6264", Offset = "0x11D6264", VA = "0x11D6264", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x11D630C", Offset = "0x11D630C", VA = "0x11D630C")]
		public EnableRendererEventBoolean()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class StopRigidbodyOnDeactivate : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rigidbody;

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x11D9D04", Offset = "0x11D9D04", VA = "0x11D9D04", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x11D9DF4", Offset = "0x11D9DF4", VA = "0x11D9DF4")]
		public StopRigidbodyOnDeactivate()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class SetInitialAimDuration : GenericEvent, IAction
	{
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseAttack attack;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float val;

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x11D875C", Offset = "0x11D875C", VA = "0x11D875C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x11D8778", Offset = "0x11D8778", VA = "0x11D8778")]
		public SetInitialAimDuration()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class SetAimAtAtTransformEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AimAtTransform aimAtTransform;

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x11D86D8", Offset = "0x11D86D8", VA = "0x11D86D8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x11D8754", Offset = "0x11D8754", VA = "0x11D8754")]
		public SetAimAtAtTransformEvent()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class ResetAimAtTransformEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AimAtTransform aimAtTransform;

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x11D7B2C", Offset = "0x11D7B2C", VA = "0x11D7B2C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x11D7B48", Offset = "0x11D7B48", VA = "0x11D7B48")]
		public ResetAimAtTransformEvent()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class Attack : GenericEvent, IAction
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseAttack attack;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x11D30E8", Offset = "0x11D30E8", VA = "0x11D30E8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x11D3110", Offset = "0x11D3110", VA = "0x11D3110")]
		public Attack()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class TriggerShootWeapon : GenericEvent, IAction
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x11DB9B0", Offset = "0x11DB9B0", VA = "0x11DB9B0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x11DB9CC", Offset = "0x11DB9CC", VA = "0x11DB9CC")]
		public TriggerShootWeapon()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class TriggerReleaseWeapon : GenericEvent, IAction
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x11DB98C", Offset = "0x11DB98C", VA = "0x11DB98C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x11DB9A8", Offset = "0x11DB9A8", VA = "0x11DB9A8")]
		public TriggerReleaseWeapon()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class ResetAttack : GenericEvent, IAction
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseAttack attack;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMeleeAttack meleeAttack;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x11D7B50", Offset = "0x11D7B50", VA = "0x11D7B50", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x11D7C6C", Offset = "0x11D7C6C", VA = "0x11D7C6C")]
		public ResetAttack()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class SetPlayerVisibleForUnit : GenericEvent
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BaseDetectUnits> unitDetections;

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x11D8780", Offset = "0x11D8780", VA = "0x11D8780", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x11D891C", Offset = "0x11D891C", VA = "0x11D891C")]
		public SetPlayerVisibleForUnit()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class StopCharge : GenericEvent, IAction
	{
		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChargeBehaviour charge;

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x11D9C08", Offset = "0x11D9C08", VA = "0x11D9C08", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x11D9CFC", Offset = "0x11D9CFC", VA = "0x11D9CFC")]
		public StopCharge()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class MultiplyDamageFromTag : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetInfoTag infoTag;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplicator;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x11D7214", Offset = "0x11D7214", VA = "0x11D7214", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x11D7294", Offset = "0x11D7294", VA = "0x11D7294")]
		public MultiplyDamageFromTag()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class MultiplyDamage : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float multiplicator;

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x11D71EC", Offset = "0x11D71EC", VA = "0x11D71EC", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x11D7204", Offset = "0x11D7204", VA = "0x11D7204")]
		public MultiplyDamage()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class AddUnitInformationToExplosionAttack : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GE.WeaponConfigurator.ExplosionAttack explosionAttack;

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x11D30C4", Offset = "0x11D30C4", VA = "0x11D30C4", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x11D30E0", Offset = "0x11D30E0", VA = "0x11D30E0")]
		public AddUnitInformationToExplosionAttack()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class MoveUnitToGround : GenericEvent, IAction
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GEUnit unit;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x11D6F78", Offset = "0x11D6F78", VA = "0x11D6F78", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x11D71E4", Offset = "0x11D71E4", VA = "0x11D71E4")]
		public MoveUnitToGround()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class TeleportUnitEvent : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minToggleInterval;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x11D9DFC", Offset = "0x11D9DFC", VA = "0x11D9DFC", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x11DA104", Offset = "0x11DA104", VA = "0x11DA104")]
		public TeleportUnitEvent()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104CF08", Offset = "0x104CF08")]
	public class OnTelegraphShotsEvent : GenericEventEmitter
	{
		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057728", Offset = "0x1057728")]
		public List<GenericFloatEvent> floatEvents;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TelegraphShots telegraphShots;

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x11D72A4", Offset = "0x11D72A4", VA = "0x11D72A4", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x11D734C", Offset = "0x11D734C", VA = "0x11D734C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x11D7460", Offset = "0x11D7460", VA = "0x11D7460")]
		private void Attack_OnAimProgressChanged(float progress)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x11D74AC", Offset = "0x11D74AC", VA = "0x11D74AC")]
		public OnTelegraphShotsEvent()
		{
		}
	}
}
namespace GE.Actions
{
	[Token(Token = "0x20004F7")]
	public class RotateObject : SerializedMonoBehaviour
	{
		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CF40", Offset = "0x104CF40")]
		private sealed class <DoStopRotation>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RotateObject <>4__this;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float stopDelay;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startSpeed>5__2;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__3;

			[Token(Token = "0x1700019F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001461")]
				[Address(RVA = "0x133A7B4", Offset = "0x133A7B4", VA = "0x133A7B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001463")]
				[Address(RVA = "0x133A81C", Offset = "0x133A81C", VA = "0x133A81C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600145E")]
			[Address(RVA = "0x133A318", Offset = "0x133A318", VA = "0x133A318")]
			[DebuggerHidden]
			public <DoStopRotation>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600145F")]
			[Address(RVA = "0x133A65C", Offset = "0x133A65C", VA = "0x133A65C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x133A660", Offset = "0x133A660", VA = "0x133A660", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0x133A7BC", Offset = "0x133A7BC", VA = "0x133A7BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104CF50", Offset = "0x104CF50")]
		private sealed class <DoStartRotation>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RotateObject <>4__this;

			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startDelay;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startSpeed>5__2;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__3;

			[Token(Token = "0x170001A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001467")]
				[Address(RVA = "0x133A5EC", Offset = "0x133A5EC", VA = "0x133A5EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001469")]
				[Address(RVA = "0x133A654", Offset = "0x133A654", VA = "0x133A654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0x133A3C4", Offset = "0x133A3C4", VA = "0x133A3C4")]
			[DebuggerHidden]
			public <DoStartRotation>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001465")]
			[Address(RVA = "0x133A488", Offset = "0x133A488", VA = "0x133A488", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0x133A48C", Offset = "0x133A48C", VA = "0x133A48C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001468")]
			[Address(RVA = "0x133A5F4", Offset = "0x133A5F4", VA = "0x133A5F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 euler;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float speed;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float targetSpeed;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float currentSpeed;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float startAndStopDelay;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057794", Offset = "0x1057794")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057794", Offset = "0x1057794")]
		[SerializeField]
		private List<IAction> rotationStartActions;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0x1057814", Offset = "0x1057814")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057814", Offset = "0x1057814")]
		[InlineProperty]
		private List<IAction> rotationStopActions;

		[Token(Token = "0x14000035")]
		public event Action<float> OnStopRotation
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x1339C80", Offset = "0x1339C80", VA = "0x1339C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CE2C", Offset = "0x105CE2C")]
			add
			{
			}
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x1339D24", Offset = "0x1339D24", VA = "0x1339D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CE3C", Offset = "0x105CE3C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<float> OnStartRotation
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x1339DC8", Offset = "0x1339DC8", VA = "0x1339DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CE4C", Offset = "0x105CE4C")]
			add
			{
			}
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x1339E6C", Offset = "0x1339E6C", VA = "0x1339E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105CE5C", Offset = "0x105CE5C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1339F10", Offset = "0x1339F10", VA = "0x1339F10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1339F44", Offset = "0x1339F44", VA = "0x1339F44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x133A158", Offset = "0x133A158", VA = "0x133A158")]
		public void StopRotation(float stopDelay)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x133A1F8", Offset = "0x133A1F8", VA = "0x133A1F8")]
		public void StartRotation(float startDelay)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x133A298", Offset = "0x133A298", VA = "0x133A298")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CE6C", Offset = "0x105CE6C")]
		private IEnumerator DoStopRotation(float stopDelay)
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x133A344", Offset = "0x133A344", VA = "0x133A344")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CED0", Offset = "0x105CED0")]
		private IEnumerator DoStartRotation(float startDelay)
		{
			return null;
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x133A3F0", Offset = "0x133A3F0", VA = "0x133A3F0")]
		public RotateObject()
		{
		}
	}
}
namespace GE.Progression
{
	[Token(Token = "0x20004FA")]
	public class MoveToNextLevel : GenericEvent, IAction
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loadAlternative;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x1057894", Offset = "0x1057894")]
		public string alternativeKey;

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x133D160", Offset = "0x133D160", VA = "0x133D160", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x133D2A0", Offset = "0x133D2A0", VA = "0x133D2A0")]
		public MoveToNextLevel()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class MoveToDistrict : GenericEvent, IAction
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetDistrict District;

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x133D030", Offset = "0x133D030", VA = "0x133D030", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x133D158", Offset = "0x133D158", VA = "0x133D158")]
		public MoveToDistrict()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class ResetWorldProgress : GenericEvent, IAction
	{
		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int district;

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x133D370", Offset = "0x133D370", VA = "0x133D370", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x133D3E0", Offset = "0x133D3E0", VA = "0x133D3E0")]
		public ResetWorldProgress()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class ResetProgression : GenericEvent, IAction
	{
		[Token(Token = "0x6001470")]
		[Address(RVA = "0x133D2A8", Offset = "0x133D2A8", VA = "0x133D2A8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x133D304", Offset = "0x133D304", VA = "0x133D304")]
		public ResetProgression()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class SetQuickRestartDistrict : GenericEvent, IAction
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int district;

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x133D3E8", Offset = "0x133D3E8", VA = "0x133D3E8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x133D458", Offset = "0x133D458", VA = "0x133D458")]
		public SetQuickRestartDistrict()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class ResetToQuickRestart : GenericEvent, IAction
	{
		[Token(Token = "0x6001474")]
		[Address(RVA = "0x133D30C", Offset = "0x133D30C", VA = "0x133D30C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x133D368", Offset = "0x133D368", VA = "0x133D368")]
		public ResetToQuickRestart()
		{
		}
	}
}
namespace GE.PlayerClass
{
	[Serializable]
	[Token(Token = "0x2000500")]
	public class SetPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x133CDE0", Offset = "0x133CDE0", VA = "0x133CDE0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x133CE4C", Offset = "0x133CE4C", VA = "0x133CE4C")]
		public SetPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000501")]
	public class SelectPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x133CD24", Offset = "0x133CD24", VA = "0x133CD24", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x133CDD8", Offset = "0x133CDD8", VA = "0x133CDD8")]
		public SelectPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000502")]
	public class AcceptPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x600147A")]
		[Address(RVA = "0x133B00C", Offset = "0x133B00C", VA = "0x133B00C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x133B06C", Offset = "0x133B06C", VA = "0x133B06C")]
		public AcceptPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000503")]
	public class KillFinalBossAsPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x600147C")]
		[Address(RVA = "0x133B920", Offset = "0x133B920", VA = "0x133B920", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x133BA0C", Offset = "0x133BA0C", VA = "0x133BA0C")]
		public KillFinalBossAsPlayerClass()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class IsNotCondition : GenericCondition, ICondition
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ICondition Condition;

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x133B764", Offset = "0x133B764", VA = "0x133B764", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x133B830", Offset = "0x133B830", VA = "0x133B830")]
		public IsNotCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class IsPlayerClass : GenericCondition, ICondition
	{
		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x133B838", Offset = "0x133B838", VA = "0x133B838", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x133B8A4", Offset = "0x133B8A4", VA = "0x133B8A4")]
		public IsPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000506")]
	public class IsDailyRun : GenericCondition, ICondition
	{
		[Token(Token = "0x6001482")]
		[Address(RVA = "0x133B6F8", Offset = "0x133B6F8", VA = "0x133B6F8", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x133B75C", Offset = "0x133B75C", VA = "0x133B75C")]
		public IsDailyRun()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000507")]
	public class IsPlayerClassCompleted : GenericCondition, ICondition
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x133B8AC", Offset = "0x133B8AC", VA = "0x133B8AC", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x133B918", Offset = "0x133B918", VA = "0x133B918")]
		public IsPlayerClassCompleted()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000508")]
	public class IsCurrentPlayerClass : GenericCondition, ICondition
	{
		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x133B654", Offset = "0x133B654", VA = "0x133B654", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x133B6F0", Offset = "0x133B6F0", VA = "0x133B6F0")]
		public IsCurrentPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000509")]
	public class IncreasePlayerClassProgress : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntegerValueData Value;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ProgressType progressType;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugBreak;

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x133B074", Offset = "0x133B074", VA = "0x133B074", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x133B19C", Offset = "0x133B19C", VA = "0x133B19C", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x133B1A8", Offset = "0x133B1A8", VA = "0x133B1A8")]
		public IncreasePlayerClassProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050A")]
	public class IncreaseStealthKillPlayerClassProgress : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntegerValueData Value;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ProgressType progressType;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugBreak;

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x133B4F4", Offset = "0x133B4F4", VA = "0x133B4F4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x133B640", Offset = "0x133B640", VA = "0x133B640", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x133B64C", Offset = "0x133B64C", VA = "0x133B64C")]
		public IncreaseStealthKillPlayerClassProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050B")]
	public class OnlyUseAssignedInfoTagProgress : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BooleanValueData LocalBooleanValueData;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetInfoTag comparedInfoTag;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugBreak;

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x133BA90", Offset = "0x133BA90", VA = "0x133BA90", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x133BB08", Offset = "0x133BB08", VA = "0x133BB08", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x133BC0C", Offset = "0x133BC0C", VA = "0x133BC0C")]
		public OnlyUseAssignedInfoTagProgress()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class ResetInOneRunProgression : GenericEvent, IAction
	{
		[Token(Token = "0x6001491")]
		[Address(RVA = "0x133CC14", Offset = "0x133CC14", VA = "0x133CC14", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x133CD1C", Offset = "0x133CD1C", VA = "0x133CD1C")]
		public ResetInOneRunProgression()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050D")]
	public class IncreasePlayerClassProgressFloat : GenericEvent, IAction, IFloatAction
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FloatValueData Value;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressType progressType;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Amount;

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x133B1B0", Offset = "0x133B1B0", VA = "0x133B1B0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x133B2A8", Offset = "0x133B2A8", VA = "0x133B2A8", Slot = "6")]
		public void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x133B3A4", Offset = "0x133B3A4", VA = "0x133B3A4")]
		public IncreasePlayerClassProgressFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050E")]
	public class IncreasePlayerClassProgressFloatInOneRun : GenericEvent, IAction, IFloatAction
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FloatValueData Value;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Amount;

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x133B3AC", Offset = "0x133B3AC", VA = "0x133B3AC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x133B44C", Offset = "0x133B44C", VA = "0x133B44C", Slot = "6")]
		public void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x133B4EC", Offset = "0x133B4EC", VA = "0x133B4EC")]
		public IncreasePlayerClassProgressFloatInOneRun()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050F")]
	public class SetPlayerClassProgress : GenericEvent, IAction
	{
		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BooleanValueData Value;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x133CE54", Offset = "0x133CE54", VA = "0x133CE54", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x133CEC4", Offset = "0x133CEC4", VA = "0x133CEC4")]
		public SetPlayerClassProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000510")]
	public class UnlockPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x133CF48", Offset = "0x133CF48", VA = "0x133CF48", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x133CFB4", Offset = "0x133CFB4", VA = "0x133CFB4")]
		public UnlockPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000511")]
	public class UnlockAllPlayerClasses : GenericEvent, IAction
	{
		[Token(Token = "0x600149D")]
		[Address(RVA = "0x133CECC", Offset = "0x133CECC", VA = "0x133CECC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x133CF40", Offset = "0x133CF40", VA = "0x133CF40")]
		public UnlockAllPlayerClasses()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class LowerPlayerClassProgression : GenericEvent, IAction
	{
		[Token(Token = "0x600149F")]
		[Address(RVA = "0x133BA14", Offset = "0x133BA14", VA = "0x133BA14", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x133BA88", Offset = "0x133BA88", VA = "0x133BA88")]
		public LowerPlayerClassProgression()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000513")]
	public class UnlockUpgrades : GenericEvent, IAction
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x133CFBC", Offset = "0x133CFBC", VA = "0x133CFBC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x133D028", Offset = "0x133D028", VA = "0x133D028")]
		public UnlockUpgrades()
		{
		}
	}
}
namespace GE.Events
{
	[Token(Token = "0x2000514")]
	public class GenericModifierState : IState
	{
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplicator;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GlobalMultipliers.GenericMultiplier currentMultiplier;

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x133AC04", Offset = "0x133AC04", VA = "0x133AC04", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x133ACB8", Offset = "0x133ACB8", VA = "0x133ACB8", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x133ACBC", Offset = "0x133ACBC", VA = "0x133ACBC", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x133AD7C", Offset = "0x133AD7C", VA = "0x133AD7C")]
		public GenericModifierState()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class SpecificMultiplierState : IState
	{
		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag unitTag;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetInfoTag infoTag;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float multiplicator;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Transform, GlobalMultipliers.SpecificMultiplier> currentMultipliers;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x133AD84", Offset = "0x133AD84", VA = "0x133AD84", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x133AEFC", Offset = "0x133AEFC", VA = "0x133AEFC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x133AF00", Offset = "0x133AF00", VA = "0x133AF00", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x133B004", Offset = "0x133B004", VA = "0x133B004")]
		public SpecificMultiplierState()
		{
		}
	}
}
namespace GE.UnitEvents
{
	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104CF60", Offset = "0x104CF60")]
	public class UnitEventData : SerializedScriptableObject
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10578E0", Offset = "0x10578E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10578E0", Offset = "0x10578E0")]
		public List<ICondition> Conditions;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057950", Offset = "0x1057950")]
		public List<IUnitCondition> UnitConditions;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x105799C", Offset = "0x105799C")]
		public List<IAttackCondition> AttackConditions;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[InlineProperty]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10579E8", Offset = "0x10579E8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x10579E8", Offset = "0x10579E8")]
		public List<GenericEvent> events;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057A58", Offset = "0x1057A58")]
		[InlineProperty]
		public List<IAction> actions;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057AA4", Offset = "0x1057AA4")]
		[InlineProperty]
		public List<GenericUnitEvent> unitEvents;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057AF0", Offset = "0x1057AF0")]
		public List<IUnitAction> unitActions;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057B3C", Offset = "0x1057B3C")]
		[InlineProperty]
		public List<IBulletAction> bulletActions;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057B88", Offset = "0x1057B88")]
		public List<IWeaponAction> weaponActions;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[InlineProperty]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0x1057BD4", Offset = "0x1057BD4")]
		public List<IVector3Action> positionActions;

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x133E8AC", Offset = "0x133E8AC", VA = "0x133E8AC")]
		public UnitEventData()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class TriggerEventData : GenericEvent, IAction
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventData eventData;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x133E024", Offset = "0x133E024", VA = "0x133E024", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x133E24C", Offset = "0x133E24C", VA = "0x133E24C")]
		public TriggerEventData()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class TriggerUnitEventData : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitEventData eventData;

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x133E254", Offset = "0x133E254", VA = "0x133E254", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x133E8A4", Offset = "0x133E8A4", VA = "0x133E8A4")]
		public TriggerUnitEventData()
		{
		}
	}
}
namespace GE.SocialFeatures
{
	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104CFB4", Offset = "0x104CFB4")]
	public class LeaderboardData : LeaderboardBaseData
	{
		[Token(Token = "0x200051A")]
		public enum LeaderboardType
		{
			[Token(Token = "0x40014E1")]
			BestRun
		}

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardType type;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ScoreCalculator.AdditionalScoreType scoreType;

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x133D460", Offset = "0x133D460", VA = "0x133D460", Slot = "4")]
		public override int GetValue()
		{
			return default(int);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x133D4D8", Offset = "0x133D4D8", VA = "0x133D4D8")]
		public LeaderboardData()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class UILeaderboard : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D008", Offset = "0x104D008")]
		private sealed class <>c
		{
			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LeaderboardEntry, int> <>9__6_0;

			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x133DDB4", Offset = "0x133DDB4", VA = "0x133DDB4")]
			public <>c()
			{
			}

			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x133DDBC", Offset = "0x133DDBC", VA = "0x133DDBC")]
			internal int <OnComplete>b__6_0(LeaderboardEntry e)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1057C20", Offset = "0x1057C20")]
		public LeaderboardData Profile;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1057C58", Offset = "0x1057C58")]
		public UILeaderboardEntry Entry;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<UILeaderboardEntry> fields;

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x133D664", Offset = "0x133D664", VA = "0x133D664")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x133D844", Offset = "0x133D844", VA = "0x133D844")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x133D788", Offset = "0x133D788", VA = "0x133D788")]
		private void UpdateLeaderboard()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x133D92C", Offset = "0x133D92C", VA = "0x133D92C")]
		private void OnComplete(List<LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x133DCE0", Offset = "0x133DCE0", VA = "0x133DCE0")]
		public UILeaderboard()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class UILeaderboardSelection : MonoBehaviour
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> leaderboards;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LeaderboardBaseData> leaderboardKeys;

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x133DDD4", Offset = "0x133DDD4", VA = "0x133DDD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x133D5A4", Offset = "0x133D5A4", VA = "0x133D5A4")]
		public void EnableLeaderboard(int id)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x133DF8C", Offset = "0x133DF8C", VA = "0x133DF8C")]
		public UILeaderboardSelection()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class SelectLeaderboardAction : IAction
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UILeaderboardSelection leaderboardSelection;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int id;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x133D4E0", Offset = "0x133D4E0", VA = "0x133D4E0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x133D65C", Offset = "0x133D65C", VA = "0x133D65C")]
		public SelectLeaderboardAction()
		{
		}
	}
}
namespace GE.DebugTools
{
	[Token(Token = "0x200051F")]
	public class CaptureScreenshot : MonoBehaviour
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int resolutionMultiplicator;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode key;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string customName;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x133A824", Offset = "0x133A824", VA = "0x133A824")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x133A8B4", Offset = "0x133A8B4", VA = "0x133A8B4")]
		public CaptureScreenshot()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class CaptureVideo : MonoBehaviour
	{
		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int resolutionMultiplicator;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool record;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode key;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string customName;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator Anim;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float FPS;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Length;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int frame;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x133A918", Offset = "0x133A918", VA = "0x133A918")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x133A938", Offset = "0x133A938", VA = "0x133A938")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x133AB90", Offset = "0x133AB90", VA = "0x133AB90")]
		public CaptureVideo()
		{
		}
	}
}
namespace GreenerGames
{
	[Serializable]
	[Token(Token = "0x2000521")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x104D018", Offset = "0x104D018")]
	public class SecondaryKeyDictionary<T1, T2, V>
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T1, V> primaryDictionary;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T2, T1> secondaryKeyLink;

		[Token(Token = "0x170001A3")]
		public V Item
		{
			[Token(Token = "0x60014C4")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x170001A4")]
		public V Item
		{
			[Token(Token = "0x60014C5")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x170001A5")]
		public V Item
		{
			[Token(Token = "0x60014C6")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x60014C7")]
		public V GetValueFromPrimary(T1 primaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x60014C8")]
		public V GetValueFromSecondary(T2 secondaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x60014C9")]
		public V GetValueFromEither(T1 primary, T2 secondary)
		{
			return (V)null;
		}

		[Token(Token = "0x60014CA")]
		public void Add(T1 key, V value)
		{
		}

		[Token(Token = "0x60014CB")]
		public void Add(T1 key, V value, T2 secondaryKey)
		{
		}

		[Token(Token = "0x60014CC")]
		public void LinkSecondaryKey(T1 primaryKey, T2 secondaryKey)
		{
		}

		[Token(Token = "0x60014CD")]
		public bool ContainsPrimaryKey(T1 primaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		public bool ContainsSecondaryKey(T2 secondaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		public bool ContainsKey(T1 key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D0")]
		public bool ContainsKey(T2 secondaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		public SecondaryKeyDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x104D050", Offset = "0x104D050")]
	public class SecondaryKeyDictionary<T, V>
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T, V> primaryDictionary;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T, T> secondaryKeyLink;

		[Token(Token = "0x170001A6")]
		public V Item
		{
			[Token(Token = "0x60014D2")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x60014D3")]
		public V GetValueFromPrimary(T primaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x60014D4")]
		public V GetValueFromSecondary(T secondaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x60014D5")]
		public V GetValueFromEither(T key)
		{
			return (V)null;
		}

		[Token(Token = "0x60014D6")]
		public void Add(T key, V value)
		{
		}

		[Token(Token = "0x60014D7")]
		public void Add(T key, V value, T secondaryKey)
		{
		}

		[Token(Token = "0x60014D8")]
		public void LinkSecondaryKey(T primaryKey, T secondaryKey)
		{
		}

		[Token(Token = "0x60014D9")]
		public bool ContainsKey(T key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DA")]
		public bool ContainsPrimaryKey(T primaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		public bool ContainsSecondaryKey(T secondaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DC")]
		public SecondaryKeyDictionary()
		{
		}
	}
}
namespace GoogleSheetsToUnity
{
	[Token(Token = "0x2000523")]
	public class GoogleSheetsToUnityConfig : ScriptableObject
	{
		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CLIENT_ID;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CLIENT_SECRET;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ACCESS_TOKEN;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string REFRESH_TOKEN;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string API_Key;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int PORT;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GoogleDataResponse gdr;

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x13407E4", Offset = "0x13407E4", VA = "0x13407E4")]
		public GoogleSheetsToUnityConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000524")]
	public class GoogleDataResponse
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string access_token;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string refresh_token;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string token_type;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int expires_in;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DateTime nextRefreshTime;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1340788", Offset = "0x1340788", VA = "0x1340788")]
		public GoogleDataResponse()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class GoogleAuthrisationHelper : MonoBehaviour
	{
		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D088", Offset = "0x104D088")]
		private sealed class <CheckForRefreshOfToken>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170001A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014E6")]
				[Address(RVA = "0x1340718", Offset = "0x1340718", VA = "0x1340718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014E8")]
				[Address(RVA = "0x1340780", Offset = "0x1340780", VA = "0x1340780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x13400C8", Offset = "0x13400C8", VA = "0x13400C8")]
			[DebuggerHidden]
			public <CheckForRefreshOfToken>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x13401A0", Offset = "0x13401A0", VA = "0x13401A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x134027C", Offset = "0x134027C", VA = "0x134027C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x13401BC", Offset = "0x13401BC", VA = "0x13401BC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x1340720", Offset = "0x1340720", VA = "0x1340720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _authToken;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HttpListener _httpListener;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _htmlResponseContent;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _notifyAuthTokenLock;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool _shouldNotifyAuthTokenReceived;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Action<string> _onComplete;

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1340068", Offset = "0x1340068", VA = "0x1340068")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105CFD4", Offset = "0x105CFD4")]
		public static IEnumerator CheckForRefreshOfToken()
		{
			return null;
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x13400F4", Offset = "0x13400F4", VA = "0x13400F4")]
		public GoogleAuthrisationHelper()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class SpreadsheetManager
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D098", Offset = "0x104D098")]
		private sealed class <CheckForRefreshToken>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014FB")]
				[Address(RVA = "0x134309C", Offset = "0x134309C", VA = "0x134309C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014FD")]
				[Address(RVA = "0x1343104", Offset = "0x1343104", VA = "0x1343104", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x1341D74", Offset = "0x1341D74", VA = "0x1341D74")]
			[DebuggerHidden]
			public <CheckForRefreshToken>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x1342FB8", Offset = "0x1342FB8", VA = "0x1342FB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x1342FBC", Offset = "0x1342FBC", VA = "0x1342FBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x13430A4", Offset = "0x13430A4", VA = "0x13430A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D0A8", Offset = "0x104D0A8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GSTU_Search search;

			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x1342C90", Offset = "0x1342C90", VA = "0x1342C90")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x1342C98", Offset = "0x1342C98", VA = "0x1342C98")]
			internal bool <Read>b__0(Sheet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D0B8", Offset = "0x104D0B8")]
		private sealed class <Read>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GSTU_Search search;

			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest request;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool containsMergedCells;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass2_0 <>8__1;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UnityAction<GstuSpreadSheet> callback;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private GSTU_SpreadsheetResponce <responce>5__3;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UnityWebRequest <request2>5__4;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001504")]
				[Address(RVA = "0x1343988", Offset = "0x1343988", VA = "0x1343988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001506")]
				[Address(RVA = "0x13439F0", Offset = "0x13439F0", VA = "0x13439F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001500")]
			[Address(RVA = "0x13421E0", Offset = "0x13421E0", VA = "0x13421E0")]
			[DebuggerHidden]
			public <Read>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001501")]
			[Address(RVA = "0x13432C4", Offset = "0x13432C4", VA = "0x13432C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001502")]
			[Address(RVA = "0x13433B0", Offset = "0x13433B0", VA = "0x13433B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001503")]
			[Address(RVA = "0x13432F0", Offset = "0x13432F0", VA = "0x13432F0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001505")]
			[Address(RVA = "0x1343990", Offset = "0x1343990", VA = "0x1343990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D0C8", Offset = "0x104D0C8")]
		private sealed class <Write>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction callback;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600150B")]
				[Address(RVA = "0x1343C4C", Offset = "0x1343C4C", VA = "0x1343C4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600150D")]
				[Address(RVA = "0x1343CB4", Offset = "0x1343CB4", VA = "0x1343CB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001507")]
			[Address(RVA = "0x13423F0", Offset = "0x13423F0", VA = "0x13423F0")]
			[DebuggerHidden]
			public <Write>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001508")]
			[Address(RVA = "0x13439F8", Offset = "0x13439F8", VA = "0x13439F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001509")]
			[Address(RVA = "0x1343AD4", Offset = "0x1343AD4", VA = "0x1343AD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600150A")]
			[Address(RVA = "0x1343A14", Offset = "0x1343A14", VA = "0x1343A14")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600150C")]
			[Address(RVA = "0x1343C54", Offset = "0x1343C54", VA = "0x1343C54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D0D8", Offset = "0x104D0D8")]
		private sealed class <WriteBatch>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction callback;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001512")]
				[Address(RVA = "0x1343F10", Offset = "0x1343F10", VA = "0x1343F10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001514")]
				[Address(RVA = "0x1343F78", Offset = "0x1343F78", VA = "0x1343F78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600150E")]
			[Address(RVA = "0x1342498", Offset = "0x1342498", VA = "0x1342498")]
			[DebuggerHidden]
			public <WriteBatch>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600150F")]
			[Address(RVA = "0x1343CBC", Offset = "0x1343CBC", VA = "0x1343CBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001510")]
			[Address(RVA = "0x1343D98", Offset = "0x1343D98", VA = "0x1343D98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001511")]
			[Address(RVA = "0x1343CD8", Offset = "0x1343CD8", VA = "0x1343CD8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001513")]
			[Address(RVA = "0x1343F18", Offset = "0x1343F18", VA = "0x1343F18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D0E8", Offset = "0x104D0E8")]
		private sealed class <Append>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction<string> callback;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001519")]
				[Address(RVA = "0x1342F48", Offset = "0x1342F48", VA = "0x1342F48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600151B")]
				[Address(RVA = "0x1342FB0", Offset = "0x1342FB0", VA = "0x1342FB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001515")]
			[Address(RVA = "0x13427F8", Offset = "0x13427F8", VA = "0x13427F8")]
			[DebuggerHidden]
			public <Append>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001516")]
			[Address(RVA = "0x1342CCC", Offset = "0x1342CCC", VA = "0x1342CCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001517")]
			[Address(RVA = "0x1342DA8", Offset = "0x1342DA8", VA = "0x1342DA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001518")]
			[Address(RVA = "0x1342CE8", Offset = "0x1342CE8", VA = "0x1342CE8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600151A")]
			[Address(RVA = "0x1342F50", Offset = "0x1342F50", VA = "0x1342F50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D0F8", Offset = "0x104D0F8")]
		private sealed class <Read>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WWW www;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string titleColumn;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int titleRow;

			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public OnSpreedSheetLoaded callback;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600151F")]
				[Address(RVA = "0x1343254", Offset = "0x1343254", VA = "0x1343254", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001521")]
				[Address(RVA = "0x13432BC", Offset = "0x13432BC", VA = "0x13432BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600151C")]
			[Address(RVA = "0x1342C5C", Offset = "0x1342C5C", VA = "0x1342C5C")]
			[DebuggerHidden]
			public <Read>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600151D")]
			[Address(RVA = "0x134310C", Offset = "0x134310C", VA = "0x134310C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600151E")]
			[Address(RVA = "0x1343110", Offset = "0x1343110", VA = "0x1343110", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x134325C", Offset = "0x134325C", VA = "0x134325C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GoogleSheetsToUnityConfig _config;

		[Token(Token = "0x170001A9")]
		public static GoogleSheetsToUnityConfig Config
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x134062C", Offset = "0x134062C", VA = "0x134062C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x1342824", Offset = "0x1342824", VA = "0x1342824")]
			set
			{
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1341D14", Offset = "0x1341D14", VA = "0x1341D14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105D088", Offset = "0x105D088")]
		private static IEnumerator CheckForRefreshToken()
		{
			return null;
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1341DA0", Offset = "0x1341DA0", VA = "0x1341DA0")]
		public static void Read(GSTU_Search search, UnityAction<GstuSpreadSheet> callback, bool containsMergedCells = false)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1342084", Offset = "0x1342084", VA = "0x1342084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105D0EC", Offset = "0x105D0EC")]
		private static IEnumerator Read(UnityWebRequest request, GSTU_Search search, bool containsMergedCells, UnityAction<GstuSpreadSheet> callback)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x134220C", Offset = "0x134220C", VA = "0x134220C")]
		public static void Write(GSTU_Search search, string inputData, UnityAction callback)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x133F8A8", Offset = "0x133F8A8", VA = "0x133F8A8")]
		public static void Write(GSTU_Search search, ValueRange inputData, UnityAction callback)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1342374", Offset = "0x1342374", VA = "0x1342374")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105D150", Offset = "0x105D150")]
		private static IEnumerator Write(UnityWebRequest request, UnityAction callback)
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x133F138", Offset = "0x133F138", VA = "0x133F138")]
		public static void WriteBatch(GSTU_Search search, BatchRequestBody requestData, UnityAction callback)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x134241C", Offset = "0x134241C", VA = "0x134241C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105D1B4", Offset = "0x105D1B4")]
		private static IEnumerator WriteBatch(UnityWebRequest request, UnityAction callback)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x13424C4", Offset = "0x13424C4", VA = "0x13424C4")]
		public static void Append(GSTU_Search search, ValueRange inputData, UnityAction<string> callback)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x134277C", Offset = "0x134277C", VA = "0x134277C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105D218", Offset = "0x105D218")]
		private static IEnumerator Append(UnityWebRequest request, UnityAction<string> callback)
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1342878", Offset = "0x1342878", VA = "0x1342878")]
		public static void ReadPublicSpreadsheet(GSTU_Search searchDetails, OnSpreedSheetLoaded callback)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1342BC8", Offset = "0x1342BC8", VA = "0x1342BC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105D27C", Offset = "0x105D27C")]
		private static IEnumerator Read(WWW www, string titleColumn, int titleRow, OnSpreedSheetLoaded callback)
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1342C88", Offset = "0x1342C88", VA = "0x1342C88")]
		public SpreadsheetManager()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class GSTU_Search
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string sheetId;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string worksheetName;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string startCell;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string endCell;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string titleColumn;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly int titleRow;

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x133F080", Offset = "0x133F080", VA = "0x133F080")]
		public GSTU_Search(string sheetId, string worksheetName)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x133F734", Offset = "0x133F734", VA = "0x133F734")]
		public GSTU_Search(string sheetId, string worksheetName, string startCell)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x133FCD8", Offset = "0x133FCD8", VA = "0x133FCD8")]
		public GSTU_Search(string sheetId, string worksheetName, string startCell, string endCell)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x133FDA4", Offset = "0x133FDA4", VA = "0x133FDA4")]
		public GSTU_Search(string sheetId, string worksheetName, string startCell, string endCell, string titleColumn, int titleRow)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000530")]
	public class GSTU_Cell
	{
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string column;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string columnId;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int row;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string rowId;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string value;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal List<string> titleConnectedCells;

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x133F400", Offset = "0x133F400", VA = "0x133F400")]
		public GSTU_Cell(string value, string column, int row)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x133F4E0", Offset = "0x133F4E0", VA = "0x133F4E0")]
		public GSTU_Cell(string value)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x133F5A8", Offset = "0x133F5A8", VA = "0x133F5A8")]
		public string Column()
		{
			return null;
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x133F5B0", Offset = "0x133F5B0", VA = "0x133F5B0")]
		public int Row()
		{
			return default(int);
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x133F5B8", Offset = "0x133F5B8", VA = "0x133F5B8")]
		public string CellRef()
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x133F630", Offset = "0x133F630", VA = "0x133F630")]
		internal void UpdateCellValue(string sheetID, string worksheet, string value, [Optional] UnityAction callback)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x133FC14", Offset = "0x133FC14", VA = "0x133FC14")]
		internal ValueRange AddCellToBatchUpdate(string sheetID, string worksheet, string value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000531")]
	public class GSTU_SpreadsheetResponce
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueRange valueRange;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Sheet sheetInfo;

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x133FE88", Offset = "0x133FE88", VA = "0x133FE88")]
		public string WorkSheet()
		{
			return null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x133FF04", Offset = "0x133FF04", VA = "0x133FF04")]
		public string StartCell()
		{
			return null;
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x133FFBC", Offset = "0x133FFBC", VA = "0x133FFBC")]
		public string EndCell()
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1340034", Offset = "0x1340034", VA = "0x1340034")]
		public GSTU_SpreadsheetResponce()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x134003C", Offset = "0x134003C", VA = "0x134003C")]
		public GSTU_SpreadsheetResponce(ValueRange data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000532")]
	public class ValueRange
	{
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string range;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string majorDimension;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<List<string>> values;

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x134511C", Offset = "0x134511C", VA = "0x134511C")]
		public ValueRange()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x134519C", Offset = "0x134519C", VA = "0x134519C")]
		public ValueRange(List<List<string>> data)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x133F7FC", Offset = "0x133F7FC", VA = "0x133F7FC")]
		public ValueRange(List<string> data)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1342284", Offset = "0x1342284", VA = "0x1342284")]
		public ValueRange(string data)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1345230", Offset = "0x1345230", VA = "0x1345230")]
		public void Add(List<string> data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000533")]
	public class BatchRequestBody
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueInputOption valueInputOption;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ValueRange> data;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x133EF90", Offset = "0x133EF90", VA = "0x133EF90")]
		public void Add(ValueRange data)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x133EFF8", Offset = "0x133EFF8", VA = "0x133EFF8")]
		public void Send(string spreadsheetId, string worksheet, UnityAction callback)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x133F388", Offset = "0x133F388", VA = "0x133F388")]
		public BatchRequestBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000534")]
	public class SheetsRootObject
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Sheet> sheets;

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1341D0C", Offset = "0x1341D0C", VA = "0x1341D0C")]
		public SheetsRootObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000535")]
	public class Sheet
	{
		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Properties properties;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Merge> merges;

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1341D04", Offset = "0x1341D04", VA = "0x1341D04")]
		public Sheet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000536")]
	public class Properties
	{
		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sheetId;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sheetType;

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1341CFC", Offset = "0x1341CFC", VA = "0x1341CFC")]
		public Properties()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000537")]
	public class Merge
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sheetId;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int startRowIndex;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int endRowIndex;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int startColumnIndex;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int endColumnIndex;

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1341CF4", Offset = "0x1341CF4", VA = "0x1341CF4")]
		public Merge()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public enum Dimension
	{
		[Token(Token = "0x4001552")]
		Rows,
		[Token(Token = "0x4001553")]
		Columns
	}
	[Token(Token = "0x2000539")]
	public enum ValueRenderOption
	{
		[Token(Token = "0x4001555")]
		UnformattedValue,
		[Token(Token = "0x4001556")]
		FormattedValue,
		[Token(Token = "0x4001557")]
		Formula
	}
	[Token(Token = "0x200053A")]
	public enum ValueInputOption
	{
		[Token(Token = "0x4001559")]
		RAW,
		[Token(Token = "0x400155A")]
		USER_ENTERED
	}
	[Serializable]
	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x104D108", Offset = "0x104D108")]
	public class GstuSpreadSheet
	{
		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, GSTU_Cell> Cells;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SecondaryKeyDictionary<string, List<GSTU_Cell>> columns;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecondaryKeyDictionary<int, string, List<GSTU_Cell>> rows;

		[Token(Token = "0x170001B6")]
		public GSTU_Cell Item
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x1341998", Offset = "0x1341998", VA = "0x1341998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public GSTU_Cell Item
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x1341A00", Offset = "0x1341A00", VA = "0x1341A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public List<GSTU_Cell> Item
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x1341AF4", Offset = "0x1341AF4", VA = "0x1341AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1340844", Offset = "0x1340844", VA = "0x1340844")]
		public GstuSpreadSheet(GSTU_SpreadsheetResponce data, string titleColumn, int titleRow)
		{
		}
	}
}
namespace GoogleSheetsToUnity.ThirdPary
{
	[Token(Token = "0x200053C")]
	internal class Task
	{
		[Token(Token = "0x200053D")]
		public delegate void FinishedHandler(bool manual);

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskManager.TaskState task;

		[Token(Token = "0x170001B9")]
		public bool Running
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x1343F80", Offset = "0x1343F80", VA = "0x1343F80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public bool Paused
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x1343F9C", Offset = "0x1343F9C", VA = "0x1343F9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000037")]
		public event FinishedHandler Finished
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0x1343FB8", Offset = "0x1343FB8", VA = "0x1343FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105D4C0", Offset = "0x105D4C0")]
			add
			{
			}
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x134405C", Offset = "0x134405C", VA = "0x134405C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105D4D0", Offset = "0x105D4D0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x134211C", Offset = "0x134211C", VA = "0x134211C")]
		public Task(IEnumerator c, bool autoStart = true)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x13442E0", Offset = "0x13442E0", VA = "0x13442E0")]
		public Task(IEnumerator c, FinishedHandler handler, bool autoStart = true)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x13442C8", Offset = "0x13442C8", VA = "0x13442C8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1344388", Offset = "0x1344388", VA = "0x1344388")]
		public void Stop()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x13443BC", Offset = "0x13443BC", VA = "0x13443BC")]
		public void Pause()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x13443E8", Offset = "0x13443E8", VA = "0x13443E8")]
		public void Unpause()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x134440C", Offset = "0x134440C", VA = "0x134440C")]
		private void TaskFinished(bool manual)
		{
		}
	}
	[Token(Token = "0x200053E")]
	internal class TaskManager : MonoBehaviour
	{
		[Token(Token = "0x200053F")]
		public class TaskState
		{
			[Token(Token = "0x2000540")]
			public delegate void FinishedHandler(bool manual);

			[Token(Token = "0x2000541")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D140", Offset = "0x104D140")]
			private sealed class <CallWrapper>d__17 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001566")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001567")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001568")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TaskState <>4__this;

				[Token(Token = "0x4001569")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private IEnumerator <e>5__2;

				[Token(Token = "0x170001BD")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001564")]
					[Address(RVA = "0x1344CFC", Offset = "0x1344CFC", VA = "0x1344CFC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170001BE")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001566")]
					[Address(RVA = "0x1344D64", Offset = "0x1344D64", VA = "0x1344D64", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001561")]
				[Address(RVA = "0x1344894", Offset = "0x1344894", VA = "0x1344894")]
				[DebuggerHidden]
				public <CallWrapper>d__17(int <>1__state)
				{
				}

				[Token(Token = "0x6001562")]
				[Address(RVA = "0x13448C0", Offset = "0x13448C0", VA = "0x13448C0", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001563")]
				[Address(RVA = "0x13448C4", Offset = "0x13448C4", VA = "0x13448C4", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001565")]
				[Address(RVA = "0x1344D04", Offset = "0x1344D04", VA = "0x1344D04", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IEnumerator coroutine;

			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool running;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			private bool paused;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			private bool stopped;

			[Token(Token = "0x170001BB")]
			public bool Running
			{
				[Token(Token = "0x6001553")]
				[Address(RVA = "0x1344770", Offset = "0x1344770", VA = "0x1344770")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001BC")]
			public bool Paused
			{
				[Token(Token = "0x6001554")]
				[Address(RVA = "0x1344778", Offset = "0x1344778", VA = "0x1344778")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x14000038")]
			public event FinishedHandler Finished
			{
				[Token(Token = "0x6001555")]
				[Address(RVA = "0x1344224", Offset = "0x1344224", VA = "0x1344224")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105D4E0", Offset = "0x105D4E0")]
				add
				{
				}
				[Token(Token = "0x6001556")]
				[Address(RVA = "0x1344780", Offset = "0x1344780", VA = "0x1344780")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105D4F0", Offset = "0x105D4F0")]
				remove
				{
				}
			}

			[Token(Token = "0x6001557")]
			[Address(RVA = "0x134473C", Offset = "0x134473C", VA = "0x134473C")]
			public TaskState(IEnumerator c)
			{
			}

			[Token(Token = "0x6001558")]
			[Address(RVA = "0x13443DC", Offset = "0x13443DC", VA = "0x13443DC")]
			public void Pause()
			{
			}

			[Token(Token = "0x6001559")]
			[Address(RVA = "0x1344404", Offset = "0x1344404", VA = "0x1344404")]
			public void Unpause()
			{
			}

			[Token(Token = "0x600155A")]
			[Address(RVA = "0x1344310", Offset = "0x1344310", VA = "0x1344310")]
			public void Start()
			{
			}

			[Token(Token = "0x600155B")]
			[Address(RVA = "0x13443AC", Offset = "0x13443AC", VA = "0x13443AC")]
			public void Stop()
			{
			}

			[Token(Token = "0x600155C")]
			[Address(RVA = "0x1344824", Offset = "0x1344824", VA = "0x1344824")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105D500", Offset = "0x105D500")]
			private IEnumerator CallWrapper()
			{
				return null;
			}
		}

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TaskManager singleton;

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1344100", Offset = "0x1344100", VA = "0x1344100")]
		public static TaskState CreateTask(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1344768", Offset = "0x1344768", VA = "0x1344768")]
		public TaskManager()
		{
		}
	}
}
namespace GoogleSheetsToUnity.Utils
{
	[Token(Token = "0x2000542")]
	internal class GoogleSheetsToUnityUtilities
	{
		[Token(Token = "0x6001567")]
		[Address(RVA = "0x1344FE0", Offset = "0x1344FE0", VA = "0x1344FE0")]
		public static int GetIndexInAlphabet(string value)
		{
			return default(int);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1345048", Offset = "0x1345048", VA = "0x1345048")]
		private static int IndexInAlphabet(char c)
		{
			return default(int);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x134179C", Offset = "0x134179C", VA = "0x134179C")]
		public static string ExcelColumnFromNumber(int column)
		{
			return null;
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x1341688", Offset = "0x1341688", VA = "0x1341688")]
		public static int NumberFromExcelColumn(string column)
		{
			return default(int);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x1345114", Offset = "0x1345114", VA = "0x1345114")]
		public GoogleSheetsToUnityUtilities()
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class GSTUString
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string url;

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1344E08", Offset = "0x1344E08", VA = "0x1344E08")]
		public void AddParam(string paramName, string paramValue)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1344F88", Offset = "0x1344F88", VA = "0x1344F88")]
		public GSTUString()
		{
		}
	}
}
namespace ECE
{
	[Token(Token = "0x2000544")]
	public class EasyColliderCreator
	{
		[Token(Token = "0x2000545")]
		private struct BestFitSphere
		{
			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Center;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float Radius;

			[Token(Token = "0x600158E")]
			[Address(RVA = "0x132E9D4", Offset = "0x132E9D4", VA = "0x132E9D4")]
			public BestFitSphere(Vector3 center, float radius)
			{
			}
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x132E280", Offset = "0x132E280", VA = "0x132E280")]
		private BestFitSphere CalculateBestFitSphere(List<Vector3> localVertices)
		{
			return default(BestFitSphere);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x132E9E0", Offset = "0x132E9E0", VA = "0x132E9E0")]
		public BoxColliderData CalculateBox(List<Vector3> worldVertices, Transform attachTo, bool isRotated = false)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x132EF30", Offset = "0x132EF30", VA = "0x132EF30")]
		public BoxColliderData CalculateBoxLocal(List<Vector3> vertices)
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x132F190", Offset = "0x132F190", VA = "0x132F190")]
		public CapsuleColliderData CalculateCapsuleBestFit(List<Vector3> worldVertices, Transform attachTo, bool isRotated)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x132F58C", Offset = "0x132F58C", VA = "0x132F58C")]
		public CapsuleColliderData CalculateCapsuleBestFitLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x132F7D4", Offset = "0x132F7D4", VA = "0x132F7D4")]
		public CapsuleColliderData CalculateCapsuleMinMax(List<Vector3> worldVertices, Transform attachTo, CAPSULE_COLLIDER_METHOD method, bool isRotated)
		{
			return null;
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x132FBBC", Offset = "0x132FBBC", VA = "0x132FBBC")]
		public CapsuleColliderData CalculateCapsuleMinMaxLocal(List<Vector3> localVertices, CAPSULE_COLLIDER_METHOD method)
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x132FFC0", Offset = "0x132FFC0", VA = "0x132FFC0")]
		public MeshColliderData CalculateCylinderCollider(List<Vector3> worldVertices, Transform attachTo, int numberOfSides = 12, CYLINDER_ORIENTATION orientation = CYLINDER_ORIENTATION.Automatic, float cylinderOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x1330638", Offset = "0x1330638", VA = "0x1330638")]
		public MeshColliderData CalculateCylinderColliderLocal(List<Vector3> vertices, int numberOfSides = 12, CYLINDER_ORIENTATION orientation = CYLINDER_ORIENTATION.Automatic, float cylinderOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x1330740", Offset = "0x1330740", VA = "0x1330740")]
		public MeshColliderData CalculateMeshColliderQuickHullLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1330808", Offset = "0x1330808", VA = "0x1330808")]
		public SphereColliderData CalculateSphereBestFit(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x13308DC", Offset = "0x13308DC", VA = "0x13308DC")]
		public SphereColliderData CalculateSphereBestFitLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1330984", Offset = "0x1330984", VA = "0x1330984")]
		public SphereColliderData CalculateSphereDistance(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1330A58", Offset = "0x1330A58", VA = "0x1330A58")]
		public SphereColliderData CalculateSphereDistanceLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1331010", Offset = "0x1331010", VA = "0x1331010")]
		public SphereColliderData CalculateSphereMinMax(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x13310E4", Offset = "0x13310E4", VA = "0x13310E4")]
		public SphereColliderData CalculateSphereMinMaxLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x133152C", Offset = "0x133152C", VA = "0x133152C")]
		private BoxCollider CreateBoxCollider(BoxColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x13316A4", Offset = "0x13316A4", VA = "0x13316A4")]
		public BoxCollider CreateBoxCollider(List<Vector3> vertices, EasyColliderProperties properties, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1331A98", Offset = "0x1331A98", VA = "0x1331A98")]
		private CapsuleCollider CreateCapsuleCollider(CapsuleColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1331B70", Offset = "0x1331B70", VA = "0x1331B70")]
		public CapsuleCollider CreateCapsuleCollider_BestFit(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1331CC0", Offset = "0x1331CC0", VA = "0x1331CC0")]
		public CapsuleCollider CreateCapsuleCollider_MinMax(List<Vector3> worldVertices, EasyColliderProperties properties, CAPSULE_COLLIDER_METHOD method, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1331E38", Offset = "0x1331E38", VA = "0x1331E38")]
		public MeshCollider CreateConvexMeshCollider(Mesh mesh, GameObject attachToObject, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1331EE8", Offset = "0x1331EE8", VA = "0x1331EE8")]
		private SphereCollider CreateSphereCollider(SphereColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1331FA0", Offset = "0x1331FA0", VA = "0x1331FA0")]
		public SphereCollider CreateSphereCollider_BestFit(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1332048", Offset = "0x1332048", VA = "0x1332048")]
		public SphereCollider CreateSphereCollider_Distance(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x13320F0", Offset = "0x13320F0", VA = "0x13320F0")]
		public SphereCollider CreateSphereCollider_MinMax(List<Vector3> worldVertices, EasyColliderProperties properties, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1330114", Offset = "0x1330114", VA = "0x1330114")]
		public List<Vector3> CalculateCylinderPointsLocal(List<Vector3> vertices, Transform attachTo, int numberOfSides, CYLINDER_ORIENTATION orientation, float cylinderOffset)
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1331850", Offset = "0x1331850", VA = "0x1331850")]
		private GameObject CreateGameObjectOrientation(List<Vector3> worldVertices, GameObject parent, string name)
		{
			return null;
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x13321C0", Offset = "0x13321C0", VA = "0x13321C0")]
		private void DebugDrawPoint(Vector3 worldLoc, Color color)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x13315E8", Offset = "0x13315E8", VA = "0x13315E8")]
		private void SetPropertiesOnCollider(Collider collider, EasyColliderProperties properties)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x132EDCC", Offset = "0x132EDCC", VA = "0x132EDCC")]
		private List<Vector3> ToLocalVerts(Transform transform, List<Vector3> worldVertices)
		{
			return null;
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x13324C4", Offset = "0x13324C4", VA = "0x13324C4")]
		public EasyColliderCreator()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class EasyColliderData
	{
		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CREATE_COLLIDER_TYPE ColliderType;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsValid;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 Matrix;

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x132E184", Offset = "0x132E184", VA = "0x132E184")]
		public void Clone(EasyColliderData data)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x132E1D0", Offset = "0x132E1D0", VA = "0x132E1D0")]
		public EasyColliderData()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class SphereColliderData : EasyColliderData
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Radius;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 Center;

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x132E214", Offset = "0x132E214", VA = "0x132E214")]
		public void Clone(SphereColliderData data)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x132E278", Offset = "0x132E278", VA = "0x132E278")]
		public SphereColliderData()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class CapsuleColliderData : SphereColliderData
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Direction;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Height;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x132E1D8", Offset = "0x132E1D8", VA = "0x132E1D8")]
		public void Clone(CapsuleColliderData data)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x132E270", Offset = "0x132E270", VA = "0x132E270")]
		public CapsuleColliderData()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class BoxColliderData : EasyColliderData
	{
		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 Center;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 Size;

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x132E120", Offset = "0x132E120", VA = "0x132E120")]
		public void Clone(BoxColliderData data)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x132E1C8", Offset = "0x132E1C8", VA = "0x132E1C8")]
		public BoxColliderData()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class MeshColliderData : EasyColliderData
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh ConvexMesh;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1338F3C", Offset = "0x1338F3C", VA = "0x1338F3C")]
		public void Clone(MeshColliderData data)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x133010C", Offset = "0x133010C", VA = "0x133010C")]
		public MeshColliderData()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public enum NORMAL_OFFSET
	{
		[Token(Token = "0x4001578")]
		Out,
		[Token(Token = "0x4001579")]
		In,
		[Token(Token = "0x400157A")]
		Both
	}
	[Token(Token = "0x200054C")]
	public enum CAPSULE_COLLIDER_METHOD
	{
		[Token(Token = "0x400157C")]
		BestFit,
		[Token(Token = "0x400157D")]
		MinMax,
		[Token(Token = "0x400157E")]
		MinMaxPlusRadius,
		[Token(Token = "0x400157F")]
		MinMaxPlusDiameter
	}
	[Token(Token = "0x200054D")]
	public enum CREATE_COLLIDER_TYPE
	{
		[Token(Token = "0x4001581")]
		BOX,
		[Token(Token = "0x4001582")]
		ROTATED_BOX,
		[Token(Token = "0x4001583")]
		SPHERE,
		[Token(Token = "0x4001584")]
		CAPSULE,
		[Token(Token = "0x4001585")]
		ROTATED_CAPSULE,
		[Token(Token = "0x4001586")]
		CONVEX_MESH,
		[Token(Token = "0x4001587")]
		CYLINDER
	}
	[Token(Token = "0x200054E")]
	public enum COLLIDER_ORIENTATION
	{
		[Token(Token = "0x4001589")]
		NORMAL,
		[Token(Token = "0x400158A")]
		ROTATED
	}
	[Token(Token = "0x200054F")]
	public enum CYLINDER_ORIENTATION
	{
		[Token(Token = "0x400158C")]
		Automatic,
		[Token(Token = "0x400158D")]
		LocalX,
		[Token(Token = "0x400158E")]
		LocalY,
		[Token(Token = "0x400158F")]
		LocalZ
	}
	[Token(Token = "0x2000550")]
	public enum GIZMO_TYPE
	{
		[Token(Token = "0x4001591")]
		CUBE,
		[Token(Token = "0x4001592")]
		SPHERE
	}
	[Token(Token = "0x2000551")]
	public enum RENDER_POINT_TYPE
	{
		[Token(Token = "0x4001594")]
		SHADER,
		[Token(Token = "0x4001595")]
		GIZMOS
	}
	[Token(Token = "0x2000552")]
	public enum SKINNED_MESH_COLLIDER_TYPE
	{
		[Token(Token = "0x4001597")]
		Box,
		[Token(Token = "0x4001598")]
		Capsule,
		[Token(Token = "0x4001599")]
		Sphere,
		[Token(Token = "0x400159A")]
		Convex_Mesh
	}
	[Token(Token = "0x2000553")]
	public enum SPHERE_COLLIDER_METHOD
	{
		[Token(Token = "0x400159C")]
		BestFit,
		[Token(Token = "0x400159D")]
		Distance,
		[Token(Token = "0x400159E")]
		MinMax
	}
	[Token(Token = "0x2000554")]
	public enum VHACD_CONVERSION
	{
		[Token(Token = "0x40015A0")]
		None,
		[Token(Token = "0x40015A1")]
		Boxes,
		[Token(Token = "0x40015A2")]
		Spheres,
		[Token(Token = "0x40015A3")]
		Capsules
	}
	[Token(Token = "0x2000555")]
	public enum MESH_COLLIDER_METHOD
	{
		[Token(Token = "0x40015A5")]
		QuickHull,
		[Token(Token = "0x40015A6")]
		MessyHull
	}
	[Token(Token = "0x2000556")]
	public enum VERTEX_SNAP_METHOD
	{
		[Token(Token = "0x40015A8")]
		Add,
		[Token(Token = "0x40015A9")]
		Remove,
		[Token(Token = "0x40015AA")]
		Both
	}
	[Token(Token = "0x2000557")]
	public enum VHACD_RESULT_METHOD
	{
		[Token(Token = "0x40015AC")]
		AttachTo,
		[Token(Token = "0x40015AD")]
		ChildObject,
		[Token(Token = "0x40015AE")]
		IndividualChildObjects
	}
	[Token(Token = "0x2000558")]
	public enum ECE_WINDOW_TAB
	{
		[Token(Token = "0x40015B0")]
		None = -1,
		[Token(Token = "0x40015B1")]
		Creation,
		[Token(Token = "0x40015B2")]
		Editing,
		[Token(Token = "0x40015B3")]
		VHACD,
		[Token(Token = "0x40015B4")]
		AutoSkinned
	}
	[Token(Token = "0x2000559")]
	public enum COLLIDER_HOLDER
	{
		[Token(Token = "0x40015B6")]
		Default,
		[Token(Token = "0x40015B7")]
		Once,
		[Token(Token = "0x40015B8")]
		Always
	}
	[Token(Token = "0x200055A")]
	public struct EasyColliderProperties
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsTrigger;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Layer;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PhysicMaterial PhysicMaterial;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public COLLIDER_ORIENTATION Orientation;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject AttachTo;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x13324CC", Offset = "0x13324CC", VA = "0x13324CC")]
		public EasyColliderProperties(bool isTrigger, int layer, PhysicMaterial physicMaterial, GameObject attachTo, COLLIDER_ORIENTATION orientation = COLLIDER_ORIENTATION.NORMAL)
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class EasyColliderQuickHull
	{
		[Token(Token = "0x200055C")]
		private class Face
		{
			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int F0;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int F1;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int F2;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 Normal;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool OnConvexHull;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> OutsideVertices;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int V0;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int V1;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int V2;

			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x1337528", Offset = "0x1337528", VA = "0x1337528")]
			public Face(int v0, int v1, int v2, Vector3 normal, int f0, int f1, int f2)
			{
			}
		}

		[Token(Token = "0x200055D")]
		private class Horizon
		{
			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Face;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int From;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool OnConvexHull;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int V0;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int V1;

			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x1334CAC", Offset = "0x1334CAC", VA = "0x1334CAC")]
			public Horizon(int v0, int v1, int face, int from)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D150", Offset = "0x104D150")]
		private sealed class <>c
		{
			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Face, bool> <>9__33_0;

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Horizon, bool> <>9__43_0;

			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Horizon, bool> <>9__43_1;

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x1338C08", Offset = "0x1338C08", VA = "0x1338C08")]
			public <>c()
			{
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x1338C10", Offset = "0x1338C10", VA = "0x1338C10")]
			internal bool <CreateMesh>b__33_0(Face face)
			{
				return default(bool);
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x1338C28", Offset = "0x1338C28", VA = "0x1338C28")]
			internal bool <GenerateHull>b__43_0(Horizon item)
			{
				return default(bool);
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x1338C40", Offset = "0x1338C40", VA = "0x1338C40")]
			internal bool <GenerateHull>b__43_1(Horizon item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x104D160", Offset = "0x104D160")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> ips;

			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<int> <>9__0;

			[Token(Token = "0x40015E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<int> <>9__1;

			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Predicate<int> <>9__2;

			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Predicate<int> <>9__3;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Predicate<int> <>9__4;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Predicate<int> <>9__5;

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x1337608", Offset = "0x1337608", VA = "0x1337608")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x1338C58", Offset = "0x1338C58", VA = "0x1338C58")]
			internal bool <FindInitialPointsFallBack>b__0(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x1338CD0", Offset = "0x1338CD0", VA = "0x1338CD0")]
			internal bool <FindInitialPointsFallBack>b__1(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x1338D4C", Offset = "0x1338D4C", VA = "0x1338D4C")]
			internal bool <FindInitialPointsFallBack>b__2(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x1338DC8", Offset = "0x1338DC8", VA = "0x1338DC8")]
			internal bool <FindInitialPointsFallBack>b__3(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x1338E44", Offset = "0x1338E44", VA = "0x1338E44")]
			internal bool <FindInitialPointsFallBack>b__4(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x1338EC0", Offset = "0x1338EC0", VA = "0x1338EC0")]
			internal bool <FindInitialPointsFallBack>b__5(int element)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool DebugHorizon;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color DebugHorizonColor;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int DebugLoopNumber;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DebugMaxLoopNumber;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DebugNewFaces;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool DebugNormals;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool DebugOutsideSet;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color DebugNormalColor;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float DrawTime;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<int> AssignedVertices;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<int> ClosedVertices;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Horizon> CurrentHorizon;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float Epsilon;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Face> Faces;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> NewFaces;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Mesh Result;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HashSet<int> UnAssignedVertices;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Vector3> VerticesList;

		[Token(Token = "0x170001BF")]
		public bool isFinished
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x1337624", Offset = "0x1337624", VA = "0x1337624")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x13305C8", Offset = "0x13305C8", VA = "0x13305C8")]
		public static EasyColliderQuickHull CalculateHull(List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1332C68", Offset = "0x1332C68", VA = "0x1332C68")]
		public static EasyColliderQuickHull CalculateHullWorld(List<Vector3> points, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x1332DEC", Offset = "0x1332DEC", VA = "0x1332DEC")]
		public static MeshColliderData CalculateHullData(List<Vector3> points, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1332EF4", Offset = "0x1332EF4", VA = "0x1332EF4")]
		public static MeshColliderData CalculateHullData(List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x1332F88", Offset = "0x1332F88", VA = "0x1332F88")]
		private void AddToOutsideSet(Face face, HashSet<int> vertices)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x13334B4", Offset = "0x13334B4", VA = "0x13334B4")]
		private bool AreVertsCoincident(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x13335AC", Offset = "0x13335AC", VA = "0x13335AC")]
		private bool AreVertsCoincident(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x13337D8", Offset = "0x13337D8", VA = "0x13337D8")]
		private void CloseUnAssignedVertsOnFaces()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x13333C0", Offset = "0x13333C0", VA = "0x13333C0")]
		private bool IsVertOnFace(int i, Face face)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x1333D48", Offset = "0x1333D48", VA = "0x1333D48")]
		private Vector3 CalcNormal(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1333E78", Offset = "0x1333E78", VA = "0x1333E78")]
		private Vector3 CalcNormal(int a, int b, int c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x1333AD0", Offset = "0x1333AD0", VA = "0x1333AD0")]
		private float CalcTriangleArea(int v0, int v1, int v2)
		{
			return default(float);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x1334068", Offset = "0x1334068", VA = "0x1334068")]
		private void CalculateHorizon(int eyePoint, Horizon crossedEdge, int currFace, bool firstFace = true)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1334D00", Offset = "0x1334D00", VA = "0x1334D00")]
		private Mesh CreateMesh(List<Face> allFaces)
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x133556C", Offset = "0x133556C", VA = "0x133556C")]
		private float DistanceFromLine(Vector3 point, Vector3 line, Vector3 pointOnLine)
		{
			return default(float);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1335684", Offset = "0x1335684", VA = "0x1335684")]
		private float DistanceFromPlane(Vector3 point, Plane p)
		{
			return default(float);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x133326C", Offset = "0x133326C", VA = "0x133326C")]
		private float DistanceFromPlane(Vector3 point, Vector3 normal, Vector3 pointOnPlane)
		{
			return default(float);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x13356B0", Offset = "0x13356B0", VA = "0x13356B0")]
		private bool FindInitialHull(List<Vector3> points)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1336BD8", Offset = "0x1336BD8", VA = "0x1336BD8")]
		private bool FindInitialPointsFallBack(List<Vector3> points, out List<int> initialPoints)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x13365B8", Offset = "0x13365B8", VA = "0x13365B8")]
		private bool FindInitialPoints(List<Vector3> points, out List<int> initialPoints)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1337694", Offset = "0x1337694", VA = "0x1337694")]
		private void CalculateEpsilon(List<Vector3> points)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x13326B0", Offset = "0x13326B0", VA = "0x13326B0")]
		public void GenerateHull(List<Vector3> points)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x1337958", Offset = "0x1337958", VA = "0x1337958")]
		private int GetFurthestPointFromFace(int faceIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x13378AC", Offset = "0x13378AC", VA = "0x13378AC")]
		private int GetNonEmptyFaceIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1337D2C", Offset = "0x1337D2C", VA = "0x1337D2C")]
		private bool HaveNonEmptyFaceSet()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1337514", Offset = "0x1337514", VA = "0x1337514")]
		private bool isAGreaterThanB(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x1337610", Offset = "0x1337610", VA = "0x1337610")]
		private bool isALessThanB(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x1333CC8", Offset = "0x1333CC8", VA = "0x1333CC8")]
		private bool isApproxEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1333344", Offset = "0x1333344", VA = "0x1333344")]
		private bool IsApproxZero(float a)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1337B88", Offset = "0x1337B88", VA = "0x1337B88")]
		private void UpdateFace(Horizon horizon, int newFace)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1337E40", Offset = "0x1337E40", VA = "0x1337E40")]
		private Vector3 CalcFaceCenter(Face face)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1337FC0", Offset = "0x1337FC0", VA = "0x1337FC0")]
		private void DebugInitialPoints(List<Vector3> points, List<int> initialPoints)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x13381A4", Offset = "0x13381A4", VA = "0x13381A4")]
		private void DrawFace(int face, Color color, float size = 0.08f)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1338624", Offset = "0x1338624", VA = "0x1338624")]
		private void DrawFaceConnections(int face)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x13387C0", Offset = "0x13387C0", VA = "0x13387C0")]
		private void DrawFaceNormal(Face face, Color color, float distance = 1f)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1338930", Offset = "0x1338930", VA = "0x1338930")]
		private void ForceUpdateFace(int faceIndex)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1338B1C", Offset = "0x1338B1C", VA = "0x1338B1C")]
		private Color RandomColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1338338", Offset = "0x1338338", VA = "0x1338338")]
		private void DrawPoint(Vector3 point, Color color, float size = 0.05f)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x13324E8", Offset = "0x13324E8", VA = "0x13324E8")]
		public EasyColliderQuickHull()
		{
		}
	}
}
