using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;
using System.Threading;
using CPC_CameraPath;
using Coplanar;
using Coplanar.Blur.Scripts.AI;
using Coplanar.Menu;
using Coplanar.SimpleSerialization;
using DefaultNamespace;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Photon.Pun;
using Photon.Realtime;
using Sirenix.OdinInspector;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AsteroidRotation : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationspeed;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xB7B470", Offset = "0xB7B470", VA = "0xB7B470")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xB7B474", Offset = "0xB7B474", VA = "0xB7B474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xB7B544", Offset = "0xB7B544", VA = "0xB7B544")]
	public AsteroidRotation()
	{
	}
}
[Token(Token = "0x2000003")]
public class BikeModelManager : MonoBehaviour
{
	[Token(Token = "0x2000102")]
	private class LightBarTracker
	{
		[Token(Token = "0x2000214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE35C", Offset = "0x9BE35C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightBarTracker <>4__this;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float bikePos;

			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xB7DA58", Offset = "0xB7DA58", VA = "0xB7DA58")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xB7DA60", Offset = "0xB7DA60", VA = "0xB7DA60")]
			internal float <ResetToFirstAhead>b__0(BSplineTrackEditor.LightBar x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<BSplineTrackEditor.LightBar> lightBars;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float currentYPos;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int currentIndex;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastEntered;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool inRange;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float trackLen;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distanceAhead;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float distanceBehind;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool debug;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xB7C1F8", Offset = "0xB7C1F8", VA = "0xB7C1F8")]
		public LightBarTracker(List<BSplineTrackEditor.LightBar> lightBars, float trackLen)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xB7D794", Offset = "0xB7D794", VA = "0xB7D794")]
		public bool GetCurrentLight(out BSplineTrackEditor.LightBar lightBar)
		{
			return default(bool);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xB7DA3C", Offset = "0xB7DA3C", VA = "0xB7DA3C")]
		private float GetDistAhead(float camTrackPos, BSplineTrackEditor.LightBar lb)
		{
			return default(float);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xB7C2F8", Offset = "0xB7C2F8", VA = "0xB7C2F8")]
		public void ResetToFirstAhead()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xB7CD94", Offset = "0xB7CD94", VA = "0xB7CD94")]
		public void FindNextIndex(float bikePos)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xB7D850", Offset = "0xB7D850", VA = "0xB7D850")]
		internal void GuiText()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debug;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hiResEnabled;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE37C", Offset = "0x9BE37C")]
	private BlurConfig.BikeModelID <BikeModel>k__BackingField;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BlurConfig.BikeColor bikeColor;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, GameObject> instantiated;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentGameObject;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer[] meshRenderers;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer hudRenderer;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock renderPropBlock;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IKControl riderAKControl;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IKConnections ikConnections;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LightBarTracker noseReflectionLightTracker;

	[Token(Token = "0x17000001")]
	public BlurConfig.BikeModelID BikeModel
	{
		[Token(Token = "0x6000004")]
		[Address(RVA = "0xB7C0D0", Offset = "0xB7C0D0", VA = "0xB7C0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF7B8", Offset = "0x9BF7B8")]
		get
		{
			return default(BlurConfig.BikeModelID);
		}
		[Token(Token = "0x6000005")]
		[Address(RVA = "0xB7C0D8", Offset = "0xB7C0D8", VA = "0xB7C0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF7C8", Offset = "0x9BF7C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB7C0E0", Offset = "0xB7C0E0", VA = "0xB7C0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xB7C2D8", Offset = "0xB7C2D8", VA = "0xB7C2D8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xB7C2DC", Offset = "0xB7C2DC", VA = "0xB7C2DC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xB7C2E0", Offset = "0xB7C2E0", VA = "0xB7C2E0")]
	public void VideoConfig_OnPlaybackRestart()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xB7C50C", Offset = "0xB7C50C", VA = "0xB7C50C")]
	public void SetModel(BlurConfig.BikeModelID modelId)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB7C888", Offset = "0xB7C888", VA = "0xB7C888")]
	public void SetColor(BlurConfig.BikeColor bikeColor)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB7CA00", Offset = "0xB7CA00", VA = "0xB7CA00")]
	public void SetHiRes(bool hiRes)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB7CA0C", Offset = "0xB7CA0C", VA = "0xB7CA0C")]
	private GameObject InnerPrefabForCurrentConfig()
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB7CAC8", Offset = "0xB7CAC8", VA = "0xB7CAC8")]
	public static GameObject OuterPrefab(BlurConfig.BikeModelID bikeModel)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB7C514", Offset = "0xB7C514", VA = "0xB7C514")]
	private void UpdateCurrentModel()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xB7CBFC", Offset = "0xB7CBFC", VA = "0xB7CBFC")]
	internal void SetIKControl(IKControl iKControl)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xB7CCA4", Offset = "0xB7CCA4", VA = "0xB7CCA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB7D2D0", Offset = "0xB7D2D0", VA = "0xB7D2D0")]
	private void SetLightProp(MaterialPropertyBlock propBlock, BSplineTrackEditor.TrackPoint trackPoint, Vector3 worldPos)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB7D510", Offset = "0xB7D510", VA = "0xB7D510")]
	public void SetEffectParams(Color glow, Vector3 trackLightDir, float immunityFlash, BSplineTrackEditor.TrackPoint trackPoint)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB7D8CC", Offset = "0xB7D8CC", VA = "0xB7D8CC")]
	public void ChooseRandom(BlurConfig.BikeConfig bikeConfig)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB7D9C4", Offset = "0xB7D9C4", VA = "0xB7D9C4")]
	public BikeModelManager()
	{
	}
}
[Token(Token = "0x2000004")]
public class BatteryEffect : MonoBehaviour
{
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDB8C", Offset = "0x9BDB8C")]
	private sealed class <Disabler>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BatteryEffect <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xB7BC94", Offset = "0xB7BC94", VA = "0xB7BC94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xB7BD00", Offset = "0xB7BD00", VA = "0xB7BD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xB7BBA0", Offset = "0xB7BBA0", VA = "0xB7BBA0")]
		[DebuggerHidden]
		public <Disabler>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xB7BBD8", Offset = "0xB7BBD8", VA = "0xB7BBD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xB7BBDC", Offset = "0xB7BBDC", VA = "0xB7BBDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xB7BC9C", Offset = "0xB7BC9C", VA = "0xB7BC9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter mr;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB7BB00", Offset = "0xB7BB00", VA = "0xB7BB00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB7BB2C", Offset = "0xB7BB2C", VA = "0xB7BB2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BF7D8", Offset = "0x9BF7D8")]
	private IEnumerator Disabler()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xB7BBCC", Offset = "0xB7BBCC", VA = "0xB7BBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xB7BBD0", Offset = "0xB7BBD0", VA = "0xB7BBD0")]
	public BatteryEffect()
	{
	}
}
[Token(Token = "0x2000005")]
public class BoostEffect : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDB9C", Offset = "0x9BDB9C")]
	private sealed class <Disabler>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoostEffect <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xB7F9F4", Offset = "0xB7F9F4", VA = "0xB7F9F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0xB7FA60", Offset = "0xB7FA60", VA = "0xB7FA60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xB7F8FC", Offset = "0xB7F8FC", VA = "0xB7F8FC")]
		[DebuggerHidden]
		public <Disabler>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xB7F934", Offset = "0xB7F934", VA = "0xB7F934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xB7F938", Offset = "0xB7F938", VA = "0xB7F938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xB7F9FC", Offset = "0xB7F9FC", VA = "0xB7F9FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xB7F85C", Offset = "0xB7F85C", VA = "0xB7F85C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB7F888", Offset = "0xB7F888", VA = "0xB7F888")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BF83C", Offset = "0x9BF83C")]
	private IEnumerator Disabler()
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xB7F928", Offset = "0xB7F928", VA = "0xB7F928")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xB7F92C", Offset = "0xB7F92C", VA = "0xB7F92C")]
	public BoostEffect()
	{
	}
}
[Token(Token = "0x2000006")]
public class BikeTrailManager : TrailManager
{
	[Token(Token = "0x2000105")]
	protected class Infection
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int trailIndex;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<bool> action;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forwardIndex;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float backwardIndex;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject effectGo;

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xB7F28C", Offset = "0xB7F28C", VA = "0xB7F28C")]
		public Infection()
		{
		}
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDBAC", Offset = "0x9BDBAC")]
	private sealed class <GetTrailIntersections>d__18 : IEnumerable<TrailIntersection>, IEnumerable, IEnumerator<TrailIntersection>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TrailIntersection <>2__current;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BikeTrailManager <>4__this;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int trailToExclude;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int <>3__trailToExclude;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 p;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 <>3__p;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TrailIntersectionSearchState tis;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TrailIntersectionSearchState <>3__tis;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <wrapPos>5__2;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <i>5__3;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <xDiff>5__4;

		[Token(Token = "0x1700007E")]
		private TrailIntersection System.Collections.Generic.IEnumerator<Coplanar.TrailManager.TrailIntersection>.Current
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0xB7F6C0", Offset = "0xB7F6C0", VA = "0xB7F6C0", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(TrailIntersection);
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0xB7F72C", Offset = "0xB7F72C", VA = "0xB7F72C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xB7EE0C", Offset = "0xB7EE0C", VA = "0xB7EE0C")]
		[DebuggerHidden]
		public <GetTrailIntersections>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xB7F29C", Offset = "0xB7F29C", VA = "0xB7F29C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xB7F2A0", Offset = "0xB7F2A0", VA = "0xB7F2A0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xB7F6C8", Offset = "0xB7F6C8", VA = "0xB7F6C8", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xB7F790", Offset = "0xB7F790", VA = "0xB7F790", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<TrailIntersection> System.Collections.Generic.IEnumerable<Coplanar.TrailManager.TrailIntersection>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xB7F858", Offset = "0xB7F858", VA = "0xB7F858", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE38C", Offset = "0x9BE38C")]
	public TrailGroup bikeTrailGroup;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer trails2D;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int maxBikeTrails;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TrailSystemInstance bikeTrails;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material bikeTrails_mat;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material bikeTrails_mat2D;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected RacerBase[] bikeSims;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected List<Infection> infections;

	[Token(Token = "0x17000002")]
	public new static BikeTrailManager I
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xB7DA8C", Offset = "0xB7DA8C", VA = "0xB7DA8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xB7DB34", Offset = "0xB7DB34", VA = "0xB7DB34", Slot = "6")]
	protected override TrailSystemInstance GetSystemForGroup(TrailGroup group)
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xB7DBC4", Offset = "0xB7DBC4", VA = "0xB7DBC4")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xB7DE0C", Offset = "0xB7DE0C", VA = "0xB7DE0C")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xB7DE88", Offset = "0xB7DE88", VA = "0xB7DE88")]
	public int AllocateTrailForBike(RacerBase bikeSim)
	{
		return default(int);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xB7DFF0", Offset = "0xB7DFF0", VA = "0xB7DFF0")]
	public void ClearBikeTrails()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB7E030", Offset = "0xB7E030", VA = "0xB7E030")]
	public void FreeTrail(int trailIndex)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB7E0B0", Offset = "0xB7E0B0", VA = "0xB7E0B0", Slot = "5")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB7E264", Offset = "0xB7E264", VA = "0xB7E264")]
	private new void LateUpdate()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB7E734", Offset = "0xB7E734", VA = "0xB7E734")]
	protected bool UpdateInfection(Infection infection, ref float index, int direction, ref bool dead)
	{
		return default(bool);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB7ED5C", Offset = "0xB7ED5C", VA = "0xB7ED5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BF8A0", Offset = "0x9BF8A0")]
	public IEnumerable<TrailIntersection> GetTrailIntersections(Vector2 p, float distance, int trailToExclude, TrailIntersectionSearchState tis)
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB7EE44", Offset = "0xB7EE44", VA = "0xB7EE44")]
	public TrailIntersectionSearchState GetNewIntersectionSearchState()
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB7EF20", Offset = "0xB7EF20", VA = "0xB7EF20")]
	public void ResizeForTrack(SimpleTrack track)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB7F000", Offset = "0xB7F000", VA = "0xB7F000")]
	public void Set2DOffset(float yOffset)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB7F024", Offset = "0xB7F024", VA = "0xB7F024")]
	public RacerBase GetBikeSim(int trailIndex)
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB7F068", Offset = "0xB7F068", VA = "0xB7F068")]
	public int GetTrailIndex(RacerBase rb)
	{
		return default(int);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB7F0EC", Offset = "0xB7F0EC", VA = "0xB7F0EC")]
	public void StartTrailInfection(TrailIntersection ti, Action<bool> action)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB7F1F8", Offset = "0xB7F1F8", VA = "0xB7F1F8")]
	public bool StartTrailInfectionAtY(float y, RacerBase rb, Action<bool> action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB7F104", Offset = "0xB7F104", VA = "0xB7F104")]
	public void StartTrailInfection(int pointIndex, int trailIndex, Action<bool> action)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB7F294", Offset = "0xB7F294", VA = "0xB7F294")]
	public BikeTrailManager()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD110", Offset = "0x9BD110")]
public class HudColorConfig : ScriptableObject
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color batteryFullFlashColor1;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color immuneOutlineTint;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color immuneOutlineTint2;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color immuneHudColor;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float immuneSpeedIntensity;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color flashHudColorIce;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color flashHudColor;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color flashHudColorMagnet;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve batteryWarningCurve;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color batteryWarningColor;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color defaultHudColor;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float batteryFlashDuration;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xBD5264", Offset = "0xBD5264", VA = "0xBD5264")]
	public HudColorConfig()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD15C", Offset = "0x9BD15C")]
public class MagnetEffectConfig : ScriptableObject
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxPoints;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pointsPerLength;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float curve_magnitude;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float curve_freq;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float height;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 testDistance;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float duration;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxMoveSpeed;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float leadingPointDist;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float advanceTargetFactor;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float sinMagSmoothStepStart;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float sinMagSmoothStepStop;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float emissionPointForShaderLead;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float trailSpeedBoost;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float homingSpeed;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fullHomeDelay;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float goStraightSmoothStart;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float goStraightSmoothStop;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float targetDuration;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float initialDirectionUpness;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float maxXVel;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int allowedXCrossings;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool pauseOnStart;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE04CD8", Offset = "0xE04CD8", VA = "0xE04CD8")]
	public MagnetEffectConfig()
	{
	}
}
[Token(Token = "0x2000009")]
public class BeautyRecorder : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UniversalCameraSettings camSettings;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool save;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VideoUtils.MotionBlurFrameCapture motionBlurFrameCapture;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderUtil.RenderTextureManager rtManager;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int videoFrameIndex;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float animationLength;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve dofScaleCurve;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve apertureScaleCurve;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool dofEnabled;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform focusTarget;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float dofLensSize;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int dofGridSize;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xB7BD08", Offset = "0xB7BD08", VA = "0xB7BD08")]
	public BeautyRecorder()
	{
	}
}
[Token(Token = "0x200000A")]
public class BikeHudScriptedAnimator : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE3C4", Offset = "0x9BE3C4")]
	public global::CPC_CameraPath.CPC_CameraPath cameraPath;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HudPrototype hudPrototype;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro hudText;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer bikePanelMeshRenderer;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BikeHudScriptedAnimatorConfig config;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool playedMusic;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float debugPosition;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xB7BD10", Offset = "0xB7BD10", VA = "0xB7BD10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xB7BD68", Offset = "0xB7BD68", VA = "0xB7BD68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB7BFD4", Offset = "0xB7BFD4", VA = "0xB7BFD4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB7C0C0", Offset = "0xB7C0C0", VA = "0xB7C0C0")]
	public BikeHudScriptedAnimator()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD198", Offset = "0x9BD198")]
public class BikeHudScriptedAnimatorConfig : ScriptableObject
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve[] meterCurves;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve screenBrightness;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve textOnBinaryCurve;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] meterScales;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float skipAtStart;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float restartProgress;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float progressScale;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float progressOffset;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip music;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float musicProgress;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB7C0C8", Offset = "0xB7C0C8", VA = "0xB7C0C8")]
	public BikeHudScriptedAnimatorConfig()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD1D4", Offset = "0x9BD1D4")]
public class MeshPositionSaver : ScriptableObject
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trans[] positions;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE06BE0", Offset = "0xE06BE0", VA = "0xE06BE0")]
	public MeshPositionSaver()
	{
	}
}
[Token(Token = "0x200000D")]
public class OverTrackVideoTextControl : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float trackPosY;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float objHeight;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE07778", Offset = "0xE07778", VA = "0xE07778")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9BF904", Offset = "0x9BF904")]
	public void Position()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE07958", Offset = "0xE07958", VA = "0xE07958")]
	public OverTrackVideoTextControl()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD220", Offset = "0x9BD220")]
public class CharacterAnimConfig : ScriptableObject
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE3FC", Offset = "0x9BE3FC")]
	public AnimationCurve backAngle_hips;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve backAngle_head;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve backAngle_spine1;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve backAngle_spine2;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve backAngle_spine3;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve backAngle_upperLeg;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve raiseArm_clavicle_x;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve raiseArm_clavicle_y;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve raiseArm_clavicle_z;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve raiseArm_shoulder_x;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve raiseArm_shoulder_y;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve raiseArm_shoulder_z;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 clavicleOnBike_L;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 shoulderOnBike_L;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 clavicleTPose_L;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 shoulderTPose_L;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 clavicleUpPose_L;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 shoulderUpPose_L;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB8108C", Offset = "0xB8108C", VA = "0xB8108C")]
	public CharacterAnimConfig()
	{
	}
}
[Token(Token = "0x200000F")]
public class CharacterAnimController : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	public enum ArmBlendMode
	{
		[Token(Token = "0x4000989")]
		BikeToT,
		[Token(Token = "0x400098A")]
		UpToT
	}

	[Serializable]
	[Token(Token = "0x2000108")]
	public struct ArmParams
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ArmBlendMode armBlendMode;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float arm_Blend;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float elbowExtend;
	}

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float backAngle;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ArmParams leftArm;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArmParams rightArm;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useRightArmForBoth;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 test1;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 test2;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CharacterAnimConfig config;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Quaternion[] initialRotations;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE444", Offset = "0x9BE444")]
	public Transform hips;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform spine1;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform spine2;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform spine3;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform neck;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform head;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform clavicle_L;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform shoulder_L;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform elbow_L;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform hand_L;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform clavicle_R;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform shoulder_R;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform elbow_R;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform hand_R;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform upperLeg_L;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform lowerLeg_L;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform ankle_L;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform ball_L;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform upperLeg_R;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform lowerLeg_R;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform ankle_R;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform ball_R;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Quaternion hips_defQ;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Quaternion spine1_defQ;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Quaternion spine2_defQ;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Quaternion spine3_defQ;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private Quaternion neck_defQ;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private Quaternion head_defQ;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private Quaternion clavicle_L_defQ;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private Quaternion shoulder_L_defQ;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private Quaternion elbow_L_defQ;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private Quaternion hand_L_defQ;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private Quaternion clavicle_R_defQ;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private Quaternion shoulder_R_defQ;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private Quaternion elbow_R_defQ;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private Quaternion hand_R_defQ;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private Quaternion upperLeg_L_defQ;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private Quaternion lowerLeg_L_defQ;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private Quaternion ankle_L_defQ;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private Quaternion ball_L_defQ;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private Quaternion upperLeg_R_defQ;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private Quaternion lowerLeg_R_defQ;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	private Quaternion ankle_R_defQ;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private Quaternion ball_R_defQ;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB81094", Offset = "0xB81094", VA = "0xB81094")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BF93C", Offset = "0x9BF93C")]
	public void SaveInitialRotations()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB81394", Offset = "0xB81394", VA = "0xB81394")]
	private static Quaternion MirrorRotation(Quaternion src)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB81444", Offset = "0xB81444", VA = "0xB81444")]
	private void PositionArm(ArmParams pararms, Transform clavicle, Transform shoulder, Transform elbow, bool mirrorClavicle)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB817C4", Offset = "0xB817C4", VA = "0xB817C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xB81B14", Offset = "0xB81B14", VA = "0xB81B14")]
	public CharacterAnimController()
	{
	}
}
[Token(Token = "0x2000010")]
public class ColorSchemeApplier : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelColorScheme colorScheme;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xB81B1C", Offset = "0xB81B1C", VA = "0xB81B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xB81B38", Offset = "0xB81B38", VA = "0xB81B38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xB81B54", Offset = "0xB81B54", VA = "0xB81B54")]
	public ColorSchemeApplier()
	{
	}
}
[Token(Token = "0x2000011")]
public class EngineParticlesController : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RacerBase racer;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve startLifeTimeCurve;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particleHideBox;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float period;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem ps;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startTime;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startEngineTime;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool started;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float waitTime;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xBD4BF0", Offset = "0xBD4BF0", VA = "0xBD4BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xBD4C78", Offset = "0xBD4C78", VA = "0xBD4C78")]
	public void StartEngine()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xBD4CD4", Offset = "0xBD4CD4", VA = "0xBD4CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xBD4EB4", Offset = "0xBD4EB4", VA = "0xBD4EB4")]
	public EngineParticlesController()
	{
	}
}
[Token(Token = "0x2000012")]
public class HologramAnimationForwarder : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter tgtHologramWireMesh;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter tgtHologramBodyMesh;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform scaler;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float squiggleScale;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lineWidthScale;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float exposureScale;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float colorBlend;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color secondWireColor;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color secondBodyColor;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer srcHologramWireMeshRender;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer srcHologramBodyMeshRender;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material wireMaterial;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material bodyMaterial;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xBD4F38", Offset = "0xBD4F38", VA = "0xBD4F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xBD503C", Offset = "0xBD503C", VA = "0xBD503C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xBD5248", Offset = "0xBD5248", VA = "0xBD5248")]
	public HologramAnimationForwarder()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BD26C", Offset = "0x9BD26C")]
public class IKControl : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Animator animator;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ikActive;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool handIkActive;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float handFadeIkDuration;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandObj;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandObj;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform lookObj;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float handIkStartTime;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xBD5848", Offset = "0xBD5848", VA = "0xBD5848")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xBD58A0", Offset = "0xBD58A0", VA = "0xBD58A0")]
	public void BlendHandsIKOn()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xBD58D0", Offset = "0xBD58D0", VA = "0xBD58D0")]
	public void HandIkOff()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xBD58D8", Offset = "0xBD58D8", VA = "0xBD58D8")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xBD5C04", Offset = "0xBD5C04", VA = "0xBD5C04")]
	internal void Connect(IKConnections iKConnections)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xBD5C2C", Offset = "0xBD5C2C", VA = "0xBD5C2C")]
	public IKControl()
	{
	}
}
[Token(Token = "0x2000014")]
public class MagnetEffectGenerator : MonoBehaviour
{
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDBBC", Offset = "0x9BDBBC")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagnetEffectGenerator <>4__this;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 <targetPos>5__2;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <xSign>5__3;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <xLocked>5__4;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool <finished>5__5;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool <movingToward>5__6;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <xCrossings>5__7;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0xE06944", Offset = "0xE06944", VA = "0xE06944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0xE069B0", Offset = "0xE069B0", VA = "0xE069B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xE057B4", Offset = "0xE057B4", VA = "0xE057B4")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xE057EC", Offset = "0xE057EC", VA = "0xE057EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xE057F0", Offset = "0xE057F0", VA = "0xE057F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xE0694C", Offset = "0xE0694C", VA = "0xE0694C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int effectsActive;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int trailIndex;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float trackLen;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 direction3D;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 direction2D;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 emissionPoint2D_forShader;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 currentPoint;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 currentPos3D;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 pointVelocity;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RacerBase target;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RacerBase source;

	[Token(Token = "0x17000003")]
	public static bool EffectActive
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xE04CE0", Offset = "0xE04CE0", VA = "0xE04CE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE04D50", Offset = "0xE04D50", VA = "0xE04D50")]
	public void Init(RacerBase src, RacerBase dst)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE04DF0", Offset = "0xE04DF0", VA = "0xE04DF0")]
	private Vector2 GetSourceTrailPoint()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE04E54", Offset = "0xE04E54", VA = "0xE04E54")]
	private void SetSourceMagnetEffect()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE04EB8", Offset = "0xE04EB8", VA = "0xE04EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE05030", Offset = "0xE05030", VA = "0xE05030")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE050D4", Offset = "0xE050D4", VA = "0xE050D4")]
	private void AddPoint(Vector2 pos, bool clear)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE05568", Offset = "0xE05568", VA = "0xE05568")]
	private Vector2 AddY(Vector2 a, float y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE055B4", Offset = "0xE055B4", VA = "0xE055B4")]
	private Vector2 Subtract(Vector2 v1, Vector2 v2)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE0560C", Offset = "0xE0560C", VA = "0xE0560C")]
	private Vector2 Add(Vector2 v1, Vector2 v2)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE051B4", Offset = "0xE051B4", VA = "0xE051B4")]
	private void AddPoint(Vector2 pos, bool clear, Vector2 emissionPointOffset2D, Vector3 emissionPointOffset3D)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE05664", Offset = "0xE05664", VA = "0xE05664")]
	private float GetIntersectionTime(float a, float b, float c)
	{
		return default(float);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE05720", Offset = "0xE05720", VA = "0xE05720")]
	private float GetInitialVelocityDelta(float a, float c, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE05740", Offset = "0xE05740", VA = "0xE05740")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BF974", Offset = "0x9BF974")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE057E0", Offset = "0xE057E0", VA = "0xE057E0")]
	public MagnetEffectGenerator()
	{
	}
}
[Token(Token = "0x2000015")]
public class MeshAnimator : MonoBehaviour
{
	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDBCC", Offset = "0x9BDBCC")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimator <>4__this;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshFilter <mf>5__2;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xE06B6C", Offset = "0xE06B6C", VA = "0xE06B6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xE06BD8", Offset = "0xE06BD8", VA = "0xE06BD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xE06A2C", Offset = "0xE06A2C", VA = "0xE06A2C")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xE06A60", Offset = "0xE06A60", VA = "0xE06A60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xE06A64", Offset = "0xE06A64", VA = "0xE06A64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xE06B74", Offset = "0xE06B74", VA = "0xE06B74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] meshes;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float meshPeriod;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int meshIndex;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE069B8", Offset = "0xE069B8", VA = "0xE069B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BF9D8", Offset = "0x9BF9D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE06A58", Offset = "0xE06A58", VA = "0xE06A58")]
	public MeshAnimator()
	{
	}
}
[Token(Token = "0x2000016")]
public class MineExplosionParticles : MonoBehaviour
{
	[Token(Token = "0x200010B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDBDC", Offset = "0x9BDBDC")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MineExplosionParticles <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0xE06D70", Offset = "0xE06D70", VA = "0xE06D70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0xE06DDC", Offset = "0xE06DDC", VA = "0xE06DDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xE06C5C", Offset = "0xE06C5C", VA = "0xE06C5C")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xE06C90", Offset = "0xE06C90", VA = "0xE06C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xE06C94", Offset = "0xE06C94", VA = "0xE06C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xE06D78", Offset = "0xE06D78", VA = "0xE06D78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE06BE8", Offset = "0xE06BE8", VA = "0xE06BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFA3C", Offset = "0x9BFA3C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE06C88", Offset = "0xE06C88", VA = "0xE06C88")]
	public MineExplosionParticles()
	{
	}
}
[Token(Token = "0x2000017")]
public class MinePop : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startTime;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE06DE4", Offset = "0xE06DE4", VA = "0xE06DE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE06E64", Offset = "0xE06E64", VA = "0xE06E64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE070F8", Offset = "0xE070F8", VA = "0xE070F8")]
	public MinePop()
	{
	}
}
[Token(Token = "0x2000018")]
public class RacerAnimController : MonoBehaviour
{
	[Token(Token = "0x200010C")]
	public enum RiderAnimTrigger
	{
		[Token(Token = "0x400099F")]
		Stretch,
		[Token(Token = "0x40009A0")]
		Point,
		[Token(Token = "0x40009A1")]
		LeanDown,
		[Token(Token = "0x40009A2")]
		ArmsInAir,
		[Token(Token = "0x40009A3")]
		Reset,
		[Token(Token = "0x40009A4")]
		LookBehindR,
		[Token(Token = "0x40009A5")]
		LookBehindL
	}

	[Token(Token = "0x200010D")]
	private enum State
	{
		[Token(Token = "0x40009A7")]
		WAITING_FOR_LEAN_DOWN_TIME,
		[Token(Token = "0x40009A8")]
		WAITING_FOR_LEAN_DOWN_AFTER_ANIM,
		[Token(Token = "0x40009A9")]
		LEANING_DOWN,
		[Token(Token = "0x40009AA")]
		CELEBRATING
	}

	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDBEC", Offset = "0x9BDBEC")]
	private sealed class <DoPreraceAnim_CR>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool point;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RacerAnimController <>4__this;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0xE09D4C", Offset = "0xE09D4C", VA = "0xE09D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0xE09DB8", Offset = "0xE09DB8", VA = "0xE09DB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xE0940C", Offset = "0xE0940C", VA = "0xE0940C")]
		[DebuggerHidden]
		public <DoPreraceAnim_CR>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xE09C30", Offset = "0xE09C30", VA = "0xE09C30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xE09C34", Offset = "0xE09C34", VA = "0xE09C34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xE09D54", Offset = "0xE09D54", VA = "0xE09D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IKControl ikControl;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[NonSerialized]
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BikeSim bikeSim;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float leanDownTime;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private State state;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lookBehindCoolDownTime;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float raceCelebrateProgress;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE08F7C", Offset = "0xE08F7C", VA = "0xE08F7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE08FEC", Offset = "0xE08FEC", VA = "0xE08FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE09348", Offset = "0xE09348", VA = "0xE09348")]
	public void SetPreracePose()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE0934C", Offset = "0xE0934C", VA = "0xE0934C")]
	public void DoPreraceAnim(bool point)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE09384", Offset = "0xE09384", VA = "0xE09384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFAA0", Offset = "0x9BFAA0")]
	private IEnumerator DoPreraceAnim_CR(bool point)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE09438", Offset = "0xE09438", VA = "0xE09438")]
	public void LockHandsEvent()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE09454", Offset = "0xE09454", VA = "0xE09454")]
	public void ReleaseHandsEvent()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE09470", Offset = "0xE09470", VA = "0xE09470")]
	public void AnimFinishedEvent()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE09518", Offset = "0xE09518", VA = "0xE09518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE09A78", Offset = "0xE09A78", VA = "0xE09A78")]
	public void Trigger(RiderAnimTrigger trigger)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE09B70", Offset = "0xE09B70", VA = "0xE09B70")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFB04", Offset = "0x9BFB04")]
	public void Stretch()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE09BCC", Offset = "0xE09BCC", VA = "0xE09BCC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFB3C", Offset = "0x9BFB3C")]
	public void Point()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE09908", Offset = "0xE09908", VA = "0xE09908")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFB74", Offset = "0x9BFB74")]
	public void LeanDown()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE09A1C", Offset = "0xE09A1C", VA = "0xE09A1C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFBAC", Offset = "0x9BFBAC")]
	public void ArmsInAir()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE092DC", Offset = "0xE092DC", VA = "0xE092DC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFBE4", Offset = "0x9BFBE4")]
	public void ResetAnim()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE09964", Offset = "0xE09964", VA = "0xE09964")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFC1C", Offset = "0x9BFC1C")]
	public void LookBehindR()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE099C0", Offset = "0xE099C0", VA = "0xE099C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFC54", Offset = "0x9BFC54")]
	public void LookBehindL()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE09C28", Offset = "0xE09C28", VA = "0xE09C28")]
	public RacerAnimController()
	{
	}
}
[Token(Token = "0x2000019")]
public class RiderModelManager : MonoBehaviour
{
	[Token(Token = "0x200010F")]
	public enum RiderModel
	{
		[Token(Token = "0x40009B0")]
		CYBORG = 0,
		[Token(Token = "0x40009B1")]
		HACKER = 1,
		[Token(Token = "0x40009B2")]
		MUSCLES = 2,
		[Token(Token = "0x40009B3")]
		OWL_RIDER = 100,
		[Token(Token = "0x40009B4")]
		NONE = 200
	}

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] characters;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE0A2F0", Offset = "0xE0A2F0", VA = "0xE0A2F0")]
	public void SelectCharacter(int n)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE0A394", Offset = "0xE0A394", VA = "0xE0A394")]
	public void SelectCharacter(RiderModel model)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE0A404", Offset = "0xE0A404", VA = "0xE0A404")]
	public void SetRandomCharacter()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE0A448", Offset = "0xE0A448", VA = "0xE0A448")]
	public RiderModelManager()
	{
	}
}
[Token(Token = "0x200001A")]
public class TeleportParticleController : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem ps;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE0A830", Offset = "0xE0A830", VA = "0xE0A830")]
	public TeleportParticleController()
	{
	}
}
[Token(Token = "0x200001B")]
public class TrackEyePortal : MonoBehaviour
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform skyboxPlane;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform frontTrackTerminator;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rearTrackTerminator;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trackBorder;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material trackBorderMat;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color backwardsFogColor;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float backwardsFogStart;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float backwardsFogEnd;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color forwardsFogColor;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float forwardsFogStart;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float forwardsFogEnd;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool flipCycle;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float portalAnimScale;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float borderRotationOffset;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshRenderer track;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material portalMaterial;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material skyPlaneMaterial;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float skyboxDepth;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float portalDistanceAhead;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RenderTexture mainRt;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float renderScale;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xE0A840", Offset = "0xE0A840", VA = "0xE0A840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xE0AA68", Offset = "0xE0AA68", VA = "0xE0AA68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xE0AAD4", Offset = "0xE0AAD4", VA = "0xE0AAD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xE0AAD8", Offset = "0xE0AAD8", VA = "0xE0AAD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xE0A8C8", Offset = "0xE0A8C8", VA = "0xE0A8C8")]
	private void AllocateTexture()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xE0B4E0", Offset = "0xE0B4E0", VA = "0xE0B4E0")]
	public TrackEyePortal()
	{
	}
}
[Token(Token = "0x200001C")]
public class TrackHologramController : MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator hologramAnimator;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter hologramWireMesh;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshFilter hologramBodyMesh;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform anchor;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SplineTrack selectedTrack;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SplineTrack trackToDisplay;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SplineTrack currentDisplayedTrack;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 maxTrackSize;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float trackScale;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool animatorVar_active;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xE0B8AC", Offset = "0xE0B8AC", VA = "0xE0B8AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xE0B974", Offset = "0xE0B974", VA = "0xE0B974")]
	public void SetSelected(SplineTrack track)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xE0BB4C", Offset = "0xE0BB4C", VA = "0xE0BB4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE0B97C", Offset = "0xE0B97C", VA = "0xE0B97C")]
	private void Recalc()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE0BF58", Offset = "0xE0BF58", VA = "0xE0BF58")]
	private void OnAnimEvent(AnimationEventForwarder.Event @event)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE0BEA0", Offset = "0xE0BEA0", VA = "0xE0BEA0")]
	public static void ResetManualSpin(GameObject go)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE0BB50", Offset = "0xE0BB50", VA = "0xE0BB50")]
	private void SetHologramModels(SplineTrack track)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE0BF8C", Offset = "0xE0BF8C", VA = "0xE0BF8C")]
	public TrackHologramController()
	{
	}
}
[Token(Token = "0x200001D")]
public class UnderLightDecalController : MonoBehaviour
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RacerBase bikeSim;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject decalQuad;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE0D4D0", Offset = "0xE0D4D0", VA = "0xE0D4D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xE0D75C", Offset = "0xE0D75C", VA = "0xE0D75C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xE0DF1C", Offset = "0xE0DF1C", VA = "0xE0DF1C")]
	public UnderLightDecalController()
	{
	}
}
[Token(Token = "0x200001E")]
public class HudTester : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE5DC", Offset = "0x9BE5DC")]
	public float speed;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE5F8", Offset = "0x9BE5F8")]
	public float battery;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE610", Offset = "0x9BE610")]
	public float powerPack;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HudColorConfig config;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastBadBatteryTime;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float powerPackDeployTime;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool infected;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool droneLocked;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool magnetLocked;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HudPrototype hp;

	[Token(Token = "0x17000004")]
	private bool BatteryGood
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0xBD52C8", Offset = "0xBD52C8", VA = "0xBD52C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000005")]
	private float BatteryFraction
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0xBD52D8", Offset = "0xBD52D8", VA = "0xBD52D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000006")]
	private float PowerPackFraction
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0xBD52E0", Offset = "0xBD52E0", VA = "0xBD52E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000007")]
	private bool MPImmunityActive
	{
		[Token(Token = "0x6000097")]
		[Address(RVA = "0xBD52E8", Offset = "0xBD52E8", VA = "0xBD52E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xBD526C", Offset = "0xBD526C", VA = "0xBD526C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xBD5270", Offset = "0xBD5270", VA = "0xBD5270")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xBD52FC", Offset = "0xBD52FC", VA = "0xBD52FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xBD5838", Offset = "0xBD5838", VA = "0xBD5838")]
	public HudTester()
	{
	}
}
[Token(Token = "0x200001F")]
public class IKConnections : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftHandleBar;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHandleBar;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xBD5840", Offset = "0xBD5840", VA = "0xBD5840")]
	public IKConnections()
	{
	}
}
[Token(Token = "0x2000020")]
public class LockedBikeButton : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] lockImages;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xBD7470", Offset = "0xBD7470", VA = "0xBD7470")]
	public void SetLocked()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xBD753C", Offset = "0xBD753C", VA = "0xBD753C")]
	public void SetUnlocked()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xBD7608", Offset = "0xBD7608", VA = "0xBD7608")]
	public LockedBikeButton()
	{
	}
}
[Token(Token = "0x2000021")]
public class CompAndBikeSelectMenu : MonoBehaviour
{
	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDBFC", Offset = "0x9BDBFC")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int closure_i;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompAndBikeSelectMenu <>4__this;

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xB82AA8", Offset = "0xB82AA8", VA = "0xB82AA8")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xB835B0", Offset = "0xB835B0", VA = "0xB835B0")]
		internal void <Awake>b__0()
		{
		}
	}

	[Token(Token = "0x2000111")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC0C", Offset = "0x9BDC0C")]
	private sealed class <>c__DisplayClass27_1
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int closure_i;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompAndBikeSelectMenu <>4__this;

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xB82AB0", Offset = "0xB82AB0", VA = "0xB82AB0")]
		public <>c__DisplayClass27_1()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xB835D4", Offset = "0xB835D4", VA = "0xB835D4")]
		internal void <Awake>b__1()
		{
		}
	}

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button changeBikeButton;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button[] compButtons;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button[] bikeButtons;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bikeSelectPanel;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject compSelectPanel;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color defaultTextColor;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color highlightedTextColor;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color selectedTextColor;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool careerMode;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WireBoxUIController wireBoxUIControllerCache_;

	[Token(Token = "0x17000008")]
	public bool BikePanelVisible
	{
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xB81F34", Offset = "0xB81F34", VA = "0xB81F34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000009")]
	private WireBoxUIController WireBoxUIControllerCache
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xB827E4", Offset = "0xB827E4", VA = "0xB827E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<int> OnCompButtonPressed
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0xB81B5C", Offset = "0xB81B5C", VA = "0xB81B5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFC8C", Offset = "0x9BFC8C")]
		add
		{
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0xB81C00", Offset = "0xB81C00", VA = "0xB81C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFC9C", Offset = "0x9BFC9C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<int> OnBikeButtonPressed
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xB81CA4", Offset = "0xB81CA4", VA = "0xB81CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFCAC", Offset = "0x9BFCAC")]
		add
		{
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xB81D48", Offset = "0xB81D48", VA = "0xB81D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFCBC", Offset = "0x9BFCBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action OnChangeBikePressed
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xB81DEC", Offset = "0xB81DEC", VA = "0xB81DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFCCC", Offset = "0x9BFCCC")]
		add
		{
		}
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xB81E90", Offset = "0xB81E90", VA = "0xB81E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFCDC", Offset = "0x9BFCDC")]
		remove
		{
		}
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB81F50", Offset = "0xB81F50", VA = "0xB81F50")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFCEC", Offset = "0x9BFCEC")]
	public void RefreshButtons()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB825D4", Offset = "0xB825D4", VA = "0xB825D4")]
	private void SetButtonLocked(Button button)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB822B4", Offset = "0xB822B4", VA = "0xB822B4")]
	private void SetButtonUnlocked(Button button, Competition comp, bool selected, bool highlighted)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB827B0", Offset = "0xB827B0", VA = "0xB827B0")]
	private void SetButtonHidden(Button button)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB82898", Offset = "0xB82898", VA = "0xB82898")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB82AB8", Offset = "0xB82AB8", VA = "0xB82AB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB82B5C", Offset = "0xB82B5C", VA = "0xB82B5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB82C00", Offset = "0xB82C00", VA = "0xB82C00")]
	private void OnCompButtonPress_internal(int i)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB82C74", Offset = "0xB82C74", VA = "0xB82C74")]
	private void OnBikeButtonPress_internal(int i)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB82E98", Offset = "0xB82E98", VA = "0xB82E98")]
	private bool ContextSupportsBikeChangeing()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB83018", Offset = "0xB83018", VA = "0xB83018")]
	private void ChangeBikeButtonClicked()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB83380", Offset = "0xB83380", VA = "0xB83380")]
	public void OnPointerEnterBike(int index)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB83434", Offset = "0xB83434", VA = "0xB83434")]
	public void OnPointerExitBike(int index)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB834D8", Offset = "0xB834D8", VA = "0xB834D8")]
	public void SetCompSelectMode()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB830C8", Offset = "0xB830C8", VA = "0xB830C8")]
	private void UpdateBikeSelectUI()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB83554", Offset = "0xB83554", VA = "0xB83554")]
	public CompAndBikeSelectMenu()
	{
	}
}
[Token(Token = "0x2000022")]
public class ImageFlasher : MonoBehaviour
{
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC1C", Offset = "0x9BDC1C")]
	private sealed class <Flash_CR>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageFlasher <>4__this;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image <img>5__2;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0xBD5ED4", Offset = "0xBD5ED4", VA = "0xBD5ED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0xBD5F40", Offset = "0xBD5F40", VA = "0xBD5F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xBD5D44", Offset = "0xBD5D44", VA = "0xBD5D44")]
		[DebuggerHidden]
		public <Flash_CR>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xBD5D78", Offset = "0xBD5D78", VA = "0xBD5D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xBD5D7C", Offset = "0xBD5D7C", VA = "0xBD5D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xBD5EDC", Offset = "0xBD5EDC", VA = "0xBD5EDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite A;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite B;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float period;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xBD5C40", Offset = "0xBD5C40", VA = "0xBD5C40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xBD5CE0", Offset = "0xBD5CE0", VA = "0xBD5CE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xBD5C6C", Offset = "0xBD5C6C", VA = "0xBD5C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFD24", Offset = "0x9BFD24")]
	private IEnumerator Flash_CR()
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xBD5D70", Offset = "0xBD5D70", VA = "0xBD5D70")]
	public ImageFlasher()
	{
	}
}
[Token(Token = "0x2000023")]
public class SteeringPreview : MonoBehaviour
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform pip;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pipRange;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxStick;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI message;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject demo_Stick;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject demo_ControllerRoll;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject demo_HeadPos;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject demo_Wheel;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject demo_HandleBars;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject demo_Text;

	[NonSerialized]
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float stickSensitivity;

	[NonSerialized]
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public FlightControl.StickControlMode stickMode;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform leftHand;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform rightHand;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xE0A560", Offset = "0xE0A560", VA = "0xE0A560")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xE0A604", Offset = "0xE0A604", VA = "0xE0A604")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xE0A6F0", Offset = "0xE0A6F0", VA = "0xE0A6F0")]
	public SteeringPreview()
	{
	}
}
[Token(Token = "0x2000024")]
public class TextOrImageButton : MonoBehaviour
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xE0A838", Offset = "0xE0A838", VA = "0xE0A838")]
	public TextOrImageButton()
	{
	}
}
[Token(Token = "0x2000025")]
public class MPController : MonoBehaviourPunCallbacks, IOnEventCallback
{
	[Token(Token = "0x2000113")]
	public enum PlayerState
	{
		[Token(Token = "0x40009BE")]
		NotReady,
		[Token(Token = "0x40009BF")]
		Ready,
		[Token(Token = "0x40009C0")]
		StartingGame,
		[Token(Token = "0x40009C1")]
		Absent
	}

	[Token(Token = "0x2000114")]
	public enum MPEvent
	{
		[Token(Token = "0x40009C3")]
		JoinRoom,
		[Token(Token = "0x40009C4")]
		RaceStarting
	}

	[Token(Token = "0x2000115")]
	public enum GameJoinSuccess
	{
		[Token(Token = "0x40009C6")]
		Ok,
		[Token(Token = "0x40009C7")]
		FailToConnect,
		[Token(Token = "0x40009C8")]
		NoOtherPlayers
	}

	[Token(Token = "0x2000116")]
	public enum ControllerState
	{
		[Token(Token = "0x40009CA")]
		Disconnected,
		[Token(Token = "0x40009CB")]
		FindingLocalRegionOrDisconnectingForLobby,
		[Token(Token = "0x40009CC")]
		JoiningLobby,
		[Token(Token = "0x40009CD")]
		InLobby,
		[Token(Token = "0x40009CE")]
		AboutToGoToRoom,
		[Token(Token = "0x40009CF")]
		LeavingLobbyForGame,
		[Token(Token = "0x40009D0")]
		WaitingToJoinGame,
		[Token(Token = "0x40009D1")]
		JoiningGame,
		[Token(Token = "0x40009D2")]
		InGame,
		[Token(Token = "0x40009D3")]
		Disconnecting,
		[Token(Token = "0x40009D4")]
		JoiningServerForGame
	}

	[Token(Token = "0x2000117")]
	public struct EnumLobbyPlayers_Data
	{
		[Token(Token = "0x2000215")]
		public enum State
		{
			[Token(Token = "0x4000FCF")]
			NotReady,
			[Token(Token = "0x4000FD0")]
			ReadyAndWaiting,
			[Token(Token = "0x4000FD1")]
			ReadyAndPending,
			[Token(Token = "0x4000FD2")]
			Absent
		}

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player player;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public State state;
	}

	[Token(Token = "0x2000118")]
	private class RegionPicker
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] europe;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] america;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] asia;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] votes;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int europeVotes;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int americaVotes;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int asiaVotes;

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xE000D0", Offset = "0xE000D0", VA = "0xE000D0")]
		public RegionPicker()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xE0045C", Offset = "0xE0045C", VA = "0xE0045C")]
		public void AddVote(int regionIndex)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xE04248", Offset = "0xE04248", VA = "0xE04248")]
		private string FirstWithVote(string[] shortList)
		{
			return null;
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xE00750", Offset = "0xE00750", VA = "0xE00750")]
		public string GetBestRegion()
		{
			return null;
		}
	}

	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC2C", Offset = "0x9BDC2C")]
	private sealed class <QuickConnectTopperUpper_CR>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MPController <>4__this;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xE041D4", Offset = "0xE041D4", VA = "0xE041D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xE04240", Offset = "0xE04240", VA = "0xE04240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xDFDE48", Offset = "0xDFDE48", VA = "0xDFDE48")]
		[DebuggerHidden]
		public <QuickConnectTopperUpper_CR>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xE040F4", Offset = "0xE040F4", VA = "0xE040F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xE040F8", Offset = "0xE040F8", VA = "0xE040F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xE041DC", Offset = "0xE041DC", VA = "0xE041DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC3C", Offset = "0x9BDC3C")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MPController <>4__this;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int now;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xDFF554", Offset = "0xDFF554", VA = "0xDFF554")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xE03D2C", Offset = "0xE03D2C", VA = "0xE03D2C")]
		internal int <PlayersSortedByReadyTime>b__0(Player x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC4C", Offset = "0x9BDC4C")]
	private sealed class <EnumLobbyPlayers>d__57 : IEnumerable<EnumLobbyPlayers_Data>, IEnumerable, IEnumerator<EnumLobbyPlayers_Data>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EnumLobbyPlayers_Data <>2__current;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MPController <>4__this;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <readyCount>5__2;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Player[] <>7__wrap2;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <>7__wrap3;

		[Token(Token = "0x1700008C")]
		private EnumLobbyPlayers_Data System.Collections.Generic.IEnumerator<MPController.EnumLobbyPlayers_Data>.Current
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xE03F6C", Offset = "0xE03F6C", VA = "0xE03F6C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(EnumLobbyPlayers_Data);
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xE03FDC", Offset = "0xE03FDC", VA = "0xE03FDC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xDFF5E0", Offset = "0xDFF5E0", VA = "0xDFF5E0")]
		[DebuggerHidden]
		public <EnumLobbyPlayers>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xE03D64", Offset = "0xE03D64", VA = "0xE03D64", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xE03D68", Offset = "0xE03D68", VA = "0xE03D68", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xE03F78", Offset = "0xE03F78", VA = "0xE03F78", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xE04040", Offset = "0xE04040", VA = "0xE04040", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<EnumLobbyPlayers_Data> System.Collections.Generic.IEnumerable<MPController.EnumLobbyPlayers_Data>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xE040F0", Offset = "0xE040F0", VA = "0xE040F0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC5C", Offset = "0x9BDC5C")]
	private sealed class <>c
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Player, bool> <>9__122_0;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__130_0;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<MPPlayerView, int> <>9__130_1;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<int> <>9__130_2;

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xE03C50", Offset = "0xE03C50", VA = "0xE03C50")]
		public <>c()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xE03C58", Offset = "0xE03C58", VA = "0xE03C58")]
		internal bool <PlayerReadyCount>b__122_0(Player x)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xE03D20", Offset = "0xE03D20", VA = "0xE03D20")]
		internal void <.ctor>b__130_0()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xE03D24", Offset = "0xE03D24", VA = "0xE03D24")]
		internal void <.ctor>b__130_1(MPPlayerView <p0>, int <p1>)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xE03D28", Offset = "0xE03D28", VA = "0xE03D28")]
		internal void <.ctor>b__130_2(int <p0>)
		{
		}
	}

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MPController instance;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool persisting;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minPlayers;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxPlayers;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delayBeforeCreatingLobbyInfo;

	[Token(Token = "0x400012D")]
	public const string COUNT_DOWN_START_TIME_KEY = "countDownStartTime";

	[Token(Token = "0x400012E")]
	public const string RACE_START_TIME_KEY = "raceStartTime";

	[NonSerialized]
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Player[] lobbyPlayers;

	[NonSerialized]
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float countdownRemaining;

	[NonSerialized]
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action onReadyToJoinGame;

	[NonSerialized]
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<MPPlayerView, int> OnPlayerViewRegistered;

	[NonSerialized]
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<int> OnPlayerDisconnect;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string currentLobbyRoomName;

	[Token(Token = "0x4000135")]
	private const string lobbyRoomName = "LOBBY_v4";

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MPPlayerView myPlayer;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, MPPlayerView> playerViews;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, float> leavingPlayerRecords;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float joinedRoomTime;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string gameRoom;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int gameRoomExpectedPlayerCount;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float roomLeaveTime;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastDontCreateLobbyInfoTime;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string preferedRegion;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int preferedRegionIndex;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string gameRegion;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool hostSwitchOnPause;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float minimumStartGameTime;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool shouldBeConnected;

	[NonSerialized]
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private ControllerState currentState_;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float quickReconnectTries;

	[NonSerialized]
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int levelIndex;

	[NonSerialized]
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int startIndexOffset;

	[NonSerialized]
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int playerIndex;

	[NonSerialized]
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool raceStarting;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string[] regions;

	[Token(Token = "0x400014B")]
	public const int usRegionIndex = 11;

	[Token(Token = "0x400014C")]
	private const string ROOM_STATE_PLAYERS_READY = "ready";

	[Token(Token = "0x400014D")]
	private const string ROOM_STATE_PLAYERS_READY_TIME = "ready_time";

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int playerLevelVote;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PlayerState playerState;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int isReadyTime;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool destroyAfterDisconnect;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float smoothedPing;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int cached_playersOnAlertCount;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int cached_playersInLobbyCount;

	[Token(Token = "0x1700000A")]
	public string GameRoom
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xDFDBAC", Offset = "0xDFDBAC", VA = "0xDFDBAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	private ControllerState currentState
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xDFDBB4", Offset = "0xDFDBB4", VA = "0xDFDBB4")]
		get
		{
			return default(ControllerState);
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xDFDBBC", Offset = "0xDFDBBC", VA = "0xDFDBBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public ControllerState CurrentState
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xDFDBC4", Offset = "0xDFDBC4", VA = "0xDFDBC4")]
		get
		{
			return default(ControllerState);
		}
	}

	[Token(Token = "0x1700000D")]
	public float TimeInCurrentRoom
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xDFDBCC", Offset = "0xDFDBCC", VA = "0xDFDBCC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000E")]
	public int LobbyPlayerCount
	{
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xDFF318", Offset = "0xDFF318", VA = "0xDFF318")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000F")]
	public int ExpectedPlayerCount
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xE01140", Offset = "0xE01140", VA = "0xE01140")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000010")]
	public MPPlayerView LocalPlayerView
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xE0149C", Offset = "0xE0149C", VA = "0xE0149C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public int PlayerLevelVote
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xE02DEC", Offset = "0xE02DEC", VA = "0xE02DEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xE02DF4", Offset = "0xE02DF4", VA = "0xE02DF4")]
		set
		{
		}
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xDFDC0C", Offset = "0xDFDC0C", VA = "0xDFDC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xDFDDD4", Offset = "0xDFDDD4", VA = "0xDFDDD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFD88", Offset = "0x9BFD88")]
	private IEnumerator QuickConnectTopperUpper_CR()
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xDFDE74", Offset = "0xDFDE74", VA = "0xDFDE74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFDEC", Offset = "0x9BFDEC")]
	public void TriggerDisconnect()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xDFDED4", Offset = "0xDFDED4", VA = "0xDFDED4")]
	public static string SafeGetLocalName()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xDFDFA4", Offset = "0xDFDFA4", VA = "0xDFDFA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xDFF338", Offset = "0xDFF338", VA = "0xDFF338")]
	private int GetReadyTime(Player player)
	{
		return default(int);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xDFF3F8", Offset = "0xDFF3F8", VA = "0xDFF3F8")]
	public Player[] PlayersSortedByReadyTime()
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xDFF55C", Offset = "0xDFF55C", VA = "0xDFF55C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFE24", Offset = "0x9BFE24")]
	public IEnumerable<EnumLobbyPlayers_Data> EnumLobbyPlayers()
	{
		return null;
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xDFF618", Offset = "0xDFF618", VA = "0xDFF618")]
	public bool IsPlayerReady(Player player)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xDFF70C", Offset = "0xDFF70C", VA = "0xDFF70C")]
	public int GetPlayerLevelVote(Player player)
	{
		return default(int);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xDFF7C8", Offset = "0xDFF7C8", VA = "0xDFF7C8")]
	private bool GetRoomBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xDFF8C4", Offset = "0xDFF8C4", VA = "0xDFF8C4")]
	public int GetRoomInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xDFF9B8", Offset = "0xDFF9B8", VA = "0xDFF9B8")]
	public void SetRoomInt(string key, int newValue, int expected)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xDFFAEC", Offset = "0xDFFAEC", VA = "0xDFFAEC")]
	public void SetRoomInt(string key, int newValue)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xDFFBD0", Offset = "0xDFFBD0", VA = "0xDFFBD0")]
	private void SetRoomBool(string key, bool b)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xDFFCB4", Offset = "0xDFFCB4", VA = "0xDFFCB4")]
	private int SetRoomPlayersReady(bool b)
	{
		return default(int);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xDFE4B8", Offset = "0xDFE4B8", VA = "0xDFE4B8")]
	private void UpdateCountdown()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xE005E4", Offset = "0xE005E4", VA = "0xE005E4")]
	public static string SafeTrackNameFromIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xDFFE10", Offset = "0xDFFE10", VA = "0xDFFE10")]
	private void RemoveOldLeavingPlayerRecords()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xE003DC", Offset = "0xE003DC", VA = "0xE003DC")]
	public string GenerateDestinationRoomName()
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xE008E4", Offset = "0xE008E4", VA = "0xE008E4")]
	private string GenertateGUID()
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xE00BF4", Offset = "0xE00BF4", VA = "0xE00BF4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFE88", Offset = "0x9BFE88")]
	public void CacheCurrentPlayers()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xE00C60", Offset = "0xE00C60", VA = "0xE00C60")]
	private string GetLobbyName()
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xDFE3AC", Offset = "0xDFE3AC", VA = "0xDFE3AC")]
	private void JoinLobby()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xE00FBC", Offset = "0xE00FBC", VA = "0xE00FBC")]
	public void JoinGameRoom()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xE00DEC", Offset = "0xE00DEC", VA = "0xE00DEC")]
	private string GetNickName()
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xE01148", Offset = "0xE01148", VA = "0xE01148")]
	public void SetCanJoinGameRoom()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xDFF2DC", Offset = "0xDFF2DC", VA = "0xDFF2DC")]
	public void Connect()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xE013AC", Offset = "0xE013AC", VA = "0xE013AC")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xE0142C", Offset = "0xE0142C", VA = "0xE0142C")]
	public void LeaveGame()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xE014A4", Offset = "0xE014A4", VA = "0xE014A4")]
	public void RegisterPlayerView(MPPlayerView playerView, int actorNumber)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xE01630", Offset = "0xE01630", VA = "0xE01630")]
	public void StartGoingToRoom(string gameRoomName, int expectedPlayerCount, string region, int level, int startIndexOffset, int playerIndex)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xE018D4", Offset = "0xE018D4", VA = "0xE018D4", Slot = "43")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xE01C20", Offset = "0xE01C20", VA = "0xE01C20")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xE01C88", Offset = "0xE01C88", VA = "0xE01C88", Slot = "36")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xE01E00", Offset = "0xE01E00", VA = "0xE01E00", Slot = "29")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xE01F6C", Offset = "0xE01F6C", VA = "0xE01F6C", Slot = "30")]
	public override void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xE01FB0", Offset = "0xE01FB0", VA = "0xE01FB0", Slot = "31")]
	public override void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xE020D4", Offset = "0xE020D4", VA = "0xE020D4", Slot = "32")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xE021F8", Offset = "0xE021F8", VA = "0xE021F8", Slot = "33")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xE021FC", Offset = "0xE021FC", VA = "0xE021FC", Slot = "39")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xE02510", Offset = "0xE02510", VA = "0xE02510")]
	public void SetKeepAliveMode_Lobby()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xE02700", Offset = "0xE02700", VA = "0xE02700")]
	public void SetKeepAliveMode_Game()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xE0280C", Offset = "0xE0280C", VA = "0xE0280C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xE02820", Offset = "0xE02820", VA = "0xE02820")]
	private void SwitchMaster()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xE02948", Offset = "0xE02948", VA = "0xE02948")]
	public void SetHostSwitchOnPauseEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xE02954", Offset = "0xE02954", VA = "0xE02954", Slot = "40")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xE02958", Offset = "0xE02958", VA = "0xE02958", Slot = "41")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xE029E0", Offset = "0xE029E0", VA = "0xE029E0", Slot = "37")]
	public override void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xE029E4", Offset = "0xE029E4", VA = "0xE029E4", Slot = "44")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xE02BE8", Offset = "0xE02BE8", VA = "0xE02BE8", Slot = "45")]
	public override void OnPlayerPropertiesUpdate(Player target, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xE018BC", Offset = "0xE018BC", VA = "0xE018BC")]
	public void SetPlayerState(PlayerState state)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xE02E0C", Offset = "0xE02E0C", VA = "0xE02E0C")]
	public void SetPlayerState(PlayerState state, int isReadyTime = 0)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xE01164", Offset = "0xE01164", VA = "0xE01164")]
	public void SendPlayerState()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE0261C", Offset = "0xE0261C", VA = "0xE0261C")]
	public void SetPlayerPreferedRegion(int regionIndex)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xE02E30", Offset = "0xE02E30", VA = "0xE02E30")]
	public int PlayerReadyCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xE02F20", Offset = "0xE02F20", VA = "0xE02F20")]
	public bool AllPlayersReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xE02F5C", Offset = "0xE02F5C", VA = "0xE02F5C", Slot = "51")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xE03190", Offset = "0xE03190", VA = "0xE03190")]
	public void DestroyAfterDisconnect()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xE0319C", Offset = "0xE0319C", VA = "0xE0319C")]
	public void SendStartEvent()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xE03280", Offset = "0xE03280", VA = "0xE03280")]
	public static int PlayerInLobbyAlertCount(out int playersOnAlertCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xE03634", Offset = "0xE03634", VA = "0xE03634")]
	public MPController()
	{
	}
}
[Token(Token = "0x2000026")]
public class MPTest : MonoBehaviour
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MPController mp;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ready;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xE043F4", Offset = "0xE043F4", VA = "0xE043F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xE045A8", Offset = "0xE045A8", VA = "0xE045A8")]
	private void OnReadyToJoinGame()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xE045F4", Offset = "0xE045F4", VA = "0xE045F4")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xE04688", Offset = "0xE04688", VA = "0xE04688")]
	private void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xE0468C", Offset = "0xE0468C", VA = "0xE0468C")]
	private void Update()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xE04690", Offset = "0xE04690", VA = "0xE04690")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xE04CD0", Offset = "0xE04CD0", VA = "0xE04CD0")]
	public MPTest()
	{
	}
}
[Token(Token = "0x2000027")]
public struct BlurParams
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float length;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int angle;
}
[Token(Token = "0x2000028")]
public class SortingOrderSetter : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sortingOrder;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xE0A450", Offset = "0xE0A450", VA = "0xE0A450")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xE0A554", Offset = "0xE0A554", VA = "0xE0A554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xE0A558", Offset = "0xE0A558", VA = "0xE0A558")]
	public SortingOrderSetter()
	{
	}
}
[Token(Token = "0x2000029")]
public class PlayAfterOneFrame : MonoBehaviour
{
	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC6C", Offset = "0x9BDC6C")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayAfterOneFrame <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0xE08C30", Offset = "0xE08C30", VA = "0xE08C30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xE08C9C", Offset = "0xE08C9C", VA = "0xE08C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xE08B64", Offset = "0xE08B64", VA = "0xE08B64")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xE08B98", Offset = "0xE08B98", VA = "0xE08B98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xE08B9C", Offset = "0xE08B9C", VA = "0xE08B9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xE08C38", Offset = "0xE08C38", VA = "0xE08C38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xE08AF0", Offset = "0xE08AF0", VA = "0xE08AF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFEC0", Offset = "0x9BFEC0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xE08B90", Offset = "0xE08B90", VA = "0xE08B90")]
	public PlayAfterOneFrame()
	{
	}
}
[Token(Token = "0x200002A")]
public class RepriseTester : MonoBehaviour
{
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC7C", Offset = "0x9BDC7C")]
	private sealed class <Transition_CR>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RepriseTester <>4__this;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xE0A27C", Offset = "0xE0A27C", VA = "0xE0A27C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0xE0A2E8", Offset = "0xE0A2E8", VA = "0xE0A2E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xE0A068", Offset = "0xE0A068", VA = "0xE0A068")]
		[DebuggerHidden]
		public <Transition_CR>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xE0A09C", Offset = "0xE0A09C", VA = "0xE0A09C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xE0A0A0", Offset = "0xE0A0A0", VA = "0xE0A0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xE0A284", Offset = "0xE0A284", VA = "0xE0A284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioLoop audioLoop;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource src1;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource src2;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixer mixer;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float loop_VolumeMin;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float loop_VolumeMax;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reprise_VolumeMin;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float reprise_VolumeMax;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve loopFade;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve repriseEnter;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE658", Offset = "0x9BE658")]
	public float duration;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool stopCR;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xE09DC0", Offset = "0xE09DC0", VA = "0xE09DC0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xE09E80", Offset = "0xE09E80", VA = "0xE09E80")]
	private void RefreshAudioLoop()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xE09EF8", Offset = "0xE09EF8", VA = "0xE09EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xE09FF4", Offset = "0xE09FF4", VA = "0xE09FF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFF24", Offset = "0x9BFF24")]
	private IEnumerator Transition_CR()
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xE0A094", Offset = "0xE0A094", VA = "0xE0A094")]
	public RepriseTester()
	{
	}
}
[Token(Token = "0x200002B")]
public class TrackFrameObjectSpin : MonoBehaviour
{
	[Token(Token = "0x200011F")]
	public enum MotionType
	{
		[Token(Token = "0x40009F7")]
		Rotation,
		[Token(Token = "0x40009F8")]
		BackAndForth,
		[Token(Token = "0x40009F9")]
		Translation
	}

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SpinSpeed;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int RotationRange;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rotAxis;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform m_transform;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_time;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_prevPOS;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_initial_Rotation;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 m_initial_Position;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color32 m_lightColor;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int frames;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MotionType Motion;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xE0B4F4", Offset = "0xE0B4F4", VA = "0xE0B4F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xE0B614", Offset = "0xE0B614", VA = "0xE0B614")]
	private void Update()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xE0B890", Offset = "0xE0B890", VA = "0xE0B890")]
	public TrackFrameObjectSpin()
	{
	}
}
[Token(Token = "0x200002C")]
public class TrackPosComponent : MonoBehaviour
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 pos;

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xE0D4C8", Offset = "0xE0D4C8", VA = "0xE0D4C8")]
	public TrackPosComponent()
	{
	}
}
[Token(Token = "0x200002D")]
public class BSpline
{
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC8C", Offset = "0x9BDC8C")]
	private sealed class <WeightsOverRange>d__4 : IEnumerable<Vector4[]>, IEnumerable, IEnumerator<Vector4[]>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector4[] <>2__current;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float from;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float <>3__from;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float stepSize;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float <>3__stepSize;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float to;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float <>3__to;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <t>5__2;

		[Token(Token = "0x17000092")]
		private Vector4[] System.Collections.Generic.IEnumerator<UnityEngine.Vector4[]>.Current
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0xB7B9C8", Offset = "0xB7B9C8", VA = "0xB7B9C8", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0xB7BA34", Offset = "0xB7BA34", VA = "0xB7BA34", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xB7B7FC", Offset = "0xB7B7FC", VA = "0xB7B7FC")]
		[DebuggerHidden]
		public <WeightsOverRange>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xB7B83C", Offset = "0xB7B83C", VA = "0xB7B83C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xB7B840", Offset = "0xB7B840", VA = "0xB7B840", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xB7B9D0", Offset = "0xB7B9D0", VA = "0xB7B9D0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xB7BA3C", Offset = "0xB7BA3C", VA = "0xB7BA3C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Vector4[]> System.Collections.Generic.IEnumerable<UnityEngine.Vector4[]>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xB7BAFC", Offset = "0xB7BAFC", VA = "0xB7BAFC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB7B54C", Offset = "0xB7B54C", VA = "0xB7B54C")]
	public static float Eval(float p1, float p2, float p3, float p4, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB7B678", Offset = "0xB7B678", VA = "0xB7B678")]
	public static Vector4 Weights(float t)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB7B6D4", Offset = "0xB7B6D4", VA = "0xB7B6D4")]
	public static Vector4 WeightsDT(float t)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB7B724", Offset = "0xB7B724", VA = "0xB7B724")]
	public static Vector4 WeightsDDT(float t)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB7B758", Offset = "0xB7B758", VA = "0xB7B758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BFF88", Offset = "0x9BFF88")]
	public static IEnumerable<Vector4[]> WeightsOverRange(float from, float to, float stepSize)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB7B834", Offset = "0xB7B834", VA = "0xB7B834")]
	public BSpline()
	{
	}
}
[Token(Token = "0x200002E")]
public static class ConsoleProDebug
{
	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB835F8", Offset = "0xB835F8", VA = "0xB835F8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB835FC", Offset = "0xB835FC", VA = "0xB835FC")]
	public static void LogToFilter(string inLog, string inFilterName)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB836A0", Offset = "0xB836A0", VA = "0xB836A0")]
	public static void Watch(string inName, string inValue)
	{
	}
}
[Token(Token = "0x200002F")]
public class DoorDoubleSlide : MonoBehaviour
{
	[Token(Token = "0x2000121")]
	public enum Direction
	{
		[Token(Token = "0x4000A05")]
		X,
		[Token(Token = "0x4000A06")]
		Y,
		[Token(Token = "0x4000A07")]
		Z
	}

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform doorL;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform doorR;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialDoorL;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 initialDoorR;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 doorDirection;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Direction directionType;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float speed;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float openDistance;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float point;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool opening;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xBD4728", Offset = "0xBD4728", VA = "0xBD4728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xBD4804", Offset = "0xBD4804", VA = "0xBD4804")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xBD486C", Offset = "0xBD486C", VA = "0xBD486C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xBD48D0", Offset = "0xBD48D0", VA = "0xBD48D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xBD4BD8", Offset = "0xBD4BD8", VA = "0xBD4BD8")]
	public DoorDoubleSlide()
	{
	}
}
[Token(Token = "0x2000030")]
public class LiveEditorHandle : MonoBehaviour
{
	[Token(Token = "0x600012A")]
	[Address(RVA = "0xBD5F54", Offset = "0xBD5F54", VA = "0xBD5F54")]
	private void Update()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xBD5F58", Offset = "0xBD5F58", VA = "0xBD5F58")]
	public LiveEditorHandle()
	{
	}
}
[Token(Token = "0x2000031")]
public class LiveTrackEditor : SingletonMono<LiveTrackEditor>, IContext
{
	[Serializable]
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDC9C", Offset = "0x9BDC9C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__23_1;

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xBD7408", Offset = "0xBD7408", VA = "0xBD7408")]
		public <>c()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xBD7410", Offset = "0xBD7410", VA = "0xBD7410")]
		internal void <ContextUpdate>b__23_1()
		{
		}
	}

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UniversalCameraSettings cameraSettings;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.RawButton addButton;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float removeShakeLevel;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int splineDivisions;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float cameraScale;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nodePrefab;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camMount;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool editing;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float savedCameraScale;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HandTool handTool;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BSplineTrackEditor splineEditor;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaceLevelController raceLevelController;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SplineTrack splineTrack;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int editorLayer;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material lineMaterial;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xBD5F60", Offset = "0xBD5F60", VA = "0xBD5F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xBD6050", Offset = "0xBD6050", VA = "0xBD6050")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xBD623C", Offset = "0xBD623C", VA = "0xBD623C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BFFEC", Offset = "0x9BFFEC")]
	public void SetupNodeSplineNodes()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xBD63CC", Offset = "0xBD63CC", VA = "0xBD63CC")]
	private static void CreateLineMaterial()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xBD6568", Offset = "0xBD6568", VA = "0xBD6568", Slot = "5")]
	public void OnGainFocus()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xBD67B0", Offset = "0xBD67B0", VA = "0xBD67B0", Slot = "6")]
	public void OnPushed()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xBD67B4", Offset = "0xBD67B4", VA = "0xBD67B4", Slot = "7")]
	public void OnPopped()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xBD67B8", Offset = "0xBD67B8", VA = "0xBD67B8", Slot = "8")]
	public void OnLoseFocus()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xBD67DC", Offset = "0xBD67DC", VA = "0xBD67DC", Slot = "9")]
	public void ContextUpdate()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xBD6ADC", Offset = "0xBD6ADC", VA = "0xBD6ADC", Slot = "10")]
	public List<ContextManager.Property> GetProps()
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xBD6B64", Offset = "0xBD6B64", VA = "0xBD6B64", Slot = "11")]
	public UniversalCameraSettings GetCamSettings()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xBD6BE4", Offset = "0xBD6BE4", VA = "0xBD6BE4")]
	private void SavePrefab()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xBD6BE8", Offset = "0xBD6BE8", VA = "0xBD6BE8")]
	public void RebuildTrack()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xBD6CAC", Offset = "0xBD6CAC", VA = "0xBD6CAC")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xBD703C", Offset = "0xBD703C", VA = "0xBD703C")]
	private Transform GetSplineNode(Vector3 pos, float scaledGrabRange)
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xBD65F0", Offset = "0xBD65F0", VA = "0xBD65F0")]
	public void StartEditing()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xBD71D8", Offset = "0xBD71D8", VA = "0xBD71D8")]
	public bool CanOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xBD7254", Offset = "0xBD7254", VA = "0xBD7254")]
	public LiveTrackEditor()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xBD72C4", Offset = "0xBD72C4", VA = "0xBD72C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0024", Offset = "0x9C0024")]
	private void <ContextUpdate>b__23_0()
	{
	}
}
[Token(Token = "0x2000032")]
public class LODGroupTweaker : MonoBehaviour
{
	[Token(Token = "0x600013F")]
	[Address(RVA = "0xBD5F48", Offset = "0xBD5F48", VA = "0xBD5F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xBD5F4C", Offset = "0xBD5F4C", VA = "0xBD5F4C")]
	public LODGroupTweaker()
	{
	}
}
[Token(Token = "0x2000033")]
public class OVRInputModuleConnector : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInputModule ovrInputModule;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UniversalInputManager.Controller unfilteredController;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastControllerChangeTime;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float controllerSwapCooldownTime;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE07534", Offset = "0xE07534", VA = "0xE07534")]
	private void Start()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE075E0", Offset = "0xE075E0", VA = "0xE075E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE07764", Offset = "0xE07764", VA = "0xE07764")]
	public OVRInputModuleConnector()
	{
	}
}
[Token(Token = "0x2000034")]
public class PauseMenu : SingletonMono<PauseMenu>, IContext
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject musicCreditObject;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform camMountPoint;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UniversalCameraSettings camSettings;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonPrefab;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform parent;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float offset;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI currentMusicTrackText;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xE07960", Offset = "0xE07960", VA = "0xE07960")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE07964", Offset = "0xE07964", VA = "0xE07964", Slot = "6")]
	public void OnPushed()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE07968", Offset = "0xE07968", VA = "0xE07968", Slot = "7")]
	public void OnPopped()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE0796C", Offset = "0xE0796C", VA = "0xE0796C", Slot = "5")]
	public void OnGainFocus()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE07AF8", Offset = "0xE07AF8", VA = "0xE07AF8", Slot = "8")]
	public void OnLoseFocus()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE07AFC", Offset = "0xE07AFC", VA = "0xE07AFC", Slot = "9")]
	public void ContextUpdate()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xE07CA8", Offset = "0xE07CA8", VA = "0xE07CA8", Slot = "10")]
	public List<ContextManager.Property> GetProps()
	{
		return null;
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xE07D30", Offset = "0xE07D30", VA = "0xE07D30", Slot = "11")]
	public UniversalCameraSettings GetCamSettings()
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xE07DB0", Offset = "0xE07DB0", VA = "0xE07DB0")]
	public void SetButtons(params object[] args)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xE07FE8", Offset = "0xE07FE8", VA = "0xE07FE8")]
	private void AddButton(Vector3 pos, string text, Action f)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xE08180", Offset = "0xE08180", VA = "0xE08180")]
	public bool SummonCheck(IContext context)
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xE082C8", Offset = "0xE082C8", VA = "0xE082C8")]
	public void HideMusicCredit()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xE082E8", Offset = "0xE082E8", VA = "0xE082E8")]
	public void Summon()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xE083A4", Offset = "0xE083A4", VA = "0xE083A4")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x2000035")]
public class PulseGate : MonoBehaviour
{
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDCAC", Offset = "0x9BDCAC")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PulseGate <>4__this;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <gate>5__2;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <cycles>5__3;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0xE08F08", Offset = "0xE08F08", VA = "0xE08F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0xE08F74", Offset = "0xE08F74", VA = "0xE08F74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xE08D18", Offset = "0xE08D18", VA = "0xE08D18")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xE08D4C", Offset = "0xE08D4C", VA = "0xE08D4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xE08D50", Offset = "0xE08D50", VA = "0xE08D50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xE08F10", Offset = "0xE08F10", VA = "0xE08F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float period;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float openFraction;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xE08CA4", Offset = "0xE08CA4", VA = "0xE08CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0034", Offset = "0x9C0034")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xE08D44", Offset = "0xE08D44", VA = "0xE08D44")]
	public PulseGate()
	{
	}
}
[Token(Token = "0x2000036")]
public class TMPPulse : MonoBehaviour
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro text;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool pulseActive;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pulseStartTime;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pulseDuration;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CurveAttribute", RVA = "0x9BE670", Offset = "0x9BE670")]
	public AnimationCurve outlineWidth;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CurveAttribute", RVA = "0x9BE698", Offset = "0x9BE698")]
	public AnimationCurve textSize;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xE0A700", Offset = "0xE0A700", VA = "0xE0A700")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xE0A758", Offset = "0xE0A758", VA = "0xE0A758")]
	private void Update()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xE0A7F8", Offset = "0xE0A7F8", VA = "0xE0A7F8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0098", Offset = "0x9C0098")]
	public void StartPulse()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xE0A828", Offset = "0xE0A828", VA = "0xE0A828")]
	public TMPPulse()
	{
	}
}
[Token(Token = "0x2000037")]
public class TrackLightTextureController : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineTrack track;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject trackObject;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture rt;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int pixelsPerCell;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cam;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int texWidth;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int texHeight;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material trail2DMat;

	[Token(Token = "0x17000012")]
	public static int TrackLightingLayer
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0xE0C3C4", Offset = "0xE0C3C4", VA = "0xE0C3C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000013")]
	public static int ToChunk_TrackLightingLayer
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0xE0C410", Offset = "0xE0C410", VA = "0xE0C410")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000014")]
	public float WrapOffset
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0xE0C45C", Offset = "0xE0C45C", VA = "0xE0C45C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xE0BF94", Offset = "0xE0BF94", VA = "0xE0BF94")]
	private void Start()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xE0C564", Offset = "0xE0C564", VA = "0xE0C564")]
	private void Update()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xE0C7FC", Offset = "0xE0C7FC", VA = "0xE0C7FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xE0CC04", Offset = "0xE0CC04", VA = "0xE0CC04")]
	public TrackLightTextureController()
	{
	}
}
[Token(Token = "0x2000038")]
public class TrackMotionBlurController : MonoBehaviour
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackMotionBlurTool motionBlur;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve depthCurve;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool trackReflectionSupport;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TrackMotionBlurTool.BlurredTextureDetails[] blurDetails;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE0CC0C", Offset = "0xE0CC0C", VA = "0xE0CC0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xE0D4C0", Offset = "0xE0D4C0", VA = "0xE0D4C0")]
	public TrackMotionBlurController()
	{
	}
}
namespace LunarCatsStudio.SuperCombiner
{
	[Token(Token = "0x2000039")]
	public class MeshCombiner
	{
		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int maxVerticesCount;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string sessionName;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, BlendShapeFrame> blendShapes;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int vertexOffset;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CombinedResult combinedResult;

		[Token(Token = "0x17000015")]
		public CombinedResult CombinedResult
		{
			[Token(Token = "0x6000161")]
			[Address(RVA = "0xBD99B0", Offset = "0xBD99B0", VA = "0xBD99B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0xBD99B8", Offset = "0xBD99B8", VA = "0xBD99B8")]
		public void SetParameters(int maxVertices_p, string sessionName_p)
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0xBD99C4", Offset = "0xBD99C4", VA = "0xBD99C4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0xBD9A24", Offset = "0xBD9A24", VA = "0xBD9A24")]
		public List<GameObject> CombineToMeshes(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xBDB260", Offset = "0xBDB260", VA = "0xBDB260")]
		public List<GameObject> CombineToSkinnedMeshes(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xBDD198", Offset = "0xBDD198", VA = "0xBDD198")]
		private void AssignParametersToSkinnedMesh(SkinnedMeshRenderer skin, List<Transform> bones, List<BoneWeight> boneWeights, List<Matrix4x4> bindposes)
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xBDC7DC", Offset = "0xBDC7DC", VA = "0xBDC7DC")]
		private void CopyAnimator(Animator anim, GameObject target)
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0xBDC6F8", Offset = "0xBDC6F8", VA = "0xBDC6F8")]
		private Transform FindTransformForAnimator(Transform[] children, Transform[] rootBones, Animator anim)
		{
			return null;
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xBDC540", Offset = "0xBDC540", VA = "0xBDC540")]
		private void GetOrignialToNewBonesCorrespondancy(Transform rootBone, Transform newRootBone, Dictionary<int, Transform> originToNewBoneMap)
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0xBDBFDC", Offset = "0xBDBFDC", VA = "0xBDBFDC")]
		private Transform[] FindRootBone(Dictionary<int, Transform> bones)
		{
			return null;
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xBDC320", Offset = "0xBDC320", VA = "0xBDC320")]
		private GameObject InstantiateCopy(GameObject original)
		{
			return null;
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xBDAD6C", Offset = "0xBDAD6C", VA = "0xBDAD6C")]
		private CombineInstanceID CreateCombinedInstances(Mesh mesh, Material[] sharedMaterials, int instanceID, string name, Matrix4x4 matrix, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xBDC9B0", Offset = "0xBDC9B0", VA = "0xBDC9B0")]
		private GameObject CreateCombinedSkinnedMeshGameObject(CombineInstanceID instances, Transform parent, int number, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0xBDA72C", Offset = "0xBDA72C", VA = "0xBDA72C")]
		public GameObject CreateCombinedMeshGameObject(CombineInstanceID instances, Transform parent, int number, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xBDD3AC", Offset = "0xBDD3AC", VA = "0xBDD3AC")]
		public bool GenerateUV(Mesh targetMesh, int[] textureIndex, float[] scaleFactors, string objectName, int combinedIndex, bool lightmapsOnUV2 = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0xBDA200", Offset = "0xBDA200", VA = "0xBDA200")]
		public Mesh copyMesh(Mesh mesh, string id = "")
		{
			return null;
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xBDE23C", Offset = "0xBDE23C", VA = "0xBDE23C")]
		private void CopyNewMeshesByCombine(Mesh original, Mesh destination)
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xBDE3D4", Offset = "0xBDE3D4", VA = "0xBDE3D4")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public class SuperCombiner : MonoBehaviour
	{
		[Token(Token = "0x2000124")]
		public enum CombineStatesList
		{
			[Token(Token = "0x4000A10")]
			Uncombined,
			[Token(Token = "0x4000A11")]
			Combining,
			[Token(Token = "0x4000A12")]
			CombinedMaterials,
			[Token(Token = "0x4000A13")]
			Combined
		}

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> TextureAtlasSizes;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> TextureAtlasSizesNames;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CombineStatesList combiningState;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<TexturePacker> texturePackers;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _showInstructions;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool _showCombineSettings;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool _showMeshSettings;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool _showTextureSettings;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool _showAdditionalParameters;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool _showMeshResults;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool _showOriginalMaterials;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool _showCombinedAtlas;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool _showCombinedMaterials;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool _showCombinedMesh;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool _showSaveOptions;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool _showMultiMaterials;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string sessionName;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool combineAtRuntime;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int textureAtlasSize;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> customTextureProperies;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float tilingFactor;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int atlasPadding;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool combineMeshes;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int meshOutput;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int maxVerticesCount;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool combineMaterials;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject targetGameObject;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool lightmapsOnUV2;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool multipleMaterialsMode;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Material> multiMaterials0;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Material> multiMaterials1;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Material> multiMaterials2;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Material> multiMaterials3;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Material> multiMaterials4;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Material> multiMaterials5;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Material> multiMaterials6;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<Material> multiMaterials7;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<Material> multiMaterials8;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<Material> multiMaterials9;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<Material> multiMaterials10;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<Material> multiMaterialsAllOthers;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<List<Material>> multiMaterialsList;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int _multiMaterialsCount;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<List<MaterialToCombine>> materialsToCombine;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool savePrefabs;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool saveMeshObj;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool saveMeshFbx;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		public bool saveMaterials;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool saveTextures;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string folderDestination;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<MeshRenderer> meshList;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<SkinnedMeshRenderer> skinnedMeshList;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Dictionary<int, string> uniqueCombinedMeshId;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Dictionary<int, string> copyMeshId;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<GameObject> toSavePrefabList;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<MeshRenderer> toSaveObjectList;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<Mesh> toSaveMeshList;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<SkinnedMeshRenderer> toSaveSkinnedObjectList;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject targetParentForCombinedGameObjects;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private DateTime timeStart;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public CombinedResult combinedResult;

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xBDFE10", Offset = "0xBDFE10", VA = "0xBDFE10")]
		private SuperCombiner()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xBE038C", Offset = "0xBE038C", VA = "0xBE038C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xBE0420", Offset = "0xBE0420", VA = "0xBE0420")]
		public void FindMeshesToCombine()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xBE039C", Offset = "0xBE039C", VA = "0xBE039C")]
		public void CombineChildren()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xBE0978", Offset = "0xBE0978", VA = "0xBE0978")]
		public bool CombineMaterials(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine)
		{
			return default(bool);
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xBE40F4", Offset = "0xBE40F4", VA = "0xBE40F4")]
		public void SetTargetParentForCombinedGameObject()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xBE423C", Offset = "0xBE423C", VA = "0xBE423C")]
		public void CombineMeshes(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine, Transform parent)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0xBE54A8", Offset = "0xBE54A8", VA = "0xBE54A8")]
		private List<MeshRendererAndOriginalMaterials> GetMeshRenderersByCombineIndex(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0xBE07B4", Offset = "0xBE07B4", VA = "0xBE07B4")]
		public void Combine(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine)
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0xBE1308", Offset = "0xBE1308", VA = "0xBE1308")]
		private void InitializeMultipleMaterialElements()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xBE6538", Offset = "0xBE6538", VA = "0xBE6538")]
		private void CopyGameObjectsHierarchy(Transform parent)
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0xBE713C", Offset = "0xBE713C", VA = "0xBE713C")]
		private void GenerateUVs(Mesh mesh, Material[] originalMaterials, string objectName, int combinedIndex)
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xBE79E8", Offset = "0xBE79E8", VA = "0xBE79E8")]
		private void EnableRenderers(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0xBE72A8", Offset = "0xBE72A8", VA = "0xBE72A8")]
		private void DisableRenderers(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xBE66C4", Offset = "0xBE66C4", VA = "0xBE66C4")]
		private List<GameObject> GenerateTransformedGameObjects(Transform parent, List<MeshRenderer> originalMeshRenderer, bool lightmapsOnUV2 = true)
		{
			return null;
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xBE6C08", Offset = "0xBE6C08", VA = "0xBE6C08")]
		private List<GameObject> GenerateTransformedGameObjects(Transform parent, List<SkinnedMeshRenderer> originalSkinnedMeshRenderer)
		{
			return null;
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xBE75D8", Offset = "0xBE75D8", VA = "0xBE75D8")]
		private GameObject InstantiateCopy(GameObject original, bool deleteChidren = true)
		{
			return null;
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xBE7C60", Offset = "0xBE7C60", VA = "0xBE7C60")]
		private List<MeshCollider> FindEnabledMeshColliders(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0xBE0468", Offset = "0xBE0468", VA = "0xBE0468")]
		private List<MeshRenderer> FindEnabledMeshes(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0xBE0634", Offset = "0xBE0634", VA = "0xBE0634")]
		private List<SkinnedMeshRenderer> FindEnabledSkinnedMeshes(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0xBE14C4", Offset = "0xBE14C4", VA = "0xBE14C4")]
		private List<MaterialToCombine> FindEnabledMaterials(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
			return null;
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xBE7DB4", Offset = "0xBE7DB4", VA = "0xBE7DB4")]
		private Rect getUVBounds(Vector2[] uvs)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xBE7F78", Offset = "0xBE7F78", VA = "0xBE7F78")]
		private Rect getMaxRect(Rect uv1, Rect uv2)
		{
			return default(Rect);
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xBE4FDC", Offset = "0xBE4FDC", VA = "0xBE4FDC")]
		public void UnCombine()
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xBE80E4", Offset = "0xBE80E4", VA = "0xBE80E4")]
		private List<Transform> GetFirstLevelChildren(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xBE81D4", Offset = "0xBE81D4", VA = "0xBE81D4")]
		public void Save()
		{
		}
	}
	[Token(Token = "0x200003B")]
	public class TexturePacker
	{
		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material copyedMaterials;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material copyedToSaveMaterials;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, List<Texture2D>> texturesForAtlas;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Texture2D> packedTextures;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int combinedIndex;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> TexturePropertyNames;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _hasEmission;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color _emissionColor;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<string> customProperties;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<int, TextureImportSettings> importedTextures;

		[Token(Token = "0x40001F7")]
		private const int NO_TEXTURE_COLOR_SIZE = 256;

		[Token(Token = "0x40001F8")]
		private const int MAX_TEXTURE_SIZE = 16384;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CombinedResult combinedResult;

		[Token(Token = "0x17000016")]
		public int CombinedIndex
		{
			[Token(Token = "0x600018D")]
			[Address(RVA = "0xBE81D8", Offset = "0xBE81D8", VA = "0xBE81D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600018E")]
			[Address(RVA = "0xBE81E0", Offset = "0xBE81E0", VA = "0xBE81E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000017")]
		public CombinedResult CombinedResult
		{
			[Token(Token = "0x600018F")]
			[Address(RVA = "0xBE81E8", Offset = "0xBE81E8", VA = "0xBE81E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0xBE1BF4", Offset = "0xBE1BF4", VA = "0xBE1BF4")]
		public TexturePacker()
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xBE1FDC", Offset = "0xBE1FDC", VA = "0xBE1FDC")]
		public void SetCustomPropertyNames(List<string> list)
		{
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0xBE81F0", Offset = "0xBE81F0", VA = "0xBE81F0")]
		public Material GetCombinedMaterialToSave()
		{
			return null;
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0xBE81F8", Offset = "0xBE81F8", VA = "0xBE81F8")]
		public void GenerateCopyedMaterialToSave()
		{
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xBE8268", Offset = "0xBE8268", VA = "0xBE8268")]
		public void SetCopyedMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xBE8270", Offset = "0xBE8270", VA = "0xBE8270")]
		public void ClearTextures()
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xBE8508", Offset = "0xBE8508", VA = "0xBE8508")]
		private Vector3 GetTextureSizeInAtlas(Vector2 inputTextureSize, float scaleX, float scaleY, string materialName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xBE883C", Offset = "0xBE883C", VA = "0xBE883C")]
		private Texture2D CopyTexture(Texture2D texture, Rect materialUVBounds, Rect meshUVBounds, Material mat, Vector3 textureInAtlasSize, Vector2 targetTextureSize, bool isMainTexture)
		{
			return null;
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xBE997C", Offset = "0xBE997C", VA = "0xBE997C")]
		private Vector2 checkTexturesSize(Material mat, bool alignToSmallest)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xBE21DC", Offset = "0xBE21DC", VA = "0xBE21DC")]
		public void SetTextures(Material mat, bool combineMaterials, Rect materialUVBounds, Rect meshUVBounds, float tilingFactor)
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xBE97F4", Offset = "0xBE97F4", VA = "0xBE97F4")]
		private string GetStringTextureSize(float width, float height)
		{
			return null;
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0xBE96E0", Offset = "0xBE96E0", VA = "0xBE96E0")]
		private Texture2D CreateColoredTexture2D(int width, int height, Color color)
		{
			return null;
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xBE9624", Offset = "0xBE9624", VA = "0xBE9624")]
		private TextureImportSettings CheckTextureImportSettings(Texture2D texture)
		{
			return default(TextureImportSettings);
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xBE9F20", Offset = "0xBE9F20", VA = "0xBE9F20")]
		private void CheckTexturesConformity()
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xBE3AB8", Offset = "0xBE3AB8", VA = "0xBE3AB8")]
		public void PackTextures(int textureAtlasSize, int atlasPadding, bool combineMaterials, string name)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xBEA65C", Offset = "0xBEA65C", VA = "0xBEA65C")]
		public void SaveTextures(string folder, string name)
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xBEA660", Offset = "0xBEA660", VA = "0xBEA660")]
		public string GetTextureFilePathName(string folder, string sessionName, string textureName, int displayedIndex)
		{
			return null;
		}
	}
	[Token(Token = "0x200003C")]
	public class BlendShapeFrame
	{
		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string shapeName;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float frameWeight;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] deltaVertices;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] deltaNormals;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] deltaTangents;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int vertexOffset;

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xBD7610", Offset = "0xBD7610", VA = "0xBD7610")]
		public BlendShapeFrame(string shapeName_p, float frameWeight_p, Vector3[] deltaVertices_p, Vector3[] deltaNormals_p, Vector3[] deltaTangents_p, int offset)
		{
		}
	}
	[Token(Token = "0x200003D")]
	public class CombinedMeshModification : MonoBehaviour
	{
		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE6C0", Offset = "0x9BE6C0")]
		public CombinedResult combinedResult;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE6F8", Offset = "0x9BE6F8")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CombinedResult currentCombinedResult;

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xBD7B40", Offset = "0xBD7B40", VA = "0xBD7B40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xBD7BBC", Offset = "0xBD7BBC", VA = "0xBD7BBC")]
		public void RemoveFromCombined(GameObject gameObject)
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xBD7BF8", Offset = "0xBD7BF8", VA = "0xBD7BF8")]
		public void RemoveFromCombined(int instanceID)
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xBD878C", Offset = "0xBD878C", VA = "0xBD878C")]
		public CombinedMeshModification()
		{
		}
	}
	[Token(Token = "0x200003E")]
	public class CombinedResult : ScriptableObject
	{
		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showCombinedMaterials;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool showCombinedMeshes;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CombinedMaterial> combinedMaterials;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Dictionary<int, MaterialToCombine>> originalMaterialList;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<int, int> originalReferenceMaterial;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<List<GameObject>> combinedGameObjectFromMeshList;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<List<GameObject>> combinedGameObjectFromSkinnedMeshList;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshCombined> meshResults;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int materialCombinedCount;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int combinedMaterialCount;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int meshesCombinedCount;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int skinnedMeshesCombinedCount;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int totalVertexCount;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int subMeshCount;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimeSpan duration;

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xBD8794", Offset = "0xBD8794", VA = "0xBD8794")]
		public void Clear()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xBD88CC", Offset = "0xBD88CC", VA = "0xBD88CC")]
		public void SetCombinedMaterial(Material mat, int combinedIndex, bool isOriginal)
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xBD8A7C", Offset = "0xBD8A7C", VA = "0xBD8A7C")]
		public void AddNewCombinedMaterial()
		{
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xBD8AF8", Offset = "0xBD8AF8", VA = "0xBD8AF8")]
		public void AddMaterialToCombine(MaterialToCombine mat, int combinedIndex)
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xBD8C48", Offset = "0xBD8C48", VA = "0xBD8C48")]
		public void AddCombinedMesh(Mesh combinedMesh, CombineInstanceID combineInstanceID, int combinedIndex)
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xBD9014", Offset = "0xBD9014", VA = "0xBD9014")]
		public int FindCorrespondingMaterialIndex(Material matToFind, int combinedIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xBD9278", Offset = "0xBD9278", VA = "0xBD9278")]
		public Material GetCombinedMaterial(Material sourceMaterial)
		{
			return null;
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xBD93E4", Offset = "0xBD93E4", VA = "0xBD93E4")]
		public int GetCombinedIndex(Material sourceMaterial)
		{
			return default(int);
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xBD951C", Offset = "0xBD951C", VA = "0xBD951C")]
		public int GetCombinedIndexCount()
		{
			return default(int);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xBD9570", Offset = "0xBD9570", VA = "0xBD9570")]
		public CombinedResult()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200003F")]
	public class CombinedMaterial
	{
		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect[] uvs;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rect[] uvs2;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> scaleFactors;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Rect> meshUVBounds;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOriginalMaterial;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int displayedIndex;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showCombinedMaterial;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool showUVs;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool showMeshUVBounds;

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xBD7AA8", Offset = "0xBD7AA8", VA = "0xBD7AA8")]
		public CombinedMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000040")]
	public class CombineInstanceIndexes
	{
		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstVertexIndex;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int vertexCount;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int firstTriangleIndex;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int triangleCount;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showCombinedInstanceIndex;

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xBD7A20", Offset = "0xBD7A20", VA = "0xBD7A20")]
		public CombineInstanceIndexes(Mesh mesh, int vertexIndex, int trianglesIndex)
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xBD7A8C", Offset = "0xBD7A8C", VA = "0xBD7A8C")]
		public void MoveIndexes(int vertexOffset_p, int triangleOffset_p)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000041")]
	public class MeshCombined
	{
		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> names;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> instanceIds;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CombineInstanceIndexes> indexes;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showMeshCombined;

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xBD7F24", Offset = "0xBD7F24", VA = "0xBD7F24")]
		public Mesh RemoveMesh(int instanceID, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xBD8F54", Offset = "0xBD8F54", VA = "0xBD8F54")]
		public MeshCombined()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public class CombineInstanceID
	{
		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CombineInstance> combineInstances;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> instancesID;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> names;

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xBD7678", Offset = "0xBD7678", VA = "0xBD7678")]
		public void AddCombineInstance(int subMeshIndex, Mesh mesh, Matrix4x4 matrix, int instanceID, string name)
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xBD77DC", Offset = "0xBD77DC", VA = "0xBD77DC")]
		public void AddRange(CombineInstanceID instances)
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xBD7884", Offset = "0xBD7884", VA = "0xBD7884")]
		public void Clear()
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xBD790C", Offset = "0xBD790C", VA = "0xBD790C")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xBD7960", Offset = "0xBD7960", VA = "0xBD7960")]
		public CombineInstanceID()
		{
		}
	}
	[Token(Token = "0x2000043")]
	public class DefaultColoredTexture
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xBD96A0", Offset = "0xBD96A0", VA = "0xBD96A0")]
		public static Color GetDefaultTextureColor(string textureProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xBD9830", Offset = "0xBD9830", VA = "0xBD9830")]
		public DefaultColoredTexture()
		{
		}
	}
	[Token(Token = "0x2000044")]
	public class MaterialToCombine
	{
		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect uvBounds;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int combinedIndex;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int index;

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xBD9838", Offset = "0xBD9838", VA = "0xBD9838")]
		public Rect GetScaledAndOffsetedUVBounds()
		{
			return default(Rect);
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xBD99A8", Offset = "0xBD99A8", VA = "0xBD99A8")]
		public MaterialToCombine()
		{
		}
	}
	[Token(Token = "0x2000045")]
	public enum MeshOutput
	{
		[Token(Token = "0x400022D")]
		Mesh,
		[Token(Token = "0x400022E")]
		SkinnedMesh
	}
	[Token(Token = "0x2000046")]
	internal class MeshRendererAndOriginalMaterials
	{
		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MeshRenderer> meshRenderers;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinnedMeshRenderer> skinnedMeshRenderers;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Material[]> originalMaterials;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Material[]> originalskinnedMeshMaterials;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> splittedGameObject;

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xBDE45C", Offset = "0xBDE45C", VA = "0xBDE45C")]
		public MeshRendererAndOriginalMaterials()
		{
		}
	}
	[Token(Token = "0x2000047")]
	public class ObjSaver
	{
		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int StartIndex;

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xBDE564", Offset = "0xBDE564", VA = "0xBDE564")]
		public static void SaveObjFile(GameObject obj, bool makeSubmeshes, string floderPath)
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xBDECA8", Offset = "0xBDECA8", VA = "0xBDECA8")]
		private static void WriteToFile(string s, string filename)
		{
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xBDE984", Offset = "0xBDE984", VA = "0xBDE984")]
		private static string processTransform(Transform t, bool makeSubmeshes)
		{
			return null;
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xBDEDE8", Offset = "0xBDEDE8", VA = "0xBDEDE8")]
		public static string MeshToString(Mesh m, Material[] mats, Transform t)
		{
			return null;
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xBDF4E4", Offset = "0xBDF4E4", VA = "0xBDF4E4")]
		public ObjSaver()
		{
		}
	}
	[Token(Token = "0x2000048")]
	public class Saver
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xBDF4F0", Offset = "0xBDF4F0", VA = "0xBDF4F0")]
		public Saver()
		{
		}
	}
	[Token(Token = "0x2000049")]
	public class SubmeshSplitter
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xBDF4F8", Offset = "0xBDF4F8", VA = "0xBDF4F8")]
		public static MeshRenderer SplitSubmeshes(MeshFilter meshFilter, int[] submehesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xBDFBA8", Offset = "0xBDFBA8", VA = "0xBDFBA8")]
		public static SkinnedMeshRenderer SplitSubmeshes(SkinnedMeshRenderer skinnedMesh, int[] submehesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xBDF76C", Offset = "0xBDF76C", VA = "0xBDF76C")]
		private static Mesh CreateMeshFromSubmesh(Mesh mesh, int[] submehesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xBDF9E0", Offset = "0xBDF9E0", VA = "0xBDF9E0")]
		private static GameObject GenerateGameObject(Transform parent, bool skinnedMesh, string name_p, Mesh newMesh_p, Material[] mat)
		{
			return null;
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xBDFE08", Offset = "0xBDFE08", VA = "0xBDFE08")]
		public SubmeshSplitter()
		{
		}
	}
	[Token(Token = "0x200004A")]
	public struct TextureImportSettings
	{
		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isReadable;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool isNormal;
	}
	[Token(Token = "0x200004B")]
	public class TextureScale
	{
		[Token(Token = "0x2000125")]
		public class ThreadData
		{
			[Token(Token = "0x4000A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int start;

			[Token(Token = "0x4000A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int end;

			[Token(Token = "0x60008DF")]
			[Address(RVA = "0xDFD650", Offset = "0xDFD650", VA = "0xDFD650")]
			public ThreadData(int s, int e)
			{
			}
		}

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] texColors;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Color[] newColors;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int w;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float ratioX;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float ratioY;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int w2;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int finishCount;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Mutex mutex;

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xDFD23C", Offset = "0xDFD23C", VA = "0xDFD23C")]
		public static void Point(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xDFD648", Offset = "0xDFD648", VA = "0xDFD648")]
		public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xDFD244", Offset = "0xDFD244", VA = "0xDFD244")]
		private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xDFD688", Offset = "0xDFD688", VA = "0xDFD688")]
		public static void BilinearScale(object obj)
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xDFD9A0", Offset = "0xDFD9A0", VA = "0xDFD9A0")]
		public static void PointScale(object obj)
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xDFDB40", Offset = "0xDFDB40", VA = "0xDFDB40")]
		private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xDFDBA4", Offset = "0xDFDBA4", VA = "0xDFDBA4")]
		public TextureScale()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x200004C")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppId;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xE0841C", Offset = "0xE0841C", VA = "0xE0841C")]
		public void Start()
		{
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xE0853C", Offset = "0xE0853C", VA = "0xE0853C")]
		public void Update()
		{
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xE08684", Offset = "0xE08684", VA = "0xE08684", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xE08688", Offset = "0xE08688", VA = "0xE08688", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xE08710", Offset = "0xE08710", VA = "0xE08710", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xE087CC", Offset = "0xE087CC", VA = "0xE087CC", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xE087D0", Offset = "0xE087D0", VA = "0xE087D0", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xE087D4", Offset = "0xE087D4", VA = "0xE087D4", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xE088A4", Offset = "0xE088A4", VA = "0xE088A4", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xE088A8", Offset = "0xE088A8", VA = "0xE088A8", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xE088AC", Offset = "0xE088AC", VA = "0xE088AC", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xE088B0", Offset = "0xE088B0", VA = "0xE088B0", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xE088B4", Offset = "0xE088B4", VA = "0xE088B4", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xE088B8", Offset = "0xE088B8", VA = "0xE088B8", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xE088BC", Offset = "0xE088BC", VA = "0xE088BC", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xE088C0", Offset = "0xE088C0", VA = "0xE088C0", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xE0892C", Offset = "0xE0892C", VA = "0xE0892C", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xE08930", Offset = "0xE08930", VA = "0xE08930", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xE089DC", Offset = "0xE089DC", VA = "0xE089DC", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xE089E0", Offset = "0xE089E0", VA = "0xE089E0")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xE08AE8", Offset = "0xE08AE8", VA = "0xE08AE8")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Mystery.Graphing
{
	[Token(Token = "0x200004D")]
	public class ComponentMonitor : ComponentMonitorBase
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xE07100", Offset = "0xE07100", VA = "0xE07100")]
		public ComponentMonitor()
		{
		}
	}
	[Token(Token = "0x200004E")]
	public class DebugGraphRenderer : IGraphConsoleRenderer
	{
		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string GraphName;

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xE07108", Offset = "0xE07108", VA = "0xE07108", Slot = "4")]
		protected override IGraphConsole LoadGraph()
		{
			return null;
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xE0748C", Offset = "0xE0748C", VA = "0xE0748C")]
		public DebugGraphRenderer()
		{
		}
	}
	[Token(Token = "0x200004F")]
	public class GraphRenderer : IGraphConsoleRenderer
	{
		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GraphConsole GraphConsole;

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xE07524", Offset = "0xE07524", VA = "0xE07524", Slot = "4")]
		protected override IGraphConsole LoadGraph()
		{
			return null;
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xE0752C", Offset = "0xE0752C", VA = "0xE0752C")]
		public GraphRenderer()
		{
		}
	}
}
namespace FlyingWormConsole3
{
	[Token(Token = "0x2000050")]
	public class ConsoleProRemoteServer : MonoBehaviour
	{
		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useNATPunch;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int port;

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xBD4EBC", Offset = "0xBD4EBC", VA = "0xBD4EBC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xBD4F28", Offset = "0xBD4F28", VA = "0xBD4F28")]
		public ConsoleProRemoteServer()
		{
		}
	}
}
namespace DefaultNamespace
{
	[Token(Token = "0x2000051")]
	public class RemoteRacer : RacerBase
	{
		[Serializable]
		[Token(Token = "0x2000126")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDCBC", Offset = "0x9BDCBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<bool> <>9__33_0;

			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<bool> <>9__40_0;

			[Token(Token = "0x60008E1")]
			[Address(RVA = "0xBD2DFC", Offset = "0xBD2DFC", VA = "0xBD2DFC")]
			public <>c()
			{
			}

			[Token(Token = "0x60008E2")]
			[Address(RVA = "0xBD2E04", Offset = "0xBD2E04", VA = "0xBD2E04")]
			internal void <OnSimEvent>b__33_0(bool dead)
			{
			}

			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xBD2E08", Offset = "0xBD2E08", VA = "0xBD2E08")]
			internal void <StartTrailInfection>b__40_0(bool dead)
			{
			}
		}

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter bikeBody;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer bikeRenderer;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform riderRoot;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RiderModelManager riderModelManager;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaceController raceController;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int trailIndex;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MPPlayerView playerView;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string playerNickname;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool trackPointValid;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public BSplineTrackEditor.TrackPoint trackPoint;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Trans worldPos;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject drone;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector2 smoothedPos;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float projectAmount;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject iceVirusObject;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float defrostTime;

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xBD0740", Offset = "0xBD0740", VA = "0xBD0740")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xBD07A0", Offset = "0xBD07A0", VA = "0xBD07A0")]
		public static RemoteRacer CreateRemoteBike(string s, TournamentRacer racer, MPPlayerView playerView)
		{
			return null;
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xBD0A4C", Offset = "0xBD0A4C", VA = "0xBD0A4C")]
		private Vector2 GetProjectedPosition(out float predictTimeLength)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xBD0E1C", Offset = "0xBD0E1C", VA = "0xBD0E1C")]
		public void Update()
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xBD18DC", Offset = "0xBD18DC", VA = "0xBD18DC", Slot = "5")]
		public override Vector2 GetPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xBD18E4", Offset = "0xBD18E4", VA = "0xBD18E4", Slot = "6")]
		public override float GetBank()
		{
			return default(float);
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xBD1974", Offset = "0xBD1974", VA = "0xBD1974", Slot = "9")]
		public override bool IsLocalPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xBD197C", Offset = "0xBD197C", VA = "0xBD197C", Slot = "10")]
		public override void SetSpeedFactor(float factor)
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xBD1980", Offset = "0xBD1980", VA = "0xBD1980", Slot = "11")]
		public override float GetSpeedFactor()
		{
			return default(float);
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xBD1988", Offset = "0xBD1988", VA = "0xBD1988", Slot = "12")]
		public override float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xBD1A28", Offset = "0xBD1A28", VA = "0xBD1A28", Slot = "13")]
		public override Vector2 GetVelocity()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xBD1AE4", Offset = "0xBD1AE4", VA = "0xBD1AE4", Slot = "14")]
		public override void RaceInit(RaceController rc)
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xBD1AEC", Offset = "0xBD1AEC", VA = "0xBD1AEC", Slot = "15")]
		public override void GotoStart()
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xBD1AF0", Offset = "0xBD1AF0", VA = "0xBD1AF0", Slot = "17")]
		public override Vector3 GetTrailWiggleDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xBD1B70", Offset = "0xBD1B70", VA = "0xBD1B70", Slot = "16")]
		public override void SetTrailIndex(int trail)
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xBD1B78", Offset = "0xBD1B78", VA = "0xBD1B78", Slot = "7")]
		public override void GetPositionsForTrail(Transform emitter, out Vector3 pos3D, out Vector2 pos2D)
		{
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xBD1BC8", Offset = "0xBD1BC8", VA = "0xBD1BC8", Slot = "8")]
		public override bool GetImmune()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xBD1C60", Offset = "0xBD1C60", VA = "0xBD1C60")]
		public void OnSimEvent(MPPlayerView.BikeSimEvent e, int sourceActorNum, object param1, object param2)
		{
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0xBD21D4", Offset = "0xBD21D4", VA = "0xBD21D4")]
		public static void TeleportEffects(Vector2 from, Vector2 to)
		{
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0xBD25CC", Offset = "0xBD25CC", VA = "0xBD25CC")]
		private static void TeleportFlashEffect(Vector2 to, Vector3 to3d)
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0xBD2344", Offset = "0xBD2344", VA = "0xBD2344")]
		private static void TeleportSoundEffect(Vector3 from3d, Vector3 to3d)
		{
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0xBD27AC", Offset = "0xBD27AC", VA = "0xBD27AC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0xBD28A8", Offset = "0xBD28A8", VA = "0xBD28A8")]
		public void SendSimEvent(MPPlayerView.BikeSimEvent e, [Optional] object param1, [Optional] object param2)
		{
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0xBD2A68", Offset = "0xBD2A68", VA = "0xBD2A68")]
		public void SendSimEvent_Include3rdParties(MPPlayerView.BikeSimEvent e, [Optional] object param1, [Optional] object param2)
		{
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0xBD2BD0", Offset = "0xBD2BD0", VA = "0xBD2BD0")]
		public void StartTrailInfection(TrailManager.TrailIntersection ti, float y)
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0xBD2D28", Offset = "0xBD2D28", VA = "0xBD2D28")]
		public RemoteRacer()
		{
		}
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BD2D0", Offset = "0x9BD2D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BD2D0", Offset = "0x9BD2D0")]
	[ExecuteInEditMode]
	public class VolumetricLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE790", Offset = "0x9BE790")]
		private float m_lightSaberFactor;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_material;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x17000018")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000208")]
			[Address(RVA = "0xE0DF8C", Offset = "0xE0DF8C", VA = "0xE0DF8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000209")]
			[Address(RVA = "0xE0DF94", Offset = "0xE0DF94", VA = "0xE0DF94")]
			set
			{
			}
		}

		[Token(Token = "0x17000019")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x600020A")]
			[Address(RVA = "0xE0DF9C", Offset = "0xE0DF9C", VA = "0xE0DF9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600020B")]
			[Address(RVA = "0xE0DFA4", Offset = "0xE0DFA4", VA = "0xE0DFA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700001A")]
		public Color LineColor
		{
			[Token(Token = "0x600020C")]
			[Address(RVA = "0xE0DFB0", Offset = "0xE0DFB0", VA = "0xE0DFB0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600020D")]
			[Address(RVA = "0xE0DFBC", Offset = "0xE0DFBC", VA = "0xE0DFBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700001B")]
		public float LineWidth
		{
			[Token(Token = "0x600020E")]
			[Address(RVA = "0xE0E1B8", Offset = "0xE0E1B8", VA = "0xE0E1B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600020F")]
			[Address(RVA = "0xE0E1C0", Offset = "0xE0E1C0", VA = "0xE0E1C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700001C")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0xE0E280", Offset = "0xE0E280", VA = "0xE0E280")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000211")]
			[Address(RVA = "0xE0E288", Offset = "0xE0E288", VA = "0xE0E288")]
			set
			{
			}
		}

		[Token(Token = "0x1700001D")]
		public Vector3 StartPos
		{
			[Token(Token = "0x6000212")]
			[Address(RVA = "0xE0E348", Offset = "0xE0E348", VA = "0xE0E348")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000213")]
			[Address(RVA = "0xE0E354", Offset = "0xE0E354", VA = "0xE0E354")]
			set
			{
			}
		}

		[Token(Token = "0x1700001E")]
		public Vector3 EndPos
		{
			[Token(Token = "0x6000214")]
			[Address(RVA = "0xE0E5FC", Offset = "0xE0E5FC", VA = "0xE0E5FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000215")]
			[Address(RVA = "0xE0E608", Offset = "0xE0E608", VA = "0xE0E608")]
			set
			{
			}
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xE0E098", Offset = "0xE0E098", VA = "0xE0E098")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xE0E758", Offset = "0xE0E758", VA = "0xE0E758")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xE0E628", Offset = "0xE0E628", VA = "0xE0E628")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xE0E368", Offset = "0xE0E368", VA = "0xE0E368")]
		public void SetStartAndEndPoints(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xE0E804", Offset = "0xE0E804", VA = "0xE0E804")]
		private void Start()
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0xE0EB00", Offset = "0xE0EB00", VA = "0xE0EB00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xE0EB04", Offset = "0xE0EB04", VA = "0xE0EB04")]
		private void Update()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xE0EBDC", Offset = "0xE0EBDC", VA = "0xE0EBDC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0xE0EC00", Offset = "0xE0EC00", VA = "0xE0EC00")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0xE0ECC0", Offset = "0xE0ECC0", VA = "0xE0ECC0")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x2000053")]
	public class VolumetricMultiLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE810", Offset = "0x9BE810")]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLineBehavior[] m_volumetricLines;

		[Token(Token = "0x1700001F")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0xE0ED24", Offset = "0xE0ED24", VA = "0xE0ED24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000221")]
			[Address(RVA = "0xE0ED2C", Offset = "0xE0ED2C", VA = "0xE0ED2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000020")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000222")]
			[Address(RVA = "0xE0ED34", Offset = "0xE0ED34", VA = "0xE0ED34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000223")]
			[Address(RVA = "0xE0ED3C", Offset = "0xE0ED3C", VA = "0xE0ED3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000021")]
		public Color LineColor
		{
			[Token(Token = "0x6000224")]
			[Address(RVA = "0xE0ED48", Offset = "0xE0ED48", VA = "0xE0ED48")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000225")]
			[Address(RVA = "0xE0ED54", Offset = "0xE0ED54", VA = "0xE0ED54")]
			set
			{
			}
		}

		[Token(Token = "0x17000022")]
		public float LineWidth
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0xE0EEC8", Offset = "0xE0EEC8", VA = "0xE0EEC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000227")]
			[Address(RVA = "0xE0EED0", Offset = "0xE0EED0", VA = "0xE0EED0")]
			set
			{
			}
		}

		[Token(Token = "0x17000023")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000228")]
			[Address(RVA = "0xE0F020", Offset = "0xE0F020", VA = "0xE0F020")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000229")]
			[Address(RVA = "0xE0F028", Offset = "0xE0F028", VA = "0xE0F028")]
			set
			{
			}
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0xE0F178", Offset = "0xE0F178", VA = "0xE0F178")]
		public void CreateAllVolumetricLines()
		{
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0xE0F490", Offset = "0xE0F490", VA = "0xE0F490")]
		public void DestroyAllVolumetricLines()
		{
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0xE0F628", Offset = "0xE0F628", VA = "0xE0F628")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xE0F654", Offset = "0xE0F654", VA = "0xE0F654")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xE0F690", Offset = "0xE0F690", VA = "0xE0F690")]
		private void Start()
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xE0F694", Offset = "0xE0F694", VA = "0xE0F694")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xE0F698", Offset = "0xE0F698", VA = "0xE0F698")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0xE0F69C", Offset = "0xE0F69C", VA = "0xE0F69C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xE0F7E4", Offset = "0xE0F7E4", VA = "0xE0F7E4")]
		public VolumetricMultiLineBehavior()
		{
		}
	}
}
namespace VolumetricLines.Utils
{
	[Token(Token = "0x2000054")]
	public static class TransformExtensionMethods
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0xE0DF24", Offset = "0xE0DF24", VA = "0xE0DF24")]
		public static float GetGlobalUniformScaleForLineWidth(this Transform trans)
		{
			return default(float);
		}
	}
}
namespace Coplanar
{
	[Token(Token = "0x2000055")]
	public class BikeHover : MonoBehaviour
	{
		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Trans startPos;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hover_amp;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float hover_freq;

		[Token(Token = "0x6000234")]
		[Address(RVA = "0xB91508", Offset = "0xB91508", VA = "0xB91508")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xB91544", Offset = "0xB91544", VA = "0xB91544")]
		private void Update()
		{
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0xB916A8", Offset = "0xB916A8", VA = "0xB916A8")]
		public BikeHover()
		{
		}
	}
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD37C", Offset = "0x9BD37C")]
	public class ColumnSceneBuild : ScriptableObject
	{
		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color beamColor;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D densityTexsSrc;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D densityTex;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve heightFunc;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float height;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int subMeshSize;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float heightDensityScale;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int voxelFieldHeight;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int seed;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float _Twk1;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _Twk2;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float _Twk3;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float _Twk4;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float _Twk5;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float _Twk6;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float _BeamDensityFrom;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float _BeamDensityTo;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float _Twk9;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float _Twk10;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float _Twk11;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float _Twk12;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float _Twk13;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float _Twk14;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float _Twk15;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float _Twk16;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float _Twk17;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float lookupScale;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float noiseScale;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float noiseAmount;

		[Token(Token = "0x6000237")]
		[Address(RVA = "0xB69EEC", Offset = "0xB69EEC", VA = "0xB69EEC")]
		public ColumnSceneBuild()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class StartBoardExperiment : MonoBehaviour
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xBA3C90", Offset = "0xBA3C90", VA = "0xBA3C90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0xBA3D74", Offset = "0xBA3D74", VA = "0xBA3D74")]
		public StartBoardExperiment()
		{
		}
	}
	[Token(Token = "0x2000058")]
	[SingletonNoCreate]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BD3B8", Offset = "0x9BD3B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BD3B8", Offset = "0x9BD3B8")]
	public class TrailManager : SingletonMono<TrailManager>
	{
		[Token(Token = "0x2000127")]
		public struct AddPointParams
		{
			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos3D;

			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 dir3D;

			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 pos2D;

			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2 dir2D;

			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color color;
		}

		[Token(Token = "0x2000128")]
		public struct TrailPoint
		{
			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 lineVertices2D;

			[Token(Token = "0x4000A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color color;

			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool valid;
		}

		[Token(Token = "0x2000129")]
		public class TrailState
		{
			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 emissionPoint;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 emissionPoint2D_forShader;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 emissionPoint2D_forExtend;

			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TrailPoint[] points;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int newestY10Index;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int beforeLastY10Index;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AddPointParams addPointParams;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool active;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
			public bool havePoint;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Vector3 preleadingPoints_3d;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Vector2 preleadingPoints_2d;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Color preleadingPoints_color;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public TrailPointSearchIndex[] trailsXValueEvery10Y;

			[Token(Token = "0x60008E4")]
			[Address(RVA = "0xBAC1CC", Offset = "0xBAC1CC", VA = "0xBAC1CC")]
			public int GetY10Index(int i)
			{
				return default(int);
			}

			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xBAC2AC", Offset = "0xBAC2AC", VA = "0xBAC2AC")]
			public void RemoveEndOfTail(int removeIndex)
			{
			}

			[Token(Token = "0x60008E6")]
			[Address(RVA = "0xBAC46C", Offset = "0xBAC46C", VA = "0xBAC46C")]
			public void Reset(int maxTrails, int searchArrayLength)
			{
			}

			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xBAC548", Offset = "0xBAC548", VA = "0xBAC548")]
			public TrailState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200012A")]
		public class TrailSystemInstance
		{
			[Token(Token = "0x2000216")]
			protected struct TrailMat
			{
				[Token(Token = "0x4000FD3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Material mat;

				[Token(Token = "0x4000FD4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public bool is2d;
			}

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrailGroup trailGroup;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrailGroup.Config TGConfig;

			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public int rtHeight;

			[Token(Token = "0x4000A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public RenderTexture rt;

			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF660", Offset = "0x9BF660")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public TrailState[] trailStates;

			[Token(Token = "0x4000A35")]
			private const int EMISSION_CENTER_ARRAY_SIZE = 8;

			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			protected Vector4[] emissionCenterArray;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			protected Vector4[] emissionCenterArray2D;

			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			protected float[] trailBulge;

			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			protected int trailsUpdated;

			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public int wrapPos;

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			protected Dictionary<Material, TrailMat> registeredMaterials;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float[] leadingPointOffsets;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private float[] leadingPointOffsets2D;

			[Token(Token = "0x17000096")]
			public Mesh mesh
			{
				[Token(Token = "0x60008E8")]
				[Address(RVA = "0xBAC550", Offset = "0xBAC550", VA = "0xBAC550")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C258C", Offset = "0x9C258C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60008E9")]
				[Address(RVA = "0xBAC558", Offset = "0xBAC558", VA = "0xBAC558")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C259C", Offset = "0x9C259C")]
				protected set
				{
				}
			}

			[Token(Token = "0x17000097")]
			[ShowInInspector]
			public int NumTexPoints
			{
				[Token(Token = "0x60008EA")]
				[Address(RVA = "0xBAC560", Offset = "0xBAC560", VA = "0xBAC560")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000098")]
			[ShowInInspector]
			public int MaxTrailPoints
			{
				[Token(Token = "0x60008EB")]
				[Address(RVA = "0xBAC574", Offset = "0xBAC574", VA = "0xBAC574")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000099")]
			public int NumVertPoints
			{
				[Token(Token = "0x60008ED")]
				[Address(RVA = "0xBAC588", Offset = "0xBAC588", VA = "0xBAC588")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60008EC")]
			[Address(RVA = "0xBAA834", Offset = "0xBAA834", VA = "0xBAA834")]
			public void ResetTexture()
			{
			}

			[Token(Token = "0x60008EE")]
			[Address(RVA = "0xBAA464", Offset = "0xBAA464", VA = "0xBAA464")]
			public TrailSystemInstance(TrailGroup trailGroup, [Optional] TrailGroup.Config? configOverride)
			{
			}

			[Token(Token = "0x60008EF")]
			[Address(RVA = "0xBAC01C", Offset = "0xBAC01C", VA = "0xBAC01C")]
			public void FreeResources()
			{
			}

			[Token(Token = "0x60008F0")]
			[Address(RVA = "0xBAD1B0", Offset = "0xBAD1B0", VA = "0xBAD1B0")]
			[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9C25AC", Offset = "0x9C25AC")]
			protected void TrailAsserts()
			{
			}

			[Token(Token = "0x60008F1")]
			[Address(RVA = "0xBAC5AC", Offset = "0xBAC5AC", VA = "0xBAC5AC")]
			public void BuildMesh()
			{
			}

			[Token(Token = "0x60008F2")]
			[Address(RVA = "0xBAD180", Offset = "0xBAD180", VA = "0xBAD180")]
			public void PrepRenderTexture()
			{
			}

			[Token(Token = "0x60008F3")]
			[Address(RVA = "0xBAD494", Offset = "0xBAD494", VA = "0xBAD494")]
			public int GetNextTrailPointAfterY(int trailIndex, float y)
			{
				return default(int);
			}

			[Token(Token = "0x60008F4")]
			[Address(RVA = "0xBAD784", Offset = "0xBAD784", VA = "0xBAD784")]
			public bool GetTrailAtY(int trailIndex, float y, ref TrailPointSearchIndex tpOut)
			{
				return default(bool);
			}

			[Token(Token = "0x60008F5")]
			[Address(RVA = "0xBAA984", Offset = "0xBAA984", VA = "0xBAA984")]
			public void ResetTrails(bool createSearchArray = false)
			{
			}

			[Token(Token = "0x60008F6")]
			[Address(RVA = "0xBABA1C", Offset = "0xBABA1C", VA = "0xBABA1C")]
			public int AllocateTrail(int searchArrayLength = 0)
			{
				return default(int);
			}

			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xBAB870", Offset = "0xBAB870", VA = "0xBAB870")]
			public void RegisterMaterial(Material mat, bool is2D)
			{
			}

			[Token(Token = "0x60008F8")]
			[Address(RVA = "0xBAD8CC", Offset = "0xBAD8CC", VA = "0xBAD8CC")]
			public void DeregisterMaterial(Material mat)
			{
			}

			[Token(Token = "0x60008F9")]
			[Address(RVA = "0xBABB68", Offset = "0xBABB68", VA = "0xBABB68")]
			public void FreeTrail(int trailIndex)
			{
			}

			[Token(Token = "0x60008FA")]
			[Address(RVA = "0xBAAC7C", Offset = "0xBAAC7C", VA = "0xBAAC7C")]
			public void SetEmissionPoint(int trailIndex, Vector3 pos3D, [Optional] Vector2? pos2D)
			{
			}

			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xBAADF4", Offset = "0xBAADF4", VA = "0xBAADF4")]
			public void SetEmissionPoint(int trailIndex, Vector3 pos3D, Vector2 pos2D_forShader, Vector2 pos2D_forExtend)
			{
			}

			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xBAAB4C", Offset = "0xBAAB4C", VA = "0xBAAB4C")]
			public void SetBulge(int trailIndex, float bulge)
			{
			}

			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xBAAFA8", Offset = "0xBAAFA8", VA = "0xBAAFA8")]
			public void AddPoint(int trailIndex, Vector3 vert, Vector3 dir, Vector2 vert2D, Vector2 dir2D, Color color)
			{
			}

			[Token(Token = "0x60008FE")]
			[Address(RVA = "0xBAB02C", Offset = "0xBAB02C", VA = "0xBAB02C")]
			public void AddPoint(int trailIndex, Vector3 vert, Vector3 dir, Color color)
			{
			}

			[Token(Token = "0x60008FF")]
			[Address(RVA = "0xBAB1B4", Offset = "0xBAB1B4", VA = "0xBAB1B4")]
			public void RenderTrailUpdates()
			{
			}

			[Token(Token = "0x6000900")]
			[Address(RVA = "0xBADFA8", Offset = "0xBADFA8", VA = "0xBADFA8")]
			protected void SetMaterialConstants()
			{
			}

			[Token(Token = "0x6000901")]
			[Address(RVA = "0xBADC4C", Offset = "0xBADC4C", VA = "0xBADC4C")]
			protected void SetDynamicMaterialProperties()
			{
			}

			[Token(Token = "0x6000902")]
			[Address(RVA = "0xBAE1D4", Offset = "0xBAE1D4", VA = "0xBAE1D4")]
			public void SetIndexOffset(float i, Material mat)
			{
			}

			[Token(Token = "0x6000903")]
			[Address(RVA = "0xBABF10", Offset = "0xBABF10", VA = "0xBABF10")]
			public void Write3DPoint(Vector3 vert, int i, int trailIndex)
			{
			}

			[Token(Token = "0x6000904")]
			[Address(RVA = "0xBAE294", Offset = "0xBAE294", VA = "0xBAE294")]
			public void Write2DPoint(Vector2 vert, int i, int trailIndex)
			{
			}

			[Token(Token = "0x6000905")]
			[Address(RVA = "0xBABFD4", Offset = "0xBABFD4", VA = "0xBABFD4")]
			public void WriteColor(Color color, int i, int trailIndex)
			{
			}

			[Token(Token = "0x6000906")]
			[Address(RVA = "0xBAD9AC", Offset = "0xBAD9AC", VA = "0xBAD9AC")]
			protected void AddPoint_internal(int trailIndex, TrailState trailState, Vector3 vert, Vector3 dir, Vector2 vert2D, Vector2 dir2D, Color color)
			{
			}

			[Token(Token = "0x6000907")]
			[Address(RVA = "0xBAE3A4", Offset = "0xBAE3A4", VA = "0xBAE3A4")]
			private void SetLeadingPoints(int trailIndex, TrailState trailState, int i)
			{
			}

			[Token(Token = "0x6000908")]
			[Address(RVA = "0xBABDD4", Offset = "0xBABDD4", VA = "0xBABDD4")]
			public void GLRenderSetup()
			{
			}

			[Token(Token = "0x6000909")]
			[Address(RVA = "0xBABFE4", Offset = "0xBABFE4", VA = "0xBABFE4")]
			public void GLRenderEnd()
			{
			}

			[Token(Token = "0x600090A")]
			[Address(RVA = "0xBAD3EC", Offset = "0xBAD3EC", VA = "0xBAD3EC")]
			protected static RenderTexture AllocRenderTexture(int width, int height)
			{
				return null;
			}

			[Token(Token = "0x600090B")]
			[Address(RVA = "0xBAD964", Offset = "0xBAD964", VA = "0xBAD964")]
			public void ClearTrail(int trailIndex)
			{
			}

			[Token(Token = "0x600090C")]
			[Address(RVA = "0xBAE5C4", Offset = "0xBAE5C4", VA = "0xBAE5C4")]
			public void ClearRow(int y, int width)
			{
			}

			[Token(Token = "0x600090D")]
			[Address(RVA = "0xBAE688", Offset = "0xBAE688", VA = "0xBAE688")]
			public GameObject CreateRendererGO(out Material trailMat)
			{
				return null;
			}

			[Token(Token = "0x600090E")]
			[Address(RVA = "0xBAE7F4", Offset = "0xBAE7F4", VA = "0xBAE7F4")]
			protected void SetupTextureShared(Material mat)
			{
			}

			[Token(Token = "0x600090F")]
			[Address(RVA = "0xBAB914", Offset = "0xBAB914", VA = "0xBAB914")]
			public void Setup3DMaterial(Material mat)
			{
			}

			[Token(Token = "0x6000910")]
			[Address(RVA = "0xBAE0C8", Offset = "0xBAE0C8", VA = "0xBAE0C8")]
			public void Setup2DMaterial(Material mat)
			{
			}

			[Token(Token = "0x6000911")]
			[Address(RVA = "0xBAE918", Offset = "0xBAE918", VA = "0xBAE918")]
			internal void Set2DParams(Vector4 min, Vector2 range, Material mat)
			{
			}

			[Token(Token = "0x6000912")]
			[Address(RVA = "0xBAEA88", Offset = "0xBAEA88", VA = "0xBAEA88")]
			internal void Set2DYOffset(float yOffset, Material mat)
			{
			}
		}

		[Token(Token = "0x200012B")]
		public struct TrailPointSearchIndex
		{
			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int pointIndex;

			[Token(Token = "0x6000913")]
			[Address(RVA = "0xBAC1C4", Offset = "0xBAC1C4", VA = "0xBAC1C4")]
			public static TrailPointSearchIndex Null()
			{
				return default(TrailPointSearchIndex);
			}
		}

		[Token(Token = "0x200012C")]
		public struct TrailIntersection
		{
			[Token(Token = "0x4000A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int trailIndex;

			[Token(Token = "0x4000A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int pointIndex;
		}

		[Token(Token = "0x200012D")]
		public class TrailIntersectionSearchState
		{
			[Token(Token = "0x4000A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] prevXDiff;

			[Token(Token = "0x6000914")]
			[Address(RVA = "0xBAC1BC", Offset = "0xBAC1BC", VA = "0xBAC1BC")]
			public TrailIntersectionSearchState()
			{
			}
		}

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE860", Offset = "0x9BE860")]
		public Material lineMatSrc;

		[Token(Token = "0x4000288")]
		protected const int pixelsPerPoint = 2;

		[Token(Token = "0x4000289")]
		protected const int numTrailChannels = 3;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<TrailGroup, TrailSystemInstance> trailSystems;

		[Token(Token = "0x400028B")]
		protected const int NUM_LEADING_POINTS = 3;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material updateRTMat;

		[Token(Token = "0x600023A")]
		[Address(RVA = "0xBAA3E8", Offset = "0xBAA3E8", VA = "0xBAA3E8")]
		private TrailSystemInstance CreateSystem(TrailGroup trailGroup)
		{
			return null;
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0xBAA714", Offset = "0xBAA714", VA = "0xBAA714")]
		protected void Start()
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0xBAA718", Offset = "0xBAA718", VA = "0xBAA718", Slot = "5")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0xBAAAC8", Offset = "0xBAAAC8", VA = "0xBAAAC8")]
		public void Reset(TrailGroup trailGroup)
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0xBAAB08", Offset = "0xBAAB08", VA = "0xBAAB08")]
		public void SetBulge(TrailGroup group, int trailIndex, float bulge)
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0xBAAB90", Offset = "0xBAAB90", VA = "0xBAAB90")]
		public void SetEmissionPoint(TrailGroup group, int trailIndex, Vector3 pos3D, Vector2 pos2D)
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xBAAD68", Offset = "0xBAAD68", VA = "0xBAAD68")]
		public void SetEmissionPoint(TrailGroup group, int trailIndex, Vector3 pos3D, Vector2 pos2D_forShader, Vector2 pos2D_forExtend)
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xBAA34C", Offset = "0xBAA34C", VA = "0xBAA34C")]
		public void SetEmissionPoint(TrailGroup group, int trailIndex, Vector3 pos3D)
		{
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0xBAAF0C", Offset = "0xBAAF0C", VA = "0xBAAF0C")]
		public void AddPoint(TrailGroup group, int trailIndex, Vector3 vert, Vector3 dir, Vector2 vert2D, Vector2 dir2D, Color color)
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0xBAA2C0", Offset = "0xBAA2C0", VA = "0xBAA2C0")]
		public void AddPoint(TrailGroup group, int trailIndex, Vector3 vert, Vector3 dir, Color color)
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0xBAB0A4", Offset = "0xBAB0A4", VA = "0xBAB0A4")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0xBAB2C4", Offset = "0xBAB2C4", VA = "0xBAB2C4")]
		protected static void DrawGLQuadPixel(int x, int y, Color c)
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0xBAB404", Offset = "0xBAB404", VA = "0xBAB404")]
		protected static void EncodeColors(Vector3 vert, out Color32 a, out Color32 b, Vector3 min, Vector3 range)
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0xBAB60C", Offset = "0xBAB60C", VA = "0xBAB60C")]
		protected static void EncodeColors2D(Vector2 vert, out Color32 a, Vector2 min, Vector2 range)
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0xBAB568", Offset = "0xBAB568", VA = "0xBAB568")]
		protected static void ToBytes(float fx, out byte upper, out byte lower)
		{
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0xBAB718", Offset = "0xBAB718", VA = "0xBAB718", Slot = "6")]
		protected virtual TrailSystemInstance GetSystemForGroup(TrailGroup group)
		{
			return null;
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0xBAB7E0", Offset = "0xBAB7E0", VA = "0xBAB7E0")]
		public void SetupRenderer(TrailGroup group, MeshFilter meshFilter, MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0xBA9D14", Offset = "0xBA9D14", VA = "0xBA9D14")]
		public int AllocateTrail(TrailGroup trailGroup)
		{
			return default(int);
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0xBA9E2C", Offset = "0xBA9E2C", VA = "0xBA9E2C")]
		public void FreeTrail(TrailGroup trailGroup, int trailIndex)
		{
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0xBABC14", Offset = "0xBABC14", VA = "0xBABC14")]
		public TrailSystemInstance BuildTrail(TrailGroup trailGroup, int numTexPoints, Func<int, Vector3> func, Color color, int numVertPoints)
		{
			return null;
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0xBAC000", Offset = "0xBAC000", VA = "0xBAC000")]
		public void FreeSystem(TrailSystemInstance system)
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0xBAC124", Offset = "0xBAC124", VA = "0xBAC124")]
		public TrailManager()
		{
		}
	}
	[Token(Token = "0x2000059")]
	public class VolumetricLineSettings : MonoBehaviour
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_disableFieldOfViewScaling;

		[Token(Token = "0x6000250")]
		[Address(RVA = "0xBCFF5C", Offset = "0xBCFF5C", VA = "0xBCFF5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0xBCFFC0", Offset = "0xBCFFC0", VA = "0xBCFFC0")]
		public VolumetricLineSettings()
		{
		}
	}
	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD454", Offset = "0x9BD454")]
	public class BikeAIParams : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200012E")]
		public class SeekingParams
		{
			[Token(Token = "0x4000A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float joinPosErrorMax;

			[Token(Token = "0x4000A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float joinBankErrorMax;

			[Token(Token = "0x4000A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float joinSpeedErrorMax;

			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float joinHeadingErrorMax;

			[Token(Token = "0x4000A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float control_P;

			[Token(Token = "0x4000A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float control_P_Max;

			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float control_I;

			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float control_D;

			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float copyBank;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float control_P_headingError;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float control_P_heading;

			[Token(Token = "0x6000915")]
			[Address(RVA = "0xB90AB8", Offset = "0xB90AB8", VA = "0xB90AB8")]
			public bool CanJoin(float bankError, float posError, float signedSpeedError, float headingError)
			{
				return default(bool);
			}

			[Token(Token = "0x6000916")]
			[Address(RVA = "0xB90BAC", Offset = "0xB90BAC", VA = "0xB90BAC")]
			public SeekingParams()
			{
			}
		}

		[Token(Token = "0x200012F")]
		public enum RouteJoinMode
		{
			[Token(Token = "0x4000A4F")]
			Seek,
			[Token(Token = "0x4000A50")]
			SeekBlend,
			[Token(Token = "0x4000A51")]
			Blend
		}

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SeekingParams looseSeek;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SeekingParams finalSeek;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float abandonSeekError;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public RouteJoinMode routeJoinMode;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float remainSpeedErrorMax;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float requiredSwitchPointProximity;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float switchRouteCoolDownDistance;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float switchRouteCoolDownDistanceSafteyMargin;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float stickGain;

		[Token(Token = "0x6000252")]
		[Address(RVA = "0xB90A9C", Offset = "0xB90A9C", VA = "0xB90A9C")]
		public BikeAIParams()
		{
		}
	}
	[Token(Token = "0x200005B")]
	public class BlurAnalytics : SingletonMono<BlurAnalytics>
	{
		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string deviceID;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sessionID;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string version;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HTTPSQLInserter sqli;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool heartBeatThisFrame;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float nextHeartBeatTime;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int errorSentThisMinute;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int errorSentThisMinuteResetTime;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool showingExceptionMessage;

		[Token(Token = "0x6000253")]
		[Address(RVA = "0xB66CA8", Offset = "0xB66CA8", VA = "0xB66CA8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0xB670C4", Offset = "0xB670C4", VA = "0xB670C4")]
		public void Event(string name, params object[] data)
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0xB67178", Offset = "0xB67178", VA = "0xB67178")]
		public void LogCallback(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0xB67378", Offset = "0xB67378", VA = "0xB67378")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9C00B8", Offset = "0x9C00B8")]
		public void ShowExceptionMessage(string text)
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0xB6746C", Offset = "0xB6746C", VA = "0xB6746C")]
		public bool HeartBeat()
		{
			return default(bool);
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0xB67474", Offset = "0xB67474", VA = "0xB67474")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0xB67530", Offset = "0xB67530", VA = "0xB67530")]
		public BlurAnalytics()
		{
		}
	}
	[Token(Token = "0x200005C")]
	public class AppState : MonoBehaviour
	{
		[Token(Token = "0x2000130")]
		public struct UnlockAnnouncement
		{
			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string windowTitle;

			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Sprite icon;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;
		}

		[Token(Token = "0x40002A0")]
		public const string DIFFICULTY_LEVEL = "DIFFICULTY_LEVEL";

		[Token(Token = "0x40002A1")]
		public const string CURRENT_BIKE = "CURRENT_BIKE";

		[Token(Token = "0x40002A2")]
		public const string HELMET = "HELMET";

		[Token(Token = "0x40002A3")]
		public const string CONTROL_MODE = "CONTROL_MODE";

		[Token(Token = "0x40002A4")]
		public const string SHOW_HANDS = "SHOW_HANDS";

		[Token(Token = "0x40002A5")]
		public const string CONTROL_SENSITIVITY_PREFIX = "CONTROL_SENSITIVITY_";

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string SEENHELMETDIALOG;

		[Token(Token = "0x40002A7")]
		public const string MOVED_IN_LEADERBOARDS = "MOVED_IN_LEADERBOARDS";

		[Token(Token = "0x40002A8")]
		public const string COMFORTMODE_LEAN = "COMFORTMODE_LEAN";

		[Token(Token = "0x40002A9")]
		public const string COMFORTMODE_VIBRATION = "COMFORTMODE_VIBRATION";

		[Token(Token = "0x40002AA")]
		public const string RACED_EVER = "RACED_EVER";

		[Token(Token = "0x40002AB")]
		public const string LONG_LOADING_SCREEN = "LONG_LOADING_SCREEN";

		[Token(Token = "0x40002AC")]
		public const string NUM_RACES = "NUM_RACES";

		[Token(Token = "0x40002AD")]
		public const string SOUND_LEVEL_MUSIC = "SOUND_LEVEL_MUSIC";

		[Token(Token = "0x40002AE")]
		public const string SOUND_LEVEL_SFX = "SOUND_LEVEL_SFX";

		[Token(Token = "0x40002AF")]
		public const string SOUND_LEVEL_ENGINE = "SOUND_LEVEL_ENGINE";

		[Token(Token = "0x40002B0")]
		public const string SOUND_LEVEL_BATTERY_WARNING = "SOUND_LEVEL_BATTERY_WARNING";

		[Token(Token = "0x40002B1")]
		public const string SOUND_LEVEL_VOICE = "SOUND_LEVEL_VOICE";

		[Token(Token = "0x40002B2")]
		public const string LANGUAGE = "LANGUAGE";

		[Token(Token = "0x40002B3")]
		public const string TIPS_THERE_ARE_ALTERNATE_CONTROL_SCHEMES = "TIPS_THERE_ARE_ALTERNATE_CONTROL_SCHEMES";

		[Token(Token = "0x40002B4")]
		public const string TIPS_DONT_FORGET_THE_HELMET = "TIPS_DONT_FORGET_THE_HELMET";

		[Token(Token = "0x40002B5")]
		public const string TIPS_LEADER_BOARDS = "TIPS_LEADER_BOARDS";

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE8A8", Offset = "0x9BE8A8")]
		private static bool <LongLoadingSeen>k__BackingField;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<UnlockAnnouncement> unannouncedUnlocks;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool racedThisSession;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool newCompHintShownThisSession;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool changedBikeThisSession;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public static bool changeCompThisSession;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static bool racedSinceBikeUnlock;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public static bool needToShowBikeUnlockedMessage;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public static bool changedCompSinceCompUnlock;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public static bool needToShowCompUnlockAnim;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int configVersion;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static bool specialUser;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Competition newlyUnlockedComp;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static bool seenTipSinceRace;

		[Token(Token = "0x17000024")]
		public static bool LongLoadingSeen
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0xB844E8", Offset = "0xB844E8", VA = "0xB844E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C00F0", Offset = "0x9C00F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000266")]
			[Address(RVA = "0xB84550", Offset = "0xB84550", VA = "0xB84550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0100", Offset = "0x9C0100")]
			private set
			{
			}
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0xB83984", Offset = "0xB83984", VA = "0xB83984")]
		public static void SetInt(string name, int value)
		{
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0xB839A0", Offset = "0xB839A0", VA = "0xB839A0")]
		public static void SetFloat(string name, float value)
		{
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0xB839BC", Offset = "0xB839BC", VA = "0xB839BC")]
		public static void SetString(string name, string value)
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0xB839D8", Offset = "0xB839D8", VA = "0xB839D8")]
		public static int GetInt(string prefName, int defaultValue = 0)
		{
			return default(int);
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0xB83B38", Offset = "0xB83B38", VA = "0xB83B38")]
		public static float GetFloat(string prefName, float defaultValue = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0xB83C98", Offset = "0xB83C98", VA = "0xB83C98")]
		public static string GetString(string prefName, string defaultValue = "")
		{
			return null;
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0xB83DF8", Offset = "0xB83DF8", VA = "0xB83DF8")]
		public static int NumRacesComplete()
		{
			return default(int);
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0xB83E48", Offset = "0xB83E48", VA = "0xB83E48")]
		public static void IncrementRaceCount()
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0xB83EDC", Offset = "0xB83EDC", VA = "0xB83EDC")]
		public static void LoadDifficulty()
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0xB84000", Offset = "0xB84000", VA = "0xB84000")]
		public static void LoadComfortOptions()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0xB84340", Offset = "0xB84340", VA = "0xB84340")]
		public static void LoadAudioMix()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0xB845C0", Offset = "0xB845C0", VA = "0xB845C0")]
		public static void SetLongLoadingSeen()
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0xB846FC", Offset = "0xB846FC", VA = "0xB846FC")]
		public static void LoadMiscSettings()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xB84844", Offset = "0xB84844", VA = "0xB84844")]
		public static string GetLangChoice()
		{
			return null;
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xB848B8", Offset = "0xB848B8", VA = "0xB848B8")]
		public static void RefreshLanguage()
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xB84AF8", Offset = "0xB84AF8", VA = "0xB84AF8")]
		private static bool GetBool(string pref)
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xB84B6C", Offset = "0xB84B6C", VA = "0xB84B6C")]
		private static void SetBool(string pref, bool b)
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0xB84BF0", Offset = "0xB84BF0", VA = "0xB84BF0")]
		public static int GetHgVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xB84D44", Offset = "0xB84D44", VA = "0xB84D44")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0xB84EF8", Offset = "0xB84EF8", VA = "0xB84EF8")]
		public static bool IsUnlocked(string unlock)
		{
			return default(bool);
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xB84FF0", Offset = "0xB84FF0", VA = "0xB84FF0")]
		public static void Unlock(string unlock, UnlockAnnouncement announcement)
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0xB850F0", Offset = "0xB850F0", VA = "0xB850F0")]
		public static void Unlock(string unlock)
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0xB85178", Offset = "0xB85178", VA = "0xB85178")]
		public static LevelController.Victory GetBestVictory(string lcSaveId)
		{
			return default(LevelController.Victory);
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0xB851F4", Offset = "0xB851F4", VA = "0xB851F4")]
		public static LevelController.Victory GetBestVictory(string lcSaveId, out BlurGlobals.Difficulty bestDiff, BlurGlobals.Difficulty minDiff = BlurGlobals.Difficulty.Easy)
		{
			return default(LevelController.Victory);
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xB8532C", Offset = "0xB8532C", VA = "0xB8532C")]
		public static LevelController.Victory GetBestVictory(string lcSaveId, BlurGlobals.Difficulty diff)
		{
			return default(LevelController.Victory);
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xB85430", Offset = "0xB85430", VA = "0xB85430")]
		public static int GetBestRingCount(string lcSaveId)
		{
			return default(int);
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0xB854B8", Offset = "0xB854B8", VA = "0xB854B8")]
		public static void SaveRingCount(string lcSaveId, int ringCount)
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xB853C0", Offset = "0xB853C0", VA = "0xB853C0")]
		private static string GetDiffSuffix(BlurGlobals.Difficulty diff)
		{
			return null;
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0xB85590", Offset = "0xB85590", VA = "0xB85590")]
		public static void SaveVictory(string lcSaveId, BlurGlobals.Difficulty diff, LevelController.Victory vi)
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xB8568C", Offset = "0xB8568C", VA = "0xB8568C")]
		public static void ClearUnannouncedUnlocks()
		{
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xB85708", Offset = "0xB85708", VA = "0xB85708")]
		public static void DoInitialUnlocks()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xB847C0", Offset = "0xB847C0", VA = "0xB847C0")]
		public static bool Seen(string saveId)
		{
			return default(bool);
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0xB84674", Offset = "0xB84674", VA = "0xB84674")]
		public static void SetSeen(string saveId)
		{
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xB858DC", Offset = "0xB858DC", VA = "0xB858DC")]
		public static void SetBike(int bikeIndex)
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xB82DDC", Offset = "0xB82DDC", VA = "0xB82DDC")]
		public static bool IsBikeUnlocked(int bike)
		{
			return default(bool);
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0xB85988", Offset = "0xB85988", VA = "0xB85988")]
		public static bool IsVoltageUnlocked(int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xB83A6C", Offset = "0xB83A6C", VA = "0xB83A6C")]
		public static bool GetDefaultValue(string prefName, out int defValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0xB83BCC", Offset = "0xB83BCC", VA = "0xB83BCC")]
		public static bool GetDefaultValue(string prefName, out float defValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xB83D2C", Offset = "0xB83D2C", VA = "0xB83D2C")]
		public static bool GetDefaultValue(string prefName, out string defValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0xB85994", Offset = "0xB85994", VA = "0xB85994")]
		public AppState()
		{
		}
	}
	[Token(Token = "0x200005D")]
	public class BlurGlobals
	{
		[Token(Token = "0x2000131")]
		public enum Difficulty
		{
			[Token(Token = "0x4000A56")]
			Easy = 0,
			[Token(Token = "0x4000A57")]
			Medium = 1,
			[Token(Token = "0x4000A58")]
			Hard = 2,
			[Token(Token = "0x4000A59")]
			None = -1
		}

		[Token(Token = "0x2000132")]
		public enum LeanMode
		{
			[Token(Token = "0x4000A5B")]
			Realistic,
			[Token(Token = "0x4000A5C")]
			Stabilized,
			[Token(Token = "0x4000A5D")]
			Minimal,
			[Token(Token = "0x4000A5E")]
			Off
		}

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LevelController levelController;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RaceController raceController;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static RaceObjectManager raceObjectManager;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Bike localBike;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static BikeSim localBikeSim;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool multiplayer;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Camera backgroundCam;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Transform mainCamTransform;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static SceneSettings sceneSettings;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Material trackMaterial;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Material trackTrimMaterial;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Difficulty difficulty;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static bool isPermittedDevice;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static LevelController quickLoadLevelController;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static int vignetteMode;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static LeanMode leanMode;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static int vibrationMode;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static int helmetMode;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static bool slowMode;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public static bool trailsEnabled;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public static bool autoPauseEnabled;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string infoString;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static int currentCompetitionIndex;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public static float simSpeedScale;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static int bikeIndex;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static int[] currentBikeOrder;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static bool videoPlayback;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public static bool autoUnpause;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public static bool noGapSlowDown;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public static int videoPlaybackFps;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static Material trackEnergyMaterial;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Material trackItemMaterial;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static Material trackItemMaterial_blood;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static string forcePreferedRegion;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static MPController mp;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static bool VRMode;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public static bool mpEnabled;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static string mpText;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static bool safeUnlocked;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public static int mpMinVersion;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static int mpNumLevels;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static string mpSpecialRoomSuffix;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static string[] mpSpecialNamePatterns;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static bool chinese;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public static bool pausedInEditor;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public static bool perfHeavyTrack;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public static FlightControl.StickControlMode controlMode;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static bool showHandsOnBike;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public static float controlSensitivity;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public static int screenWidth;

		[Token(Token = "0x17000025")]
		public static Competition CurrentCompetition
		{
			[Token(Token = "0x6000286")]
			[Address(RVA = "0xB685FC", Offset = "0xB685FC", VA = "0xB685FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		public static BlurConfig.Career CurrentCareer
		{
			[Token(Token = "0x6000287")]
			[Address(RVA = "0xB68718", Offset = "0xB68718", VA = "0xB68718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		public static BlurConfig.BikeConfig CurrentBikeConfig
		{
			[Token(Token = "0x6000288")]
			[Address(RVA = "0xB66570", Offset = "0xB66570", VA = "0xB66570")]
			get
			{
				return default(BlurConfig.BikeConfig);
			}
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xB6853C", Offset = "0xB6853C", VA = "0xB6853C")]
		public static LeanMode EffectiveLeanMode()
		{
			return default(LeanMode);
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xB68810", Offset = "0xB68810", VA = "0xB68810")]
		public static void RefreshVoltage()
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xB6890C", Offset = "0xB6890C", VA = "0xB6890C")]
		public BlurGlobals()
		{
		}
	}
	[Token(Token = "0x200005E")]
	public class BoostRingSizeTweak : MonoBehaviour
	{
		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer mr;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform cam;

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xB694EC", Offset = "0xB694EC", VA = "0xB694EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0xB69590", Offset = "0xB69590", VA = "0xB69590")]
		public void Update()
		{
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xB69768", Offset = "0xB69768", VA = "0xB69768")]
		public BoostRingSizeTweak()
		{
		}
	}
	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD490", Offset = "0x9BD490")]
	public class CollectSounds : ScriptableObject
	{
		[Token(Token = "0x2000133")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDCCC", Offset = "0x9BDCCC")]
		private sealed class <TestTogether_CR>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CollectSounds <>4__this;

			[Token(Token = "0x1700009A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600091A")]
				[Address(RVA = "0xB69DF0", Offset = "0xB69DF0", VA = "0xB69DF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600091C")]
				[Address(RVA = "0xB69E5C", Offset = "0xB69E5C", VA = "0xB69E5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000917")]
			[Address(RVA = "0xB69A84", Offset = "0xB69A84", VA = "0xB69A84")]
			[DebuggerHidden]
			public <TestTogether_CR>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000918")]
			[Address(RVA = "0xB69C78", Offset = "0xB69C78", VA = "0xB69C78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000919")]
			[Address(RVA = "0xB69C7C", Offset = "0xB69C7C", VA = "0xB69C7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600091B")]
			[Address(RVA = "0xB69DF8", Offset = "0xB69DF8", VA = "0xB69DF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEffect batteryCharge;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEffect bonusCharge;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundEffect alreadyFull;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string batteryChargeScale;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string bonusChargeScale;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] batteryPitches;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] bonusPitches;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float testTimingInterval;

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xB697D4", Offset = "0xB697D4", VA = "0xB697D4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0110", Offset = "0x9C0110")]
		public void TestScale()
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xB6985C", Offset = "0xB6985C", VA = "0xB6985C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0148", Offset = "0x9C0148")]
		public void TestBonusScale()
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xB698E4", Offset = "0xB698E4", VA = "0xB698E4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0180", Offset = "0x9C0180")]
		public void CachePitches()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xB6997C", Offset = "0xB6997C", VA = "0xB6997C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C01B8", Offset = "0x9C01B8")]
		public void TestTogether()
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xB69A10", Offset = "0xB69A10", VA = "0xB69A10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C01F0", Offset = "0x9C01F0")]
		private IEnumerator TestTogether_CR()
		{
			return null;
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0xB69AB0", Offset = "0xB69AB0", VA = "0xB69AB0")]
		public void Play(int level, bool battery, bool bonus)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0xB69C64", Offset = "0xB69C64", VA = "0xB69C64")]
		public CollectSounds()
		{
		}
	}
	[Token(Token = "0x2000060")]
	public class BC
	{
		[Token(Token = "0x17000028")]
		public static BlurConfig I
		{
			[Token(Token = "0x6000296")]
			[Address(RVA = "0xB85A44", Offset = "0xB85A44", VA = "0xB85A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xB85AAC", Offset = "0xB85AAC", VA = "0xB85AAC")]
		public BC()
		{
		}
	}
	[Token(Token = "0x2000061")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD4CC", Offset = "0x9BD4CC")]
	public class BlurConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000134")]
		public struct HudDeltaColor
		{
			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delta;

			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Color color;
		}

		[Serializable]
		[Token(Token = "0x2000135")]
		public struct MPConfig
		{
			[Token(Token = "0x4000A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject mpController;

			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SplineTrack testLevel;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float waitForPlayersToJoinGameRoomTimeout;

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float waitForRaceInfoTime;

			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject mpBikePrefab;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextAsset[] testPlayback;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int gameStartDelayAfterReadyMS;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float trailVelocityScale;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float predictTimePeriod;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int numLaps_test;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int numLaps_prod;

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int inRoomToCountdownStartPeriodMs;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float maxProjectTime;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float posSmoothAmount;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float pingSmoothAmount;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject nameTagRendererPrefab;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector2 nameTagScale;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float nameTagTrackDrawDistance;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float leavingPlayerNotReadyTime;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float afterJoinLobbyShowUIDelay;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int test_mineSpawnCount;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool magnetAffectsVictim;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public float minSpeedPredict;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float hudDeltaMinDelta;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public float hudDeltaMaxDelta;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float hudDownIconMax;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float hudIconOffset;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float hudNameOffset;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float hudDeltaOffset;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public HudDeltaColor[] hudDeltaColors;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public string hudNamePrefix;

			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF670", Offset = "0x9BF670")]
			public int keepAliveInBackground_game;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF6A8", Offset = "0x9BF6A8")]
			public int keepAliveInBackground_lobby;
		}

		[Token(Token = "0x2000136")]
		public enum BikeModelID
		{
			[Token(Token = "0x4000A86")]
			Control,
			[Token(Token = "0x4000A87")]
			Power,
			[Token(Token = "0x4000A88")]
			Drift
		}

		[Token(Token = "0x2000137")]
		public enum BikeColor
		{
			[Token(Token = "0x4000A8A")]
			Red,
			[Token(Token = "0x4000A8B")]
			Green,
			[Token(Token = "0x4000A8C")]
			Blue,
			[Token(Token = "0x4000A8D")]
			Pink,
			[Token(Token = "0x4000A8E")]
			Yellow,
			[Token(Token = "0x4000A8F")]
			Grey,
			[Token(Token = "0x4000A90")]
			Cyan,
			[Token(Token = "0x4000A91")]
			White
		}

		[Serializable]
		[Token(Token = "0x2000138")]
		public struct BikeModelConfig
		{
			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh mesh_lowRes;

			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject prefab;

			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject prefab_HiRes;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool flyBike;
		}

		[Serializable]
		[Token(Token = "0x2000139")]
		public struct BikeConfig
		{
			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BikeModelID defaultModel;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public HandlingOptions handling;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] bikeModelChance;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string raceHudFormatString;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string fastLapHudFormatString;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string ringModeHudFormatString;
		}

		[Serializable]
		[Token(Token = "0x200013A")]
		public struct TooltipConfig
		{
			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject popup;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject popupLine;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 defaultSize;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 expandedSize;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] strings;
		}

		[Serializable]
		[Token(Token = "0x200013B")]
		public struct CheatsConfig
		{
			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float forceFrameRate;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool thousandLaps;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool alwaysBoost;

			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool alwaysChargeDrain;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool alwaysPoweredTrack;

			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool skipPreRaceCountdown;

			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool cruiseControl;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool alwaysMagnet;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
			public bool allowPauseWithoutMenu;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool devLevels;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool raceAndPaint;

			[Token(Token = "0x4000AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool recordRace;

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SimpleTrack.PickupType aiTestPickup;

			[Token(Token = "0x4000AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool pickupEveryFrame;

			[Token(Token = "0x4000AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool unlockEverything;

			[Token(Token = "0x4000AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
			public bool showLapTime;

			[Token(Token = "0x4000AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
			public bool seeRealTables;

			[Token(Token = "0x4000AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool submitToRealTables;

			[Token(Token = "0x4000AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool alwaysRenderTrail;

			[Token(Token = "0x4000AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool renderTrackLightTexture;

			[Token(Token = "0x4000AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool skipDrawGLQuadPixel;

			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool showAllMessages;

			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool useTestMPServer;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string mpConfigSuffx;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int mpNumLaps;
		}

		[Serializable]
		[Token(Token = "0x200013C")]
		public struct LevelBuildingConfig
		{
			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool placeRings;

			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ringSpacing;
		}

		[Serializable]
		[Token(Token = "0x200013D")]
		public class AnalyticsConfig
		{
			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float heartBeatPeriod;

			[Token(Token = "0x600091D")]
			[Address(RVA = "0xB67EEC", Offset = "0xB67EEC", VA = "0xB67EEC")]
			public AnalyticsConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200013E")]
		public class GraphicsConfig
		{
			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material colorBikeMaterial;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material colorRiderMaterial;

			[Token(Token = "0x4000AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color[] bikeColors;

			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] riderColors;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int trackLightPixelsPerTrackCell;

			[Token(Token = "0x600091E")]
			[Address(RVA = "0xB67F20", Offset = "0xB67F20", VA = "0xB67F20")]
			public GraphicsConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200013F")]
		public struct RaceConfig
		{
			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float preRaceCountdown;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float redLightDuration;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float greenLightDuration;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float interLightDelay;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float clearGoSignDelay;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] voltageSpeeds;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float trackBoundaryRequiredTrackRelMoveSpeed;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float trackBoundaryStepInAmount;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int trackBoundaryKernelDim;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int trackBoundarySigma;

			[Token(Token = "0x4000ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float trackBoundaryFinalStepIn;

			[Token(Token = "0x4000ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float outOfBoundsTroubleAcceleration;

			[Token(Token = "0x4000ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool fastLapEarlyEndOnGold;

			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float smoothedPositionSmoothFactor;

			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float laggingCutoff;
		}

		[Serializable]
		[Token(Token = "0x2000140")]
		public class SpatialScaleConfig
		{
			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float playerAndVehicleScale;

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float eyeHeight;

			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float bikeMeshScale;

			[Token(Token = "0x1700009C")]
			public float ScaledEyeHeight
			{
				[Token(Token = "0x600091F")]
				[Address(RVA = "0xB683B4", Offset = "0xB683B4", VA = "0xB683B4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000920")]
			[Address(RVA = "0xB683C0", Offset = "0xB683C0", VA = "0xB683C0")]
			public SpatialScaleConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000141")]
		public class ComfortConfig
		{
			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool instantBoostEnd;

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] leanModeScales;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float[] cameraLeanModeScales;

			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VignetteMode[] vignetteModes;

			[Token(Token = "0x4000AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float nonVRLeanScale;

			[Token(Token = "0x4000ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float nonVRLeanScaleCamera;

			[Token(Token = "0x6000921")]
			[Address(RVA = "0xB67F10", Offset = "0xB67F10", VA = "0xB67F10")]
			public ComfortConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000142")]
		public class WeaponConfig
		{
			[Token(Token = "0x4000ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float maxTargetAngle;

			[Token(Token = "0x4000ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetReticuleSize;

			[Token(Token = "0x4000ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float chargeDrainDuration;

			[Token(Token = "0x4000ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float chargeDrainRate;

			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float shieldDuration;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float bikeTargetRadius;

			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float weaponAimDuration;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float magnetSpeedDelta;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float magnetBoostDuration;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float magnetDelayBoost;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float magnetTransferFraction;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject iceVirusPrefab;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float virusInfectDistance;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Color ICEVirusTrailColor;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float frozenDuration;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float empFreezeDuration;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float iceVirusPostHitDuration;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float virusInfectTrailEndDistance;

			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float virusInfectTrailHeadDistance;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public GameObject dronePrefab;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GameObject dronePrefab_forVideos;

			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float targetingMaxAngle;

			[Token(Token = "0x4000AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float targetingMaxDistance;

			[Token(Token = "0x4000AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float droneInitialHeight;

			[Token(Token = "0x4000AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float finalDroneSpeed;

			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public float finalDroneHeight;

			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public float droneStrikeDistance;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float initialDroneSpeed;

			[Token(Token = "0x4000AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public float teleportDistance;

			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public GameObject jumpVisualization;

			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public float mineActivateDelay;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public float mineActivateDelay_videos;

			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public float mineSpeedLimit;

			[Token(Token = "0x4000AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public float mineBatteryFraction;

			[Token(Token = "0x4000AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public float droneLifeTime;

			[Token(Token = "0x4000AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public float maxAimDistance;

			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public bool aiUseItems;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public float iceVirusUsageDuration;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public float defaultReticuleDistance;

			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public float defaultReticuleUp;

			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public float reticuleMaxAngle;

			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			public float reticuleMaxDistance;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public float droneMaxAngle;

			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			public float droneMaxDistance;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public float mp_droneChargeDeduct;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public float droneChargeResidue;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public float freezeChargeResidue;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			public float mp_iceVirusChargeDeduct;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public float magnetMPPenalty;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			public float maxTrailStepLength;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public float minAlphaForInfection;

			[Token(Token = "0x1700009D")]
			public float EmpFreezeDuration
			{
				[Token(Token = "0x6000922")]
				[Address(RVA = "0xB683E0", Offset = "0xB683E0", VA = "0xB683E0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700009E")]
			public float MineActivateDelay
			{
				[Token(Token = "0x6000923")]
				[Address(RVA = "0xB683E8", Offset = "0xB683E8", VA = "0xB683E8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000924")]
			[Address(RVA = "0xB683F0", Offset = "0xB683F0", VA = "0xB683F0")]
			public WeaponConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000143")]
		public class PerfConfig
		{
			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int forceGCFrameInterval;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float trackPortionLitByItems;

			[Token(Token = "0x6000925")]
			[Address(RVA = "0xB682D4", Offset = "0xB682D4", VA = "0xB682D4")]
			public PerfConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000144")]
		public class SoundConfig
		{
			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve reprise_loopFade;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve reprise_repriseEnter;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float main_InitialGain;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float reprise_InitialGain;

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF6E0", Offset = "0x9BF6E0")]
			public float repriseFadeDuration;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SFXConfig sfx;

			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UnityEngine.Object[] raceSongs;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UnityEngine.Object[] resultsSongs;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float musicFadeOutPeriod;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float defaultMusicVolume;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float boostWarningPeriod;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float engineSmoothFactor;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public AudioMixer audioMixer;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public AudioMixerSnapshot gameAudioSnapshot;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public AudioMixerSnapshot menusAudioSnapshot;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public CollectSounds collectSounds;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public bool lockEngineOn;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public AnimationCurve speedEngineLowPassCurve;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float engineWobble1Amp;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float engineWobble2Amp;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public float engineWobble1Freq;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public float engineWobble2Freq;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float bpm;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public float sampleRate;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public float engineMaxRPM;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public float humDecay;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public float humBuildUp;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public float restRPM;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public SoundEffect warningBatterySound;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public float warningBatteryDelay;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public float warningBatteryLevel;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public float speedEngineColdSpeed;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public VoiceConfig english;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public VoiceConfig chinese;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public NumberToSpeech numberToSpeechEnglish;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public NumberToSpeechChinese numberToSpeechChinese;

			[Token(Token = "0x1700009F")]
			public VoiceConfig Voice
			{
				[Token(Token = "0x6000926")]
				[Address(RVA = "0xB68320", Offset = "0xB68320", VA = "0xB68320")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000927")]
			[Address(RVA = "0xB683A0", Offset = "0xB683A0", VA = "0xB683A0")]
			public SoundConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000145")]
		public class HomeScreenConfig
		{
			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject bikePlatform;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject showBike;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sprite[] bikeUnlockIcons;

			[Token(Token = "0x6000928")]
			[Address(RVA = "0xB67F28", Offset = "0xB67F28", VA = "0xB67F28")]
			public HomeScreenConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000146")]
		public struct ChunkablePrefab
		{
			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject chunk;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject live;

			[Token(Token = "0x6000929")]
			[Address(RVA = "0xA5B0E4", Offset = "0xA5B0E4", VA = "0xA5B0E4")]
			public GameObject Get(bool c)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000147")]
		public class TrackObjectPrefabs
		{
			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject startBoard;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject speedBoost;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject enduringSpeedBoost;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject ring;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject bike_old;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject bike_fly;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ChunkablePrefab pod;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject pickup;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameObject cpAudio;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject barrier;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GameObject barrierToChunk;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public GameObject barrierPreview;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GameObject barrierLightMap;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public GameObject mine;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public GameObject iceVirusEffect;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public GameObject iceVirusCrystal;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public GameObject droneAttactEffect;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public GameObject droneAttactEffect_ForVideoCloseups;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public GameObject teleportFlash;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public GameObject barrierSound;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public GameObject mineExplosion;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public GameObject teleportTunnel;

			[Token(Token = "0x600092A")]
			[Address(RVA = "0xB683D0", Offset = "0xB683D0", VA = "0xB683D0")]
			public TrackObjectPrefabs()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000148")]
		public class PickupWeight
		{
			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SimpleTrack.PickupType pickup;

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weight;

			[Token(Token = "0x600092B")]
			[Address(RVA = "0xB682E4", Offset = "0xB682E4", VA = "0xB682E4")]
			public PickupWeight()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000149")]
		public class TrackObjectsConfig
		{
			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int chunkUnitLength;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float coinHeight;

			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float coinInterval;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float pickupRadius;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float barrierRadius;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float pickupChargeAmount;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float boostRadius;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float respawnTime;

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF6F8", Offset = "0x9BF6F8")]
			public PickupWeightings[] pickupWeightings;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int numPodAudioSources;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float podAudioSpawnDistance;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float barrierHeight;

			[Token(Token = "0x600092C")]
			[Address(RVA = "0xB683D8", Offset = "0xB683D8", VA = "0xB683D8")]
			public TrackObjectsConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014A")]
		public class TrackMaterialConfig
		{
			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material splineTrack;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material defaultFrameMaterial;

			[Token(Token = "0x600092D")]
			[Address(RVA = "0xB683C8", Offset = "0xB683C8", VA = "0xB683C8")]
			public TrackMaterialConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014B")]
		public class Career
		{
			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Competition[] competitions;

			[Token(Token = "0x600092E")]
			[Address(RVA = "0xB67EF4", Offset = "0xB67EF4", VA = "0xB67EF4")]
			public Career()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014C")]
		public class LevelsConfig
		{
			[Token(Token = "0x2000217")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE36C", Offset = "0x9BE36C")]
			private sealed class <get_Competitions>d__2 : IEnumerable<Competition>, IEnumerable, IEnumerator<Competition>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4000FD5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4000FD6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Competition <>2__current;

				[Token(Token = "0x4000FD7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x4000FD8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public LevelsConfig <>4__this;

				[Token(Token = "0x4000FD9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private Career[] <>7__wrap1;

				[Token(Token = "0x4000FDA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int <>7__wrap2;

				[Token(Token = "0x4000FDB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private Competition[] <>7__wrap3;

				[Token(Token = "0x4000FDC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private int <>7__wrap4;

				[Token(Token = "0x1700011E")]
				private Competition System.Collections.Generic.IEnumerator<Coplanar.Competition>.Current
				{
					[Token(Token = "0x6000B8F")]
					[Address(RVA = "0xB681AC", Offset = "0xB681AC", VA = "0xB681AC", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700011F")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6000B91")]
					[Address(RVA = "0xB68218", Offset = "0xB68218", VA = "0xB68218", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6000B8C")]
				[Address(RVA = "0xB67FB4", Offset = "0xB67FB4", VA = "0xB67FB4")]
				[DebuggerHidden]
				public <get_Competitions>d__2(int <>1__state)
				{
				}

				[Token(Token = "0x6000B8D")]
				[Address(RVA = "0xB6809C", Offset = "0xB6809C", VA = "0xB6809C", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6000B8E")]
				[Address(RVA = "0xB680A0", Offset = "0xB680A0", VA = "0xB680A0", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6000B90")]
				[Address(RVA = "0xB681B4", Offset = "0xB681B4", VA = "0xB681B4", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6000B92")]
				[Address(RVA = "0xB68220", Offset = "0xB68220", VA = "0xB68220", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<Competition> System.Collections.Generic.IEnumerable<Coplanar.Competition>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6000B93")]
				[Address(RVA = "0xB682D0", Offset = "0xB682D0", VA = "0xB682D0", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Career[] careers;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SplineTrack[] LeaderboardLevels;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplineTrack[] MPLevels;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplineTrack[] LevelSelectOrder;

			[Token(Token = "0x170000A0")]
			public IEnumerable<Competition> Competitions
			{
				[Token(Token = "0x600092F")]
				[Address(RVA = "0xB67F30", Offset = "0xB67F30", VA = "0xB67F30")]
				[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C2634", Offset = "0x9C2634")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A1")]
			public Competition[] CurrentCompetitions
			{
				[Token(Token = "0x6000930")]
				[Address(RVA = "0xB67FEC", Offset = "0xB67FEC", VA = "0xB67FEC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000931")]
			[Address(RVA = "0xB68094", Offset = "0xB68094", VA = "0xB68094")]
			public LevelsConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014D")]
		public class RaceBalancerConfig
		{
			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve speedFactor;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float raceBalanceLerp;

			[Token(Token = "0x6000932")]
			[Address(RVA = "0xB682EC", Offset = "0xB682EC", VA = "0xB682EC")]
			public RaceBalancerConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014E")]
		public class AIConfig
		{
			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject aiBikePrefab;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int defaultNumOpponents;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float speedForFinishTimeCalculation;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float startPeriodToReachFullDegreesPerSecond;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float startIntersectionSearchLength;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float connectionSearchStep;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float startIntersectionXError;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float lapOccupiedPenalty;

			[Token(Token = "0x6000933")]
			[Address(RVA = "0xB67EE4", Offset = "0xB67EE4", VA = "0xB67EE4")]
			public AIConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014F")]
		public struct MenuGUIConfig
		{
			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject hologramPrefab;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject bikeHologramPrefab;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float bikePreviewSpinSpeedFast;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float bikePreviewSpinSpeedSlow;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject newCompPopup;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color highlightedButtonTextColor;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color defaultButtonTextColor;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Sprite compLockedImage;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float lockedCompButtonWidth;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float unlockedCompButtonWidth;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float hologramBlurSpeed;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float hologramBlur_LineWidth;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float hologramBlur_Exposure;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Color hologramLockedBikeWireColor;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Color hologramLockedBikeBodyColor;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Sprite activeTabSprite;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Sprite inactiveTabSprite;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public float tierPanelMoveSpeed;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public float tierPanelDecay;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float tierPanelTouchCoolDown;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public AnimationCurve tierOuterPanelZCurve;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public AnimationCurve tierCenterPanelZCurve;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Color tierEventSelectColor;

			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Color tierEventNormalColor;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public float tierPanelZCurveMax;

			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public AnimationCurve tierPanelYSpin;
		}

		[Serializable]
		[Token(Token = "0x2000150")]
		public class RaceGUIConfig
		{
			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float respawnFadeWarningLength;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject areaReticulePrefab;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material targetReticuleMat;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material targetReticuleMatInvalid;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject targetReticulePrefab;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int averageFrames;

			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float powerPackFlashTime;

			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject collectedItemPrefab;

			[Token(Token = "0x4000B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float pickupCollectDelay;

			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float batteryFlashDuration;

			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public AnimationCurve batteryWarningCurve;

			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float delayBeforeHideLoadingScreen;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float minFirstLoadingScreenPeriod;

			[Token(Token = "0x4000B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Color flashHudColor;

			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Color defaultHudColor;

			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float immuneOutlineIntensity;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Color immuneOutlineTint;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public Color immuneOutlineTint2;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public Color batteryWarningColor;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public Color batteryFullFlashColor1;

			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public float batteryFullFlashSpeed;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Color immuneHudColor;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public float immuneSpeedIntensity;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			public Color flashHudColorIce;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			public Color flashHudColorMagnet;

			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			public Color droneDefendedColor;

			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			public Color droneExplosionColor;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			public Color droneDefendedRimColor;

			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			public float droneDefendedScale;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public float droneEffectiveScale;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			public Color droneExplosionRimColor;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			public Color iceDefendedColor1;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
			public Color iceDefendedColor2;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
			public Color iceDefendedColor3;

			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
			public float thickTrailBlendAmount;

			[Token(Token = "0x6000934")]
			[Address(RVA = "0xB682F4", Offset = "0xB682F4", VA = "0xB682F4")]
			public RaceGUIConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000151")]
		public class EnergyFieldParams
		{
			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color inner;

			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color outer;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color rim;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color constColor;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float innerAlpha;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float centerStrengthScale;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float noiseAmp;

			[Token(Token = "0x6000935")]
			[Address(RVA = "0xB67F18", Offset = "0xB67F18", VA = "0xB67F18")]
			public EnergyFieldParams()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000152")]
		public class RenderingConfig
		{
			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float bikeDirLightAheadDistance;

			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float underBikeDecalHeight;

			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float underBikeDecalScale;

			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float underBikeDecalForward;

			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float underBikeDecalLateralMoveScale;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float underBikeDecalMaxCorrectionOffset;

			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 underBikeDecalRotation;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Material underBikeDecalMaterial;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color ringUIGoodCol;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color ringUIBadCol;

			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Color defaultClearColor;

			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public UniversalCameraSettings gameCameraSettings;

			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public UniversalCameraSettings loadingCameraSettings;

			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public UniversalCameraSettings homeCameraSettings;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public UniversalCameraSettings inGameMenuCameraSettings;

			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Color bikeLightStartCookieColor;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Color bikeLightRaceCookieColor;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Material boostStrongMat;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Material boostWeakMat;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public float boostSpinSpeed;

			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public float wrapPointOffsetFromPlayer;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public float charViewDistance;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public float trailWobbleFreq;

			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public float trailWobbleFreqVariation;

			[Token(Token = "0x4000BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			public float trailWobbleAmp;

			[Token(Token = "0x4000BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public float minTrailSpeed;

			[Token(Token = "0x4000BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public Texture2D[] hudItemIcons;

			[Token(Token = "0x4000BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public Mesh[] hudItemWireMesh;

			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Mesh[] hudItemSolidMesh;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public float immuneFlashSpeed;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Material trackItemMaterial;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public Material trackItemMaterial_blood;

			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public AnimationCurve streakOpacity;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			public AnimationCurve streakLength;

			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public Material streakMat;

			[Token(Token = "0x4000BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public float podStreakDuration;

			[Token(Token = "0x4000BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			public int streakSpawnRate;

			[Token(Token = "0x4000BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public Material podParticleMaterial;

			[Token(Token = "0x4000BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			public Color[] streakColors;

			[Token(Token = "0x4000BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			public float[] streakEmissionRates;

			[Token(Token = "0x4000BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			public float glowQuadItemScale;

			[Token(Token = "0x4000BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			public Material trackItemLightMaterial;

			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			public Material[] frameMaterials;

			[Token(Token = "0x4000BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			public float frameEmissionMin;

			[Token(Token = "0x4000BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
			public float frameEmissionMax;

			[Token(Token = "0x4000BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			public float frameEmissionSpeed;

			[Token(Token = "0x4000BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			public Mesh trackEnergyMesh;

			[Token(Token = "0x4000BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			public Material trackEnergyMaterial;

			[Token(Token = "0x4000BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			public float trackEnergyGridSize;

			[Token(Token = "0x4000BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
			public float trackEnergyGridMeshSize;

			[Token(Token = "0x4000BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			public EnergyFieldParams trackEnergyGridOn;

			[Token(Token = "0x4000BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			public EnergyFieldParams trackEnergyGridOff;

			[Token(Token = "0x4000BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			public AnimationCurve trackEnergyCenterStrength;

			[Token(Token = "0x4000BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
			public AnimationCurve trackEnergyCenterStrengthFromAbove;

			[Token(Token = "0x4000BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF730", Offset = "0x9BF730")]
			public float trackEnergyT;

			[Token(Token = "0x4000BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			public Gradient glowGradient;

			[Token(Token = "0x4000BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			public AnimationCurve teleportColorBlendCurve;

			[Token(Token = "0x4000BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
			public float teleportColorBlendDuration;

			[Token(Token = "0x4000BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			public SimpleColorCorrectState teleportColorBlendColorCorrect;

			[Token(Token = "0x4000BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
			public AnimationCurve teleport3rdPersonColorBlendCurve;

			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			public float teleport3rdPersonColorBlendDuration;

			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
			public SimpleColorCorrectState teleport3rdPersonColorBlendColorCorrect;

			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			public AnimationCurve frozenColorBlendCurve;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
			public float frozenColorBlendDuration;

			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			public SimpleColorCorrectState frozenColorBlendColorCorrect;

			[Token(Token = "0x4000BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			public AnimationCurve magnetColorBlendCurve;

			[Token(Token = "0x4000BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			public float magnetColorBlendDuration;

			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			public SimpleColorCorrectState magnetColorBlendColorCorrect;

			[Token(Token = "0x4000BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			public AnimationCurve hitMineColorBlendCurve;

			[Token(Token = "0x4000BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
			public float hitMineColorBlendDuration;

			[Token(Token = "0x4000BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
			public SimpleColorCorrectState hitMineColorBlendColorCorrect;

			[Token(Token = "0x4000BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
			public AnimationCurve droneAttackColorBlendCurve;

			[Token(Token = "0x4000BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
			public float droneAttackColorBlendDuration;

			[Token(Token = "0x4000BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
			public SimpleColorCorrectState droneAttackColorBlendColorCorrect;

			[Token(Token = "0x4000BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
			public AnimationCurve barrierRemoveCurve;

			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
			public float barrierRemoveCurveDuration;

			[Token(Token = "0x4000BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
			public float bikeTrackLightForwardOffset;

			[Token(Token = "0x4000BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
			public float bikeItemLightStrength;

			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
			public Material teleportIndicatorMat;

			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
			public AnimationCurve teleportIndicatorThicknessCurve;

			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
			public AnimationCurve teleportIndicatorExposureCurve;

			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
			public float teleportIndicatorAnimLength;

			[Token(Token = "0x4000C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
			public AnimationCurve droneAttackSizeCurve;

			[Token(Token = "0x4000C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
			public AnimationCurve droneAttackSizeCurve_ForVideoCloseups;

			[Token(Token = "0x4000C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
			public float droneAttackSizeDuration;

			[Token(Token = "0x4000C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
			public AnimationCurve droneAttackAlphaCurve;

			[Token(Token = "0x4000C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
			public AnimationCurve boostRingColorBlendCurve;

			[Token(Token = "0x4000C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
			public float boostRingColorBlendDuration;

			[Token(Token = "0x4000C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
			public SimpleColorCorrectState boostRingColorBlendColorCorrect;

			[Token(Token = "0x4000C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
			public float boostRingStreaksDuration;

			[Token(Token = "0x4000C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
			public float boostRingStreaksScale;

			[Token(Token = "0x4000C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
			public float particleSpeedScale;

			[Token(Token = "0x4000C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
			public float iceCanonParticleSpeedConstant;

			[Token(Token = "0x4000C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
			public float iceCanonParticleSpeedScale;

			[Token(Token = "0x4000C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
			public float energyFieldLinger;

			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
			public bool energyFieldMotionBlur;

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D1")]
			public bool energyFieldFixedInTrackSpace;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
			public float trackLightReducedDistance;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
			public Material iceCanonFlipbook;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
			public Material iceVirusTravelFlipbook;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
			public float trackBoundaryYPosOffset;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
			public float trackBoundaryMeshLen;

			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
			public float trackBoundaryVertPointSpacing;

			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
			public GameObject helmetPrefab;

			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
			public GameObject helmet2Prefab;

			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
			public Texture2D trackItemRingDisabledTex;

			[Token(Token = "0x4000C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
			public Texture2D trackItemDefaultTex;

			[Token(Token = "0x4000C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
			public Texture2D trackItemGlowDefaultTex;

			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
			public Texture2D trackItemGlowRingDisabledTex;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
			public GameObject batteryVignettePrefab;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
			public bool useBatteryVignette;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
			public Mesh[] helmetMeshes;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
			public float menuRenderScale;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
			public float gameRenderScale;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
			public float maxSpeedForEngineParticles;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
			public TrailGroup boundaryTrailGroup;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
			public float teleportTunnelHeight;

			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
			public int teleportTunnelN;

			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
			public int teleportTunnelNMin;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
			public int teleportTunnelNDistance;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
			public float teleportTunnelMaxParticleLifeTime;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
			public float teleportTunnelLifeDecay;

			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
			public int defaultPerPixelLightCount;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
			public int teleportTunnelScriptedN;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
			public float teleportTunnelScriptedLife;

			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
			public float minePopDuration;

			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
			public AnimationCurve minePopCurve;

			[Token(Token = "0x6000936")]
			[Address(RVA = "0xB682FC", Offset = "0xB682FC", VA = "0xB682FC")]
			public RenderingConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000153")]
		public struct AnimationConfig
		{
			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float prestartAnimationChance;

			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float pointChance;

			[Token(Token = "0x4000C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float preraceAnimWaitTime;

			[Token(Token = "0x4000C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float minPreLeanDownTime;

			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float maxPreLeanDownTime;

			[Token(Token = "0x4000C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float lookBehindInitialCoolDownTime;

			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float lookBehindCoolDownTime;

			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float maxLookBehindDistance;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxLookBehindAngle;

			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float celebrateDistance;
		}

		[Serializable]
		[Token(Token = "0x2000154")]
		public struct VisConfig
		{
			[Token(Token = "0x4000C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float lateral;

			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float forward;

			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float backward;
		}

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuConfig menuConfig;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MPConfig mpConfig;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BikeModelConfig[] bikeModels;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BikeConfig[] bikes;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject sciFiRacerPrefab;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject owlRacerPrefab;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public L18NConfig localizationConfig;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TooltipConfig tooltipConfig;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[ReadOnly]
		public CheatsConfig cheats;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public LevelBuildingConfig levelBuilding;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AnalyticsConfig analyticsConfig;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public VideoConfig videoConfig;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GraphicsConfig graphicsConfig;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public RaceConfig raceConfig;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public SpatialScaleConfig spatialScale;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public ComfortConfig comfortConfig;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public WeaponConfig weaponConfig;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public PerfConfig perfConfig;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public SoundConfig sound;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public RumbleConfig rumbleConfig;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public HomeScreenConfig homeScreenConfig;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public TrackObjectPrefabs trackObjectPrefabs;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public TrackObjectsConfig trackObjectsConfig;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public TrackMaterialConfig trackMaterialConfig;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public LevelsConfig levelsConfig;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public AIConfig aiConfig;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public DifficultyConfig[] difficultyParams;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public BlurGlobals.Difficulty defaultDifficulty;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public int defaultHelmetMode;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public int defaultLeanMode;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public MenuGUIConfig menuGUIConfig;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public RaceGUIConfig raceGUIConfig;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public RenderingConfig renderingConfig;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public MagnetEffectConfig magnetEffectConfig;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public AnimationConfig animationConfig;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public DebugConfig debugConfig;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE8C8", Offset = "0x9BE8C8")]
		public float maxLightViewDistance;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float maxLightViewDistanceSmoothStep;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public float maxLightViewDistanceAxial;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public float maxLightViewDistanceAxialSmoothStep;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public int maxLights;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public Color defaultLightColor;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public Color defaultFlareColor;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public Color defaultReflectionColor;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		private float frameInterval;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public float pauseDebouce;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public string assetsURL;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public string configURL;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public string devConfigURL;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public bool useRemoteConfig;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		public int staticAssetBundleVersion;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public int blurAssetBundleVersion;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		public bool streamAssetsInEditor;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public CylinderBlurConfig cylinderBlurConfig;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public int floorSize;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public int floorJump;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public float tileSize;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public int textureSize;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public int orthographicSize;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public int numTextures;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public int test;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public Color color1;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public Color color2;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		public int startAngle;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public int endAngle;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		public int angleStep;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE900", Offset = "0x9BE900")]
		public float branchProb;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		public int maxDepth;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		public float finalTileScale;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		public int channelLength;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		public int channelWidth;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		public int channelHeight;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		public int billboardTextureDim;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public Material greebleMat;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		public Material billboardMaterial;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE938", Offset = "0x9BE938")]
		public GameObject trenchGeo;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		public GameObject trenchBB;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE970", Offset = "0x9BE970")]
		public float billBoardHeight;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE9A8", Offset = "0x9BE9A8")]
		public Vector3 lightDir;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		public Color ambientLight;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		public Color lightColor;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		public float lightIntensity;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
		public Vector3 position;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		public Quaternion rotation;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE9E0", Offset = "0x9BE9E0")]
		public Material lightReflectionBakeMaterial;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEA18", Offset = "0x9BEA18")]
		public float stickSensitivity;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
		public float headStickSensitivity;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		public float deadZone;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		public float stabilizerSpeed;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BEA50", Offset = "0x9BEA50")]
		public float stabilizerConstant;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
		public float maxDeceleration;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		public float ringSpeedBoost;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		public bool boostsEnabled;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		public float friction;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
		public float trackEdgeThreshold;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		public float shipSize;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
		public bool gapDecelerationEnabled;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DD")]
		public bool gapDecelerationSteps;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		public float gapDecelerationStepInterval;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E4")]
		public float gapMaxSpeed;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEA88", Offset = "0x9BEA88")]
		public float collectibleBoostAmount;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEAC0", Offset = "0x9BEAC0")]
		public GameObject fakeCylinderPrefab;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		public AnimationCurve BlendStartForSpeed;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		public AnimationCurve BlendEndForSpeed;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		public float blendOffset;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		public VisConfig[] trackVisibilityRange;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		[SerializeField]
		public float groundBlurCamPitch;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEB08", Offset = "0x9BEB08")]
		public float pickupRespawnTime;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		public float pickupHoverHeight;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
		public float minFireSpeed;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		public float recordingLerp;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		public AnimationCurve boostVisibilityCurve;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		public Mesh[] wirebikes;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		public Vector3[] bikeHologramOffsets;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		public Vector3[] bikeHologramRotation;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		public float[] bikeHologramScale;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BlurConfig I;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		public DefaultParamsConfig defaultParams;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		public float droneFlashScreenDistance;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
		public float mouseInputScale;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		public Color[] bikeColors;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		public Material ghostMaterial;

		[Token(Token = "0x17000029")]
		public DifficultyConfig DiffParams
		{
			[Token(Token = "0x6000298")]
			[Address(RVA = "0xB662C8", Offset = "0xB662C8", VA = "0xB662C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		public float RecordFrameRate
		{
			[Token(Token = "0x6000299")]
			[Address(RVA = "0xB675A0", Offset = "0xB675A0", VA = "0xB675A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002B")]
		public float FrameInterval
		{
			[Token(Token = "0x600029B")]
			[Address(RVA = "0xB67714", Offset = "0xB67714", VA = "0xB67714")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002C")]
		public float PrimaryFrameInterval
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0xB6771C", Offset = "0xB6771C", VA = "0xB6771C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002D")]
		public bool HighPowerPlatform
		{
			[Token(Token = "0x600029D")]
			[Address(RVA = "0xB67794", Offset = "0xB67794", VA = "0xB67794")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0xB67614", Offset = "0xB67614", VA = "0xB67614")]
		public void UpdateFrameInterval()
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0xB6779C", Offset = "0xB6779C", VA = "0xB6779C")]
		public static void InitConfig()
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0xB678BC", Offset = "0xB678BC", VA = "0xB678BC")]
		public static float BlurLengthForTextureIndex(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xB67924", Offset = "0xB67924", VA = "0xB67924")]
		public bool TextureIndexForBlurLength(float blurLength, out int index, out float interpolation)
		{
			return default(bool);
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xB67A6C", Offset = "0xB67A6C", VA = "0xB67A6C")]
		public void ApplyConfigDictionary(Dictionary<string, string> dict)
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xB67B78", Offset = "0xB67B78", VA = "0xB67B78")]
		private void ApplyConfigOption(string pairKey, string pairValue)
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xB67DEC", Offset = "0xB67DEC", VA = "0xB67DEC")]
		public static BikeModelID GetPlayerBikeModel()
		{
			return default(BikeModelID);
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xB67E5C", Offset = "0xB67E5C", VA = "0xB67E5C")]
		public BlurConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000062")]
	public class CylinderBlurConfig
	{
		[Token(Token = "0x2000155")]
		public enum ParamsSetName
		{
			[Token(Token = "0x4000C3F")]
			Gear_RGB,
			[Token(Token = "0x4000C40")]
			Gear_RGB_Small,
			[Token(Token = "0x4000C41")]
			Gear_Blues,
			[Token(Token = "0x4000C42")]
			Gear_Blues_test,
			[Token(Token = "0x4000C43")]
			Gear_Ice_Blue
		}

		[Token(Token = "0x2000156")]
		public enum OutputType
		{
			[Token(Token = "0x4000C45")]
			Color,
			[Token(Token = "0x4000C46")]
			SpecularMap
		}

		[Token(Token = "0x2000157")]
		public enum Direction
		{
			[Token(Token = "0x4000C48")]
			Forward,
			[Token(Token = "0x4000C49")]
			Side,
			[Token(Token = "0x4000C4A")]
			Up
		}

		[Token(Token = "0x2000158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDCDC", Offset = "0x9BDCDC")]
		private sealed class <EnumerateBlurParams>d__8 : IEnumerable<BlurParams>, IEnumerable, IEnumerator<BlurParams>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private BlurParams <>2__current;

			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CylinderBlurConfig <>4__this;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float[] <>7__wrap1;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <length>5__4;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__5;

			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <signi>5__6;

			[Token(Token = "0x170000A2")]
			private BlurParams System.Collections.Generic.IEnumerator<BlurParams>.Current
			{
				[Token(Token = "0x600093A")]
				[Address(RVA = "0xB70788", Offset = "0xB70788", VA = "0xB70788", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(BlurParams);
				}
			}

			[Token(Token = "0x170000A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600093C")]
				[Address(RVA = "0xB707F4", Offset = "0xB707F4", VA = "0xB707F4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000937")]
			[Address(RVA = "0xB6FEEC", Offset = "0xB6FEEC", VA = "0xB6FEEC")]
			[DebuggerHidden]
			public <EnumerateBlurParams>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000938")]
			[Address(RVA = "0xB7064C", Offset = "0xB7064C", VA = "0xB7064C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000939")]
			[Address(RVA = "0xB70650", Offset = "0xB70650", VA = "0xB70650", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600093B")]
			[Address(RVA = "0xB70790", Offset = "0xB70790", VA = "0xB70790", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600093D")]
			[Address(RVA = "0xB70858", Offset = "0xB70858", VA = "0xB70858", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<BlurParams> System.Collections.Generic.IEnumerable<BlurParams>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600093E")]
			[Address(RVA = "0xB70908", Offset = "0xB70908", VA = "0xB70908", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int xSteps;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxAngle;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int angleStep;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] blurLengths;

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xB6FE58", Offset = "0xB6FE58", VA = "0xB6FE58")]
		public int AngleToIndex(int angle)
		{
			return default(int);
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xB6FE68", Offset = "0xB6FE68", VA = "0xB6FE68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0254", Offset = "0x9C0254")]
		public IEnumerable<BlurParams> EnumerateBlurParams()
		{
			return null;
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xB6FF24", Offset = "0xB6FF24", VA = "0xB6FF24")]
		public static string GetAssetBundleName(string sectionName, ParamsSetName paramsName, int angle, int lengthTimes10)
		{
			return null;
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xB700E4", Offset = "0xB700E4", VA = "0xB700E4")]
		public static Path GetBlurCompletePath(int angle, float length, string _sectionName, ParamsSetName paramsName_, Direction direction, OutputType outputType)
		{
			return null;
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xB7047C", Offset = "0xB7047C", VA = "0xB7047C")]
		public static Path GetStaticCompletePath(string _sectionName, ParamsSetName paramsName_, Direction direction, OutputType outputType)
		{
			return null;
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xB702C4", Offset = "0xB702C4", VA = "0xB702C4")]
		public static string GetBlurDirectoryName(int angle, float length, float pitch = 0f)
		{
			return null;
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xB70630", Offset = "0xB70630", VA = "0xB70630")]
		public int GetXStepsForDirection(Direction direction)
		{
			return default(int);
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xB70644", Offset = "0xB70644", VA = "0xB70644")]
		public CylinderBlurConfig()
		{
		}
	}
	[Token(Token = "0x2000063")]
	public class BEC
	{
		[Token(Token = "0x1700002E")]
		public static BlurEditorConfig I
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0xB85AB4", Offset = "0xB85AB4", VA = "0xB85AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xB85ABC", Offset = "0xB85ABC", VA = "0xB85ABC")]
		public BEC()
		{
		}
	}
	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD508", Offset = "0x9BD508")]
	public class BlurEditorConfig : SerializedScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000159")]
		public struct TrackObjectConfig
		{
			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material barrierPreviewMaterial;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material itemPreviewMaterial;

			[Token(Token = "0x4000C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh barrierFront;

			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh barrierLeft;

			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh barrierRight;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh barrierSide;

			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh barrierExtension;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float podBounce;
		}

		[Serializable]
		[Token(Token = "0x200015A")]
		public struct EnvConfig
		{
			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject[] wireFrameBlobs;

			[Token(Token = "0x4000C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int numBlobs;

			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 blobSpawnRange;
		}

		[Serializable]
		[Token(Token = "0x200015B")]
		public struct TrackRegionGenerator
		{
			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material defaultFrameMaterial;

			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF748", Offset = "0x9BF748")]
			public float tileUnitMeshLength;
		}

		[Serializable]
		[Token(Token = "0x200015C")]
		public struct Materials
		{
		}

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEngine.Object[] quickScenes;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackObjectConfig trackObjectConfig;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public EnvConfig envConfig;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TrackRegionGenerator trackRegionGeneratorConfig;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material canvasMaterial;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Dictionary<Material, Material> frameBuildMapping;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float vertexShadedSplineScaling;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TrackFrameRegion defaultDefaultFrameRegion;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector2 lightProbeSpacingTopLayer;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Vector2 lightProbeSpacingBottomLayer;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float lightProbeHeightTopLayer;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float lightProbeHeightBottomLayer;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Materials materials;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject nodePrefab;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public MaterialCopier defaultMaterialSchemeCopier;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject levelReflectionProbePrefab;

		[Token(Token = "0x1700002F")]
		public static BlurEditorConfig I
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0xB683F8", Offset = "0xB683F8", VA = "0xB683F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xB68400", Offset = "0xB68400", VA = "0xB68400")]
		public void FrameBuildMapping(ref MeshRenderer mr, [Optional] Material srcMat)
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xB6852C", Offset = "0xB6852C", VA = "0xB6852C")]
		public BlurEditorConfig()
		{
		}
	}
	[Token(Token = "0x2000065")]
	public class DDRumbleEditor : MonoBehaviour
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xB7090C", Offset = "0xB7090C", VA = "0xB7090C")]
		private void Update()
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xB70910", Offset = "0xB70910", VA = "0xB70910")]
		public DDRumbleEditor()
		{
		}
	}
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD544", Offset = "0x9BD544")]
	public class DebugConfig : ScriptableObject
	{
		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startArrayIndex;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeometryDump defaultGeometryDump;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ghostPrefab;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool pauseOnCrash;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool aiTakeNoBranches;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int randomSeed;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool keepBikeAILog;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int aiRacerIndexToShowDebug;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool aiDebugSounds;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 testPos2D;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string loggingURL;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float playbackSpeed;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector2 testDronePos;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float positionGraphSmoothing;

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xB70918", Offset = "0xB70918", VA = "0xB70918")]
		public DebugConfig()
		{
		}
	}
	[Token(Token = "0x2000067")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD580", Offset = "0x9BD580")]
	public class DefaultParamsConfig : SerializedScriptableObject
	{
		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, int> values;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<string, float> floatValues;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Dictionary<string, string> stringValues;

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xB70920", Offset = "0xB70920", VA = "0xB70920")]
		public DefaultParamsConfig()
		{
		}
	}
	[Token(Token = "0x2000068")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD5BC", Offset = "0x9BD5BC")]
	public class DifficultyConfig : ScriptableObject
	{
		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float baseCharacterSpeed;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float characterSpeedRange;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BEB40", Offset = "0x9BEB40")]
		public float switchValueWeight;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlurConfig.RaceBalancerConfig raceBalancer;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fastestLapScale;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float coinCollectScale;

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xB70D74", Offset = "0xB70D74", VA = "0xB70D74")]
		public DifficultyConfig()
		{
		}
	}
	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD5F8", Offset = "0x9BD5F8")]
	public class FollowCamParams : ScriptableObject
	{
		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distance;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yaw;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pitch;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float zoom;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aboveHead;

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xB77ABC", Offset = "0xB77ABC", VA = "0xB77ABC")]
		public FollowCamParams()
		{
		}
	}
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD634", Offset = "0x9BD634")]
	public class L18NConfig : SerializedScriptableObject
	{
		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, TMP_FontAsset> fontOverrides;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string[] enabledLanguages;

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xBB26D4", Offset = "0xBB26D4", VA = "0xBB26D4")]
		public L18NConfig()
		{
		}
	}
	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD670", Offset = "0x9BD670")]
	public class MenuConfig : SerializedScriptableObject
	{
		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color activeColor;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color normalColor;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject labelledMultipleChoice;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject labelledSlider;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject button;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject menu;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject label;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject textBlock;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject resultsScreen;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject unlockScreen;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject competitionSelect;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject eventSelectMenu;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject tierSelectMenu;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject SelectMenu;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject dummyEventSelectMenu;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject options;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject mainMenu;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject diffMenu;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject bikeMenu;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject quitMenu;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject raceopedia;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject helmetMenu;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject mpAlertsDialog;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject creditsScreen;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject multiPlayerLobby;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject leaderboardMenu;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject messageBox;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject bikeSelectLabel;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject singlePointIcon;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GameObject currentEventIcon;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Sprite GoldMedal;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Sprite SilverMedal;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Sprite BronzeMedal;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Mesh[] wireMedals;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Mesh[] solidMedals;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject medalPrefab;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Sprite lockedIcon;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Color[] pointIconColors;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Sprite singlePointIconInactive;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Sprite singlePointIconActive;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Sprite selectedEventIconInactive;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Sprite selectedEventIconActive;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Color disabledPointIconColor;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Sprite[] voltsIcons;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Vector3 dummyEventMenuSeparation;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float compSelectMoveCamDelay;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float compSelectFadeDuration;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public GameObject bikeSelectPreviewModelPrefab;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public GameObject raceLoadingScreen;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public GameObject raceLoadingScreen_NoControls;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public GameObject ringCollectLoadingScreen;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObject fastLapLoadingScreen;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public GameObject overlayPrefab;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Color[] medalWireColors;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Color[] medalBodyColors;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public Mesh wireLock;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Mesh solidLock;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public Color lockWireColor;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public Color locksolidColor;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public GameObject mpPlayerLine;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public float spinDuration;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public int maxEventQueueLength;

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xB43DC0", Offset = "0xB43DC0", VA = "0xB43DC0")]
		public Sprite GetMedalForVictory(LevelController.Victory vi)
		{
			return null;
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xB43DF8", Offset = "0xB43DF8", VA = "0xB43DF8")]
		public MenuConfig()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public static class Paths
	{
		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Path generatedMaterials;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Path generatedMeshes;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Path generatedTextures;
	}
	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD6AC", Offset = "0x9BD6AC")]
	public class PickupWeightings : ScriptableObject
	{
		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlurConfig.PickupWeight[] weight;

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xB4D214", Offset = "0xB4D214", VA = "0xB4D214")]
		public PickupWeightings()
		{
		}
	}
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD6E8", Offset = "0x9BD6E8")]
	public class RumbleConfig : SerializedScriptableObject
	{
		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<BikeSim.Event, RumbleController.Rumble> eventRumbles;

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xB98C44", Offset = "0xB98C44", VA = "0xB98C44")]
		public RumbleConfig()
		{
		}
	}
	[Token(Token = "0x200006F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD724", Offset = "0x9BD724")]
	public class SFXConfig : SerializedScriptableObject
	{
		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundEffect beep;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SoundEffect uiChange;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SoundEffect timerReset;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SoundEffect iceCrystal;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SoundEffect startingLightOn;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundEffect startingLightOff;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SoundEffect flatBattery;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SoundEffect bikeLocked;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioSourceConfig engineConfig;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioSourceConfig engineWarmupSoundConfig;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioSourceConfig boostHumConfig;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioSourceConfig iceArmedConfig;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioSourceConfig immuneSoundConfig;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Dictionary<BikeSim.Event, SoundEffect> eventSounds;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SoundEffect disableRings;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SoundEffect missedRing;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public SoundEffect countup3;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public SoundEffect underAttackSound;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SoundEffect nearbyTeleport;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SoundEffect playerInLobbyAlert;

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xB98C4C", Offset = "0xB98C4C", VA = "0xB98C4C")]
		public SFXConfig()
		{
		}
	}
	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD760", Offset = "0x9BD760")]
	public class SplinePilot : ScriptableObject
	{
		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve stick;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve throttle;

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xBA0E8C", Offset = "0xBA0E8C", VA = "0xBA0E8C")]
		public SplinePilot()
		{
		}
	}
	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD79C", Offset = "0x9BD79C")]
	public class VideoConfig : ScriptableObject
	{
		[Token(Token = "0x200015D")]
		public enum CameraMode
		{
			[Token(Token = "0x4000C62")]
			Default,
			[Token(Token = "0x4000C63")]
			Custom,
			[Token(Token = "0x4000C64")]
			Follow,
			[Token(Token = "0x4000C65")]
			Fixed
		}

		[Token(Token = "0x200015E")]
		public enum ImmuneTrailsMode
		{
			[Token(Token = "0x4000C67")]
			Always,
			[Token(Token = "0x4000C68")]
			BatteryFull,
			[Token(Token = "0x4000C69")]
			Never
		}

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoScript script;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool recordInput;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool exportFrames;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int subFrames;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BEB78", Offset = "0x9BEB78")]
		public bool playbackNonPlayerBikeStates;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float leanScaleOverride;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CameraMode cameraMode;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject characterPrefab;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lightTextureWrapOffset;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEBB0", Offset = "0x9BEBB0")]
		public float cameraLeanScale;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float camHeight;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEBE8", Offset = "0x9BEBE8")]
		public FollowCamParams extra;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FollowCamParams current;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FollowCamParams next;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FollowCamParams[] followCams;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEC20", Offset = "0x9BEC20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BEC20", Offset = "0x9BEC20")]
		public float lerpPos;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lerpTime;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BEC74", Offset = "0x9BEC74")]
		public float rotLockLerp;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 fixedPos;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion fixedRot;

		[NonSerialized]
		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Quaternion headRot;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ImmuneTrailsMode immuneTrailsMode;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool overrideMPNamesEnabled;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string[] overrideMPNames;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float timeScale_;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int activeSubFrames;

		[Token(Token = "0x17000030")]
		public float timeScale
		{
			[Token(Token = "0x60002C1")]
			[Address(RVA = "0xBAFCEC", Offset = "0xBAFCEC", VA = "0xBAFCEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002C2")]
			[Address(RVA = "0xBAFCF4", Offset = "0xBAFCF4", VA = "0xBAFCF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public bool FromAbove
		{
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0xBAFD8C", Offset = "0xBAFD8C", VA = "0xBAFD8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000032")]
		public bool IsScripted
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0xBAFD9C", Offset = "0xBAFD9C", VA = "0xBAFD9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000004")]
		public event Action OnPlaybackRestart
		{
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0xBAFDA4", Offset = "0xBAFDA4", VA = "0xBAFDA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C02B8", Offset = "0x9C02B8")]
			add
			{
			}
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0xBAFE48", Offset = "0xBAFE48", VA = "0xBAFE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C02C8", Offset = "0x9C02C8")]
			remove
			{
			}
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xBAFCFC", Offset = "0xBAFCFC", VA = "0xBAFCFC")]
		public void SetActiveSubFrames(int subFrames)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xBAFEEC", Offset = "0xBAFEEC", VA = "0xBAFEEC")]
		public void InvokeOnPlaybackRestart()
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xBAFF00", Offset = "0xBAFF00", VA = "0xBAFF00")]
		public bool IsSubFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xBAFF08", Offset = "0xBAFF08", VA = "0xBAFF08")]
		public BlurConfig.BikeModelID GetPlayerBikeModel()
		{
			return default(BlurConfig.BikeModelID);
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xBAFFC0", Offset = "0xBAFFC0", VA = "0xBAFFC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xBAFFCC", Offset = "0xBAFFCC", VA = "0xBAFFCC")]
		public VideoConfig()
		{
		}
	}
	[Token(Token = "0x2000072")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD7D8", Offset = "0x9BD7D8")]
	public class VideoScript : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200015F")]
		public struct Event
		{
			[Token(Token = "0x2000218")]
			public enum Type
			{
				[Token(Token = "0x4000FDE")]
				CAM_FOLLOW_MODE,
				[Token(Token = "0x4000FDF")]
				CAM_FOLLOW_MODE_BLEND,
				[Token(Token = "0x4000FE0")]
				CAM_DEFAULT,
				[Token(Token = "0x4000FE1")]
				GIVE_PICKUP,
				[Token(Token = "0x4000FE2")]
				ACTIVATE_PICKUP,
				[Token(Token = "0x4000FE3")]
				SET_BIKE_PLAYBACK_SPEED,
				[Token(Token = "0x4000FE4")]
				SET_EXTENDED_CRYSTAL_DURATION,
				[Token(Token = "0x4000FE5")]
				SET_LEAN_SCALE_OVERRIDE,
				[Token(Token = "0x4000FE6")]
				DROP_MINE,
				[Token(Token = "0x4000FE7")]
				ANIMATION,
				[Token(Token = "0x4000FE8")]
				SPLINE_PILOT,
				[Token(Token = "0x4000FE9")]
				KNOCK_CAMERA,
				[Token(Token = "0x4000FEA")]
				TRIGGER_ANIMATION,
				[Token(Token = "0x4000FEB")]
				SHOW_CHECKERED_FLAG,
				[Token(Token = "0x4000FEC")]
				HIDE_FINISH_LINE_FIELD,
				[Token(Token = "0x4000FED")]
				LINEAR_OFFSET_FROM_LEAD_BIKE,
				[Token(Token = "0x4000FEE")]
				SET_POWER_PACK
			}

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int frameIndex;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int targetFrameIndex;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int overallFrameIndex;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Type type;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FollowCamParams followModeParams;

			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimpleTrack.PickupType pickupType;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int bikeTarget;

			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RacerAnimController.RiderAnimTrigger animTrigger;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float playbackSpeed;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float value;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SplinePilot splinePilot;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 vector;

			[NonSerialized]
			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool fired;
		}

		[Token(Token = "0x2000160")]
		public struct LeadBikeOffset
		{
			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float startTime;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 initialOffset;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 relativeSpeed;
		}

		[Serializable]
		[Token(Token = "0x2000161")]
		public class BikeRouteConfig
		{
			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextAsset recording;

			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int recordedBikeIndex;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int startFrame;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float positionXOffset;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float positionYOffset;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 wobbleAmp;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 wobbleFreq;

			[NonSerialized]
			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PlaybackCache playbackCache_;

			[NonSerialized]
			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TextAsset cachedRecording;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public BlurConfig.BikeModelID bikeModel;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public BlurConfig.BikeColor bikeColor;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public RiderModelManager.RiderModel riderModel;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool ghostMode;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
			public bool downLightEnabled;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
			public bool trailEnabled;

			[NonSerialized]
			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float playbackFrameIndex;

			[NonSerialized]
			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float playbackSpeed;

			[NonSerialized]
			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public SplinePilot splinePilot;

			[NonSerialized]
			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float splinePilotStart;

			[NonSerialized]
			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float prevFrameVel;

			[NonSerialized]
			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LeadBikeOffset leadBikeOffset;

			[Token(Token = "0x170000A4")]
			public PlaybackCache playbackCache
			{
				[Token(Token = "0x600093F")]
				[Address(RVA = "0xBB00E4", Offset = "0xBB00E4", VA = "0xBB00E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000940")]
			[Address(RVA = "0xBB021C", Offset = "0xBB021C", VA = "0xBB021C")]
			public List<PlaybackCache.BikeFrame> GetFrameList()
			{
				return null;
			}

			[Token(Token = "0x6000941")]
			[Address(RVA = "0xBB0108", Offset = "0xBB0108", VA = "0xBB0108")]
			internal void Recache()
			{
			}

			[Token(Token = "0x6000942")]
			[Address(RVA = "0xBB02AC", Offset = "0xBB02AC", VA = "0xBB02AC")]
			public float GetCurrentFrame()
			{
				return default(float);
			}

			[Token(Token = "0x6000943")]
			[Address(RVA = "0xBB02C0", Offset = "0xBB02C0", VA = "0xBB02C0")]
			public BikeRouteConfig()
			{
			}
		}

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEC9C", Offset = "0x9BEC9C")]
		public float duration;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int slowMotionFactor;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool trailWarmup;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int trailWarmupFrameCount;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BECD4", Offset = "0x9BECD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BECD4", Offset = "0x9BECD4")]
		public float initialBattery;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SimpleTrack.PickupType initialPickup;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SimpleTrack.PickupType nextPickup;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool forceNoInitialPickup;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool lockThrottleDown;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool autoTeleportMainPlayer;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BED28", Offset = "0x9BED28")]
		public bool doBoostEffect;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool showMPNames;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool showEnergyField;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool stablizeNameTags;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BED60", Offset = "0x9BED60")]
		public bool muteRingSounds;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool muteGapClicks;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BED98", Offset = "0x9BED98")]
		public bool headOrientationEnabled;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int lookAtBikeIndex;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int followBikeIndex;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool headOrientationWithTrackUp;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float speedDeltaForCameraKnock;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 cameraKnockImpulse;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float LookAheadDistance;

		[NonSerialized]
		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lookBehindDistanceFromTeleport;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float overrideBikeXPosForCam;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float lookUpDegrees;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VideoConfig.CameraMode initialCameraMode;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useFovCurve;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve fovCurve;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float teleportLookBehindDecayRate;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BEDD0", Offset = "0x9BEDD0")]
		public float cameraLeanScale;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float cameraHeight;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEE08", Offset = "0x9BEE08")]
		public Vector2 droneExplosionOffset;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool prolongFreeze;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool useCloseupDroneCurve;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float tweak1;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float tweak2;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float tweak3;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float tweak4;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string fixedCameraTransform;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool allowColorBlendSeqs;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool hideBoundaries;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FollowCamParams initialFollowMode;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float lightTextureWrapOffset;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Event[] events;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector2[] mines;

		[Token(Token = "0x400044E")]
		private const int maxBikes = 4;

		[Token(Token = "0x400044F")]
		private const float FPS = 60f;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int repeats;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool resetThisRunThrough;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int playbackFrameIndex;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int playbackSubFrameIndex;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int videoFrameIndex;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool exportingFrames;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int countDownToRestartEvent;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int lastEvent;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<int> droppedMines;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public BikeRouteConfig[] bikeConfigs;

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xBAFFEC", Offset = "0xBAFFEC", VA = "0xBAFFEC")]
		public VideoScript()
		{
		}
	}
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD814", Offset = "0x9BD814")]
	internal class VideoScript_DualOutput : VideoScript
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int extraLayer;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture rt;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private RenderTexture rtAlphaFix;

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xBCF6A4", Offset = "0xBCF6A4", VA = "0xBCF6A4")]
		public VideoScript_DualOutput()
		{
		}
	}
	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD850", Offset = "0x9BD850")]
	public class VideoScript_TrackSpin : VideoScript
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float startAngle;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float spinSpeed;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BEE40", Offset = "0x9BEE40")]
		public float radius;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Vector3 center;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Vector3 extraRot;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Vector3 spinAxisEulerRotation;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float focusHeight;

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xBCF6AC", Offset = "0xBCF6AC", VA = "0xBCF6AC")]
		public VideoScript_TrackSpin()
		{
		}
	}
	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD88C", Offset = "0x9BD88C")]
	public class VoiceConfig : SerializedScriptableObject
	{
		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundEffect raceComplete;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SoundEffect finalLap;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SoundEffect twoLapsRemaining;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SoundEffect goldVictory;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SoundEffect silverVictory;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundEffect bronzeVictory;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SoundEffect fastestLap;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SoundEffect firstPlace;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SoundEffect secondPlace;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SoundEffect thirdPlace;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SoundEffect powerpackDepleted;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Dictionary<SimpleTrack.PickupType, SoundEffect> pickupNames;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SoundEffect ringModeStart;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public SoundEffect fastLapModeStart;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SoundEffect ringsDisabledVoicePrompt;

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xBCFF54", Offset = "0xBCFF54", VA = "0xBCFF54")]
		public VoiceConfig()
		{
		}
	}
	[Token(Token = "0x2000076")]
	public class CurvedTrackComponentManager : MonoBehaviour
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xB6FE50", Offset = "0xB6FE50", VA = "0xB6FE50")]
		public CurvedTrackComponentManager()
		{
		}
	}
	[Token(Token = "0x2000077")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD8C8", Offset = "0x9BD8C8")]
	public class TrackColorScheme : ScriptableObject
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColorProcessing bakeColor;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color ledOff;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ledOn;

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xBA6F6C", Offset = "0xBA6F6C", VA = "0xBA6F6C")]
		public TrackColorScheme()
		{
		}
	}
	[Token(Token = "0x2000078")]
	public class TrackEdgeCache : MonoBehaviour
	{
		[Token(Token = "0x2000162")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDCEC", Offset = "0x9BDCEC")]
		private sealed class <GetPoints>d__7 : IEnumerable<Vector2>, IEnumerable, IEnumerator<Vector2>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector2 <>2__current;

			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackEdgeCache <>4__this;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<Vector2>[] <>7__wrap1;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Vector2>.Enumerator <>7__wrap3;

			[Token(Token = "0x170000A5")]
			private Vector2 System.Collections.Generic.IEnumerator<UnityEngine.Vector2>.Current
			{
				[Token(Token = "0x6000948")]
				[Address(RVA = "0xBA7B18", Offset = "0xBA7B18", VA = "0xBA7B18", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170000A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600094A")]
				[Address(RVA = "0xBA7B84", Offset = "0xBA7B84", VA = "0xBA7B84", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000944")]
			[Address(RVA = "0xBA74BC", Offset = "0xBA74BC", VA = "0xBA74BC")]
			[DebuggerHidden]
			public <GetPoints>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000945")]
			[Address(RVA = "0xBA7858", Offset = "0xBA7858", VA = "0xBA7858", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000946")]
			[Address(RVA = "0xBA78CC", Offset = "0xBA78CC", VA = "0xBA78CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000947")]
			[Address(RVA = "0xBA7874", Offset = "0xBA7874", VA = "0xBA7874")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000949")]
			[Address(RVA = "0xBA7B20", Offset = "0xBA7B20", VA = "0xBA7B20", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600094B")]
			[Address(RVA = "0xBA7BE8", Offset = "0xBA7BE8", VA = "0xBA7BE8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector2> System.Collections.Generic.IEnumerable<UnityEngine.Vector2>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600094C")]
			[Address(RVA = "0xBA7C98", Offset = "0xBA7C98", VA = "0xBA7C98", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D track;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float threshold;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector2>[] edgePointsByY;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private iVector2 imageSize;

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xBA6F7C", Offset = "0xBA6F7C", VA = "0xBA6F7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C02D8", Offset = "0x9C02D8")]
		public void BuildCache()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xBA71D4", Offset = "0xBA71D4", VA = "0xBA71D4")]
		private void Traverse(int traversalAxis, int otherAxis, int tDim, int oDim)
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xBA7394", Offset = "0xBA7394", VA = "0xBA7394")]
		private void AddPoint(Vector2 surfacePoint)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xBA7438", Offset = "0xBA7438", VA = "0xBA7438")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0310", Offset = "0x9C0310")]
		public IEnumerable<Vector2> GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xBA74F4", Offset = "0xBA74F4", VA = "0xBA74F4")]
		public bool TestCircleOverlap(Vector2 centre, float radius, out Vector2 nearestPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xBA7850", Offset = "0xBA7850", VA = "0xBA7850")]
		public TrackEdgeCache()
		{
		}
	}
	[Token(Token = "0x2000079")]
	public class TrackSection : MonoBehaviour
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Track.TrackStatus status;

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xBA9B3C", Offset = "0xBA9B3C", VA = "0xBA9B3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xBA9B40", Offset = "0xBA9B40", VA = "0xBA9B40")]
		private void Update()
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xBA9B44", Offset = "0xBA9B44", VA = "0xBA9B44", Slot = "4")]
		public virtual void UpdateVisibility(Vector3 position)
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xBA9B48", Offset = "0xBA9B48", VA = "0xBA9B48", Slot = "5")]
		public virtual void SetState(Track.TrackStatus status)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xBA9B50", Offset = "0xBA9B50", VA = "0xBA9B50")]
		public TrackSection()
		{
		}
	}
	[Token(Token = "0x200007A")]
	public class DroneAttackEffect : MonoBehaviour
	{
		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer billboard;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer sphere;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem ps;

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xB70D84", Offset = "0xB70D84", VA = "0xB70D84")]
		public void SetEffective(bool effective)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xB70DC0", Offset = "0xB70DC0", VA = "0xB70DC0")]
		public DroneAttackEffect()
		{
		}
	}
	[Token(Token = "0x200007B")]
	public class ColorMapApplicator : MonoBehaviour
	{
		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColorProcessing colorMap;

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xB69E64", Offset = "0xB69E64", VA = "0xB69E64")]
		private void Update()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xB69EE4", Offset = "0xB69EE4", VA = "0xB69EE4")]
		public ColorMapApplicator()
		{
		}
	}
	[Token(Token = "0x200007C")]
	public class InEditorCameraController : MonoBehaviour
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool globalMode;

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xBB1F84", Offset = "0xBB1F84", VA = "0xBB1F84")]
		private void Update()
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xBB253C", Offset = "0xBB253C", VA = "0xBB253C")]
		public void SetPosition()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xBB2614", Offset = "0xBB2614", VA = "0xBB2614")]
		public InEditorCameraController()
		{
		}
	}
	[Token(Token = "0x200007D")]
	public class MineExplosionTester : MonoBehaviour
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xPos;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yPos;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip clip;

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xB443DC", Offset = "0xB443DC", VA = "0xB443DC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0374", Offset = "0x9C0374")]
		public void Explode()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xB446A8", Offset = "0xB446A8", VA = "0xB446A8")]
		public MineExplosionTester()
		{
		}
	}
	[Token(Token = "0x200007E")]
	public class BikeHologramController : MonoBehaviour
	{
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter hologramWireMesh;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshFilter hologramBodyMesh;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator hologramAnimator;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HologramAnimationForwarder hologramAnimationForwarder;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform anchor;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool bikeIsBlurredOut;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float smoothedBikeIsBlurredOut;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int overrideModelIndex;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int mainModelIndex;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int modelIndexToDisplay;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int currentModelIndex;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool animatorVar_active;

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xB90BB4", Offset = "0xB90BB4", VA = "0xB90BB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xB90C98", Offset = "0xB90C98", VA = "0xB90C98")]
		public void SetOverrideIndex(int index)
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xB90EA4", Offset = "0xB90EA4", VA = "0xB90EA4")]
		public void SetMainIndex(int index)
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xB90EAC", Offset = "0xB90EAC", VA = "0xB90EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xB90CA0", Offset = "0xB90CA0", VA = "0xB90CA0")]
		private void Recalc()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xB912D0", Offset = "0xB912D0", VA = "0xB912D0")]
		private void OnAnimEvent(AnimationEventForwarder.Event @event)
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xB90EB0", Offset = "0xB90EB0", VA = "0xB90EB0")]
		private void SetHologramModels(int bikeIndex)
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xB91304", Offset = "0xB91304", VA = "0xB91304")]
		private void Update()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xB914F8", Offset = "0xB914F8", VA = "0xB914F8")]
		public BikeHologramController()
		{
		}
	}
	[Token(Token = "0x200007F")]
	public class BikeTrailEmitter : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RacerBase racer;

		[NonSerialized]
		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 lastPos2D;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int trailIndex;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] posArray;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2[] posArray2D;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int nextAveIndex;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool fullSet;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int pointsSet;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float smoothedImmune;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 prevPos3D;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int remainingClearPoints;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastUnsmoothedYPos;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float yOffsetDueToLaps;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float magnetEffectUntil;

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xB62768", Offset = "0xB62768", VA = "0xB62768")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xB62910", Offset = "0xB62910", VA = "0xB62910")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xB62914", Offset = "0xB62914", VA = "0xB62914")]
		private void VideoConfig_OnPlaybackRestart()
		{
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xB62ACC", Offset = "0xB62ACC", VA = "0xB62ACC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xB62B24", Offset = "0xB62B24", VA = "0xB62B24")]
		private void Start()
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xB62B28", Offset = "0xB62B28", VA = "0xB62B28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xB62918", Offset = "0xB62918", VA = "0xB62918")]
		public void ResetState()
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xB62BCC", Offset = "0xB62BCC", VA = "0xB62BCC")]
		public void SetMagnetEffect()
		{
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xB62C6C", Offset = "0xB62C6C", VA = "0xB62C6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xB63880", Offset = "0xB63880", VA = "0xB63880")]
		public BikeTrailEmitter()
		{
		}
	}
	[Token(Token = "0x2000080")]
	public class FlyerSpawner : MonoBehaviour
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrailGroup trailGroup;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform routeRoot;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform modifiedRouteRoot;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject flyerPrefab;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float spawnIntervalMin;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float spawnIntervalMax;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool applyRandomRotation;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool waitForRoomBeforeSpawning;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float fadeInDuration_;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float fadeOutDuration;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float startProportion;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool initialBurst;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int initialBurstSize;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BEE98", Offset = "0x9BEE98")]
		public float randomizeSpeed;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<BSplineTrackEditor> splines;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<SplineFlyer> flyers;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nextRoute;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float nextSpawnTime;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nextSpawnCount;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool firstStart;

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xB76FC0", Offset = "0xB76FC0", VA = "0xB76FC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xB77030", Offset = "0xB77030", VA = "0xB77030")]
		private void Start()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xB77464", Offset = "0xB77464", VA = "0xB77464")]
		private int ChooseNextSpawnCount()
		{
			return default(int);
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xB7748C", Offset = "0xB7748C", VA = "0xB7748C")]
		private void LapCompleteCallback(SplineFlyer flyer)
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xB774B0", Offset = "0xB774B0", VA = "0xB774B0")]
		private void FadeOutCompleteCallback(SplineFlyer flyer)
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xB77630", Offset = "0xB77630", VA = "0xB77630")]
		private void Update()
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0xB77524", Offset = "0xB77524", VA = "0xB77524")]
		private void DestroyFlyer(SplineFlyer flyer)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0xB771F0", Offset = "0xB771F0", VA = "0xB771F0")]
		private void SpawnNewFlyer()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xB77768", Offset = "0xB77768", VA = "0xB77768")]
		private BSplineTrackEditor GetNextSpline()
		{
			return null;
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0xB778F8", Offset = "0xB778F8", VA = "0xB778F8")]
		private void ResetFlyers()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xB77A38", Offset = "0xB77A38", VA = "0xB77A38")]
		public FlyerSpawner()
		{
		}
	}
	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD8D8", Offset = "0x9BD8D8")]
	public class LevelColorScheme : ScriptableObject
	{
		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleColorCorrectState[] extraColorCorrect;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleColorCorrectState levelColorCorrectOverride;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialCopier materialSource;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material skyboxMaterial;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool showForceField;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool bloodItems;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool rainbow;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[FolderPath]
		public string frameMaterialDir;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color lightColor;

		[Token(Token = "0x6000306")]
		[Address(RVA = "0xBB26DC", Offset = "0xBB26DC", VA = "0xBB26DC")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0xBB2828", Offset = "0xBB2828", VA = "0xBB2828")]
		public void Unapply()
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xBB29A4", Offset = "0xBB29A4", VA = "0xBB29A4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0384", Offset = "0x9C0384")]
		public void ApplyNow()
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0xBB2A30", Offset = "0xBB2A30", VA = "0xBB2A30")]
		public void UnapplyColorScheme()
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xBB2ABC", Offset = "0xBB2ABC", VA = "0xBB2ABC")]
		public LevelColorScheme()
		{
		}
	}
	[Token(Token = "0x2000082")]
	public class NameTagAligner : MonoBehaviour
	{
		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RacerBase racer;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer mr;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material mat;

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xB4C744", Offset = "0xB4C744", VA = "0xB4C744")]
		private void Awake()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0xB4C7B0", Offset = "0xB4C7B0", VA = "0xB4C7B0")]
		public void SetNameIndex(int n)
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xB4C81C", Offset = "0xB4C81C", VA = "0xB4C81C")]
		public void Update()
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xB4CCB0", Offset = "0xB4CCB0", VA = "0xB4CCB0")]
		public NameTagAligner()
		{
		}
	}
	[Token(Token = "0x2000083")]
	public class RainbowColor
	{
		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 _Dir_1;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Vector3 _Dir_2;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3 _Dir_3;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static Vector3 _Dir_4;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector3 _Dir_5;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static Vector3 _Color_1;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Vector3 _Color_2;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static Vector3 _Color_3;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Vector3 _Color_4;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static Vector3 _Color_5;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static float _Exposure;

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xB597EC", Offset = "0xB597EC", VA = "0xB597EC")]
		public static float factor(Vector3 n, Vector3 d)
		{
			return default(float);
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0xB598DC", Offset = "0xB598DC", VA = "0xB598DC")]
		public static Color ColorBlend(Vector3 normal)
		{
			return default(Color);
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xB59B94", Offset = "0xB59B94", VA = "0xB59B94")]
		public RainbowColor()
		{
		}
	}
	[Token(Token = "0x2000084")]
	public class SplineFlyer : MonoBehaviour
	{
		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BSplineTrackEditor spline;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool fadeOutFinalSegment;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer mr;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TrailEmitter emitter;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float pos;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float splineLen;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool fadingOut;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float fadeoutFinish;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float fadeInStart;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float fadeInDuration;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool finalSegmentSent;

		[Token(Token = "0x14000005")]
		public event Action<SplineFlyer> OnLapComplete
		{
			[Token(Token = "0x6000313")]
			[Address(RVA = "0xBA05A4", Offset = "0xBA05A4", VA = "0xBA05A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0394", Offset = "0x9C0394")]
			add
			{
			}
			[Token(Token = "0x6000314")]
			[Address(RVA = "0xBA0648", Offset = "0xBA0648", VA = "0xBA0648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C03A4", Offset = "0x9C03A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event Action<SplineFlyer> OnFadeOutComplete
		{
			[Token(Token = "0x6000315")]
			[Address(RVA = "0xBA06EC", Offset = "0xBA06EC", VA = "0xBA06EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C03B4", Offset = "0x9C03B4")]
			add
			{
			}
			[Token(Token = "0x6000316")]
			[Address(RVA = "0xBA0790", Offset = "0xBA0790", VA = "0xBA0790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C03C4", Offset = "0x9C03C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event Action<SplineFlyer> OnFinalSegment
		{
			[Token(Token = "0x6000317")]
			[Address(RVA = "0xBA0834", Offset = "0xBA0834", VA = "0xBA0834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C03D4", Offset = "0x9C03D4")]
			add
			{
			}
			[Token(Token = "0x6000318")]
			[Address(RVA = "0xBA08D8", Offset = "0xBA08D8", VA = "0xBA08D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C03E4", Offset = "0x9C03E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xBA097C", Offset = "0xBA097C", VA = "0xBA097C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0xBA0A08", Offset = "0xBA0A08", VA = "0xBA0A08")]
		private void Start()
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0xBA0A2C", Offset = "0xBA0A2C", VA = "0xBA0A2C")]
		public void SetPos(float proportionComplete)
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xBA0A74", Offset = "0xBA0A74", VA = "0xBA0A74")]
		public void StartFadeOut(float waitTime)
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xBA0B0C", Offset = "0xBA0B0C", VA = "0xBA0B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xBA0E40", Offset = "0xBA0E40", VA = "0xBA0E40")]
		public void Reset()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xBA0E48", Offset = "0xBA0E48", VA = "0xBA0E48")]
		public void SetFadeInTime(float fadeInDuration)
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xBA0E7C", Offset = "0xBA0E7C", VA = "0xBA0E7C")]
		public SplineFlyer()
		{
		}
	}
	[Token(Token = "0x2000085")]
	public class TrackFire : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000163")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDCFC", Offset = "0x9BDCFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RacerBase, bool> <>9__18_0;

			[Token(Token = "0x600094E")]
			[Address(RVA = "0xBA8810", Offset = "0xBA8810", VA = "0xBA8810")]
			public <>c()
			{
			}

			[Token(Token = "0x600094F")]
			[Address(RVA = "0xBA8818", Offset = "0xBA8818", VA = "0xBA8818")]
			internal bool <Update>b__18_0(RacerBase racer)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderTexture activeRT;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture a;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture b;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture other;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material simulateMat;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material setWallsMat;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material addImpact;

		[Token(Token = "0x40004DF")]
		private const float textureScale = 1f;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int width;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int height;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material displayMat;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaceController raceController;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 mousePos;

		[Token(Token = "0x17000033")]
		public RenderTexture ActiveRT
		{
			[Token(Token = "0x6000321")]
			[Address(RVA = "0xBA7C9C", Offset = "0xBA7C9C", VA = "0xBA7C9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xBA7CA4", Offset = "0xBA7CA4", VA = "0xBA7CA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xBA7F28", Offset = "0xBA7F28", VA = "0xBA7F28")]
		private void ClearRT(RenderTexture rt)
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xBA7EB0", Offset = "0xBA7EB0", VA = "0xBA7EB0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xBA8010", Offset = "0xBA8010", VA = "0xBA8010")]
		public void Update()
		{
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0xBA8200", Offset = "0xBA8200", VA = "0xBA8200")]
		private void AddImpact(IEnumerable<Vector2> posEnumerable)
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xBA86CC", Offset = "0xBA86CC", VA = "0xBA86CC")]
		public TrackFire()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0xBA86DC", Offset = "0xBA86DC", VA = "0xBA86DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C03F4", Offset = "0x9C03F4")]
		private Vector2 <Update>b__18_1(RacerBase x)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000086")]
	public class TrailEmitter : MonoBehaviour
	{
		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEF10", Offset = "0x9BEF10")]
		public Color trailColor;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrailGroup trailGroup;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxTrailStepLength;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int averageFrames;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int trailIndex;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 prevPos3D;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] posArray;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int remainingClearPoints;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int nextAveIndex;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool fullSet;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int pointsSet;

		[Token(Token = "0x6000329")]
		[Address(RVA = "0xBA9B58", Offset = "0xBA9B58", VA = "0xBA9B58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xBA9D3C", Offset = "0xBA9D3C", VA = "0xBA9D3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0xBA9E60", Offset = "0xBA9E60", VA = "0xBA9E60")]
		private void Update()
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xBAA3B0", Offset = "0xBAA3B0", VA = "0xBAA3B0")]
		public TrailEmitter()
		{
		}
	}
	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD914", Offset = "0x9BD914")]
	public class TrailGroup : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000164")]
		public struct Config
		{
			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int maxTrails;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BF780", Offset = "0x9BF780")]
			public int textureWidth;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int numVertPoints;

			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 min_3D;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 range_3D;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool enable2D;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 min_2D;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 range_2D;
		}

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Config config;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool applyLineWidthToMaterial;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lineWidth;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int addPointFrameInterval;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool enableBulge;

		[Token(Token = "0x600032D")]
		[Address(RVA = "0xBAA3CC", Offset = "0xBAA3CC", VA = "0xBAA3CC")]
		public TrailGroup()
		{
		}
	}
	[Token(Token = "0x2000088")]
	public class TrailRenderer : MonoBehaviour
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrailGroup trailGroup;

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xBAEAF8", Offset = "0xBAEAF8", VA = "0xBAEAF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0xBAEBF0", Offset = "0xBAEBF0", VA = "0xBAEBF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0xBAEF50", Offset = "0xBAEF50", VA = "0xBAEF50")]
		public TrailRenderer()
		{
		}
	}
	[Token(Token = "0x2000089")]
	public class FadeControl : SingletonMono<FadeControl>
	{
		[Token(Token = "0x2000165")]
		public enum FadeReason
		{
			[Token(Token = "0x4000CA2")]
			NoReason,
			[Token(Token = "0x4000CA3")]
			RespawnWarning,
			[Token(Token = "0x4000CA4")]
			Respawn,
			[Token(Token = "0x4000CA5")]
			ChangeScene
		}

		[Token(Token = "0x2000166")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD0C", Offset = "0x9BDD0C")]
		private sealed class <Fade_CR>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FadeControl <>4__this;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float from;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float to;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public FadeReason reason;

			[Token(Token = "0x4000CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170000A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000953")]
				[Address(RVA = "0xB71AB8", Offset = "0xB71AB8", VA = "0xB71AB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000955")]
				[Address(RVA = "0xB71B24", Offset = "0xB71B24", VA = "0xB71B24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000950")]
			[Address(RVA = "0xB7152C", Offset = "0xB7152C", VA = "0xB7152C")]
			[DebuggerHidden]
			public <Fade_CR>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6000951")]
			[Address(RVA = "0xB71930", Offset = "0xB71930", VA = "0xB71930", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000952")]
			[Address(RVA = "0xB71934", Offset = "0xB71934", VA = "0xB71934", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000954")]
			[Address(RVA = "0xB71AC0", Offset = "0xB71AC0", VA = "0xB71AC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000167")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD1C", Offset = "0x9BDD1C")]
		private sealed class <DipFade_CR>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FadeControl <>4__this;

			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FadeReason reason;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action midway;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action done;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__2;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <half>5__3;

			[Token(Token = "0x170000A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000959")]
				[Address(RVA = "0xB718BC", Offset = "0xB718BC", VA = "0xB718BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600095B")]
				[Address(RVA = "0xB71928", Offset = "0xB71928", VA = "0xB71928", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000956")]
			[Address(RVA = "0xB7162C", Offset = "0xB7162C", VA = "0xB7162C")]
			[DebuggerHidden]
			public <DipFade_CR>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000957")]
			[Address(RVA = "0xB716C8", Offset = "0xB716C8", VA = "0xB716C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000958")]
			[Address(RVA = "0xB716CC", Offset = "0xB716CC", VA = "0xB716CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600095A")]
			[Address(RVA = "0xB718C4", Offset = "0xB718C4", VA = "0xB718C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] fadeByReason;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float defaultFadeDuration;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isFading;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentFade;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FadeReason currentFadeReason;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock propBlock;

		[Token(Token = "0x17000034")]
		public bool IsFading
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0xB70DC8", Offset = "0xB70DC8", VA = "0xB70DC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0xB70DD0", Offset = "0xB70DD0", VA = "0xB70DD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xB70F10", Offset = "0xB70F10", VA = "0xB70F10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xB70FA8", Offset = "0xB70FA8", VA = "0xB70FA8")]
		public void Fade(float from, float to, float fadeTime, FadeReason reason)
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xB71088", Offset = "0xB71088", VA = "0xB71088")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0404", Offset = "0x9C0404")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C0404", Offset = "0x9C0404")]
		public void FadeToBlack()
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xB71090", Offset = "0xB71090", VA = "0xB71090")]
		public void FadeToBlack(FadeReason reason = FadeReason.NoReason)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0xB710D4", Offset = "0xB710D4", VA = "0xB710D4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0450", Offset = "0x9C0450")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C0450", Offset = "0x9C0450")]
		public void FadeToNormal()
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xB710DC", Offset = "0xB710DC", VA = "0xB710DC")]
		public void FadeToNormal(FadeReason reason = FadeReason.NoReason)
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0xB71120", Offset = "0xB71120", VA = "0xB71120")]
		public void SetFadeLevelNow(float level, FadeReason reason)
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xB71144", Offset = "0xB71144", VA = "0xB71144")]
		public void SetFadeLevel(float level, FadeReason reason)
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xB71258", Offset = "0xB71258", VA = "0xB71258")]
		private void SetFadeLevelInternal(float fadeLevel, FadeReason reason)
		{
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xB7129C", Offset = "0xB7129C", VA = "0xB7129C")]
		private void Update()
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xB71148", Offset = "0xB71148", VA = "0xB71148")]
		private void ApplyScreenFade()
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xB71440", Offset = "0xB71440", VA = "0xB71440")]
		public float GetFadeLevel()
		{
			return default(float);
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xB714B4", Offset = "0xB714B4", VA = "0xB714B4")]
		public bool IsFaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xB714D8", Offset = "0xB714D8", VA = "0xB714D8")]
		public bool FadedFromReason(FadeReason reason)
		{
			return default(bool);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xB70FE0", Offset = "0xB70FE0", VA = "0xB70FE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C049C", Offset = "0x9C049C")]
		public IEnumerator Fade_CR(float from, float to, float fadeTime, FadeReason reason)
		{
			return null;
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xB71558", Offset = "0xB71558", VA = "0xB71558")]
		public void DipFade(float duration, FadeReason reason, Action action, Action done)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xB71584", Offset = "0xB71584", VA = "0xB71584")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0500", Offset = "0x9C0500")]
		private IEnumerator DipFade_CR(float duration, FadeReason reason, Action midway, Action done)
		{
			return null;
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xB71658", Offset = "0xB71658", VA = "0xB71658")]
		public FadeControl()
		{
		}
	}
	[Token(Token = "0x200008A")]
	public class GameControl : SingletonMono<GameControl>
	{
		[Token(Token = "0x2000168")]
		public enum Task
		{
			[Token(Token = "0x4000CB8")]
			BikeEffects = 1000,
			[Token(Token = "0x4000CB9")]
			LightTexture = 10000001,
			[Token(Token = "0x4000CBA")]
			ScreenFade = 1000,
			[Token(Token = "0x4000CBB")]
			RetargetWeapon = 3000,
			[Token(Token = "0x4000CBC")]
			BikeText = 5000,
			[Token(Token = "0x4000CBD")]
			UpdateMPAlerts = 5000,
			[Token(Token = "0x4000CBE")]
			UpdateNoseReflection = 1000,
			[Token(Token = "0x4000CBF")]
			CacheMPSessionStats = 10000,
			[Token(Token = "0x4000CC0")]
			MPBikeHud = 10005,
			[Token(Token = "0x4000CC1")]
			RefreshDroneLocks = 30001,
			[Token(Token = "0x4000CC2")]
			ReapplyMixerConfig = 60001
		}

		[Token(Token = "0x2000169")]
		public struct CurrentEffects
		{
			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int iceCrystal;

			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int iceCanon;

			[Token(Token = "0x4000CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int drone;

			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int droneAttack;
		}

		[Serializable]
		[Token(Token = "0x200016A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD2C", Offset = "0x9BDD2C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<bool> <>9__14_1;

			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<bool> <>9__14_2;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<bool> <>9__14_3;

			[Token(Token = "0x600095D")]
			[Address(RVA = "0xB79EE0", Offset = "0xB79EE0", VA = "0xB79EE0")]
			public <>c()
			{
			}

			[Token(Token = "0x600095E")]
			[Address(RVA = "0xB79EE8", Offset = "0xB79EE8", VA = "0xB79EE8")]
			internal void <Awake>b__14_1(bool on)
			{
			}

			[Token(Token = "0x600095F")]
			[Address(RVA = "0xB79FA4", Offset = "0xB79FA4", VA = "0xB79FA4")]
			internal void <Awake>b__14_2(bool on)
			{
			}

			[Token(Token = "0x6000960")]
			[Address(RVA = "0xB7A124", Offset = "0xB7A124", VA = "0xB7A124")]
			internal void <Awake>b__14_3(bool on)
			{
			}
		}

		[Token(Token = "0x200016B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD3C", Offset = "0x9BDD3C")]
		private sealed class <WebConfig_CR>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameControl <>4__this;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <wr>5__2;

			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <doneWaiting>5__3;

			[Token(Token = "0x170000AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000964")]
				[Address(RVA = "0xBB15B4", Offset = "0xBB15B4", VA = "0xBB15B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000966")]
				[Address(RVA = "0xBB1620", Offset = "0xBB1620", VA = "0xBB1620", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000961")]
			[Address(RVA = "0xBB12D8", Offset = "0xBB12D8", VA = "0xBB12D8")]
			[DebuggerHidden]
			public <WebConfig_CR>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000962")]
			[Address(RVA = "0xBB1304", Offset = "0xBB1304", VA = "0xBB1304", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000963")]
			[Address(RVA = "0xBB1308", Offset = "0xBB1308", VA = "0xBB1308", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000965")]
			[Address(RVA = "0xBB15BC", Offset = "0xBB15BC", VA = "0xBB15BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200016C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD4C", Offset = "0x9BDD4C")]
		private sealed class <FadeAndStartHolograms_CR>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameControl <>4__this;

			[Token(Token = "0x170000AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600096A")]
				[Address(RVA = "0xB7A3FC", Offset = "0xB7A3FC", VA = "0xB7A3FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600096C")]
				[Address(RVA = "0xB7A468", Offset = "0xB7A468", VA = "0xB7A468", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000967")]
			[Address(RVA = "0xB78FAC", Offset = "0xB78FAC", VA = "0xB78FAC")]
			[DebuggerHidden]
			public <FadeAndStartHolograms_CR>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000968")]
			[Address(RVA = "0xB7A1C4", Offset = "0xB7A1C4", VA = "0xB7A1C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000969")]
			[Address(RVA = "0xB7A1C8", Offset = "0xB7A1C8", VA = "0xB7A1C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600096B")]
			[Address(RVA = "0xB7A404", Offset = "0xB7A404", VA = "0xB7A404", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlurConfig config;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject uiSystems;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject levelSelectUI;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ghostShipPrefab;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform recordingPlaybackRoot;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Tournament tournament;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TournamentRacer playerTournamentRacer;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string raceResultText;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int[] ringResultNums;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LevelController.Victory raceVictory;

		[NonSerialized]
		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public MPController.GameJoinSuccess networkSuccess;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int lapCount;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool levelComplete;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float gameTime;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int primaryFrameCount;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int numConfigUpdates;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool queryNow;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CurrentEffects currentEffects;

		[Token(Token = "0x17000035")]
		public int PrimaryFrameCount
		{
			[Token(Token = "0x6000348")]
			[Address(RVA = "0xB789D8", Offset = "0xB789D8", VA = "0xB789D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000036")]
		public int NumLaps
		{
			[Token(Token = "0x6000356")]
			[Address(RVA = "0xB79C78", Offset = "0xB79C78", VA = "0xB79C78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xB77ACC", Offset = "0xB77ACC", VA = "0xB77ACC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0xB784C8", Offset = "0xB784C8", VA = "0xB784C8")]
		private void CopyVolatileMaterials()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0xB78758", Offset = "0xB78758", VA = "0xB78758")]
		private void SetupFontOverrides()
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0xB789E0", Offset = "0xB789E0", VA = "0xB789E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0564", Offset = "0x9C0564")]
		private IEnumerator WebConfig_CR()
		{
			return null;
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0xB78A54", Offset = "0xB78A54", VA = "0xB78A54")]
		public void WebConfigQuery()
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xB78A60", Offset = "0xB78A60", VA = "0xB78A60")]
		private void Start()
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0xB78F38", Offset = "0xB78F38", VA = "0xB78F38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C05C8", Offset = "0x9C05C8")]
		private IEnumerator FadeAndStartHolograms_CR()
		{
			return null;
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xB78FD8", Offset = "0xB78FD8", VA = "0xB78FD8")]
		private void IsSupported()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xB79428", Offset = "0xB79428", VA = "0xB79428")]
		public void SetupTournament(float extraSpeedSpread)
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xB79594", Offset = "0xB79594", VA = "0xB79594")]
		public void SetupTournament(IEnumerable<string> names)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xB79694", Offset = "0xB79694", VA = "0xB79694")]
		public void SetupTournament(int numPlayers)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xB79718", Offset = "0xB79718", VA = "0xB79718")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0xB797B8", Offset = "0xB797B8", VA = "0xB797B8")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xB797BC", Offset = "0xB797BC", VA = "0xB797BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xB64688", Offset = "0xB64688", VA = "0xB64688")]
		public GameObject SpawnGhost([Optional] Color? color_p)
		{
			return null;
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xB79C68", Offset = "0xB79C68", VA = "0xB79C68")]
		public void OnLapComplete()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xB79C80", Offset = "0xB79C80", VA = "0xB79C80")]
		public void NotifyLevelComplete(string results, LevelController.Victory victory, MPController.GameJoinSuccess networkSuccess)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0xB79C8C", Offset = "0xB79C8C", VA = "0xB79C8C")]
		private void DecodeTaskEnum(Task task, out int freq, out int phase)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xB71330", Offset = "0xB71330", VA = "0xB71330")]
		public bool ThisFrame(Task task)
		{
			return default(bool);
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0xB79D44", Offset = "0xB79D44", VA = "0xB79D44")]
		public int GetEffectCost()
		{
			return default(int);
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0xB79D64", Offset = "0xB79D64", VA = "0xB79D64")]
		public void ResetEffectCosts()
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xB78DEC", Offset = "0xB78DEC", VA = "0xB78DEC")]
		public void PushFirstContext()
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0xB79D6C", Offset = "0xB79D6C", VA = "0xB79D6C")]
		public GameControl()
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0xB79DDC", Offset = "0xB79DDC", VA = "0xB79DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C062C", Offset = "0x9C062C")]
		private void <Awake>b__14_0(bool on)
		{
		}
	}
	[Token(Token = "0x200008B")]
	public class Bike : MonoBehaviour
	{
		[Token(Token = "0x200016D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD5C", Offset = "0x9BDD5C")]
		private sealed class <ItemCollected_CR>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bike <>4__this;

			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <go>5__2;

			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Animation <ac>5__3;

			[Token(Token = "0x170000AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000970")]
				[Address(RVA = "0xB90A28", Offset = "0xB90A28", VA = "0xB90A28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000972")]
				[Address(RVA = "0xB90A94", Offset = "0xB90A94", VA = "0xB90A94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600096D")]
			[Address(RVA = "0xB8A05C", Offset = "0xB8A05C", VA = "0xB8A05C")]
			[DebuggerHidden]
			public <ItemCollected_CR>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600096E")]
			[Address(RVA = "0xB90790", Offset = "0xB90790", VA = "0xB90790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600096F")]
			[Address(RVA = "0xB90794", Offset = "0xB90794", VA = "0xB90794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000971")]
			[Address(RVA = "0xB90A30", Offset = "0xB90A30", VA = "0xB90A30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD6C", Offset = "0x9BDD6C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RaceController.RacerStatus, float> <>9__95_1;

			[Token(Token = "0x6000974")]
			[Address(RVA = "0xB90768", Offset = "0xB90768", VA = "0xB90768")]
			public <>c()
			{
			}

			[Token(Token = "0x6000975")]
			[Address(RVA = "0xB90770", Offset = "0xB90770", VA = "0xB90770")]
			internal float <UpdateMPHud>b__95_1(RaceController.RacerStatus x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject leftHand;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightHand;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HudPrototype hud1;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HudPrototype hud2;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HudPrototype hudPrototype;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TimedMessageHud messageHud;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform collectedItemAnchor;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshPro popupText;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro hudText;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshRenderer[] iceCanonFlipBookQuads;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MeshRenderer hudIcon;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BEF48", Offset = "0x9BEF48")]
		public Transform characterParent;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject character;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform camMountPoint;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool playbackMode;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float acceleration;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float turnRate;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float angle;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float camMountYOffset;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MeshFilter[] pickupIndicatorWire;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MeshFilter[] pickupIndicatorSolid;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int displayedPickupIndex;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion levelSpecificCameraRotation;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string infoString;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public CollectSounds collectSounds;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject floatingHud;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TMP_Text topLeftText;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TMP_Text topRightText;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject noseEffect;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public BatteryEffect batteryEffect;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ParticleSystem streakParticles;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float lastBoostRingTime;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Quaternion flightControlRotation;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int collisionCount;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float popupExpiration;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Material capacitorIndicator;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Material batteryIndicator;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Material boostChargeIndicator;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Material boostIndicatorMaterial;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float preStartBankScale;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float startBank;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Color localColor;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GameObject helmet;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private MeshRenderer batteryVignette;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private BikeModelManager bikeModelManager;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public BikeSim bikeSim;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private RaceController raceController;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private FlightSounds flightSounds;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Material iceCanonFlipbookMat;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private BikeToolTips tooltips;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Rigidbody rigidBody;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private FlightControl flightControl;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Transform rtDirectionalLightTransform;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Trans initialCamTrans;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool iceCanonsActive;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private int appliedHelmetMode;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Trans Update_bikeTrans;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool showingHands;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int displayed_MPLobbyPlayerCount;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float lastLobbyAlertTime;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float batteryWarningStart;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private MaterialPropertyBlock batteryVignetteProps;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int iceCanonFrame;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float lastDrainTime;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float energyFieldStrength;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float energyFieldAudioStrength;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float startChargeDrainingTime;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float lastPodTime;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float lastBadBatteryTime;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float forceVelocity;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObject LevitateLight;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float powerPackDeployTime;

		[Token(Token = "0x17000037")]
		public float Speed
		{
			[Token(Token = "0x600035F")]
			[Address(RVA = "0xB88C14", Offset = "0xB88C14", VA = "0xB88C14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000038")]
		public float RaceProgress
		{
			[Token(Token = "0x6000360")]
			[Address(RVA = "0xB88C38", Offset = "0xB88C38", VA = "0xB88C38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xB88CD0", Offset = "0xB88CD0", VA = "0xB88CD0")]
		public void SetCamRotation(float degrees)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xB88D58", Offset = "0xB88D58", VA = "0xB88D58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xB891DC", Offset = "0xB891DC", VA = "0xB891DC")]
		public void OnPodCollect(RacerBase racer, int a, BikeSim.ChargeAction chargeAction)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xB8920C", Offset = "0xB8920C", VA = "0xB8920C")]
		public void OnEvent(BikeSim.Event e)
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xB89DDC", Offset = "0xB89DDC", VA = "0xB89DDC")]
		public void DoBoostEffect()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xB89D68", Offset = "0xB89D68", VA = "0xB89D68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C063C", Offset = "0x9C063C")]
		private IEnumerator ItemCollected_CR()
		{
			return null;
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xB89E70", Offset = "0xB89E70", VA = "0xB89E70")]
		private void StartVirusToolEffect()
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xB89F64", Offset = "0xB89F64", VA = "0xB89F64")]
		private void StopVirusToolEffect()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xB8A088", Offset = "0xB8A088", VA = "0xB8A088")]
		private void CheckHelmet()
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xB8A368", Offset = "0xB8A368", VA = "0xB8A368")]
		private void Start()
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0xB8A494", Offset = "0xB8A494", VA = "0xB8A494")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0xB8A5FC", Offset = "0xB8A5FC", VA = "0xB8A5FC")]
		private float GetCurrentBank(out float cameraLean)
		{
			return default(float);
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xB8A794", Offset = "0xB8A794", VA = "0xB8A794")]
		private void Update()
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xB8DF4C", Offset = "0xB8DF4C", VA = "0xB8DF4C")]
		private static Quaternion GetLookRot(FollowCamParams followCamParams, Vector3 pos, Trans bikeTrans, Quaternion trackPointRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xB8BA18", Offset = "0xB8BA18", VA = "0xB8BA18")]
		private void UpdatePickupIndicator()
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xB8BC10", Offset = "0xB8BC10", VA = "0xB8BC10")]
		private void UpdateScreenFade()
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xB8C7E8", Offset = "0xB8C7E8", VA = "0xB8C7E8")]
		private void UpdateBatteryWarning()
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xB8C7BC", Offset = "0xB8C7BC", VA = "0xB8C7BC")]
		private void UpdateBikeEffects()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0xB8EB1C", Offset = "0xB8EB1C", VA = "0xB8EB1C")]
		private void UpdateBatteryVignette()
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xB8E168", Offset = "0xB8E168", VA = "0xB8E168")]
		private void UpdateBikeModelEffects()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0xB8DE4C", Offset = "0xB8DE4C", VA = "0xB8DE4C")]
		private void UpdateIceCanons()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xB8E4E4", Offset = "0xB8E4E4", VA = "0xB8E4E4")]
		private void UpdateStreaks()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0xB8D1A0", Offset = "0xB8D1A0", VA = "0xB8D1A0")]
		private void UpdateEnergyField()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xB8EBF8", Offset = "0xB8EBF8", VA = "0xB8EBF8")]
		private void SetEnergyColors(BlurConfig.EnergyFieldParams p, MaterialPropertyBlock props)
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0xB8ED24", Offset = "0xB8ED24", VA = "0xB8ED24")]
		private string GetColorFromDelta(float delta)
		{
			return null;
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xB8CA80", Offset = "0xB8CA80", VA = "0xB8CA80")]
		private void UpdateMPHud()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xB8BDC0", Offset = "0xB8BDC0", VA = "0xB8BDC0")]
		private void UpdateHud()
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xB8F09C", Offset = "0xB8F09C", VA = "0xB8F09C")]
		private void ProcessCollision(Vector3 point)
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xB8F208", Offset = "0xB8F208", VA = "0xB8F208")]
		private void ProcessCollision(Vector3 direction, float distance)
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xB8F20C", Offset = "0xB8F20C", VA = "0xB8F20C")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xB8F398", Offset = "0xB8F398", VA = "0xB8F398")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0xB8F3A8", Offset = "0xB8F3A8", VA = "0xB8F3A8")]
		public void SetVelocity(Vector3 v)
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xB8F44C", Offset = "0xB8F44C", VA = "0xB8F44C")]
		public void SetupGotoStartAndRegister(RaceController raceController)
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xB8F78C", Offset = "0xB8F78C", VA = "0xB8F78C")]
		private void OnLevelGainedFocus()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xB8F5A4", Offset = "0xB8F5A4", VA = "0xB8F5A4")]
		private void ApplyBikeCharacteristics()
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xB8F790", Offset = "0xB8F790", VA = "0xB8F790")]
		public Vector3 GetWorldVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xB8F8A8", Offset = "0xB8F8A8", VA = "0xB8F8A8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C06A0", Offset = "0x9C06A0")]
		public void TestLapCOmplete()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xB8F8C0", Offset = "0xB8F8C0", VA = "0xB8F8C0")]
		public void OnLapComplete(int lapsCompleted, LevelController.LapCompleteType type = LevelController.LapCompleteType.Normal, LevelController.Victory victory = LevelController.Victory.None, float time = 0f)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xB90338", Offset = "0xB90338", VA = "0xB90338")]
		public void OnTimedRaceComplete(LevelController.Victory victory)
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xB9059C", Offset = "0xB9059C", VA = "0xB9059C")]
		public Bike()
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xB90678", Offset = "0xB90678", VA = "0xB90678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C06D8", Offset = "0x9C06D8")]
		private bool <UpdateMPHud>b__95_0(RaceController.RacerStatus x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008C")]
	public class BikeToolTips : MonoBehaviour
	{
		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] tooltipTips;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] angles;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform popupCenter;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 ellipseSize;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ellipseAngleStep;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject tooltipRoot;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color subTextColor;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ToolTip[] toolTipPopups;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ToolTip[] toolTipPopupsMirror;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ToolTip activePopup;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int activeIndex;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool expanded;

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xB616A0", Offset = "0xB616A0", VA = "0xB616A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xB61710", Offset = "0xB61710", VA = "0xB61710")]
		private void Update()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xB61A74", Offset = "0xB61A74", VA = "0xB61A74")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C06E8", Offset = "0x9C06E8")]
		public void TestSpawn()
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xB616A8", Offset = "0xB616A8", VA = "0xB616A8")]
		public void SpawnTooltipsOnBothSides(bool startEnabled = false)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xB61A7C", Offset = "0xB61A7C", VA = "0xB61A7C")]
		public ToolTip[] SpawnTooltips(bool mirror, bool startEnabled)
		{
			return null;
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xB62088", Offset = "0xB62088", VA = "0xB62088")]
		private string GetPopupText(int i)
		{
			return null;
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xB6230C", Offset = "0xB6230C", VA = "0xB6230C")]
		public void OnClick(out bool shouldPauseCountdown)
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xB62758", Offset = "0xB62758", VA = "0xB62758")]
		public BikeToolTips()
		{
		}
	}
	[Token(Token = "0x200008D")]
	public class FlightControlRecorder
	{
		[Token(Token = "0x200016F")]
		[Flags]
		public enum Flags
		{
			[Token(Token = "0x4000CDB")]
			SaveHeadPos = 1,
			[Token(Token = "0x4000CDC")]
			VariableNumberOfBikes = 2,
			[Token(Token = "0x4000CDD")]
			IncludePickupUse = 4
		}

		[Token(Token = "0x4000562")]
		private const int recordingFileVersion = 1;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SimpleSerializer serializer;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Path path;

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xB75E14", Offset = "0xB75E14", VA = "0xB75E14")]
		public FlightControlRecorder(Path fullFilePath)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xB754D8", Offset = "0xB754D8", VA = "0xB754D8")]
		public void RecordFrame(FlightControl.InputState state)
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xB742F4", Offset = "0xB742F4", VA = "0xB742F4")]
		public void Free()
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xB75F58", Offset = "0xB75F58", VA = "0xB75F58")]
		private void SerializeBikeSim(BikeSim targetBikeSim)
		{
		}
	}
	[Token(Token = "0x200008E")]
	public class FlightControlPlayback
	{
		[Token(Token = "0x2000170")]
		public struct BikeSimFrame
		{
			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 position;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool trackPointValid;

			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float bank;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float heading;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector2 velocity;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float nextRandomPickupSeed;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleTrack.PickupType currentPickup;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public PickupAction pickupAction;
		}

		[Token(Token = "0x2000171")]
		public enum PickupAction
		{
			[Token(Token = "0x4000CE7")]
			None,
			[Token(Token = "0x4000CE8")]
			Deploy,
			[Token(Token = "0x4000CE9")]
			Activate
		}

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool paused;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SimpleDeserializer sd;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool incHeadPos;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool variableNumBikes;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool setNonPlayerBikeStates;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private FlightControlRecorder.Flags flags;

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xB759F0", Offset = "0xB759F0", VA = "0xB759F0")]
		public static void DeserializeHeader(SimpleDeserializer sd, out int version, out bool incHeadPos, out bool variableNumBikes, out int playbackFPS, out FlightControlRecorder.Flags flags)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xB75A7C", Offset = "0xB75A7C", VA = "0xB75A7C")]
		public FlightControlPlayback(TextAsset inputFile, bool setNonPlayerBikeStates)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xB75C04", Offset = "0xB75C04", VA = "0xB75C04")]
		public static FlightControl.InputState DeserializeFrame(SimpleDeserializer sd)
		{
			return default(FlightControl.InputState);
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xB74DF8", Offset = "0xB74DF8", VA = "0xB74DF8")]
		public FlightControl.InputState GetFrame()
		{
			return default(FlightControl.InputState);
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xB75CF0", Offset = "0xB75CF0", VA = "0xB75CF0")]
		public static BikeSimFrame DeserializeBikeSim(SimpleDeserializer sd, FlightControlRecorder.Flags flags)
		{
			return default(BikeSimFrame);
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xB75C70", Offset = "0xB75C70", VA = "0xB75C70")]
		private void DeserializeBikeSim(BikeSim targetBikeSim, bool setBikeState, FlightControlRecorder.Flags flags)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xB75DF4", Offset = "0xB75DF4", VA = "0xB75DF4")]
		public static void ApplySplineControl(BikeSim targetBikeSim, float stick, bool throttle)
		{
		}
	}
	[Token(Token = "0x200008F")]
	public class FlightControl : MonoBehaviour
	{
		[Token(Token = "0x2000172")]
		public enum StickControlMode
		{
			[Token(Token = "0x4000CEB")]
			CONTROLLER_ROLL = 0,
			[Token(Token = "0x4000CEC")]
			LEFT_THUMB_STICK = 1,
			[Token(Token = "0x4000CED")]
			RIGHT_THUMB_STICK = 2,
			[Token(Token = "0x4000CEE")]
			HEAD_POS = 3,
			[Token(Token = "0x4000CEF")]
			WHEEL = 4,
			[Token(Token = "0x4000CF0")]
			HANDLE_BARS = 5,
			[Token(Token = "0x4000CF1")]
			NONE = 1000
		}

		[Token(Token = "0x2000173")]
		public enum ActivateType
		{
			[Token(Token = "0x4000CF3")]
			None,
			[Token(Token = "0x4000CF4")]
			Boost,
			[Token(Token = "0x4000CF5")]
			Item
		}

		[Token(Token = "0x2000174")]
		public struct InputState
		{
			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float stick;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool throttleOn;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ActivateType activate;
		}

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool joystickEnabled;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light indictor;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float stickEnableSpeed;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool useItemDebounced;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action secondaryActionFn;

		[Token(Token = "0x4000570")]
		public const string recordingPath = "Assets/LocalData/InputRecs/";

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FlightControlRecorder recorder;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FlightControlPlayback playback;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int playbackRealTimeFrames;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastPlaybackFrame;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BlurConfig config;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform leftHand;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform rightHand;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BikeSim bikeSim;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float rawStick;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private InputState inputState;

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xB741B8", Offset = "0xB741B8", VA = "0xB741B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0xB7425C", Offset = "0xB7425C", VA = "0xB7425C")]
		private void Start()
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xB742E4", Offset = "0xB742E4", VA = "0xB742E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xB74310", Offset = "0xB74310", VA = "0xB74310")]
		private static float Stick_ControllerRoll()
		{
			return default(float);
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xB744E0", Offset = "0xB744E0", VA = "0xB744E0")]
		private static float Stick_ThumbStick(bool right)
		{
			return default(float);
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xB74568", Offset = "0xB74568", VA = "0xB74568")]
		private static float Stick_HeadPos()
		{
			return default(float);
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xB74608", Offset = "0xB74608", VA = "0xB74608")]
		private static float Stick_HeadLean()
		{
			return default(float);
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xB74750", Offset = "0xB74750", VA = "0xB74750")]
		private static float Stick_Wheel(Transform leftHand, Transform rightHand)
		{
			return default(float);
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xB74874", Offset = "0xB74874", VA = "0xB74874")]
		private static float Stick_HandleBars(Transform leftHand, Transform rightHand)
		{
			return default(float);
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xB6D5EC", Offset = "0xB6D5EC", VA = "0xB6D5EC")]
		public static void GetStickSensitityRange(StickControlMode mode, out float sensMin, out float sensMax)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xB74998", Offset = "0xB74998", VA = "0xB74998")]
		public static float Stick(StickControlMode mode, Transform leftHand, Transform rightHand)
		{
			return default(float);
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xB749F0", Offset = "0xB749F0", VA = "0xB749F0")]
		private float Stick()
		{
			return default(float);
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xB74B3C", Offset = "0xB74B3C", VA = "0xB74B3C")]
		public void PausePlayback(bool paused)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xB74B60", Offset = "0xB74B60", VA = "0xB74B60")]
		private void Update()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xB75910", Offset = "0xB75910", VA = "0xB75910")]
		private void UseInput(InputState inputState)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xB752C0", Offset = "0xB752C0", VA = "0xB752C0")]
		private InputState GetCurrentInputState()
		{
			return default(InputState);
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xB759E0", Offset = "0xB759E0", VA = "0xB759E0")]
		public FlightControl()
		{
		}
	}
	[Token(Token = "0x2000090")]
	public class MonitorManager : MonoBehaviour
	{
		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text[] texts;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text speedo;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text info;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject root;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FPSMonitor fpsMonitor;

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xB446B0", Offset = "0xB446B0", VA = "0xB446B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xB44724", Offset = "0xB44724", VA = "0xB44724")]
		private void Update()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xB44728", Offset = "0xB44728", VA = "0xB44728")]
		public MonitorManager()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public class OverHeadLights : MonoBehaviour
	{
		[Token(Token = "0x2000175")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD8C", Offset = "0x9BDD8C")]
		private sealed class <StartSequence_CR>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OverHeadLights <>4__this;

			[Token(Token = "0x170000B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000979")]
				[Address(RVA = "0xB4D0FC", Offset = "0xB4D0FC", VA = "0xB4D0FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600097B")]
				[Address(RVA = "0xB4D168", Offset = "0xB4D168", VA = "0xB4D168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000976")]
			[Address(RVA = "0xB4CD58", Offset = "0xB4CD58", VA = "0xB4CD58")]
			[DebuggerHidden]
			public <StartSequence_CR>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000977")]
			[Address(RVA = "0xB4CF24", Offset = "0xB4CF24", VA = "0xB4CF24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000978")]
			[Address(RVA = "0xB4CF28", Offset = "0xB4CF28", VA = "0xB4CF28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600097A")]
			[Address(RVA = "0xB4D104", Offset = "0xB4D104", VA = "0xB4D104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material offMat;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material onMat;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer[] redLight;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer[] amberLight;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer[] greenLight;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float interLightDelay;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool sequenceActive;

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xB4CCB8", Offset = "0xB4CCB8", VA = "0xB4CCB8")]
		public void StartSequence()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xB4CCE4", Offset = "0xB4CCE4", VA = "0xB4CCE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C06F8", Offset = "0x9C06F8")]
		private IEnumerator StartSequence_CR()
		{
			return null;
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xB4CD84", Offset = "0xB4CD84", VA = "0xB4CD84")]
		private void SetOn(MeshRenderer[] meshRenderers, Color color)
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xB4CE54", Offset = "0xB4CE54", VA = "0xB4CE54")]
		private void SetOff(MeshRenderer[] meshRenderers)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xB4CEDC", Offset = "0xB4CEDC", VA = "0xB4CEDC")]
		private void SetAllToOff()
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xB4CF14", Offset = "0xB4CF14", VA = "0xB4CF14")]
		public bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xB4CF1C", Offset = "0xB4CF1C", VA = "0xB4CF1C")]
		public OverHeadLights()
		{
		}
	}
	[Token(Token = "0x2000092")]
	public class PlaybackCache
	{
		[Token(Token = "0x2000176")]
		public class BikeFrame
		{
			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlightControlPlayback.BikeSimFrame playbackFrame;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FlightControl.InputState inputState;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool validInputState;

			[Token(Token = "0x600097C")]
			[Address(RVA = "0xB4D61C", Offset = "0xB4D61C", VA = "0xB4D61C")]
			public BikeFrame Clone()
			{
				return null;
			}

			[Token(Token = "0x600097D")]
			[Address(RVA = "0xB4D614", Offset = "0xB4D614", VA = "0xB4D614")]
			public BikeFrame()
			{
			}
		}

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int numBikes;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BikeFrame>[] bikeFrames;

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xB4D21C", Offset = "0xB4D21C", VA = "0xB4D21C")]
		public PlaybackCache(TextAsset inputFile)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xB4D24C", Offset = "0xB4D24C", VA = "0xB4D24C")]
		private void Deserialize(TextAsset inputFile)
		{
		}
	}
	[Token(Token = "0x2000093")]
	public class RaceBalancer : MonoBehaviour
	{
		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaceController raceController;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BlurConfig.RaceBalancerConfig balancerConfig;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float trackLength;

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xB4E19C", Offset = "0xB4E19C", VA = "0xB4E19C")]
		private void Start()
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xB4E248", Offset = "0xB4E248", VA = "0xB4E248")]
		private void Update()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xB4E7C0", Offset = "0xB4E7C0", VA = "0xB4E7C0")]
		public RaceBalancer()
		{
		}
	}
	[Token(Token = "0x2000094")]
	public class RaceObjectManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000177")]
		public class TrackItemChunk
		{
			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int start;

			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int end;

			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x4000D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool trackLight;

			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 center;

			[Token(Token = "0x600097E")]
			[Address(RVA = "0xB59604", Offset = "0xB59604", VA = "0xB59604")]
			public TrackItemChunk()
			{
			}
		}

		[Token(Token = "0x2000178")]
		private class RollingObjectPool
		{
			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int total;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int allocated;

			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int nextFree;

			[Token(Token = "0x600097F")]
			[Address(RVA = "0xB55934", Offset = "0xB55934", VA = "0xB55934")]
			public RollingObjectPool(int n)
			{
			}

			[Token(Token = "0x6000980")]
			[Address(RVA = "0xB56E10", Offset = "0xB56E10", VA = "0xB56E10")]
			public void Allocate(out int allocIndex, out bool wasUsed)
			{
			}
		}

		[Token(Token = "0x2000179")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD9C", Offset = "0x9BDD9C")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[][] boundaryWidths;

			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RaceObjectManager <>4__this;

			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float height;

			[Token(Token = "0x6000981")]
			[Address(RVA = "0xB58518", Offset = "0xB58518", VA = "0xB58518")]
			public <>c__DisplayClass40_0()
			{
			}
		}

		[Token(Token = "0x200017A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDDAC", Offset = "0x9BDDAC")]
		private sealed class <>c__DisplayClass40_1
		{
			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int j;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass40_0 CS$<>8__locals1;

			[Token(Token = "0x6000982")]
			[Address(RVA = "0xB58520", Offset = "0xB58520", VA = "0xB58520")]
			public <>c__DisplayClass40_1()
			{
			}
		}

		[Token(Token = "0x200017B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDDBC", Offset = "0x9BDDBC")]
		private sealed class <>c__DisplayClass40_2
		{
			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float vertPointSpacing;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stepSign;

			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass40_1 CS$<>8__locals2;

			[Token(Token = "0x6000983")]
			[Address(RVA = "0xB58528", Offset = "0xB58528", VA = "0xB58528")]
			public <>c__DisplayClass40_2()
			{
			}

			[Token(Token = "0x6000984")]
			[Address(RVA = "0xB58740", Offset = "0xB58740", VA = "0xB58740")]
			internal Vector3 <BuildBoundaryRail>b__0(int i)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200017C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDDCC", Offset = "0x9BDDCC")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject effectGo;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material billBoardMat;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform sphereTrans;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float sphereScale;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Color explosionRimColor;

			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Material sphereMat;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color explosionColor;

			[Token(Token = "0x6000985")]
			[Address(RVA = "0xB588F8", Offset = "0xB588F8", VA = "0xB588F8")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6000986")]
			[Address(RVA = "0xB58900", Offset = "0xB58900", VA = "0xB58900")]
			internal void <DroneHitEffect_CR>b__0(float t)
			{
			}
		}

		[Token(Token = "0x200017D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDDDC", Offset = "0x9BDDDC")]
		private sealed class <DroneHitEffect_CR>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool effective;

			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2 pos2D;

			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RaceObjectManager <>4__this;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass43_0 <>8__1;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DroneAttackEffect <dae>5__2;

			[Token(Token = "0x170000B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600098A")]
				[Address(RVA = "0xB59590", Offset = "0xB59590", VA = "0xB59590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600098C")]
				[Address(RVA = "0xB595FC", Offset = "0xB595FC", VA = "0xB595FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000987")]
			[Address(RVA = "0xB585CC", Offset = "0xB585CC", VA = "0xB585CC")]
			[DebuggerHidden]
			public <DroneHitEffect_CR>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6000988")]
			[Address(RVA = "0xB58B70", Offset = "0xB58B70", VA = "0xB58B70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000989")]
			[Address(RVA = "0xB58B74", Offset = "0xB58B74", VA = "0xB58B74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600098B")]
			[Address(RVA = "0xB59598", Offset = "0xB59598", VA = "0xB59598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaceController raceController;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> raceObjects;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material boostWeakMat;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material boostStrongMat;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform pickupRoot;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject[] podAudioSources;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RollingObjectPool podPool;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SplineTrack track;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int nextPodAudioToEnable;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool ringsDisabled;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TrailManager.TrailSystemInstance[] boundaryTrails;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material[] boundaryMaterials;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Trans DroneHitEffect_CR_trans;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Trans MineExplosion_Trans;

		[Token(Token = "0x17000039")]
		public SplineTrack.TrackChunkLists ActiveChunkLists
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0xB55964", Offset = "0xB55964", VA = "0xB55964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		public bool RingsDisabled
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0xB55A38", Offset = "0xB55A38", VA = "0xB55A38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xB550BC", Offset = "0xB550BC", VA = "0xB550BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xB55200", Offset = "0xB55200", VA = "0xB55200")]
		public void SetDefaultItemColors()
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xB5550C", Offset = "0xB5550C", VA = "0xB5550C")]
		public void SetDisabledRingColors()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xB5581C", Offset = "0xB5581C", VA = "0xB5581C")]
		private void Start()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xB53358", Offset = "0xB53358", VA = "0xB53358")]
		public void SpawnAll()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xB55D90", Offset = "0xB55D90", VA = "0xB55D90")]
		private void SpawnPodAudio()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xB52E40", Offset = "0xB52E40", VA = "0xB52E40")]
		public static void DestroyAllTempObjects()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xB55FD4", Offset = "0xB55FD4", VA = "0xB55FD4")]
		public static void SpawnAllObjectsInSpawnList(Action<GameObject> fn, SimpleTrack track, TrackItem.ItemType types = TrackItem.ItemType.All, bool forChunk = false, [Optional] List<TrackItem> spawnListOverride)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xB5639C", Offset = "0xB5639C", VA = "0xB5639C")]
		public static GameObject SpawnTrackItem_internal(Action<GameObject> fn, SimpleTrack track, Transform parent, Vector2 pos, GameObject prefab, float hoverHeight = 0f)
		{
			return null;
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xB4DCEC", Offset = "0xB4DCEC", VA = "0xB4DCEC")]
		public GameObject SpawnTrackItem(Vector2 pos, GameObject prefab, float hoverHeight = 0f)
		{
			return null;
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xB56588", Offset = "0xB56588", VA = "0xB56588")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xB567C4", Offset = "0xB567C4", VA = "0xB567C4")]
		public void HideBoundaries()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xB56880", Offset = "0xB56880", VA = "0xB56880")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xB568A4", Offset = "0xB568A4", VA = "0xB568A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xB56918", Offset = "0xB56918", VA = "0xB56918")]
		private void Update()
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xB55A40", Offset = "0xB55A40", VA = "0xB55A40")]
		private void SpawnAllChunks(List<TrackItemChunk> chunkList, Material trackItemMaterial, int layer)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xB56E74", Offset = "0xB56E74", VA = "0xB56E74")]
		public GameObject GetIceVirusEffectObject()
		{
			return null;
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xB56F48", Offset = "0xB56F48", VA = "0xB56F48")]
		public GameObject GetDroneAttackEffectObject()
		{
			return null;
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xB5701C", Offset = "0xB5701C", VA = "0xB5701C")]
		public void FreeGameObject(GameObject go)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xB57084", Offset = "0xB57084", VA = "0xB57084")]
		public void TeleportTunnel(Vector3 systemPos, Vector2 from, Vector2 to)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xB5772C", Offset = "0xB5772C", VA = "0xB5772C")]
		public void StartMagnetEffect(RacerBase victim, RacerBase attacker)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xB57874", Offset = "0xB57874", VA = "0xB57874")]
		public float[][] CalculateBoundaryWidths()
		{
			return null;
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xB580C8", Offset = "0xB580C8", VA = "0xB580C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C075C", Offset = "0x9C075C")]
		public void BuildBoundaryRail(float[][] boundaryWidths)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xB57E6C", Offset = "0xB57E6C", VA = "0xB57E6C")]
		private void SmoothOnlyIncrease(float[] data)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xB58530", Offset = "0xB58530", VA = "0xB58530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0794", Offset = "0x9C0794")]
		private IEnumerator DroneHitEffect_CR(Vector2 pos2D, bool effective)
		{
			return null;
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xB585F8", Offset = "0xB585F8", VA = "0xB585F8")]
		public void DroneExplosion(Vector2 pos, bool effective = true)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xB444A8", Offset = "0xB444A8", VA = "0xB444A8")]
		public void MineExplosion(Vector2 pos2D)
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xB58628", Offset = "0xB58628", VA = "0xB58628")]
		public RaceObjectManager()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xB586D8", Offset = "0xB586D8", VA = "0xB586D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C07F8", Offset = "0x9C07F8")]
		private void <SpawnTrackItem>b__25_0(GameObject go)
		{
		}
	}
	[Token(Token = "0x2000095")]
	public class RecordingMetaData : ScriptableObject
	{
		[Token(Token = "0x200017E")]
		public enum Type
		{
			[Token(Token = "0x4000D1E")]
			Forever,
			[Token(Token = "0x4000D1F")]
			Lap
		}

		[Serializable]
		[Token(Token = "0x200017F")]
		public struct RoutePoint
		{
			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector2 planePos;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float bank;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float heading;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float speed;
		}

		[Serializable]
		[Token(Token = "0x2000180")]
		public struct RouteLap
		{
			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int firstTableIndex;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int numTableIndices;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int[] pointIndicesByPlaneY;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] collisions;

			[NonSerialized]
			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int occuppied;

			[Token(Token = "0x600098D")]
			[Address(RVA = "0xA5A8B8", Offset = "0xA5A8B8", VA = "0xA5A8B8")]
			public RouteLap(int numPoints, int numCollisions)
			{
			}

			[Token(Token = "0x600098E")]
			[Address(RVA = "0xA5A8C0", Offset = "0xA5A8C0", VA = "0xA5A8C0")]
			public int GetTableIndex(float planeY)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string filename;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float totalTime;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numLaps;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SimpleTrack track;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Type type;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float startTime;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public RoutePoint[] allPoints;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RouteLap[] routeLaps;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Func<int, float> GetTableSubIndex_delegate;

		[Token(Token = "0x1700003B")]
		public int RouteLapCount
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0xB5A0D0", Offset = "0xB5A0D0", VA = "0xB5A0D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xB59EF8", Offset = "0xB59EF8", VA = "0xB59EF8")]
		private float GetTableSubIndex_indexToPlanePosY(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xB59F40", Offset = "0xB59F40", VA = "0xB59F40")]
		public float GetTableSubIndex(RouteLap routeLap, float planeY)
		{
			return default(float);
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xB5A058", Offset = "0xB5A058", VA = "0xB5A058")]
		public void CacheDelegate()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xB5A0F0", Offset = "0xB5A0F0", VA = "0xB5A0F0")]
		public RoutePoint GetPointAtY(float planeY, int routeLapIndex)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xB5A4B8", Offset = "0xB5A4B8", VA = "0xB5A4B8")]
		public bool IsNearCollision(int routeLapIndex, float planeY, float behindDistance, float infrontDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xB5A5EC", Offset = "0xB5A5EC", VA = "0xB5A5EC")]
		public RecordingMetaData()
		{
		}
	}
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD960", Offset = "0x9BD960")]
	public class RecordingRunner : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000181")]
		public class StartProfile
		{
			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] acceptableStartLaps;

			[Token(Token = "0x600098F")]
			[Address(RVA = "0xB5B8B0", Offset = "0xB5B8B0", VA = "0xB5B8B0")]
			public StartProfile()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000182")]
		public class Connection
		{
			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int destLapIndex;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float planeY;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TestRunData takenTestRunData;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public TestRunData skippedTestRunData;

			[Token(Token = "0x6000990")]
			[Address(RVA = "0xB5B838", Offset = "0xB5B838", VA = "0xB5B838")]
			public Connection()
			{
			}
		}

		[Token(Token = "0x2000183")]
		public enum TestRunFlags
		{
			[Token(Token = "0x4000D30")]
			None,
			[Token(Token = "0x4000D31")]
			Avoid
		}

		[Serializable]
		[Token(Token = "0x2000184")]
		public struct TestRunData
		{
			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TestRunFlags flags;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int branchOps;

			[Token(Token = "0x170000B5")]
			public float Score
			{
				[Token(Token = "0x6000991")]
				[Address(RVA = "0xA5A8C8", Offset = "0xA5A8C8", VA = "0xA5A8C8")]
				get
				{
					return default(float);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000185")]
		public class RouteLapConnections
		{
			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Connection> connections;

			[Token(Token = "0x6000992")]
			[Address(RVA = "0xB5B840", Offset = "0xB5B840", VA = "0xB5B840")]
			public RouteLapConnections()
			{
			}
		}

		[Token(Token = "0x2000186")]
		public class State
		{
			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool doNotOccupyLaps;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _currentRouteLapIndex;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float previousY;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Connection>.Enumerator routeEnumerator;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int _enumRouteLapIndex;

			[Token(Token = "0x170000B6")]
			public int currentRouteLapIndex
			{
				[Token(Token = "0x6000993")]
				[Address(RVA = "0xB5B8B8", Offset = "0xB5B8B8", VA = "0xB5B8B8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000994")]
				[Address(RVA = "0xB5B8C0", Offset = "0xB5B8C0", VA = "0xB5B8C0")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B7")]
			public int enumRouteLapIndex
			{
				[Token(Token = "0x6000996")]
				[Address(RVA = "0xB5B8C8", Offset = "0xB5B8C8", VA = "0xB5B8C8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000997")]
				[Address(RVA = "0xB5B8D0", Offset = "0xB5B8D0", VA = "0xB5B8D0")]
				private set
				{
				}
			}

			[Token(Token = "0x6000995")]
			[Address(RVA = "0xB5A828", Offset = "0xB5A828", VA = "0xB5A828")]
			public void SetCurrentRouteLapIndex(int index, RecordingRunner recRunner)
			{
			}

			[Token(Token = "0x6000998")]
			[Address(RVA = "0xB5AAD4", Offset = "0xB5AAD4", VA = "0xB5AAD4")]
			public void SetEnumRouteLapIndex(int index, RecordingRunner recRunner)
			{
			}

			[Token(Token = "0x6000999")]
			[Address(RVA = "0xB5AEB0", Offset = "0xB5AEB0", VA = "0xB5AEB0")]
			public void Copy(State dst)
			{
			}

			[Token(Token = "0x600099A")]
			[Address(RVA = "0xB5B1E8", Offset = "0xB5B1E8", VA = "0xB5B1E8")]
			public void IncEnumRouteLapIndex(RecordingRunner recRunner)
			{
			}

			[Token(Token = "0x600099B")]
			[Address(RVA = "0xB5B294", Offset = "0xB5B294", VA = "0xB5B294")]
			public void IncCurrentRouteLapIndex(RecordingRunner recRunner)
			{
			}

			[Token(Token = "0x600099C")]
			[Address(RVA = "0xB5A814", Offset = "0xB5A814", VA = "0xB5A814")]
			public State()
			{
			}
		}

		[Token(Token = "0x2000187")]
		private class EndOfRouteException : Exception
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0xB5B180", Offset = "0xB5B180", VA = "0xB5B180")]
			public EndOfRouteException()
			{
			}
		}

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RecordingMetaData recording;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BikeAIParams aiParams;

		[Token(Token = "0x40005A5")]
		private const float collisionTimePenalty = 1000f;

		[Token(Token = "0x40005A6")]
		private const float maxCollisionBackwardsClearance = 100f;

		[Token(Token = "0x40005A7")]
		private const float maxCollisionForwardsClearance = 1250f;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StartProfile[] startPosProfiles;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] shuffledAcceptableStartLaps;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] startLaps;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] startLapScore;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RouteLapConnections[] routeLapConnections;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool shuffled;

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xB5A674", Offset = "0xB5A674", VA = "0xB5A674")]
		private bool CanTransition(int srcIndex, int dstIndex, float y)
		{
			return default(bool);
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xB5A71C", Offset = "0xB5A71C", VA = "0xB5A71C")]
		private bool CanTransition(RecordingMetaData.RoutePoint srcPoint, RecordingMetaData.RoutePoint dstPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xB5A770", Offset = "0xB5A770", VA = "0xB5A770")]
		public State StartFollowing()
		{
			return null;
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xB5A97C", Offset = "0xB5A97C", VA = "0xB5A97C")]
		public State StartFollowingFromPoint(int routeLapIndex, int connectionIndex, bool doNotOccupyLaps = false)
		{
			return null;
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xB5AADC", Offset = "0xB5AADC", VA = "0xB5AADC")]
		public State StartFollowingFromPosition(int routeLapIndex, float yPos)
		{
			return null;
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xB5ABFC", Offset = "0xB5ABFC", VA = "0xB5ABFC")]
		public float GetNextSwitchPoint(State state)
		{
			return default(float);
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xB5AC54", Offset = "0xB5AC54", VA = "0xB5AC54")]
		private bool IsSwitchAheadOfCurrentState(State state, float tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xB5ACEC", Offset = "0xB5ACEC", VA = "0xB5ACEC")]
		public bool TryRouteSwitch(State state, State oldState, Func<bool> take, out bool wasPossible, bool allowToLastLap = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xB5AF48", Offset = "0xB5AF48", VA = "0xB5AF48")]
		private bool EnumMoveNext(State state)
		{
			return default(bool);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xB5A878", Offset = "0xB5A878", VA = "0xB5A878")]
		private void ResetEnumerator(State state)
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xB5A940", Offset = "0xB5A940", VA = "0xB5A940")]
		private void FindNextSwitchPoint(State state)
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xB5B1F8", Offset = "0xB5B1F8", VA = "0xB5B1F8")]
		public RecordingMetaData.RoutePoint UpdateToPointAtY(State state, float y)
		{
			return default(RecordingMetaData.RoutePoint);
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xB5B2E4", Offset = "0xB5B2E4", VA = "0xB5B2E4")]
		public RecordingMetaData.RoutePoint GetPointAtY(State state, float y)
		{
			return default(RecordingMetaData.RoutePoint);
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xB5B3A4", Offset = "0xB5B3A4", VA = "0xB5B3A4")]
		public bool IsSwitchQuicker(State state)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xB5B458", Offset = "0xB5B458", VA = "0xB5B458")]
		public float GetSwitchValue(State state)
		{
			return default(float);
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xB5B4E4", Offset = "0xB5B4E4", VA = "0xB5B4E4")]
		public int RandomStartLap(int startPosIndex, bool startBehindLine)
		{
			return default(int);
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xB5B588", Offset = "0xB5B588", VA = "0xB5B588")]
		public float GetOccupiedPenalty(State recRunnerState)
		{
			return default(float);
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xB5B730", Offset = "0xB5B730", VA = "0xB5B730")]
		public void MoveOccupation(int from, int to)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xB486E4", Offset = "0xB486E4", VA = "0xB486E4")]
		public void Init()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xB486FC", Offset = "0xB486FC", VA = "0xB486FC")]
		public void SetRouteLapsUnoccupied()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xB5B830", Offset = "0xB5B830", VA = "0xB5B830")]
		public RecordingRunner()
		{
		}
	}
	[Token(Token = "0x2000097")]
	public class ShipRecorder : RacerBase
	{
		[Token(Token = "0x2000188")]
		[Flags]
		public enum RecordingOptions
		{
			[Token(Token = "0x4000D3C")]
			RecordBikeSim = 1,
			[Token(Token = "0x4000D3D")]
			RecordBikeAI = 2,
			[Token(Token = "0x4000D3E")]
			RecordSpeed = 4
		}

		[Token(Token = "0x2000189")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDDFC", Offset = "0x9BDDFC")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string recPrefix;

			[Token(Token = "0x600099E")]
			[Address(RVA = "0xB9B340", Offset = "0xB9B340", VA = "0xB9B340")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0xB9B4CC", Offset = "0xB9B4CC", VA = "0xB9B4CC")]
			internal bool <GetLatestRecordings>b__0(string s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool record;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public RecordingOptions recordingOptions;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bike targetBike;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BikeSim targetBikeSim;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BikeAI targetAI;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform target;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool paused;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool pauseNextFrame;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Path fullFilePath;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool matchTimeOnPlayback;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float timeOffset;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject ghost;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SplineTrack track;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int playheadPosition;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Stream fileStream;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SimpleRecordingFileReader recFileReader;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SimpleSerializer serializer;

		[Token(Token = "0x40005BF")]
		public const string filePrefixEditor = "LocalData/";

		[Token(Token = "0x40005C0")]
		public const string recordingsDirName = "RouteRecordings/";

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TextAsset playbackRecording;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int recordingFileVersion;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float smoothedBank;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float queuedUpSampleTime;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lastSetTime;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float maxPlayAheadTime;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float playbackTimeElapsed;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float raceTimeLastFrame;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector2 trackPos;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float speed;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 velocity;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 previousPos;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Trans pointA;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Trans pointB;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float timeA;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float timeB;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool recordingFull;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public BikeSim.State bikeSimState;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public BikeAI.StateSummary bikeAIState;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private float speedFactor;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float characterSpeed;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float initialXOffset;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float offsetDuration;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private MemoryStream memoryStream;

		[Token(Token = "0x40005D9")]
		public const string raceAnalysisRecordingDir = "RaceAnalysis";

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xB999CC", Offset = "0xB999CC", VA = "0xB999CC")]
		public static Path GetRecordingsPath()
		{
			return null;
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xB999E8", Offset = "0xB999E8", VA = "0xB999E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xB99D18", Offset = "0xB99D18", VA = "0xB99D18")]
		private void PlaybackOneFrame()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xB9A8F4", Offset = "0xB9A8F4", VA = "0xB9A8F4", Slot = "5")]
		public override Vector2 GetPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xB9A8FC", Offset = "0xB9A8FC", VA = "0xB9A8FC", Slot = "6")]
		public override float GetBank()
		{
			return default(float);
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xB9A904", Offset = "0xB9A904", VA = "0xB9A904", Slot = "12")]
		public override float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xB9A90C", Offset = "0xB9A90C", VA = "0xB9A90C", Slot = "13")]
		public override Vector2 GetVelocity()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xB9A96C", Offset = "0xB9A96C", VA = "0xB9A96C", Slot = "10")]
		public override void SetSpeedFactor(float factor)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xB9A974", Offset = "0xB9A974", VA = "0xB9A974", Slot = "11")]
		public override float GetSpeedFactor()
		{
			return default(float);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xB9A97C", Offset = "0xB9A97C", VA = "0xB9A97C", Slot = "9")]
		public override bool IsLocalPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xB9A984", Offset = "0xB9A984", VA = "0xB9A984")]
		private void Update()
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xB9AC68", Offset = "0xB9AC68", VA = "0xB9AC68")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xB9AC9C", Offset = "0xB9AC9C", VA = "0xB9AC9C")]
		public static ShipRecorder SetupGhostPlayback(string playbackPath, bool matchTime, float timeOffset, [Optional] Color? color)
		{
			return null;
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xB9AE5C", Offset = "0xB9AE5C", VA = "0xB9AE5C")]
		public static ShipRecorder SetupGhostPlayback(MemoryStream memoryStream, bool matchTime, float timeOffset, [Optional] Color? color)
		{
			return null;
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xB9AEAC", Offset = "0xB9AEAC", VA = "0xB9AEAC")]
		public void FreeGhost()
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xB9AF54", Offset = "0xB9AF54", VA = "0xB9AF54")]
		public void AddInitialOffset(float xOffset, float time)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xB9AF60", Offset = "0xB9AF60", VA = "0xB9AF60")]
		public static GameObject SetupRecord(string recordFilename)
		{
			return null;
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xB9B060", Offset = "0xB9B060", VA = "0xB9B060")]
		public static ShipRecorder SetupRecord(string recordFilename, BikeSim bikeSim, RecordingOptions options)
		{
			return null;
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xB9B124", Offset = "0xB9B124", VA = "0xB9B124")]
		public static ShipRecorder SetupRecord(MemoryStream memStream, BikeSim bikeSim, RecordingOptions options)
		{
			return null;
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xB9B1D8", Offset = "0xB9B1D8", VA = "0xB9B1D8", Slot = "14")]
		public override void RaceInit(RaceController rc)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xB9B1DC", Offset = "0xB9B1DC", VA = "0xB9B1DC", Slot = "15")]
		public override void GotoStart()
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xB9B1E0", Offset = "0xB9B1E0", VA = "0xB9B1E0")]
		public static Path GetLatestRecordings(string recPrefix)
		{
			return null;
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xB9B348", Offset = "0xB9B348", VA = "0xB9B348")]
		public void SetIdle()
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xB9B3B8", Offset = "0xB9B3B8", VA = "0xB9B3B8", Slot = "17")]
		public override Vector3 GetTrailWiggleDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xB9B418", Offset = "0xB9B418", VA = "0xB9B418")]
		public ShipRecorder()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class ToolTip : MonoBehaviour
	{
		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform panel;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xBA5AC4", Offset = "0xBA5AC4", VA = "0xBA5AC4")]
		public void SetSize(Vector2 size)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xBA5B18", Offset = "0xBA5B18", VA = "0xBA5B18")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xBA5B34", Offset = "0xBA5B34", VA = "0xBA5B34")]
		public ToolTip()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class Track : SingletonMono<Track>
	{
		[Token(Token = "0x200018A")]
		public enum TrackStatus
		{
			[Token(Token = "0x4000D41")]
			Inactive,
			[Token(Token = "0x4000D42")]
			Active,
			[Token(Token = "0x4000D43")]
			Visible
		}

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TrackSection> trackSections;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrackSection activeSection;

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xBA6C1C", Offset = "0xBA6C1C", VA = "0xBA6C1C")]
		internal void SetCanSee(TrackSection ts)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xBA6C48", Offset = "0xBA6C48", VA = "0xBA6C48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xBA6CDC", Offset = "0xBA6CDC", VA = "0xBA6CDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xBA6CE0", Offset = "0xBA6CE0", VA = "0xBA6CE0")]
		public void UpdateTrackVisibility(Vector3 position)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xBA6E0C", Offset = "0xBA6E0C", VA = "0xBA6E0C")]
		internal void SetActiveSection(TrackSection section)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xBA6ECC", Offset = "0xBA6ECC", VA = "0xBA6ECC")]
		public Track()
		{
		}
	}
	[Token(Token = "0x200009A")]
	public class TrackBuilderUtil
	{
		[Token(Token = "0x600041A")]
		[Address(RVA = "0xBA6F64", Offset = "0xBA6F64", VA = "0xBA6F64")]
		public TrackBuilderUtil()
		{
		}
	}
	[Token(Token = "0x200009B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD99C", Offset = "0x9BD99C")]
	public class TrackMotionBlurTool : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200018B")]
		public class BlurredTextureDetails
		{
			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D tex;

			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int sigma;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int angle;

			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xBA9B2C", Offset = "0xBA9B2C", VA = "0xBA9B2C")]
			public BlurredTextureDetails()
			{
			}
		}

		[Token(Token = "0x200018C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE0C", Offset = "0x9BDE0C")]
		private sealed class <EnumAngles>d__7 : IEnumerable<int>, IEnumerable, IEnumerator<int>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <>2__current;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackMotionBlurTool <>4__this;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <prevAngle>5__2;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<int> <>7__wrap2;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int[] <>7__wrap3;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap4;

			[Token(Token = "0x170000B8")]
			private int System.Collections.Generic.IEnumerator<System.Int32>.Current
			{
				[Token(Token = "0x60009A5")]
				[Address(RVA = "0xBA9710", Offset = "0xBA9710", VA = "0xBA9710", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170000B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009A7")]
				[Address(RVA = "0xBA977C", Offset = "0xBA977C", VA = "0xBA977C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xBA8A70", Offset = "0xBA8A70", VA = "0xBA8A70")]
			[DebuggerHidden]
			public <EnumAngles>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xBA9294", Offset = "0xBA9294", VA = "0xBA9294", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0xBA9370", Offset = "0xBA9370", VA = "0xBA9370", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0xBA92B0", Offset = "0xBA92B0", VA = "0xBA92B0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0xBA9718", Offset = "0xBA9718", VA = "0xBA9718", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xBA97E0", Offset = "0xBA97E0", VA = "0xBA97E0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<int> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xBA9890", Offset = "0xBA9890", VA = "0xBA9890", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200018D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE1C", Offset = "0x9BDE1C")]
		private sealed class <EnumSigmas>d__8 : IEnumerable<int>, IEnumerable, IEnumerator<int>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <>2__current;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackMotionBlurTool <>4__this;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <prev>5__2;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <>7__wrap2;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x170000BA")]
			private int System.Collections.Generic.IEnumerator<System.Int32>.Current
			{
				[Token(Token = "0x60009AD")]
				[Address(RVA = "0xBA99A8", Offset = "0xBA99A8", VA = "0xBA99A8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170000BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009AF")]
				[Address(RVA = "0xBA9A14", Offset = "0xBA9A14", VA = "0xBA9A14", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009AA")]
			[Address(RVA = "0xBA8B2C", Offset = "0xBA8B2C", VA = "0xBA8B2C")]
			[DebuggerHidden]
			public <EnumSigmas>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xBA9894", Offset = "0xBA9894", VA = "0xBA9894", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xBA9898", Offset = "0xBA9898", VA = "0xBA9898", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xBA99B0", Offset = "0xBA99B0", VA = "0xBA99B0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009B0")]
			[Address(RVA = "0xBA9A78", Offset = "0xBA9A78", VA = "0xBA9A78", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<int> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xBA9B28", Offset = "0xBA9B28", VA = "0xBA9B28", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D src;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hackHDR;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BEFB0", Offset = "0x9BEFB0")]
		public Vector2 outputSize;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] angles;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] sigmas;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BlurredTextureDetails srcDetails;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BlurredTextureDetails[] blurredTextures;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[ReadOnly]
		public int[] angleTable;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[ReadOnly]
		public int[] sigmaTable;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF008", Offset = "0x9BF008")]
		public float speedOverride;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool forwardOnly;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF040", Offset = "0x9BF040")]
		public float eyeHandleDegrees;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF078", Offset = "0x9BF078")]
		public float stripeBlurScale;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF0B0", Offset = "0x9BF0B0")]
		public float uvLengthMeters;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF0E8", Offset = "0x9BF0E8")]
		public float uvScale;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF120", Offset = "0x9BF120")]
		public float sigmaLengthPerMetreTravelled;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float secondSubLayerFadeStart;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float secondSubLayerFadeEnd;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Func<int, float> angleIndexFn_delegate;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Func<int, float> sigmaIndexFn_delegate;

		[Token(Token = "0x1700003C")]
		public int numAngles
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0xBA8B64", Offset = "0xBA8B64", VA = "0xBA8B64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700003D")]
		public int numSigmas
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0xBA8B84", Offset = "0xBA8B84", VA = "0xBA8B84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xBA89EC", Offset = "0xBA89EC", VA = "0xBA89EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0808", Offset = "0x9C0808")]
		public IEnumerable<int> EnumAngles()
		{
			return null;
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xBA8AA8", Offset = "0xBA8AA8", VA = "0xBA8AA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C086C", Offset = "0x9C086C")]
		public IEnumerable<int> EnumSigmas()
		{
			return null;
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xBA8BA4", Offset = "0xBA8BA4", VA = "0xBA8BA4")]
		private float angleIndexFn(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xBA8BEC", Offset = "0xBA8BEC", VA = "0xBA8BEC")]
		private float sigmaIndexFn(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xBA8C34", Offset = "0xBA8C34", VA = "0xBA8C34")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xBA8CDC", Offset = "0xBA8CDC", VA = "0xBA8CDC")]
		public int GetAngleIndex(float angle)
		{
			return default(int);
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xBA8D88", Offset = "0xBA8D88", VA = "0xBA8D88")]
		public int GetSigmaIndex(float sigma)
		{
			return default(int);
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xBA8E6C", Offset = "0xBA8E6C", VA = "0xBA8E6C")]
		public BlurredTextureDetails GetTexture(float angle, float sigma)
		{
			return null;
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xBA8EFC", Offset = "0xBA8EFC", VA = "0xBA8EFC")]
		private int TextureID(int sigmaIndex, int angleIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xBA8F20", Offset = "0xBA8F20", VA = "0xBA8F20")]
		public void SetMaterialProperties(Vector3 velocity, float lateralSpeed, float effectiveHeading, Material material, float overrideUvLengthMeters = -1f, float overrideUVScale = -1f)
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xBA9280", Offset = "0xBA9280", VA = "0xBA9280")]
		public TrackMotionBlurTool()
		{
		}
	}
	[Token(Token = "0x200009C")]
	public class IceCrystal : MonoBehaviour
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float startTime;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform crystal;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform glow;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve crystalScale;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve glowScale;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool destroyAtAnimEnd;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF158", Offset = "0x9BF158")]
		public float testTime;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float animSpeed;

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xBB197C", Offset = "0xBB197C", VA = "0xBB197C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xBB1BC4", Offset = "0xBB1BC4", VA = "0xBB1BC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xBB1B18", Offset = "0xBB1B18", VA = "0xBB1B18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C08D0", Offset = "0x9C08D0")]
		public void ResetTime()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xBB1DD4", Offset = "0xBB1DD4", VA = "0xBB1DD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xBB1E54", Offset = "0xBB1E54", VA = "0xBB1E54")]
		public IceCrystal()
		{
		}
	}
	[Token(Token = "0x200009D")]
	public class AITrainer : RaceLevelController
	{
		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int numAiBikes;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int indexToFollow;

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xB83870", Offset = "0xB83870", VA = "0xB83870")]
		public AITrainer()
		{
		}
	}
	[Token(Token = "0x200009E")]
	public class ComfortExperiment : MonoBehaviour
	{
		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject safetyGrid;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cockpitBody;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject cockpitRoof;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cockpitMinimal;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool safetyGridActive;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int cockpitLevel;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int scenarioIndex;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int gapDecelerationMode;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] maxDecelerationExperimentValues;

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xB69F00", Offset = "0xB69F00", VA = "0xB69F00")]
		private void Start()
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xB6A104", Offset = "0xB6A104", VA = "0xB6A104")]
		private void Update()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xB69F08", Offset = "0xB69F08", VA = "0xB69F08")]
		private void SetScenario(int index)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xB6A388", Offset = "0xB6A388", VA = "0xB6A388")]
		public ComfortExperiment()
		{
		}
	}
	[Token(Token = "0x200009F")]
	public class FastLapLevelController : RaceLevelController
	{
		[Token(Token = "0x200018E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE2C", Offset = "0x9BDE2C")]
		private sealed class <LevelFlow>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastLapLevelController <>4__this;

			[Token(Token = "0x170000BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009B5")]
				[Address(RVA = "0xB74028", Offset = "0xB74028", VA = "0xB74028", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009B7")]
				[Address(RVA = "0xB74094", Offset = "0xB74094", VA = "0xB74094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009B2")]
			[Address(RVA = "0xB71DCC", Offset = "0xB71DCC", VA = "0xB71DCC")]
			[DebuggerHidden]
			public <LevelFlow>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xB73B14", Offset = "0xB73B14", VA = "0xB73B14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009B4")]
			[Address(RVA = "0xB73B18", Offset = "0xB73B18", VA = "0xB73B18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009B6")]
			[Address(RVA = "0xB74030", Offset = "0xB74030", VA = "0xB74030", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200018F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE3C", Offset = "0x9BDE3C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<float, bool> <>9__21_0;

			[Token(Token = "0x60009B9")]
			[Address(RVA = "0xB73AD0", Offset = "0xB73AD0", VA = "0xB73AD0")]
			public <>c()
			{
			}

			[Token(Token = "0x60009BA")]
			[Address(RVA = "0xB73AD8", Offset = "0xB73AD8", VA = "0xB73AD8")]
			internal bool <QuickestLap>b__21_0(float x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE4C", Offset = "0x9BDE4C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FastLapLevelController <>4__this;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int diff;

			[Token(Token = "0x60009BB")]
			[Address(RVA = "0xB733E4", Offset = "0xB733E4", VA = "0xB733E4")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60009BC")]
			[Address(RVA = "0xB73AE4", Offset = "0xB73AE4", VA = "0xB73AE4")]
			internal float <GetThresholds>b__0(int vic)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int[] victoryTimes;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float victoryTimeScaleEasy;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float victoryTimeScaleMed;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float victoryTimeScaleHard;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float lastLapRaceTime;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float fastestLap;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Victory bestVictory;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Victory prevVictory;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float[] lapTimes;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private HighWaterMemoryStream[] memoryStreams;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private HighWaterMemoryStream fastestLapMemoryStream;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private ShipRecorder[] shipPlaybacks;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ShipRecorder shipRecorder;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private byte[][] buffers;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int currentRecordIndex;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float prevRecordingStartTime;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float fastestLapStartTime;

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xB71B2C", Offset = "0xB71B2C", VA = "0xB71B2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xB71DC4", Offset = "0xB71DC4", VA = "0xB71DC4")]
		private new void Update()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xB71D50", Offset = "0xB71D50", VA = "0xB71D50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0908", Offset = "0x9C0908")]
		private IEnumerator LevelFlow()
		{
			return null;
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xB71DF8", Offset = "0xB71DF8", VA = "0xB71DF8")]
		private void RecordLeaderBoardEntry(float time)
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xB71EA8", Offset = "0xB71EA8", VA = "0xB71EA8")]
		private void RecordAllLaps()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xB71F30", Offset = "0xB71F30", VA = "0xB71F30")]
		private float QuickestLap()
		{
			return default(float);
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xB72058", Offset = "0xB72058", VA = "0xB72058")]
		private string GetResultsString()
		{
			return null;
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xB72424", Offset = "0xB72424", VA = "0xB72424")]
		private Victory LapTimeToVictory(float time)
		{
			return default(Victory);
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xB7251C", Offset = "0xB7251C", VA = "0xB7251C", Slot = "28")]
		protected override void OnPlayerCrossedStartLine()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xB72A60", Offset = "0xB72A60", VA = "0xB72A60", Slot = "29")]
		protected override void OnPlayerCompletedLap(int lapsCompleted, bool validForFastlap)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xB72984", Offset = "0xB72984", VA = "0xB72984")]
		private void OnPlayerCrossedStartLineOrCompletedLap()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xB72560", Offset = "0xB72560", VA = "0xB72560")]
		private void StopStartRecording(bool fastestLap)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xB72D50", Offset = "0xB72D50", VA = "0xB72D50")]
		private string FormatVictoryTime(Victory vi)
		{
			return null;
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xB72DE8", Offset = "0xB72DE8", VA = "0xB72DE8")]
		private float GetDiffScale(BlurGlobals.Difficulty diffLevel = BlurGlobals.Difficulty.None)
		{
			return default(float);
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xB724BC", Offset = "0xB724BC", VA = "0xB724BC")]
		private int GetVictoryTime(int vi)
		{
			return default(int);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xB72F2C", Offset = "0xB72F2C", VA = "0xB72F2C")]
		public int GetVictoryTime(int vi, int diffLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xB72F8C", Offset = "0xB72F8C", VA = "0xB72F8C", Slot = "19")]
		public override string GetModeName()
		{
			return null;
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xB73088", Offset = "0xB73088", VA = "0xB73088", Slot = "20")]
		public override string GetShortModeName()
		{
			return null;
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xB730D0", Offset = "0xB730D0", VA = "0xB730D0", Slot = "18")]
		public override string[] GetTargetStrings()
		{
			return null;
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xB7318C", Offset = "0xB7318C", VA = "0xB7318C", Slot = "21")]
		public override void SetHudText(TextMeshPro hudText, BikeSim bikeSim, BlurConfig.BikeModelID bikeID)
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xB732C0", Offset = "0xB732C0", VA = "0xB732C0", Slot = "22")]
		public override float[] GetThresholds(int diff)
		{
			return null;
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xB733EC", Offset = "0xB733EC", VA = "0xB733EC", Slot = "24")]
		public override RemoteConfig.LCConfigItem GetConfig()
		{
			return null;
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xB73648", Offset = "0xB73648", VA = "0xB73648", Slot = "25")]
		public override void ApplyConfig(RemoteConfig.LCConfigItem config)
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xB737CC", Offset = "0xB737CC", VA = "0xB737CC", Slot = "26")]
		public override void CopyLCParamsToHigherVoltage(LevelController target, int targetVoltage)
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xB738BC", Offset = "0xB738BC", VA = "0xB738BC", Slot = "27")]
		public override string GetCallToAction()
		{
			return null;
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xB739B8", Offset = "0xB739B8", VA = "0xB739B8")]
		public FastLapLevelController()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	public abstract class LevelController : MonoBehaviour, IContext
	{
		[Token(Token = "0x2000191")]
		public enum Victory
		{
			[Token(Token = "0x4000D5E")]
			Gold,
			[Token(Token = "0x4000D5F")]
			Silver,
			[Token(Token = "0x4000D60")]
			Bronze,
			[Token(Token = "0x4000D61")]
			None
		}

		[Token(Token = "0x2000192")]
		[Flags]
		public enum LapCompleteType
		{
			[Token(Token = "0x4000D63")]
			Normal = 0,
			[Token(Token = "0x4000D64")]
			Fastest = 1,
			[Token(Token = "0x4000D65")]
			BestMedal = 2,
			[Token(Token = "0x4000D66")]
			FastestAndBestMedal = 3,
			[Token(Token = "0x4000D67")]
			BestMedalEver = 4,
			[Token(Token = "0x4000D68")]
			FastestAndBestMedalEver = 7
		}

		[Token(Token = "0x2000193")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE6C", Offset = "0x9BDE6C")]
		private sealed class <HideLoadingScreen>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelController <>4__this;

			[Token(Token = "0x170000BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009C0")]
				[Address(RVA = "0xBB6128", Offset = "0xBB6128", VA = "0xBB6128", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009C2")]
				[Address(RVA = "0xBB6194", Offset = "0xBB6194", VA = "0xBB6194", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009BD")]
			[Address(RVA = "0xBB2D68", Offset = "0xBB2D68", VA = "0xBB2D68")]
			[DebuggerHidden]
			public <HideLoadingScreen>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60009BE")]
			[Address(RVA = "0xBB5E30", Offset = "0xBB5E30", VA = "0xBB5E30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009BF")]
			[Address(RVA = "0xBB5E34", Offset = "0xBB5E34", VA = "0xBB5E34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009C1")]
			[Address(RVA = "0xBB6130", Offset = "0xBB6130", VA = "0xBB6130", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE7C", Offset = "0x9BDE7C")]
		private sealed class <ClearNamesTexture_CR>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private GameObject <rendererObj>5__2;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private NameTextureMaker <ntm>5__3;

			[Token(Token = "0x170000C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009C6")]
				[Address(RVA = "0xBB57E8", Offset = "0xBB57E8", VA = "0xBB57E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009C8")]
				[Address(RVA = "0xBB5854", Offset = "0xBB5854", VA = "0xBB5854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009C3")]
			[Address(RVA = "0xBB53C8", Offset = "0xBB53C8", VA = "0xBB53C8")]
			[DebuggerHidden]
			public <ClearNamesTexture_CR>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60009C4")]
			[Address(RVA = "0xBB560C", Offset = "0xBB560C", VA = "0xBB560C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009C5")]
			[Address(RVA = "0xBB5610", Offset = "0xBB5610", VA = "0xBB5610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009C7")]
			[Address(RVA = "0xBB57F0", Offset = "0xBB57F0", VA = "0xBB57F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000195")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE8C", Offset = "0x9BDE8C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TournamentRacer, string> <>9__66_0;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__67_0;

			[Token(Token = "0x60009CA")]
			[Address(RVA = "0xBB55E4", Offset = "0xBB55E4", VA = "0xBB55E4")]
			public <>c()
			{
			}

			[Token(Token = "0x60009CB")]
			[Address(RVA = "0xBB55EC", Offset = "0xBB55EC", VA = "0xBB55EC")]
			internal string <GenerateNamesTexture>b__66_0(TournamentRacer x)
			{
				return null;
			}

			[Token(Token = "0x60009CC")]
			[Address(RVA = "0xBB5608", Offset = "0xBB5608", VA = "0xBB5608")]
			internal void <.ctor>b__67_0()
			{
			}
		}

		[Token(Token = "0x2000196")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDE9C", Offset = "0x9BDE9C")]
		private sealed class <GenerateNamesTexture>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private GameObject <rendererObj>5__2;

			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private NameTextureMaker <ntm>5__3;

			[Token(Token = "0x170000C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009D0")]
				[Address(RVA = "0xBB5DBC", Offset = "0xBB5DBC", VA = "0xBB5DBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009D2")]
				[Address(RVA = "0xBB5E28", Offset = "0xBB5E28", VA = "0xBB5E28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xBB5454", Offset = "0xBB5454", VA = "0xBB5454")]
			[DebuggerHidden]
			public <GenerateNamesTexture>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60009CE")]
			[Address(RVA = "0xBB585C", Offset = "0xBB585C", VA = "0xBB585C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xBB5860", Offset = "0xBB5860", VA = "0xBB5860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009D1")]
			[Address(RVA = "0xBB5DC4", Offset = "0xBB5DC4", VA = "0xBB5DC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool leaderBoard;

		[NonSerialized]
		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string leaderBoardTable;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SplineTrack track;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF170", Offset = "0x9BF170")]
		public int voltage;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string TitleOverride;

		[NonSerialized]
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool doForceVictory;

		[NonSerialized]
		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Victory forceVictory;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nextLevelSessionIndex;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static int currentLevelSessionIndex;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool startRecorded;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnLevelGainedFocus;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEngine.Object sceneObject;

		[NonSerialized]
		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackLightTextureController lightController;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		private string cachedSceneName;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool dismissed;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool loadingScreenCleared;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string pickupsUsed;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextAsset inputPlaybackFile;

		[Token(Token = "0x1700003E")]
		public string Title
		{
			[Token(Token = "0x600044C")]
			[Address(RVA = "0xBB2B2C", Offset = "0xBB2B2C", VA = "0xBB2B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		[ShowInInspector]
		public string SceneName
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0xBB2B80", Offset = "0xBB2B80", VA = "0xBB2B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		[ShowInInspector]
		public string SaveID
		{
			[Token(Token = "0x6000450")]
			[Address(RVA = "0xBB2BB8", Offset = "0xBB2BB8", VA = "0xBB2BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		public string RecPrefix
		{
			[Token(Token = "0x6000451")]
			[Address(RVA = "0xBB2C14", Offset = "0xBB2C14", VA = "0xBB2C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xBB2B78", Offset = "0xBB2B78", VA = "0xBB2B78")]
		public void SetSceneName(string name)
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xBB2B88", Offset = "0xBB2B88", VA = "0xBB2B88")]
		public Victory PositionToVictory(int pos)
		{
			return default(Victory);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0xBB2C30", Offset = "0xBB2C30", VA = "0xBB2C30", Slot = "11")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xBB2CEC", Offset = "0xBB2CEC", VA = "0xBB2CEC", Slot = "12")]
		public virtual IEnumerator UnloadScene()
		{
			return null;
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xBB2CF4", Offset = "0xBB2CF4", VA = "0xBB2CF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C096C", Offset = "0x9C096C")]
		protected IEnumerator HideLoadingScreen()
		{
			return null;
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xBB2D94", Offset = "0xBB2D94", VA = "0xBB2D94", Slot = "5")]
		public void OnPushed()
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xBB2D98", Offset = "0xBB2D98", VA = "0xBB2D98", Slot = "6")]
		public void OnPopped()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xBB2D9C", Offset = "0xBB2D9C", VA = "0xBB2D9C", Slot = "4")]
		public void OnGainFocus()
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xBB31AC", Offset = "0xBB31AC", VA = "0xBB31AC")]
		private void RecordStart()
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xBB3A78", Offset = "0xBB3A78", VA = "0xBB3A78", Slot = "7")]
		public void OnLoseFocus()
		{
		}

		[Token(Token = "0x600045A")]
		protected abstract void TogglePause();

		[Token(Token = "0x600045B")]
		protected abstract void SummonPauseMenu();

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xBB3B78", Offset = "0xBB3B78", VA = "0xBB3B78", Slot = "15")]
		public virtual void ContextUpdate()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xBB3DF4", Offset = "0xBB3DF4", VA = "0xBB3DF4", Slot = "9")]
		public List<ContextManager.Property> GetProps()
		{
			return null;
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xBB3E88", Offset = "0xBB3E88", VA = "0xBB3E88", Slot = "10")]
		public UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x600045F")]
		public abstract string GetInfoString();

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xBB3F08", Offset = "0xBB3F08", VA = "0xBB3F08", Slot = "17")]
		public virtual bool CanEdit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xBB3F10", Offset = "0xBB3F10", VA = "0xBB3F10")]
		public void Dismiss()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xBB3F1C", Offset = "0xBB3F1C", VA = "0xBB3F1C", Slot = "18")]
		public virtual string[] GetTargetStrings()
		{
			return null;
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xBB3FC4", Offset = "0xBB3FC4", VA = "0xBB3FC4", Slot = "19")]
		public virtual string GetModeName()
		{
			return null;
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xBB400C", Offset = "0xBB400C", VA = "0xBB400C", Slot = "20")]
		public virtual string GetShortModeName()
		{
			return null;
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xBB4054", Offset = "0xBB4054", VA = "0xBB4054")]
		public void SaveVictory(Victory victory)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xBB41A0", Offset = "0xBB41A0", VA = "0xBB41A0")]
		public Victory GetBestVictory()
		{
			return default(Victory);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xBB4230", Offset = "0xBB4230", VA = "0xBB4230")]
		public void RecordPickupGranted(SimpleTrack.PickupType type)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xBB42EC", Offset = "0xBB42EC", VA = "0xBB42EC")]
		public void RecordPickupUsed(SimpleTrack.PickupType powerPack)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xBB4348", Offset = "0xBB4348", VA = "0xBB4348")]
		public void RecordComplete(Victory victory, float score, float raceTime)
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xBB4ABC", Offset = "0xBB4ABC", VA = "0xBB4ABC")]
		public void RecordLap(float time)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xBB4D9C", Offset = "0xBB4D9C", VA = "0xBB4D9C")]
		protected void LevelComplete(string results, Victory victory, MPController.GameJoinSuccess networkSuccess = MPController.GameJoinSuccess.Ok)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xBB4E70", Offset = "0xBB4E70", VA = "0xBB4E70")]
		public void Unlock()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xBB4EE8", Offset = "0xBB4EE8", VA = "0xBB4EE8", Slot = "21")]
		public virtual void SetHudText(TextMeshPro hudText, BikeSim bikeSim, BlurConfig.BikeModelID bikeID)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0xBB5084", Offset = "0xBB5084", VA = "0xBB5084", Slot = "22")]
		public virtual float[] GetThresholds(int i)
		{
			return null;
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xBB50F0", Offset = "0xBB50F0", VA = "0xBB50F0", Slot = "23")]
		public virtual void WriteExtraDetails(TextMeshProUGUI[] mrefExtraDetailTexts, TextMeshProUGUI[] mrefExtraDetailTitles)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xBB51BC", Offset = "0xBB51BC", VA = "0xBB51BC", Slot = "24")]
		public virtual RemoteConfig.LCConfigItem GetConfig()
		{
			return null;
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xBB5238", Offset = "0xBB5238", VA = "0xBB5238", Slot = "25")]
		public virtual void ApplyConfig(RemoteConfig.LCConfigItem config)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xBB523C", Offset = "0xBB523C", VA = "0xBB523C", Slot = "26")]
		public virtual void CopyLCParamsToHigherVoltage(LevelController target, int voltage)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xBB5240", Offset = "0xBB5240", VA = "0xBB5240", Slot = "27")]
		public virtual string GetCallToAction()
		{
			return null;
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xBB533C", Offset = "0xBB533C", VA = "0xBB533C")]
		public void ClearNamesTexture()
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xBB5368", Offset = "0xBB5368", VA = "0xBB5368")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C09D0", Offset = "0x9C09D0")]
		private IEnumerator ClearNamesTexture_CR()
		{
			return null;
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xBB53F4", Offset = "0xBB53F4", VA = "0xBB53F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0A34", Offset = "0x9C0A34")]
		protected static IEnumerator GenerateNamesTexture()
		{
			return null;
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0xBB5480", Offset = "0xBB5480", VA = "0xBB5480")]
		protected LevelController()
		{
		}
	}
	[Token(Token = "0x20000A1")]
	public class MPRaceController : RaceLevelController
	{
		[Serializable]
		[Token(Token = "0x2000197")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDEAC", Offset = "0x9BDEAC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__11_0;

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__11_1;

			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xBBB1B8", Offset = "0xBBB1B8", VA = "0xBBB1B8")]
			public <>c()
			{
			}

			[Token(Token = "0x60009D5")]
			[Address(RVA = "0xBBB1C0", Offset = "0xBBB1C0", VA = "0xBBB1C0")]
			internal void <SummonPauseMenu>b__11_0()
			{
			}

			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xBBB27C", Offset = "0xBBB27C", VA = "0xBBB27C")]
			internal void <SummonPauseMenu>b__11_1()
			{
			}
		}

		[Token(Token = "0x2000198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDEBC", Offset = "0x9BDEBC")]
		private sealed class <LevelFlow>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MPRaceController <>4__this;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startWaitToJoinTime>5__2;

			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private MPController.GameJoinSuccess <networkSuccess>5__3;

			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <joinedRoomTime>5__4;

			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <countdownStartTime>5__5;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startedWaitingForRaceInfoTime>5__6;

			[Token(Token = "0x170000C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009DA")]
				[Address(RVA = "0xBBC548", Offset = "0xBBC548", VA = "0xBBC548", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009DC")]
				[Address(RVA = "0xBBC5B4", Offset = "0xBBC5B4", VA = "0xBBC5B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xBBA928", Offset = "0xBBA928", VA = "0xBBA928")]
			[DebuggerHidden]
			public <LevelFlow>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60009D8")]
			[Address(RVA = "0xBBB28C", Offset = "0xBBB28C", VA = "0xBBB28C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xBBB290", Offset = "0xBBB290", VA = "0xBBB290", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xBBC550", Offset = "0xBBC550", VA = "0xBBC550", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MPController mp;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MPPlayerView[] playerViews;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private MPPlayerView localPV;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int playerViewCount;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private BikeSim localBikeSim;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool aborted;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool extraMPAnalytics;

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xBB91B8", Offset = "0xBB91B8", VA = "0xBB91B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xBB9250", Offset = "0xBB9250", VA = "0xBB9250", Slot = "11")]
		public override void Init()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0xBB92CC", Offset = "0xBB92CC", VA = "0xBB92CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xBB93F8", Offset = "0xBB93F8", VA = "0xBB93F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xBB9524", Offset = "0xBB9524", VA = "0xBB9524", Slot = "14")]
		protected override void SummonPauseMenu()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xBB998C", Offset = "0xBB998C", VA = "0xBB998C")]
		private void Start()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xBB9A2C", Offset = "0xBB9A2C", VA = "0xBB9A2C", Slot = "20")]
		public override string GetShortModeName()
		{
			return null;
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xBB9A74", Offset = "0xBB9A74", VA = "0xBB9A74")]
		private void OnPlayerDisconnect(int actorNumber)
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xBB9D2C", Offset = "0xBB9D2C", VA = "0xBB9D2C")]
		private void OnPlayerViewRegistered(MPPlayerView playerView, int index)
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xBB9FC0", Offset = "0xBB9FC0", VA = "0xBB9FC0")]
		private void OnSimEvent(MPPlayerView.BikeSimEvent e, int sourceActorNum, object param1, object param2)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xBB9FDC", Offset = "0xBB9FDC", VA = "0xBB9FDC")]
		public void SendRPC(string methodName, RpcTarget target, params object[] p)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xBBA0A8", Offset = "0xBBA0A8", VA = "0xBBA0A8")]
		public void SendLocalSimEvent(MPPlayerView.BikeSimEvent e, RpcTarget target, object param1, object param2)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xBBA250", Offset = "0xBBA250", VA = "0xBBA250")]
		public void SendSimEventToAllOthers(MPPlayerView.BikeSimEvent e, [Optional] object param1, [Optional] object param2)
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xBBA580", Offset = "0xBBA580", VA = "0xBBA580")]
		private new void Update()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xBB99B8", Offset = "0xBB99B8", VA = "0xBB99B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0A98", Offset = "0x9C0A98")]
		private IEnumerator LevelFlow()
		{
			return null;
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xBBA954", Offset = "0xBBA954", VA = "0xBBA954", Slot = "29")]
		protected override void OnPlayerCompletedLap(int lapsCompleted, bool validForFastlap)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xBBAA64", Offset = "0xBBAA64", VA = "0xBBAA64")]
		private void SpawnRemoteBikes()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xBBAF58", Offset = "0xBBAF58", VA = "0xBBAF58", Slot = "24")]
		public override RemoteConfig.LCConfigItem GetConfig()
		{
			return null;
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xBBAF60", Offset = "0xBBAF60", VA = "0xBBAF60", Slot = "25")]
		public override void ApplyConfig(RemoteConfig.LCConfigItem config)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xBBAF64", Offset = "0xBBAF64", VA = "0xBBAF64")]
		public MPRaceController()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xBBAF70", Offset = "0xBBAF70", VA = "0xBBAF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0AFC", Offset = "0x9C0AFC")]
		private void <SummonPauseMenu>b__11_2()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public class MultiRaceRecorder : RaceLevelController
	{
		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<RecordingMetaData> recordingMetas;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public RecordingMetaData testRoute;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public RecordingMetaData.Type typeToRecord;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool startAIBike;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool record;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		public bool playback;

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xB47EC8", Offset = "0xB47EC8", VA = "0xB47EC8")]
		public MultiRaceRecorder()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class MultiRaceTester : RaceLevelController
	{
		[Serializable]
		[Token(Token = "0x2000199")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDECC", Offset = "0x9BDECC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__6_0;

			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xB48E48", Offset = "0xB48E48", VA = "0xB48E48")]
			public <>c()
			{
			}

			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xB48E50", Offset = "0xB48E50", VA = "0xB48E50")]
			internal bool <PlaybackFlow>b__6_0(string filename)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200019A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDEDC", Offset = "0x9BDEDC")]
		private sealed class <PlaybackFlow>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiRaceTester <>4__this;

			[Token(Token = "0x170000C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009E3")]
				[Address(RVA = "0xB4A328", Offset = "0xB4A328", VA = "0xB4A328", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009E5")]
				[Address(RVA = "0xB4A394", Offset = "0xB4A394", VA = "0xB4A394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xB480A8", Offset = "0xB480A8", VA = "0xB480A8")]
			[DebuggerHidden]
			public <PlaybackFlow>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xB49B6C", Offset = "0xB49B6C", VA = "0xB49B6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xB49B70", Offset = "0xB49B70", VA = "0xB49B70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xB4A330", Offset = "0xB4A330", VA = "0xB4A330", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200019B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDEEC", Offset = "0x9BDEEC")]
		private sealed class <LevelFlow>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiRaceTester <>4__this;

			[Token(Token = "0x170000C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009E9")]
				[Address(RVA = "0xB49AF8", Offset = "0xB49AF8", VA = "0xB49AF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009EB")]
				[Address(RVA = "0xB49B64", Offset = "0xB49B64", VA = "0xB49B64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009E6")]
			[Address(RVA = "0xB4811C", Offset = "0xB4811C", VA = "0xB4811C")]
			[DebuggerHidden]
			public <LevelFlow>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xB48EBC", Offset = "0xB48EBC", VA = "0xB48EBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xB48EC0", Offset = "0xB48EC0", VA = "0xB48EC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xB49B00", Offset = "0xB49B00", VA = "0xB49B00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool useBalancer;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool aiMayDetachFromRoute;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RaceBalancer raceBalancer;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine levelCoroutine;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool playback;

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xB47F74", Offset = "0xB47F74", VA = "0xB47F74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0xB47FC0", Offset = "0xB47FC0", VA = "0xB47FC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0B0C", Offset = "0x9C0B0C")]
		private IEnumerator PlaybackFlow()
		{
			return null;
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xB480D4", Offset = "0xB480D4", VA = "0xB480D4", Slot = "20")]
		public override string GetShortModeName()
		{
			return null;
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xB48034", Offset = "0xB48034", VA = "0xB48034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0B70", Offset = "0x9C0B70")]
		private IEnumerator LevelFlow()
		{
			return null;
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xB48148", Offset = "0xB48148", VA = "0xB48148")]
		private void AddAIRacers()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xB488EC", Offset = "0xB488EC", VA = "0xB488EC", Slot = "24")]
		public override RemoteConfig.LCConfigItem GetConfig()
		{
			return null;
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xB48B18", Offset = "0xB48B18", VA = "0xB48B18")]
		private void TryFloatConfig(Dictionary<string, string> dict, string key, ref float data)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xB48BB0", Offset = "0xB48BB0", VA = "0xB48BB0", Slot = "25")]
		public override void ApplyConfig(RemoteConfig.LCConfigItem config)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xB48D24", Offset = "0xB48D24", VA = "0xB48D24", Slot = "26")]
		public override void CopyLCParamsToHigherVoltage(LevelController target, int targetVoltage)
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xB48DD8", Offset = "0xB48DD8", VA = "0xB48DD8")]
		public MultiRaceTester()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public class RaceLevelController : LevelController
	{
		[Serializable]
		[Token(Token = "0x200019C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDEFC", Offset = "0x9BDEFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__25_0;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__25_1;

			[Token(Token = "0x60009ED")]
			[Address(RVA = "0xB53DB4", Offset = "0xB53DB4", VA = "0xB53DB4")]
			public <>c()
			{
			}

			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xB53DBC", Offset = "0xB53DBC", VA = "0xB53DBC")]
			internal void <SummonPauseMenu>b__25_0()
			{
			}

			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xB53E78", Offset = "0xB53E78", VA = "0xB53E78")]
			internal void <SummonPauseMenu>b__25_1()
			{
			}
		}

		[Token(Token = "0x200019D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF0C", Offset = "0x9BDF0C")]
		private sealed class <UnloadScene>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaceLevelController <>4__this;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009F3")]
				[Address(RVA = "0xB55048", Offset = "0xB55048", VA = "0xB55048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F5")]
				[Address(RVA = "0xB550B4", Offset = "0xB550B4", VA = "0xB550B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xB52C64", Offset = "0xB52C64", VA = "0xB52C64")]
			[DebuggerHidden]
			public <UnloadScene>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60009F1")]
			[Address(RVA = "0xB54FC4", Offset = "0xB54FC4", VA = "0xB54FC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009F2")]
			[Address(RVA = "0xB54FC8", Offset = "0xB54FC8", VA = "0xB54FC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xB55050", Offset = "0xB55050", VA = "0xB55050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200019E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF1C", Offset = "0x9BDF1C")]
		private sealed class <LoadAttachedScene_CR>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool setupTournament;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaceLevelController <>4__this;

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170000CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009F9")]
				[Address(RVA = "0xB54228", Offset = "0xB54228", VA = "0xB54228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009FB")]
				[Address(RVA = "0xB54294", Offset = "0xB54294", VA = "0xB54294", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009F6")]
			[Address(RVA = "0xB52CE0", Offset = "0xB52CE0", VA = "0xB52CE0")]
			[DebuggerHidden]
			public <LoadAttachedScene_CR>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60009F7")]
			[Address(RVA = "0xB53ED0", Offset = "0xB53ED0", VA = "0xB53ED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009F8")]
			[Address(RVA = "0xB53ED4", Offset = "0xB53ED4", VA = "0xB53ED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009FA")]
			[Address(RVA = "0xB54230", Offset = "0xB54230", VA = "0xB54230", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200019F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF2C", Offset = "0x9BDF2C")]
		private sealed class <PostSceneLoadSetup_CR>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaceLevelController <>4__this;

			[Token(Token = "0x170000CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009FF")]
				[Address(RVA = "0xB543F8", Offset = "0xB543F8", VA = "0xB543F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A01")]
				[Address(RVA = "0xB54464", Offset = "0xB54464", VA = "0xB54464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xB52D0C", Offset = "0xB52D0C", VA = "0xB52D0C")]
			[DebuggerHidden]
			public <PostSceneLoadSetup_CR>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xB5429C", Offset = "0xB5429C", VA = "0xB5429C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xB542A0", Offset = "0xB542A0", VA = "0xB542A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xB54400", Offset = "0xB54400", VA = "0xB54400", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF3C", Offset = "0x9BDF3C")]
		private sealed class <RaceFlow_CR>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaceLevelController <>4__this;

			[Token(Token = "0x170000D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A05")]
				[Address(RVA = "0xB547DC", Offset = "0xB547DC", VA = "0xB547DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A07")]
				[Address(RVA = "0xB54848", Offset = "0xB54848", VA = "0xB54848", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xB52D38", Offset = "0xB52D38", VA = "0xB52D38")]
			[DebuggerHidden]
			public <RaceFlow_CR>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xB5446C", Offset = "0xB5446C", VA = "0xB5446C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A04")]
			[Address(RVA = "0xB54470", Offset = "0xB54470", VA = "0xB54470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A06")]
			[Address(RVA = "0xB547E4", Offset = "0xB547E4", VA = "0xB547E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF4C", Offset = "0x9BDF4C")]
		private sealed class <TransitionToResults_CR>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaceLevelController <>4__this;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IContext <resultsContext>5__2;

			[Token(Token = "0x170000D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A0B")]
				[Address(RVA = "0xB54E50", Offset = "0xB54E50", VA = "0xB54E50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A0D")]
				[Address(RVA = "0xB54EBC", Offset = "0xB54EBC", VA = "0xB54EBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A08")]
			[Address(RVA = "0xB52D64", Offset = "0xB52D64", VA = "0xB52D64")]
			[DebuggerHidden]
			public <TransitionToResults_CR>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xB54850", Offset = "0xB54850", VA = "0xB54850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xB54854", Offset = "0xB54854", VA = "0xB54854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xB54E58", Offset = "0xB54E58", VA = "0xB54E58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF5C", Offset = "0x9BDF5C")]
		private sealed class <UnloadAttachedScene_CR>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaceLevelController <>4__this;

			[Token(Token = "0x170000D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A11")]
				[Address(RVA = "0xB54F50", Offset = "0xB54F50", VA = "0xB54F50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A13")]
				[Address(RVA = "0xB54FBC", Offset = "0xB54FBC", VA = "0xB54FBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0xB52FD4", Offset = "0xB52FD4", VA = "0xB52FD4")]
			[DebuggerHidden]
			public <UnloadAttachedScene_CR>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0xB54EC4", Offset = "0xB54EC4", VA = "0xB54EC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A10")]
			[Address(RVA = "0xB54EC8", Offset = "0xB54EC8", VA = "0xB54EC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A12")]
			[Address(RVA = "0xB54F58", Offset = "0xB54F58", VA = "0xB54F58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF6C", Offset = "0x9BDF6C")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool doPodCollectSoundsCopy;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlightSounds flightSounds;

			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xB53350", Offset = "0xB53350", VA = "0xB53350")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6000A15")]
			[Address(RVA = "0xB53E88", Offset = "0xB53E88", VA = "0xB53E88")]
			internal void <RaceSetup>b__0(RacerBase a, int level, BikeSim.ChargeAction chargeAction)
			{
			}
		}

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected RaceController raceController;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool shouldStartRepriseOnExitFromMenu;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float bikeCameraAngle;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool devLevel;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF1C0", Offset = "0x9BF1C0")]
		public float aiSpeedFactorEasy;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BF1F8", Offset = "0x9BF1F8")]
		public float aiSpeedFactorMedium;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float aiSpeedFactorHard;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float aiSpeedSpreadEasy;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float aiSpeedSpreadMedium;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float aiSpeedSpreadHard;

		[NonSerialized]
		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool loadBikeSelectOnDone;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int lapsComplete;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> recordingObjects;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float lastPausePress;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform opponentRoot;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GameObject localBike;

		[Token(Token = "0x17000042")]
		public float AISpeedFactor
		{
			[Token(Token = "0x600049A")]
			[Address(RVA = "0xB520FC", Offset = "0xB520FC", VA = "0xB520FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000043")]
		public float AISpeedSpread
		{
			[Token(Token = "0x600049B")]
			[Address(RVA = "0xB521AC", Offset = "0xB521AC", VA = "0xB521AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xB5225C", Offset = "0xB5225C", VA = "0xB5225C", Slot = "11")]
		public override void Init()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xB52420", Offset = "0xB52420", VA = "0xB52420")]
		private void PlatformControl_OnShouldPause()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xB52528", Offset = "0xB52528", VA = "0xB52528")]
		protected void Update()
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xB5252C", Offset = "0xB5252C", VA = "0xB5252C", Slot = "13")]
		protected override void TogglePause()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xB52554", Offset = "0xB52554", VA = "0xB52554")]
		protected List<object> GetRaceLevelPauseMenuItems()
		{
			return null;
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xB525B0", Offset = "0xB525B0", VA = "0xB525B0")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xB5269C", Offset = "0xB5269C", VA = "0xB5269C")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xB52788", Offset = "0xB52788", VA = "0xB52788", Slot = "14")]
		protected override void SummonPauseMenu()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xB52B10", Offset = "0xB52B10", VA = "0xB52B10")]
		private void GotoTestPoint()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xB52BF0", Offset = "0xB52BF0", VA = "0xB52BF0", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0BD4", Offset = "0x9C0BD4")]
		public override IEnumerator UnloadScene()
		{
			return null;
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xB52C90", Offset = "0xB52C90", VA = "0xB52C90")]
		protected void LoadHomeScreen()
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xB4949C", Offset = "0xB4949C", VA = "0xB4949C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0C38", Offset = "0x9C0C38")]
		protected IEnumerator LoadAttachedScene_CR(bool setupTournament = true)
		{
			return null;
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xB49860", Offset = "0xB49860", VA = "0xB49860")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0C9C", Offset = "0x9C0C9C")]
		protected IEnumerator PostSceneLoadSetup_CR()
		{
			return null;
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xB498E0", Offset = "0xB498E0", VA = "0xB498E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0D00", Offset = "0x9C0D00")]
		protected IEnumerator RaceFlow_CR()
		{
			return null;
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xB49A84", Offset = "0xB49A84", VA = "0xB49A84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0D64", Offset = "0x9C0D64")]
		protected IEnumerator TransitionToResults_CR()
		{
			return null;
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xB52D90", Offset = "0xB52D90", VA = "0xB52D90")]
		private void CleanUpLevel()
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xB52E84", Offset = "0xB52E84", VA = "0xB52E84")]
		protected void CleanUpRace()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xB52F60", Offset = "0xB52F60", VA = "0xB52F60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0DC8", Offset = "0x9C0DC8")]
		private IEnumerator UnloadAttachedScene_CR()
		{
			return null;
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xB53000", Offset = "0xB53000", VA = "0xB53000", Slot = "16")]
		public override string GetInfoString()
		{
			return null;
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xB53168", Offset = "0xB53168", VA = "0xB53168", Slot = "19")]
		public override string GetModeName()
		{
			return null;
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xB53264", Offset = "0xB53264", VA = "0xB53264", Slot = "18")]
		public override string[] GetTargetStrings()
		{
			return null;
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xB5326C", Offset = "0xB5326C", VA = "0xB5326C")]
		private void PlayerCompletedLap(int lapsCompleted, bool validForFastLap)
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xB53280", Offset = "0xB53280", VA = "0xB53280")]
		private void PlayerCrossedStartLine()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB53290", Offset = "0xB53290", VA = "0xB53290", Slot = "28")]
		protected virtual void OnPlayerCrossedStartLine()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB53294", Offset = "0xB53294", VA = "0xB53294", Slot = "29")]
		protected virtual void OnPlayerCompletedLap(int lapsCompleted, bool validForFastlap)
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xB49524", Offset = "0xB49524", VA = "0xB49524")]
		protected void RaceSetup(bool ringMode = false, bool altRings = false, bool doPodCollectSounds = true)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xB53438", Offset = "0xB53438", VA = "0xB53438")]
		protected void SetupTrackLighting()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xB534D0", Offset = "0xB534D0", VA = "0xB534D0")]
		protected void SetupCoinChargeConnection()
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xB534D4", Offset = "0xB534D4", VA = "0xB534D4", Slot = "17")]
		public override bool CanEdit()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xB48760", Offset = "0xB48760", VA = "0xB48760")]
		protected BikeAI AddAiRacer(TournamentRacer racer, RecordingRunner recordingRunner, int aiIndex)
		{
			return null;
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xB534E4", Offset = "0xB534E4", VA = "0xB534E4")]
		protected RemoteRacer AddRemoteRacer(TournamentRacer racer, MPPlayerView playerView)
		{
			return null;
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xB5359C", Offset = "0xB5359C", VA = "0xB5359C")]
		public void BeginRecording()
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xB47ECC", Offset = "0xB47ECC", VA = "0xB47ECC")]
		public RaceLevelController()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xB53B88", Offset = "0xB53B88", VA = "0xB53B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0E2C", Offset = "0x9C0E2C")]
		private void <SummonPauseMenu>b__25_2()
		{
		}
	}
	[Token(Token = "0x20000A5")]
	public class RingCollectController : RaceLevelController
	{
		[Token(Token = "0x20001A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF7C", Offset = "0x9BDF7C")]
		private sealed class <LevelFlow>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RingCollectController <>4__this;

			[Token(Token = "0x170000D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A19")]
				[Address(RVA = "0xB97AA0", Offset = "0xB97AA0", VA = "0xB97AA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A1B")]
				[Address(RVA = "0xB97B0C", Offset = "0xB97B0C", VA = "0xB97B0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xB97304", Offset = "0xB97304", VA = "0xB97304")]
			[DebuggerHidden]
			public <LevelFlow>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000A17")]
			[Address(RVA = "0xB97330", Offset = "0xB97330", VA = "0xB97330", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xB97334", Offset = "0xB97334", VA = "0xB97334", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0xB97AA8", Offset = "0xB97AA8", VA = "0xB97AA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF8C", Offset = "0x9BDF8C")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RingCollectController <>4__this;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int diff;

			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0xB972CC", Offset = "0xB972CC", VA = "0xB972CC")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0xB972D4", Offset = "0xB972D4", VA = "0xB972D4")]
			internal float <GetThresholds>b__0(int vic)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine levelCoroutine;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool playback;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[ShowInInspector]
		public int[] ringTargets;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float ringTargetsScaleEasy;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float ringTargetsScaleMed;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float ringTargetsScaleHard;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int ringSetToUse;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float[] timeLimits;

		[NonSerialized]
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int totalRings;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float lapStartTime;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int[] ringsPerLap;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool ringChallengeFinished;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		private bool madeMissedRingSoundThisLap;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		private bool positionResetSinceLapComplete;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		private bool timeOutHandled;

		[Token(Token = "0x400065A")]
		private const int bleepsToGivePerLap = 5;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int bleepsToGive;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int[] cumulativeRingCountY10;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string lapTranslation;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string ringsTranslation;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string totalTranslation;

		[Token(Token = "0x17000044")]
		public float RemainingTime
		{
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0xB5DFD4", Offset = "0xB5DFD4", VA = "0xB5DFD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xB5D448", Offset = "0xB5D448", VA = "0xB5D448", Slot = "11")]
		public override void Init()
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xB5D4F0", Offset = "0xB5D4F0", VA = "0xB5D4F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xB5D604", Offset = "0xB5D604", VA = "0xB5D604")]
		private static int[] BuildCumulativeRingCountY10(float trackLen, List<Vector2> ringPositions)
		{
			return null;
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xB5D590", Offset = "0xB5D590", VA = "0xB5D590")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0E3C", Offset = "0x9C0E3C")]
		private IEnumerator LevelFlow()
		{
			return null;
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xB5D7FC", Offset = "0xB5D7FC", VA = "0xB5D7FC")]
		private float GetDiffScale(BlurGlobals.Difficulty diffLevel = BlurGlobals.Difficulty.None)
		{
			return default(float);
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xB5D940", Offset = "0xB5D940", VA = "0xB5D940")]
		private int GetRingTarget(int vi)
		{
			return default(int);
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xB5D9A0", Offset = "0xB5D9A0", VA = "0xB5D9A0")]
		public int GetRingTarget(int vi, int diffLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xB5DA00", Offset = "0xB5DA00", VA = "0xB5DA00", Slot = "19")]
		public override string GetModeName()
		{
			return null;
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xB5DAFC", Offset = "0xB5DAFC", VA = "0xB5DAFC", Slot = "20")]
		public override string GetShortModeName()
		{
			return null;
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xB5DB44", Offset = "0xB5DB44", VA = "0xB5DB44")]
		private Victory GetVictory()
		{
			return default(Victory);
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xB5DBC0", Offset = "0xB5DBC0", VA = "0xB5DBC0", Slot = "18")]
		public override string[] GetTargetStrings()
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xB5DC9C", Offset = "0xB5DC9C", VA = "0xB5DC9C")]
		private string GetResultsString()
		{
			return null;
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xB5DE18", Offset = "0xB5DE18", VA = "0xB5DE18")]
		private void OnRingCollect()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xB5E0EC", Offset = "0xB5E0EC", VA = "0xB5E0EC")]
		protected new void Update()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xB5E9F8", Offset = "0xB5E9F8", VA = "0xB5E9F8", Slot = "29")]
		protected override void OnPlayerCompletedLap(int lapsCompleted, bool validForFastlap)
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xB5E8A0", Offset = "0xB5E8A0", VA = "0xB5E8A0")]
		private void RingLapComplete(int lapsCompleted)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xB5EB8C", Offset = "0xB5EB8C", VA = "0xB5EB8C", Slot = "21")]
		public override void SetHudText(TextMeshPro hudText, BikeSim bikeSim, BlurConfig.BikeModelID bikeID)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xB5ECC4", Offset = "0xB5ECC4", VA = "0xB5ECC4", Slot = "22")]
		public override float[] GetThresholds(int diff)
		{
			return null;
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xB5EDE8", Offset = "0xB5EDE8", VA = "0xB5EDE8", Slot = "23")]
		public override void WriteExtraDetails(TextMeshProUGUI[] texts, TextMeshProUGUI[] titles)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xB5F174", Offset = "0xB5F174", VA = "0xB5F174", Slot = "24")]
		public override RemoteConfig.LCConfigItem GetConfig()
		{
			return null;
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xB5F470", Offset = "0xB5F470", VA = "0xB5F470", Slot = "25")]
		public override void ApplyConfig(RemoteConfig.LCConfigItem config)
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xB5F670", Offset = "0xB5F670", VA = "0xB5F670", Slot = "26")]
		public override void CopyLCParamsToHigherVoltage(LevelController target, int targetVoltage)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xB5F760", Offset = "0xB5F760", VA = "0xB5F760", Slot = "27")]
		public override string GetCallToAction()
		{
			return null;
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xB5F85C", Offset = "0xB5F85C", VA = "0xB5F85C")]
		public RingCollectController()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xB5F874", Offset = "0xB5F874", VA = "0xB5F874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0EA0", Offset = "0x9C0EA0")]
		private void <LevelFlow>b__21_0(RacerBase bikeSim)
		{
		}
	}
	[Token(Token = "0x20000A6")]
	public class SpiralTrackSetup : MonoBehaviour
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xBA056C", Offset = "0xBA056C", VA = "0xBA056C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xBA059C", Offset = "0xBA059C", VA = "0xBA059C")]
		public SpiralTrackSetup()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class LightCookieController : MonoBehaviour
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lightCookie;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 lightCookieEuler;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lightCookieScale;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lightCookieScaleBob;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bobHeight;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BikeSim bikeSim;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshRenderer mr;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float fadeInPeriod;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialPropertyBlock propBlock;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 savedPos;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color finalColor;

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xBB619C", Offset = "0xBB619C", VA = "0xBB619C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xBB62AC", Offset = "0xBB62AC", VA = "0xBB62AC")]
		private void SetGlowColor(Color color)
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xBB634C", Offset = "0xBB634C", VA = "0xBB634C")]
		public void SetPos(Vector2 pos)
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xBB6354", Offset = "0xBB6354", VA = "0xBB6354")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xBB66AC", Offset = "0xBB66AC", VA = "0xBB66AC")]
		public LightCookieController()
		{
		}
	}
	[Token(Token = "0x20000A8")]
	public class LinearTable
	{
		[Token(Token = "0x20001A6")]
		public struct Entry
		{
			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 position;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int priority;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object obj;
		}

		[Token(Token = "0x20001A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDF9C", Offset = "0x9BDF9C")]
		private sealed class <EnumAll>d__11 : IEnumerable<Entry>, IEnumerable, IEnumerator<Entry>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Entry <>2__current;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LinearTable <>4__this;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__2;

			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <j>5__3;

			[Token(Token = "0x170000D8")]
			private Entry System.Collections.Generic.IEnumerator<Coplanar.LinearTable.Entry>.Current
			{
				[Token(Token = "0x6000A21")]
				[Address(RVA = "0xBB7914", Offset = "0xBB7914", VA = "0xBB7914", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Entry);
				}
			}

			[Token(Token = "0x170000D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A23")]
				[Address(RVA = "0xBB798C", Offset = "0xBB798C", VA = "0xBB798C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0xBB6CA0", Offset = "0xBB6CA0", VA = "0xBB6CA0")]
			[DebuggerHidden]
			public <EnumAll>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0xBB77CC", Offset = "0xBB77CC", VA = "0xBB77CC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A20")]
			[Address(RVA = "0xBB77D0", Offset = "0xBB77D0", VA = "0xBB77D0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xBB7928", Offset = "0xBB7928", VA = "0xBB7928", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xBB79F8", Offset = "0xBB79F8", VA = "0xBB79F8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Entry> System.Collections.Generic.IEnumerable<Coplanar.LinearTable.Entry>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000A25")]
			[Address(RVA = "0xBB7AA8", Offset = "0xBB7AA8", VA = "0xBB7AA8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDFAC", Offset = "0x9BDFAC")]
		private sealed class <EnumWithinRadius>d__12 : IEnumerable<Entry>, IEnumerable, IEnumerator<Entry>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Entry <>2__current;

			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LinearTable <>4__this;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector2 center;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector2 <>3__center;

			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float range;

			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float <>3__range;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private bool remove;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool <>3__remove;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int <last>5__2;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__3;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <j>5__4;

			[Token(Token = "0x170000DA")]
			private Entry System.Collections.Generic.IEnumerator<Coplanar.LinearTable.Entry>.Current
			{
				[Token(Token = "0x6000A29")]
				[Address(RVA = "0xBB8090", Offset = "0xBB8090", VA = "0xBB8090", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Entry);
				}
			}

			[Token(Token = "0x170000DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A2B")]
				[Address(RVA = "0xBB8108", Offset = "0xBB8108", VA = "0xBB8108", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xBB6D94", Offset = "0xBB6D94", VA = "0xBB6D94")]
			[DebuggerHidden]
			public <EnumWithinRadius>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000A27")]
			[Address(RVA = "0xBB7E14", Offset = "0xBB7E14", VA = "0xBB7E14", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A28")]
			[Address(RVA = "0xBB7E18", Offset = "0xBB7E18", VA = "0xBB7E18", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0xBB80A4", Offset = "0xBB80A4", VA = "0xBB80A4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0xBB8174", Offset = "0xBB8174", VA = "0xBB8174", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Entry> System.Collections.Generic.IEnumerable<Coplanar.LinearTable.Entry>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0xBB823C", Offset = "0xBB823C", VA = "0xBB823C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDFBC", Offset = "0x9BDFBC")]
		private sealed class <EnumWholeWidthWithinRadius>d__13 : IEnumerable<Entry>, IEnumerable, IEnumerator<Entry>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Entry <>2__current;

			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LinearTable <>4__this;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float center_y;

			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float <>3__center_y;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float range;

			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float <>3__range;

			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <last>5__2;

			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <i>5__3;

			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <j>5__4;

			[Token(Token = "0x170000DC")]
			private Entry System.Collections.Generic.IEnumerator<Coplanar.LinearTable.Entry>.Current
			{
				[Token(Token = "0x6000A31")]
				[Address(RVA = "0xBB7C6C", Offset = "0xBB7C6C", VA = "0xBB7C6C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Entry);
				}
			}

			[Token(Token = "0x170000DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A33")]
				[Address(RVA = "0xBB7CE4", Offset = "0xBB7CE4", VA = "0xBB7CE4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xBB6E68", Offset = "0xBB6E68", VA = "0xBB6E68")]
			[DebuggerHidden]
			public <EnumWholeWidthWithinRadius>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0xBB7AAC", Offset = "0xBB7AAC", VA = "0xBB7AAC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A30")]
			[Address(RVA = "0xBB7AB0", Offset = "0xBB7AB0", VA = "0xBB7AB0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A32")]
			[Address(RVA = "0xBB7C80", Offset = "0xBB7C80", VA = "0xBB7C80", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xBB7D50", Offset = "0xBB7D50", VA = "0xBB7D50", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Entry> System.Collections.Generic.IEnumerable<Coplanar.LinearTable.Entry>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000A35")]
			[Address(RVA = "0xBB7E10", Offset = "0xBB7E10", VA = "0xBB7E10", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Entry[,] table;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int length;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int entriesPerLine;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float entryLength;

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xBB66BC", Offset = "0xBB66BC", VA = "0xBB66BC")]
		public LinearTable(int length, int entriesPerLine, float entryLength)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xBB675C", Offset = "0xBB675C", VA = "0xBB675C")]
		public int PosToIndex(float pos)
		{
			return default(int);
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xBB67D4", Offset = "0xBB67D4", VA = "0xBB67D4")]
		public int TryAddObject(Vector2 position, object obj, int priority)
		{
			return default(int);
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xBB690C", Offset = "0xBB690C", VA = "0xBB690C")]
		public int TryAddObjectIfNotContain(Vector2 position, object obj, int priority)
		{
			return default(int);
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xBB6A9C", Offset = "0xBB6A9C", VA = "0xBB6A9C")]
		public bool Remove(int index, object item)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xBB6B38", Offset = "0xBB6B38", VA = "0xBB6B38")]
		public void Remove(Vector2 pos, object item)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xBB6C1C", Offset = "0xBB6C1C", VA = "0xBB6C1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0EB0", Offset = "0x9C0EB0")]
		public IEnumerable<Entry> EnumAll()
		{
			return null;
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xBB6CD8", Offset = "0xBB6CD8", VA = "0xBB6CD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0F14", Offset = "0x9C0F14")]
		public IEnumerable<Entry> EnumWithinRadius(Vector2 center, float range, bool remove = false)
		{
			return null;
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xBB6DCC", Offset = "0xBB6DCC", VA = "0xBB6DCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C0F78", Offset = "0x9C0F78")]
		public IEnumerable<Entry> EnumWholeWidthWithinRadius(float center_y, float range)
		{
			return null;
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xBB6EA0", Offset = "0xBB6EA0", VA = "0xBB6EA0")]
		public bool FindAndRemove(Vector2 center, float range, out object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xBB71A0", Offset = "0xBB71A0", VA = "0xBB71A0")]
		public bool FindWhere(Vector2 center, float range, Func<object, bool> test, out object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xBB74C0", Offset = "0xBB74C0", VA = "0xBB74C0")]
		public bool FindWhereWholeWidth(float center_y, float range, Func<object, bool> test, out object obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A9")]
	public class Medal : MonoBehaviour
	{
		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer wireMR;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer bodyMR;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wireThickness;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float wireIntensity;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material wireMat;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material bodyMat;

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xBC07EC", Offset = "0xBC07EC", VA = "0xBC07EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xBC08A4", Offset = "0xBC08A4", VA = "0xBC08A4")]
		public void Init(BlurGlobals.Difficulty diff, LevelController.Victory victory)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xBC0BF8", Offset = "0xBC0BF8", VA = "0xBC0BF8")]
		public void InitLock()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xBC0B78", Offset = "0xBC0B78", VA = "0xBC0B78")]
		private void Update()
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xBC0E54", Offset = "0xBC0E54", VA = "0xBC0E54")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C0FDC", Offset = "0x9C0FDC")]
		private void AppearAnim()
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xBC0EB4", Offset = "0xBC0EB4", VA = "0xBC0EB4")]
		public Medal()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class AnimMovementForwarder : MonoBehaviour
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 move;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform target;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool restored;

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xB83880", Offset = "0xB83880", VA = "0xB83880")]
		private void Update()
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xB838E4", Offset = "0xB838E4", VA = "0xB838E4")]
		private void Move()
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xB8397C", Offset = "0xB8397C", VA = "0xB8397C")]
		public AnimMovementForwarder()
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public class BikeMenu : Coplanar.Menu.Menu, IContext
	{
		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button control;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button power;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button drift;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button back;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform powerLock;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform driftLock;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WireBoxUIController wireBoxUIControllerCache_;

		[Token(Token = "0x17000045")]
		private WireBoxUIController WireBoxUIControllerCache
		{
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0xB91EEC", Offset = "0xB91EEC", VA = "0xB91EEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xB91710", Offset = "0xB91710", VA = "0xB91710")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xB918D8", Offset = "0xB918D8", VA = "0xB918D8")]
		private void ChooseBike(int bike)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xB91AE4", Offset = "0xB91AE4", VA = "0xB91AE4")]
		private void SetBikeLockState(Button button, Transform locks, bool isUnlocked)
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xB91B84", Offset = "0xB91B84", VA = "0xB91B84", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xB91C54", Offset = "0xB91C54", VA = "0xB91C54")]
		private void Update()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xB91CF4", Offset = "0xB91CF4", VA = "0xB91CF4")]
		private void OnBack()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xB91E38", Offset = "0xB91E38", VA = "0xB91E38")]
		public void OnPointerEnterBike(int index)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xB91FA0", Offset = "0xB91FA0", VA = "0xB91FA0")]
		public void OnPointerExitBike(int index)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xB92044", Offset = "0xB92044", VA = "0xB92044")]
		public BikeMenu()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xB9204C", Offset = "0xB9204C", VA = "0xB9204C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0FEC", Offset = "0x9C0FEC")]
		private void <Awake>b__6_0()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xB92054", Offset = "0xB92054", VA = "0xB92054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0FFC", Offset = "0x9C0FFC")]
		private void <Awake>b__6_1()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xB9205C", Offset = "0xB9205C", VA = "0xB9205C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C100C", Offset = "0x9C100C")]
		private void <Awake>b__6_2()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public class BlurLeaderboardManager : LeaderBoardManager
	{
		[Token(Token = "0x20001AA")]
		public class SpecialEventConfig
		{
			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int track;

			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string title;

			[Token(Token = "0x4000DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string rules;

			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int bike;

			[Token(Token = "0x6000A36")]
			[Address(RVA = "0xB68CB8", Offset = "0xB68CB8", VA = "0xB68CB8")]
			public SpecialEventConfig()
			{
			}
		}

		[Token(Token = "0x20001AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDFCC", Offset = "0x9BDFCC")]
		private sealed class <WeeklyTrackCheck_CR>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BlurLeaderboardManager <>4__this;

			[Token(Token = "0x4000DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170000DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A3A")]
				[Address(RVA = "0xB69478", Offset = "0xB69478", VA = "0xB69478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A3C")]
				[Address(RVA = "0xB694E4", Offset = "0xB694E4", VA = "0xB694E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A37")]
			[Address(RVA = "0xB68B20", Offset = "0xB68B20", VA = "0xB68B20")]
			[DebuggerHidden]
			public <WeeklyTrackCheck_CR>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xB69134", Offset = "0xB69134", VA = "0xB69134", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A39")]
			[Address(RVA = "0xB69138", Offset = "0xB69138", VA = "0xB69138", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0xB69480", Offset = "0xB69480", VA = "0xB69480", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDFDC", Offset = "0x9BDFDC")]
		private sealed class <SpecialEventCheck_CR>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BlurLeaderboardManager <>4__this;

			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170000E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A40")]
				[Address(RVA = "0xB690C0", Offset = "0xB690C0", VA = "0xB690C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A42")]
				[Address(RVA = "0xB6912C", Offset = "0xB6912C", VA = "0xB6912C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0xB68BC0", Offset = "0xB68BC0", VA = "0xB68BC0")]
			[DebuggerHidden]
			public <SpecialEventCheck_CR>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0xB68D8C", Offset = "0xB68D8C", VA = "0xB68D8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0xB68D90", Offset = "0xB68D90", VA = "0xB68D90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A41")]
			[Address(RVA = "0xB690C8", Offset = "0xB690C8", VA = "0xB690C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BlurLeaderboardManager I;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int trackOfTheWeek;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpecialEventConfig specialEventConfig;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int trackOfTheWeekCountdown;

		[Token(Token = "0x4000684")]
		public const int TOP_N_COUNT = 25;

		[Token(Token = "0x4000685")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_nextCheckTime;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string lastWeeklyTrackError;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string lastSpecialTrackError;

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xB68A34", Offset = "0xB68A34", VA = "0xB68A34")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xB68AAC", Offset = "0xB68AAC", VA = "0xB68AAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C101C", Offset = "0x9C101C")]
		private IEnumerator WeeklyTrackCheck_CR()
		{
			return null;
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xB68B4C", Offset = "0xB68B4C", VA = "0xB68B4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1080", Offset = "0x9C1080")]
		private IEnumerator SpecialEventCheck_CR()
		{
			return null;
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xB68BEC", Offset = "0xB68BEC", VA = "0xB68BEC")]
		public void CheckWeeklyTrack()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xB68C30", Offset = "0xB68C30", VA = "0xB68C30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xB68C34", Offset = "0xB68C34", VA = "0xB68C34")]
		public void SubmitTime(string table, float time)
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xB68C4C", Offset = "0xB68C4C", VA = "0xB68C4C")]
		public BlurLeaderboardManager()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class ComfortMenu : OptionsMenu
	{
		[Token(Token = "0x20001AD")]
		public enum DiffControlMode
		{
			[Token(Token = "0x4000DD8")]
			Hidden,
			[Token(Token = "0x4000DD9")]
			Disable,
			[Token(Token = "0x4000DDA")]
			Enabled
		}

		[Token(Token = "0x20001AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDFEC", Offset = "0x9BDFEC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int closureCopy;

			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ComfortMenu <>4__this;

			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xB6A860", Offset = "0xB6A860", VA = "0xB6A860")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000A44")]
			[Address(RVA = "0xB6E3C0", Offset = "0xB6E3C0", VA = "0xB6E3C0")]
			internal void <Awake>b__0()
			{
			}
		}

		[Token(Token = "0x20001AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDFFC", Offset = "0x9BDFFC")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DiffControlMode p_diffControlMode;

			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool p_inGame;

			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xB6A9BC", Offset = "0xB6A9BC", VA = "0xB6A9BC")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000A46")]
			[Address(RVA = "0xB6E3EC", Offset = "0xB6E3EC", VA = "0xB6E3EC")]
			internal void <Activate>b__0(Coplanar.Menu.Menu menu)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE00C", Offset = "0x9BE00C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__23_1;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, string> <>9__30_0;

			[Token(Token = "0x6000A48")]
			[Address(RVA = "0xB6E238", Offset = "0xB6E238", VA = "0xB6E238")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A49")]
			[Address(RVA = "0xB6E240", Offset = "0xB6E240", VA = "0xB6E240")]
			internal void <BuildComfortAndDifficulty>b__23_1()
			{
			}

			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xB6E2BC", Offset = "0xB6E2BC", VA = "0xB6E2BC")]
			internal string <BuildLanguagePage>b__30_0(string lang)
			{
				return null;
			}
		}

		[Token(Token = "0x20001B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE01C", Offset = "0x9BE01C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ComfortMenu <>4__this;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> langTags;

			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xB6D698", Offset = "0xB6D698", VA = "0xB6D698")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xB6E490", Offset = "0xB6E490", VA = "0xB6E490")]
			internal void <BuildLanguagePage>b__1(int x)
			{
			}
		}

		[Token(Token = "0x20001B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE02C", Offset = "0x9BE02C")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ComfortMenu <>4__this;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string prefName;

			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xB6D748", Offset = "0xB6D748", VA = "0xB6D748")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0xB6E54C", Offset = "0xB6E54C", VA = "0xB6E54C")]
			internal void <AddSavedChoiceItem>b__0(int x)
			{
			}
		}

		[Token(Token = "0x20001B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE03C", Offset = "0x9BE03C")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ComfortMenu <>4__this;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string prefName;

			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xB6D750", Offset = "0xB6D750", VA = "0xB6D750")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xB6E578", Offset = "0xB6E578", VA = "0xB6E578")]
			internal void <AddSavedSlider>b__0(float x)
			{
			}
		}

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DiffControlMode diffControlMode;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentPage;

		[Token(Token = "0x400068B")]
		private const int numPages = 3;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool inGame;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int selectedLeanMode;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, int> paramsToSave;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, float> paramsToSaveFloats;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, string> paramsToSaveStrings;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SteeringPreview steeringPreview;

		[Token(Token = "0x4000692")]
		private const int leanWarningMinimum = 10;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int left;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int right;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int safeStage;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject previousDemoObject;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FlightControl.StickControlMode previousMode;

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xB6A42C", Offset = "0xB6A42C", VA = "0xB6A42C", Slot = "4")]
		public override void OnPushed()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xB6A6FC", Offset = "0xB6A6FC", VA = "0xB6A6FC")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xB6A868", Offset = "0xB6A868", VA = "0xB6A868")]
		private void ChangeTab(int index)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xB6A878", Offset = "0xB6A878", VA = "0xB6A878")]
		public static void Activate(DiffControlMode p_diffControlMode, bool p_inGame = false)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xB6A9C4", Offset = "0xB6A9C4", VA = "0xB6A9C4")]
		private void ResetSafe()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xB6A9D0", Offset = "0xB6A9D0", VA = "0xB6A9D0", Slot = "19")]
		protected override void BuildMenu()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xB6CD94", Offset = "0xB6CD94", VA = "0xB6CD94")]
		private int GetCurrentInt(string prefName)
		{
			return default(int);
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xB6CE6C", Offset = "0xB6CE6C", VA = "0xB6CE6C")]
		private float GetCurrentFloat(string prefName)
		{
			return default(float);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xB6CF30", Offset = "0xB6CF30", VA = "0xB6CF30")]
		private string GetCurrentString(string prefName)
		{
			return null;
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xB6AD14", Offset = "0xB6AD14", VA = "0xB6AD14")]
		private void BuildComfortAndDifficulty()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xB6C51C", Offset = "0xB6C51C", VA = "0xB6C51C")]
		private void BuildSoundPage()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xB6D2C0", Offset = "0xB6D2C0", VA = "0xB6D2C0")]
		private string GetSensPrefName(FlightControl.StickControlMode mode)
		{
			return null;
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xB6C0B8", Offset = "0xB6C0B8", VA = "0xB6C0B8")]
		private void BuildControlPage()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xB6D364", Offset = "0xB6D364", VA = "0xB6D364")]
		private void UpdateSteeringPreview()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xB6C988", Offset = "0xB6C988", VA = "0xB6C988")]
		private void BuildLanguagePage()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xB6D6A0", Offset = "0xB6D6A0", VA = "0xB6D6A0")]
		private void Next()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xB6D6F4", Offset = "0xB6D6F4", VA = "0xB6D6F4")]
		private void Prev()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xB6CFFC", Offset = "0xB6CFFC", VA = "0xB6CFFC")]
		private void AddSavedChoiceItem(string label, string prefName, bool interactable, params string[] options)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xB6D158", Offset = "0xB6D158", VA = "0xB6D158")]
		private void AddSavedSlider(string label, string prefName, bool interactable, float min, float max)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xB6D758", Offset = "0xB6D758", VA = "0xB6D758")]
		private void UpdateSelectedParams(string prefName, int i)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xB6D7C8", Offset = "0xB6D7C8", VA = "0xB6D7C8")]
		private void UpdateSelectedFloatParams(string prefName, float i)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xB6D840", Offset = "0xB6D840", VA = "0xB6D840")]
		private void UpdateSelectedStringParams(string prefName, string s)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xB6D8B0", Offset = "0xB6D8B0", VA = "0xB6D8B0")]
		private void SaveChoices()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xB6DBB4", Offset = "0xB6DBB4", VA = "0xB6DBB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xB6DC7C", Offset = "0xB6DC7C", VA = "0xB6DC7C")]
		private void Back()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xB6DDBC", Offset = "0xB6DDBC", VA = "0xB6DDBC", Slot = "10")]
		public override UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xB6DE50", Offset = "0xB6DE50", VA = "0xB6DE50")]
		public ComfortMenu()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xB6DE58", Offset = "0xB6DE58", VA = "0xB6DE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C10E4", Offset = "0x9C10E4")]
		private void <BuildMenu>b__19_0()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xB6DEEC", Offset = "0xB6DEEC", VA = "0xB6DEEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C10F4", Offset = "0x9C10F4")]
		private void <BuildMenu>b__19_1()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xB6E080", Offset = "0xB6E080", VA = "0xB6E080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1104", Offset = "0x9C1104")]
		private void <BuildComfortAndDifficulty>b__23_0(int x)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xB6E164", Offset = "0xB6E164", VA = "0xB6E164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1114", Offset = "0x9C1114")]
		private void <BuildControlPage>b__26_0(int x)
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public class CreditsScreen : Coplanar.Menu.Menu, IContext
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int page;

		[Token(Token = "0x4000699")]
		private const int PAGE_COUNT = 2;

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xB6F628", Offset = "0xB6F628", VA = "0xB6F628")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xB6F738", Offset = "0xB6F738", VA = "0xB6F738")]
		private void ChangePage(int delta)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xB6F780", Offset = "0xB6F780", VA = "0xB6F780", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xB6FDAC", Offset = "0xB6FDAC", VA = "0xB6FDAC")]
		private void Back()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xB6FE34", Offset = "0xB6FE34", VA = "0xB6FE34")]
		public CreditsScreen()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xB6FE3C", Offset = "0xB6FE3C", VA = "0xB6FE3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1124", Offset = "0x9C1124")]
		private void <Awake>b__2_0()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xB6FE40", Offset = "0xB6FE40", VA = "0xB6FE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1134", Offset = "0x9C1134")]
		private void <Awake>b__2_1()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xB6FE48", Offset = "0xB6FE48", VA = "0xB6FE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1144", Offset = "0x9C1144")]
		private void <Awake>b__2_2()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public class DiffMenu : Coplanar.Menu.Menu, IContext
	{
		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button easy;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button medium;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button hard;

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xB70928", Offset = "0xB70928", VA = "0xB70928")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xB70A54", Offset = "0xB70A54", VA = "0xB70A54")]
		private void ChooseDif(int d)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xB70C18", Offset = "0xB70C18", VA = "0xB70C18", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xB70C7C", Offset = "0xB70C7C", VA = "0xB70C7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xB70D54", Offset = "0xB70D54", VA = "0xB70D54")]
		public DiffMenu()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xB70D5C", Offset = "0xB70D5C", VA = "0xB70D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1154", Offset = "0x9C1154")]
		private void <Awake>b__3_0()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xB70D64", Offset = "0xB70D64", VA = "0xB70D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1164", Offset = "0x9C1164")]
		private void <Awake>b__3_1()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xB70D6C", Offset = "0xB70D6C", VA = "0xB70D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1174", Offset = "0x9C1174")]
		private void <Awake>b__3_2()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public class MainMenu : Coplanar.Menu.Menu, IContext
	{
		[Serializable]
		[Token(Token = "0x20001B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE04C", Offset = "0x9BE04C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__7_0;

			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UnityAction <>9__7_1;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static UnityAction <>9__7_2;

			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static UnityAction <>9__7_3;

			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static UnityAction <>9__7_4;

			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static UnityAction <>9__7_5;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static UnityAction <>9__7_6;

			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xBBF1F8", Offset = "0xBBF1F8", VA = "0xBBF1F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A53")]
			[Address(RVA = "0xBBF200", Offset = "0xBBF200", VA = "0xBBF200")]
			internal void <Awake>b__7_0()
			{
			}

			[Token(Token = "0x6000A54")]
			[Address(RVA = "0xBC0184", Offset = "0xBC0184", VA = "0xBC0184")]
			internal void <Awake>b__7_1()
			{
			}

			[Token(Token = "0x6000A55")]
			[Address(RVA = "0xBC0300", Offset = "0xBC0300", VA = "0xBC0300")]
			internal void <Awake>b__7_2()
			{
			}

			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xBC047C", Offset = "0xBC047C", VA = "0xBC047C")]
			internal void <Awake>b__7_3()
			{
			}

			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xBC05F8", Offset = "0xBC05F8", VA = "0xBC05F8")]
			internal void <Awake>b__7_4()
			{
			}

			[Token(Token = "0x6000A58")]
			[Address(RVA = "0xBC070C", Offset = "0xBC070C", VA = "0xBC070C")]
			internal void <Awake>b__7_5()
			{
			}

			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xBC07D4", Offset = "0xBC07D4", VA = "0xBC07D4")]
			internal void <Awake>b__7_6()
			{
			}
		}

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button careerButton;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button leaderBoardsButton;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button multiplayerButton;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button raceopediaButton;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button optionsButton;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Button creditsButton;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button exitButton;

		[Token(Token = "0x17000046")]
		private bool LeaderBoardsAvailable
		{
			[Token(Token = "0x600053A")]
			[Address(RVA = "0xBBEDC4", Offset = "0xBBEDC4", VA = "0xBBEDC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xBBE770", Offset = "0xBBE770", VA = "0xBBE770")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xBBEC34", Offset = "0xBBEC34", VA = "0xBBEC34", Slot = "6")]
		public override void OnGainFocus()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xBBEE68", Offset = "0xBBEE68", VA = "0xBBEE68")]
		private void SetButtonState(Button button, bool interactable, [Optional] string text)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xBBEF40", Offset = "0xBBEF40", VA = "0xBBEF40", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xBBF0C4", Offset = "0xBBF0C4", VA = "0xBBF0C4", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xBBF188", Offset = "0xBBF188", VA = "0xBBF188")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xBBF18C", Offset = "0xBBF18C", VA = "0xBBF18C")]
		public MainMenu()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class MessageBox : Coplanar.Menu.Menu, IContext
	{
		[NonSerialized]
		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string message;

		[NonSerialized]
		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string title;

		[NonSerialized]
		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool noOK;

		[NonSerialized]
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool smallSize;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string bikeProgressMessage;

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xB44024", Offset = "0xB44024", VA = "0xB44024")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xB440D0", Offset = "0xB440D0", VA = "0xB440D0", Slot = "4")]
		public override void OnPushed()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xB440D4", Offset = "0xB440D4", VA = "0xB440D4", Slot = "5")]
		public override void OnPopped()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xB4414C", Offset = "0xB4414C", VA = "0xB4414C", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xB442E0", Offset = "0xB442E0", VA = "0xB442E0")]
		private void OnOK()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xB44360", Offset = "0xB44360", VA = "0xB44360")]
		public MessageBox()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public class MPResultsMenu : Coplanar.Menu.Menu, IContext
	{
		[Serializable]
		[Token(Token = "0x20001B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE05C", Offset = "0x9BE05C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaceController.RacerStatus> <>9__6_0;

			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaceController.RacerStatus> <>9__6_1;

			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0xBBE018", Offset = "0xBBE018", VA = "0xBBE018")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0xBBE020", Offset = "0xBBE020", VA = "0xBBE020")]
			internal int <UpdateMainText>b__6_0(RaceController.RacerStatus x, RaceController.RacerStatus y)
			{
				return default(int);
			}

			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0xBBE054", Offset = "0xBBE054", VA = "0xBBE054")]
			internal int <UpdateMainText>b__6_1(RaceController.RacerStatus x, RaceController.RacerStatus y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine cr;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool skipAnim;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int refreshCount;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool winLogged;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float pushedTime;

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xBBC5BC", Offset = "0xBBC5BC", VA = "0xBBC5BC")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xBBC7E0", Offset = "0xBBC7E0", VA = "0xBBC7E0")]
		private LevelController.Victory UpdateMainText()
		{
			return default(LevelController.Victory);
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xBBD8AC", Offset = "0xBBD8AC", VA = "0xBBD8AC", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xBBDD50", Offset = "0xBBDD50", VA = "0xBBDD50")]
		private void Dismiss()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xBBDDD0", Offset = "0xBBDDD0", VA = "0xBBDDD0", Slot = "4")]
		public override void OnPushed()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xBBDDFC", Offset = "0xBBDDFC", VA = "0xBBDDFC", Slot = "9")]
		public override List<ContextManager.Property> GetProps()
		{
			return null;
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xBBDE58", Offset = "0xBBDE58", VA = "0xBBDE58", Slot = "10")]
		public override UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xBBDED8", Offset = "0xBBDED8", VA = "0xBBDED8", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xBBDFA0", Offset = "0xBBDFA0", VA = "0xBBDFA0")]
		public MPResultsMenu()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xBBDFB0", Offset = "0xBBDFB0", VA = "0xBBDFB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1184", Offset = "0x9C1184")]
		private void <RebuildMenu>b__7_0()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class MultiPlayerLobby : Coplanar.Menu.Menu, IContext
	{
		[Serializable]
		[Token(Token = "0x20001B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE06C", Offset = "0x9BE06C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<MPController.EnumLobbyPlayers_Data> <>9__23_0;

			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0xB471A0", Offset = "0xB471A0", VA = "0xB471A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A60")]
			[Address(RVA = "0xB471A8", Offset = "0xB471A8", VA = "0xB471A8")]
			internal bool <RebuildMenu>b__23_0(MPController.EnumLobbyPlayers_Data data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE07C", Offset = "0x9BE07C")]
		private sealed class <Connect_CR>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiPlayerLobby <>4__this;

			[Token(Token = "0x170000E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A64")]
				[Address(RVA = "0xB47460", Offset = "0xB47460", VA = "0xB47460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A66")]
				[Address(RVA = "0xB474CC", Offset = "0xB474CC", VA = "0xB474CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A61")]
			[Address(RVA = "0xB46D14", Offset = "0xB46D14", VA = "0xB46D14")]
			[DebuggerHidden]
			public <Connect_CR>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6000A62")]
			[Address(RVA = "0xB471C4", Offset = "0xB471C4", VA = "0xB471C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xB471C8", Offset = "0xB471C8", VA = "0xB471C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xB47468", Offset = "0xB47468", VA = "0xB47468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE08C", Offset = "0x9BE08C")]
		private sealed class <PlayLevel_CR>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiPlayerLobby <>4__this;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SplineTrack <track>5__2;

			[Token(Token = "0x170000E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A6A")]
				[Address(RVA = "0xB479D4", Offset = "0xB479D4", VA = "0xB479D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A6C")]
				[Address(RVA = "0xB47A40", Offset = "0xB47A40", VA = "0xB47A40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xB47038", Offset = "0xB47038", VA = "0xB47038")]
			[DebuggerHidden]
			public <PlayLevel_CR>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6000A68")]
			[Address(RVA = "0xB474D4", Offset = "0xB474D4", VA = "0xB474D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xB474D8", Offset = "0xB474D8", VA = "0xB474D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xB479DC", Offset = "0xB479DC", VA = "0xB479DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject mainPanels;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI connectingMessage;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform listRoot_gameNames;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform listRoot_gameTracks;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform listRoot_standbyNames;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform listRoot_standbyTracks;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button readyButton;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject readyButtonHighlightPanel;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI readyButtonText;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isReady;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int isReadyTime;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int currentLevelIndex;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MPController mp;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool showingConnectingMessage;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Toggle playbackToggle;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Text countdownText;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int playerCountThreshold;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string highlightMarkup;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool wentToAlertsDialog;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool shouldBeConnect;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine connectCR;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool uiEnabled;

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xB44730", Offset = "0xB44730", VA = "0xB44730")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xB44AD8", Offset = "0xB44AD8", VA = "0xB44AD8")]
		private void ToggleReady()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xB44C5C", Offset = "0xB44C5C", VA = "0xB44C5C", Slot = "6")]
		public override void OnGainFocus()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xB44B6C", Offset = "0xB44B6C", VA = "0xB44B6C")]
		private void SetReadyButtonState(bool b)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xB44DC0", Offset = "0xB44DC0", VA = "0xB44DC0")]
		private void DestroyAllButFirstChild(Transform t)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xB44F30", Offset = "0xB44F30", VA = "0xB44F30")]
		private SplineTrack GetSplineTrackFromVote(int vote)
		{
			return null;
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xB44FE8", Offset = "0xB44FE8", VA = "0xB44FE8", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xB460DC", Offset = "0xB460DC", VA = "0xB460DC")]
		private void AddMpPlayerLine(Transform root, string text, bool highlight)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xB46210", Offset = "0xB46210", VA = "0xB46210")]
		private string GetNextEventString()
		{
			return null;
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xB4627C", Offset = "0xB4627C", VA = "0xB4627C")]
		public static int LevelSelectOrder_From_IncludedLevels(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xB44934", Offset = "0xB44934", VA = "0xB44934")]
		public static int IncludedLevels_From_LevelSelectOrder(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xB46420", Offset = "0xB46420", VA = "0xB46420")]
		public static int MoveToNextValidLevel(int includedIndex, int delta)
		{
			return default(int);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xB46554", Offset = "0xB46554", VA = "0xB46554")]
		private void ChangeTrackIndex(int delta)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xB465AC", Offset = "0xB465AC", VA = "0xB465AC")]
		private void Next()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xB465B4", Offset = "0xB465B4", VA = "0xB465B4")]
		private void Prev()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xB465BC", Offset = "0xB465BC", VA = "0xB465BC", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xB46940", Offset = "0xB46940", VA = "0xB46940")]
		private void Back()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xB46A20", Offset = "0xB46A20", VA = "0xB46A20")]
		private void ToggleRegisterForLobbyAlerts()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xB46B34", Offset = "0xB46B34", VA = "0xB46B34", Slot = "4")]
		public override void OnPushed()
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xB46C88", Offset = "0xB46C88", VA = "0xB46C88", Slot = "7")]
		public override void OnLoseFocus()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xB46C14", Offset = "0xB46C14", VA = "0xB46C14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1194", Offset = "0x9C1194")]
		private IEnumerator Connect_CR()
		{
			return null;
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xB46D40", Offset = "0xB46D40", VA = "0xB46D40", Slot = "5")]
		public override void OnPopped()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xB46E80", Offset = "0xB46E80", VA = "0xB46E80")]
		private void OnReadyToJoinGame()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xB46EF8", Offset = "0xB46EF8", VA = "0xB46EF8")]
		private void PlayLevel()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xB4600C", Offset = "0xB4600C", VA = "0xB4600C")]
		public SplineTrack GetSelectedTrack()
		{
			return null;
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xB46FC4", Offset = "0xB46FC4", VA = "0xB46FC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C11F8", Offset = "0x9C11F8")]
		private IEnumerator PlayLevel_CR()
		{
			return null;
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xB47064", Offset = "0xB47064", VA = "0xB47064")]
		public MultiPlayerLobby()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xB470C8", Offset = "0xB470C8", VA = "0xB470C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C125C", Offset = "0x9C125C")]
		private void <Awake>b__16_0()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xB470CC", Offset = "0xB470CC", VA = "0xB470CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C126C", Offset = "0x9C126C")]
		private void <Awake>b__16_1()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xB470D0", Offset = "0xB470D0", VA = "0xB470D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C127C", Offset = "0x9C127C")]
		private void <Awake>b__16_2()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public class MultiPlayerSession : Singleton<MultiPlayerSession>
	{
		[Token(Token = "0x20001B9")]
		public struct SessionStats
		{
			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int racesStarted;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int racesFinished;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int racesWon;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int totalPoints;
		}

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SessionStats localStats;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, SessionStats> playerStats;

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xB47A48", Offset = "0xB47A48", VA = "0xB47A48")]
		public void OnJoinRoom()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xB47AB0", Offset = "0xB47AB0", VA = "0xB47AB0")]
		public void CacheOtherPlayerStats()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xB47CF4", Offset = "0xB47CF4", VA = "0xB47CF4")]
		public SessionStats GetStats(int actorNum)
		{
			return default(SessionStats);
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xB47C30", Offset = "0xB47C30", VA = "0xB47C30")]
		private static SessionStats GetStatsFromPlayer(Player player)
		{
			return default(SessionStats);
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xB47D8C", Offset = "0xB47D8C", VA = "0xB47D8C")]
		private static void GetStat(Player player, string statName, out int stat)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xB47E58", Offset = "0xB47E58", VA = "0xB47E58")]
		public MultiPlayerSession()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	public class QuitMenu : Coplanar.Menu.Menu, IContext
	{
		[Serializable]
		[Token(Token = "0x20001BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE09C", Offset = "0x9BE09C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__2_0;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UnityAction <>9__2_1;

			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0xB4E0D8", Offset = "0xB4E0D8", VA = "0xB4E0D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0xB4E0E0", Offset = "0xB4E0E0", VA = "0xB4E0E0")]
			internal void <Awake>b__2_0()
			{
			}

			[Token(Token = "0x6000A70")]
			[Address(RVA = "0xB4E0E8", Offset = "0xB4E0E8", VA = "0xB4E0E8")]
			internal void <Awake>b__2_1()
			{
			}
		}

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button yes;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button no;

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xB4DDB4", Offset = "0xB4DDB4", VA = "0xB4DDB4")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xB4DF5C", Offset = "0xB4DF5C", VA = "0xB4DF5C", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xB4DF60", Offset = "0xB4DF60", VA = "0xB4DF60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xB4E06C", Offset = "0xB4E06C", VA = "0xB4E06C")]
		public QuitMenu()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public class ResultsMenu : Coplanar.Menu.Menu, IContext
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool readyToDismiss;

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xB5CD14", Offset = "0xB5CD14", VA = "0xB5CD14")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xB5CD50", Offset = "0xB5CD50", VA = "0xB5CD50", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xB5D134", Offset = "0xB5D134", VA = "0xB5D134")]
		private void Dismiss()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xB5D1B4", Offset = "0xB5D1B4", VA = "0xB5D1B4", Slot = "6")]
		public override void OnGainFocus()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xB5D1F0", Offset = "0xB5D1F0", VA = "0xB5D1F0", Slot = "9")]
		public override List<ContextManager.Property> GetProps()
		{
			return null;
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xB5D24C", Offset = "0xB5D24C", VA = "0xB5D24C", Slot = "10")]
		public override UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xB5D2CC", Offset = "0xB5D2CC", VA = "0xB5D2CC", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xB5D34C", Offset = "0xB5D34C", VA = "0xB5D34C")]
		public ResultsMenu()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xB5D354", Offset = "0xB5D354", VA = "0xB5D354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C128C", Offset = "0x9C128C")]
		private void <RebuildMenu>b__2_0()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	public class RingLevelResultsMenu : Coplanar.Menu.Menu, IContext
	{
		[Token(Token = "0x20001BB")]
		private enum AnimStage
		{
			[Token(Token = "0x4000E04")]
			Title,
			[Token(Token = "0x4000E05")]
			Line1,
			[Token(Token = "0x4000E06")]
			Line2,
			[Token(Token = "0x4000E07")]
			Line3,
			[Token(Token = "0x4000E08")]
			Total
		}

		[Token(Token = "0x20001BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE0AC", Offset = "0x9BE0AC")]
		private sealed class <Anim_CR>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RingLevelResultsMenu <>4__this;

			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <j>5__3;

			[Token(Token = "0x170000E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A74")]
				[Address(RVA = "0xB98BD0", Offset = "0xB98BD0", VA = "0xB98BD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A76")]
				[Address(RVA = "0xB98C3C", Offset = "0xB98C3C", VA = "0xB98C3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A71")]
			[Address(RVA = "0xB98334", Offset = "0xB98334", VA = "0xB98334")]
			[DebuggerHidden]
			public <Anim_CR>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xB986A0", Offset = "0xB986A0", VA = "0xB986A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xB986A4", Offset = "0xB986A4", VA = "0xB986A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A75")]
			[Address(RVA = "0xB98BD8", Offset = "0xB98BD8", VA = "0xB98BD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool readyToDismiss;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine cr;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool skipAnim;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string lapTranslation;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string ringsTranslation;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string totalTranslation;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xB97B14", Offset = "0xB97B14", VA = "0xB97B14")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xB97B50", Offset = "0xB97B50", VA = "0xB97B50")]
		private string BuildResultsString(AnimStage stage, int currentN)
		{
			return null;
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xB97DC8", Offset = "0xB97DC8", VA = "0xB97DC8", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xB982C0", Offset = "0xB982C0", VA = "0xB982C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C129C", Offset = "0x9C129C")]
		private IEnumerator Anim_CR()
		{
			return null;
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xB98360", Offset = "0xB98360", VA = "0xB98360")]
		private void Dismiss()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xB983F8", Offset = "0xB983F8", VA = "0xB983F8", Slot = "6")]
		public override void OnGainFocus()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xB98434", Offset = "0xB98434", VA = "0xB98434", Slot = "9")]
		public override List<ContextManager.Property> GetProps()
		{
			return null;
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xB98490", Offset = "0xB98490", VA = "0xB98490", Slot = "10")]
		public override UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xB98510", Offset = "0xB98510", VA = "0xB98510", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xB9862C", Offset = "0xB9862C", VA = "0xB9862C")]
		public RingLevelResultsMenu()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xB98634", Offset = "0xB98634", VA = "0xB98634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1300", Offset = "0x9C1300")]
		private void <RebuildMenu>b__9_0()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xB98680", Offset = "0xB98680", VA = "0xB98680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1310", Offset = "0x9C1310")]
		private bool <Anim_CR>b__10_2()
		{
			return default(bool);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xB98688", Offset = "0xB98688", VA = "0xB98688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1320", Offset = "0x9C1320")]
		private bool <Anim_CR>b__10_3()
		{
			return default(bool);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xB98690", Offset = "0xB98690", VA = "0xB98690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1330", Offset = "0x9C1330")]
		private bool <Anim_CR>b__10_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xB98698", Offset = "0xB98698", VA = "0xB98698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1340", Offset = "0x9C1340")]
		private bool <Anim_CR>b__10_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B8")]
	public class UnlockMenu : Coplanar.Menu.Menu, IContext
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentAnnounceIndex;

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xBAF8A8", Offset = "0xBAF8A8", VA = "0xBAF8A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xB98678", Offset = "0xB98678", VA = "0xB98678")]
		public static bool UnlockMenuNeeded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xBAF95C", Offset = "0xBAF95C", VA = "0xBAF95C", Slot = "9")]
		public override List<ContextManager.Property> GetProps()
		{
			return null;
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xBAF9E4", Offset = "0xBAF9E4", VA = "0xBAF9E4", Slot = "10")]
		public override UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xBAFA64", Offset = "0xBAFA64", VA = "0xBAFA64", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xBAFBE0", Offset = "0xBAFBE0", VA = "0xBAFBE0")]
		public UnlockMenu()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xBAFBE8", Offset = "0xBAFBE8", VA = "0xBAFBE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1350", Offset = "0x9C1350")]
		private void <Start>b__1_0()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	public class MeshSwitcher : MonoBehaviour
	{
		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh[] meshes;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentIndex;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool connnected;

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xB43E0C", Offset = "0xB43E0C", VA = "0xB43E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xB43F64", Offset = "0xB43F64", VA = "0xB43F64")]
		public void NextMesh()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xB4401C", Offset = "0xB4401C", VA = "0xB4401C")]
		public MeshSwitcher()
		{
		}
	}
	[Token(Token = "0x20000BA")]
	public class MPPlayerView : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x20001BD")]
		public enum BikeSimEvent
		{
			[Token(Token = "0x4000E0F")]
			OnDroneLock = 0,
			[Token(Token = "0x4000E10")]
			OnDroneHit = 1,
			[Token(Token = "0x4000E11")]
			OnDroneTimedOut = 2,
			[Token(Token = "0x4000E12")]
			MagnetLock = 3,
			[Token(Token = "0x4000E13")]
			MagnetVictim = 4,
			[Token(Token = "0x4000E14")]
			TrailInfect = 5,
			[Token(Token = "0x4000E15")]
			IceAttack = 6,
			[Token(Token = "0x4000E16")]
			IceAttackOver = 7,
			[Token(Token = "0x4000E17")]
			PlaceMine = 8,
			[Token(Token = "0x4000E18")]
			RemoveMine = 9,
			[Token(Token = "0x4000E19")]
			DroneExplosion = 10,
			[Token(Token = "0x4000E1A")]
			Debug_GetIceInfection = 1000,
			[Token(Token = "0x4000E1B")]
			Debug_FireDrone = 1001,
			[Token(Token = "0x4000E1C")]
			Teleport = 1002
		}

		[Token(Token = "0x20001BE")]
		[Flags]
		public enum Flags
		{
			[Token(Token = "0x4000E1E")]
			started = 1,
			[Token(Token = "0x4000E1F")]
			droneOnTrack = 2,
			[Token(Token = "0x4000E20")]
			iceVirusArmed = 4,
			[Token(Token = "0x4000E21")]
			immune = 8
		}

		[NonSerialized]
		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLocalPlayer;

		[NonSerialized]
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int creator;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MPController mp;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 pos;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 velocity;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float heading;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bank;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float timestamp;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float rxTimestamp;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int finishTime;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int raceKey;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float smoothedPing;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Flags flags;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 dronePos;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 droneVel;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<BikeSimEvent, int, object, object> OnSimEvent;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool finishTimeSaved;

		[Token(Token = "0x17000047")]
		public int Creator
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0xBB8240", Offset = "0xBB8240", VA = "0xBB8240")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000048")]
		public bool Started
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0xBB8294", Offset = "0xBB8294", VA = "0xBB8294")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000049")]
		public bool DroneOnTrack
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0xBB82A0", Offset = "0xBB82A0", VA = "0xBB82A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004A")]
		public bool IceVirusArmed
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0xBB82AC", Offset = "0xBB82AC", VA = "0xBB82AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004B")]
		public bool Immune
		{
			[Token(Token = "0x60005A0")]
			[Address(RVA = "0xBB82B8", Offset = "0xBB82B8", VA = "0xBB82B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xBB8278", Offset = "0xBB8278", VA = "0xBB8278")]
		public void SetFlag(Flags f, bool s)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xBB82C4", Offset = "0xBB82C4", VA = "0xBB82C4")]
		public Player GetCreator()
		{
			return null;
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xBB8354", Offset = "0xBB8354", VA = "0xBB8354")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xBB83F0", Offset = "0xBB83F0", VA = "0xBB83F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xBB8A54", Offset = "0xBB8A54", VA = "0xBB8A54", Slot = "51")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xBB8860", Offset = "0xBB8860", VA = "0xBB8860")]
		public static int GetTimeHash(int time)
		{
			return default(int);
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xBB907C", Offset = "0xBB907C", VA = "0xBB907C")]
		public void SaveFinishTime()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xBB9100", Offset = "0xBB9100", VA = "0xBB9100")]
		[PunRPC]
		public void SimEvent(BikeSimEvent e, object param1, object param2, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xBB91A8", Offset = "0xBB91A8", VA = "0xBB91A8")]
		public MPPlayerView()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	internal class PlaybackTools : MonoBehaviour
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mineCountToPlace;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool seeded;

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xB4D6A4", Offset = "0xB4D6A4", VA = "0xB4D6A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xB4D8D0", Offset = "0xB4D8D0", VA = "0xB4D8D0")]
		private void FireDroneFromNextBike()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xB4D6E0", Offset = "0xB4D6E0", VA = "0xB4D6E0")]
		private void PlaceFakeMines()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xB4DDA4", Offset = "0xB4DDA4", VA = "0xB4DDA4")]
		public PlaybackTools()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9BD9D8", Offset = "0x9BD9D8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BD9D8", Offset = "0x9BD9D8")]
	public class TexturePack : ScriptableObject
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angle;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lengthTimes10;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D[] textures;

		[Token(Token = "0x1700004C")]
		public Texture2D Item
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0xBA5290", Offset = "0xBA5290", VA = "0xBA5290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xBA52D4", Offset = "0xBA52D4", VA = "0xBA52D4")]
		public void LoadTextures(string sectionName, CylinderBlurConfig.Direction direction, CylinderBlurConfig.ParamsSetName paramsName, CylinderBlurConfig.OutputType outputType = CylinderBlurConfig.OutputType.Color)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xBA5580", Offset = "0xBA5580", VA = "0xBA5580")]
		public TexturePack()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public class BikeSim : RacerBase
	{
		[Token(Token = "0x20001BF")]
		public enum ChargeAction
		{
			[Token(Token = "0x4000E23")]
			None,
			[Token(Token = "0x4000E24")]
			Battery,
			[Token(Token = "0x4000E25")]
			Bonus,
			[Token(Token = "0x4000E26")]
			Deduct
		}

		[Token(Token = "0x20001C0")]
		public enum Event
		{
			[Token(Token = "0x4000E28")]
			BonusGiven,
			[Token(Token = "0x4000E29")]
			BoostGlide_NOTUSED,
			[Token(Token = "0x4000E2A")]
			BoostRing,
			[Token(Token = "0x4000E2B")]
			BoostPickup,
			[Token(Token = "0x4000E2C")]
			BoostAboutToEnd,
			[Token(Token = "0x4000E2D")]
			MagnetDeploy,
			[Token(Token = "0x4000E2E")]
			ToolExpire,
			[Token(Token = "0x4000E2F")]
			MagnetActivate,
			[Token(Token = "0x4000E30")]
			MagnetFire,
			[Token(Token = "0x4000E31")]
			DeployPowerPack,
			[Token(Token = "0x4000E32")]
			EnterGap,
			[Token(Token = "0x4000E33")]
			LeaveGap,
			[Token(Token = "0x4000E34")]
			PowerPackDepleted,
			[Token(Token = "0x4000E35")]
			IceVirusDeploy,
			[Token(Token = "0x4000E36")]
			IceVirusActivate,
			[Token(Token = "0x4000E37")]
			EMPDroneDeploy,
			[Token(Token = "0x4000E38")]
			TeleportDeploy,
			[Token(Token = "0x4000E39")]
			TeleportActivate,
			[Token(Token = "0x4000E3A")]
			MineDeploy,
			[Token(Token = "0x4000E3B")]
			MiniBoostDeploy,
			[Token(Token = "0x4000E3C")]
			HitMine,
			[Token(Token = "0x4000E3D")]
			RingPickup,
			[Token(Token = "0x4000E3E")]
			InfectedTrail,
			[Token(Token = "0x4000E3F")]
			DroneHitTarget,
			[Token(Token = "0x4000E40")]
			BoostMiniPickup,
			[Token(Token = "0x4000E41")]
			HitByIceVirus,
			[Token(Token = "0x4000E42")]
			Unfrozen,
			[Token(Token = "0x4000E43")]
			VirusToolDisabled,
			[Token(Token = "0x4000E44")]
			Collision,
			[Token(Token = "0x4000E45")]
			Dummy_to_keep_numbering_the_same,
			[Token(Token = "0x4000E46")]
			EmptyBattery,
			[Token(Token = "0x4000E47")]
			UnderAttack,
			[Token(Token = "0x4000E48")]
			MagnetAttacked,
			[Token(Token = "0x4000E49")]
			HitByDrone,
			[Token(Token = "0x4000E4A")]
			DefendedDrone,
			[Token(Token = "0x4000E4B")]
			DefendedIceAttack,
			[Token(Token = "0x4000E4C")]
			ImmunityEnd,
			[Token(Token = "0x4000E4D")]
			ImmunityStart,
			[Token(Token = "0x4000E4E")]
			MagnetDefended
		}

		[Token(Token = "0x20001C1")]
		private class LockOnTracker
		{
			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float timeout;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<int, float> lockTimes;

			[Token(Token = "0x6000A77")]
			[Address(RVA = "0xB60A2C", Offset = "0xB60A2C", VA = "0xB60A2C")]
			public LockOnTracker(float t)
			{
			}

			[Token(Token = "0x6000A78")]
			[Address(RVA = "0xB60AB0", Offset = "0xB60AB0", VA = "0xB60AB0")]
			public void AddLock(int src)
			{
			}

			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xB60B28", Offset = "0xB60B28", VA = "0xB60B28")]
			public void Remove(int src)
			{
			}

			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0xB60B90", Offset = "0xB60B90", VA = "0xB60B90")]
			public void Refresh()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001C2")]
		public struct State
		{
			[Token(Token = "0x2000219")]
			public enum BatteryState
			{
				[Token(Token = "0x4000FF0")]
				Ok,
				[Token(Token = "0x4000FF1")]
				SlowDownPending,
				[Token(Token = "0x4000FF2")]
				Recharging,
				[Token(Token = "0x4000FF3")]
				Empty,
				[Token(Token = "0x4000FF4")]
				Full
			}

			[Serializable]
			[Token(Token = "0x200021A")]
			public struct BoostStatus
			{
				[Token(Token = "0x4000FF5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float remainingTime;

				[Token(Token = "0x4000FF6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float maxSpeed;

				[Token(Token = "0x4000FF7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public bool warningSoundSent;
			}

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float heading;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float bank;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float bankBooster;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float driftAngle;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 velocity;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 position;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float capacitorLevel;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public BatteryState batteryState;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool slowedByGap;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float respawnImmunityTime;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool delayedSlowPending;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool outOfBounds;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public BoostStatus[] remainingBoostTimes;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int batteryLevel;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float batteryLevelFraction;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SimpleTrack.PickupType currentPickup;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float pickupSpawnDelay;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float troubleTime;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float bonusCharge;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float bonusChargeFraction;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool bonusReady;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool hitObstacle;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float shieldActivateTime;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float respawnWaitTime;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float powerPack;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float pickupUsedTime;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public float defrostTime;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool frozen;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int teleportCooldown;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool droppingMine;

			[Token(Token = "0x170000E8")]
			[ShowInInspector]
			public float Speed
			{
				[Token(Token = "0x6000A7B")]
				[Address(RVA = "0xA5AD14", Offset = "0xA5AD14", VA = "0xA5AD14")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170000E9")]
			public bool BatteryGood
			{
				[Token(Token = "0x6000A7C")]
				[Address(RVA = "0xA5AD20", Offset = "0xA5AD20", VA = "0xA5AD20")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000EA")]
			public SimpleTrack.PickupType CurrentPickup
			{
				[Token(Token = "0x6000A7D")]
				[Address(RVA = "0xA5AD34", Offset = "0xA5AD34", VA = "0xA5AD34")]
				get
				{
					return default(SimpleTrack.PickupType);
				}
			}

			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xA5AD50", Offset = "0xA5AD50", VA = "0xA5AD50")]
			public void Serialize(SimpleSerializer serializer)
			{
			}

			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xA5AD58", Offset = "0xA5AD58", VA = "0xA5AD58")]
			public void Deserialize(SimpleDeserializer sd)
			{
			}
		}

		[Token(Token = "0x20001C3")]
		public struct DroneState
		{
			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 position;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 velocity;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject drone;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float launchTime;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RacerBase target;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float height;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float speed;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float prevYDistance;
		}

		[Token(Token = "0x20001C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE0CC", Offset = "0x9BE0CC")]
		private sealed class <DelayedSlowDown>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BikeSim <>4__this;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool force;

			[Token(Token = "0x170000EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A83")]
				[Address(RVA = "0xB609B8", Offset = "0xB609B8", VA = "0xB609B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A85")]
				[Address(RVA = "0xB60A24", Offset = "0xB60A24", VA = "0xB60A24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xB60878", Offset = "0xB60878", VA = "0xB60878")]
			[DebuggerHidden]
			public <DelayedSlowDown>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xB608A4", Offset = "0xB608A4", VA = "0xB608A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xB608A8", Offset = "0xB608A8", VA = "0xB608A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xB609C0", Offset = "0xB609C0", VA = "0xB609C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<RacerBase, int, ChargeAction> NotifyPodCollected;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<RacerBase> NotifyRingCollected;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<RacerBase> NotifyCrash;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<Event> NotifyEvent;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HandlingOptions handlingOptions;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SplineTrack track;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float characterSpeed;

		[NonSerialized]
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float nextRandomPickupSeed;

		[NonSerialized]
		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool scriptOverride_currentPickup;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool useJet;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int activeInfections;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LockOnTracker droneLocks;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LockOnTracker magnetLocks;

		[NonSerialized]
		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float speedFactor;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public State state;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public FlightControlPlayback.PickupAction pickupAction;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private InGameTool currentTool;

		[NonSerialized]
		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float currentAngleDriftPerSecond;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float stickX;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool throttle;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool onTrack;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public bool gapImmune;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		public bool gapExposed;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool prevGapExposed;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		private bool prevInCollision;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		public bool trackPointValid;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public BSplineTrackEditor.TrackPoint trackPoint;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Func<Vector2, bool> IsOnTrackFn;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private RaceController raceController;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float testInfectionOffset;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Queue<int> unrecordedEventQueue;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public DroneState droneState;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Trans SetDronePosition_Trans;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Dictionary<Type, InGameTool> gameTools;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private TrackItem lastPickup;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float lastPickupTime;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private SimpleTrack.PickupType lastRandomPickup;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int lastPickupWeightIndex;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public int trailIndex;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int minePlaceCount;

		[Token(Token = "0x1700004D")]
		public float FrameInterval
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xB92064", Offset = "0xB92064", VA = "0xB92064")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004E")]
		public float PrimaryFrameInterval
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xB920DC", Offset = "0xB920DC", VA = "0xB920DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004F")]
		public bool HasDroneLockOn
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xB8EFBC", Offset = "0xB8EFBC", VA = "0xB8EFBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000050")]
		public bool HasMagnetLockOn
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xB8F02C", Offset = "0xB8F02C", VA = "0xB8F02C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public float TotalSpeedFactor
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0xB95578", Offset = "0xB95578", VA = "0xB95578")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000052")]
		public Vector2 Forward
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0xB96858", Offset = "0xB96858", VA = "0xB96858")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000053")]
		public float PowerPackFraction
		{
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0xB8EE14", Offset = "0xB8EE14", VA = "0xB8EE14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000054")]
		public float BatteryFraction
		{
			[Token(Token = "0x60005EC")]
			[Address(RVA = "0xB8E134", Offset = "0xB8E134", VA = "0xB8E134")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000055")]
		public bool MPImmunityActive
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0xB8EE3C", Offset = "0xB8EE3C", VA = "0xB8EE3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xB92150", Offset = "0xB92150", VA = "0xB92150")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xB922A4", Offset = "0xB922A4", VA = "0xB922A4", Slot = "4")]
		public override int StartIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xB922C4", Offset = "0xB922C4", VA = "0xB922C4", Slot = "5")]
		public override Vector2 GetPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xB922CC", Offset = "0xB922CC", VA = "0xB922CC", Slot = "6")]
		public override float GetBank()
		{
			return default(float);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xB922D4", Offset = "0xB922D4", VA = "0xB922D4", Slot = "8")]
		public override bool GetImmune()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xB922D8", Offset = "0xB922D8", VA = "0xB922D8", Slot = "12")]
		public override float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xB922E4", Offset = "0xB922E4", VA = "0xB922E4", Slot = "13")]
		public override Vector2 GetVelocity()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xB922EC", Offset = "0xB922EC", VA = "0xB922EC")]
		public float GetDisplaySpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xB9230C", Offset = "0xB9230C", VA = "0xB9230C")]
		public float GetHeading()
		{
			return default(float);
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xB92314", Offset = "0xB92314", VA = "0xB92314")]
		public bool OnTrack()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xB9231C", Offset = "0xB9231C", VA = "0xB9231C")]
		public void SetStick(float degrees)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xB92324", Offset = "0xB92324", VA = "0xB92324")]
		public void SetThrottle(bool throttleOn)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xB92330", Offset = "0xB92330", VA = "0xB92330", Slot = "14")]
		public override void RaceInit(RaceController rc)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xB92354", Offset = "0xB92354", VA = "0xB92354", Slot = "16")]
		public override void SetTrailIndex(int trail)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xB9235C", Offset = "0xB9235C", VA = "0xB9235C")]
		private void InitState()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xB924B8", Offset = "0xB924B8", VA = "0xB924B8", Slot = "15")]
		public override void GotoStart()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xB924BC", Offset = "0xB924BC", VA = "0xB924BC")]
		private void TestInfection()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xB9251C", Offset = "0xB9251C", VA = "0xB9251C")]
		private void StartInfectionOnLocalPlayer(float y)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xB92670", Offset = "0xB92670", VA = "0xB92670")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xB94330", Offset = "0xB94330", VA = "0xB94330", Slot = "9")]
		public override bool IsLocalPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xB94350", Offset = "0xB94350", VA = "0xB94350", Slot = "10")]
		public override void SetSpeedFactor(float factor)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xB94358", Offset = "0xB94358", VA = "0xB94358", Slot = "11")]
		public override float GetSpeedFactor()
		{
			return default(float);
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xB94360", Offset = "0xB94360", VA = "0xB94360")]
		public int GetNextUnrecordedEvent()
		{
			return default(int);
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xB943D4", Offset = "0xB943D4", VA = "0xB943D4")]
		public void UsePickUp()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xB94ED4", Offset = "0xB94ED4", VA = "0xB94ED4")]
		private int PickupBoostsActive()
		{
			return default(int);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xB94A34", Offset = "0xB94A34", VA = "0xB94A34")]
		public void DeployDrone()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xB938D8", Offset = "0xB938D8", VA = "0xB938D8")]
		private void UpdateDrone()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xB952CC", Offset = "0xB952CC", VA = "0xB952CC")]
		private bool MultiplayerAttacked(float damage, float residue = 0f, bool onlyDeductIfDefended = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xB94F34", Offset = "0xB94F34", VA = "0xB94F34")]
		private bool ApplyDroneHitEffect()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xB95180", Offset = "0xB95180", VA = "0xB95180")]
		public static void SetDronePosition(Vector2 position, GameObject drone, RaceController raceController)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xB954E8", Offset = "0xB954E8", VA = "0xB954E8")]
		public void SecondaryAction()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xB94DA8", Offset = "0xB94DA8", VA = "0xB94DA8")]
		private void ActivateTool(Type type)
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xB92840", Offset = "0xB92840", VA = "0xB92840")]
		private void Simulate()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xB95BE8", Offset = "0xB95BE8", VA = "0xB95BE8")]
		public bool DropMine(out int mineId)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xB95D14", Offset = "0xB95D14", VA = "0xB95D14")]
		private int GetMineID()
		{
			return default(int);
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xB9575C", Offset = "0xB9575C", VA = "0xB9575C")]
		private void OnHitMine(TrackItem trackItem)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xB8B7BC", Offset = "0xB8B7BC", VA = "0xB8B7BC")]
		public void ApplyStickToBank(float stick, ref float bank)
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xB96080", Offset = "0xB96080", VA = "0xB96080")]
		private SimpleTrack.PickupType GetWeightedRandomPickup()
		{
			return default(SimpleTrack.PickupType);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xB963D0", Offset = "0xB963D0", VA = "0xB963D0")]
		public void GivePickup(SimpleTrack.PickupType pickup)
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xB964F4", Offset = "0xB964F4", VA = "0xB964F4")]
		public void SetPickup(SimpleTrack.PickupType pickup)
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xB95648", Offset = "0xB95648", VA = "0xB95648")]
		private void OnPodPickup()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xB956C4", Offset = "0xB956C4", VA = "0xB956C4")]
		private void OnRingPickup(TrackItem ring)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xB95588", Offset = "0xB95588", VA = "0xB95588")]
		private void OnRandomPickup()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xB925FC", Offset = "0xB925FC", VA = "0xB925FC")]
		public void SendEvent(Event e)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xB9479C", Offset = "0xB9479C", VA = "0xB9479C")]
		public void Boost(BoostTrackItem.BoostType boostType)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xB965A0", Offset = "0xB965A0", VA = "0xB965A0")]
		public void LockCurrentSpeedAsBoost(float duration)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xB96640", Offset = "0xB96640", VA = "0xB96640")]
		public void ClearBoosts()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xB959F0", Offset = "0xB959F0", VA = "0xB959F0")]
		private void Respawn(float currentSpeed)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xB966E0", Offset = "0xB966E0", VA = "0xB966E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1370", Offset = "0x9C1370")]
		private IEnumerator DelayedSlowDown(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xB96768", Offset = "0xB96768", VA = "0xB96768")]
		public Quaternion GetLocalRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xB8B738", Offset = "0xB8B738", VA = "0xB8B738")]
		public Quaternion GetLocalRotation(float bank)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xB8B9A4", Offset = "0xB8B9A4", VA = "0xB8B9A4")]
		public Quaternion GetLocalRotationNoBank()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xB967DC", Offset = "0xB967DC", VA = "0xB967DC")]
		public static Quaternion GetLocalRotation(float heading, float bank)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xB968CC", Offset = "0xB968CC", VA = "0xB968CC")]
		public void GiveCharge()
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xB964FC", Offset = "0xB964FC", VA = "0xB964FC")]
		public void GiveCharge(out int quantisedLevel, out ChargeAction chargeAction)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xB949CC", Offset = "0xB949CC", VA = "0xB949CC")]
		public void FillBattery(float level = 1f)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xB968F8", Offset = "0xB968F8", VA = "0xB968F8")]
		public void ResetPowerpack()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xB96900", Offset = "0xB96900", VA = "0xB96900")]
		public void ResetState()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xB953A4", Offset = "0xB953A4", VA = "0xB953A4")]
		public bool DeductCharge(float chargeAmount)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xB95FC8", Offset = "0xB95FC8", VA = "0xB95FC8")]
		private void SetBatteryState(State.BatteryState bs)
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xB9697C", Offset = "0xB9697C", VA = "0xB9697C")]
		public void ClearTool()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xB8B658", Offset = "0xB8B658", VA = "0xB8B658")]
		public void GiveSpeed(float delta)
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xB969B4", Offset = "0xB969B4", VA = "0xB969B4")]
		public void SetSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xB95EE8", Offset = "0xB95EE8", VA = "0xB95EE8")]
		public void LimitSpeed(float speedLimit)
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xB96A50", Offset = "0xB96A50", VA = "0xB96A50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C13D4", Offset = "0x9C13D4")]
		private void CHEAT_GiveBoost()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xB96A58", Offset = "0xB96A58", VA = "0xB96A58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C140C", Offset = "0x9C140C")]
		private void CHEAT_GiveMagnet()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xB96A60", Offset = "0xB96A60", VA = "0xB96A60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C1444", Offset = "0x9C1444")]
		private void CHEAT_PowerPack()
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xB96A68", Offset = "0xB96A68", VA = "0xB96A68")]
		public bool OnIceAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xB96C40", Offset = "0xB96C40", VA = "0xB96C40")]
		public void Teleport(Vector2 pos)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xB96D0C", Offset = "0xB96D0C", VA = "0xB96D0C", Slot = "17")]
		public override Vector3 GetTrailWiggleDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xB96D1C", Offset = "0xB96D1C", VA = "0xB96D1C")]
		public void OnSimEvent(MPPlayerView.BikeSimEvent e, int sourceActorNum, object param1, object param2)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xB95DC8", Offset = "0xB95DC8", VA = "0xB95DC8")]
		public void SendSimEvent(MPPlayerView.BikeSimEvent e, [Optional] object param1, [Optional] object param2)
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xB970E0", Offset = "0xB970E0", VA = "0xB970E0")]
		public BikeSim()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xB971F8", Offset = "0xB971F8", VA = "0xB971F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C147C", Offset = "0x9C147C")]
		private void <StartInfectionOnLocalPlayer>b__59_0(bool dead)
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class BikeStateRecorder : MonoBehaviour
	{
		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BikeStateRecording recording;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BikeSim bikeSim;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playhead;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool record;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int previousFrame;

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xB612C4", Offset = "0xB612C4", VA = "0xB612C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xB6131C", Offset = "0xB6131C", VA = "0xB6131C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xB61634", Offset = "0xB61634", VA = "0xB61634")]
		public BikeStateRecorder()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BDA24", Offset = "0x9BDA24")]
	public class BikeStateRecording : ScriptableObject
	{
		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public BikeSim.State[] stateArray;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int recordingEnd;

		[Token(Token = "0x4000719")]
		private const int arrayResizeConst = 120;

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xB6163C", Offset = "0xB6163C", VA = "0xB6163C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xB614BC", Offset = "0xB614BC", VA = "0xB614BC")]
		public void RecordState(BikeSim bikeSim, int recordPosition)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xB615B8", Offset = "0xB615B8", VA = "0xB615B8")]
		public void PlayState(BikeSim bikeSim, int position)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xB61698", Offset = "0xB61698", VA = "0xB61698")]
		public BikeStateRecording()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class TargettingTool : InGameTool
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject targetReticule;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer targetReticuleMr;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected RacerBase target;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firing;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float firingStart;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float enableStart;

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xBA3D84", Offset = "0xBA3D84", VA = "0xBA3D84", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xBA3FBC", Offset = "0xBA3FBC", VA = "0xBA3FBC", Slot = "5")]
		public override void Disable()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xBA4050", Offset = "0xBA4050", VA = "0xBA4050", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xBA4930", Offset = "0xBA4930", VA = "0xBA4930", Slot = "8")]
		protected virtual void OnContinueUse(float elapsed)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xBA4934", Offset = "0xBA4934", VA = "0xBA4934", Slot = "9")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xBA4938", Offset = "0xBA4938", VA = "0xBA4938", Slot = "6")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xBA4A20", Offset = "0xBA4A20", VA = "0xBA4A20")]
		public TargettingTool()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class Magnet : TargettingTool
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0xBBE08C", Offset = "0xBBE08C", VA = "0xBBE08C", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xBBE0C4", Offset = "0xBBE0C4", VA = "0xBBE0C4", Slot = "9")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xBBE27C", Offset = "0xBBE27C", VA = "0xBBE27C", Slot = "8")]
		protected override void OnContinueUse(float elapsed)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xBBE768", Offset = "0xBBE768", VA = "0xBBE768")]
		public Magnet()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public abstract class TrailVirusTool : InGameTool
	{
		[Token(Token = "0x20001C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE0DC", Offset = "0x9BE0DC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrailVirusTool <>4__this;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrailManager.TrailIntersection ti;

			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xBAF828", Offset = "0xBAF828", VA = "0xBAF828")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xBAF840", Offset = "0xBAF840", VA = "0xBAF840")]
			internal void <OnHitTrail>b__0(bool dead)
			{
			}
		}

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject visualisation;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float firstVictimTime;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] infectedTrails;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrailManager.TrailIntersectionSearchState intersectionSearchState;

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xBAEF58", Offset = "0xBAEF58", VA = "0xBAEF58", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xBAEFE0", Offset = "0xBAEFE0", VA = "0xBAEFE0", Slot = "5")]
		public override void Disable()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xBAF0A0", Offset = "0xBAF0A0", VA = "0xBAF0A0", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xBAF784", Offset = "0xBAF784", VA = "0xBAF784")]
		protected void SetupToolVisualization(GameObject prefab)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xBAF594", Offset = "0xBAF594", VA = "0xBAF594")]
		protected void OnHitTrail(TrailManager.TrailIntersection ti)
		{
		}

		[Token(Token = "0x600061B")]
		protected abstract void OnInfect(RacerBase bikeSim);

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xBAF830", Offset = "0xBAF830", VA = "0xBAF830")]
		protected TrailVirusTool()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class IceVirus : TrailVirusTool
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0xBB1E5C", Offset = "0xBB1E5C", VA = "0xBB1E5C", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xBB1E94", Offset = "0xBB1E94", VA = "0xBB1E94", Slot = "8")]
		protected override void OnInfect(RacerBase racer)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xBB1F7C", Offset = "0xBB1F7C", VA = "0xBB1F7C")]
		public IceVirus()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class TeleportTool : InGameTool
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject jumpVisualization;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material jumpVisualizationMaterial;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float enableStart;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Trans Update_Trans;

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xBA4A28", Offset = "0xBA4A28", VA = "0xBA4A28", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xBA4B80", Offset = "0xBA4B80", VA = "0xBA4B80", Slot = "5")]
		public override void Disable()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xBA4B84", Offset = "0xBA4B84", VA = "0xBA4B84", Slot = "6")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xBA4CC4", Offset = "0xBA4CC4", VA = "0xBA4CC4")]
		private void Clear()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xBA4D48", Offset = "0xBA4D48", VA = "0xBA4D48", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xBA5228", Offset = "0xBA5228", VA = "0xBA5228")]
		public TeleportTool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C5")]
	public class BoostSpec
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float speedIncrease;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float boostAsymptoticFactor;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool gapImmunity;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BikeSim.Event eventType;

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xB69770", Offset = "0xB69770", VA = "0xB69770")]
		public BoostSpec()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BDA34", Offset = "0x9BDA34")]
	public class HandlingOptions : ScriptableObject
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float aiSpeedFactor;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF250", Offset = "0x9BF250")]
		public float maxStick;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxBank;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float bankFinalApproachFactor;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float bankFinalApproachFactorBlendRange;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float superBank;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float recenterBias;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bankRate;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minSpeedForTurn;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF288", Offset = "0x9BF288")]
		public float bankBoostDecay;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bankBoostGrow;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float bankBoostScale;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float bankBoostMaxTurnRate;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF2C0", Offset = "0x9BF2C0")]
		public float power;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float brakeRate;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxSpeed;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float glideSpeed;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF2F8", Offset = "0x9BF2F8")]
		public float deboostRate;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF330", Offset = "0x9BF330")]
		public BoostSpec[] boostSpecs;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF368", Offset = "0x9BF368")]
		public float gapMaxSpeed;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float hitObstacleSpeed;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float gapSlowDownDelay;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float timeTillRespawn;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float respawnWaitTime;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float respawnImmunityDuration;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float teleportImmunityDuration;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF3A0", Offset = "0x9BF3A0")]
		public bool sideBoostEnabled;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int batteryCapacity;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float capacitorCapacity;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float powerPackSize;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int bonusChargeLimit;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float dischargeRate;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BF3D8", Offset = "0x9BF3D8")]
		public float respawnSlowDownFactor;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float pickupUseToRespawnTime;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float restartBatteryPercentage;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float corneringLerp;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float straighteningLerp;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float driftForce;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float maxDriftAngle;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AnimationCurve driftTurnCurve;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool useCurve;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float driftDecay;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AnimationCurve driftDecayCurve;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float jetCost;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float jetPower;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float jetBankDeadZone;

		[Token(Token = "0x17000056")]
		[ShowInInspector]
		public float TurnRadiusAtMaxSpeed
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0xBB1724", Offset = "0xBB1724", VA = "0xBB1724")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xBB1760", Offset = "0xBB1760", VA = "0xBB1760")]
		public float TurnDegreesPerSecond(float bank, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xBB1818", Offset = "0xBB1818", VA = "0xBB1818")]
		public float BankForTurnDegreesPerSecond(float turnRate, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xBB18CC", Offset = "0xBB18CC", VA = "0xBB18CC")]
		public BoostSpec GetBoostSpec(BoostTrackItem.BoostType boostType)
		{
			return null;
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xBB1910", Offset = "0xBB1910", VA = "0xBB1910")]
		public float GetBoostedMaxSpeed(BoostTrackItem.BoostType boostType)
		{
			return default(float);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xBB1964", Offset = "0xBB1964", VA = "0xBB1964")]
		public HandlingOptions()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public abstract class InGameTool
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BikeSim bikeSim;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float enabledTime;

		[Token(Token = "0x600062D")]
		public abstract void OnEnable();

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xBB2624", Offset = "0xBB2624", VA = "0xBB2624")]
		public void Enable(BikeSim bikeSim)
		{
		}

		[Token(Token = "0x600062F")]
		public abstract void Disable();

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xBB26C0", Offset = "0xBB26C0", VA = "0xBB26C0", Slot = "6")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6000631")]
		public abstract void Update();

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xBB26C4", Offset = "0xBB26C4", VA = "0xBB26C4")]
		protected InGameTool()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public interface ITrack
	{
		[Token(Token = "0x6000633")]
		bool IsOnTrack(Vector2 pos);

		[Token(Token = "0x6000634")]
		Vector2 CorrectPosition(Vector2 pos);

		[Token(Token = "0x6000635")]
		Vector2 GetStartPosition(int gridIndex);
	}
	[Token(Token = "0x20000C9")]
	public class RaceController : MonoBehaviour
	{
		[Token(Token = "0x20001C6")]
		public enum RaceState
		{
			[Token(Token = "0x4000E7E")]
			PreStart,
			[Token(Token = "0x4000E7F")]
			Active,
			[Token(Token = "0x4000E80")]
			Finishing,
			[Token(Token = "0x4000E81")]
			Finished
		}

		[Token(Token = "0x20001C7")]
		public class RacerStatus
		{
			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TournamentRacer tournamentRacer;

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RacerBase racer;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float lastPos;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool beenMidTrack;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			private bool crossedStartLine;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int loopsCompleted;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int finalPosition;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int currentPosition;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float smoothedPosition;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float raceProgress;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float finalTime;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int mpFinalTime;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool disconnected;

			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xB4F024", Offset = "0xB4F024", VA = "0xB4F024")]
			public RacerStatus(RacerBase r)
			{
			}

			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xB4F714", Offset = "0xB4F714", VA = "0xB4F714")]
			public void PositionUpdate(float pos, out bool loopCompleted, out bool crossedLine)
			{
			}

			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xB50B48", Offset = "0xB50B48", VA = "0xB50B48")]
			public void ForceCompleteLap()
			{
			}
		}

		[Token(Token = "0x20001C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE0EC", Offset = "0x9BE0EC")]
		private sealed class <EnumerateRacerStatus>d__49 : IEnumerable<RacerStatus>, IEnumerable, IEnumerator<RacerStatus>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RacerStatus <>2__current;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaceController <>4__this;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<RacerBase, RacerStatus>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170000ED")]
			private RacerStatus System.Collections.Generic.IEnumerator<Coplanar.RaceController.RacerStatus>.Current
			{
				[Token(Token = "0x6000A8F")]
				[Address(RVA = "0xB5150C", Offset = "0xB5150C", VA = "0xB5150C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A91")]
				[Address(RVA = "0xB51578", Offset = "0xB51578", VA = "0xB51578", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xB4EC30", Offset = "0xB4EC30", VA = "0xB4EC30")]
			[DebuggerHidden]
			public <EnumerateRacerStatus>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0xB51324", Offset = "0xB51324", VA = "0xB51324", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xB51398", Offset = "0xB51398", VA = "0xB51398", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0xB51340", Offset = "0xB51340", VA = "0xB51340")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000A90")]
			[Address(RVA = "0xB51514", Offset = "0xB51514", VA = "0xB51514", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xB51580", Offset = "0xB51580", VA = "0xB51580", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<RacerStatus> System.Collections.Generic.IEnumerable<Coplanar.RaceController.RacerStatus>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xB51630", Offset = "0xB51630", VA = "0xB51630", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20001C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE0FC", Offset = "0x9BE0FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RacerStatus, float> <>9__50_0;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RacerStatus> <>9__67_0;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<int, bool> <>9__92_0;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<Color, bool> <>9__92_1;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<string, int> <>9__92_2;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action <>9__92_3;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action <>9__92_4;

			[Token(Token = "0x6000A95")]
			[Address(RVA = "0xB51294", Offset = "0xB51294", VA = "0xB51294")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A96")]
			[Address(RVA = "0xB5129C", Offset = "0xB5129C", VA = "0xB5129C")]
			internal float <EnumerateRacerStatusSorted>b__50_0(RacerStatus x)
			{
				return default(float);
			}

			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xB512B8", Offset = "0xB512B8", VA = "0xB512B8")]
			internal int <SortRacers>b__67_0(RacerStatus a, RacerStatus b)
			{
				return default(int);
			}

			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xB51310", Offset = "0xB51310", VA = "0xB51310")]
			internal void <.ctor>b__92_0(int <p0>, bool <p1>)
			{
			}

			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xB51314", Offset = "0xB51314", VA = "0xB51314")]
			internal void <.ctor>b__92_1(Color <p0>, bool <p1>)
			{
			}

			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xB51318", Offset = "0xB51318", VA = "0xB51318")]
			internal void <.ctor>b__92_2(string <p0>, int <p1>)
			{
			}

			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xB5131C", Offset = "0xB5131C", VA = "0xB5131C")]
			internal void <.ctor>b__92_3()
			{
			}

			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xB51320", Offset = "0xB51320", VA = "0xB51320")]
			internal void <.ctor>b__92_4()
			{
			}
		}

		[Token(Token = "0x20001CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE10C", Offset = "0x9BE10C")]
		private sealed class <EnumerateRacerStatusSorted>d__50 : IEnumerable<RacerStatus>, IEnumerable, IEnumerator<RacerStatus>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RacerStatus <>2__current;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaceController <>4__this;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<RacerBase, RacerStatus>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170000EF")]
			private RacerStatus System.Collections.Generic.IEnumerator<Coplanar.RaceController.RacerStatus>.Current
			{
				[Token(Token = "0x6000AA1")]
				[Address(RVA = "0xB51930", Offset = "0xB51930", VA = "0xB51930", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AA3")]
				[Address(RVA = "0xB5199C", Offset = "0xB5199C", VA = "0xB5199C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xB4EC68", Offset = "0xB4EC68", VA = "0xB4EC68")]
			[DebuggerHidden]
			public <EnumerateRacerStatusSorted>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0xB51634", Offset = "0xB51634", VA = "0xB51634", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xB516A8", Offset = "0xB516A8", VA = "0xB516A8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0xB51650", Offset = "0xB51650", VA = "0xB51650")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0xB51938", Offset = "0xB51938", VA = "0xB51938", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0xB519A4", Offset = "0xB519A4", VA = "0xB519A4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<RacerStatus> System.Collections.Generic.IEnumerable<Coplanar.RaceController.RacerStatus>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xB51A54", Offset = "0xB51A54", VA = "0xB51A54", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE11C", Offset = "0x9BE11C")]
		private sealed class <EnumerateRacers>d__51 : IEnumerable<RacerBase>, IEnumerable, IEnumerator<RacerBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RacerBase <>2__current;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaceController <>4__this;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<RacerBase, RacerStatus>.KeyCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170000F1")]
			private RacerBase System.Collections.Generic.IEnumerator<Coplanar.RacerBase>.Current
			{
				[Token(Token = "0x6000AAA")]
				[Address(RVA = "0xB51C40", Offset = "0xB51C40", VA = "0xB51C40", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AAC")]
				[Address(RVA = "0xB51CAC", Offset = "0xB51CAC", VA = "0xB51CAC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xB4ED24", Offset = "0xB4ED24", VA = "0xB4ED24")]
			[DebuggerHidden]
			public <EnumerateRacers>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0xB51A58", Offset = "0xB51A58", VA = "0xB51A58", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xB51ACC", Offset = "0xB51ACC", VA = "0xB51ACC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xB51A74", Offset = "0xB51A74", VA = "0xB51A74")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0xB51C48", Offset = "0xB51C48", VA = "0xB51C48", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0xB51CB4", Offset = "0xB51CB4", VA = "0xB51CB4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<RacerBase> System.Collections.Generic.IEnumerable<Coplanar.RacerBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0xB51D64", Offset = "0xB51D64", VA = "0xB51D64", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE12C", Offset = "0x9BE12C")]
		private sealed class <EnumerateRemoteRacers>d__52 : IEnumerable<RemoteRacer>, IEnumerable, IEnumerator<RemoteRacer>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RemoteRacer <>2__current;

			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaceController <>4__this;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<RacerBase, RacerStatus>.KeyCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170000F3")]
			private RemoteRacer System.Collections.Generic.IEnumerator<DefaultNamespace.RemoteRacer>.Current
			{
				[Token(Token = "0x6000AB3")]
				[Address(RVA = "0xB51FD4", Offset = "0xB51FD4", VA = "0xB51FD4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AB5")]
				[Address(RVA = "0xB52040", Offset = "0xB52040", VA = "0xB52040", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xB4EDE0", Offset = "0xB4EDE0", VA = "0xB4EDE0")]
			[DebuggerHidden]
			public <EnumerateRemoteRacers>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0xB51D68", Offset = "0xB51D68", VA = "0xB51D68", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xB51DDC", Offset = "0xB51DDC", VA = "0xB51DDC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0xB51D84", Offset = "0xB51D84", VA = "0xB51D84")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0xB51FDC", Offset = "0xB51FDC", VA = "0xB51FDC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xB52048", Offset = "0xB52048", VA = "0xB52048", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<RemoteRacer> System.Collections.Generic.IEnumerable<DefaultNamespace.RemoteRacer>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0xB520F8", Offset = "0xB520F8", VA = "0xB520F8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[NonSerialized]
		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplineTrack track;

		[NonSerialized]
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int mpStartTime;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numLaps;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SimpleTrack.PickupType singlePickUpType;

		[NonSerialized]
		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool pickupOnCrossedLine;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float timeLimit;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float raceTime;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float countdownRemaining;

		[NonSerialized]
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool canStart;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool paused;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int numRacersFinished;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<int, bool> OnPlayerCompletedLap;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<Color, bool> OnStartLightUpdate;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<string, int> OnStartCountdown;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action OnShowCheckered;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action OnPlayerCrossedStartLine;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public RaceState raceState;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float realRaceClock;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool clearedGoSign;

		[NonSerialized]
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool aborted;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Dictionary<RacerBase, RacerStatus> racerStatus;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<RacerBase> racerList;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RacerStatus[] lastRaceResults;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RacerStatus[] sortedStatuses;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public bool ringsEnabled;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[HideInInspector]
		public bool altRings;

		[NonSerialized]
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool pauseCountdown;

		[NonSerialized]
		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool pausable;

		[NonSerialized]
		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int startPosOffset;

		[Token(Token = "0x400077B")]
		public const string resultsHighlightColor = "#FBB03BFF";

		[Token(Token = "0x17000057")]
		public int NumLaps
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xB4E7C8", Offset = "0xB4E7C8", VA = "0xB4E7C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000637")]
			[Address(RVA = "0xB4E8AC", Offset = "0xB4E8AC", VA = "0xB4E8AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public float TimeTillStart
		{
			[Token(Token = "0x6000638")]
			[Address(RVA = "0xB4E8B4", Offset = "0xB4E8B4", VA = "0xB4E8B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000059")]
		public bool Paused
		{
			[Token(Token = "0x6000639")]
			[Address(RVA = "0xB4E8BC", Offset = "0xB4E8BC", VA = "0xB4E8BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005A")]
		public bool FinishedOrFinishing
		{
			[Token(Token = "0x600063A")]
			[Address(RVA = "0xB4E8C4", Offset = "0xB4E8C4", VA = "0xB4E8C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005B")]
		public bool RacersCanAct
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0xB4E8D8", Offset = "0xB4E8D8", VA = "0xB4E8D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005C")]
		public float RaceTime
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0xB4E8F8", Offset = "0xB4E8F8", VA = "0xB4E8F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005D")]
		public float RealRaceClock
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0xB4E900", Offset = "0xB4E900", VA = "0xB4E900")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005E")]
		public float RemainingTime
		{
			[Token(Token = "0x600063E")]
			[Address(RVA = "0xB4E92C", Offset = "0xB4E92C", VA = "0xB4E92C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005F")]
		public int RacerCount
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0xB4E938", Offset = "0xB4E938", VA = "0xB4E938")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xB4E990", Offset = "0xB4E990", VA = "0xB4E990")]
		public int GetPosition(RacerBase racer)
		{
			return default(int);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xB4EA2C", Offset = "0xB4EA2C", VA = "0xB4EA2C")]
		public float GetSmoothedPos(RacerBase racer)
		{
			return default(float);
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xB49954", Offset = "0xB49954", VA = "0xB49954")]
		public int GetFinalPosition(RacerBase racer)
		{
			return default(int);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xB4EAC4", Offset = "0xB4EAC4", VA = "0xB4EAC4")]
		public float GetRaceProgress(RacerBase racer)
		{
			return default(float);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xB4EB9C", Offset = "0xB4EB9C", VA = "0xB4EB9C")]
		public float GetRaceDistanceCovered(RacerBase racer)
		{
			return default(float);
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xB4EBE0", Offset = "0xB4EBE0", VA = "0xB4EBE0")]
		public int GetLoopNum(RacerBase racer)
		{
			return default(int);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xB4E73C", Offset = "0xB4E73C", VA = "0xB4E73C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C148C", Offset = "0x9C148C")]
		public IEnumerable<RacerStatus> EnumerateRacerStatus()
		{
			return null;
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xB4DC68", Offset = "0xB4DC68", VA = "0xB4DC68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C14F0", Offset = "0x9C14F0")]
		public IEnumerable<RacerStatus> EnumerateRacerStatusSorted()
		{
			return null;
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xB4ECA0", Offset = "0xB4ECA0", VA = "0xB4ECA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1554", Offset = "0x9C1554")]
		public IEnumerable<RacerBase> EnumerateRacers()
		{
			return null;
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xB4ED5C", Offset = "0xB4ED5C", VA = "0xB4ED5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C15B8", Offset = "0x9C15B8")]
		public IEnumerable<RemoteRacer> EnumerateRemoteRacers()
		{
			return null;
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xB47920", Offset = "0xB47920", VA = "0xB47920")]
		public void Init()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xB4EE80", Offset = "0xB4EE80", VA = "0xB4EE80")]
		public void SetCountdownRemaining(float t)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xB4EE88", Offset = "0xB4EE88", VA = "0xB4EE88")]
		public void CountdownFinished()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xB4EF08", Offset = "0xB4EF08", VA = "0xB4EF08")]
		public void RegisterRacer(RacerBase racer)
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xB4F0EC", Offset = "0xB4F0EC", VA = "0xB4F0EC")]
		public BikeSim GetBikeSim(int n)
		{
			return null;
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xB4F1A8", Offset = "0xB4F1A8", VA = "0xB4F1A8")]
		public void UpdateRacer(RacerBase racer)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xB4F22C", Offset = "0xB4F22C", VA = "0xB4F22C")]
		private void PositionUpdate(RacerBase racer, float position)
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xB4F84C", Offset = "0xB4F84C", VA = "0xB4F84C")]
		private void SortRacers()
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xB4F7CC", Offset = "0xB4F7CC", VA = "0xB4F7CC")]
		private void RecalculatePlaces()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xB4F93C", Offset = "0xB4F93C", VA = "0xB4F93C")]
		public void SetFinishing()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xB4F9D4", Offset = "0xB4F9D4", VA = "0xB4F9D4")]
		public void Finish(bool cancelRace = false, bool reprise = true)
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xB4FC14", Offset = "0xB4FC14", VA = "0xB4FC14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xB4A284", Offset = "0xB4A284", VA = "0xB4A284")]
		public void BeginStartSequence()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xB4EE8C", Offset = "0xB4EE8C", VA = "0xB4EE8C")]
		public void StartRace()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xB4EE18", Offset = "0xB4EE18", VA = "0xB4EE18")]
		public void ResetRace()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xB4FD5C", Offset = "0xB4FD5C", VA = "0xB4FD5C")]
		public static string TMPFormatResultsHeading()
		{
			return null;
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xB5009C", Offset = "0xB5009C", VA = "0xB5009C")]
		public static string TMPFormatResultsLine(string playerName, bool isLocalPlayer, string position, float time, float deltaTime, [Optional] string message, [Optional] string points, [Optional] string races)
		{
			return null;
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xB49968", Offset = "0xB49968", VA = "0xB49968")]
		public string GetResultsString()
		{
			return null;
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xB50474", Offset = "0xB50474", VA = "0xB50474")]
		public void SetPaused(bool b)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xB4FD4C", Offset = "0xB4FD4C", VA = "0xB4FD4C")]
		public void TogglePause()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xB50480", Offset = "0xB50480", VA = "0xB50480")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C161C", Offset = "0x9C161C")]
		public void ShowCheckeredFlag()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xB50278", Offset = "0xB50278", VA = "0xB50278")]
		public static string FormatMinutesSecondsMonoSpace(float seconds, int decimalPlaces = 2, bool alwaysIncludeMinutes = true)
		{
			return null;
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xB5049C", Offset = "0xB5049C", VA = "0xB5049C")]
		public static string FormatMinutesSeconds(float seconds, int decimalPlaces = 2, bool alwaysIncludeMinutes = true)
		{
			return null;
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xB505F8", Offset = "0xB505F8", VA = "0xB505F8")]
		public static string FormatMinutesSecondsForSpeech(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xB5070C", Offset = "0xB5070C", VA = "0xB5070C")]
		public RacerBase GetTarget(BikeSim src, float maxAngle, float maxDistance)
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xB50770", Offset = "0xB50770", VA = "0xB50770")]
		public RacerBase GetTarget(BikeSim src, float maxAngle, float maxDistance, Vector2 srcPos)
		{
			return null;
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xB50AC4", Offset = "0xB50AC4", VA = "0xB50AC4")]
		public void ForceCompleteLap(BikeSim bike)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xB50B60", Offset = "0xB50B60", VA = "0xB50B60")]
		public void SaveMPFinishTime(int racerIndex, int finishTime, out string name)
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xB50D18", Offset = "0xB50D18", VA = "0xB50D18")]
		public void MarkRacerDisconnected(int racerIndex, out string name)
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xB50EB0", Offset = "0xB50EB0", VA = "0xB50EB0")]
		public void SaveMPStartTime(int startTime)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xB50EC4", Offset = "0xB50EC4", VA = "0xB50EC4")]
		public bool MPStartTimeSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xB50ED4", Offset = "0xB50ED4", VA = "0xB50ED4")]
		public RaceController()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public abstract class RacerBase : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE13C", Offset = "0x9BE13C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<RacerBase, float> <>9__19_0;

			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xB597E0", Offset = "0xB597E0", VA = "0xB597E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0xB597E8", Offset = "0xB597E8", VA = "0xB597E8")]
			internal void <.ctor>b__19_0(RacerBase a, float b)
			{
			}
		}

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TournamentRacer tournamentRacer;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<RacerBase, float> NotifyTrackPosition;

		[Token(Token = "0x17000060")]
		public int RacerIndex
		{
			[Token(Token = "0x600066A")]
			[Address(RVA = "0xB50CF8", Offset = "0xB50CF8", VA = "0xB50CF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xB5960C", Offset = "0xB5960C", VA = "0xB5960C", Slot = "4")]
		public virtual int StartIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600066C")]
		public abstract Vector2 GetPosition();

		[Token(Token = "0x600066D")]
		public abstract float GetBank();

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xB59614", Offset = "0xB59614", VA = "0xB59614", Slot = "7")]
		public virtual void GetPositionsForTrail(Transform emitter, out Vector3 pos3D, out Vector2 pos2D)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xB59680", Offset = "0xB59680", VA = "0xB59680", Slot = "8")]
		public virtual bool GetImmune()
		{
			return default(bool);
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xB4F06C", Offset = "0xB4F06C", VA = "0xB4F06C")]
		public void RegisterForPositionUpdates(Action<RacerBase, float> NotifyTrackPosition)
		{
		}

		[Token(Token = "0x6000671")]
		public abstract bool IsLocalPlayer();

		[Token(Token = "0x6000672")]
		public abstract void SetSpeedFactor(float factor);

		[Token(Token = "0x6000673")]
		public abstract float GetSpeedFactor();

		[Token(Token = "0x6000674")]
		public abstract float GetSpeed();

		[Token(Token = "0x6000675")]
		public abstract Vector2 GetVelocity();

		[Token(Token = "0x6000676")]
		public abstract void RaceInit(RaceController raceController);

		[Token(Token = "0x6000677")]
		public abstract void GotoStart();

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xB59688", Offset = "0xB59688", VA = "0xB59688", Slot = "16")]
		public virtual void SetTrailIndex(int trail)
		{
		}

		[Token(Token = "0x6000679")]
		public abstract Vector3 GetTrailWiggleDir();

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xB5968C", Offset = "0xB5968C", VA = "0xB5968C")]
		protected RacerBase()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public abstract class SimpleTrack : ScriptableObject
	{
		[Token(Token = "0x20001CE")]
		protected class BarrierBounds
		{
			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BoundsInt bounds;

			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xB9FE98", Offset = "0xB9FE98", VA = "0xB9FE98")]
			public bool Contains(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0xB9C890", Offset = "0xB9C890", VA = "0xB9C890")]
			public bool Contains(Vector2 pos)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0xB9DD28", Offset = "0xB9DD28", VA = "0xB9DD28")]
			public BarrierBounds()
			{
			}
		}

		[Token(Token = "0x20001CF")]
		private struct MineState
		{
			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool removed;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int lineIndex;

			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public object obj;
		}

		[Token(Token = "0x20001D0")]
		public delegate void PositionUpdateCallback(bool onSurface, Vector2 position);

		[Token(Token = "0x20001D1")]
		public enum PickupType
		{
			[Token(Token = "0x4000EB2")]
			None,
			[Token(Token = "0x4000EB3")]
			SpeedBoost,
			[Token(Token = "0x4000EB4")]
			Capacitor,
			[Token(Token = "0x4000EB5")]
			PowerPack,
			[Token(Token = "0x4000EB6")]
			Coin,
			[Token(Token = "0x4000EB7")]
			ChargeDrain,
			[Token(Token = "0x4000EB8")]
			Magnet,
			[Token(Token = "0x4000EB9")]
			IceVirus,
			[Token(Token = "0x4000EBA")]
			EMPDrone,
			[Token(Token = "0x4000EBB")]
			Teleport,
			[Token(Token = "0x4000EBC")]
			MiniBoost,
			[Token(Token = "0x4000EBD")]
			Mine
		}

		[Serializable]
		[Token(Token = "0x20001D2")]
		public struct RespawnPoint
		{
			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 pos;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float heading;
		}

		[Token(Token = "0x20001D3")]
		[Flags]
		public enum TrackPixel
		{
			[Token(Token = "0x4000EC1")]
			Void = 0,
			[Token(Token = "0x4000EC2")]
			Powered = 1,
			[Token(Token = "0x4000EC3")]
			Illuminated = 2,
			[Token(Token = "0x4000EC4")]
			Pickup = 4,
			[Token(Token = "0x4000EC5")]
			Finishline = 8
		}

		[Token(Token = "0x20001D4")]
		protected delegate int RegisterTrackItemFunc(TrackItem trackItem);

		[Token(Token = "0x20001D5")]
		private class BlobData
		{
			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int numPixels;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector2 totalPos;

			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xB9F4F0", Offset = "0xB9F4F0", VA = "0xB9F4F0")]
			public BlobData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE15C", Offset = "0x9BE15C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__64_0;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Vector2> <>9__103_0;

			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0xB9FDEC", Offset = "0xB9FDEC", VA = "0xB9FDEC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xB9FDF4", Offset = "0xB9FDF4", VA = "0xB9FDF4")]
			internal int <Init>b__64_0(Vector2 x, Vector2 y)
			{
				return default(int);
			}

			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0xB9FE24", Offset = "0xB9FE24", VA = "0xB9FE24")]
			internal int <GetPositionsFromItemsTexture>b__103_0(Vector2 a, Vector2 b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20001D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE16C", Offset = "0x9BE16C")]
		private sealed class <EnumMatchingPixelsPosByRow>d__92 : IEnumerable<Vector2>, IEnumerable, IEnumerator<Vector2>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector2 <>2__current;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleTrack <>4__this;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color color;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color <>3__color;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <y>5__2;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <x>5__3;

			[Token(Token = "0x170000F5")]
			private Vector2 System.Collections.Generic.IEnumerator<UnityEngine.Vector2>.Current
			{
				[Token(Token = "0x6000ACE")]
				[Address(RVA = "0xBA0038", Offset = "0xBA0038", VA = "0xBA0038", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AD0")]
				[Address(RVA = "0xBA00A4", Offset = "0xBA00A4", VA = "0xBA00A4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xB9D994", Offset = "0xB9D994", VA = "0xB9D994")]
			[DebuggerHidden]
			public <EnumMatchingPixelsPosByRow>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xB9FF2C", Offset = "0xB9FF2C", VA = "0xB9FF2C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xB9FF30", Offset = "0xB9FF30", VA = "0xB9FF30", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xBA0040", Offset = "0xBA0040", VA = "0xBA0040", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xBA0108", Offset = "0xBA0108", VA = "0xBA0108", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector2> System.Collections.Generic.IEnumerable<UnityEngine.Vector2>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0xBA01D0", Offset = "0xBA01D0", VA = "0xBA01D0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE17C", Offset = "0x9BE17C")]
		private sealed class <>c__DisplayClass95_0
		{
			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x_cell;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimpleTrack <>4__this;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int y_cell;

			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xB9DE00", Offset = "0xB9DE00", VA = "0xB9DE00")]
			public <>c__DisplayClass95_0()
			{
			}

			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0xB9FE54", Offset = "0xB9FE54", VA = "0xB9FE54")]
			internal bool <IsInsideBarrierList>b__0(BarrierBounds barrier)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float runningStartHeading;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RecordingRunner recordingRunner;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D trackTexture;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D itemsTexture;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D mapTexture;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF440", Offset = "0x9BF440")]
		public bool fixedWidth;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int fixedWidthValue;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public iVector2 cellUnitDimensions;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public iVector2 trackCellDimensions;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int trackMeshHorizDivisions;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected LinearTable trackItemTable;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected LinearTable barrierTable;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected List<BarrierBounds> barriersList;

		[NonSerialized]
		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<TrackItem> itemsToSpawn;

		[NonSerialized]
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector2> podPositions;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float posOffset;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Vector2> ringPositions;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Vector2> ringPositionsAlt;

		[NonSerialized]
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int ringSet;

		[NonSerialized]
		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int ringCount;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float pixelSize;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int trackRepeat;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2[] startPos;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector2[] lightPositions;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector2[] startLightPositions;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 position;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Dictionary<int, MineState> mineState;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public PositionUpdateCallback positionCallback;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color StartPosColor;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Color PodColor;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Color RingColor;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color BarrierColor;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Color BarrierSoundColor;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Color EnduringBoostColor;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Color PickUpColor;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public RespawnPoint[] respawnPositions;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Color defaultOnTrackColor;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static float[] loopTrackColors;

		[Token(Token = "0x17000061")]
		public string Title
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0xB9B530", Offset = "0xB9B530", VA = "0xB9B530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		public List<Vector2> RingPositions
		{
			[Token(Token = "0x600067C")]
			[Address(RVA = "0xB9B648", Offset = "0xB9B648", VA = "0xB9B648")]
			get
			{
				return null;
			}
			[Token(Token = "0x600067D")]
			[Address(RVA = "0xB9B664", Offset = "0xB9B664", VA = "0xB9B664")]
			set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public iVector2 TrackUnitDimensions
		{
			[Token(Token = "0x600067E")]
			[Address(RVA = "0xB9B680", Offset = "0xB9B680", VA = "0xB9B680")]
			get
			{
				return default(iVector2);
			}
		}

		[Token(Token = "0x17000064")]
		public Vector2 SurfaceSize
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xB9B690", Offset = "0xB9B690", VA = "0xB9B690")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000065")]
		public virtual int NumParts
		{
			[Token(Token = "0x6000680")]
			[Address(RVA = "0xB9B730", Offset = "0xB9B730", VA = "0xB9B730", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000066")]
		public float Length
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0xB97A68", Offset = "0xB97A68", VA = "0xB97A68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000067")]
		public float Width
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0xB9BB04", Offset = "0xB9BB04", VA = "0xB9BB04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xB9B738", Offset = "0xB9B738", VA = "0xB9B738", Slot = "5")]
		public virtual void SetupScene()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xB9B73C", Offset = "0xB9B73C", VA = "0xB9B73C", Slot = "6")]
		public virtual void Cleanup()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xB9B740", Offset = "0xB9B740", VA = "0xB9B740", Slot = "7")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xB9B7A4", Offset = "0xB9B7A4", VA = "0xB9B7A4", Slot = "8")]
		public virtual void BuildTrack()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xB9B808", Offset = "0xB9B808", VA = "0xB9B808")]
		public static string PickupName(PickupType type)
		{
			return null;
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xB9BB38", Offset = "0xB9BB38", VA = "0xB9BB38")]
		public Vector2 CorrectPosition(Vector2 pos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xB9BB94", Offset = "0xB9BB94", VA = "0xB9BB94")]
		protected void ResetItemTables()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xB9BCD8", Offset = "0xB9BCD8", VA = "0xB9BCD8", Slot = "9")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xB9C114", Offset = "0xB9C114", VA = "0xB9C114")]
		public void SetAllItemsUncollected()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xB9C404", Offset = "0xB9C404", VA = "0xB9C404")]
		public TrackItem GetTrackItem(Vector2 pos)
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xB9C6C8", Offset = "0xB9C6C8", VA = "0xB9C6C8")]
		public bool IsInsideBarrier_FindWhereWholeWidth(LinearTable table, float center_y, float range, Vector2 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xB9C894", Offset = "0xB9C894", VA = "0xB9C894")]
		public bool IsInsideBarrier(Vector2 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xB9C93C", Offset = "0xB9C93C", VA = "0xB9C93C")]
		public void RemoveTrackItem(TrackItem trackItem)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xB9CA04", Offset = "0xB9CA04", VA = "0xB9CA04")]
		public bool IsOnTrack(Vector2 pos, int loopNum = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xB9CB38", Offset = "0xB9CB38", VA = "0xB9CB38")]
		public bool IsOnTrack_Cell(Vector2 cell, int loopNum = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xB9CC68", Offset = "0xB9CC68", VA = "0xB9CC68")]
		public Color GetColor_Cell(Vector2 pos)
		{
			return default(Color);
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xB9CC8C", Offset = "0xB9CC8C", VA = "0xB9CC8C")]
		public Vector2 GetStartPosition(int gridIndex = 0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xB9CD5C", Offset = "0xB9CD5C", VA = "0xB9CD5C")]
		public Vector2 GetRandomStartPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xB9CDD4", Offset = "0xB9CDD4", VA = "0xB9CDD4")]
		public bool ItemPassed(Vector2 pos, Vector2 from, Vector2 to)
		{
			return default(bool);
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xB9CA1C", Offset = "0xB9CA1C", VA = "0xB9CA1C")]
		public TrackPixel DecodeTrack(Vector2 pos, int loopNum = -1)
		{
			return default(TrackPixel);
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xB9CB50", Offset = "0xB9CB50", VA = "0xB9CB50")]
		public TrackPixel DecodeTrack_Cell(Vector2 pos, int loopNum = -1)
		{
			return default(TrackPixel);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xB9D2C0", Offset = "0xB9D2C0", VA = "0xB9D2C0")]
		public void ShiftPixelCoords(ref int x, ref int y, int height, int stripWidth)
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xB9D390", Offset = "0xB9D390", VA = "0xB9D390")]
		private Color GetWrappedAndShiftedPixel(Texture2D tex, int x, int y, int stripWidth)
		{
			return default(Color);
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xB9D428", Offset = "0xB9D428", VA = "0xB9D428")]
		protected void SetWrappedAndShiftedPixel(Texture2D tex, int x, int y, int stripWidth, Color col)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xB9D4C8", Offset = "0xB9D4C8", VA = "0xB9D4C8")]
		public Vector2 PixelToCellPos(float x, float y)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xB9CFE8", Offset = "0xB9CFE8", VA = "0xB9CFE8")]
		public Color GetMapPixel(int x, int y)
		{
			return default(Color);
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xB9D554", Offset = "0xB9D554", VA = "0xB9D554")]
		private void SetMapPixel(int x, int y, Color color, bool items)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xB9D590", Offset = "0xB9D590", VA = "0xB9D590")]
		public void SetCellAtPlanePos(Vector2 pos, Color color, int brushSize, bool items)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xB9D690", Offset = "0xB9D690", VA = "0xB9D690")]
		protected Color GetItemPixel(int x, int y)
		{
			return default(Color);
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xB9D008", Offset = "0xB9D008", VA = "0xB9D008")]
		public TrackPixel DecodeTrack(Color col, int loopNum = -1)
		{
			return default(TrackPixel);
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xB9D6B0", Offset = "0xB9D6B0", VA = "0xB9D6B0")]
		private static bool ApproxEqual(Color a, Color b)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xB9D7B4", Offset = "0xB9D7B4", VA = "0xB9D7B4")]
		public RespawnPoint GetNearestRespawn(Vector2 position)
		{
			return default(RespawnPoint);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xB9D8E8", Offset = "0xB9D8E8", VA = "0xB9D8E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1654", Offset = "0x9C1654")]
		public IEnumerable<Vector2> EnumMatchingPixelsPosByRow(Color color)
		{
			return null;
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xB9D9CC", Offset = "0xB9D9CC", VA = "0xB9D9CC")]
		protected bool IsBarrier(int i, int j)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xB9DAF8", Offset = "0xB9DAF8", VA = "0xB9DAF8")]
		private void AddBarrierAtPixel(int x, int y)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xB9DD30", Offset = "0xB9DD30", VA = "0xB9DD30")]
		private bool IsInsideBarrierList(int x_cell, int y_cell)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xB9BE74", Offset = "0xB9BE74", VA = "0xB9BE74")]
		protected void GetBarriersFromTexture()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xB9BF3C", Offset = "0xB9BF3C", VA = "0xB9BF3C")]
		protected void EnumerateTrackItems(bool ringsEnabled, bool pickupsEnabled, bool podsEnabled, RegisterTrackItemFunc callbackFn, bool altRings)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xB9DE08", Offset = "0xB9DE08", VA = "0xB9DE08")]
		protected void GetTrackItemsFromTexture_internal(bool ringsEnabled, bool pickupsEnabled, bool podsEnabled, RegisterTrackItemFunc registerFn)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xB9E754", Offset = "0xB9E754", VA = "0xB9E754")]
		public bool AddMine(Vector2 pos, int mineID)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xB9EBB4", Offset = "0xB9EBB4", VA = "0xB9EBB4")]
		public Vector2 RemoveMine(int mineID)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xB9ED78", Offset = "0xB9ED78", VA = "0xB9ED78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C16B8", Offset = "0x9C16B8")]
		public void SetStartPositions()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xB9EDF8", Offset = "0xB9EDF8", VA = "0xB9EDF8")]
		private Vector2[] GetPositionsFromItemsTexture(Color color, bool clump = true)
		{
			return null;
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xB9F444", Offset = "0xB9F444", VA = "0xB9F444")]
		private int FindNeighbourBlob(int i, int j, int[,] blobIndices, int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xB9EF98", Offset = "0xB9EF98", VA = "0xB9EF98")]
		private Vector2[] GetPositionsFromPixels(Color boostColor, Texture2D srcTexture, bool clump = true)
		{
			return null;
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xB9F56C", Offset = "0xB9F56C", VA = "0xB9F56C")]
		public Vector3 TransformPoint(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xB9F614", Offset = "0xB9F614", VA = "0xB9F614")]
		public Vector3 InverseTransformPoint(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xB9F6BC", Offset = "0xB9F6BC", VA = "0xB9F6BC")]
		public Vector3 TransformDirection(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B3")]
		public abstract Vector3 PlanePosToLocalPos(Vector2 planePos, float height = 0f);

		[Token(Token = "0x60006B4")]
		public abstract Quaternion PlanePosToRotation(Vector2 planePos);

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xB9F6C0", Offset = "0xB9F6C0", VA = "0xB9F6C0")]
		public Vector2 PlanePosToCellPos(Vector2 planePos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xB9F778", Offset = "0xB9F778", VA = "0xB9F778")]
		public Vector2 CellPosToPlanePos(Vector2 cellPos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xB9F830", Offset = "0xB9F830", VA = "0xB9F830", Slot = "12")]
		public virtual Vector3 PlaneVelocityToLocalVelocity(Vector2 currentPos, Vector2 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xB9F894", Offset = "0xB9F894", VA = "0xB9F894")]
		public int AddItemToSpawnList(TrackItem trackItem)
		{
			return default(int);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xB9E9D0", Offset = "0xB9E9D0", VA = "0xB9E9D0")]
		public int RegisterTrackItem(TrackItem trackItem, bool allowFail, int priority)
		{
			return default(int);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xB9F904", Offset = "0xB9F904", VA = "0xB9F904")]
		public int RegisterTrackItem(TrackItem trackItem)
		{
			return default(int);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xB9F910", Offset = "0xB9F910", VA = "0xB9F910")]
		public Vector2 GetRespawnPlanePos(int lookAheadCells, int loopNum, Vector2 lastPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xB9FA6C", Offset = "0xB9FA6C", VA = "0xB9FA6C")]
		protected SimpleTrack()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xB9FD7C", Offset = "0xB9FD7C", VA = "0xB9FD7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C16F0", Offset = "0x9C16F0")]
		private Vector2 <GetPositionsFromItemsTexture>b__103_1(Vector2 pos)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BDA44", Offset = "0x9BDA44")]
	public class SplineTrack : SimpleTrack
	{
		[Token(Token = "0x20001D9")]
		public enum Comfort
		{
			[Token(Token = "0x4000ED7")]
			COMFORTABLE,
			[Token(Token = "0x4000ED8")]
			MODERATE,
			[Token(Token = "0x4000ED9")]
			INTENSE
		}

		[Serializable]
		[Token(Token = "0x20001DA")]
		public class TrackChunkLists
		{
			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<RaceObjectManager.TrackItemChunk> trackItemChunks;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<RaceObjectManager.TrackItemChunk> trackItemChunks_TrackLight;

			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0xBA2C10", Offset = "0xBA2C10", VA = "0xBA2C10")]
			public TrackChunkLists()
			{
			}
		}

		[Token(Token = "0x20001DB")]
		public enum UVMode
		{
			[Token(Token = "0x4000EDD")]
			TrackMap,
			[Token(Token = "0x4000EDE")]
			Square,
			[Token(Token = "0x4000EDF")]
			Undefined
		}

		[Token(Token = "0x20001DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE18C", Offset = "0x9BE18C")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<TrackItem> itemsToSpawn;

			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xBA2020", Offset = "0xBA2020", VA = "0xBA2020")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xBA2BA0", Offset = "0xBA2BA0", VA = "0xBA2BA0")]
			internal int <SpawnLiveObjects>b__0(TrackItem item)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20001DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE19C", Offset = "0x9BE19C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__51_1;

			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xBA2B94", Offset = "0xBA2B94", VA = "0xBA2B94")]
			public <>c()
			{
			}

			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0xBA2B9C", Offset = "0xBA2B9C", VA = "0xBA2B9C")]
			internal void <SpawnLiveObjects>b__51_1(GameObject go)
			{
			}
		}

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Comfort comfort;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF478", Offset = "0x9BF478")]
		public float unitsPerChunk;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF4B0", Offset = "0x9BF4B0")]
		public Material raceMaterial;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Mesh surfaceMesh;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Mesh wireMesh;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Vector3 hologramMeshEulerRotation;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float wallHeight;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float edgeStripWidth;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float trimOverlapScale;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int halfInverseWidth;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Vector3 projectionPoint;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool mirrorUvs;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public bool showBoundaryRails;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TrackChunkLists trackChunkLists;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public TrackChunkLists trackChunkLists_RingMode;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public TrackChunkLists trackChunkLists_AltRingMode;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public UVMode uvMode;

		[Token(Token = "0x40007B6")]
		private const string AnchorPrefix = "Anchor_";

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private BSplineTrackEditor splineTrackShape;

		[NonSerialized]
		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public BSplineTrackEditor splineTrackShapeOverride;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private List<Vector3> NonConvergentTrackPoints;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform coinParent;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float[][] boundaryWidths;

		[Token(Token = "0x17000068")]
		public BSplineTrackEditor SplineTrackShape
		{
			[Token(Token = "0x60006BF")]
			[Address(RVA = "0xBA0E94", Offset = "0xBA0E94", VA = "0xBA0E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		[ShowInInspector]
		public iVector2 TrackCellDimensions
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0xBA19AC", Offset = "0xBA19AC", VA = "0xBA19AC")]
			get
			{
				return default(iVector2);
			}
		}

		[Token(Token = "0x1700006A")]
		[ShowInInspector]
		public iVector2 CellUnitDimensions
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0xBA19B4", Offset = "0xBA19B4", VA = "0xBA19B4")]
			get
			{
				return default(iVector2);
			}
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xBA0F20", Offset = "0xBA0F20", VA = "0xBA0F20")]
		public float XPosToSplineOffset(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xBA0F5C", Offset = "0xBA0F5C", VA = "0xBA0F5C")]
		public float SplineOffsetToXPos(float sx)
		{
			return default(float);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xBA0F98", Offset = "0xBA0F98", VA = "0xBA0F98")]
		public Vector3 TrackPointAndPlaneXPosToLocalPos(BSplineTrackEditor.TrackPoint tp, float x, float height)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xBA10D4", Offset = "0xBA10D4", VA = "0xBA10D4")]
		public BSplineTrackEditor.TrackPoint PlanePosToTrackPoint(Vector2 planePos)
		{
			return default(BSplineTrackEditor.TrackPoint);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xB9A30C", Offset = "0xB9A30C", VA = "0xB9A30C")]
		public Trans GetWorldTransFromPlanePos(Vector2 planePos, Quaternion localRotation, Trans t)
		{
			return null;
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xBA1144", Offset = "0xBA1144", VA = "0xBA1144")]
		public Trans GetWorldTransFromPlanePos(BSplineTrackEditor.TrackPoint tp, float x, Quaternion localRotation, Trans t)
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xBA1318", Offset = "0xBA1318", VA = "0xBA1318")]
		public Trans GetWorldTransFromPlanePos(Vector2 planePos, Quaternion localRotation, out Quaternion tpRotation, Trans t)
		{
			return null;
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xBA13C0", Offset = "0xBA13C0", VA = "0xBA13C0")]
		public Trans GetWorldTransFromPlanePos(BSplineTrackEditor.TrackPoint tp, float x, Quaternion localRotation, out Quaternion tpRotation, Trans t)
		{
			return null;
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xBA15A8", Offset = "0xBA15A8", VA = "0xBA15A8", Slot = "10")]
		public override Vector3 PlanePosToLocalPos(Vector2 planePos, float height = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xBA1610", Offset = "0xBA1610", VA = "0xBA1610", Slot = "11")]
		public override Quaternion PlanePosToRotation(Vector2 planePos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xB9A524", Offset = "0xB9A524", VA = "0xB9A524")]
		public Vector2 LocalPosToPlanePos(Vector3 localPos, Vector2 currentPlaneEstimate, out BSplineTrackEditor.TrackPoint trackPoint)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xBA1668", Offset = "0xBA1668", VA = "0xBA1668")]
		public Vector3 PlaneVelocityToLocalVelocity(BSplineTrackEditor.TrackPoint tp, Vector2 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xBA1748", Offset = "0xBA1748", VA = "0xBA1748")]
		public Vector2 ApplyPositionDelta(Vector2 currentPos, Vector2 delta, ref float heading, ref BSplineTrackEditor.TrackPoint tp)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xBA19BC", Offset = "0xBA19BC", VA = "0xBA19BC", Slot = "5")]
		public override void SetupScene()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xBA1B88", Offset = "0xBA1B88", VA = "0xBA1B88", Slot = "6")]
		public override void Cleanup()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xBA1C10", Offset = "0xBA1C10", VA = "0xBA1C10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C1700", Offset = "0x9C1700")]
		private void PlaceCoinsInEditor()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xBA1C14", Offset = "0xBA1C14", VA = "0xBA1C14", Slot = "7")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xBA1CE8", Offset = "0xBA1CE8", VA = "0xBA1CE8")]
		public void SetupBoundaryRail()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xBA1D84", Offset = "0xBA1D84", VA = "0xBA1D84")]
		public bool IsPlanePosOutOfBounds(Vector2 planePos)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xBA1E84", Offset = "0xBA1E84", VA = "0xBA1E84")]
		public void SpawnLiveObjects(bool ringMode, bool altRings)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xBA2028", Offset = "0xBA2028", VA = "0xBA2028")]
		private bool GetPlaneIntersection(Vector2 planePos, Ray ray, out Vector2 planeDelta, out float rayLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xBA2294", Offset = "0xBA2294", VA = "0xBA2294")]
		public Vector2 GetClosestSurfaceIntersection(Ray ray, bool passThroughGaps)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xBA2504", Offset = "0xBA2504", VA = "0xBA2504")]
		public void SetSplinePropertyBlock(Vector2 pos, MaterialPropertyBlock props, float maxBackwardSplineSpaceOffset, float tScale, Vector2 lateralScale, float xOffset)
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xBA2934", Offset = "0xBA2934", VA = "0xBA2934")]
		public string GetComfortString()
		{
			return null;
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xBA2A90", Offset = "0xBA2A90", VA = "0xBA2A90")]
		public SplineTrack()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public class WaitForRaceSeconds : CustomYieldInstruction
	{
		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float endTime;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaceController raceController;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Func<bool> shouldSkip;

		[Token(Token = "0x1700006B")]
		public override bool keepWaiting
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0xBD01E4", Offset = "0xBD01E4", VA = "0xBD01E4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xBD0134", Offset = "0xBD0134", VA = "0xBD0134")]
		public WaitForRaceSeconds(float duration, [Optional] Func<bool> shouldSkip)
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class WaitForGameSeconds : CustomYieldInstruction
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float endTime;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaceController raceController;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Func<bool> shouldSkip;

		[Token(Token = "0x1700006C")]
		public override bool keepWaiting
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0xBD0074", Offset = "0xBD0074", VA = "0xBD0074", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xBCFFC8", Offset = "0xBCFFC8", VA = "0xBCFFC8")]
		public WaitForGameSeconds(float duration, [Optional] Func<bool> shouldSkip)
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class WaitForSecondsSkippable : CustomYieldInstruction
	{
		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float endTime;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaceController raceController;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Func<bool> shouldSkip;

		[Token(Token = "0x1700006D")]
		public override bool keepWaiting
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0xBD032C", Offset = "0xBD032C", VA = "0xBD032C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xBD02E4", Offset = "0xBD02E4", VA = "0xBD02E4")]
		public WaitForSecondsSkippable(float duration, [Optional] Func<bool> shouldSkip)
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class TrackDefintiion : MonoBehaviour
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xBA6F74", Offset = "0xBA6F74", VA = "0xBA6F74")]
		public TrackDefintiion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D1")]
	public class TrackItem
	{
		[Token(Token = "0x20001DE")]
		[Flags]
		public enum ItemType
		{
			[Token(Token = "0x4000EE4")]
			RandomPickup = 1,
			[Token(Token = "0x4000EE5")]
			Boost = 2,
			[Token(Token = "0x4000EE6")]
			Pod = 4,
			[Token(Token = "0x4000EE7")]
			Mine = 8,
			[Token(Token = "0x4000EE8")]
			Ring = 0x10,
			[Token(Token = "0x4000EE9")]
			All = -1,
			[Token(Token = "0x4000EEA")]
			AllButBoosts = -3
		}

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemType itemType;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 position;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool active;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[NonSerialized]
		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool collected;

		[NonSerialized]
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int id;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoostTrackItem boostTrackItem;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float spawnTime;

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xB9E578", Offset = "0xB9E578", VA = "0xB9E578")]
		public static TrackItem CreateBoostTrackItem(Vector2 position, BoostTrackItem.BoostType type)
		{
			return null;
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xB9E638", Offset = "0xB9E638", VA = "0xB9E638")]
		public static TrackItem CreatePickupTrackItem(Vector2 position)
		{
			return null;
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xB9E6C4", Offset = "0xB9E6C4", VA = "0xB9E6C4")]
		public static TrackItem CreatePodItem(Vector2 position)
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xB9E12C", Offset = "0xB9E12C", VA = "0xB9E12C")]
		public static TrackItem CreateRingItem(Vector2 position)
		{
			return null;
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xB9E8F8", Offset = "0xB9E8F8", VA = "0xB9E8F8")]
		public static TrackItem CreateMine(Vector2 position, int id)
		{
			return null;
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xBA894C", Offset = "0xBA894C", VA = "0xBA894C")]
		public TrackItem()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xBA895C", Offset = "0xBA895C", VA = "0xBA895C")]
		public TrackItem(TrackItem src)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public class BoostTrackItem
	{
		[Token(Token = "0x20001DF")]
		public enum BoostType
		{
			[Token(Token = "0x4000EEC")]
			Enduring,
			[Token(Token = "0x4000EED")]
			NOTUSED,
			[Token(Token = "0x4000EEE")]
			Pickup,
			[Token(Token = "0x4000EEF")]
			PickupMini
		}

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int NumBoostTypes;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoostType boostType;

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xB69778", Offset = "0xB69778", VA = "0xB69778")]
		public BoostTrackItem()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public static class RemoteConfig
	{
		[Token(Token = "0x20001E0")]
		public class ConfigPart
		{
			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object data;

			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0xB5BEF0", Offset = "0xB5BEF0", VA = "0xB5BEF0")]
			public ConfigPart()
			{
			}
		}

		[Token(Token = "0x20001E1")]
		public class LCConfigPart
		{
			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<LCConfigItem> configItems;

			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0xB5BAE8", Offset = "0xB5BAE8", VA = "0xB5BAE8")]
			public LCConfigPart()
			{
			}
		}

		[Token(Token = "0x20001E2")]
		public class MPConfigPart
		{
			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int minVersion;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numLevels;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool extraAnalytics;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string specialMPRoomSuffix;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string[] specialMPNameSuffixes;

			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0xB5BAE0", Offset = "0xB5BAE0", VA = "0xB5BAE0")]
			public MPConfigPart()
			{
			}
		}

		[Token(Token = "0x20001E3")]
		public class LCConfigItem
		{
			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string LCName;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, string> config;

			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xB5CC74", Offset = "0xB5CC74", VA = "0xB5CC74")]
			public void GetFloat(string key, out float outValue, float def)
			{
			}

			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xB48C68", Offset = "0xB48C68", VA = "0xB48C68")]
			public void GetBool(string key, out bool outValue, bool def)
			{
			}

			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0xB48AA8", Offset = "0xB48AA8", VA = "0xB48AA8")]
			public LCConfigItem()
			{
			}
		}

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string queuedJson;

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xB5B8D8", Offset = "0xB5B8D8", VA = "0xB5B8D8")]
		public static string BuildConfigJson()
		{
			return null;
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xB5BEF8", Offset = "0xB5BEF8", VA = "0xB5BEF8")]
		public static void ApplyJson(string json)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xB5C580", Offset = "0xB5C580", VA = "0xB5C580")]
		private static void ApplyLCConfig(LCConfigPart config)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xB5BB58", Offset = "0xB5BB58", VA = "0xB5BB58")]
		private static void BuildLCConfig(LCConfigPart lcConf)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xB5CABC", Offset = "0xB5CABC", VA = "0xB5CABC")]
		public static string BuildConfigJsonAndSave()
		{
			return null;
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xB5CB64", Offset = "0xB5CB64", VA = "0xB5CB64")]
		public static void QueueJson(string json)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xB5CBD0", Offset = "0xB5CBD0", VA = "0xB5CBD0")]
		public static void ApplyQueuedJson()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class SceneSettings : MonoBehaviour
	{
		[Token(Token = "0x20001E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE1BC", Offset = "0x9BE1BC")]
		private sealed class <EnumVideoCamPositions>d__33 : IEnumerable<Transform>, IEnumerable, IEnumerator<Transform>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Transform <>2__current;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneSettings <>4__this;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator <>7__wrap1;

			[Token(Token = "0x170000F7")]
			private Transform System.Collections.Generic.IEnumerator<UnityEngine.Transform>.Current
			{
				[Token(Token = "0x6000AE5")]
				[Address(RVA = "0xB998A4", Offset = "0xB998A4", VA = "0xB998A4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AE7")]
				[Address(RVA = "0xB99910", Offset = "0xB99910", VA = "0xB99910", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0xB994BC", Offset = "0xB994BC", VA = "0xB994BC")]
			[DebuggerHidden]
			public <EnumVideoCamPositions>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0xB9950C", Offset = "0xB9950C", VA = "0xB9950C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0xB995F4", Offset = "0xB995F4", VA = "0xB995F4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xB99528", Offset = "0xB99528", VA = "0xB99528")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0xB998AC", Offset = "0xB998AC", VA = "0xB998AC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0xB99918", Offset = "0xB99918", VA = "0xB99918", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Transform> System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xB999C8", Offset = "0xB999C8", VA = "0xB999C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool perfHeavyTrack;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelColorScheme colorScheme;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float skyboxBottomPlaneHeight;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool rotated28Degrees;

		[Token(Token = "0x40007D4")]
		public const string SCENE_SETTINGS_PATH = "SCENESETTINGS";

		[Token(Token = "0x40007D5")]
		public const string SPLINE_TRACK = "SplineTrack";

		[Token(Token = "0x40007D6")]
		public const string TRACK_PATH = "Environment/Track";

		[Token(Token = "0x40007D7")]
		public const string FRAME_PATH = "Environment/FrameParent";

		[Token(Token = "0x40007D8")]
		public const string OBSTABLES_PATH = "Environment/Obstacles";

		[Token(Token = "0x40007D9")]
		public const string BARRIERS_PATH = "Environment/Barriers";

		[Token(Token = "0x40007DA")]
		public const string BARRIER_SOUNDS_PATH = "Environment/BarrierSounds";

		[Token(Token = "0x40007DB")]
		public const string PICKUPROOT_PATH = "TRACK/PickupRoot";

		[Token(Token = "0x40007DC")]
		public const string BOOSTROOT_PATH = "TRACK/BoostRoot";

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UniversalCameraSettings camSettings;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LevelController defaultLevelController;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject environment;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MonoBehaviour[] setupItems;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject frameParent;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 testPosition;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 testVelocity;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform[] videoCamPositions;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int perPixelLights;

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xB98C54", Offset = "0xB98C54", VA = "0xB98C54")]
		public static Transform FindPickupRoot()
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xB98CB8", Offset = "0xB98CB8", VA = "0xB98CB8")]
		public static Transform FindBoostRoot()
		{
			return null;
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xB98D1C", Offset = "0xB98D1C", VA = "0xB98D1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xB98E64", Offset = "0xB98E64", VA = "0xB98E64")]
		public void OnLoaded()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xB98FA0", Offset = "0xB98FA0", VA = "0xB98FA0")]
		private void ApplyColorSchemeParams()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xB990AC", Offset = "0xB990AC", VA = "0xB990AC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C1738", Offset = "0x9C1738")]
		private void ApplyColorScheme()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xB990C8", Offset = "0xB990C8", VA = "0xB990C8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9C1748", Offset = "0x9C1748")]
		private void UnapplyColorScheme()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xB990E4", Offset = "0xB990E4", VA = "0xB990E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xB99250", Offset = "0xB99250", VA = "0xB99250")]
		public static SceneSettings Get()
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xB99304", Offset = "0xB99304", VA = "0xB99304")]
		public static SplineTrack Track()
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xB993A0", Offset = "0xB993A0", VA = "0xB993A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xB99438", Offset = "0xB99438", VA = "0xB99438")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1758", Offset = "0x9C1758")]
		public IEnumerable<Transform> EnumVideoCamPositions()
		{
			return null;
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xB994F4", Offset = "0xB994F4", VA = "0xB994F4")]
		public SceneSettings()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	internal class ShowBike : MonoBehaviour
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0xB9B4F4", Offset = "0xB9B4F4", VA = "0xB9B4F4")]
		public void SetAvailable(bool a)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xB9B528", Offset = "0xB9B528", VA = "0xB9B528")]
		public ShowBike()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class FlightSounds : MonoBehaviour
	{
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip enterGap;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSourceTool engineSource;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSourceTool engineWarmupSource;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSourceTool boostHumSource;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSourceTool iceArmedSource;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSourceTool immuneSource;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip gapDecelerate;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[] gapEnterSoundRepeatDelays;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BikeSim bikeSim;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Bike bike;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float smoothedEngineSpeed;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject engineSoundTransform;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject engineWarmupSoundTransform;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject humSoundTransform;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject iceArmedSoundTransform;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject immuneSoundTransform;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float engineRPM;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AudioSource flatBatterySound;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool engineCold;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float engineStartupVolume;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float oldTimeInGap;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool oldSlowedByGap;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool immuneSoundOn;

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xB76024", Offset = "0xB76024", VA = "0xB76024")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xB763C8", Offset = "0xB763C8", VA = "0xB763C8")]
		private void OnEvent(BikeSim.Event e)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xB767C8", Offset = "0xB767C8", VA = "0xB767C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xB76F0C", Offset = "0xB76F0C", VA = "0xB76F0C")]
		public void PodCollected(int level, bool battery, bool bonus)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xB76FB0", Offset = "0xB76FB0", VA = "0xB76FB0")]
		public FlightSounds()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class MusicManager : SingletonMono<MusicManager>
	{
		[Token(Token = "0x20001E5")]
		private class JukeBox
		{
			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private AudioLoop[] songs;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int lastPlayedSongIndex;

			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0xB4A654", Offset = "0xB4A654", VA = "0xB4A654")]
			public JukeBox(UnityEngine.Object[] songs)
			{
			}

			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0xB4B104", Offset = "0xB4B104", VA = "0xB4B104")]
			public AudioLoop GetNextSong()
			{
				return null;
			}

			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0xB4BBAC", Offset = "0xB4BBAC", VA = "0xB4BBAC")]
			public AudioLoop GetPrevSong()
			{
				return null;
			}
		}

		[Token(Token = "0x20001E6")]
		public enum State
		{
			[Token(Token = "0x4000F04")]
			Stopped,
			[Token(Token = "0x4000F05")]
			Playing,
			[Token(Token = "0x4000F06")]
			FadingOut,
			[Token(Token = "0x4000F07")]
			Reprise
		}

		[Token(Token = "0x20001E7")]
		private class PlaybackChannel
		{
			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource[] musicSources;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioSource currentMusicSource;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private double nextScheduledEvent;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int nextAudioSource;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AudioClip loopClip;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float volume;

			[Token(Token = "0x6000AED")]
			[Address(RVA = "0xB4AFA0", Offset = "0xB4AFA0", VA = "0xB4AFA0")]
			public void StartSong(AudioClip firstClip, AudioClip loopClip, float volume)
			{
			}

			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0xB4C5B4", Offset = "0xB4C5B4", VA = "0xB4C5B4")]
			public void StartClip(AudioClip clip, float volume, double startTime)
			{
			}

			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0xB4B160", Offset = "0xB4B160", VA = "0xB4B160")]
			public void Update()
			{
			}

			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0xB4B5A8", Offset = "0xB4B5A8", VA = "0xB4B5A8")]
			internal void StopAllSources()
			{
			}

			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0xB4BF38", Offset = "0xB4BF38", VA = "0xB4BF38")]
			internal void SetVolume(float volume)
			{
			}

			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0xB4B6B0", Offset = "0xB4B6B0", VA = "0xB4B6B0")]
			internal float GetBeatPosition(float graphicsBeatSecondsOffset)
			{
				return default(float);
			}

			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0xB4B8C8", Offset = "0xB4B8C8", VA = "0xB4B8C8")]
			public PlaybackChannel()
			{
			}
		}

		[Token(Token = "0x20001E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE1CC", Offset = "0x9BE1CC")]
		private sealed class <CueNextRaceSong_CR>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool prev;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MusicManager <>4__this;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AF7")]
				[Address(RVA = "0xB4BC1C", Offset = "0xB4BC1C", VA = "0xB4BC1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AF9")]
				[Address(RVA = "0xB4BC88", Offset = "0xB4BC88", VA = "0xB4BC88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0xB4AAEC", Offset = "0xB4AAEC", VA = "0xB4AAEC")]
			[DebuggerHidden]
			public <CueNextRaceSong_CR>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xB4B958", Offset = "0xB4B958", VA = "0xB4B958", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xB4B95C", Offset = "0xB4B95C", VA = "0xB4B95C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xB4BC24", Offset = "0xB4BC24", VA = "0xB4BC24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE1DC", Offset = "0x9BE1DC")]
		private sealed class <SkipSong_CR>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool prev;

			[Token(Token = "0x170000FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AFD")]
				[Address(RVA = "0xB4C540", Offset = "0xB4C540", VA = "0xB4C540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AFF")]
				[Address(RVA = "0xB4C5AC", Offset = "0xB4C5AC", VA = "0xB4C5AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xB4ABA0", Offset = "0xB4ABA0", VA = "0xB4ABA0")]
			[DebuggerHidden]
			public <SkipSong_CR>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xB4C4AC", Offset = "0xB4C4AC", VA = "0xB4C4AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xB4C4B0", Offset = "0xB4C4B0", VA = "0xB4C4B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xB4C548", Offset = "0xB4C548", VA = "0xB4C548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE1EC", Offset = "0x9BE1EC")]
		private sealed class <FadeOut_CR>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <initialVolume>5__3;

			[Token(Token = "0x170000FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B03")]
				[Address(RVA = "0xB4BFC0", Offset = "0xB4BFC0", VA = "0xB4BFC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B05")]
				[Address(RVA = "0xB4C02C", Offset = "0xB4C02C", VA = "0xB4C02C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B00")]
			[Address(RVA = "0xB4B634", Offset = "0xB4B634", VA = "0xB4B634")]
			[DebuggerHidden]
			public <FadeOut_CR>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xB4BC90", Offset = "0xB4BC90", VA = "0xB4BC90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xB4BC94", Offset = "0xB4BC94", VA = "0xB4BC94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xB4BFC8", Offset = "0xB4BFC8", VA = "0xB4BFC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE1FC", Offset = "0x9BE1FC")]
		private sealed class <RepriseTransition_CR>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x170000FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B09")]
				[Address(RVA = "0xB4C438", Offset = "0xB4C438", VA = "0xB4C438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B0B")]
				[Address(RVA = "0xB4C4A4", Offset = "0xB4C4A4", VA = "0xB4C4A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xB4B660", Offset = "0xB4B660", VA = "0xB4B660")]
			[DebuggerHidden]
			public <RepriseTransition_CR>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xB4C034", Offset = "0xB4C034", VA = "0xB4C034", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xB4C038", Offset = "0xB4C038", VA = "0xB4C038", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0xB4C440", Offset = "0xB4C440", VA = "0xB4C440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string repriseMusicChannel;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mainMusicChannel;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float loopPreemptPeriod;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float graphicsBeatSecondsOffset;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool playResultsPending;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF4E8", Offset = "0x9BF4E8")]
		private State <currentState>k__BackingField;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlaybackChannel mainPlayback;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlaybackChannel reprisePlayback;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private JukeBox raceSongs;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private JukeBox resultsSongs;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioLoop currentLoop;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioLoop nextRaceLoop;

		[Token(Token = "0x1700006E")]
		public State currentState
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0xB4A39C", Offset = "0xB4A39C", VA = "0xB4A39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C17BC", Offset = "0x9C17BC")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000708")]
			[Address(RVA = "0xB4A3A4", Offset = "0xB4A3A4", VA = "0xB4A3A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C17CC", Offset = "0x9C17CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xB4A3AC", Offset = "0xB4A3AC", VA = "0xB4A3AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xB4AA64", Offset = "0xB4AA64", VA = "0xB4AA64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C17DC", Offset = "0x9C17DC")]
		public IEnumerator CueNextRaceSong_CR(bool prev = false)
		{
			return null;
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xB4AB18", Offset = "0xB4AB18", VA = "0xB4AB18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1840", Offset = "0x9C1840")]
		public IEnumerator SkipSong_CR(bool prev)
		{
			return null;
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xB498D4", Offset = "0xB498D4", VA = "0xB498D4")]
		public void PlayCuedRaceSong()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xB4AF60", Offset = "0xB4AF60", VA = "0xB4AF60")]
		public void PlayResultsSong()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xB4ABCC", Offset = "0xB4ABCC", VA = "0xB4ABCC")]
		public void PlaySong(AudioLoop loop)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xB4AFF0", Offset = "0xB4AFF0", VA = "0xB4AFF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xB4B288", Offset = "0xB4B288", VA = "0xB4B288")]
		public void StartFadeOut()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xB4B398", Offset = "0xB4B398", VA = "0xB4B398")]
		public void StartRepriseFade()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xB4AF6C", Offset = "0xB4AF6C", VA = "0xB4AF6C")]
		private void StopAllSources()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xB4B324", Offset = "0xB4B324", VA = "0xB4B324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C18A4", Offset = "0x9C18A4")]
		private IEnumerator FadeOut_CR()
		{
			return null;
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xB4B534", Offset = "0xB4B534", VA = "0xB4B534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1908", Offset = "0x9C1908")]
		private IEnumerator RepriseTransition_CR()
		{
			return null;
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xB4B68C", Offset = "0xB4B68C", VA = "0xB4B68C")]
		public float GetBeatPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xB4B7F0", Offset = "0xB4B7F0", VA = "0xB4B7F0")]
		public string GetTrackName()
		{
			return null;
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xB4B80C", Offset = "0xB4B80C", VA = "0xB4B80C")]
		public MusicManager()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class FlatSurface : SurfaceBase
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0xB7409C", Offset = "0xB7409C", VA = "0xB7409C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C196C", Offset = "0x9C196C")]
		public void Normalize()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xB740A0", Offset = "0xB740A0", VA = "0xB740A0", Slot = "4")]
		public override bool KeepOnSurface(Transform follower, Quaternion localRotation, out Vector3 collisionPoint, bool updateTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xB741AC", Offset = "0xB741AC", VA = "0xB741AC", Slot = "5")]
		public override void MapPlanePositionToCylinder(Transform transform1, Vector2 pos, Quaternion localRotation)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xB741B0", Offset = "0xB741B0", VA = "0xB741B0")]
		public FlatSurface()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	[ExecuteInEditMode]
	public class GridShaderSetup : MonoBehaviour
	{
		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 gridOrigin;

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xBB1628", Offset = "0xBB1628", VA = "0xBB1628")]
		private void Awake()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xBB1718", Offset = "0xBB1718", VA = "0xBB1718")]
		private void Reset()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xBB162C", Offset = "0xBB162C", VA = "0xBB162C")]
		public void SetProps()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xBB171C", Offset = "0xBB171C", VA = "0xBB171C")]
		public GridShaderSetup()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public abstract class SurfaceBase : MonoBehaviour
	{
		[Token(Token = "0x6000721")]
		public abstract bool KeepOnSurface(Transform follower, Quaternion localRotation, out Vector3 collisionPoint, bool updateTransform);

		[Token(Token = "0x6000722")]
		public abstract void MapPlanePositionToCylinder(Transform transform1, Vector2 pos, Quaternion localRotation);

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xBA3D7C", Offset = "0xBA3D7C", VA = "0xBA3D7C")]
		protected SurfaceBase()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class StartBoardController : MonoBehaviour
	{
		[Token(Token = "0x20001EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE20C", Offset = "0x9BE20C")]
		private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StartBoardController <>4__this;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <clipLength>5__2;

			[Token(Token = "0x17000101")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B0F")]
				[Address(RVA = "0xBA3C1C", Offset = "0xBA3C1C", VA = "0xBA3C1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000102")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B11")]
				[Address(RVA = "0xBA3C88", Offset = "0xBA3C88", VA = "0xBA3C88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0xBA3070", Offset = "0xBA3070", VA = "0xBA3070")]
			[DebuggerHidden]
			public <Start>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xBA3718", Offset = "0xBA3718", VA = "0xBA3718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0xBA371C", Offset = "0xBA371C", VA = "0xBA371C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B10")]
			[Address(RVA = "0xBA3C24", Offset = "0xBA3C24", VA = "0xBA3C24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE21C", Offset = "0x9BE21C")]
		private sealed class <RemovedBeams_CR>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StartBoardController <>4__this;

			[Token(Token = "0x17000103")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B15")]
				[Address(RVA = "0xBA36A4", Offset = "0xBA36A4", VA = "0xBA36A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000104")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B17")]
				[Address(RVA = "0xBA3710", Offset = "0xBA3710", VA = "0xBA3710", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xBA3364", Offset = "0xBA3364", VA = "0xBA3364")]
			[DebuggerHidden]
			public <RemovedBeams_CR>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xBA34B8", Offset = "0xBA34B8", VA = "0xBA34B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xBA34BC", Offset = "0xBA34BC", VA = "0xBA34BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xBA36AC", Offset = "0xBA36AC", VA = "0xBA36AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject finishField;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject finishFieldCheckered;

		[Token(Token = "0x400080C")]
		private const int RACE_START_COUNT_INDEX = 2;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float sinSpeed;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sinScale;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blendmodeTransition;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float alphaPulseScale;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float alphaPulseSpeed;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve alphaPulseCurve;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float countdownLen;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D[] textures;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float textureAndScaleIndex;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float currentScale;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float newExtraScale;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TMPPulse[] countdownPulseObjs;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject checkeredFlag;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshRenderer displayMesh;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshRenderer startBeams;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material mat;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material beamMat;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animator animator;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool animationFinished;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaceController raceController;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float alphaPulseStartTime;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float textureAndScaleIndex_final;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float currentScale_final;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float newExtraScale_final;

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xBA2CA0", Offset = "0xBA2CA0", VA = "0xBA2CA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xBA2D74", Offset = "0xBA2D74", VA = "0xBA2D74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xBA2FFC", Offset = "0xBA2FFC", VA = "0xBA2FFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C19A4", Offset = "0x9C19A4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xBA309C", Offset = "0xBA309C", VA = "0xBA309C")]
		public void AnimCountdownEvent(int t)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xBA32F0", Offset = "0xBA32F0", VA = "0xBA32F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1A08", Offset = "0x9C1A08")]
		private IEnumerator RemovedBeams_CR()
		{
			return null;
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xBA3390", Offset = "0xBA3390", VA = "0xBA3390")]
		private void OnPlayerCrossedStartLine()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xBA33B0", Offset = "0xBA33B0", VA = "0xBA33B0")]
		public void ClearFinishField()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xBA33D0", Offset = "0xBA33D0", VA = "0xBA33D0")]
		public void ShowCheckeredFlag()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xBA3414", Offset = "0xBA3414", VA = "0xBA3414")]
		public StartBoardController()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xBA342C", Offset = "0xBA342C", VA = "0xBA342C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A6C", Offset = "0x9C1A6C")]
		private void <RemovedBeams_CR>b__31_0(float f)
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xBA3498", Offset = "0xBA3498", VA = "0xBA3498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A7C", Offset = "0x9C1A7C")]
		private void <RemovedBeams_CR>b__31_1()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class TimedGate : MonoBehaviour
	{
		[Token(Token = "0x20001EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE22C", Offset = "0x9BE22C")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimedGate <>4__this;

			[Token(Token = "0x17000105")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B1B")]
				[Address(RVA = "0xBA5A50", Offset = "0xBA5A50", VA = "0xBA5A50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000106")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B1D")]
				[Address(RVA = "0xBA5ABC", Offset = "0xBA5ABC", VA = "0xBA5ABC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xBA5654", Offset = "0xBA5654", VA = "0xBA5654")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xBA5688", Offset = "0xBA5688", VA = "0xBA5688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xBA568C", Offset = "0xBA568C", VA = "0xBA568C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xBA5A58", Offset = "0xBA5A58", VA = "0xBA5A58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float period;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int currentSection;

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xBA55E0", Offset = "0xBA55E0", VA = "0xBA55E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1A8C", Offset = "0x9C1A8C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xBA5680", Offset = "0xBA5680", VA = "0xBA5680")]
		public TimedGate()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BDA64", Offset = "0x9BDA64")]
	public class Competition : ScriptableObject
	{
		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelController[] levels;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bikeIndex;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string title;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int pointsTarget;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF4F8", Offset = "0x9BF4F8")]
		public int bikeToUnlock;

		[NonSerialized]
		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int pointsCount;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite icon;

		[Token(Token = "0x1700006F")]
		public string Title
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xB6E59C", Offset = "0xB6E59C", VA = "0xB6E59C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xB6E6B4", Offset = "0xB6E6B4", VA = "0xB6E6B4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xB6E9FC", Offset = "0xB6E9FC", VA = "0xB6E9FC")]
		public void OnLevelComplete(LevelController completedLevel, LevelController.Victory victory)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xB6F3A4", Offset = "0xB6F3A4", VA = "0xB6F3A4")]
		public int GetIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xB6EF88", Offset = "0xB6EF88", VA = "0xB6EF88")]
		public int GetIndex(out int careerIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xB6EE6C", Offset = "0xB6EE6C", VA = "0xB6EE6C")]
		public void UpdatePointCount()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xB6F3F0", Offset = "0xB6F3F0", VA = "0xB6F3F0")]
		public static Color ColorForVictory(LevelController.Victory v)
		{
			return default(Color);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xB6F3C8", Offset = "0xB6F3C8", VA = "0xB6F3C8")]
		public static int PointsForVictory(LevelController.Victory v)
		{
			return default(int);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xB6F4A4", Offset = "0xB6F4A4", VA = "0xB6F4A4")]
		private static string GetUnlockString(int careerIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xB6F0BC", Offset = "0xB6F0BC", VA = "0xB6F0BC")]
		public static bool IsUnlocked(int careerIndex, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xB6F144", Offset = "0xB6F144", VA = "0xB6F144")]
		public static void Unlock(int careerIndex, int index, bool announce)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xB6F53C", Offset = "0xB6F53C", VA = "0xB6F53C")]
		public bool NextLevelUnseen(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xB6F620", Offset = "0xB6F620", VA = "0xB6F620")]
		public Competition()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class TournamentRacer
	{
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int points;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lastEventTime;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lastEventPosition;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float characterSpeed;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isPlayer;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int startIndex;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color color;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color riderColor;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RiderModelManager.RiderModel riderModel;

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xBA6044", Offset = "0xBA6044", VA = "0xBA6044")]
		public TournamentRacer()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class Tournament
	{
		[Token(Token = "0x20001EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE23C", Offset = "0x9BE23C")]
		private sealed class <EnumerateNonPlayerRacers>d__5 : IEnumerable<TournamentRacer>, IEnumerable, IEnumerator<TournamentRacer>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TournamentRacer <>2__current;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Tournament <>4__this;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<TournamentRacer>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000107")]
			private TournamentRacer System.Collections.Generic.IEnumerator<Coplanar.TournamentRacer>.Current
			{
				[Token(Token = "0x6000B22")]
				[Address(RVA = "0xBA6AF4", Offset = "0xBA6AF4", VA = "0xBA6AF4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000108")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B24")]
				[Address(RVA = "0xBA6B60", Offset = "0xBA6B60", VA = "0xBA6B60", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xBA61BC", Offset = "0xBA61BC", VA = "0xBA61BC")]
			[DebuggerHidden]
			public <EnumerateNonPlayerRacers>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0xBA6908", Offset = "0xBA6908", VA = "0xBA6908", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B20")]
			[Address(RVA = "0xBA697C", Offset = "0xBA697C", VA = "0xBA697C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B21")]
			[Address(RVA = "0xBA6924", Offset = "0xBA6924", VA = "0xBA6924")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000B23")]
			[Address(RVA = "0xBA6AFC", Offset = "0xBA6AFC", VA = "0xBA6AFC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B25")]
			[Address(RVA = "0xBA6B68", Offset = "0xBA6B68", VA = "0xBA6B68", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TournamentRacer> System.Collections.Generic.IEnumerable<Coplanar.TournamentRacer>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B26")]
			[Address(RVA = "0xBA6C18", Offset = "0xBA6C18", VA = "0xBA6C18", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TournamentRacer> racers;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TournamentRacer player;

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xBA5B3C", Offset = "0xBA5B3C", VA = "0xBA5B3C")]
		public void AddRandomRacers(int n, float extraSpeedSpread)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xBA604C", Offset = "0xBA604C", VA = "0xBA604C")]
		public TournamentRacer AddPlayer(string playerName)
		{
			return null;
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xBA6130", Offset = "0xBA6130", VA = "0xBA6130")]
		public TournamentRacer GetPlayer()
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xBA6138", Offset = "0xBA6138", VA = "0xBA6138")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1AF0", Offset = "0x9C1AF0")]
		public IEnumerable<TournamentRacer> EnumerateNonPlayerRacers()
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xBA61F4", Offset = "0xBA61F4", VA = "0xBA61F4")]
		public void AddNamedRacers(IEnumerable<string> names)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xBA6680", Offset = "0xBA6680", VA = "0xBA6680")]
		public void AddRacers(int n)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xBA6898", Offset = "0xBA6898", VA = "0xBA6898")]
		public Tournament()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class TrackPos : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xBA9B34", Offset = "0xBA9B34", VA = "0xBA9B34")]
		public TrackPos()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BDAA0", Offset = "0x9BDAA0")]
	public class TrackFrameRegion : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20001F0")]
		public struct EditorStyle
		{
			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool narrow;
		}

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 meshScale;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float meshLength;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EditorStyle editorColor;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool alongNegativeZ;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int tileLength;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color vertexColor;

		[Token(Token = "0x17000070")]
		public float ScaledMeshLength
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xBA88BC", Offset = "0xBA88BC", VA = "0xBA88BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xBA88C8", Offset = "0xBA88C8", VA = "0xBA88C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xBA88CC", Offset = "0xBA88CC", VA = "0xBA88CC")]
		public TrackFrameRegion()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public static class VideoUtils
	{
		[Token(Token = "0x20001F1")]
		public class MotionBlurFrameCapture
		{
			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool inited;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RenderTexture rt;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private RenderTexture rtScaled;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ImageTools.TextureAverager textureAverager;

			[Token(Token = "0x4000F34")]
			private const int width = 3840;

			[Token(Token = "0x4000F35")]
			private const int height = 2160;

			[Token(Token = "0x4000F36")]
			private const int outputWidth = 1920;

			[Token(Token = "0x4000F37")]
			private const int outputHeight = 1080;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int inputFramesPerOutputFrame;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private RenderUtil.RenderTextureManager rtManager;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int submittedFrameCount;

			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float[] kernel;

			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool dofEnabled;

			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float dofLensSize;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float dofFocusDepth;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int dofGridSize;

			[Token(Token = "0x6000B27")]
			[Address(RVA = "0xBCFF4C", Offset = "0xBCFF4C", VA = "0xBCFF4C")]
			public MotionBlurFrameCapture()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE24C", Offset = "0x9BE24C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<float> <>9__1_0;

			[Token(Token = "0x6000B29")]
			[Address(RVA = "0xBCFEA4", Offset = "0xBCFEA4", VA = "0xBCFEA4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0xBCFEAC", Offset = "0xBCFEAC", VA = "0xBCFEAC")]
			internal void <SetFollowModeBlend>b__1_0(float p)
			{
			}
		}

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Coroutine coroutine;

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xBCF760", Offset = "0xBCF760", VA = "0xBCF760")]
		public static void SetFollowModeBlend(FollowCamParams modeParams, float lerpTime = -1f)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xBCFBB0", Offset = "0xBCFBB0", VA = "0xBCFBB0")]
		public static void SetFollowMode(FollowCamParams modeParams)
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class WireBoxUIController : MonoBehaviour
	{
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WireBoxUIController I;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftAnchor;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightAnchor;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float bikeScale;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SplineTrack currentTrack;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BikeHologramController bikeHologram;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackHologramController trackHologram;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool forceInactive;

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xBD03B8", Offset = "0xBD03B8", VA = "0xBD03B8")]
		public void SetBikeOverride(int index)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xBD03D4", Offset = "0xBD03D4", VA = "0xBD03D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xBD0440", Offset = "0xBD0440", VA = "0xBD0440")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xBD04A8", Offset = "0xBD04A8", VA = "0xBD04A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xBD04AC", Offset = "0xBD04AC", VA = "0xBD04AC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xBD0670", Offset = "0xBD0670", VA = "0xBD0670")]
		public static void LoadHomeEnv()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xBD06E4", Offset = "0xBD06E4", VA = "0xBD06E4")]
		public WireBoxUIController()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class BSplineTrackEditor : MonoBehaviour
	{
		[Token(Token = "0x20001F3")]
		public enum ColoringMode
		{
			[Token(Token = "0x4000F43")]
			Corners,
			[Token(Token = "0x4000F44")]
			Regions
		}

		[Token(Token = "0x20001F4")]
		public enum UpMode
		{
			[Token(Token = "0x4000F46")]
			FromY,
			[Token(Token = "0x4000F47")]
			FromCurve
		}

		[Token(Token = "0x20001F5")]
		public struct SplinePoint
		{
			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Matrix4x4 pos;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Matrix4x4 up;
		}

		[Serializable]
		[Token(Token = "0x20001F6")]
		public struct LightBar
		{
			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 trackPos;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 worldPos;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float intensity;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color color;
		}

		[Serializable]
		[Token(Token = "0x20001F7")]
		public class TrackRegionInstance
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrackFrameRegion regionType;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float regionEndT;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float regionLength;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int fixedNumber;

			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0xB88A48", Offset = "0xB88A48", VA = "0xB88A48")]
			public bool Check(string index)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0xB88B1C", Offset = "0xB88B1C", VA = "0xB88B1C")]
			public float GetRegionEnd(float t, float regionScale)
			{
				return default(float);
			}

			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0xB88B50", Offset = "0xB88B50", VA = "0xB88B50")]
			public TrackRegionInstance()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F8")]
		public class TrackRegionTile
		{
			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool first;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool flipLR;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool flipFB;

			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrackFrameRegion region;

			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0xB88B58", Offset = "0xB88B58", VA = "0xB88B58")]
			public void CopyFlipFlags(TrackRegionTile tile)
			{
			}

			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0xB88B80", Offset = "0xB88B80", VA = "0xB88B80")]
			public TrackRegionTile Clone()
			{
				return null;
			}

			[Token(Token = "0x6000B30")]
			[Address(RVA = "0xB88C0C", Offset = "0xB88C0C", VA = "0xB88C0C")]
			public TrackRegionTile()
			{
			}
		}

		[Token(Token = "0x20001F9")]
		public class ScaledRegionInstance
		{
			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrackRegionTile tile;

			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrackFrameRegion regionType;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float regionEndY;

			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int fixedNumber;

			[Token(Token = "0x6000B31")]
			[Address(RVA = "0xB88784", Offset = "0xB88784", VA = "0xB88784")]
			public ScaledRegionInstance()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001FA")]
		public struct RegionTileLayer
		{
			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TrackRegionTile[] regionsTiles;
		}

		[Token(Token = "0x20001FB")]
		public struct TrackPoint
		{
			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 up;

			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 right;

			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 forward;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 posDT;

			[Token(Token = "0x17000109")]
			public Quaternion Rotation
			{
				[Token(Token = "0x6000B33")]
				[Address(RVA = "0xA5B5D8", Offset = "0xA5B5D8", VA = "0xA5B5D8")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000B32")]
			[Address(RVA = "0xA5B5D0", Offset = "0xA5B5D0", VA = "0xA5B5D0")]
			public void CalcRightAndForward()
			{
			}

			[Token(Token = "0x6000B34")]
			[Address(RVA = "0xA5B5E0", Offset = "0xA5B5E0", VA = "0xA5B5E0")]
			public Trans GetTrans()
			{
				return null;
			}
		}

		[Token(Token = "0x20001FC")]
		public struct LineData
		{
			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 from;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 to;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color color;
		}

		[Serializable]
		[Token(Token = "0x20001FD")]
		private struct SplinePlaneLookupEntry
		{
			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float t;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TrackPoint tp;
		}

		[Token(Token = "0x20001FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE25C", Offset = "0x9BE25C")]
		private sealed class <EnumRegionTiles>d__23 : IEnumerable<TrackRegionTile>, IEnumerable, IEnumerator<TrackRegionTile>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TrackRegionTile <>2__current;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BSplineTrackEditor <>4__this;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int layer;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__layer;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TrackRegionTile[] <>7__wrap1;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x1700010A")]
			private TrackRegionTile System.Collections.Generic.IEnumerator<Coplanar.BSplineTrackEditor.TrackRegionTile>.Current
			{
				[Token(Token = "0x6000B38")]
				[Address(RVA = "0xB883F8", Offset = "0xB883F8", VA = "0xB883F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B3A")]
				[Address(RVA = "0xB88464", Offset = "0xB88464", VA = "0xB88464", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B35")]
			[Address(RVA = "0xB8605C", Offset = "0xB8605C", VA = "0xB8605C")]
			[DebuggerHidden]
			public <EnumRegionTiles>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xB88318", Offset = "0xB88318", VA = "0xB88318", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B37")]
			[Address(RVA = "0xB8831C", Offset = "0xB8831C", VA = "0xB8831C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xB88400", Offset = "0xB88400", VA = "0xB88400", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0xB8846C", Offset = "0xB8846C", VA = "0xB8846C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TrackRegionTile> System.Collections.Generic.IEnumerable<Coplanar.BSplineTrackEditor.TrackRegionTile>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0xB88524", Offset = "0xB88524", VA = "0xB88524", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE26C", Offset = "0x9BE26C")]
		private sealed class <EnumRegions>d__42 : IEnumerable<ScaledRegionInstance>, IEnumerable, IEnumerator<ScaledRegionInstance>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ScaledRegionInstance <>2__current;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int layerIndex;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int <>3__layerIndex;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BSplineTrackEditor <>4__this;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float length;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float <>3__length;

			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <useDefault>5__2;

			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <tileIndex>5__3;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__4;

			[Token(Token = "0x1700010C")]
			private ScaledRegionInstance System.Collections.Generic.IEnumerator<Coplanar.BSplineTrackEditor.ScaledRegionInstance>.Current
			{
				[Token(Token = "0x6000B40")]
				[Address(RVA = "0xB8878C", Offset = "0xB8878C", VA = "0xB8878C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B42")]
				[Address(RVA = "0xB887F8", Offset = "0xB887F8", VA = "0xB887F8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0xB86A80", Offset = "0xB86A80", VA = "0xB86A80")]
			[DebuggerHidden]
			public <EnumRegions>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0xB88528", Offset = "0xB88528", VA = "0xB88528", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xB8852C", Offset = "0xB8852C", VA = "0xB8852C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xB88794", Offset = "0xB88794", VA = "0xB88794", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B43")]
			[Address(RVA = "0xB88800", Offset = "0xB88800", VA = "0xB88800", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ScaledRegionInstance> System.Collections.Generic.IEnumerable<Coplanar.BSplineTrackEditor.ScaledRegionInstance>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xB888C0", Offset = "0xB888C0", VA = "0xB888C0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE27C", Offset = "0x9BE27C")]
		private sealed class <EnumLines>d__43 : IEnumerable<LineData>, IEnumerable, IEnumerator<LineData>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private LineData <>2__current;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public BSplineTrackEditor <>4__this;

			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float splineDivisionsParam;

			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float <>3__splineDivisionsParam;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <lastLeft>5__2;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private Vector3 <lastRight>5__3;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Color <main>5__4;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool <exhaustedRegions>5__5;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private IEnumerator<ScaledRegionInstance> <regionEnum>5__6;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private float <t>5__7;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private TrackPoint <tp>5__8;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private Vector3 <left>5__9;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private Vector3 <right>5__10;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private Color <color>5__11;

			[Token(Token = "0x1700010E")]
			private LineData System.Collections.Generic.IEnumerator<Coplanar.BSplineTrackEditor.LineData>.Current
			{
				[Token(Token = "0x6000B49")]
				[Address(RVA = "0xB88168", Offset = "0xB88168", VA = "0xB88168", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(LineData);
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B4B")]
				[Address(RVA = "0xB881E8", Offset = "0xB881E8", VA = "0xB881E8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B45")]
			[Address(RVA = "0xB86B4C", Offset = "0xB86B4C", VA = "0xB86B4C")]
			[DebuggerHidden]
			public <EnumLines>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xB876C8", Offset = "0xB876C8", VA = "0xB876C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B47")]
			[Address(RVA = "0xB877B4", Offset = "0xB877B4", VA = "0xB877B4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B48")]
			[Address(RVA = "0xB876F4", Offset = "0xB876F4", VA = "0xB876F4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0xB88184", Offset = "0xB88184", VA = "0xB88184", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0xB8825C", Offset = "0xB8825C", VA = "0xB8825C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<LineData> System.Collections.Generic.IEnumerable<Coplanar.BSplineTrackEditor.LineData>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xB88314", Offset = "0xB88314", VA = "0xB88314", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000201")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE28C", Offset = "0x9BE28C")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform beforeTrans;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0xB87278", Offset = "0xB87278", VA = "0xB87278")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xB87638", Offset = "0xB87638", VA = "0xB87638")]
			internal bool <AddAfter>b__0(Transform t, int i)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplinePoint[] splinePoints;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LightBar> lightBarLocations;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColoringMode coloringMode;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool drawInEditor;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandlingOptions handlingOptions;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int splineDivisions;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float gizmoScale;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float gizmoTrackScale;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public TrackRegionTile[] regionsTiles;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RegionTileLayer[] frameLayers;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float frameUnitsScale;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int numTiles;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int numLayers;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool autoScaleSpline;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float width;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Delayed]
		public float buildScale;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool loop;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float trackUpStrength;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TrackFrameRegion defaultRegion;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private SplinePlaneLookupEntry[] planeToSplineTable;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[HideInInspector]
		private float[] splineToPlaneTable;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[ReadOnly]
		public float length;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float splineMaxT;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Func<int, float> SplineToPlane_delegate;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Func<int, float> PlaneToSpline_delegate;

		[Token(Token = "0x17000071")]
		public int SegmentCount
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0xB86094", Offset = "0xB86094", VA = "0xB86094")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000072")]
		public int PlaneLengthY
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0xB86E88", Offset = "0xB86E88", VA = "0xB86E88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xB85AC4", Offset = "0xB85AC4", VA = "0xB85AC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xB85CFC", Offset = "0xB85CFC", VA = "0xB85CFC")]
		public static BSplineTrackEditor GetSplineTrack()
		{
			return null;
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xB85DAC", Offset = "0xB85DAC", VA = "0xB85DAC")]
		private SplinePoint GetSplinePoint(int i)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xB85AC8", Offset = "0xB85AC8", VA = "0xB85AC8")]
		private void CacheSplinePoints()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xB85FA8", Offset = "0xB85FA8", VA = "0xB85FA8")]
		public int GetLayerCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xB85FC8", Offset = "0xB85FC8", VA = "0xB85FC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1B54", Offset = "0x9C1B54")]
		public IEnumerable<TrackRegionTile> EnumRegionTiles(int layer)
		{
			return null;
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xB860D4", Offset = "0xB860D4", VA = "0xB860D4")]
		public void GetControlPoints(int startT, Vector3[] posArray, Vector3[] upArray)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xB86238", Offset = "0xB86238", VA = "0xB86238")]
		public TrackPoint EvalTrackCurve(float p)
		{
			return default(TrackPoint);
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xB864DC", Offset = "0xB864DC", VA = "0xB864DC")]
		public void GetPos(int childIndex, Vector4 weights, out Vector3 pos)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB8665C", Offset = "0xB8665C", VA = "0xB8665C")]
		public void GetPosAndUp(int childIndex, Vector4 weights, out Vector3 pos, out Vector3 up)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xB8686C", Offset = "0xB8686C", VA = "0xB8686C")]
		public void GetUp(int childIndex, Vector4 weights, out Vector3 up)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xB869DC", Offset = "0xB869DC", VA = "0xB869DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1BB8", Offset = "0x9C1BB8")]
		public IEnumerable<ScaledRegionInstance> EnumRegions(int layerIndex, float length)
		{
			return null;
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xB86AB8", Offset = "0xB86AB8", VA = "0xB86AB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1C1C", Offset = "0x9C1C1C")]
		public IEnumerable<LineData> EnumLines(float splineDivisionsParam)
		{
			return null;
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xB86B84", Offset = "0xB86B84", VA = "0xB86B84")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xB86EA8", Offset = "0xB86EA8", VA = "0xB86EA8")]
		private float SplineToPlane_lambda(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xB86EEC", Offset = "0xB86EEC", VA = "0xB86EEC")]
		private float PlaneToSpline_lambda(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xB86F34", Offset = "0xB86F34", VA = "0xB86F34")]
		private BSplineTrackEditor()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xB87000", Offset = "0xB87000", VA = "0xB87000")]
		public float SplineToPlane(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xB87038", Offset = "0xB87038", VA = "0xB87038")]
		public float PlaneToSpline(float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xB87060", Offset = "0xB87060", VA = "0xB87060")]
		public TrackPoint PlaneToSplineTrackPoint(int y)
		{
			return default(TrackPoint);
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xB870A8", Offset = "0xB870A8", VA = "0xB870A8")]
		public Vector2 SplinePosToPlanePos(Vector2 splinePos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xB870D4", Offset = "0xB870D4", VA = "0xB870D4")]
		public Transform AddAfter(Transform beforeTrans)
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xB87280", Offset = "0xB87280", VA = "0xB87280")]
		public void Remove(Transform nodeToRemove)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xB87308", Offset = "0xB87308", VA = "0xB87308")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C1C80", Offset = "0x9C1C80")]
		public void CopyNonLayerData()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xB87360", Offset = "0xB87360", VA = "0xB87360")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xB87578", Offset = "0xB87578", VA = "0xB87578")]
		public TrackFrameRegion GetAt(int layer, int i)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xB875DC", Offset = "0xB875DC", VA = "0xB875DC")]
		public TrackRegionTile GetTileAt(int layer, int i)
		{
			return null;
		}
	}
}
namespace Coplanar.Menu
{
	[Token(Token = "0x20000E5")]
	public class EventSelectMenu : Menu, IContext
	{
		[Token(Token = "0x2000202")]
		private enum UIEvents
		{
			[Token(Token = "0x4000F8B")]
			NEXT,
			[Token(Token = "0x4000F8C")]
			PREV
		}

		[Token(Token = "0x2000203")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE29C", Offset = "0x9BE29C")]
		private sealed class <PlayLevel_CR>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventSelectMenu <>4__this;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B53")]
				[Address(RVA = "0xBC5F80", Offset = "0xBC5F80", VA = "0xBC5F80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B55")]
				[Address(RVA = "0xBC5FEC", Offset = "0xBC5FEC", VA = "0xBC5FEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xBC2718", Offset = "0xBC2718", VA = "0xBC2718")]
			[DebuggerHidden]
			public <PlayLevel_CR>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xBC5DC8", Offset = "0xBC5DC8", VA = "0xBC5DC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B52")]
			[Address(RVA = "0xBC5DCC", Offset = "0xBC5DCC", VA = "0xBC5DCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B54")]
			[Address(RVA = "0xBC5F88", Offset = "0xBC5F88", VA = "0xBC5F88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE2AC", Offset = "0x9BE2AC")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int visibleCompCount;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EventSelectMenu <>4__this;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int dummyIndex;

			[Token(Token = "0x6000B56")]
			[Address(RVA = "0xBC29CC", Offset = "0xBC29CC", VA = "0xBC29CC")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6000B57")]
			[Address(RVA = "0xBC5A08", Offset = "0xBC5A08", VA = "0xBC5A08")]
			internal void <SetupDummyEventMenus>b__0(Competition c, int x)
			{
			}

			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xBC5A18", Offset = "0xBC5A18", VA = "0xBC5A18")]
			internal void <SetupDummyEventMenus>b__1(Competition comp, int compIndex)
			{
			}
		}

		[Token(Token = "0x2000205")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE2BC", Offset = "0x9BE2BC")]
		private sealed class <>c__DisplayClass32_1
		{
			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int compIndexCopy;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass32_0 CS$<>8__locals1;

			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xBC5D90", Offset = "0xBC5D90", VA = "0xBC5D90")]
			public <>c__DisplayClass32_1()
			{
			}

			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xBC5D98", Offset = "0xBC5D98", VA = "0xBC5D98")]
			internal void <SetupDummyEventMenus>b__2()
			{
			}
		}

		[Token(Token = "0x2000206")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE2CC", Offset = "0x9BE2CC")]
		private sealed class <SpinDetails_CR>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIEvents uiEvent;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EventSelectMenu <>4__this;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <done>5__3;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			private bool <eventTriggered>5__4;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <multiplier>5__5;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <speed>5__6;

			[Token(Token = "0x17000112")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B5E")]
				[Address(RVA = "0xBC6250", Offset = "0xBC6250", VA = "0xBC6250", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000113")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B60")]
				[Address(RVA = "0xBC62BC", Offset = "0xBC62BC", VA = "0xBC62BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xBC5898", Offset = "0xBC5898", VA = "0xBC5898")]
			[DebuggerHidden]
			public <SpinDetails_CR>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xBC5FF4", Offset = "0xBC5FF4", VA = "0xBC5FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xBC5FF8", Offset = "0xBC5FF8", VA = "0xBC5FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xBC6258", Offset = "0xBC6258", VA = "0xBC6258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int gotoLevelIndex;

		[Token(Token = "0x4000865")]
		public const string bikeProgressionMessageID = "BIKEPROGMESSAGE";

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int currentEvent;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CompAndBikeSelectMenu compAndBikeSelectMenu;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button bikeSelectButton;

		[NonSerialized]
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform camMount;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 origin;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 camMountOrigin;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Competition competition;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LevelController currentLevel;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool startedMove;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool uiEnabled;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool startingRaceEvent;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool racedYet;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int gainFocusFrame;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool AnimatingUI;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine animationCR;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<UIEvents> uiEventQueue;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int displayed_MPLobbyPlayerCount;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int displayed_playersOnAlertCount;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> dummyEventMenus;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float changeCompTime;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool needToShowBikeMessage;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool moveToHighestLevel;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject compUnlockAnimObject;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool compUnlockAnimInProgress;

		[Token(Token = "0x17000073")]
		public int PointsNeededForNextTier
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xBC2428", Offset = "0xBC2428", VA = "0xBC2428")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000074")]
		public bool HigherTierExists
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xBC238C", Offset = "0xBC238C", VA = "0xBC238C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000075")]
		private int NumPages
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xBC5614", Offset = "0xBC5614", VA = "0xBC5614")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xBC0EBC", Offset = "0xBC0EBC", VA = "0xBC0EBC", Slot = "4")]
		public override void OnPushed()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xBC0FD4", Offset = "0xBC0FD4", VA = "0xBC0FD4", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xBC1530", Offset = "0xBC1530", VA = "0xBC1530")]
		public static void UpdateAlertPanel(MenuReferences mref, ref int displayed_MPLobbyPlayerCount, ref int displayed_playersOnAlertCount)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xBC1A20", Offset = "0xBC1A20", VA = "0xBC1A20")]
		private GameObject SpawnNewCompPopup()
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xBC1B08", Offset = "0xBC1B08", VA = "0xBC1B08", Slot = "10")]
		public override UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xBC1B88", Offset = "0xBC1B88", VA = "0xBC1B88", Slot = "7")]
		public override void OnLoseFocus()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xBC1E34", Offset = "0xBC1E34", VA = "0xBC1E34")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xBC1750", Offset = "0xBC1750", VA = "0xBC1750")]
		private void Back()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xBC21F4", Offset = "0xBC21F4", VA = "0xBC21F4")]
		private void OnConfirmButton()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xBC26A4", Offset = "0xBC26A4", VA = "0xBC26A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1CB8", Offset = "0x9C1CB8")]
		private IEnumerator PlayLevel_CR()
		{
			return null;
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xBC2744", Offset = "0xBC2744", VA = "0xBC2744")]
		private void SetupDummyEventMenus()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xBC2BB4", Offset = "0xBC2BB4", VA = "0xBC2BB4", Slot = "6")]
		public override void OnGainFocus()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xBC1D30", Offset = "0xBC1D30", VA = "0xBC1D30")]
		private void DisableAllDummyMenus()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xBC24AC", Offset = "0xBC24AC", VA = "0xBC24AC")]
		private void ChoseComp(int index)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xBC2C98", Offset = "0xBC2C98", VA = "0xBC2C98")]
		public static bool SetBikeIndex(int bike)
		{
			return default(bool);
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xBC2D6C", Offset = "0xBC2D6C", VA = "0xBC2D6C")]
		private void ChoseBike(int bike)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xBC29D4", Offset = "0xBC29D4", VA = "0xBC29D4")]
		private void EnumVisibleCompetitions(bool hideLatest, Action<Competition, int> fn)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xBC2F84", Offset = "0xBC2F84", VA = "0xBC2F84")]
		private void ClearNewBikeHint()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xBC1924", Offset = "0xBC1924", VA = "0xBC1924")]
		private bool ShouldShowPopup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xBC2FB4", Offset = "0xBC2FB4", VA = "0xBC2FB4", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xBC5250", Offset = "0xBC5250", VA = "0xBC5250")]
		public static int AddPointPips(LevelController.Victory victory, Transform parent, bool active, ref List<Transform> transformList)
		{
			return default(int);
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xBC54CC", Offset = "0xBC54CC", VA = "0xBC54CC")]
		public static bool IsTopTier(int competitionIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xBC4EF8", Offset = "0xBC4EF8", VA = "0xBC4EF8")]
		public static void WriteTargetTextFields(LevelController lc, MenuReferences mref)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xBC5658", Offset = "0xBC5658", VA = "0xBC5658")]
		private void ChangeTrackIndex(int delta)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xBC56B0", Offset = "0xBC56B0", VA = "0xBC56B0")]
		private void Next()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xBC57A4", Offset = "0xBC57A4", VA = "0xBC57A4")]
		private void Prev()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xBC18A0", Offset = "0xBC18A0", VA = "0xBC18A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1D1C", Offset = "0x9C1D1C")]
		private IEnumerator SpinDetails_CR(UIEvents uiEvent)
		{
			return null;
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xBC58C4", Offset = "0xBC58C4", VA = "0xBC58C4")]
		private void TriggerEvent(UIEvents uiEvent)
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xBC2ECC", Offset = "0xBC2ECC", VA = "0xBC2ECC")]
		public void OnBikeChanged()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xBC58E4", Offset = "0xBC58E4", VA = "0xBC58E4")]
		public EventSelectMenu()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xBC59D0", Offset = "0xBC59D0", VA = "0xBC59D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1D80", Offset = "0x9C1D80")]
		private void <Awake>b__27_0()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xBC5A04", Offset = "0xBC5A04", VA = "0xBC5A04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1D90", Offset = "0x9C1D90")]
		private void <Awake>b__27_1()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class HelmetMenu : Menu, IContext
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button okButton;

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xBC62C4", Offset = "0xBC62C4", VA = "0xBC62C4")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xBC63B8", Offset = "0xBC63B8", VA = "0xBC63B8")]
		private void Dismiss(bool useHelmet)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xBC6588", Offset = "0xBC6588", VA = "0xBC6588", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xBC65EC", Offset = "0xBC65EC", VA = "0xBC65EC", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xBC66FC", Offset = "0xBC66FC", VA = "0xBC66FC")]
		public HelmetMenu()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xBC6704", Offset = "0xBC6704", VA = "0xBC6704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1DA0", Offset = "0x9C1DA0")]
		private void <Awake>b__1_0()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xBC670C", Offset = "0xBC670C", VA = "0xBC670C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1DB0", Offset = "0x9C1DB0")]
		private void <Awake>b__1_1()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class LeaderBoard : Menu, IContext
	{
		[Token(Token = "0x2000207")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE2DC", Offset = "0x9BE2DC")]
		private sealed class <PlayLevel_CR>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LeaderBoard <>4__this;

			[Token(Token = "0x17000114")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B64")]
				[Address(RVA = "0xBC9AA0", Offset = "0xBC9AA0", VA = "0xBC9AA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000115")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B66")]
				[Address(RVA = "0xBC9B0C", Offset = "0xBC9B0C", VA = "0xBC9B0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xBC75E0", Offset = "0xBC75E0", VA = "0xBC75E0")]
			[DebuggerHidden]
			public <PlayLevel_CR>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xBC9720", Offset = "0xBC9720", VA = "0xBC9720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xBC9724", Offset = "0xBC9724", VA = "0xBC9724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xBC9AA8", Offset = "0xBC9AA8", VA = "0xBC9AA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400087F")]
		public const int NUM_TRACK_FOR_TRACK_OF_THE_WEEK = 11;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI ranks;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI names;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI scores;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button modeButton;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI noInternetMessage;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int currentLevelIndex;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CompAndBikeSelectMenu compAndBikeSelectMenu;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool uiNoInternet;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float testTime;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string testTable;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int displayed_MPLobbyPlayerCount;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int displayed_playersOnAlertCount;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool uiEnabled;

		[Token(Token = "0x400088D")]
		private const string WEEKLY_CHALLENGE_SUFFIX = "_WEEKLY_V2";

		[Token(Token = "0x17000076")]
		private SplineTrack CurrentTrack
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xBC6714", Offset = "0xBC6714", VA = "0xBC6714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private bool IsWeeklyChallenge
		{
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0xBC8134", Offset = "0xBC8134", VA = "0xBC8134")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000078")]
		private bool IsSpecialEvent
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0xBC8144", Offset = "0xBC8144", VA = "0xBC8144")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xBC6938", Offset = "0xBC6938", VA = "0xBC6938")]
		private SplineTrack SpecialEventTrack()
		{
			return null;
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xBC67F0", Offset = "0xBC67F0", VA = "0xBC67F0")]
		private SplineTrack TrackOfTheWeek()
		{
			return null;
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xBC6A90", Offset = "0xBC6A90", VA = "0xBC6A90")]
		private void MoveForwardToValidLevel()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xBC6B7C", Offset = "0xBC6B7C", VA = "0xBC6B7C", Slot = "4")]
		public override void OnPushed()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xBC6C0C", Offset = "0xBC6C0C", VA = "0xBC6C0C")]
		private void ChoseBike(int bike)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xBC6D64", Offset = "0xBC6D64", VA = "0xBC6D64", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xBC70A4", Offset = "0xBC70A4", VA = "0xBC70A4", Slot = "7")]
		public override void OnLoseFocus()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xBC70A8", Offset = "0xBC70A8", VA = "0xBC70A8")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xBC738C", Offset = "0xBC738C", VA = "0xBC738C")]
		private void NextMode()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xBC700C", Offset = "0xBC700C", VA = "0xBC700C")]
		private void Back()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xBC7430", Offset = "0xBC7430", VA = "0xBC7430")]
		private void PlayLevel()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xBC756C", Offset = "0xBC756C", VA = "0xBC756C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1DC0", Offset = "0x9C1DC0")]
		private IEnumerator PlayLevel_CR()
		{
			return null;
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xBC760C", Offset = "0xBC760C", VA = "0xBC760C", Slot = "6")]
		public override void OnGainFocus()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xBC7834", Offset = "0xBC7834", VA = "0xBC7834")]
		private void LeaderboardCallBack(string table, LeaderBoardManager.ViewMode viewMode, SortedDictionary<int, LeaderBoardManager.LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xBC7B4C", Offset = "0xBC7B4C", VA = "0xBC7B4C")]
		private string GetCurrentTableName(bool forWrite = false)
		{
			return null;
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xBC7C7C", Offset = "0xBC7C7C", VA = "0xBC7C7C")]
		public static string GetTableName(SplineTrack track, int bikeIndex, bool test, bool weekly, bool specialEvent = false)
		{
			return null;
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xBC7DE0", Offset = "0xBC7DE0", VA = "0xBC7DE0")]
		private string GetTitleText()
		{
			return null;
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xBC8154", Offset = "0xBC8154", VA = "0xBC8154")]
		private SimpleTrack.PickupType TrackOfTheWeekPickup()
		{
			return default(SimpleTrack.PickupType);
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xBC8230", Offset = "0xBC8230", VA = "0xBC8230", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xBC92D0", Offset = "0xBC92D0", VA = "0xBC92D0")]
		private void Next()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xBC9450", Offset = "0xBC9450", VA = "0xBC9450")]
		private void Prev()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xBC6CAC", Offset = "0xBC6CAC", VA = "0xBC6CAC")]
		public void OnBikeChanged()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xBC6F78", Offset = "0xBC6F78", VA = "0xBC6F78")]
		private void QueryCurrentTable()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xBC96D4", Offset = "0xBC96D4", VA = "0xBC96D4")]
		public LeaderBoard()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xBC96EC", Offset = "0xBC96EC", VA = "0xBC96EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1E24", Offset = "0x9C1E24")]
		private void <Awake>b__22_0()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xBC9718", Offset = "0xBC9718", VA = "0xBC9718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1E34", Offset = "0x9C1E34")]
		private void <Awake>b__22_1()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xBC971C", Offset = "0xBC971C", VA = "0xBC971C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1E44", Offset = "0x9C1E44")]
		private void <Awake>b__22_2()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class LoadingScreen : SingletonMono<LoadingScreen>, IContext
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject screen;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject overlay;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float showTime;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xBC9B14", Offset = "0xBC9B14", VA = "0xBC9B14", Slot = "12")]
		public virtual void OnPushed()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xBC9B18", Offset = "0xBC9B18", VA = "0xBC9B18", Slot = "13")]
		public virtual void OnPopped()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xBC9B1C", Offset = "0xBC9B1C", VA = "0xBC9B1C", Slot = "5")]
		public void OnGainFocus()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xBC9C48", Offset = "0xBC9C48", VA = "0xBC9C48")]
		private GameObject GetLoadingScreen()
		{
			return null;
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xBC9EA4", Offset = "0xBC9EA4", VA = "0xBC9EA4", Slot = "8")]
		public void OnLoseFocus()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xBC9F30", Offset = "0xBC9F30", VA = "0xBC9F30", Slot = "9")]
		public void ContextUpdate()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xBC9F34", Offset = "0xBC9F34", VA = "0xBC9F34", Slot = "10")]
		public List<ContextManager.Property> GetProps()
		{
			return null;
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xBC9F98", Offset = "0xBC9F98", VA = "0xBC9F98", Slot = "11")]
		public UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xBCA018", Offset = "0xBCA018", VA = "0xBCA018")]
		public static void Show()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xBB5FDC", Offset = "0xBB5FDC", VA = "0xBB5FDC")]
		public static float GetShowDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xBB606C", Offset = "0xBB606C", VA = "0xBB606C")]
		public static void Hide()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xBCA0F4", Offset = "0xBCA0F4", VA = "0xBCA0F4")]
		public LoadingScreen()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public abstract class MenuItem
	{
		[Token(Token = "0x60007C6")]
		public abstract void BuildUGUI(MenuReferences mref);

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xBCA804", Offset = "0xBCA804", VA = "0xBCA804", Slot = "5")]
		public virtual void InvokeUICallbacksWithConfirm()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xBCA808", Offset = "0xBCA808", VA = "0xBCA808")]
		protected MenuItem()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public abstract class Menu : MonoBehaviour
	{
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected MenuReferences mref;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Canvas canvas;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected GameObject medal;

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xBBC604", Offset = "0xBBC604", VA = "0xBBC604")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xBC2F78", Offset = "0xBC2F78", VA = "0xBC2F78")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xBCA41C", Offset = "0xBCA41C", VA = "0xBCA41C", Slot = "4")]
		public virtual void OnPushed()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xBCA420", Offset = "0xBCA420", VA = "0xBCA420", Slot = "5")]
		public virtual void OnPopped()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xBBED18", Offset = "0xBBED18", VA = "0xBBED18", Slot = "6")]
		public virtual void OnGainFocus()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xBC1C18", Offset = "0xBC1C18", VA = "0xBC1C18", Slot = "7")]
		public virtual void OnLoseFocus()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xBCA424", Offset = "0xBCA424", VA = "0xBCA424", Slot = "8")]
		public virtual void ContextUpdate()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xBCA428", Offset = "0xBCA428", VA = "0xBCA428")]
		protected void SetNextAndPrevFns(Action next, Action prev)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xBCA524", Offset = "0xBCA524", VA = "0xBCA524", Slot = "9")]
		public virtual List<ContextManager.Property> GetProps()
		{
			return null;
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xBCA5AC", Offset = "0xBCA5AC", VA = "0xBCA5AC", Slot = "10")]
		public virtual UniversalCameraSettings GetCamSettings()
		{
			return null;
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xBCA62C", Offset = "0xBCA62C", VA = "0xBCA62C")]
		protected void AddConfirmButton(Action fn, string label, bool disabled = false)
		{
		}

		[Token(Token = "0x60007D4")]
		protected abstract void RebuildMenu();

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xBC0618", Offset = "0xBC0618", VA = "0xBC0618")]
		public static void TransitionSound()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xBBC690", Offset = "0xBBC690", VA = "0xBBC690")]
		protected void CreateMedal()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xBBDC6C", Offset = "0xBBDC6C", VA = "0xBBDC6C")]
		public static bool SetupMedal(GameObject medal, BlurGlobals.Difficulty diffLevel, LevelController.Victory victory, bool appearAnim = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xBC4E7C", Offset = "0xBC4E7C", VA = "0xBC4E7C")]
		protected bool SetupMedalLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xBBDFA8", Offset = "0xBBDFA8", VA = "0xBBDFA8")]
		protected Menu()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class MenuManager : SingletonMono<MenuManager>
	{
		[Token(Token = "0x2000208")]
		private class MenuState
		{
			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Menu menu;

			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xBCA810", Offset = "0xBCA810", VA = "0xBCA810")]
			public MenuState()
			{
			}
		}

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, MenuState> menuStates;

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xBBF37C", Offset = "0xBBF37C", VA = "0xBBF37C")]
		public Menu Activate(Type menuType, bool popCurrent = false, [Optional] Action<Menu> initFn)
		{
			return null;
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xBCA818", Offset = "0xBCA818", VA = "0xBCA818")]
		public MenuManager()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class MenuReferences : MonoBehaviour
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI alertText;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI standbyLabel;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject alertPanel;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SteeringPreview steeringPreview;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image[] tabs;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF5E0", Offset = "0x9BF5E0")]
		public GameObject NextCompetitionPage;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject NextCompetitionText;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject NextCompetitionPointsKey;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject detailsPanel;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject raceDetails;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject leanWarningMessage;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject leanDisabledMessage;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF618", Offset = "0x9BF618")]
		public TextMeshProUGUI title;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform mainLayout;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform comfirmLayout;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform progressLayout;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform selectedEventDotsLayout;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Image bigIcon;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Image smallIcon;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform medalAnchor;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TextMeshProUGUI medalText;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TextMeshProUGUI trackNameText;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public TextMeshProUGUI gameModeText;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public TextMeshProUGUI numLapsTitleText;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TextMeshProUGUI speedTitleText;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TextMeshProUGUI[] extraDetailTitles;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TextMeshProUGUI numLapsText;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public TextMeshProUGUI messageText;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public TextMeshProUGUI versionText;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TextMeshProUGUI speedText;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI[] extraDetailTexts;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public TextMeshProUGUI[] targetTexts;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject targetsParent;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public TextMeshProUGUI targetsTitle;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Button nextButton;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Button prevButton;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Button optionsButton;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Button shopButton;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Button confirmButton;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Button backButton;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Button changeBikeButton;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Button[] voltButtons;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Button[] competitionButtons;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public GameObject newEventsHint;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject newCompHint;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject newBikeHint;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public TextMeshProUGUI centerMessage;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public AudioSource audioSource;

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xBCA8B0", Offset = "0xBCA8B0", VA = "0xBCA8B0")]
		public void AddToMainLayout(Transform item)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xBCA8D8", Offset = "0xBCA8D8", VA = "0xBCA8D8")]
		public MenuReferences()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class MPAlertsDialog : Menu, IContext
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool lastResult;

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xBCA164", Offset = "0xBCA164", VA = "0xBCA164")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xBCA258", Offset = "0xBCA258", VA = "0xBCA258")]
		private void Dismiss(bool enableAlerts)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xBCA2FC", Offset = "0xBCA2FC", VA = "0xBCA2FC", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xBCA360", Offset = "0xBCA360", VA = "0xBCA360", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xBCA404", Offset = "0xBCA404", VA = "0xBCA404")]
		public MPAlertsDialog()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xBCA40C", Offset = "0xBCA40C", VA = "0xBCA40C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1E54", Offset = "0x9C1E54")]
		private void <Awake>b__1_0()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xBCA414", Offset = "0xBCA414", VA = "0xBCA414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1E64", Offset = "0x9C1E64")]
		private void <Awake>b__1_1()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public abstract class OptionsMenu : Menu, IContext
	{
		[Token(Token = "0x2000209")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE2EC", Offset = "0x9BE2EC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int> fn;

			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xBCB334", Offset = "0xBCB334", VA = "0xBCB334")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xBCB7F4", Offset = "0xBCB7F4", VA = "0xBCB7F4")]
			internal void <AddChoiceItem>b__1(int x)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200020A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE2FC", Offset = "0x9BE2FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, Dropdown.OptionData> <>9__6_0;

			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xBCB788", Offset = "0xBCB788", VA = "0xBCB788")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xBCB790", Offset = "0xBCB790", VA = "0xBCB790")]
			internal Dropdown.OptionData <AddChoiceItem>b__6_0(string x)
			{
				return null;
			}
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xBCA8E0", Offset = "0xBCA8E0", VA = "0xBCA8E0", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x60007E6")]
		protected abstract void BuildMenu();

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xBCABDC", Offset = "0xBCABDC", VA = "0xBCABDC")]
		protected void SetTitle(string title)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xBCAC08", Offset = "0xBCAC08", VA = "0xBCAC08")]
		protected void AddButton(string name, Action fn, bool disabled = false)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xBCADE0", Offset = "0xBCADE0", VA = "0xBCADE0")]
		protected void AddLabel(string text)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xBCAF0C", Offset = "0xBCAF0C", VA = "0xBCAF0C")]
		protected void AddCancelAndOk(Action cancelFn, Action okFn)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xBCB02C", Offset = "0xBCB02C", VA = "0xBCB02C")]
		protected void AddChoiceItem(string label, Action<int> fn, int initialValue, bool interactable, params string[] options)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xBCB33C", Offset = "0xBCB33C", VA = "0xBCB33C")]
		protected void AddSpacer(float space)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xBCB4F0", Offset = "0xBCB4F0", VA = "0xBCB4F0")]
		protected void AddSlider(string label, Action<float> fn, float currentValue, bool interactable, float min, float max)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xBCB71C", Offset = "0xBCB71C", VA = "0xBCB71C")]
		protected OptionsMenu()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class Raceopedia : Menu, IContext
	{
		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI titleHigh;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI titleLow;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshFilter wireIcon;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshFilter solidIcon;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform mainImageParent;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int pageIndex;

		[Token(Token = "0x17000079")]
		private int NumPages
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0xBCC060", Offset = "0xBCC060", VA = "0xBCC060")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xBCB85C", Offset = "0xBCB85C", VA = "0xBCB85C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xBCB99C", Offset = "0xBCB99C", VA = "0xBCB99C", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xBCBF38", Offset = "0xBCBF38", VA = "0xBCBF38")]
		private void Clamp()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xBCC07C", Offset = "0xBCC07C", VA = "0xBCC07C", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xBCC1A0", Offset = "0xBCC1A0", VA = "0xBCC1A0")]
		private void Next()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xBCC1FC", Offset = "0xBCC1FC", VA = "0xBCC1FC")]
		private void Prev()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xBCC11C", Offset = "0xBCC11C", VA = "0xBCC11C")]
		private void Back()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xBCC258", Offset = "0xBCC258", VA = "0xBCC258")]
		public Raceopedia()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xBCC260", Offset = "0xBCC260", VA = "0xBCC260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1E74", Offset = "0x9C1E74")]
		private void <Awake>b__7_0()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class RaceopediaPage : MonoBehaviour
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int pickupItemIndex;

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xBCC264", Offset = "0xBCC264", VA = "0xBCC264")]
		public RaceopediaPage()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class TierSelectEventPanel : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI title;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TierSelectTierPanel tierPanel;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TierSelectMenu tierSelectMenu;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pointsGrid;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform medalAnchor;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image backgroundImage;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Medal miniLock;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool locked;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int competitionIndex;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int levelIndex;

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xBCC274", Offset = "0xBCC274", VA = "0xBCC274", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xBCC460", Offset = "0xBCC460", VA = "0xBCC460", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xBCC544", Offset = "0xBCC544", VA = "0xBCC544", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xBCC634", Offset = "0xBCC634", VA = "0xBCC634")]
		public void OnMenuGainFocus()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xBCC6D4", Offset = "0xBCC6D4", VA = "0xBCC6D4")]
		private static float ChooseWireThickness(LevelController.Victory vic, BlurGlobals.Difficulty diff)
		{
			return default(float);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xBCC700", Offset = "0xBCC700", VA = "0xBCC700")]
		private static float ChooseWireIntensity(LevelController.Victory vic, BlurGlobals.Difficulty diff)
		{
			return default(float);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xBCC71C", Offset = "0xBCC71C", VA = "0xBCC71C")]
		internal void Rebuild(TierSelectMenu tierSelectMenu, int competitionIndex, int levelIndex, TierSelectTierPanel tierPanel, BlurGlobals.Difficulty minMedalDiff)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xBCCC1C", Offset = "0xBCCC1C", VA = "0xBCCC1C")]
		internal void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xBCCC68", Offset = "0xBCCC68", VA = "0xBCCC68")]
		public TierSelectEventPanel()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class TierSelectMenu : Menu, IContext
	{
		[Serializable]
		[Token(Token = "0x200020B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE30C", Offset = "0x9BE30C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__5_1;

			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xBCE010", Offset = "0xBCE010", VA = "0xBCE010")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xBCE018", Offset = "0xBCE018", VA = "0xBCE018")]
			internal void <Awake>b__5_1()
			{
			}
		}

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] panels;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BlurGlobals.Difficulty minMedalDiff;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int displayed_MPLobbyPlayerCount;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int displayed_playersOnAlertCount;

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xBCCC70", Offset = "0xBCCC70", VA = "0xBCCC70", Slot = "19")]
		public new virtual void OnGainFocus()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xBCD05C", Offset = "0xBCD05C", VA = "0xBCD05C")]
		public void OnMediumFilter(bool on)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xBCD080", Offset = "0xBCD080", VA = "0xBCD080")]
		public void OnHardFilter(bool on)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xBCD0AC", Offset = "0xBCD0AC", VA = "0xBCD0AC")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xBCD204", Offset = "0xBCD204", VA = "0xBCD204", Slot = "11")]
		protected override void RebuildMenu()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xBCDD08", Offset = "0xBCDD08", VA = "0xBCDD08")]
		public void OnPanelFocussed(TierSelectTierPanel focussedPanel)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xBCC294", Offset = "0xBCC294", VA = "0xBCC294")]
		public void OnClick(int competitionIndex, int levelIndex = -1)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xBCDE08", Offset = "0xBCDE08", VA = "0xBCDE08")]
		public void SetMessage(string text)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xBCCFF4", Offset = "0xBCCFF4", VA = "0xBCCFF4")]
		public void ClearMessage()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xBCDE34", Offset = "0xBCDE34", VA = "0xBCDE34", Slot = "8")]
		public override void ContextUpdate()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xBCDF1C", Offset = "0xBCDF1C", VA = "0xBCDF1C")]
		private void Back()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xBCDFA0", Offset = "0xBCDFA0", VA = "0xBCDFA0")]
		public TierSelectMenu()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xBCDFA8", Offset = "0xBCDFA8", VA = "0xBCDFA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1E84", Offset = "0x9C1E84")]
		private void <Awake>b__5_0()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class TierSelectTierPanel : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI title;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI pointsText;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform panelRoot;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lockAnchor;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ySpinScale;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve zCurve;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TierSelectMenu tierSelectMenu;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int competitionIndex;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastTouchTime;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool touching;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float progress;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float zPos;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool movingFwd;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool debug;

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xBCCD38", Offset = "0xBCCD38", VA = "0xBCCD38")]
		internal void OnMenuGainFocus()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xBCE4AC", Offset = "0xBCE4AC", VA = "0xBCE4AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xBCE548", Offset = "0xBCE548", VA = "0xBCE548", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xBCE56C", Offset = "0xBCE56C", VA = "0xBCE56C")]
		private float GetProgress(AnimationCurve curve, float pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xBCE5E4", Offset = "0xBCE5E4", VA = "0xBCE5E4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xBCE64C", Offset = "0xBCE64C", VA = "0xBCE64C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xBCDE00", Offset = "0xBCDE00", VA = "0xBCDE00")]
		internal void ClearFocus()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xBCE650", Offset = "0xBCE650", VA = "0xBCE650", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xBCE680", Offset = "0xBCE680", VA = "0xBCE680")]
		private void StartMoveFwd()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xBCE038", Offset = "0xBCE038", VA = "0xBCE038")]
		private void Update()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xBCC52C", Offset = "0xBCC52C", VA = "0xBCC52C")]
		public void SetMessage(string text)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xBCC608", Offset = "0xBCC608", VA = "0xBCC608")]
		public void ClearMessage()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xBCE684", Offset = "0xBCE684", VA = "0xBCE684")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C1E94", Offset = "0x9C1E94")]
		public void SetLockOnAllButFirst_True()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xBCE68C", Offset = "0xBCE68C", VA = "0xBCE68C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C1ECC", Offset = "0x9C1ECC")]
		public void SetLockOnAllButFirst_False()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xBCDC50", Offset = "0xBCDC50", VA = "0xBCDC50")]
		public void SetLockOnAllButFirst(bool locked)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xBCD36C", Offset = "0xBCD36C", VA = "0xBCD36C")]
		public void Rebuild(int competitionIndex, TierSelectMenu tierSelectMenu, BlurGlobals.Difficulty minMedalDiff)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xBCE694", Offset = "0xBCE694", VA = "0xBCE694")]
		public TierSelectTierPanel()
		{
		}
	}
}
namespace Coplanar.Blur.Scripts.AI
{
	[Token(Token = "0x20000F4")]
	public class BikeAI : MonoBehaviour
	{
		[Token(Token = "0x200020C")]
		public enum State
		{
			[Token(Token = "0x4000FA8")]
			LooselySeeking,
			[Token(Token = "0x4000FA9")]
			Seeking,
			[Token(Token = "0x4000FAA")]
			SeekFollowBlend,
			[Token(Token = "0x4000FAB")]
			FollowFollowBlend,
			[Token(Token = "0x4000FAC")]
			Following
		}

		[Serializable]
		[Token(Token = "0x200020D")]
		public struct StateSummary
		{
			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public State state;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int currentRecordingLap;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float nextBranchY;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int branchLapDest;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nextBranchLap;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float followFollowBlend;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 oldPos;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2 renderPos;

			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xA5AD60", Offset = "0xA5AD60", VA = "0xA5AD60")]
			public void Serialize(SimpleSerializer ss)
			{
			}

			[Token(Token = "0x6000B71")]
			[Address(RVA = "0xA5AD68", Offset = "0xA5AD68", VA = "0xA5AD68")]
			public void Deserialize(SimpleDeserializer sd)
			{
			}
		}

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter bikeBody;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BikeAIParams ai;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform characterParent;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform characterRoot;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RiderModelManager riderModelManager;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RecordingRunner recRunner;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public State state;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float blendProgress;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float blendPeriod;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool showDebugInfo;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BikeModelManager bikeModelManager;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaceController raceController;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BikeSim bikeSim;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastRenderPos;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion renderRot;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 renderPos;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool aiMayDetachFromRoute;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float hover_amp;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float hover_freq;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float errorIntergrated;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float previousError;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject targetGhost;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastSwitchPoint;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float error;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float errorDifference;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float bankError;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float signedSpeedError;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float headingError;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float errorTerm;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float intTerm;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float difTerm;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float headingErrorTerm;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float headingTerm;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float input;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string bikeLog;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Rigidbody rigidBody;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject iceVirusObject;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Vector3 lightCookieEuler;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float lightCookieScale;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float lightCookieScaleBob;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float bobHeight;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int consecutiveDetachDecisions;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RecordingRunner.State oldRecRunnerState;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RecordingRunner.State recRunnerState;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RecordingMetaData.RoutePoint pointOldRoute;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int startLap;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Trans Update_worldPos;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Func<bool> Update_Race_Driving_TakeDecider_delegate;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Trans tempTrans;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool madeItemPlan;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float planExecuteTime;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int haveTargetCount;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xB63888", Offset = "0xB63888", VA = "0xB63888")]
		public StateSummary GetStateSummary()
		{
			return default(StateSummary);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xB6391C", Offset = "0xB6391C", VA = "0xB6391C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9C1F04", Offset = "0x9C1F04")]
		private void Log(string s)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xB63A00", Offset = "0xB63A00", VA = "0xB63A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xB63C24", Offset = "0xB63C24", VA = "0xB63C24")]
		public void Init(TournamentRacer racer)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xB63DBC", Offset = "0xB63DBC", VA = "0xB63DBC")]
		public static GameObject SetupIceAttackEffect(Transform t, Vector2 pos, bool effective)
		{
			return null;
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xB64284", Offset = "0xB64284", VA = "0xB64284")]
		public static void DestroyIceAttackEffect(GameObject go)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xB642EC", Offset = "0xB642EC", VA = "0xB642EC")]
		public void OnEvent(BikeSim.Event e)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xB64434", Offset = "0xB64434", VA = "0xB64434")]
		private void Start()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xB64784", Offset = "0xB64784", VA = "0xB64784")]
		private void OnBikeCrash(RacerBase bike)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xB64788", Offset = "0xB64788", VA = "0xB64788")]
		public void ConnectToRecRunner(RecordingRunner recRunner)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xB64910", Offset = "0xB64910", VA = "0xB64910")]
		private void Update()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xB64F50", Offset = "0xB64F50", VA = "0xB64F50")]
		public static void SetRiderModelVisibility(Transform transform)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xB64F00", Offset = "0xB64F00", VA = "0xB64F00")]
		private void Update_Prestart()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xB64E64", Offset = "0xB64E64", VA = "0xB64E64")]
		private void Update_Race()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xB64E14", Offset = "0xB64E14", VA = "0xB64E14")]
		private void Update_VideoPlayback()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xB661E4", Offset = "0xB661E4", VA = "0xB661E4")]
		private bool Update_Race_Driving_TakeDecider()
		{
			return default(bool);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xB650F8", Offset = "0xB650F8", VA = "0xB650F8")]
		private void Update_Race_Driving()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xB65F64", Offset = "0xB65F64", VA = "0xB65F64")]
		private void Update_Race_Items()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xB66368", Offset = "0xB66368", VA = "0xB66368")]
		public static BikeAI CreateAIBike(string name, int aiBikeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xB666E0", Offset = "0xB666E0", VA = "0xB666E0")]
		public BikeAI()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class SimpleRecordingFileReader : IDisposable
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SimpleDeserializer sd;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ShipRecorder.RecordingOptions recordingOptions;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool has3DPositions;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool hasRecordingOptions;

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xB668CC", Offset = "0xB668CC", VA = "0xB668CC")]
		private void CheckVersion(int version)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xB669A8", Offset = "0xB669A8", VA = "0xB669A8")]
		public SimpleRecordingFileReader(string fullPath)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xB66A28", Offset = "0xB66A28", VA = "0xB66A28")]
		private void ProcessHeader()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xB66A80", Offset = "0xB66A80", VA = "0xB66A80")]
		public SimpleRecordingFileReader(MemoryStream memStream)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xB66B00", Offset = "0xB66B00", VA = "0xB66B00")]
		public bool Read(out float time, out Vector2 pos, out float bank, out float heading, out float speed, ref BikeSim.State state, ref BikeAI.StateSummary aiState)
		{
			return default(bool);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xB66C74", Offset = "0xB66C74", VA = "0xB66C74", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace Devdog.SciFiDesign.UI
{
	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9BDADC", Offset = "0x9BDADC")]
	public class Dropdown : UnityEngine.UI.Dropdown
	{
		[Token(Token = "0x200020E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE31C", Offset = "0x9BE31C")]
		private sealed class <_GrowToSize>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dropdown <>4__this;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RectTransform rectTransform;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 <toSize>5__2;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__3;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector2 <fromSize>5__4;

			[Token(Token = "0x17000116")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B75")]
				[Address(RVA = "0xBD3D64", Offset = "0xBD3D64", VA = "0xBD3D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000117")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B77")]
				[Address(RVA = "0xBD3DD0", Offset = "0xBD3DD0", VA = "0xBD3DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xBD3A38", Offset = "0xBD3A38", VA = "0xBD3A38")]
			[DebuggerHidden]
			public <_GrowToSize>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xBD3B1C", Offset = "0xBD3B1C", VA = "0xBD3B1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xBD3B20", Offset = "0xBD3B20", VA = "0xBD3B20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xBD3D6C", Offset = "0xBD3D6C", VA = "0xBD3D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200020F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE32C", Offset = "0x9BE32C")]
		private sealed class <_ShrinkToSize>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RectTransform rectTransform;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 toSize;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dropdown <>4__this;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__2;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector2 <fromSize>5__3;

			[Token(Token = "0x17000118")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B7B")]
				[Address(RVA = "0xBD3F84", Offset = "0xBD3F84", VA = "0xBD3F84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000119")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B7D")]
				[Address(RVA = "0xBD3FF0", Offset = "0xBD3FF0", VA = "0xBD3FF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xBD3A64", Offset = "0xBD3A64", VA = "0xBD3A64")]
			[DebuggerHidden]
			public <_ShrinkToSize>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xBD3DD8", Offset = "0xBD3DD8", VA = "0xBD3DD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xBD3DDC", Offset = "0xBD3DDC", VA = "0xBD3DDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xBD3F8C", Offset = "0xBD3F8C", VA = "0xBD3F8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Sprite activeSprite;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Sprite inActiveSprite;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Image backgroundImage;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float slideSpeed;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public AnimationCurve animationCurve;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector2 _startSize;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private RectTransform _rectTransform;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Color _normalStartColor;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Color _imageStartColor;

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xBD3620", Offset = "0xBD3620", VA = "0xBD3620", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xBD36E0", Offset = "0xBD36E0", VA = "0xBD36E0", Slot = "45")]
		protected override GameObject CreateBlocker(Canvas rootCanvas)
		{
			return null;
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xBD38E4", Offset = "0xBD38E4", VA = "0xBD38E4", Slot = "46")]
		protected override void DestroyBlocker(GameObject blocker)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xBD3864", Offset = "0xBD3864", VA = "0xBD3864")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1F3C", Offset = "0x9C1F3C")]
		private IEnumerator _GrowToSize(RectTransform rectTransform)
		{
			return null;
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xBD39A0", Offset = "0xBD39A0", VA = "0xBD39A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C1FA0", Offset = "0x9C1FA0")]
		private IEnumerator _ShrinkToSize(RectTransform rectTransform, Vector2 toSize)
		{
			return null;
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xBD3A90", Offset = "0xBD3A90", VA = "0xBD3A90")]
		public Dropdown()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class GeneralUIHelper : MonoBehaviour
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xBD3FF8", Offset = "0xBD3FF8", VA = "0xBD3FF8")]
		public void DebugLog(string msg)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xBD4084", Offset = "0xBD4084", VA = "0xBD4084")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xBD408C", Offset = "0xBD408C", VA = "0xBD408C")]
		public void SwapSprite(Sprite sprite)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xBD40FC", Offset = "0xBD40FC", VA = "0xBD40FC")]
		public GeneralUIHelper()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class PointerUIHelper : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onPointerEnter;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onPointerExit;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onPointerDown;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onPointerUp;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onPointerClick;

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xBD4104", Offset = "0xBD4104", VA = "0xBD4104", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xBD4208", Offset = "0xBD4208", VA = "0xBD4208", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xBD430C", Offset = "0xBD430C", VA = "0xBD430C", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xBD4410", Offset = "0xBD4410", VA = "0xBD4410", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xBD4514", Offset = "0xBD4514", VA = "0xBD4514", Slot = "8")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xBD4618", Offset = "0xBD4618", VA = "0xBD4618")]
		public PointerUIHelper()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class SelectableUIHelper : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onSelect;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onDeselect;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xBD46E8", Offset = "0xBD46E8", VA = "0xBD46E8", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xBD4704", Offset = "0xBD4704", VA = "0xBD4704", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xBD4720", Offset = "0xBD4720", VA = "0xBD4720")]
		public SelectableUIHelper()
		{
		}
	}
}
namespace Devdog.General.UI
{
	[Token(Token = "0x20000FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BDB18", Offset = "0x9BDB18")]
	public sealed class AnimatorHelper : MonoBehaviour
	{
		[Token(Token = "0x2000210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE33C", Offset = "0x9BE33C")]
		private sealed class <PlayAnimationAfter>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimatorHelper <>4__this;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string animationName;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float[] paramsFloat;

			[Token(Token = "0x1700011A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B81")]
				[Address(RVA = "0xBD35AC", Offset = "0xBD35AC", VA = "0xBD35AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B83")]
				[Address(RVA = "0xBD3618", Offset = "0xBD3618", VA = "0xBD3618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0xBD343C", Offset = "0xBD343C", VA = "0xBD343C")]
			[DebuggerHidden]
			public <PlayAnimationAfter>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xBD3470", Offset = "0xBD3470", VA = "0xBD3470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xBD3474", Offset = "0xBD3474", VA = "0xBD3474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xBD35B4", Offset = "0xBD35B4", VA = "0xBD35B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Regex _animationNameRegex;

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xBD2E0C", Offset = "0xBD2E0C", VA = "0xBD2E0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xBD2E94", Offset = "0xBD2E94", VA = "0xBD2E94")]
		public void Play(string name)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xBD33B4", Offset = "0xBD33B4", VA = "0xBD33B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C2004", Offset = "0x9C2004")]
		private IEnumerator PlayAnimationAfter(string animationName, params float[] paramsFloat)
		{
			return null;
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xBD3468", Offset = "0xBD3468", VA = "0xBD3468")]
		public AnimatorHelper()
		{
		}
	}
}
namespace CPC_CameraPath
{
	[Token(Token = "0x20000FB")]
	public class CPC_DEMO_UpDown : MonoBehaviour
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 startPos;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float height;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xB80D80", Offset = "0xB80D80", VA = "0xB80D80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xB80DBC", Offset = "0xB80DBC", VA = "0xB80DBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xB80EFC", Offset = "0xB80EFC", VA = "0xB80EFC")]
		public CPC_DEMO_UpDown()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FC")]
	public class CPC_Visual
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color pathColor;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color inactivePathColor;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color frustrumColor;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color handleColor;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xB81028", Offset = "0xB81028", VA = "0xB81028")]
		public CPC_Visual()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public enum CPC_ECurveType
	{
		[Token(Token = "0x400093D")]
		EaseInAndOut,
		[Token(Token = "0x400093E")]
		Linear,
		[Token(Token = "0x400093F")]
		Custom
	}
	[Token(Token = "0x20000FE")]
	public enum CPC_EAfterLoop
	{
		[Token(Token = "0x4000941")]
		Continue,
		[Token(Token = "0x4000942")]
		Stop
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class CPC_Point
	{
		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 handleprev;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handlenext;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public CPC_ECurveType curveTypeRotation;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotationCurve;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CPC_ECurveType curveTypePosition;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve positionCurve;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool chained;

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xB80F04", Offset = "0xB80F04", VA = "0xB80F04")]
		public CPC_Point(Vector3 pos, Quaternion rot)
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class CPC_CameraPath : MonoBehaviour
	{
		[Token(Token = "0x2000211")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE34C", Offset = "0x9BE34C")]
		private sealed class <FollowPath>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CPC_CameraPath <>4__this;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B87")]
				[Address(RVA = "0xB80D0C", Offset = "0xB80D0C", VA = "0xB80D0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B89")]
				[Address(RVA = "0xB80D78", Offset = "0xB80D78", VA = "0xB80D78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xB808A4", Offset = "0xB808A4", VA = "0xB808A4")]
			[DebuggerHidden]
			public <FollowPath>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xB809C8", Offset = "0xB809C8", VA = "0xB809C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xB809CC", Offset = "0xB809CC", VA = "0xB809CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xB80D14", Offset = "0xB80D14", VA = "0xB80D14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useMainCamera;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform selectedCamera;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool lookAtTarget;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform target;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float playOnAwakeTime;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<CPC_Point> points;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CPC_Visual visual;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool looped;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool alwaysShow;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public CPC_EAfterLoop afterLoop;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int currentWaypointIndex;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float currentTimeInWaypoint;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timePerSegment;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool paused;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool playing;

		[NonSerialized]
		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pathTime;

		[NonSerialized]
		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float pathProgress;

		[NonSerialized]
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float skipAmount;

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xB7FA68", Offset = "0xB7FA68", VA = "0xB7FA68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xB7FD78", Offset = "0xB7FD78", VA = "0xB7FD78")]
		public void PlayPath(float time)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xB7BFCC", Offset = "0xB7BFCC", VA = "0xB7BFCC")]
		public void Restart()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xB7FE58", Offset = "0xB7FE58", VA = "0xB7FE58")]
		public void StopPath()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xB7FE64", Offset = "0xB7FE64", VA = "0xB7FE64")]
		public void UpdateTimeInSeconds(float seconds)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xB7FEDC", Offset = "0xB7FEDC", VA = "0xB7FEDC")]
		public int NumSegments()
		{
			return default(int);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xB7FF3C", Offset = "0xB7FF3C", VA = "0xB7FF3C")]
		public void PausePath()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xB7FF48", Offset = "0xB7FF48", VA = "0xB7FF48")]
		public void ResumePath()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xB7FF60", Offset = "0xB7FF60", VA = "0xB7FF60")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xB7FF68", Offset = "0xB7FF68", VA = "0xB7FF68")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xB7FF70", Offset = "0xB7FF70", VA = "0xB7FF70")]
		public int GetCurrentWayPoint()
		{
			return default(int);
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xB7FF78", Offset = "0xB7FF78", VA = "0xB7FF78")]
		public float GetCurrentTimeInWaypoint()
		{
			return default(float);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xB7FF80", Offset = "0xB7FF80", VA = "0xB7FF80")]
		public void SetCurrentWayPoint(int value)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xB7FF88", Offset = "0xB7FF88", VA = "0xB7FF88")]
		public void SetCurrentTimeInWaypoint(float value)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xB7FF90", Offset = "0xB7FF90", VA = "0xB7FF90")]
		public void RefreshTransform()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xB7FDD4", Offset = "0xB7FDD4", VA = "0xB7FDD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C2068", Offset = "0x9C2068")]
		private IEnumerator FollowPath(float time)
		{
			return null;
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xB808D0", Offset = "0xB808D0", VA = "0xB808D0")]
		private int GetNextIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xB80164", Offset = "0xB80164", VA = "0xB80164")]
		private Vector3 GetBezierPosition(int pointIndex, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xB80714", Offset = "0xB80714", VA = "0xB80714")]
		private Quaternion GetLerpRotation(int pointIndex, float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xB8093C", Offset = "0xB8093C", VA = "0xB8093C")]
		public CPC_CameraPath()
		{
		}
	}
}
