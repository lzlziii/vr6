using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Text;
using Coplanar;
using Coplanar.SplineTool;
using Il2CppDummyDll;
using Newtonsoft.Json;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Sirenix.OdinInspector;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B1568", Offset = "0x9B1568")]
public class FastList<T>
{
	[Token(Token = "0x20002BD")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2098", Offset = "0x9B2098")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000127")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600129E")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A0")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129B")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600129C")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600129D")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600129F")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000003")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000004")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000005")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000006")]
		set
		{
		}
	}

	[Token(Token = "0x6000001")]
	public FastList()
	{
	}

	[Token(Token = "0x6000002")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000007")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000008")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000009")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600000A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600000B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600000D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600000F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000010")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000011")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000012")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000014")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000015")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B889C", Offset = "0x9B889C")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000017")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000018")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000019")]
	public void Clear()
	{
	}

	[Token(Token = "0x600001A")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000003")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xD144C4", Offset = "0xD144C4", VA = "0xD144C4")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000004")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xD14498", Offset = "0xD14498", VA = "0xD14498")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000005")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE1B6DC", Offset = "0xE1B6DC", VA = "0xE1B6DC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE1B848", Offset = "0xE1B848", VA = "0xE1B848")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xE1BBEC", Offset = "0xE1BBEC", VA = "0xE1BBEC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xE1BE44", Offset = "0xE1BE44", VA = "0xE1BE44", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xE1BE70", Offset = "0xE1BE70", VA = "0xE1BE70")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000006")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xE20820", Offset = "0xE20820", VA = "0xE20820")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xE208AC", Offset = "0xE208AC", VA = "0xE208AC")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE20A20", Offset = "0xE20A20", VA = "0xE20A20")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000007")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0xD13028", Offset = "0xD13028", VA = "0xD13028")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000026")]
		[Address(RVA = "0xD13030", Offset = "0xD13030", VA = "0xD13030")]
		set
		{
		}
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD13164", Offset = "0xD13164", VA = "0xD13164")]
	private void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xD1338C", Offset = "0xD1338C", VA = "0xD1338C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xD13394", Offset = "0xD13394", VA = "0xD13394")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000008")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20002BF")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xE21400", Offset = "0xE21400", VA = "0xE21400")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C0")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B87CC", Offset = "0x9B87CC")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B87E4", Offset = "0x9B87E4")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B87FC", Offset = "0x9B87FC")]
		public float LatencyWeight;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B8814", Offset = "0x9B8814")]
		public int MaxSamples;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xE21408", Offset = "0xE21408", VA = "0xE21408")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xE215A4", Offset = "0xE215A4", VA = "0xE215A4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xE20A28", Offset = "0xE20A28", VA = "0xE20A28")]
	private void Start()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xE20B58", Offset = "0xE20B58", VA = "0xE20B58")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE20EF4", Offset = "0xE20EF4", VA = "0xE20EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE20E54", Offset = "0xE20E54", VA = "0xE20E54")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE21168", Offset = "0xE21168", VA = "0xE21168")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE21518", Offset = "0xE21518", VA = "0xE21518")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000009")]
public class P2PManager
{
	[Token(Token = "0x20002C1")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000B7C")]
		Update = 1
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE1CE0C", Offset = "0xE1CE0C", VA = "0xE1CE0C")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE1CECC", Offset = "0xE1CECC", VA = "0xE1CECC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE1D144", Offset = "0xE1D144", VA = "0xE1D144")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE1D290", Offset = "0xE1D290", VA = "0xE1D290")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xE1D3E4", Offset = "0xE1D3E4", VA = "0xE1D3E4")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xE1D68C", Offset = "0xE1D68C", VA = "0xE1D68C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xE1DA88", Offset = "0xE1DA88", VA = "0xE1DA88")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xE1DD34", Offset = "0xE1DD34", VA = "0xE1DD34")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE1D850", Offset = "0xE1D850", VA = "0xE1D850")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE1DC5C", Offset = "0xE1DC5C", VA = "0xE1DC5C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE1D940", Offset = "0xE1D940", VA = "0xE1D940")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE1DF64", Offset = "0xE1DF64", VA = "0xE1DF64")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE1D8A0", Offset = "0xE1D8A0", VA = "0xE1D8A0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE1DCA8", Offset = "0xE1DCA8", VA = "0xE1DCA8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE1D9E8", Offset = "0xE1D9E8", VA = "0xE1D9E8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE1DFF0", Offset = "0xE1DFF0", VA = "0xE1DFF0")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200000A")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE1FDAC", Offset = "0xE1FDAC", VA = "0xE1FDAC", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xE200E4", Offset = "0xE200E4", VA = "0xE200E4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE20108", Offset = "0xE20108", VA = "0xE20108", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE204C8", Offset = "0xE204C8", VA = "0xE204C8")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xE2066C", Offset = "0xE2066C", VA = "0xE2066C")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE206F0", Offset = "0xE206F0", VA = "0xE206F0")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xE20744", Offset = "0xE20744", VA = "0xE20744")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200000B")]
public class RemotePlayer
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xE2162C", Offset = "0xE2162C", VA = "0xE2162C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200000C")]
public class RoomManager
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xE22D48", Offset = "0xE22D48", VA = "0xE22D48")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xE22E14", Offset = "0xE22E14", VA = "0xE22E14")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xE23028", Offset = "0xE23028", VA = "0xE23028")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xE23138", Offset = "0xE23138", VA = "0xE23138")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE231F0", Offset = "0xE231F0", VA = "0xE231F0")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE2371C", Offset = "0xE2371C", VA = "0xE2371C")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xE23058", Offset = "0xE23058", VA = "0xE23058")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xE237A8", Offset = "0xE237A8", VA = "0xE237A8")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE23E28", Offset = "0xE23E28", VA = "0xE23E28")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE240F4", Offset = "0xE240F4", VA = "0xE240F4")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE23A48", Offset = "0xE23A48", VA = "0xE23A48")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200000D")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20002C2")]
	public enum State
	{
		[Token(Token = "0x4000B7E")]
		INITIALIZING,
		[Token(Token = "0x4000B7F")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000B80")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000B81")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000B82")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000B83")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000B84")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000B85")]
		SHUTDOWN
	}

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0xE265C4", Offset = "0xE265C4", VA = "0xE265C4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0xE1CFA8", Offset = "0xE1CFA8", VA = "0xE1CFA8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xE2663C", Offset = "0xE2663C", VA = "0xE2663C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE2012C", Offset = "0xE2012C", VA = "0xE2012C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE1FDE4", Offset = "0xE1FDE4", VA = "0xE1FDE4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE253A0", Offset = "0xE253A0", VA = "0xE253A0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE20104", Offset = "0xE20104", VA = "0xE20104", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE25500", Offset = "0xE25500", VA = "0xE25500")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE255F8", Offset = "0xE255F8", VA = "0xE255F8")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE25D18", Offset = "0xE25D18", VA = "0xE25D18")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE26228", Offset = "0xE26228", VA = "0xE26228")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE26400", Offset = "0xE26400", VA = "0xE26400")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE26554", Offset = "0xE26554", VA = "0xE26554")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE252EC", Offset = "0xE252EC", VA = "0xE252EC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE22F74", Offset = "0xE22F74", VA = "0xE22F74")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE2330C", Offset = "0xE2330C", VA = "0xE2330C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE26754", Offset = "0xE26754", VA = "0xE26754")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE23630", Offset = "0xE23630", VA = "0xE23630")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE2416C", Offset = "0xE2416C", VA = "0xE2416C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE24504", Offset = "0xE24504", VA = "0xE24504")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE245D8", Offset = "0xE245D8", VA = "0xE245D8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE1D084", Offset = "0xE1D084", VA = "0xE1D084")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE242A0", Offset = "0xE242A0", VA = "0xE242A0")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE24330", Offset = "0xE24330", VA = "0xE24330")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE268D8", Offset = "0xE268D8", VA = "0xE268D8")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE26AB8", Offset = "0xE26AB8", VA = "0xE26AB8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE25264", Offset = "0xE25264", VA = "0xE25264")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9B8900", Offset = "0x9B8900")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE1D1C4", Offset = "0xE1D1C4", VA = "0xE1D1C4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE207B0", Offset = "0xE207B0", VA = "0xE207B0")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200000E")]
public class VoipManager
{
	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1C55DA8", Offset = "0x1C55DA8", VA = "0x1C55DA8")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1C55E68", Offset = "0x1C55E68", VA = "0x1C55E68")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1C55F4C", Offset = "0x1C55F4C", VA = "0x1C55F4C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1C55FD0", Offset = "0x1C55FD0", VA = "0x1C55FD0")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1C56130", Offset = "0x1C56130", VA = "0x1C56130")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200000F")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xD12C9C", Offset = "0xD12C9C", VA = "0xD12C9C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xD12D0C", Offset = "0xD12D0C", VA = "0xD12D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xD12E94", Offset = "0xD12E94", VA = "0xD12E94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xD12EF8", Offset = "0xD12EF8", VA = "0xD12EF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xD12D48", Offset = "0xD12D48", VA = "0xD12D48")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xD12FC0", Offset = "0xD12FC0", VA = "0xD12FC0")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xD13020", Offset = "0xD13020", VA = "0xD13020")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000010")]
public class AvatarLayer
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xC64240", Offset = "0xC64240", VA = "0xC64240")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class PacketRecordSettings
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE1E07C", Offset = "0xE1E07C", VA = "0xE1E07C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000012")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20002C3")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xDD9370", Offset = "0xDD9370", VA = "0xDD9370")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20002C4")]
	public enum HandType
	{
		[Token(Token = "0x4000B88")]
		Right,
		[Token(Token = "0x4000B89")]
		Left,
		[Token(Token = "0x4000B8A")]
		Max
	}

	[Token(Token = "0x20002C5")]
	public enum HandJoint
	{
		[Token(Token = "0x4000B8C")]
		HandBase,
		[Token(Token = "0x4000B8D")]
		IndexBase,
		[Token(Token = "0x4000B8E")]
		IndexTip,
		[Token(Token = "0x4000B8F")]
		ThumbBase,
		[Token(Token = "0x4000B90")]
		ThumbTip,
		[Token(Token = "0x4000B91")]
		Max
	}

	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B20A8", Offset = "0x9B20A8")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0xDDB0B0", Offset = "0xDDB0B0", VA = "0xDDB0B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xDDB11C", Offset = "0xDDB11C", VA = "0xDDB11C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xDDACA0", Offset = "0xDDACA0", VA = "0xDDACA0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xDDAF18", Offset = "0xDDAF18", VA = "0xDDAF18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xDDAF1C", Offset = "0xDDAF1C", VA = "0xDDAF1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xDDB0B8", Offset = "0xDDB0B8", VA = "0xDDB0B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B2778", Offset = "0x9B2778")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B27B0", Offset = "0x9B27B0")]
	public bool EnableBody;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B27E8", Offset = "0x9B27E8")]
	public bool RecordPackets;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B2820", Offset = "0x9B2820")]
	public bool StartWithControllers;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B2858", Offset = "0x9B2858")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2858", Offset = "0x9B2858")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B28C8", Offset = "0x9B28C8")]
	private bool CombineMeshes;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2900", Offset = "0x9B2900")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B2938", Offset = "0x9B2938")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B2970", Offset = "0x9B2970")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B29A8", Offset = "0x9B29A8")]
	public bool EnableLaughter;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int renderPartCount;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float[] visemes;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource audioSource;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool showLeftController;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool showRightController;

	[Token(Token = "0x400008A")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400008C")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400008D")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400008E")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400008F")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000090")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xDD6250", Offset = "0xDD6250", VA = "0xDD6250")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xDD65BC", Offset = "0xDD65BC", VA = "0xDD65BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xDD6648", Offset = "0xDD6648", VA = "0xDD6648")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xDD66B8", Offset = "0xDD66B8", VA = "0xDD66B8")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xDD67E0", Offset = "0xDD67E0", VA = "0xDD67E0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xDD68C8", Offset = "0xDD68C8", VA = "0xDD68C8")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xDD69AC", Offset = "0xDD69AC", VA = "0xDD69AC")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xDD6B98", Offset = "0xDD6B98", VA = "0xDD6B98")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xDD6C60", Offset = "0xDD6C60", VA = "0xDD6C60")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xDD6CE4", Offset = "0xDD6CE4", VA = "0xDD6CE4")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xDD6DD0", Offset = "0xDD6DD0", VA = "0xDD6DD0")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xDD6E60", Offset = "0xDD6E60", VA = "0xDD6E60")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xDD6F8C", Offset = "0xDD6F8C", VA = "0xDD6F8C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xDD6FEC", Offset = "0xDD6FEC", VA = "0xDD6FEC")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600008D")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xDD7474", Offset = "0xDD7474", VA = "0xDD7474")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xDD77D8", Offset = "0xDD77D8", VA = "0xDD77D8")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xDD7940", Offset = "0xDD7940", VA = "0xDD7940")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xDD7C10", Offset = "0xDD7C10", VA = "0xDD7C10")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xDD7D00", Offset = "0xDD7D00", VA = "0xDD7D00")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xDD80BC", Offset = "0xDD80BC", VA = "0xDD80BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xDD8448", Offset = "0xDD8448", VA = "0xDD8448")]
	private void Update()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xDD8E10", Offset = "0xDD8E10", VA = "0xDD8E10")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xDD8E58", Offset = "0xDD8E58", VA = "0xDD8E58")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xDD7F84", Offset = "0xDD7F84", VA = "0xDD7F84")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xDD8020", Offset = "0xDD8020", VA = "0xDD8020")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xDD8E88", Offset = "0xDD8E88", VA = "0xDD8E88")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xDD87D0", Offset = "0xDD87D0", VA = "0xDD87D0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xDD90D4", Offset = "0xDD90D4", VA = "0xDD90D4")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xDD8EF0", Offset = "0xDD8EF0", VA = "0xDD8EF0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xDD93EC", Offset = "0xDD93EC", VA = "0xDD93EC")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xDD9828", Offset = "0xDD9828", VA = "0xDD9828")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xDD9A78", Offset = "0xDD9A78", VA = "0xDD9A78")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xDD9BBC", Offset = "0xDD9BBC", VA = "0xDD9BBC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xDD9D7C", Offset = "0xDD9D7C", VA = "0xDD9D7C")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xDD890C", Offset = "0xDD890C", VA = "0xDD890C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xDD9E58", Offset = "0xDD9E58", VA = "0xDD9E58")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xDD87E0", Offset = "0xDD87E0", VA = "0xDD87E0")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xDD9E60", Offset = "0xDD9E60", VA = "0xDD9E60")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xDDA414", Offset = "0xDDA414", VA = "0xDDA414")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xDDA8EC", Offset = "0xDDA8EC", VA = "0xDDA8EC")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xDDA96C", Offset = "0xDDA96C", VA = "0xDDA96C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xDDA9F0", Offset = "0xDDA9F0", VA = "0xDDA9F0")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xDD8CAC", Offset = "0xDD8CAC", VA = "0xDD8CAC")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xDD9F1C", Offset = "0xDD9F1C", VA = "0xDD9F1C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xDDAC2C", Offset = "0xDDAC2C", VA = "0xDDAC2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8964", Offset = "0x9B8964")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xDDACCC", Offset = "0xDDACCC", VA = "0xDDACCC")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xDDAACC", Offset = "0xDDAACC", VA = "0xDDAACC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xDDAD94", Offset = "0xDDAD94", VA = "0xDDAD94")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xDDAD98", Offset = "0xDDAD98", VA = "0xDDAD98")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xDDAAC8", Offset = "0xDDAAC8", VA = "0xDDAAC8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xDDAD9C", Offset = "0xDDAD9C", VA = "0xDDAD9C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000013")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xDDB124", Offset = "0xDDB124", VA = "0xDDB124")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000014")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xDDB1D4", Offset = "0xDDB1D4", VA = "0xDDB1D4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xDDC4DC", Offset = "0xDDC4DC", VA = "0xDDC4DC")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xDDC074", Offset = "0xDDC074", VA = "0xDDC074")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xDDBE10", Offset = "0xDDBE10", VA = "0xDDBE10")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xDDBEE8", Offset = "0xDDBEE8", VA = "0xDDBEE8")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xDDC754", Offset = "0xDDC754", VA = "0xDDC754")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000015")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000AD")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xE107EC", Offset = "0xE107EC", VA = "0xE107EC")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000016")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xE10A60", Offset = "0xE10A60", VA = "0xE10A60")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xE10ED0", Offset = "0xE10ED0", VA = "0xE10ED0")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000017")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xE10FCC", Offset = "0xE10FCC", VA = "0xE10FCC")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xE1113C", Offset = "0xE1113C", VA = "0xE1113C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xE1125C", Offset = "0xE1125C", VA = "0xE1125C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000018")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xE112C0", Offset = "0xE112C0", VA = "0xE112C0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xE10B80", Offset = "0xE10B80", VA = "0xE10B80")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xE118C8", Offset = "0xE118C8", VA = "0xE118C8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xE1192C", Offset = "0xE1192C", VA = "0xE1192C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xE12118", Offset = "0xE12118", VA = "0xE12118")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xE10F34", Offset = "0xE10F34", VA = "0xE10F34")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000019")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20002C7")]
	public enum PacketMode
	{
		[Token(Token = "0x4000B96")]
		SDK,
		[Token(Token = "0x4000B97")]
		Unity
	}

	[Token(Token = "0x20002C8")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xE137D4", Offset = "0xE137D4", VA = "0xE137D4")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20002C9")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xE1392C", Offset = "0xE1392C", VA = "0xE1392C")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xE13400", Offset = "0xE13400", VA = "0xE13400")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000C8")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xE13410", Offset = "0xE13410", VA = "0xE13410")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xE134B0", Offset = "0xE134B0", VA = "0xE134B0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xE13728", Offset = "0xE13728", VA = "0xE13728")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xE137C4", Offset = "0xE137C4", VA = "0xE137C4")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xE13CF0", Offset = "0xE13CF0", VA = "0xE13CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xE13E50", Offset = "0xE13E50", VA = "0xE13E50")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200001B")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xE13EBC", Offset = "0xE13EBC", VA = "0xE13EBC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xE14028", Offset = "0xE14028", VA = "0xE14028")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xE143CC", Offset = "0xE143CC", VA = "0xE143CC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xE1469C", Offset = "0xE1469C", VA = "0xE1469C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xE146C8", Offset = "0xE146C8", VA = "0xE146C8")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200001C")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public enum TextureType
	{
		[Token(Token = "0x4000BA8")]
		DiffuseTextures,
		[Token(Token = "0x4000BA9")]
		NormalMaps,
		[Token(Token = "0x4000BAA")]
		RoughnessMaps,
		[Token(Token = "0x4000BAB")]
		Count
	}

	[Token(Token = "0x20002CB")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20002CC")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20002CD")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20002CE")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xE16850", Offset = "0xE16850", VA = "0xE16850")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B20B8", Offset = "0x9B20B8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xE1716C", Offset = "0xE1716C", VA = "0xE1716C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xE171D8", Offset = "0xE171D8", VA = "0xE171D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xE166B8", Offset = "0xE166B8", VA = "0xE166B8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xE16AEC", Offset = "0xE16AEC", VA = "0xE16AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xE16AF0", Offset = "0xE16AF0", VA = "0xE16AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xE17174", Offset = "0xE17174", VA = "0xE17174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40000E1")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40000E2")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40000E3")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40000E4")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xE14778", Offset = "0xE14778", VA = "0xE14778")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xE148E0", Offset = "0xE148E0", VA = "0xE148E0")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xE1490C", Offset = "0xE1490C", VA = "0xE1490C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xE15038", Offset = "0xE15038", VA = "0xE15038")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xE152C8", Offset = "0xE152C8", VA = "0xE152C8")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xE149A0", Offset = "0xE149A0", VA = "0xE149A0")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xE153C0", Offset = "0xE153C0", VA = "0xE153C0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xE14DAC", Offset = "0xE14DAC", VA = "0xE14DAC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xE15634", Offset = "0xE15634", VA = "0xE15634")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xE158B0", Offset = "0xE158B0", VA = "0xE158B0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xE159B0", Offset = "0xE159B0", VA = "0xE159B0")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xE159E8", Offset = "0xE159E8", VA = "0xE159E8")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xE14FB8", Offset = "0xE14FB8", VA = "0xE14FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B89C8", Offset = "0x9B89C8")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xE166E4", Offset = "0xE166E4", VA = "0xE166E4")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000007")]
	public float Duration
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xE171E0", Offset = "0xE171E0", VA = "0xE171E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xE17250", Offset = "0xE17250", VA = "0xE17250")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xE172D8", Offset = "0xE172D8", VA = "0xE172D8")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xE1739C", Offset = "0xE1739C", VA = "0xE1739C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xE174E4", Offset = "0xE174E4", VA = "0xE174E4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xE175C0", Offset = "0xE175C0", VA = "0xE175C0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xE17694", Offset = "0xE17694", VA = "0xE17694")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xE178A4", Offset = "0xE178A4", VA = "0xE178A4")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xE17B00", Offset = "0xE17B00", VA = "0xE17B00")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200001E")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xC64660", Offset = "0xC64660", VA = "0xC64660")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC64778", Offset = "0xC64778", VA = "0xC64778")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xC64930", Offset = "0xC64930", VA = "0xC64930")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC647EC", Offset = "0xC647EC", VA = "0xC647EC")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xC64884", Offset = "0xC64884", VA = "0xC64884")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200001F")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xC64248", Offset = "0xC64248", VA = "0xC64248")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC64600", Offset = "0xC64600", VA = "0xC64600")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC643F0", Offset = "0xC643F0", VA = "0xC643F0")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xC6446C", Offset = "0xC6446C", VA = "0xC6446C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC6450C", Offset = "0xC6450C", VA = "0xC6450C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40000EC")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40000ED")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xE17CF8", Offset = "0xE17CF8", VA = "0xE17CF8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xE17D84", Offset = "0xE17D84", VA = "0xE17D84", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xE17DA0", Offset = "0xE17DA0", VA = "0xE17DA0")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xE17F54", Offset = "0xE17F54", VA = "0xE17F54")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xE18104", Offset = "0xE18104", VA = "0xE18104")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xE18184", Offset = "0xE18184", VA = "0xE18184")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xE18270", Offset = "0xE18270", VA = "0xE18270")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xE18470", Offset = "0xE18470", VA = "0xE18470")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE18818", Offset = "0xE18818", VA = "0xE18818")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xE18918", Offset = "0xE18918", VA = "0xE18918")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000022")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40000F6")]
	Body = 1,
	[Token(Token = "0x40000F7")]
	Hands = 2,
	[Token(Token = "0x40000F8")]
	Base = 4,
	[Token(Token = "0x40000F9")]
	BodyTilt = 0x10,
	[Token(Token = "0x40000FA")]
	Expressive = 0x20,
	[Token(Token = "0x40000FB")]
	All = -1
}
[Token(Token = "0x2000023")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40000FD")]
	AvatarSpecification,
	[Token(Token = "0x40000FE")]
	AssetLoaded,
	[Token(Token = "0x40000FF")]
	Count
}
[Token(Token = "0x2000024")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000025")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000026")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000105")]
	Mesh,
	[Token(Token = "0x4000106")]
	Texture,
	[Token(Token = "0x4000107")]
	Pose,
	[Token(Token = "0x4000108")]
	Material,
	[Token(Token = "0x4000109")]
	CombinedMesh,
	[Token(Token = "0x400010A")]
	PBSMaterial,
	[Token(Token = "0x400010B")]
	FailedLoad,
	[Token(Token = "0x400010C")]
	Count
}
[Token(Token = "0x2000027")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000028")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000029")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200002A")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200002B")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200002C")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000141")]
	RGB24,
	[Token(Token = "0x4000142")]
	DXT1,
	[Token(Token = "0x4000143")]
	DXT5,
	[Token(Token = "0x4000144")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000145")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000146")]
	Count
}
[Token(Token = "0x200002D")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200002E")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400014E")]
	SkinnedMeshRender,
	[Token(Token = "0x400014F")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000150")]
	ProjectorRender,
	[Token(Token = "0x4000151")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000152")]
	Count
}
[Token(Token = "0x200002F")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000154")]
	Unknown,
	[Token(Token = "0x4000155")]
	Default,
	[Token(Token = "0x4000156")]
	Verbose,
	[Token(Token = "0x4000157")]
	Debug,
	[Token(Token = "0x4000158")]
	Info,
	[Token(Token = "0x4000159")]
	Warn,
	[Token(Token = "0x400015A")]
	Error,
	[Token(Token = "0x400015B")]
	Fatal,
	[Token(Token = "0x400015C")]
	Silent
}
[Token(Token = "0x2000030")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000031")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000161")]
	One = 1,
	[Token(Token = "0x4000162")]
	Two = 2,
	[Token(Token = "0x4000163")]
	Three = 4,
	[Token(Token = "0x4000164")]
	Joystick = 8
}
[Token(Token = "0x2000032")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000166")]
	One = 1,
	[Token(Token = "0x4000167")]
	Two = 2,
	[Token(Token = "0x4000168")]
	Joystick = 4,
	[Token(Token = "0x4000169")]
	ThumbRest = 8,
	[Token(Token = "0x400016A")]
	Index = 0x10,
	[Token(Token = "0x400016B")]
	Pointing = 0x40,
	[Token(Token = "0x400016C")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000033")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000034")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000035")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000036")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000038")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000039")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200003B")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400018C")]
	Add,
	[Token(Token = "0x400018D")]
	Multiply,
	[Token(Token = "0x400018E")]
	Count
}
[Token(Token = "0x200003C")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000190")]
	Color,
	[Token(Token = "0x4000191")]
	Texture,
	[Token(Token = "0x4000192")]
	TextureSingleChannel,
	[Token(Token = "0x4000193")]
	Parallax,
	[Token(Token = "0x4000194")]
	Count
}
[Token(Token = "0x200003D")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000196")]
	None,
	[Token(Token = "0x4000197")]
	Positional,
	[Token(Token = "0x4000198")]
	ViewReflection,
	[Token(Token = "0x4000199")]
	Fresnel,
	[Token(Token = "0x400019A")]
	Pulse,
	[Token(Token = "0x400019B")]
	Count
}
[Token(Token = "0x200003E")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400019D")]
	Touch,
	[Token(Token = "0x400019E")]
	Malibu,
	[Token(Token = "0x400019F")]
	Go,
	[Token(Token = "0x40001A0")]
	Quest,
	[Token(Token = "0x40001A1")]
	Count
}
[Token(Token = "0x200003F")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001A3")]
	Lowest = 1,
	[Token(Token = "0x40001A4")]
	Medium = 3,
	[Token(Token = "0x40001A5")]
	Highest = 5
}
[Token(Token = "0x2000040")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001A7")]
	Unknown = -1,
	[Token(Token = "0x40001A8")]
	One,
	[Token(Token = "0x40001A9")]
	Two
}
[Token(Token = "0x2000041")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1C578F0", Offset = "0x1C578F0", VA = "0x1C578F0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xA88C3C", Offset = "0xA88C3C", VA = "0xA88C3C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xA88C44", Offset = "0xA88C44", VA = "0xA88C44", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000042")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1C57C20", Offset = "0x1C57C20", VA = "0x1C57C20")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xA88EE0", Offset = "0xA88EE0", VA = "0xA88EE0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xA88EE8", Offset = "0xA88EE8", VA = "0xA88EE8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000043")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1C56F98", Offset = "0x1C56F98", VA = "0x1C56F98")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xA8898C", Offset = "0xA8898C", VA = "0xA8898C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xA88994", Offset = "0xA88994", VA = "0xA88994", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000044")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1C5815C", Offset = "0x1C5815C", VA = "0x1C5815C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xA8978C", Offset = "0xA8978C", VA = "0xA8978C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xA89794", Offset = "0xA89794", VA = "0xA89794", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000045")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xDDB12C", Offset = "0xDDB12C", VA = "0xDDB12C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000046")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000047")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40001DE")]
	FirstPerson = 1,
	[Token(Token = "0x40001DF")]
	ThirdPerson = 2,
	[Token(Token = "0x40001E0")]
	SelfOccluding = 4
}
[Token(Token = "0x2000048")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200004C")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40001F6")]
	Default,
	[Token(Token = "0x40001F7")]
	GripSphere,
	[Token(Token = "0x40001F8")]
	GripCube,
	[Token(Token = "0x40001F9")]
	Count
}
[Token(Token = "0x200004D")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40001FB")]
	Body,
	[Token(Token = "0x40001FC")]
	Clothing,
	[Token(Token = "0x40001FD")]
	Eyewear,
	[Token(Token = "0x40001FE")]
	Hair,
	[Token(Token = "0x40001FF")]
	Beard,
	[Token(Token = "0x4000200")]
	Count
}
[Token(Token = "0x200004E")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200004F")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000050")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000051")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000052")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400020A")]
	AvatarHead,
	[Token(Token = "0x400020B")]
	AvatarHand,
	[Token(Token = "0x400020C")]
	Object,
	[Token(Token = "0x400020D")]
	ObjectStatic,
	[Token(Token = "0x400020E")]
	Count
}
[Token(Token = "0x2000053")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000054")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000056")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000057")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400021A")]
	Point,
	[Token(Token = "0x400021B")]
	Direction,
	[Token(Token = "0x400021C")]
	Spot,
	[Token(Token = "0x400021D")]
	Count
}
[Token(Token = "0x2000058")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000059")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200005A")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200005B")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200005C")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000233")]
	None = 0u,
	[Token(Token = "0x4000234")]
	GazeTarget = 1u,
	[Token(Token = "0x4000235")]
	Any = uint.MaxValue
}
[Token(Token = "0x200005D")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200005F")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000060")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000061")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000062")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20002D0")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xA5DF1C", Offset = "0xA5DF1C", VA = "0xA5DF1C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400024A")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ovrAvatarDebugContext debugContext;

	[Token(Token = "0x17000009")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xE121AC", Offset = "0xE121AC", VA = "0xE121AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xE18928", Offset = "0xE18928", VA = "0xE18928")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xE18B50", Offset = "0xE18B50", VA = "0xE18B50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xE18BC4", Offset = "0xE18BC4", VA = "0xE18BC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xE19424", Offset = "0xE19424", VA = "0xE19424")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xE19480", Offset = "0xE19480", VA = "0xE19480")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xE194DC", Offset = "0xE194DC", VA = "0xE194DC")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xE19544", Offset = "0xE19544", VA = "0xE19544")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xE195AC", Offset = "0xE195AC", VA = "0xE195AC")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xE1925C", Offset = "0xE1925C", VA = "0xE1925C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xE1969C", Offset = "0xE1969C", VA = "0xE1969C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xE197B8", Offset = "0xE197B8", VA = "0xE197B8")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xE12340", Offset = "0xE12340", VA = "0xE12340")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xE1989C", Offset = "0xE1989C", VA = "0xE1989C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xE18B28", Offset = "0xE18B28", VA = "0xE18B28")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xE150A0", Offset = "0xE150A0", VA = "0xE150A0")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xE19974", Offset = "0xE19974", VA = "0xE19974")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000063")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000A")]
	public static string AppID
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0xE19934", Offset = "0xE19934", VA = "0xE19934")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000133")]
		[Address(RVA = "0xE19ACC", Offset = "0xE19ACC", VA = "0xE19ACC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0xE19954", Offset = "0xE19954", VA = "0xE19954")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000135")]
		[Address(RVA = "0xE19AF8", Offset = "0xE19AF8", VA = "0xE19AF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0xE199B8", Offset = "0xE199B8", VA = "0xE199B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xE19B24", Offset = "0xE19B24", VA = "0xE19B24")]
		set
		{
		}
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xE19B78", Offset = "0xE19B78", VA = "0xE19B78")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000064")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xE1B2D8", Offset = "0xE1B2D8", VA = "0xE1B2D8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xE112C8", Offset = "0xE112C8", VA = "0xE112C8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xE1B420", Offset = "0xE1B420", VA = "0xE1B420")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xE1B584", Offset = "0xE1B584", VA = "0xE1B584")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000065")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE1B594", Offset = "0xE1B594", VA = "0xE1B594")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE114FC", Offset = "0xE114FC", VA = "0xE114FC")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE1B6CC", Offset = "0xE1B6CC", VA = "0xE1B6CC")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000066")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400025A")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400025B")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400025C")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE19BD0", Offset = "0xE19BD0", VA = "0xE19BD0")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE11698", Offset = "0xE11698", VA = "0xE11698")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE1AA88", Offset = "0xE1AA88", VA = "0xE1AA88")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE1A1B0", Offset = "0xE1A1B0", VA = "0xE1A1B0")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xE19F78", Offset = "0xE19F78", VA = "0xE19F78")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE1A090", Offset = "0xE1A090", VA = "0xE1A090")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE1B2C8", Offset = "0xE1B2C8", VA = "0xE1B2C8")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000067")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002D1")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20002D2")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xA5DF8C", Offset = "0xA5DF8C", VA = "0xA5DF8C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20002D3")]
	public struct TextureSet
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xA5E024", Offset = "0xA5E024", VA = "0xA5E024")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B20C8", Offset = "0x9B20C8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xE1CBCC", Offset = "0xE1CBCC", VA = "0xE1CBCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xE1CC38", Offset = "0xE1CC38", VA = "0xE1CC38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xE1C560", Offset = "0xE1C560", VA = "0xE1C560")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xE1C6D0", Offset = "0xE1C6D0", VA = "0xE1C6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xE1C6D4", Offset = "0xE1C6D4", VA = "0xE1C6D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xE1CBD4", Offset = "0xE1CBD4", VA = "0xE1CBD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000260")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000261")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000264")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000265")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000266")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000267")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000268")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000269")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400026A")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE1BF30", Offset = "0xE1BF30", VA = "0xE1BF30")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE1C28C", Offset = "0xE1C28C", VA = "0xE1C28C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE17118", Offset = "0xE17118", VA = "0xE17118")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xE154B0", Offset = "0xE154B0", VA = "0xE154B0")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xE1C418", Offset = "0xE1C418", VA = "0xE1C418")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xE15124", Offset = "0xE15124", VA = "0xE15124")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xE15318", Offset = "0xE15318", VA = "0xE15318")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xE1C4C8", Offset = "0xE1C4C8", VA = "0xE1C4C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8ACC", Offset = "0x9B8ACC")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xE19648", Offset = "0xE19648", VA = "0xE19648")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xE1C58C", Offset = "0xE1C58C", VA = "0xE1C58C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000068")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xE1CC40", Offset = "0xE1CC40", VA = "0xE1CC40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xE1CDA0", Offset = "0xE1CDA0", VA = "0xE1CDA0")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000069")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000153")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xD118B8", Offset = "0xD118B8", VA = "0xD118B8")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x200006A")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2A00", Offset = "0x9B2A00")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2A38", Offset = "0x9B2A38")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2A70", Offset = "0x9B2A70")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD14A80", Offset = "0xD14A80", VA = "0xD14A80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD14A84", Offset = "0xD14A84", VA = "0xD14A84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xD14B04", Offset = "0xD14B04", VA = "0xD14B04")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD14CF4", Offset = "0xD14CF4", VA = "0xD14CF4")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200006B")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD14D1C", Offset = "0xD14D1C", VA = "0xD14D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xD14E2C", Offset = "0xD14E2C", VA = "0xD14E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD14F00", Offset = "0xD14F00", VA = "0xD14F00")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD15198", Offset = "0xD15198", VA = "0xD15198")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xD151E8", Offset = "0xD151E8", VA = "0xD151E8")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200006C")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700000D")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0xC832DC", Offset = "0xC832DC", VA = "0xC832DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xC83598", Offset = "0xC83598", VA = "0xC83598")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xC836D4", Offset = "0xC836D4", VA = "0xC836D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xC83608", Offset = "0xC83608", VA = "0xC83608")]
	public void Init()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xC81474", Offset = "0xC81474", VA = "0xC81474")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xC8385C", Offset = "0xC8385C", VA = "0xC8385C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xC8140C", Offset = "0xC8140C", VA = "0xC8140C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xC814F8", Offset = "0xC814F8", VA = "0xC814F8")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xC8376C", Offset = "0xC8376C", VA = "0xC8376C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xC838FC", Offset = "0xC838FC", VA = "0xC838FC")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xC83938", Offset = "0xC83938", VA = "0xC83938")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xC83B34", Offset = "0xC83B34", VA = "0xC83B34")]
	private void Prune()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xC83948", Offset = "0xC83948", VA = "0xC83948")]
	private void Display()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xC83BE4", Offset = "0xC83BE4", VA = "0xC83BE4")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200006D")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xC83CC8", Offset = "0xC83CC8", VA = "0xC83CC8")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x200006E")]
public static class OVRTouchpad
{
	[Token(Token = "0x20002D5")]
	public enum TouchEvent
	{
		[Token(Token = "0x4000BDE")]
		SingleTap,
		[Token(Token = "0x4000BDF")]
		DoubleTap,
		[Token(Token = "0x4000BE0")]
		Left,
		[Token(Token = "0x4000BE1")]
		Right,
		[Token(Token = "0x4000BE2")]
		Up,
		[Token(Token = "0x4000BE3")]
		Down
	}

	[Token(Token = "0x20002D6")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xC88DA4", Offset = "0xC88DA4", VA = "0xC88DA4")]
	public static void Create()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xC88DA8", Offset = "0xC88DA8", VA = "0xC88DA8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xC890CC", Offset = "0xC890CC", VA = "0xC890CC")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xC88F18", Offset = "0xC88F18", VA = "0xC88F18")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xC80F68", Offset = "0xC80F68", VA = "0xC80F68")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200006F")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000174")]
	[Address(RVA = "0xC89180", Offset = "0xC89180", VA = "0xC89180")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xC891FC", Offset = "0xC891FC", VA = "0xC891FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xC89294", Offset = "0xC89294", VA = "0xC89294")]
	private void Update()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xC892F0", Offset = "0xC892F0", VA = "0xC892F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xC89354", Offset = "0xC89354", VA = "0xC89354")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xC89358", Offset = "0xC89358", VA = "0xC89358")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000070")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	public enum Result
	{
		[Token(Token = "0x4000BE5")]
		Success = 0,
		[Token(Token = "0x4000BE6")]
		Unknown = -2200,
		[Token(Token = "0x4000BE7")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000BE8")]
		InvalidParam = -2202,
		[Token(Token = "0x4000BE9")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000BEA")]
		MissingDLL = -2204,
		[Token(Token = "0x4000BEB")]
		BadVersion = -2205,
		[Token(Token = "0x4000BEC")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20002D8")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000BEE")]
		S16_Mono,
		[Token(Token = "0x4000BEF")]
		S16_Stereo,
		[Token(Token = "0x4000BF0")]
		F32_Mono,
		[Token(Token = "0x4000BF1")]
		F32_Stereo
	}

	[Token(Token = "0x20002D9")]
	public enum Viseme
	{
		[Token(Token = "0x4000BF3")]
		sil,
		[Token(Token = "0x4000BF4")]
		PP,
		[Token(Token = "0x4000BF5")]
		FF,
		[Token(Token = "0x4000BF6")]
		TH,
		[Token(Token = "0x4000BF7")]
		DD,
		[Token(Token = "0x4000BF8")]
		kk,
		[Token(Token = "0x4000BF9")]
		CH,
		[Token(Token = "0x4000BFA")]
		SS,
		[Token(Token = "0x4000BFB")]
		nn,
		[Token(Token = "0x4000BFC")]
		RR,
		[Token(Token = "0x4000BFD")]
		aa,
		[Token(Token = "0x4000BFE")]
		E,
		[Token(Token = "0x4000BFF")]
		ih,
		[Token(Token = "0x4000C00")]
		oh,
		[Token(Token = "0x4000C01")]
		ou
	}

	[Token(Token = "0x20002DA")]
	public enum Signals
	{
		[Token(Token = "0x4000C03")]
		VisemeOn,
		[Token(Token = "0x4000C04")]
		VisemeOff,
		[Token(Token = "0x4000C05")]
		VisemeAmount,
		[Token(Token = "0x4000C06")]
		VisemeSmoothing,
		[Token(Token = "0x4000C07")]
		LaughterAmount
	}

	[Token(Token = "0x20002DB")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000C09")]
		Original,
		[Token(Token = "0x4000C0A")]
		Enhanced,
		[Token(Token = "0x4000C0B")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20002DC")]
	public class Frame
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xC80CC8", Offset = "0xC80CC8", VA = "0xC80CC8")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xC80D24", Offset = "0xC80D24", VA = "0xC80D24")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xC80DB4", Offset = "0xC80DB4", VA = "0xC80DB4")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000284")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600017A")]
	[Address(RVA = "0x18FB660", Offset = "0x18FB660", VA = "0x18FB660")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600017B")]
	[Address(RVA = "0x18FB708", Offset = "0x18FB708", VA = "0x18FB708")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600017C")]
	[Address(RVA = "0x18FB790", Offset = "0x18FB790", VA = "0x18FB790")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600017D")]
	[Address(RVA = "0x18FB83C", Offset = "0x18FB83C", VA = "0x18FB83C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600017E")]
	[Address(RVA = "0x18FB8FC", Offset = "0x18FB8FC", VA = "0x18FB8FC")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600017F")]
	[Address(RVA = "0x18FB9E0", Offset = "0x18FB9E0", VA = "0x18FB9E0")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000180")]
	[Address(RVA = "0x18FBA78", Offset = "0x18FBA78", VA = "0x18FBA78")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000181")]
	[Address(RVA = "0x18FBB10", Offset = "0x18FBB10", VA = "0x18FBB10")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000182")]
	[Address(RVA = "0x18FBBD0", Offset = "0x18FBBD0", VA = "0x18FBBD0")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x18FBCE4", Offset = "0x18FBCE4", VA = "0x18FBCE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x18FC154", Offset = "0x18FC154", VA = "0x18FC154")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x18FC01C", Offset = "0x18FC01C", VA = "0x18FC01C")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x18FC234", Offset = "0x18FC234", VA = "0x18FC234")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x18FC348", Offset = "0x18FC348", VA = "0x18FC348")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x18FC3B8", Offset = "0x18FC3B8", VA = "0x18FC3B8")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x18FC420", Offset = "0x18FC420", VA = "0x18FC420")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x18FC544", Offset = "0x18FC544", VA = "0x18FC544")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x18FC67C", Offset = "0x18FC67C", VA = "0x18FC67C")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x18FC75C", Offset = "0x18FC75C", VA = "0x18FC75C")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x18FC83C", Offset = "0x18FC83C", VA = "0x18FC83C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x18FC940", Offset = "0x18FC940", VA = "0x18FC940")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x18FCAE8", Offset = "0x18FCAE8", VA = "0x18FCAE8")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x18FCC88", Offset = "0x18FCC88", VA = "0x18FCC88")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1610", Offset = "0x9B1610")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2AA8", Offset = "0x9B2AA8")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2AE0", Offset = "0x9B2AE0")]
	public bool enableTouchInput;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2B18", Offset = "0x9B2B18")]
	public bool audioLoopback;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2B50", Offset = "0x9B2B50")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2B88", Offset = "0x9B2B88")]
	public bool showVisemes;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2BC0", Offset = "0x9B2BC0")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2BF8", Offset = "0x9B2BF8")]
	public bool skipAudioSource;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2C30", Offset = "0x9B2C30")]
	public float gain;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xC80E3C", Offset = "0xC80E3C", VA = "0xC80E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC81028", Offset = "0xC81028", VA = "0xC81028")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xC81578", Offset = "0xC81578", VA = "0xC81578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xC81834", Offset = "0xC81834", VA = "0xC81834")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xC8189C", Offset = "0xC8189C", VA = "0xC8189C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xC8190C", Offset = "0xC8190C", VA = "0xC8190C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xC81AAC", Offset = "0xC81AAC", VA = "0xC81AAC")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xC81C4C", Offset = "0xC81C4C", VA = "0xC81C4C")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xC81D80", Offset = "0xC81D80", VA = "0xC81D80")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xC815C0", Offset = "0xC815C0", VA = "0xC815C0")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xC81338", Offset = "0xC81338", VA = "0xC81338")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xC81D90", Offset = "0xC81D90", VA = "0xC81D90")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xC81EBC", Offset = "0xC81EBC", VA = "0xC81EBC")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000072")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1674", Offset = "0x9B1674")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2C68", Offset = "0x9B2C68")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2CA0", Offset = "0x9B2CA0")]
	public bool enableAcceleration;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700000E")]
	public int Smoothing
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xC82040", Offset = "0xC82040", VA = "0xC82040")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xC81F50", Offset = "0xC81F50", VA = "0xC81F50")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public uint Context
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xC82048", Offset = "0xC82048", VA = "0xC82048")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000010")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xC82050", Offset = "0xC82050", VA = "0xC82050")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xC82058", Offset = "0xC82058", VA = "0xC82058")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xC821F4", Offset = "0xC821F4", VA = "0xC821F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xC8231C", Offset = "0xC8231C", VA = "0xC8231C")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xC82324", Offset = "0xC82324", VA = "0xC82324")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC8241C", Offset = "0xC8241C", VA = "0xC8241C")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC824E8", Offset = "0xC824E8", VA = "0xC824E8")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC81EE0", Offset = "0xC81EE0", VA = "0xC81EE0")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B16D8", Offset = "0x9B16D8")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2CD8", Offset = "0x9B2CD8")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC82564", Offset = "0xC82564", VA = "0xC82564")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC826E0", Offset = "0xC826E0", VA = "0xC826E0")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000074")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2D10", Offset = "0x9B2D10")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2D48", Offset = "0x9B2D48")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2D80", Offset = "0x9B2D80")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2DB8", Offset = "0x9B2DB8")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2DF0", Offset = "0x9B2DF0")]
	public KeyCode laughterKey;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2E28", Offset = "0x9B2E28")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B2E60", Offset = "0x9B2E60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2E60", Offset = "0x9B2E60")]
	public float laughterThreshold;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B2EB4", Offset = "0x9B2EB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2EB4", Offset = "0x9B2EB4")]
	public float laughterMultiplier;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B2F08", Offset = "0x9B2F08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2F08", Offset = "0x9B2F08")]
	public int smoothAmount;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC826E4", Offset = "0xC826E4", VA = "0xC826E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC82828", Offset = "0xC82828", VA = "0xC82828")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC82AF8", Offset = "0xC82AF8", VA = "0xC82AF8")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC82938", Offset = "0xC82938", VA = "0xC82938")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC82A04", Offset = "0xC82A04", VA = "0xC82A04")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC82BD0", Offset = "0xC82BD0", VA = "0xC82BD0")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC82CA0", Offset = "0xC82CA0", VA = "0xC82CA0")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC82D08", Offset = "0xC82D08", VA = "0xC82D08")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000075")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B2F60", Offset = "0x9B2F60")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x9B2F60", Offset = "0x9B2F60")]
	public Texture[] Textures;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B30DC", Offset = "0x9B30DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B30DC", Offset = "0x9B30DC")]
	public int smoothAmount;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xC82E00", Offset = "0xC82E00", VA = "0xC82E00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xC82F54", Offset = "0xC82F54", VA = "0xC82F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xC83108", Offset = "0xC83108", VA = "0xC83108")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xC83230", Offset = "0xC83230", VA = "0xC83230")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Serializable]
[Token(Token = "0x2000076")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xC82638", Offset = "0xC82638", VA = "0xC82638")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xC83C58", Offset = "0xC83C58", VA = "0xC83C58")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000077")]
public class RichPresenceSample : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DeeplinkMessageOverride;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsJoinable;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool IsIdle;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint CurrentCapacity;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint MaxCapacity;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime StartTime;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DateTime EndTime;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RichPresenceExtraContext ExtraContext;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text InVRConsole;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text DestinationsConsole;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> DestinationAPINames;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ulong LoggedInUserID;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int DestinationIndex;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool OnlyPushUpOnce;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xE21634", Offset = "0xE21634", VA = "0xE21634")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xE217CC", Offset = "0xE217CC", VA = "0xE217CC")]
	private void SetPresence()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xE219AC", Offset = "0xE219AC", VA = "0xE219AC")]
	private void ClearPresence()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xE21A5C", Offset = "0xE21A5C", VA = "0xE21A5C")]
	private string GetAppLaunchDetails()
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xE21E48", Offset = "0xE21E48", VA = "0xE21E48")]
	private void OnLaunchIntentChangeNotif(Message<string> message)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE21EF4", Offset = "0xE21EF4", VA = "0xE21EF4")]
	private void OnGetDestinations(Message<DestinationList> message)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE222CC", Offset = "0xE222CC", VA = "0xE222CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE22394", Offset = "0xE22394", VA = "0xE22394")]
	private void ScrollThroughDestinations()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE2218C", Offset = "0xE2218C", VA = "0xE2218C")]
	private void UpdateDestinationsConsole()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE2248C", Offset = "0xE2248C", VA = "0xE2248C")]
	private void OnLoggedInUser(Message<User> message)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE21718", Offset = "0xE21718", VA = "0xE21718")]
	private void UpdateConsole(string value)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE2237C", Offset = "0xE2237C", VA = "0xE2237C")]
	private bool PressAButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE22388", Offset = "0xE22388", VA = "0xE22388")]
	private bool PressBButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE22474", Offset = "0xE22474", VA = "0xE22474")]
	private bool PressUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE22480", Offset = "0xE22480", VA = "0xE22480")]
	private bool PressDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xE22544", Offset = "0xE22544", VA = "0xE22544")]
	public RichPresenceSample()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xE22618", Offset = "0xE22618", VA = "0xE22618")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8B30", Offset = "0x9B8B30")]
	private void <Start>b__12_0(Message<PlatformInitialize> message)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xE227D4", Offset = "0xE227D4", VA = "0xE227D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8B40", Offset = "0x9B8B40")]
	private void <SetPresence>b__13_0(Message message)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xE228C8", Offset = "0xE228C8", VA = "0xE228C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8B50", Offset = "0x9B8B50")]
	private void <SetPresence>b__13_1(Message<User> message2)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xE22ABC", Offset = "0xE22ABC", VA = "0xE22ABC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8B60", Offset = "0x9B8B60")]
	private void <ClearPresence>b__14_0(Message message)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xE22BB0", Offset = "0xE22BB0", VA = "0xE22BB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8B70", Offset = "0x9B8B70")]
	private void <ClearPresence>b__14_1(Message<User> message2)
	{
	}
}
[Token(Token = "0x2000078")]
public class BufferedAudioStream
{
	[Token(Token = "0x40002B9")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x40002BD")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40002BE")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40002BF")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40002C0")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xC6507C", Offset = "0xC6507C", VA = "0xC6507C")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xC65190", Offset = "0xC65190", VA = "0xC65190")]
	public void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xC65140", Offset = "0xC65140", VA = "0xC65140")]
	private void Stop()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xC65368", Offset = "0xC65368", VA = "0xC65368")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x2000079")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20002DD")]
	public delegate void OnClick();

	[Token(Token = "0x20002DE")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20002DF")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20002E0")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B20D8", Offset = "0x9B20D8")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD0F80C", Offset = "0xD0F80C", VA = "0xD0F80C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD101C8", Offset = "0xD101C8", VA = "0xD101C8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B20E8", Offset = "0x9B20E8")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD0FA90", Offset = "0xD0FA90", VA = "0xD0FA90")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD103FC", Offset = "0xD103FC", VA = "0xD103FC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B20F8", Offset = "0x9B20F8")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xD0FCAC", Offset = "0xD0FCAC", VA = "0xD0FCAC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD10660", Offset = "0xD10660", VA = "0xD10660")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2108", Offset = "0x9B2108")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD0FE44", Offset = "0xD0FE44", VA = "0xD0FE44")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD10A38", Offset = "0xD10A38", VA = "0xD10A38")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2118", Offset = "0x9B2118")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xD100A0", Offset = "0xD100A0", VA = "0xD100A0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD10A5C", Offset = "0xD10A5C", VA = "0xD10A5C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40002C3")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002C4")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002C5")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002D2")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002D3")]
	private const float marginH = 16f;

	[Token(Token = "0x40002D4")]
	private const float marginV = 16f;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD0E738", Offset = "0xD0E738", VA = "0xD0E738")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD0EB80", Offset = "0xD0EB80", VA = "0xD0EB80")]
	public void Show()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD0F160", Offset = "0xD0F160", VA = "0xD0F160")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD0EF04", Offset = "0xD0EF04", VA = "0xD0EF04")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD0F320", Offset = "0xD0F320", VA = "0xD0F320")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD0F5D8", Offset = "0xD0F5D8", VA = "0xD0F5D8")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD0F814", Offset = "0xD0F814", VA = "0xD0F814")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD0F8FC", Offset = "0xD0F8FC", VA = "0xD0F8FC")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD0FA98", Offset = "0xD0FA98", VA = "0xD0FA98")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD0FB34", Offset = "0xD0FB34", VA = "0xD0FB34")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD0FCB4", Offset = "0xD0FCB4", VA = "0xD0FCB4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xD0FE4C", Offset = "0xD0FE4C", VA = "0xD0FE4C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xD100A8", Offset = "0xD100A8", VA = "0xD100A8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xD10158", Offset = "0xD10158", VA = "0xD10158")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200007A")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xD13AF8", Offset = "0xD13AF8", VA = "0xD13AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xD13B80", Offset = "0xD13B80", VA = "0xD13B80")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xD13C48", Offset = "0xD13C48", VA = "0xD13C48")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD13C88", Offset = "0xD13C88", VA = "0xD13C88")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200007B")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20002E6")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000C19")]
		On,
		[Token(Token = "0x4000C1A")]
		Off,
		[Token(Token = "0x4000C1B")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000011")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xD144FC", Offset = "0xD144FC", VA = "0xD144FC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xD0EB3C", Offset = "0xD0EB3C", VA = "0xD0EB3C")]
		set
		{
		}
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD14504", Offset = "0xD14504", VA = "0xD14504")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xD1455C", Offset = "0xD1455C", VA = "0xD1455C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xD145F0", Offset = "0xD145F0", VA = "0xD145F0", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xD1460C", Offset = "0xD1460C", VA = "0xD1460C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD14664", Offset = "0xD14664", VA = "0xD14664")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD148C8", Offset = "0xD148C8", VA = "0xD148C8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD149DC", Offset = "0xD149DC", VA = "0xD149DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD14A70", Offset = "0xD14A70", VA = "0xD14A70")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200007C")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xC64988", Offset = "0xC64988", VA = "0xC64988")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xC64B98", Offset = "0xC64B98", VA = "0xC64B98")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xC65074", Offset = "0xC65074", VA = "0xC65074")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200007D")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD133A8", Offset = "0xD133A8", VA = "0xD133A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD134E0", Offset = "0xD134E0", VA = "0xD134E0")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD1373C", Offset = "0xD1373C", VA = "0xD1373C")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200007E")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000012")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xD137E8", Offset = "0xD137E8", VA = "0xD137E8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xD1343C", Offset = "0xD1343C", VA = "0xD1343C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8B80", Offset = "0x9B8B80")]
		add
		{
		}
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xD13744", Offset = "0xD13744", VA = "0xD13744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8B90", Offset = "0x9B8B90")]
		remove
		{
		}
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xD137F4", Offset = "0xD137F4", VA = "0xD137F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD13960", Offset = "0xD13960", VA = "0xD13960")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xD13AE0", Offset = "0xD13AE0", VA = "0xD13AE0")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xD13AE8", Offset = "0xD13AE8", VA = "0xD13AE8")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200007F")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B31E4", Offset = "0x9B31E4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B321C", Offset = "0x9B321C")]
	public bool EnableCollision;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3254", Offset = "0x9B3254")]
	public float MaxFade;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B328C", Offset = "0x9B328C")]
	public float FadeMinDistance;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B32C4", Offset = "0x9B32C4")]
	public float FadeMaxDistance;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xC655AC", Offset = "0xC655AC", VA = "0xC655AC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC65634", Offset = "0xC65634", VA = "0xC65634")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC656A4", Offset = "0xC656A4", VA = "0xC656A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xC656A8", Offset = "0xC656A8", VA = "0xC656A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xC656CC", Offset = "0xC656CC", VA = "0xC656CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xC656F0", Offset = "0xC656F0", VA = "0xC656F0")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000080")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xD151F8", Offset = "0xD151F8", VA = "0xD151F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xD152A4", Offset = "0xD152A4", VA = "0xD152A4")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000081")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20002E7")]
	public enum States
	{
		[Token(Token = "0x4000C1D")]
		Ready,
		[Token(Token = "0x4000C1E")]
		Aim,
		[Token(Token = "0x4000C1F")]
		CancelAim,
		[Token(Token = "0x4000C20")]
		PreTeleport,
		[Token(Token = "0x4000C21")]
		CancelTeleport,
		[Token(Token = "0x4000C22")]
		Teleporting,
		[Token(Token = "0x4000C23")]
		PostTeleport
	}

	[Token(Token = "0x20002E8")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000C25")]
		None,
		[Token(Token = "0x4000C26")]
		Aim,
		[Token(Token = "0x4000C27")]
		PreTeleport,
		[Token(Token = "0x4000C28")]
		Teleport
	}

	[Token(Token = "0x20002E9")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000C2A")]
		Point,
		[Token(Token = "0x4000C2B")]
		Sphere,
		[Token(Token = "0x4000C2C")]
		Capsule
	}

	[Token(Token = "0x20002EA")]
	public class AimData
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B882C", Offset = "0x9B882C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700012F")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xD184CC", Offset = "0xD184CC", VA = "0xD184CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB88", Offset = "0x9BBB88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xD184D4", Offset = "0xD184D4", VA = "0xD184D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB98", Offset = "0x9BBB98")]
			private set
			{
			}
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xD18458", Offset = "0xD18458", VA = "0xD18458")]
		public AimData()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD184DC", Offset = "0xD184DC", VA = "0xD184DC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2128", Offset = "0x9B2128")]
	private sealed class <ReadyStateCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xD18298", Offset = "0xD18298", VA = "0xD18298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xD18304", Offset = "0xD18304", VA = "0xD18304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xD16768", Offset = "0xD16768", VA = "0xD16768")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD181AC", Offset = "0xD181AC", VA = "0xD181AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD181B0", Offset = "0xD181B0", VA = "0xD181B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xD182A0", Offset = "0xD182A0", VA = "0xD182A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2138", Offset = "0x9B2138")]
	private sealed class <AimStateCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0xD17C68", Offset = "0xD17C68", VA = "0xD17C68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xD17CD4", Offset = "0xD17CD4", VA = "0xD17CD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xD16C54", Offset = "0xD16C54", VA = "0xD16C54")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD17B2C", Offset = "0xD17B2C", VA = "0xD17B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xD17B30", Offset = "0xD17B30", VA = "0xD17B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD17C70", Offset = "0xD17C70", VA = "0xD17C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2148", Offset = "0x9B2148")]
	private sealed class <CancelAimStateCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xD17D7C", Offset = "0xD17D7C", VA = "0xD17D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xD17DE8", Offset = "0xD17DE8", VA = "0xD17DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xD16E3C", Offset = "0xD16E3C", VA = "0xD16E3C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xD17CDC", Offset = "0xD17CDC", VA = "0xD17CDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xD17CE0", Offset = "0xD17CE0", VA = "0xD17CE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xD17D84", Offset = "0xD17D84", VA = "0xD17D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2158", Offset = "0x9B2158")]
	private sealed class <PreTeleportStateCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xD18138", Offset = "0xD18138", VA = "0xD18138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xD181A4", Offset = "0xD181A4", VA = "0xD181A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xD17024", Offset = "0xD17024", VA = "0xD17024")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xD1805C", Offset = "0xD1805C", VA = "0xD1805C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xD18060", Offset = "0xD18060", VA = "0xD18060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xD18140", Offset = "0xD18140", VA = "0xD18140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2168", Offset = "0x9B2168")]
	private sealed class <CancelTeleportStateCoroutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xD17E90", Offset = "0xD17E90", VA = "0xD17E90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xD17EFC", Offset = "0xD17EFC", VA = "0xD17EFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xD1720C", Offset = "0xD1720C", VA = "0xD1720C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xD17DF0", Offset = "0xD17DF0", VA = "0xD17DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xD17DF4", Offset = "0xD17DF4", VA = "0xD17DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xD17E98", Offset = "0xD17E98", VA = "0xD17E98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2178", Offset = "0x9B2178")]
	private sealed class <TeleportingStateCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xD183E4", Offset = "0xD183E4", VA = "0xD183E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xD18450", Offset = "0xD18450", VA = "0xD18450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xD173F4", Offset = "0xD173F4", VA = "0xD173F4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xD1830C", Offset = "0xD1830C", VA = "0xD1830C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xD18310", Offset = "0xD18310", VA = "0xD18310", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xD183EC", Offset = "0xD183EC", VA = "0xD183EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2188", Offset = "0x9B2188")]
	private sealed class <PostTeleportStateCoroutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xD17FE8", Offset = "0xD17FE8", VA = "0xD17FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xD18054", Offset = "0xD18054", VA = "0xD18054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xD175DC", Offset = "0xD175DC", VA = "0xD175DC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xD17F04", Offset = "0xD17F04", VA = "0xD17F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xD17F08", Offset = "0xD17F08", VA = "0xD17F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xD17FF0", Offset = "0xD17FF0", VA = "0xD17FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B32FC", Offset = "0x9B32FC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3334", Offset = "0x9B3334")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B336C", Offset = "0x9B336C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B33A4", Offset = "0x9B33A4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B33DC", Offset = "0x9B33DC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3414", Offset = "0x9B3414")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B344C", Offset = "0x9B344C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3484", Offset = "0x9B3484")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B34BC", Offset = "0x9B34BC")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B34CC", Offset = "0x9B34CC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3504", Offset = "0x9B3504")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B354C", Offset = "0x9B354C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B355C", Offset = "0x9B355C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3594", Offset = "0x9B3594")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B35CC", Offset = "0x9B35CC")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3604", Offset = "0x9B3604")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000013")]
	public States CurrentState
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xD15C98", Offset = "0xD15C98", VA = "0xD15C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8BA0", Offset = "0x9B8BA0")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xD15CA0", Offset = "0xD15CA0", VA = "0xD15CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8BB0", Offset = "0x9B8BB0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xD15ED0", Offset = "0xD15ED0", VA = "0xD15ED0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000015")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xD15EFC", Offset = "0xD15EFC", VA = "0xD15EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8BE0", Offset = "0x9B8BE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xD15F04", Offset = "0xD15F04", VA = "0xD15F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8BF0", Offset = "0x9B8BF0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xD15CA8", Offset = "0xD15CA8", VA = "0xD15CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8BC0", Offset = "0x9B8BC0")]
		add
		{
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xD15D4C", Offset = "0xD15D4C", VA = "0xD15D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8BD0", Offset = "0x9B8BD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xD16620", Offset = "0xD16620", VA = "0xD16620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8C38", Offset = "0x9B8C38")]
		add
		{
		}
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xD166C4", Offset = "0xD166C4", VA = "0xD166C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8C48", Offset = "0x9B8C48")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xD16794", Offset = "0xD16794", VA = "0xD16794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8CBC", Offset = "0x9B8CBC")]
		add
		{
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xD16838", Offset = "0xD16838", VA = "0xD16838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8CCC", Offset = "0x9B8CCC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xD168DC", Offset = "0xD168DC", VA = "0xD168DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8CDC", Offset = "0x9B8CDC")]
		add
		{
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xD16980", Offset = "0xD16980", VA = "0xD16980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8CEC", Offset = "0x9B8CEC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xD16A98", Offset = "0xD16A98", VA = "0xD16A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8CFC", Offset = "0x9B8CFC")]
		add
		{
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0xD16B3C", Offset = "0xD16B3C", VA = "0xD16B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8D0C", Offset = "0x9B8D0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xD16C80", Offset = "0xD16C80", VA = "0xD16C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8D80", Offset = "0x9B8D80")]
		add
		{
		}
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xD16D24", Offset = "0xD16D24", VA = "0xD16D24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8D90", Offset = "0x9B8D90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xD16E68", Offset = "0xD16E68", VA = "0xD16E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8E04", Offset = "0x9B8E04")]
		add
		{
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xD16F0C", Offset = "0xD16F0C", VA = "0xD16F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8E14", Offset = "0x9B8E14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0xD17050", Offset = "0xD17050", VA = "0xD17050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8E88", Offset = "0x9B8E88")]
		add
		{
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0xD170F4", Offset = "0xD170F4", VA = "0xD170F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8E98", Offset = "0x9B8E98")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0xD17238", Offset = "0xD17238", VA = "0xD17238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8F0C", Offset = "0x9B8F0C")]
		add
		{
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xD172DC", Offset = "0xD172DC", VA = "0xD172DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8F1C", Offset = "0x9B8F1C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0xD17420", Offset = "0xD17420", VA = "0xD17420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8F90", Offset = "0x9B8F90")]
		add
		{
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xD174C4", Offset = "0xD174C4", VA = "0xD174C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B8FA0", Offset = "0x9B8FA0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0xD17608", Offset = "0xD17608", VA = "0xD17608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9014", Offset = "0x9B9014")]
		add
		{
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0xD176AC", Offset = "0xD176AC", VA = "0xD176AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9024", Offset = "0x9B9024")]
		remove
		{
		}
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xD15950", Offset = "0xD15950", VA = "0xD15950")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xD15974", Offset = "0xD15974", VA = "0xD15974")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xD15DF0", Offset = "0xD15DF0", VA = "0xD15DF0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xD15F0C", Offset = "0xD15F0C", VA = "0xD15F0C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xD1626C", Offset = "0xD1626C", VA = "0xD1626C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B8C00", Offset = "0x9B8C00")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xD16324", Offset = "0xD16324", VA = "0xD16324")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xD163F0", Offset = "0xD163F0", VA = "0xD163F0")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xD1640C", Offset = "0xD1640C", VA = "0xD1640C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xD164D8", Offset = "0xD164D8", VA = "0xD164D8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xD16520", Offset = "0xD16520", VA = "0xD16520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xD1657C", Offset = "0xD1657C", VA = "0xD1657C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xD165AC", Offset = "0xD165AC", VA = "0xD165AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8C58", Offset = "0x9B8C58")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xD16A24", Offset = "0xD16A24", VA = "0xD16A24")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD16BE0", Offset = "0xD16BE0", VA = "0xD16BE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8D1C", Offset = "0x9B8D1C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xD16DC8", Offset = "0xD16DC8", VA = "0xD16DC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8DA0", Offset = "0x9B8DA0")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xD16FB0", Offset = "0xD16FB0", VA = "0xD16FB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8E24", Offset = "0x9B8E24")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xD17198", Offset = "0xD17198", VA = "0xD17198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8EA8", Offset = "0x9B8EA8")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xD17380", Offset = "0xD17380", VA = "0xD17380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8F2C", Offset = "0x9B8F2C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xD17568", Offset = "0xD17568", VA = "0xD17568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B8FB0", Offset = "0x9B8FB0")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xD17750", Offset = "0xD17750", VA = "0xD17750")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xD17898", Offset = "0xD17898", VA = "0xD17898")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xD178D0", Offset = "0xD178D0", VA = "0xD178D0")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xD179EC", Offset = "0xD179EC", VA = "0xD179EC")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD17B1C", Offset = "0xD17B1C", VA = "0xD17B1C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000082")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0xE24840", Offset = "0xE24840", VA = "0xE24840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9034", Offset = "0x9B9034")]
		add
		{
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xE248E4", Offset = "0xE248E4", VA = "0xE248E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9044", Offset = "0x9B9044")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0xE24988", Offset = "0xE24988", VA = "0xE24988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9054", Offset = "0x9B9054")]
		add
		{
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0xE24A2C", Offset = "0xE24A2C", VA = "0xE24A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9064", Offset = "0x9B9064")]
		remove
		{
		}
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xE24AD0", Offset = "0xE24AD0", VA = "0xE24AD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xE24B78", Offset = "0xE24B78", VA = "0xE24B78")]
	private void Start()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE24B7C", Offset = "0xE24B7C", VA = "0xE24B7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xE24BF0", Offset = "0xE24BF0", VA = "0xE24BF0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xE24D64", Offset = "0xE24D64", VA = "0xE24D64")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xE2504C", Offset = "0xE2504C", VA = "0xE2504C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xE25244", Offset = "0xE25244", VA = "0xE25244")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000083")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000242")]
	[Address(RVA = "0xE27220", Offset = "0xE27220", VA = "0xE27220", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xE27258", Offset = "0xE27258", VA = "0xE27258", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000244")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xE272F4", Offset = "0xE272F4", VA = "0xE272F4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000084")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B36FC", Offset = "0x9B36FC")]
	public float Range;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xE272FC", Offset = "0xE272FC", VA = "0xE272FC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xE2745C", Offset = "0xE2745C", VA = "0xE2745C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000085")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3734", Offset = "0x9B3734")]
	public float Range;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B376C", Offset = "0x9B376C")]
	public float MinimumElevation;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B37A4", Offset = "0x9B37A4")]
	public float Gravity;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B37DC", Offset = "0x9B37DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B37DC", Offset = "0x9B37DC")]
	public float AimVelocity;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3838", Offset = "0x9B3838")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B3838", Offset = "0x9B3838")]
	public float AimStep;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xE2746C", Offset = "0xE2746C", VA = "0xE2746C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xE276BC", Offset = "0xE276BC", VA = "0xE276BC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000086")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3890", Offset = "0x9B3890")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xE276D0", Offset = "0xE276D0", VA = "0xE276D0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xE277B4", Offset = "0xE277B4", VA = "0xE277B4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xE277E4", Offset = "0xE277E4", VA = "0xE277E4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xE27814", Offset = "0xE27814", VA = "0xE27814")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xE278B4", Offset = "0xE278B4", VA = "0xE278B4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xE27914", Offset = "0xE27914", VA = "0xE27914", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xE27978", Offset = "0xE27978", VA = "0xE27978")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000087")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B38C8", Offset = "0x9B38C8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B38D8", Offset = "0x9B38D8")]
	public Transform PositionIndicator;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3910", Offset = "0x9B3910")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3948", Offset = "0x9B3948")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000016")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xE27A9C", Offset = "0xE27A9C", VA = "0xE27A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9074", Offset = "0x9B9074")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xE27AA4", Offset = "0xE27AA4", VA = "0xE27AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9084", Offset = "0x9B9084")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xE27C5C", Offset = "0xE27C5C", VA = "0xE27C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9094", Offset = "0x9B9094")]
		add
		{
		}
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xE27D00", Offset = "0xE27D00", VA = "0xE27D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B90A4", Offset = "0x9B90A4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xE27AB0", Offset = "0xE27AB0", VA = "0xE27AB0")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xE27B40", Offset = "0xE27B40", VA = "0xE27B40")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE27C18", Offset = "0xE27C18", VA = "0xE27C18")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xE27C58", Offset = "0xE27C58", VA = "0xE27C58")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xE27DA4", Offset = "0xE27DA4", VA = "0xE27DA4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xE27E0C", Offset = "0xE27E0C", VA = "0xE27E0C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xE27E30", Offset = "0xE27E30", VA = "0xE27E30", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000088")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2198", Offset = "0x9B2198")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xE28530", Offset = "0xE28530", VA = "0xE28530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xE2859C", Offset = "0xE2859C", VA = "0xE2859C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xE2826C", Offset = "0xE2826C", VA = "0xE2826C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xE2849C", Offset = "0xE2849C", VA = "0xE2849C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xE284A0", Offset = "0xE284A0", VA = "0xE284A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xE28538", Offset = "0xE28538", VA = "0xE28538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B21A8", Offset = "0x9B21A8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xE28428", Offset = "0xE28428", VA = "0xE28428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0xE28494", Offset = "0xE28494", VA = "0xE28494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xE2830C", Offset = "0xE2830C", VA = "0xE2830C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xE28390", Offset = "0xE28390", VA = "0xE28390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xE28394", Offset = "0xE28394", VA = "0xE28394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xE28430", Offset = "0xE28430", VA = "0xE28430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xE28028", Offset = "0xE28028", VA = "0xE28028")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xE280D4", Offset = "0xE280D4", VA = "0xE280D4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xE28134", Offset = "0xE28134", VA = "0xE28134", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xE281F8", Offset = "0xE281F8", VA = "0xE281F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B90B4", Offset = "0x9B90B4")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xE28298", Offset = "0xE28298", VA = "0xE28298")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9118", Offset = "0x9B9118")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000262")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xE28338", Offset = "0xE28338", VA = "0xE28338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B917C", Offset = "0x9B917C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xE28364", Offset = "0xE28364", VA = "0xE28364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B918C", Offset = "0x9B918C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000089")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B3990", Offset = "0x9B3990")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B39A0", Offset = "0x9B39A0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B39D8", Offset = "0x9B39D8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3A10", Offset = "0x9B3A10")]
	public bool FastTeleport;

	[Token(Token = "0x17000017")]
	public Transform Pointer
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1C4F3D0", Offset = "0x1C4F3D0", VA = "0x1C4F3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B919C", Offset = "0x9B919C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1C4F3D8", Offset = "0x1C4F3D8", VA = "0x1C4F3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B91AC", Offset = "0x9B91AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1C4F3E0", Offset = "0x1C4F3E0", VA = "0x1C4F3E0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1C4F540", Offset = "0x1C4F540", VA = "0x1C4F540", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1C4F5FC", Offset = "0x1C4F5FC", VA = "0x1C4F5FC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200008A")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20002F4")]
	public enum InputModes
	{
		[Token(Token = "0x4000C4E")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000C4F")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000C50")]
		ThumbstickTeleport,
		[Token(Token = "0x4000C51")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20002F5")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000C53")]
		A,
		[Token(Token = "0x4000C54")]
		B,
		[Token(Token = "0x4000C55")]
		LeftTrigger,
		[Token(Token = "0x4000C56")]
		LeftThumbstick,
		[Token(Token = "0x4000C57")]
		RightTrigger,
		[Token(Token = "0x4000C58")]
		RightThumbstick,
		[Token(Token = "0x4000C59")]
		X,
		[Token(Token = "0x4000C5A")]
		Y
	}

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3A48", Offset = "0x9B3A48")]
	public InputModes InputMode;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3A80", Offset = "0x9B3A80")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3AB8", Offset = "0x9B3AB8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3AF0", Offset = "0x9B3AF0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1C4F604", Offset = "0x1C4F604", VA = "0x1C4F604")]
	private void Start()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1C4F608", Offset = "0x1C4F608", VA = "0x1C4F608", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1C4FA58", Offset = "0x1C4FA58", VA = "0x1C4FA58", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1C4FB1C", Offset = "0x1C4FB1C", VA = "0x1C4FB1C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200008B")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20002F6")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000C5C")]
		HeadRelative,
		[Token(Token = "0x4000C5D")]
		ForwardFacing
	}

	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B21B8", Offset = "0x9B21B8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0x1C4FFD8", Offset = "0x1C4FFD8", VA = "0x1C4FFD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x1C50044", Offset = "0x1C50044", VA = "0x1C50044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1C4FDAC", Offset = "0x1C4FDAC", VA = "0x1C4FDAC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x1C4FF2C", Offset = "0x1C4FF2C", VA = "0x1C4FF2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x1C4FF30", Offset = "0x1C4FF30", VA = "0x1C4FF30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x1C4FFE0", Offset = "0x1C4FFE0", VA = "0x1C4FFE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1C4FBCC", Offset = "0x1C4FBCC", VA = "0x1C4FBCC")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1C4FC88", Offset = "0x1C4FC88", VA = "0x1C4FC88")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1C4FC90", Offset = "0x1C4FC90", VA = "0x1C4FC90", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1C4FCE8", Offset = "0x1C4FCE8", VA = "0x1C4FCE8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1C4FD38", Offset = "0x1C4FD38", VA = "0x1C4FD38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B91BC", Offset = "0x9B91BC")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000274")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1C4FDD8", Offset = "0x1C4FDD8", VA = "0x1C4FDD8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1C4FF00", Offset = "0x1C4FF00", VA = "0x1C4FF00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9220", Offset = "0x9B9220")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200008C")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1C5004C", Offset = "0x1C5004C", VA = "0x1C5004C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1C50050", Offset = "0x1C50050", VA = "0x1C50050", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1C500D0", Offset = "0x1C500D0", VA = "0x1C500D0")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200008D")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3B28", Offset = "0x9B3B28")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3B60", Offset = "0x9B3B60")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3B98", Offset = "0x9B3B98")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3BD0", Offset = "0x9B3BD0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1C500D4", Offset = "0x1C500D4", VA = "0x1C500D4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x1C50144", Offset = "0x1C50144", VA = "0x1C50144", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1C505CC", Offset = "0x1C505CC", VA = "0x1C505CC")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3C08", Offset = "0x9B3C08")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3C40", Offset = "0x9B3C40")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3C78", Offset = "0x9B3C78")]
	public float RotateStickThreshold;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1C505D0", Offset = "0x1C505D0", VA = "0x1C505D0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1C50614", Offset = "0x1C50614", VA = "0x1C50614", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1C50A88", Offset = "0x1C50A88", VA = "0x1C50A88")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1C50A98", Offset = "0x1C50A98", VA = "0x1C50A98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1C50A9C", Offset = "0x1C50A9C", VA = "0x1C50A9C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1C50AA4", Offset = "0x1C50AA4", VA = "0x1C50AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1C50B8C", Offset = "0x1C50B8C", VA = "0x1C50B8C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1C50BB4", Offset = "0x1C50BB4", VA = "0x1C50BB4")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000090")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B3CB0", Offset = "0x9B3CB0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000018")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x1C50BCC", Offset = "0x1C50BCC", VA = "0x1C50BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9230", Offset = "0x9B9230")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x1C50BD4", Offset = "0x1C50BD4", VA = "0x1C50BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9240", Offset = "0x9B9240")]
		private set
		{
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1C50BDC", Offset = "0x1C50BDC", VA = "0x1C50BDC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1C50C40", Offset = "0x1C50C40", VA = "0x1C50C40", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1C50C6C", Offset = "0x1C50C6C", VA = "0x1C50C6C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9250", Offset = "0x9B9250")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1C4FCDC", Offset = "0x1C4FCDC", VA = "0x1C4FCDC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1C4FD30", Offset = "0x1C4FD30", VA = "0x1C4FD30", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1C4FC80", Offset = "0x1C4FC80", VA = "0x1C4FC80")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000091")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B21C8", Offset = "0x9B21C8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x1C512D0", Offset = "0x1C512D0", VA = "0x1C512D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x1C5133C", Offset = "0x1C5133C", VA = "0x1C5133C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x1C50EC8", Offset = "0x1C50EC8", VA = "0x1C50EC8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x1C51064", Offset = "0x1C51064", VA = "0x1C51064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x1C51068", Offset = "0x1C51068", VA = "0x1C51068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1C512D8", Offset = "0x1C512D8", VA = "0x1C512D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3CC0", Offset = "0x9B3CC0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400036C")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1C50D34", Offset = "0x1C50D34", VA = "0x1C50D34")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1C50DF8", Offset = "0x1C50DF8", VA = "0x1C50DF8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1C50E28", Offset = "0x1C50E28", VA = "0x1C50E28", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1C50E54", Offset = "0x1C50E54", VA = "0x1C50E54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9288", Offset = "0x9B9288")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1C50EF4", Offset = "0x1C50EF4", VA = "0x1C50EF4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000292")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1C50F10", Offset = "0x1C50F10", VA = "0x1C50F10", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1C51038", Offset = "0x1C51038", VA = "0x1C51038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B92EC", Offset = "0x9B92EC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000092")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1C51344", Offset = "0x1C51344", VA = "0x1C51344")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1C513A4", Offset = "0x1C513A4", VA = "0x1C513A4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1C5152C", Offset = "0x1C5152C", VA = "0x1C5152C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1C5161C", Offset = "0x1C5161C", VA = "0x1C5161C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B92FC", Offset = "0x9B92FC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1C51620", Offset = "0x1C51620", VA = "0x1C51620")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3CF8", Offset = "0x9B3CF8")]
	public float LOSOffset;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3D30", Offset = "0x9B3D30")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1C5162C", Offset = "0x1C5162C", VA = "0x1C5162C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1C51860", Offset = "0x1C51860", VA = "0x1C51860")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000094")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1C5186C", Offset = "0x1C5186C", VA = "0x1C5186C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1C519F4", Offset = "0x1C519F4", VA = "0x1C519F4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000095")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1C519F8", Offset = "0x1C519F8", VA = "0x1C519F8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1C51A98", Offset = "0x1C51A98", VA = "0x1C51A98", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A0")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1C51B34", Offset = "0x1C51B34", VA = "0x1C51B34")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B21D8", Offset = "0x9B21D8")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x1C51EAC", Offset = "0x1C51EAC", VA = "0x1C51EAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0x1C51F18", Offset = "0x1C51F18", VA = "0x1C51F18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1C51BDC", Offset = "0x1C51BDC", VA = "0x1C51BDC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1C51DA8", Offset = "0x1C51DA8", VA = "0x1C51DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1C51DAC", Offset = "0x1C51DAC", VA = "0x1C51DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1C51EB4", Offset = "0x1C51EB4", VA = "0x1C51EB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3D68", Offset = "0x9B3D68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B3D68", Offset = "0x9B3D68")]
	public float TransitionDuration;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3DC0", Offset = "0x9B3DC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B3DC0", Offset = "0x9B3DC0")]
	public float TeleportDelay;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3E14", Offset = "0x9B3E14")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1C51B3C", Offset = "0x1C51B3C", VA = "0x1C51B3C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1C51B68", Offset = "0x1C51B68", VA = "0x1C51B68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9334", Offset = "0x9B9334")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1C51C08", Offset = "0x1C51C08", VA = "0x1C51C08")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1C51F20", Offset = "0x1C51F20", VA = "0x1C51F20", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1C51F3C", Offset = "0x1C51F3C", VA = "0x1C51F3C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B21E8", Offset = "0x9B21E8")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x1C52190", Offset = "0x1C52190", VA = "0x1C52190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x1C521FC", Offset = "0x1C521FC", VA = "0x1C521FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1C51FE4", Offset = "0x1C51FE4", VA = "0x1C51FE4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1C52058", Offset = "0x1C52058", VA = "0x1C52058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1C5205C", Offset = "0x1C5205C", VA = "0x1C5205C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1C52198", Offset = "0x1C52198", VA = "0x1C52198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3E4C", Offset = "0x9B3E4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B3E4C", Offset = "0x9B3E4C")]
	public float TransitionDuration;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1C51F44", Offset = "0x1C51F44", VA = "0x1C51F44", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1C51F70", Offset = "0x1C51F70", VA = "0x1C51F70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9398", Offset = "0x9B9398")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1C52010", Offset = "0x1C52010", VA = "0x1C52010")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000099")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000019")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xD1A344", Offset = "0xD1A344", VA = "0xD1A344")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001A")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xD1A600", Offset = "0xD1A600", VA = "0xD1A600")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001B")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xD18C60", Offset = "0xD18C60", VA = "0xD18C60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001C")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xD197D8", Offset = "0xD197D8", VA = "0xD197D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xD19E00", Offset = "0xD19E00", VA = "0xD19E00")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xD19B44", Offset = "0xD19B44", VA = "0xD19B44")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xD190B4", Offset = "0xD190B4", VA = "0xD190B4")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xD1923C", Offset = "0xD1923C", VA = "0xD1923C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD19960", Offset = "0xD19960", VA = "0xD19960")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xD19FFC", Offset = "0xD19FFC", VA = "0xD19FFC")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xD19614", Offset = "0xD19614", VA = "0xD19614")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200009A")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	public enum VideoShape
	{
		[Token(Token = "0x4000C70")]
		_360,
		[Token(Token = "0x4000C71")]
		_180,
		[Token(Token = "0x4000C72")]
		Quad
	}

	[Token(Token = "0x20002FC")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000C74")]
		Mono,
		[Token(Token = "0x4000C75")]
		TopBottom,
		[Token(Token = "0x4000C76")]
		LeftRight
	}

	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B21F8", Offset = "0x9B21F8")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xD1A2D0", Offset = "0xD1A2D0", VA = "0xD1A2D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xD1A33C", Offset = "0xD1A33C", VA = "0xD1A33C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xD18DA8", Offset = "0xD18DA8", VA = "0xD18DA8")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xD1A148", Offset = "0xD1A148", VA = "0xD1A148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xD1A14C", Offset = "0xD1A14C", VA = "0xD1A14C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xD1A2D8", Offset = "0xD1A2D8", VA = "0xD1A2D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2208", Offset = "0x9B2208")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xD19014", Offset = "0xD19014", VA = "0xD19014")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xD19D28", Offset = "0xD19D28", VA = "0xD19D28")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B3EB4", Offset = "0x9B3EB4")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string MovieName;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool LoopVideo;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public VideoShape Shape;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VideoStereo Stereo;

	[Token(Token = "0x1700001D")]
	public bool isPlaying
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xD18888", Offset = "0xD18888", VA = "0xD18888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B93FC", Offset = "0x9B93FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xD18890", Offset = "0xD18890", VA = "0xD18890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B940C", Offset = "0x9B940C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xD1889C", Offset = "0xD1889C", VA = "0xD1889C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xD18CC8", Offset = "0xD18CC8", VA = "0xD18CC8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xD18D34", Offset = "0xD18D34", VA = "0xD18D34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B941C", Offset = "0x9B941C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xD18DD4", Offset = "0xD18DD4", VA = "0xD18DD4")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xD1901C", Offset = "0xD1901C", VA = "0xD1901C")]
	public void Play()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xD191A8", Offset = "0xD191A8", VA = "0xD191A8")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xD19330", Offset = "0xD19330", VA = "0xD19330")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xD198C8", Offset = "0xD198C8", VA = "0xD198C8")]
	public void Rewind()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xD19AB0", Offset = "0xD19AB0", VA = "0xD19AB0")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xD19C38", Offset = "0xD19C38", VA = "0xD19C38")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xD19D20", Offset = "0xD19D20", VA = "0xD19D20")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200009B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B173C", Offset = "0x9B173C")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20002FF")]
	private enum CubeFace
	{
		[Token(Token = "0x4000C7E")]
		Right,
		[Token(Token = "0x4000C7F")]
		Left,
		[Token(Token = "0x4000C80")]
		Top,
		[Token(Token = "0x4000C81")]
		Bottom,
		[Token(Token = "0x4000C82")]
		Front,
		[Token(Token = "0x4000C83")]
		Back,
		[Token(Token = "0x4000C84")]
		COUNT
	}

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xC83CF4", Offset = "0xC83CF4", VA = "0xC83CF4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xC83E54", Offset = "0xC83E54", VA = "0xC83E54")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xC84010", Offset = "0xC84010", VA = "0xC84010")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xC844FC", Offset = "0xC844FC", VA = "0xC844FC")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xC847D4", Offset = "0xC847D4", VA = "0xC847D4")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xC85A54", Offset = "0xC85A54", VA = "0xC85A54")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xC85AB4", Offset = "0xC85AB4", VA = "0xC85AB4")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC84B54", Offset = "0xC84B54", VA = "0xC84B54")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC85B9C", Offset = "0xC85B9C", VA = "0xC85B9C")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xC85D88", Offset = "0xC85D88", VA = "0xC85D88")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xC8501C", Offset = "0xC8501C", VA = "0xC8501C")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xC85350", Offset = "0xC85350", VA = "0xC85350")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xC856AC", Offset = "0xC856AC", VA = "0xC856AC")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xC85F44", Offset = "0xC85F44", VA = "0xC85F44")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x200009C")]
public static class VectorUtil
{
	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1C55D14", Offset = "0x1C55D14", VA = "0x1C55D14")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200009D")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xD10E50", Offset = "0xD10E50", VA = "0xD10E50")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xD11248", Offset = "0xD11248", VA = "0xD11248")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xD11304", Offset = "0xD11304", VA = "0xD11304")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xD1150C", Offset = "0xD1150C", VA = "0xD1150C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xD115F8", Offset = "0xD115F8", VA = "0xD115F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xD116D4", Offset = "0xD116D4", VA = "0xD116D4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xD11740", Offset = "0xD11740", VA = "0xD11740")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xD11748", Offset = "0xD11748", VA = "0xD11748")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9490", Offset = "0x9B9490")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xD117A4", Offset = "0xD117A4", VA = "0xD117A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B94A0", Offset = "0x9B94A0")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xD11800", Offset = "0xD11800", VA = "0xD11800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B94B0", Offset = "0x9B94B0")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xD1185C", Offset = "0xD1185C", VA = "0xD1185C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B94C0", Offset = "0x9B94C0")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200009E")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2218", Offset = "0x9B2218")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xD140EC", Offset = "0xD140EC", VA = "0xD140EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xD14158", Offset = "0xD14158", VA = "0xD14158", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xD13F98", Offset = "0xD13F98", VA = "0xD13F98")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xD13FCC", Offset = "0xD13FCC", VA = "0xD13FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xD13FD0", Offset = "0xD13FD0", VA = "0xD13FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xD140F4", Offset = "0xD140F4", VA = "0xD140F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xD13C90", Offset = "0xD13C90", VA = "0xD13C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xD13D94", Offset = "0xD13D94", VA = "0xD13D94")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xD13D20", Offset = "0xD13D20", VA = "0xD13D20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B94D0", Offset = "0x9B94D0")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xD13FC4", Offset = "0xD13FC4", VA = "0xD13FC4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200009F")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B3ED4", Offset = "0x9B3ED4")]
	public int SubdivisionsU;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B3EF0", Offset = "0x9B3EF0")]
	public int SubdivisionsV;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xC659A0", Offset = "0xC659A0", VA = "0xC659A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC66460", Offset = "0xC66460", VA = "0xC66460")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000A0")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700001E")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xD152AC", Offset = "0xD152AC", VA = "0xD152AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xD15304", Offset = "0xD15304", VA = "0xD15304")]
	public void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xD1563C", Offset = "0xD1563C", VA = "0xD1563C")]
	public void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xD15718", Offset = "0xD15718", VA = "0xD15718")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9534", Offset = "0x9B9534")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60002E8")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60002EA")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60002EB")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60002EC")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60002ED")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60002EE")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60002EF")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xD15780", Offset = "0xD15780", VA = "0xD15780")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xD157C0", Offset = "0xD157C0", VA = "0xD157C0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xD15834", Offset = "0xD15834", VA = "0xD15834")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xD15998", Offset = "0xD15998", VA = "0xD15998")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xD15A78", Offset = "0xD15A78", VA = "0xD15A78")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xD15540", Offset = "0xD15540", VA = "0xD15540")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xD15B3C", Offset = "0xD15B3C", VA = "0xD15B3C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xD15BAC", Offset = "0xD15BAC", VA = "0xD15BAC")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xD15C90", Offset = "0xD15C90", VA = "0xD15C90")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000A1")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2228", Offset = "0x9B2228")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xE27110", Offset = "0xE27110", VA = "0xE27110")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xE27200", Offset = "0xE27200", VA = "0xE27200")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xE26F68", Offset = "0xE26F68", VA = "0xE26F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xE27118", Offset = "0xE27118", VA = "0xE27118")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xE271F8", Offset = "0xE271F8", VA = "0xE271F8")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B17D0", Offset = "0x9B17D0")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000C8B")]
		MouseXAndY,
		[Token(Token = "0x4000C8C")]
		MouseX,
		[Token(Token = "0x4000C8D")]
		MouseY
	}

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xD18540", Offset = "0xD18540", VA = "0xD18540")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xD187A8", Offset = "0xD187A8", VA = "0xD187A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xD18868", Offset = "0xD18868", VA = "0xD18868")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000A3")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000A4")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x18F1EAC", Offset = "0x18F1EAC", VA = "0x18F1EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x18F1EB0", Offset = "0x18F1EB0", VA = "0x18F1EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x18F1EB4", Offset = "0x18F1EB4", VA = "0x18F1EB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x18F2024", Offset = "0x18F2024", VA = "0x18F2024")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x18F1F04", Offset = "0x18F1F04", VA = "0x18F1F04")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x18F1F98", Offset = "0x18F1F98", VA = "0x18F1F98")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x18F2074", Offset = "0x18F2074", VA = "0x18F2074")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x18F210C", Offset = "0x18F210C", VA = "0x18F210C")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x18F2274", Offset = "0x18F2274", VA = "0x18F2274")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x18F23DC", Offset = "0x18F23DC", VA = "0x18F23DC")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000A5")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000303")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40003D6")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40003DC")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xDD3F14", Offset = "0xDD3F14", VA = "0xDD3F14")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xDD3F4C", Offset = "0xDD3F4C", VA = "0xDD3F4C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xDD411C", Offset = "0xDD411C", VA = "0xDD411C")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xDD41D0", Offset = "0xDD41D0", VA = "0xDD41D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xDD42DC", Offset = "0xDD42DC", VA = "0xDD42DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xDD4CB8", Offset = "0xDD4CB8", VA = "0xDD4CB8")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000310")]
	[Address(RVA = "0xDD41B0", Offset = "0xDD41B0", VA = "0xDD41B0")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000311")]
	[Address(RVA = "0xDD4234", Offset = "0xDD4234", VA = "0xDD4234")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000312")]
	[Address(RVA = "0xDD49B4", Offset = "0xDD49B4", VA = "0xDD49B4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000313")]
	[Address(RVA = "0xDD4A4C", Offset = "0xDD4A4C", VA = "0xDD4A4C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000314")]
	[Address(RVA = "0xDD4AE8", Offset = "0xDD4AE8", VA = "0xDD4AE8")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000315")]
	[Address(RVA = "0xDD4B84", Offset = "0xDD4B84", VA = "0xDD4B84")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000316")]
	[Address(RVA = "0xDD4C1C", Offset = "0xDD4C1C", VA = "0xDD4C1C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000317")]
	[Address(RVA = "0xDD5AF4", Offset = "0xDD5AF4", VA = "0xDD5AF4")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000318")]
	[Address(RVA = "0xDD5BB4", Offset = "0xDD5BB4", VA = "0xDD5BB4")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xDD5C74", Offset = "0xDD5C74", VA = "0xDD5C74")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000A6")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000C8F")]
		Uninitialized = -1,
		[Token(Token = "0x4000C90")]
		NotEnabled,
		[Token(Token = "0x4000C91")]
		Success,
		[Token(Token = "0x4000C92")]
		StreamError,
		[Token(Token = "0x4000C93")]
		ProcessError,
		[Token(Token = "0x4000C94")]
		MaxStatValue
	}

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700001F")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xD1A8B0", Offset = "0xD1A8B0", VA = "0xD1A8B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xD1A8B8", Offset = "0xD1A8B8", VA = "0xD1A8B8")]
		set
		{
		}
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xD1A8C4", Offset = "0xD1A8C4", VA = "0xD1A8C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xD1AAE4", Offset = "0xD1AAE4", VA = "0xD1AAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xD1AD44", Offset = "0xD1AD44", VA = "0xD1AD44")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000A7")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000305")]
	private enum Parameters
	{
		[Token(Token = "0x4000C96")]
		P_GAIN,
		[Token(Token = "0x4000C97")]
		P_USEINVSQR,
		[Token(Token = "0x4000C98")]
		P_NEAR,
		[Token(Token = "0x4000C99")]
		P_FAR,
		[Token(Token = "0x4000C9A")]
		P_RADIUS,
		[Token(Token = "0x4000C9B")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000C9C")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000C9D")]
		P_AMBISTAT,
		[Token(Token = "0x4000C9E")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000C9F")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000CA0")]
		P_SENDLEVEL,
		[Token(Token = "0x4000CA1")]
		P_NUM
	}

	[Token(Token = "0x40003E2")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000020")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xD1AFD0", Offset = "0xD1AFD0", VA = "0xD1AFD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xD1AFD8", Offset = "0xD1AFD8", VA = "0xD1AFD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public float Gain
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xD1AFE4", Offset = "0xD1AFE4", VA = "0xD1AFE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xD1AFEC", Offset = "0xD1AFEC", VA = "0xD1AFEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xD1B070", Offset = "0xD1B070", VA = "0xD1B070")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xD1B078", Offset = "0xD1B078", VA = "0xD1B078")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public float Near
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xD1B084", Offset = "0xD1B084", VA = "0xD1B084")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xD1B08C", Offset = "0xD1B08C", VA = "0xD1B08C")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float Far
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xD1B114", Offset = "0xD1B114", VA = "0xD1B114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xD1B11C", Offset = "0xD1B11C", VA = "0xD1B11C")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public float VolumetricRadius
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xD1B1A4", Offset = "0xD1B1A4", VA = "0xD1B1A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xD1B1AC", Offset = "0xD1B1AC", VA = "0xD1B1AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public float ReverbSend
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xD1B234", Offset = "0xD1B234", VA = "0xD1B234")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xD1B23C", Offset = "0xD1B23C", VA = "0xD1B23C")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xD1B2C4", Offset = "0xD1B2C4", VA = "0xD1B2C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xD1B2CC", Offset = "0xD1B2CC", VA = "0xD1B2CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xD1ADC8", Offset = "0xD1ADC8", VA = "0xD1ADC8")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9B956C", Offset = "0x9B956C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000322")]
	[Address(RVA = "0xD1AED8", Offset = "0xD1AED8", VA = "0xD1AED8")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xD1B2D8", Offset = "0xD1B2D8", VA = "0xD1B2D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xD1B450", Offset = "0xD1B450", VA = "0xD1B450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xD1B454", Offset = "0xD1B454", VA = "0xD1B454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xD1B344", Offset = "0xD1B344", VA = "0xD1B344")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xD1B520", Offset = "0xD1B520", VA = "0xD1B520")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xD1B980", Offset = "0xD1B980", VA = "0xD1B980")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000339")]
	[Address(RVA = "0xD1AE40", Offset = "0xD1AE40", VA = "0xD1AE40")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xD1BA50", Offset = "0xD1BA50", VA = "0xD1BA50")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40003ED")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40003EF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x18E28CC", Offset = "0x18E28CC", VA = "0x18E28CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x18E28D8", Offset = "0x18E28D8", VA = "0x18E28D8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600033E")]
	[Address(RVA = "0x18E29A8", Offset = "0x18E29A8", VA = "0x18E29A8")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600033F")]
	[Address(RVA = "0x18E2910", Offset = "0x18E2910", VA = "0x18E2910")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x18E2A40", Offset = "0x18E2A40", VA = "0x18E2A40")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000307")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40003F6")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000028")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x18E5908", Offset = "0x18E5908", VA = "0x18E5908")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public string filePath
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x18E5994", Offset = "0x18E5994", VA = "0x18E5994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x18E5A0C", Offset = "0x18E5A0C", VA = "0x18E5A0C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x18E5B48", Offset = "0x18E5B48", VA = "0x18E5B48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x18E5B4C", Offset = "0x18E5B4C", VA = "0x18E5B4C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x18E60BC", Offset = "0x18E60BC", VA = "0x18E60BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x18E6460", Offset = "0x18E6460", VA = "0x18E6460")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x18E65C0", Offset = "0x18E65C0", VA = "0x18E65C0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x18E6C88", Offset = "0x18E6C88", VA = "0x18E6C88")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x18E6CD4", Offset = "0x18E6CD4", VA = "0x18E6CD4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x18E8644", Offset = "0x18E8644", VA = "0x18E8644")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x18E8518", Offset = "0x18E8518", VA = "0x18E8518")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x18E5EF0", Offset = "0x18E5EF0", VA = "0x18E5EF0")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x18E5D1C", Offset = "0x18E5D1C", VA = "0x18E5D1C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x18E8C58", Offset = "0x18E8C58", VA = "0x18E8C58")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x18E90A0", Offset = "0x18E90A0", VA = "0x18E90A0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000AA")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000308")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000CA8")]
		Int8,
		[Token(Token = "0x4000CA9")]
		UInt8,
		[Token(Token = "0x4000CAA")]
		Int16,
		[Token(Token = "0x4000CAB")]
		UInt16,
		[Token(Token = "0x4000CAC")]
		Int32,
		[Token(Token = "0x4000CAD")]
		UInt32,
		[Token(Token = "0x4000CAE")]
		Int64,
		[Token(Token = "0x4000CAF")]
		UInt64,
		[Token(Token = "0x4000CB0")]
		Float16,
		[Token(Token = "0x4000CB1")]
		Float32,
		[Token(Token = "0x4000CB2")]
		Float64
	}

	[Token(Token = "0x2000309")]
	public class ClientType
	{
		[Token(Token = "0x4000CB3")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000CB4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000CB5")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000CB6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000CB7")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000CB8")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000CB9")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000CBA")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000CBB")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000CBC")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000CBD")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000CBE")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000CBF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x18E2F2C", Offset = "0x18E2F2C", VA = "0x18E2F2C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200030A")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001345")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001346")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001347")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001348")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001349")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600134A")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600134B")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600134C")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600134D")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600134E")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600134F")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001350")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001351")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001352")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001353")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200030B")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000CC0")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700014E")]
		private IntPtr context
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x18E3CF0", Offset = "0x18E3CF0", VA = "0x18E3CF0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x18E3D54", Offset = "0x18E3D54", VA = "0x18E3D54")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001356")]
		[Address(RVA = "0x18E3DFC", Offset = "0x18E3DFC", VA = "0x18E3DFC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x18E3EA4", Offset = "0x18E3EA4", VA = "0x18E3EA4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x18E3EC8", Offset = "0x18E3EC8", VA = "0x18E3EC8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x18E3F70", Offset = "0x18E3F70", VA = "0x18E3F70", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135A")]
		[Address(RVA = "0x18E3F94", Offset = "0x18E3F94", VA = "0x18E3F94")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x18E4038", Offset = "0x18E4038", VA = "0x18E4038", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x18E405C", Offset = "0x18E405C", VA = "0x18E405C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x18E40F4", Offset = "0x18E40F4", VA = "0x18E40F4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135E")]
		[Address(RVA = "0x18E40FC", Offset = "0x18E40FC", VA = "0x18E40FC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x18E4220", Offset = "0x18E4220", VA = "0x18E4220", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001360")]
		[Address(RVA = "0x18E4318", Offset = "0x18E4318", VA = "0x18E4318")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x18E43C8", Offset = "0x18E43C8", VA = "0x18E43C8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x18E43D4", Offset = "0x18E43D4", VA = "0x18E43D4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x18E4518", Offset = "0x18E4518", VA = "0x18E4518", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001364")]
		[Address(RVA = "0x18E4524", Offset = "0x18E4524", VA = "0x18E4524")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x18E45E8", Offset = "0x18E45E8", VA = "0x18E45E8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001366")]
		[Address(RVA = "0x18E45F4", Offset = "0x18E45F4", VA = "0x18E45F4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x18E46B8", Offset = "0x18E46B8", VA = "0x18E46B8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001368")]
		[Address(RVA = "0x18E46C4", Offset = "0x18E46C4", VA = "0x18E46C4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x18E4788", Offset = "0x18E4788", VA = "0x18E4788", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136A")]
		[Address(RVA = "0x18E4794", Offset = "0x18E4794", VA = "0x18E4794")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x18E4838", Offset = "0x18E4838", VA = "0x18E4838", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136C")]
		[Address(RVA = "0x18E485C", Offset = "0x18E485C", VA = "0x18E485C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x18E48F4", Offset = "0x18E48F4", VA = "0x18E48F4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136E")]
		[Address(RVA = "0x18E48FC", Offset = "0x18E48FC", VA = "0x18E48FC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x18E49BC", Offset = "0x18E49BC", VA = "0x18E49BC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001370")]
		[Address(RVA = "0x18E49C8", Offset = "0x18E49C8", VA = "0x18E49C8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x18E4A88", Offset = "0x18E4A88", VA = "0x18E4A88", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x18E4A98", Offset = "0x18E4A98", VA = "0x18E4A98")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x18E4B40", Offset = "0x18E4B40", VA = "0x18E4B40", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x18E2ED8", Offset = "0x18E2ED8", VA = "0x18E2ED8")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200030C")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000CC2")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700014F")]
		private IntPtr context
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x18E4B4C", Offset = "0x18E4B4C", VA = "0x18E4B4C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001376")]
		[Address(RVA = "0x18E2CF0", Offset = "0x18E2CF0", VA = "0x18E2CF0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001377")]
		[Address(RVA = "0x18E4BB0", Offset = "0x18E4BB0", VA = "0x18E4BB0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x18E4C58", Offset = "0x18E4C58", VA = "0x18E4C58", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001379")]
		[Address(RVA = "0x18E4C7C", Offset = "0x18E4C7C", VA = "0x18E4C7C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x18E4D24", Offset = "0x18E4D24", VA = "0x18E4D24", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x18E4D48", Offset = "0x18E4D48", VA = "0x18E4D48")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x18E4DF0", Offset = "0x18E4DF0", VA = "0x18E4DF0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x18E4E14", Offset = "0x18E4E14", VA = "0x18E4E14")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x18E4EAC", Offset = "0x18E4EAC", VA = "0x18E4EAC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137F")]
		[Address(RVA = "0x18E4EB4", Offset = "0x18E4EB4", VA = "0x18E4EB4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x18E4FD8", Offset = "0x18E4FD8", VA = "0x18E4FD8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x18E50D0", Offset = "0x18E50D0", VA = "0x18E50D0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x18E5180", Offset = "0x18E5180", VA = "0x18E5180", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x18E518C", Offset = "0x18E518C", VA = "0x18E518C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x18E52D0", Offset = "0x18E52D0", VA = "0x18E52D0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x18E52DC", Offset = "0x18E52DC", VA = "0x18E52DC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x18E53A0", Offset = "0x18E53A0", VA = "0x18E53A0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x18E53AC", Offset = "0x18E53AC", VA = "0x18E53AC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x18E5470", Offset = "0x18E5470", VA = "0x18E5470", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x18E547C", Offset = "0x18E547C", VA = "0x18E547C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x18E5540", Offset = "0x18E5540", VA = "0x18E5540", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x18E554C", Offset = "0x18E554C", VA = "0x18E554C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x18E55F4", Offset = "0x18E55F4", VA = "0x18E55F4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x18E5618", Offset = "0x18E5618", VA = "0x18E5618")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x18E56B0", Offset = "0x18E56B0", VA = "0x18E56B0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138F")]
		[Address(RVA = "0x18E56B8", Offset = "0x18E56B8", VA = "0x18E56B8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x18E5778", Offset = "0x18E5778", VA = "0x18E5778", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001391")]
		[Address(RVA = "0x18E5784", Offset = "0x18E5784", VA = "0x18E5784")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x18E5844", Offset = "0x18E5844", VA = "0x18E5844", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001393")]
		[Address(RVA = "0x18E5854", Offset = "0x18E5854", VA = "0x18E5854")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x18E58FC", Offset = "0x18E58FC", VA = "0x18E58FC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x18E2D98", Offset = "0x18E2D98", VA = "0x18E2D98")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200030D")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000CC4")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000150")]
		private IntPtr context
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x18E2F34", Offset = "0x18E2F34", VA = "0x18E2F34")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001397")]
		[Address(RVA = "0x18E2DE4", Offset = "0x18E2DE4", VA = "0x18E2DE4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001398")]
		[Address(RVA = "0x18E2F98", Offset = "0x18E2F98", VA = "0x18E2F98")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x18E3040", Offset = "0x18E3040", VA = "0x18E3040", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139A")]
		[Address(RVA = "0x18E3064", Offset = "0x18E3064", VA = "0x18E3064")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x18E310C", Offset = "0x18E310C", VA = "0x18E310C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139C")]
		[Address(RVA = "0x18E3130", Offset = "0x18E3130", VA = "0x18E3130")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x18E31D8", Offset = "0x18E31D8", VA = "0x18E31D8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139E")]
		[Address(RVA = "0x18E31FC", Offset = "0x18E31FC", VA = "0x18E31FC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x18E3294", Offset = "0x18E3294", VA = "0x18E3294", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x18E329C", Offset = "0x18E329C", VA = "0x18E329C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x18E33C0", Offset = "0x18E33C0", VA = "0x18E33C0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x18E34B8", Offset = "0x18E34B8", VA = "0x18E34B8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x18E3568", Offset = "0x18E3568", VA = "0x18E3568", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x18E3574", Offset = "0x18E3574", VA = "0x18E3574")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x18E36B8", Offset = "0x18E36B8", VA = "0x18E36B8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x18E36C4", Offset = "0x18E36C4", VA = "0x18E36C4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x18E3788", Offset = "0x18E3788", VA = "0x18E3788", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x18E3794", Offset = "0x18E3794", VA = "0x18E3794")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x18E3858", Offset = "0x18E3858", VA = "0x18E3858", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x18E3864", Offset = "0x18E3864", VA = "0x18E3864")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x18E3928", Offset = "0x18E3928", VA = "0x18E3928", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x18E3934", Offset = "0x18E3934", VA = "0x18E3934")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x18E39DC", Offset = "0x18E39DC", VA = "0x18E39DC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x18E3A00", Offset = "0x18E3A00", VA = "0x18E3A00")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x18E3A98", Offset = "0x18E3A98", VA = "0x18E3A98", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x18E3AA0", Offset = "0x18E3AA0", VA = "0x18E3AA0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x18E3B60", Offset = "0x18E3B60", VA = "0x18E3B60", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x18E3B6C", Offset = "0x18E3B6C", VA = "0x18E3B6C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x18E3C2C", Offset = "0x18E3C2C", VA = "0x18E3C2C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x18E3C3C", Offset = "0x18E3C3C", VA = "0x18E3C3C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x18E3CE4", Offset = "0x18E3CE4", VA = "0x18E3CE4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x18E2E8C", Offset = "0x18E2E8C", VA = "0x18E2E8C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700002A")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x18E2A50", Offset = "0x18E2A50", VA = "0x18E2A50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x18E2AC0", Offset = "0x18E2AC0", VA = "0x18E2AC0")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x18E2F24", Offset = "0x18E2F24", VA = "0x18E2F24")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000AB")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200030E")]
	public enum Preset
	{
		[Token(Token = "0x4000CC7")]
		Custom,
		[Token(Token = "0x4000CC8")]
		AcousticTile,
		[Token(Token = "0x4000CC9")]
		Brick,
		[Token(Token = "0x4000CCA")]
		BrickPainted,
		[Token(Token = "0x4000CCB")]
		Carpet,
		[Token(Token = "0x4000CCC")]
		CarpetHeavy,
		[Token(Token = "0x4000CCD")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000CCE")]
		CeramicTile,
		[Token(Token = "0x4000CCF")]
		Concrete,
		[Token(Token = "0x4000CD0")]
		ConcreteRough,
		[Token(Token = "0x4000CD1")]
		ConcreteBlock,
		[Token(Token = "0x4000CD2")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000CD3")]
		Curtain,
		[Token(Token = "0x4000CD4")]
		Foliage,
		[Token(Token = "0x4000CD5")]
		Glass,
		[Token(Token = "0x4000CD6")]
		GlassHeavy,
		[Token(Token = "0x4000CD7")]
		Grass,
		[Token(Token = "0x4000CD8")]
		Gravel,
		[Token(Token = "0x4000CD9")]
		GypsumBoard,
		[Token(Token = "0x4000CDA")]
		PlasterOnBrick,
		[Token(Token = "0x4000CDB")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000CDC")]
		Soil,
		[Token(Token = "0x4000CDD")]
		SoundProof,
		[Token(Token = "0x4000CDE")]
		Snow,
		[Token(Token = "0x4000CDF")]
		Steel,
		[Token(Token = "0x4000CE0")]
		Water,
		[Token(Token = "0x4000CE1")]
		WoodThin,
		[Token(Token = "0x4000CE2")]
		WoodThick,
		[Token(Token = "0x4000CE3")]
		WoodFloor,
		[Token(Token = "0x4000CE4")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200030F")]
	public sealed class Point
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x18F1760", Offset = "0x18F1760", VA = "0x18F1760")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x18F18A8", Offset = "0x18F18A8", VA = "0x18F18A8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x18F1918", Offset = "0x18F1918", VA = "0x18F1918")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B2238", Offset = "0x9B2238")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2748", Offset = "0x9B2748")]
		private sealed class <>c
		{
			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x18F1D8C", Offset = "0x18F1D8C", VA = "0x18F1D8C")]
			public <>c()
			{
			}

			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x18F1D94", Offset = "0x18F1D94", VA = "0x18F1D94")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x18F1DB0", Offset = "0x18F1DB0", VA = "0x18F1DB0")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000151")]
		public float Item
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x18F1950", Offset = "0x18F1950", VA = "0x18F1950")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x18F1830", Offset = "0x18F1830", VA = "0x18F1830")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3F9C", Offset = "0x9B3F9C")]
	public Spectrum absorption;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B3FD4", Offset = "0x9B3FD4")]
	public Spectrum transmission;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B400C", Offset = "0x9B400C")]
	public Spectrum scattering;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700002B")]
	public Preset preset
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x18E9178", Offset = "0x18E9178", VA = "0x18E9178")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x18E9180", Offset = "0x18E9180", VA = "0x18E9180")]
		set
		{
		}
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x18E91A8", Offset = "0x18E91A8", VA = "0x18E91A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x18E8AE8", Offset = "0x18E8AE8", VA = "0x18E8AE8")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x18E97B0", Offset = "0x18E97B0", VA = "0x18E97B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x18E97B4", Offset = "0x18E97B4", VA = "0x18E97B4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x18E91AC", Offset = "0x18E91AC", VA = "0x18E91AC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x18E8384", Offset = "0x18E8384", VA = "0x18E8384")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x18E9898", Offset = "0x18E9898", VA = "0x18E9898")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x18E9D38", Offset = "0x18E9D38", VA = "0x18E9D38")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x18EA1E0", Offset = "0x18EA1E0", VA = "0x18EA1E0")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x18EA688", Offset = "0x18EA688", VA = "0x18EA688")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x18EAB34", Offset = "0x18EAB34", VA = "0x18EAB34")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x18EAFD8", Offset = "0x18EAFD8", VA = "0x18EAFD8")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x18EB47C", Offset = "0x18EB47C", VA = "0x18EB47C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x18EB928", Offset = "0x18EB928", VA = "0x18EB928")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x18EBDD4", Offset = "0x18EBDD4", VA = "0x18EBDD4")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x18EC27C", Offset = "0x18EC27C", VA = "0x18EC27C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x18EC728", Offset = "0x18EC728", VA = "0x18EC728")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x18ECBD4", Offset = "0x18ECBD4", VA = "0x18ECBD4")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x18ED078", Offset = "0x18ED078", VA = "0x18ED078")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x18ED51C", Offset = "0x18ED51C", VA = "0x18ED51C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x18ED9C0", Offset = "0x18ED9C0", VA = "0x18ED9C0")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x18EDE6C", Offset = "0x18EDE6C", VA = "0x18EDE6C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x18EE1D8", Offset = "0x18EE1D8", VA = "0x18EE1D8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x18EE53C", Offset = "0x18EE53C", VA = "0x18EE53C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x18EE9E8", Offset = "0x18EE9E8", VA = "0x18EE9E8")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x18EEE90", Offset = "0x18EEE90", VA = "0x18EEE90")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x18EF338", Offset = "0x18EF338", VA = "0x18EF338")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x18EF6A0", Offset = "0x18EF6A0", VA = "0x18EF6A0")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x18EF7FC", Offset = "0x18EF7FC", VA = "0x18EF7FC")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x18EFB60", Offset = "0x18EFB60", VA = "0x18EFB60")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x18F0008", Offset = "0x18F0008", VA = "0x18F0008")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x18F04B4", Offset = "0x18F04B4", VA = "0x18F04B4")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x18F095C", Offset = "0x18F095C", VA = "0x18F095C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x18F0E08", Offset = "0x18F0E08", VA = "0x18F0E08")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x18F12B4", Offset = "0x18F12B4", VA = "0x18F12B4")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x18F1798", Offset = "0x18F1798", VA = "0x18F1798")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x18F1DCC", Offset = "0x18F1DCC", VA = "0x18F1DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x18F1E9C", Offset = "0x18F1E9C", VA = "0x18F1E9C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000AD")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700002C")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x18F2464", Offset = "0x18F2464", VA = "0x18F2464")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x18F2578", Offset = "0x18F2578", VA = "0x18F2578")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000401")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600037F")]
	[Address(RVA = "0x18F2588", Offset = "0x18F2588", VA = "0x18F2588")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x18F2638", Offset = "0x18F2638", VA = "0x18F2638")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x18F2744", Offset = "0x18F2744", VA = "0x18F2744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x18F2748", Offset = "0x18F2748", VA = "0x18F2748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x18F274C", Offset = "0x18F274C", VA = "0x18F274C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000AF")]
public class AnimationEventForwarder : MonoBehaviour
{
	[Token(Token = "0x2000311")]
	public enum Event
	{
		[Token(Token = "0x4000CEA")]
		FINISHED,
		[Token(Token = "0x4000CEB")]
		TRANSITION
	}

	[Token(Token = "0x14000010")]
	public event Action<Event> onEvent
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0xC63CD8", Offset = "0xC63CD8", VA = "0xC63CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9580", Offset = "0x9B9580")]
		add
		{
		}
		[Token(Token = "0x6000385")]
		[Address(RVA = "0xC63D7C", Offset = "0xC63D7C", VA = "0xC63D7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9590", Offset = "0x9B9590")]
		remove
		{
		}
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xC63E20", Offset = "0xC63E20", VA = "0xC63E20")]
	public void AnimEvent(Event @event)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xC63E94", Offset = "0xC63E94", VA = "0xC63E94")]
	public AnimationEventForwarder()
	{
	}
}
[Token(Token = "0x20000B0")]
public class AutoSceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2270", Offset = "0x9B2270")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoSceneLoader <>4__this;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xC641CC", Offset = "0xC641CC", VA = "0xC641CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xC64238", Offset = "0xC64238", VA = "0xC64238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xC63F10", Offset = "0xC63F10", VA = "0xC63F10")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC63F44", Offset = "0xC63F44", VA = "0xC63F44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC63F48", Offset = "0xC63F48", VA = "0xC63F48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xC641D4", Offset = "0xC641D4", VA = "0xC641D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waitTime;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sceneName;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject splashScreenObject;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform splashPositionTarget;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xC63E9C", Offset = "0xC63E9C", VA = "0xC63E9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B95A0", Offset = "0x9B95A0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xC63F3C", Offset = "0xC63F3C", VA = "0xC63F3C")]
	public AutoSceneLoader()
	{
	}
}
[Token(Token = "0x20000B1")]
public static class PlatformControl
{
	[Token(Token = "0x2000313")]
	public enum TiledMultiResLevel
	{
		[Token(Token = "0x4000CF0")]
		Off = 0,
		[Token(Token = "0x4000CF1")]
		LMSLow = 1,
		[Token(Token = "0x4000CF2")]
		LMSMedium = 2,
		[Token(Token = "0x4000CF3")]
		LMSHigh = 3,
		[Token(Token = "0x4000CF4")]
		EnumSize = int.MaxValue
	}

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRManager ovrManager;

	[Token(Token = "0x1700002D")]
	public static int CurrentTiledMultiResLevel
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0xE1EC78", Offset = "0xE1EC78", VA = "0xE1EC78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000394")]
		[Address(RVA = "0xE1ECD8", Offset = "0xE1ECD8", VA = "0xE1ECD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public static float SystemDisplayFrequency
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0xE1ED40", Offset = "0xE1ED40", VA = "0xE1ED40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000396")]
		[Address(RVA = "0xE1EDA0", Offset = "0xE1EDA0", VA = "0xE1EDA0")]
		set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action OnShouldPause
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0xE1E664", Offset = "0xE1E664", VA = "0xE1E664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9604", Offset = "0x9B9604")]
		add
		{
		}
		[Token(Token = "0x600038B")]
		[Address(RVA = "0xE1E71C", Offset = "0xE1E71C", VA = "0xE1E71C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9614", Offset = "0x9B9614")]
		remove
		{
		}
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xE1E7D4", Offset = "0xE1E7D4", VA = "0xE1E7D4")]
	public static void Init()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xE1E998", Offset = "0xE1E998", VA = "0xE1E998")]
	private static void OVRManager_VrFocusAcquired()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xE1EA04", Offset = "0xE1EA04", VA = "0xE1EA04")]
	private static void OVRManager_VrFocusLost()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xE1EA9C", Offset = "0xE1EA9C", VA = "0xE1EA9C")]
	private static void OVRManager_TrackingAcquired()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xE1EB08", Offset = "0xE1EB08", VA = "0xE1EB08")]
	private static void OVRManager_TrackingLost()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xE1EB74", Offset = "0xE1EB74", VA = "0xE1EB74")]
	private static void OVRManager_HMDUnmounted()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xE1EC0C", Offset = "0xE1EC0C", VA = "0xE1EC0C")]
	private static void OVRManager_HMDMounted()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xE1EE10", Offset = "0xE1EE10", VA = "0xE1EE10")]
	public static void SetPositionalTracking(bool value)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xE1EEBC", Offset = "0xE1EEBC", VA = "0xE1EEBC")]
	public static Vector2 GetDeviceFov(XRNode eye)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xE1EFA4", Offset = "0xE1EFA4", VA = "0xE1EFA4")]
	public static iVector2 GetDeviceEyeResolution()
	{
		return default(iVector2);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xE1F074", Offset = "0xE1F074", VA = "0xE1F074")]
	public static void PlatformUIConfirmQuit()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xE1F0D4", Offset = "0xE1F0D4", VA = "0xE1F0D4")]
	public static void SetTiledMultiResLevel(TiledMultiResLevel level)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xE1F13C", Offset = "0xE1F13C", VA = "0xE1F13C")]
	public static void SetRenderScale(float v)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xE1F144", Offset = "0xE1F144", VA = "0xE1F144")]
	public static CameraRigReferences SpawnVRCameraRig(UniversalCameraRig universalCameraRig)
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xE1F218", Offset = "0xE1F218", VA = "0xE1F218")]
	public static CameraRigReferences SpawnPCCameraRig(UniversalCameraRig universalCameraRig)
	{
		return null;
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xE1F2EC", Offset = "0xE1F2EC", VA = "0xE1F2EC")]
	public static void SetClockLevels(int cpu, int gpu)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xE1F36C", Offset = "0xE1F36C", VA = "0xE1F36C")]
	public static bool IsPermittedDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xE1F40C", Offset = "0xE1F40C", VA = "0xE1F40C")]
	internal static string GetSystemLanguage()
	{
		return null;
	}
}
[Token(Token = "0x20000B2")]
public static class PlatformLeaderboards
{
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2280", Offset = "0x9B2280")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> callback;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xE1F6FC", Offset = "0xE1F6FC", VA = "0xE1F6FC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xE1FCE0", Offset = "0xE1FCE0", VA = "0xE1FCE0")]
		internal void <SubmitScore>b__0(Message<bool> message)
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2290", Offset = "0x9B2290")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderBoardManager.ViewMode viewModeClosure;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string table;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderBoardManager.LeaderBoardUpdatedCallback callback;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xE1F880", Offset = "0xE1F880", VA = "0xE1F880")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xE1FD98", Offset = "0xE1FD98", VA = "0xE1FD98")]
		internal void <QueryLeaderboard>b__0(Message<LeaderboardEntryList> msg)
		{
		}
	}

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, float> tableQueryTimes;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xE1F4F8", Offset = "0xE1F4F8", VA = "0xE1F4F8")]
	public static void Init()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xE1F56C", Offset = "0xE1F56C", VA = "0xE1F56C")]
	public static bool ViewModeSupported(LeaderBoardManager.ViewMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xE1F574", Offset = "0xE1F574", VA = "0xE1F574")]
	public static void SubmitScore(string table, uint score, Action<bool> callback)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xE1F704", Offset = "0xE1F704", VA = "0xE1F704")]
	public static void QueryLeaderboard(string table, LeaderBoardManager.ViewMode viewMode, LeaderBoardManager.LeaderBoardUpdatedCallback callback, int count)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xE1F8B8", Offset = "0xE1F8B8", VA = "0xE1F8B8")]
	private static void GetEntriesCallback(Message<LeaderboardEntryList> msg, LeaderBoardManager.ViewMode viewMode, string table, LeaderBoardManager.LeaderBoardUpdatedCallback callback)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xE1F888", Offset = "0xE1F888", VA = "0xE1F888")]
	private static void GetParamsForMode(LeaderBoardManager.ViewMode viewMode, out LeaderboardFilterType filter, out LeaderboardStartAt start)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xE1FCDC", Offset = "0xE1FCDC", VA = "0xE1FCDC")]
	public static void Update()
	{
	}
}
[Token(Token = "0x20000B3")]
public class DDScaler : MonoBehaviour
{
	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xD0E72C", Offset = "0xD0E72C", VA = "0xD0E72C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xD0E730", Offset = "0xD0E730", VA = "0xD0E730")]
	public DDScaler()
	{
	}
}
[Token(Token = "0x20000B4")]
public class GPUTimer : MonoBehaviour
{
	[Token(Token = "0x2000316")]
	private struct ResultData
	{
		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double totalTime;
	}

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraEvent[] camEvents;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int storedFrameResults;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int readbackDelayFrames;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sampleAverageTime;

	[Token(Token = "0x400040E")]
	private const int numMeasurementTypes = 2;

	[Token(Token = "0x400040F")]
	private const int measurementType_CPU = 0;

	[Token(Token = "0x4000410")]
	private const int measurementType_GPU = 1;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool stereo;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numStages;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool gpuTimingEnabled;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int samplesTotal;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int lastSamplesTotal;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ResultData[,,] results;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ResultData[,,] lastResults;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float samplePeriodStart;

	[Token(Token = "0x1700002F")]
	private int NumEyes
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xD12300", Offset = "0xD12300", VA = "0xD12300")]
		get
		{
			return default(int);
		}
	}

	[PreserveSig]
	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xD11E30", Offset = "0xD11E30", VA = "0xD11E30")]
	private static extern void GPUTimer_Init(int queryLoopLength, int queryReadDelay, int eyes, int numStages);

	[PreserveSig]
	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xD11EF0", Offset = "0xD11EF0", VA = "0xD11EF0")]
	private static extern int GPUTimer_Version();

	[PreserveSig]
	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xD11F78", Offset = "0xD11F78", VA = "0xD11F78")]
	private static extern int GPUTimer_GetNumCalls();

	[PreserveSig]
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xD12000", Offset = "0xD12000", VA = "0xD12000")]
	private static extern int GPUTimer_GetTimeDelta(int stage, int eye, int resultType);

	[PreserveSig]
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xD120B0", Offset = "0xD120B0", VA = "0xD120B0")]
	private static extern IntPtr GPUTimer_GetRenderEventFunc();

	[PreserveSig]
	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xD12138", Offset = "0xD12138", VA = "0xD12138")]
	private static extern IntPtr GPUTimer_SetStartEvent(int e);

	[PreserveSig]
	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xD121D0", Offset = "0xD121D0", VA = "0xD121D0")]
	private static extern IntPtr GPUTimer_SetFinalEvent(int e);

	[PreserveSig]
	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD12268", Offset = "0xD12268", VA = "0xD12268")]
	private static extern IntPtr GPUTimer_AddTimedEvent(int e);

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xD12314", Offset = "0xD12314", VA = "0xD12314")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xD123F0", Offset = "0xD123F0", VA = "0xD123F0")]
	private void AddEventCommandBuffer(CameraEvent camEvent)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xD12508", Offset = "0xD12508", VA = "0xD12508")]
	private void SetStartEvent(CameraEvent camEvent)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xD12530", Offset = "0xD12530", VA = "0xD12530")]
	private void AddTimedEvent(CameraEvent camEvent)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xD12558", Offset = "0xD12558", VA = "0xD12558")]
	private void SetFinalEvent(CameraEvent camEvent)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xD12560", Offset = "0xD12560", VA = "0xD12560")]
	public void EnableGPUTiming()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xD12624", Offset = "0xD12624", VA = "0xD12624")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xD12770", Offset = "0xD12770", VA = "0xD12770")]
	public void ResetGPUTiming()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xD12634", Offset = "0xD12634", VA = "0xD12634")]
	private void SampleGPUTiming()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xD128C8", Offset = "0xD128C8", VA = "0xD128C8")]
	public string GetResultsString()
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xD12C88", Offset = "0xD12C88", VA = "0xD12C88")]
	public GPUTimer()
	{
	}
}
[Token(Token = "0x20000B5")]
public class FPSReporter : MonoBehaviour
{
	[Token(Token = "0x2000317")]
	private enum State
	{
		[Token(Token = "0x4000CFB")]
		WAITING_FOR_LEVEL_START,
		[Token(Token = "0x4000CFC")]
		WAITING_TO_RESUME_TEST,
		[Token(Token = "0x4000CFD")]
		MEASURING,
		[Token(Token = "0x4000CFE")]
		POST_MEASUREMENT_COOLDOWN
	}

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State state;

	[Token(Token = "0x400041A")]
	private const float INTERRUPT_COOLDOWN_TIME = 1f;

	[Token(Token = "0x400041B")]
	private const float MEASURE_INTERVAL = 5f;

	[Token(Token = "0x400041C")]
	private const float MEASUREMENT_COOLDOWN_FRAMECOUNT = 10f;

	[Token(Token = "0x400041D")]
	private const float LEVEL_START_EXTRA_WAIT = 6f;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastInterruptionTime;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float startMeasuringTime;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int startMeasuringFrame;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int pendingMeasuredFrameCount;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float pendingMeasuredTime;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int pendingMeasurementFrame;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float pendingMeasurementTime;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<float> results;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xD118C0", Offset = "0xD118C0", VA = "0xD118C0")]
	public void LevelStart()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xD11964", Offset = "0xD11964", VA = "0xD11964")]
	public void LevelStop()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xD1196C", Offset = "0xD1196C", VA = "0xD1196C")]
	public void Interrupt()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xD11A04", Offset = "0xD11A04", VA = "0xD11A04")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xD11BC0", Offset = "0xD11BC0", VA = "0xD11BC0")]
	private void RecordFrameCount(float time, int frameCount)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xD11CF8", Offset = "0xD11CF8", VA = "0xD11CF8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xD11CFC", Offset = "0xD11CFC", VA = "0xD11CFC")]
	public bool GetStats(out float min, out float max, out float mean)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xD11E1C", Offset = "0xD11E1C", VA = "0xD11E1C")]
	public float GetMaxFrameRate()
	{
		return default(float);
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xD11E28", Offset = "0xD11E28", VA = "0xD11E28")]
	public FPSReporter()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ImageSizeOptimizer : MonoBehaviour
{
	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float testEyeTextureHeight;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float testFov;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform testTransform;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useTestValues;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xD14160", Offset = "0xD14160", VA = "0xD14160")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9B9624", Offset = "0x9B9624")]
	public void AutoSize()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xD1448C", Offset = "0xD1448C", VA = "0xD1448C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xD14490", Offset = "0xD14490", VA = "0xD14490")]
	public ImageSizeOptimizer()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ObjectManualSpin : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smoothRate;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float spinDecay;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDragSurfaceAngle;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObjectSpin objectSpin;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dragging;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool pointerDown;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 prevDragPos;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 smoothedSpinVector;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC89360", Offset = "0xC89360", VA = "0xC89360", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC89694", Offset = "0xC89694", VA = "0xC89694", Slot = "6")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC89698", Offset = "0xC89698", VA = "0xC89698", Slot = "7")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xC8981C", Offset = "0xC8981C", VA = "0xC8981C", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC894E0", Offset = "0xC894E0", VA = "0xC894E0")]
	private void StartDrag()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xC896C4", Offset = "0xC896C4", VA = "0xC896C4")]
	private void StopDrag()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC8984C", Offset = "0xC8984C", VA = "0xC8984C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC89DA4", Offset = "0xC89DA4", VA = "0xC89DA4")]
	public void StopSpinning()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC89EBC", Offset = "0xC89EBC", VA = "0xC89EBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC89F2C", Offset = "0xC89F2C", VA = "0xC89F2C")]
	public ObjectManualSpin()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ObjectSpin : MonoBehaviour
{
	[Token(Token = "0x2000318")]
	public enum MotionType
	{
		[Token(Token = "0x4000D00")]
		Rotation,
		[Token(Token = "0x4000D01")]
		BackAndForth,
		[Token(Token = "0x4000D02")]
		Translation
	}

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SpinSpeed;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int RotationRange;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int axis;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform m_transform;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_time;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_prevPOS;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_initial_Rotation;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 m_initial_Position;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color32 m_lightColor;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int frames;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MotionType Motion;

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC89F48", Offset = "0xC89F48", VA = "0xC89F48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC8A068", Offset = "0xC8A068", VA = "0xC8A068")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC8A2E4", Offset = "0xC8A2E4", VA = "0xC8A2E4")]
	public ObjectSpin()
	{
	}
}
[Token(Token = "0x20000B9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1808", Offset = "0x9B1808")]
public class OVRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
{
	[Token(Token = "0x2000319")]
	private struct RaycastHit
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Graphic graphic;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 worldPos;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool fromMouse;
	}

	[Serializable]
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B22A0", Offset = "0x9B22A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__16_0;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xC87CB4", Offset = "0xC87CB4", VA = "0xC87CB4")]
		public <>c()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xC87CBC", Offset = "0xC87CBC", VA = "0xC87CBC")]
		internal int <GraphicRaycast>b__16_0(RaycastHit g1, RaycastHit g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4084", Offset = "0x9B4084")]
	public GameObject pointer;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int sortOrder;

	[NonSerialized]
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Canvas m_Canvas;

	[NonSerialized]
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<RaycastHit> m_RaycastResults;

	[NonSerialized]
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<RaycastHit> s_SortedGraphics;

	[Token(Token = "0x17000030")]
	private Canvas canvas
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xC86438", Offset = "0xC86438", VA = "0xC86438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public override Camera eventCamera
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xC864D0", Offset = "0xC864D0", VA = "0xC864D0", Slot = "18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public override int sortOrderPriority
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xC864F0", Offset = "0xC864F0", VA = "0xC864F0", Slot = "20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC863A8", Offset = "0xC863A8", VA = "0xC863A8")]
	protected OVRRaycaster()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xC864F8", Offset = "0xC864F8", VA = "0xC864F8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xC8664C", Offset = "0xC8664C", VA = "0xC8664C")]
	private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xC871E8", Offset = "0xC871E8", VA = "0xC871E8", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xC87260", Offset = "0xC87260", VA = "0xC87260")]
	public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xC86C50", Offset = "0xC86C50", VA = "0xC86C50")]
	private void GraphicRaycast(Canvas canvas, Ray ray, List<RaycastHit> results)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC8787C", Offset = "0xC8787C", VA = "0xC8787C")]
	public Vector2 GetScreenPosition(RaycastResult raycastResult)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xC87474", Offset = "0xC87474", VA = "0xC87474")]
	private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xC87940", Offset = "0xC87940", VA = "0xC87940")]
	public bool IsFocussed()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xC87A74", Offset = "0xC87A74", VA = "0xC87A74", Slot = "22")]
	public void OnPointerEnter(PointerEventData e)
	{
	}
}
[Token(Token = "0x20000BA")]
public class Rock : MonoBehaviour
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rangeDegrees;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xE22C5C", Offset = "0xE22C5C", VA = "0xE22C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xE22C60", Offset = "0xE22C60", VA = "0xE22C60")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xE22D40", Offset = "0xE22D40", VA = "0xE22D40")]
	public Rock()
	{
	}
}
[Token(Token = "0x20000BB")]
public class CameraRigReferences : MonoBehaviour
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fadeQuad;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform viewTransform;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera[] mainCams;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera monoCam;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BaseRaycaster physicsRaycaster;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xC654B0", Offset = "0xC654B0", VA = "0xC654B0")]
	public CameraRigReferences()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xC654B8", Offset = "0xC654B8", VA = "0xC654B8")]
	public void ChangeColorTo(int to)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xC655A4", Offset = "0xC655A4", VA = "0xC655A4")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B186C", Offset = "0x9B186C")]
public class ParticleGazeCursor : MonoBehaviour
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float emissionScale;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B40BC", Offset = "0x9B40BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B40BC", Offset = "0x9B40BC")]
	public AnimationCurve halfEmission;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B411C", Offset = "0x9B411C")]
	public AnimationCurve fullEmission;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4154", Offset = "0x9B4154")]
	public bool particleTrail;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float particleScale;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastPos;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem psHalf;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem psFull;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshRenderer quadRenderer;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color particleStartColor;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OVRGazePointer gazePointer;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xE1E090", Offset = "0xE1E090", VA = "0xE1E090")]
	private void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xE1E590", Offset = "0xE1E590", VA = "0xE1E590")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xE1E650", Offset = "0xE1E650", VA = "0xE1E650")]
	public ParticleGazeCursor()
	{
	}
}
namespace Wasabimole.InspectorNavigator
{
	[Token(Token = "0x20000BE")]
	public class InspectorBreadcrumbs : MonoBehaviour
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int DataVersion;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectReference CurrentSelection;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ObjectReference> Back;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ObjectReference> Forward;

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1C563E8", Offset = "0x1C563E8", VA = "0x1C563E8")]
		public InspectorBreadcrumbs()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BF")]
	public enum ObjectType
	{
		[Token(Token = "0x400045B")]
		None,
		[Token(Token = "0x400045C")]
		Asset,
		[Token(Token = "0x400045D")]
		Instance,
		[Token(Token = "0x400045E")]
		Folder,
		[Token(Token = "0x400045F")]
		Scene,
		[Token(Token = "0x4000460")]
		ProjectSettings,
		[Token(Token = "0x4000461")]
		TextAssets,
		[Token(Token = "0x4000462")]
		InspectorBreadcrumbs,
		[Token(Token = "0x4000463")]
		AssetStoreAssetInspector
	}
	[Serializable]
	[Token(Token = "0x20000C0")]
	public class ObjectReference
	{
		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public UnityEngine.Object OReference;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ObjectType OType;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public Vector3 CPosition;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Quaternion CRotation;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float CSize;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public bool COrtho;

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1C56478", Offset = "0x1C56478", VA = "0x1C56478")]
		public ObjectReference()
		{
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x20000C1")]
	public class OVRInputModule : PointerInputModule
	{
		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B22B0", Offset = "0x9B22B0")]
		public enum InputMode
		{
			[Token(Token = "0x4000D09")]
			Mouse,
			[Token(Token = "0x4000D0A")]
			Buttons
		}

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B41FC", Offset = "0x9B41FC")]
		public Transform rayTransform;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OVRInput.Controller activeControllerForUI;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OVRCursor m_Cursor;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4234", Offset = "0x9B4234")]
		public OVRInput.Button joyPadClickButton;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B426C", Offset = "0x9B426C")]
		public KeyCode gazeClickKey;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B42A4", Offset = "0x9B42A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B42A4", Offset = "0x9B42A4")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B4304", Offset = "0x9B4304")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4304", Offset = "0x9B4304")]
		public bool useRightStickScroll;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4364", Offset = "0x9B4364")]
		public float rightStickDeadZone;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B439C", Offset = "0x9B439C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B439C", Offset = "0x9B439C")]
		public bool useSwipeScroll;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B43FC", Offset = "0x9B43FC")]
		public float swipeDragThreshold;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4434", Offset = "0x9B4434")]
		public float swipeDragScale;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B446C", Offset = "0x9B446C")]
		public bool InvertSwipeXAxis;

		[NonSerialized]
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B44A4", Offset = "0x9B44A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B44A4", Offset = "0x9B44A4")]
		public float angleDragThreshold;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_SpherecastRadius;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_NextAction;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B4514", Offset = "0x9B4514")]
		[SerializeField]
		private string m_HorizontalAxis;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Dictionary<int, OVRPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x17000033")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9BCFE8", Offset = "0x9BCFE8")]
		public InputMode inputMode
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x1C52318", Offset = "0x1C52318", VA = "0x1C52318")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x17000034")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x1C52320", Offset = "0x1C52320", VA = "0x1C52320")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x1C52328", Offset = "0x1C52328", VA = "0x1C52328")]
			set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x1C52334", Offset = "0x1C52334", VA = "0x1C52334")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003F6")]
			[Address(RVA = "0x1C5233C", Offset = "0x1C5233C", VA = "0x1C5233C")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public string horizontalAxis
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x1C52344", Offset = "0x1C52344", VA = "0x1C52344")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F8")]
			[Address(RVA = "0x1C5234C", Offset = "0x1C5234C", VA = "0x1C5234C")]
			set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public string verticalAxis
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x1C52354", Offset = "0x1C52354", VA = "0x1C52354")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x1C5235C", Offset = "0x1C5235C", VA = "0x1C5235C")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public string submitButton
		{
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x1C52364", Offset = "0x1C52364", VA = "0x1C52364")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x1C5236C", Offset = "0x1C5236C", VA = "0x1C5236C")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public string cancelButton
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x1C52374", Offset = "0x1C52374", VA = "0x1C52374")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x1C5237C", Offset = "0x1C5237C", VA = "0x1C5237C")]
			set
			{
			}
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1C52204", Offset = "0x1C52204", VA = "0x1C52204")]
		protected OVRInputModule()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1C52384", Offset = "0x1C52384", VA = "0x1C52384", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1C52428", Offset = "0x1C52428", VA = "0x1C52428", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1C52440", Offset = "0x1C52440", VA = "0x1C52440", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x1C525D4", Offset = "0x1C525D4", VA = "0x1C525D4", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1C52714", Offset = "0x1C52714", VA = "0x1C52714", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1C52964", Offset = "0x1C52964", VA = "0x1C52964")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1C52B78", Offset = "0x1C52B78", VA = "0x1C52B78")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x1C52BD8", Offset = "0x1C52BD8", VA = "0x1C52BD8")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1C52CD4", Offset = "0x1C52CD4", VA = "0x1C52CD4")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1C52ED4", Offset = "0x1C52ED4", VA = "0x1C52ED4")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1C5302C", Offset = "0x1C5302C", VA = "0x1C5302C")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1C53740", Offset = "0x1C53740", VA = "0x1C53740")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x1C53A3C", Offset = "0x1C53A3C", VA = "0x1C53A3C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1C539E8", Offset = "0x1C539E8", VA = "0x1C539E8")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1C53AFC", Offset = "0x1C53AFC", VA = "0x1C53AFC")]
		protected void CopyFromTo(OVRPointerEventData from, OVRPointerEventData to)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x1C53B74", Offset = "0x1C53B74", VA = "0x1C53B74")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x1C53BDC", Offset = "0x1C53BDC", VA = "0x1C53BDC")]
		protected bool GetPointerData(int id, out OVRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x1C5273C", Offset = "0x1C5273C", VA = "0x1C5273C")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x1C53CC8", Offset = "0x1C53CC8", VA = "0x1C53CC8")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1C53E50", Offset = "0x1C53E50", VA = "0x1C53E50", Slot = "30")]
		protected virtual MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1C549BC", Offset = "0x1C549BC", VA = "0x1C549BC")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1C54DA8", Offset = "0x1C54DA8", VA = "0x1C54DA8")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x1C53AB0", Offset = "0x1C53AB0", VA = "0x1C53AB0")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1C550B4", Offset = "0x1C550B4", VA = "0x1C550B4")]
		protected Vector2 SwipeAdjustedPosition(Vector2 originalPosition, PointerEventData pointerEvent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1C55208", Offset = "0x1C55208", VA = "0x1C55208", Slot = "29")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x1C55550", Offset = "0x1C55550", VA = "0x1C55550", Slot = "31")]
		protected virtual PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1C5445C", Offset = "0x1C5445C", VA = "0x1C5445C")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B18D0", Offset = "0x9B18D0")]
	public class OVRPhysicsRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B22EC", Offset = "0x9B22EC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__15_0;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__16_0;

			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x1C55C84", Offset = "0x1C55C84", VA = "0x1C55C84")]
			public <>c()
			{
			}

			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x1C55C8C", Offset = "0x1C55C8C", VA = "0x1C55C8C")]
			internal int <Raycast>b__15_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x1C55CD0", Offset = "0x1C55CD0", VA = "0x1C55CD0")]
			internal int <Spherecast>b__16_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000484")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected LayerMask m_EventMask;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int sortOrder;

		[Token(Token = "0x1700003A")]
		public override Camera eventCamera
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x1C55690", Offset = "0x1C55690", VA = "0x1C55690", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		public virtual int depth
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0x1C556F0", Offset = "0x1C556F0", VA = "0x1C556F0", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700003C")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x1C557B0", Offset = "0x1C557B0", VA = "0x1C557B0", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700003D")]
		public int finalEventMask
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x1C557B8", Offset = "0x1C557B8", VA = "0x1C557B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700003E")]
		public LayerMask eventMask
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0x1C5588C", Offset = "0x1C5588C", VA = "0x1C5588C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x1C55894", Offset = "0x1C55894", VA = "0x1C55894")]
			set
			{
			}
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1C5565C", Offset = "0x1C5565C", VA = "0x1C5565C")]
		protected OVRPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1C5589C", Offset = "0x1C5589C", VA = "0x1C5589C", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1C54568", Offset = "0x1C54568", VA = "0x1C54568")]
		public void Spherecast(PointerEventData eventData, List<RaycastResult> resultAppendList, float radius)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x1C548F4", Offset = "0x1C548F4", VA = "0x1C548F4")]
		public Vector2 GetScreenPos(Vector3 worldPosition)
		{
			return default(Vector2);
		}
	}
}
namespace Coplanar
{
	[Token(Token = "0x20000C3")]
	public class HTTPSQLInserter : SingletonMono<HTTPSQLInserter>
	{
		[Serializable]
		[Token(Token = "0x200031D")]
		public class SQLTable
		{
			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] columns;

			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xC73808", Offset = "0xC73808", VA = "0xC73808")]
			public SQLTable()
			{
			}
		}

		[Token(Token = "0x200031E")]
		private struct InsertQueueItem
		{
			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string table;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string cols;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string values;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object[] data;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;
		}

		[Serializable]
		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B22FC", Offset = "0x9B22FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, string> <>9__7_0;

			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xC7336C", Offset = "0xC7336C", VA = "0xC7336C")]
			public <>c()
			{
			}

			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xC73374", Offset = "0xC73374", VA = "0xC73374")]
			internal string <QueueInsert>b__7_0(object x)
			{
				return null;
			}
		}

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B230C", Offset = "0x9B230C")]
		private sealed class <QueueHandler_CR>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HTTPSQLInserter <>4__this;

			[Token(Token = "0x17000154")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013D4")]
				[Address(RVA = "0xC73794", Offset = "0xC73794", VA = "0xC73794", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000155")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D6")]
				[Address(RVA = "0xC73800", Offset = "0xC73800", VA = "0xC73800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xC7298C", Offset = "0xC7298C", VA = "0xC7298C")]
			[DebuggerHidden]
			public <QueueHandler_CR>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xC73678", Offset = "0xC73678", VA = "0xC73678", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xC7367C", Offset = "0xC7367C", VA = "0xC7367C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xC7379C", Offset = "0xC7379C", VA = "0xC7379C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B231C", Offset = "0x9B231C")]
		private sealed class <PostRequest_CR>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InsertQueueItem item;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public HTTPSQLInserter <>4__this;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <uwr>5__2;

			[Token(Token = "0x17000156")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013DA")]
				[Address(RVA = "0xC73604", Offset = "0xC73604", VA = "0xC73604", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000157")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013DC")]
				[Address(RVA = "0xC73670", Offset = "0xC73670", VA = "0xC73670", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xC72A48", Offset = "0xC72A48", VA = "0xC72A48")]
			[DebuggerHidden]
			public <PostRequest_CR>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xC7339C", Offset = "0xC7339C", VA = "0xC7339C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xC733A0", Offset = "0xC733A0", VA = "0xC733A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xC7360C", Offset = "0xC7360C", VA = "0xC7360C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string url;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string useragent;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SQLTableList sqlTableList;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Queue<InsertQueueItem> insertQueue;

		[NonSerialized]
		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sessionID;

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xC726BC", Offset = "0xC726BC", VA = "0xC726BC")]
		public void QueueInsert(string table, string cols, params object[] valueArgs)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xC72858", Offset = "0xC72858", VA = "0xC72858")]
		public void QueueEvent(string name, object[] data)
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xC728EC", Offset = "0xC728EC", VA = "0xC728EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xC72918", Offset = "0xC72918", VA = "0xC72918")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B965C", Offset = "0x9B965C")]
		private IEnumerator QueueHandler_CR()
		{
			return null;
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xC729B8", Offset = "0xC729B8", VA = "0xC729B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B96C0", Offset = "0x9B96C0")]
		private IEnumerator PostRequest_CR(InsertQueueItem item)
		{
			return null;
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xC72A74", Offset = "0xC72A74", VA = "0xC72A74")]
		private void MatchKnownTablesOrJsonize(InsertQueueItem item, out string colNames, out string table, out string values)
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xC73094", Offset = "0xC73094", VA = "0xC73094")]
		private Dictionary<string, string> StringArrayToDict(object[] itemData)
		{
			return null;
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xC731C8", Offset = "0xC731C8", VA = "0xC731C8")]
		private string EscapedJson(Dictionary<string, string> dict)
		{
			return null;
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xC73258", Offset = "0xC73258", VA = "0xC73258")]
		private string StringArrayToEscapedJsonDict(object[] itemData)
		{
			return null;
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xC73270", Offset = "0xC73270", VA = "0xC73270")]
		public HTTPSQLInserter()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1934", Offset = "0x9B1934")]
	public class SQLTableList : SerializedScriptableObject
	{
		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, HTTPSQLInserter.SQLTable> tables;

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xE59D7C", Offset = "0xE59D7C", VA = "0xE59D7C")]
		public SQLTableList()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class AnimPopupWithSound : MonoBehaviour
	{
		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool suicideEnabled;

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xC66468", Offset = "0xC66468", VA = "0xC66468")]
		public void PlaySound(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xC66514", Offset = "0xC66514", VA = "0xC66514")]
		public void Suicide()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xC665A4", Offset = "0xC665A4", VA = "0xC665A4")]
		public AnimPopupWithSound()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class AssetBundleLoader : SingletonMono<AssetBundleLoader>
	{
		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B232C", Offset = "0x9B232C")]
		private sealed class <LoadBundle_CR>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string BundleURL;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int version;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WWW <www>5__2;

			[Token(Token = "0x17000158")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E1")]
				[Address(RVA = "0xC67184", Offset = "0xC67184", VA = "0xC67184", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000159")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E3")]
				[Address(RVA = "0xC671F0", Offset = "0xC671F0", VA = "0xC671F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xC66BFC", Offset = "0xC66BFC", VA = "0xC66BFC")]
			[DebuggerHidden]
			public <LoadBundle_CR>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xC66DE0", Offset = "0xC66DE0", VA = "0xC66DE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xC66EBC", Offset = "0xC66EBC", VA = "0xC66EBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xC66DFC", Offset = "0xC66DFC", VA = "0xC66DFC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xC6718C", Offset = "0xC6718C", VA = "0xC6718C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AssetBundle lastLoadedBundle;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int numLoadsPending;

		[Token(Token = "0x1700003F")]
		public bool Loaded
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0xC66CAC", Offset = "0xC66CAC", VA = "0xC66CAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xC66B48", Offset = "0xC66B48", VA = "0xC66B48")]
		public void LoadBundle(string url)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xC66B78", Offset = "0xC66B78", VA = "0xC66B78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9724", Offset = "0x9B9724")]
		public IEnumerator LoadBundle_CR(string BundleURL, int version = 0)
		{
			return null;
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xC66C28", Offset = "0xC66C28", VA = "0xC66C28")]
		public Texture2D GetTexture(string name)
		{
			return null;
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xC66D44", Offset = "0xC66D44", VA = "0xC66D44")]
		public void RegisterPendingLoad()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xC66D54", Offset = "0xC66D54", VA = "0xC66D54")]
		public void ClearPendingLoad()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xC66D64", Offset = "0xC66D64", VA = "0xC66D64")]
		public int GetLoadsPending()
		{
			return default(int);
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xC66D6C", Offset = "0xC66D6C", VA = "0xC66D6C")]
		public AssetBundleLoader()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public class AssetBundles : MonoBehaviour
	{
		[Token(Token = "0x600043B")]
		[Address(RVA = "0xC671F8", Offset = "0xC671F8", VA = "0xC671F8")]
		public AssetBundles()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public static class AssetUtils
	{
		[Token(Token = "0x600043C")]
		[Address(RVA = "0xC67200", Offset = "0xC67200", VA = "0xC67200")]
		public static Component GetOrAddComponent(this GameObject go, Type T)
		{
			return null;
		}

		[Token(Token = "0x600043D")]
		public static T GetOrAddComponent<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xC672C0", Offset = "0xC672C0", VA = "0xC672C0")]
		public static void AssertPixelMap(Texture2D src)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xC67344", Offset = "0xC67344", VA = "0xC67344")]
		public static GameObject FindOrCreateObject(string path, bool replace = false, [Optional] GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xC6762C", Offset = "0xC6762C", VA = "0xC6762C")]
		public static Stream GetResourceAsStream(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1980", Offset = "0x9B1980")]
	public class AudioLoop : ScriptableObject
	{
		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip intro;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip loop;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip reprise;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float repriseGain;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float volume;

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xC6794C", Offset = "0xC6794C", VA = "0xC6794C")]
		public AudioLoop()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B19BC", Offset = "0x9B19BC")]
	public class AudioSourceConfig : ScriptableObject
	{
		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEffect sound;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spatialBlend;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B45C0", Offset = "0x9B45C0")]
		public AnimationCurve volumeCurve;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xC6795C", Offset = "0xC6795C", VA = "0xC6795C")]
		public AudioSourceConfig()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class AudioSourceTool : MonoBehaviour
	{
		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSourceConfig config;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float volume;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float pitch;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool shouldBePlaying;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource src;

		[Token(Token = "0x17000040")]
		[ShowInInspector]
		public float Volume
		{
			[Token(Token = "0x6000444")]
			[Address(RVA = "0xC679A4", Offset = "0xC679A4", VA = "0xC679A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000443")]
			[Address(RVA = "0xC67964", Offset = "0xC67964", VA = "0xC67964")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		[ShowInInspector]
		public float Pitch
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0xC679EC", Offset = "0xC679EC", VA = "0xC679EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000445")]
			[Address(RVA = "0xC679AC", Offset = "0xC679AC", VA = "0xC679AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xC679F4", Offset = "0xC679F4", VA = "0xC679F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xC67A4C", Offset = "0xC67A4C", VA = "0xC67A4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xC67A50", Offset = "0xC67A50", VA = "0xC67A50")]
		private void Apply()
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xC67C30", Offset = "0xC67C30", VA = "0xC67C30")]
		public void Stop()
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xC67C54", Offset = "0xC67C54", VA = "0xC67C54")]
		public void Play()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0xC67C7C", Offset = "0xC67C7C", VA = "0xC67C7C")]
		public AudioSourceTool()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public interface INumberToSpeech
	{
		[Token(Token = "0x600044D")]
		void QueueSpeakNumbers(string numbers, Action<AudioClip, float> queueFn);
	}
	[Token(Token = "0x20000CD")]
	public class MusicUtils : SingletonMono<MusicUtils>
	{
		[Token(Token = "0x2000323")]
		public enum Note
		{
			[Token(Token = "0x4000D24")]
			C,
			[Token(Token = "0x4000D25")]
			C_Sharp,
			[Token(Token = "0x4000D26")]
			D,
			[Token(Token = "0x4000D27")]
			D_Sharp,
			[Token(Token = "0x4000D28")]
			E,
			[Token(Token = "0x4000D29")]
			F,
			[Token(Token = "0x4000D2A")]
			F_Sharp,
			[Token(Token = "0x4000D2B")]
			G,
			[Token(Token = "0x4000D2C")]
			G_Sharp,
			[Token(Token = "0x4000D2D")]
			A,
			[Token(Token = "0x4000D2E")]
			A_Sharp,
			[Token(Token = "0x4000D2F")]
			B
		}

		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B233C", Offset = "0x9B233C")]
		private sealed class <PlayMelody_CR>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string melody;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffect middleC;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float intervalTime;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float[] <>7__wrap1;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x1700015A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E7")]
				[Address(RVA = "0xE4E8C4", Offset = "0xE4E8C4", VA = "0xE4E8C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E9")]
				[Address(RVA = "0xE4E930", Offset = "0xE4E930", VA = "0xE4E930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xE4E5B0", Offset = "0xE4E5B0", VA = "0xE4E5B0")]
			[DebuggerHidden]
			public <PlayMelody_CR>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xE4E700", Offset = "0xE4E700", VA = "0xE4E700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xE4E704", Offset = "0xE4E704", VA = "0xE4E704", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xE4E8CC", Offset = "0xE4E8CC", VA = "0xE4E8CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float[] equalTempC4;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Note[] noteByAscii;

		[Token(Token = "0x17000042")]
		public static float MiddleC
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0xE4E05C", Offset = "0xE4E05C", VA = "0xE4E05C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xE4E0C0", Offset = "0xE4E0C0", VA = "0xE4E0C0")]
		public static float Freq(Note note, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0xE4E1A0", Offset = "0xE4E1A0", VA = "0xE4E1A0")]
		public static float FreqRelativeToMiddleC(Note note, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xE4E234", Offset = "0xE4E234", VA = "0xE4E234")]
		public static Note CharToNote(char c)
		{
			return default(Note);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0xE4E360", Offset = "0xE4E360", VA = "0xE4E360")]
		public static float[] StringToPitchArray(string str, float baseFreq)
		{
			return null;
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xE4E4F4", Offset = "0xE4E4F4", VA = "0xE4E4F4")]
		public void PlayMelody(SoundEffect middleC, string melody, float intervalTime)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xE4E520", Offset = "0xE4E520", VA = "0xE4E520")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B97A8", Offset = "0x9B97A8")]
		public IEnumerator PlayMelody_CR(SoundEffect middleC, string melody, float intervalTime)
		{
			return null;
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xE4E5DC", Offset = "0xE4E5DC", VA = "0xE4E5DC")]
		public MusicUtils()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B19F8", Offset = "0x9B19F8")]
	public class NumberToSpeech : SerializedScriptableObject, INumberToSpeech
	{
		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B234C", Offset = "0x9B234C")]
		private sealed class <EnumComponents>d__7 : IEnumerable<AudioClip>, IEnumerable, IEnumerator<AudioClip>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioClip <>2__current;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string num;

			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__num;

			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NumberToSpeech <>4__this;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <fraction>5__2;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<AudioClip> <>7__wrap2;

			[Token(Token = "0x1700015C")]
			private AudioClip System.Collections.Generic.IEnumerator<UnityEngine.AudioClip>.Current
			{
				[Token(Token = "0x60013EF")]
				[Address(RVA = "0xE4FEDC", Offset = "0xE4FEDC", VA = "0xE4FEDC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F1")]
				[Address(RVA = "0xE4FF48", Offset = "0xE4FF48", VA = "0xE4FF48", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xE4F130", Offset = "0xE4F130", VA = "0xE4F130")]
			[DebuggerHidden]
			public <EnumComponents>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xE4F814", Offset = "0xE4F814", VA = "0xE4F814", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xE4F9CC", Offset = "0xE4F9CC", VA = "0xE4F9CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013ED")]
			[Address(RVA = "0xE4F84C", Offset = "0xE4F84C", VA = "0xE4F84C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xE4F90C", Offset = "0xE4F90C", VA = "0xE4F90C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xE4FEE4", Offset = "0xE4FEE4", VA = "0xE4FEE4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xE4FF50", Offset = "0xE4FF50", VA = "0xE4FF50", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AudioClip> System.Collections.Generic.IEnumerable<UnityEngine.AudioClip>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xE50008", Offset = "0xE50008", VA = "0xE50008", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B235C", Offset = "0x9B235C")]
		private sealed class <EnumIntegerComponents>d__8 : IEnumerable<AudioClip>, IEnumerable, IEnumerator<AudioClip>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioClip <>2__current;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string integer;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__integer;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NumberToSpeech <>4__this;

			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool forceSingleDigit;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool <>3__forceSingleDigit;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <secondDigit>5__2;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <>7__wrap2;

			[Token(Token = "0x1700015E")]
			private AudioClip System.Collections.Generic.IEnumerator<UnityEngine.AudioClip>.Current
			{
				[Token(Token = "0x60013F7")]
				[Address(RVA = "0xE50A60", Offset = "0xE50A60", VA = "0xE50A60", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F9")]
				[Address(RVA = "0xE50ACC", Offset = "0xE50ACC", VA = "0xE50ACC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xE4F204", Offset = "0xE4F204", VA = "0xE4F204")]
			[DebuggerHidden]
			public <EnumIntegerComponents>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xE50738", Offset = "0xE50738", VA = "0xE50738", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xE5073C", Offset = "0xE5073C", VA = "0xE5073C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xE50A68", Offset = "0xE50A68", VA = "0xE50A68", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xE50AD4", Offset = "0xE50AD4", VA = "0xE50AD4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AudioClip> System.Collections.Generic.IEnumerable<UnityEngine.AudioClip>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xE50B94", Offset = "0xE50B94", VA = "0xE50B94", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B236C", Offset = "0x9B236C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__9_0;

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xE4F788", Offset = "0xE4F788", VA = "0xE4F788")]
			public <>c()
			{
			}

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xE4F790", Offset = "0xE4F790", VA = "0xE4F790")]
			internal bool <EnumComponentsWithUnits>b__9_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B237C", Offset = "0x9B237C")]
		private sealed class <EnumComponentsWithUnits>d__9 : IEnumerable<AudioClip>, IEnumerable, IEnumerator<AudioClip>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioClip <>2__current;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string num;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__num;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NumberToSpeech <>4__this;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <index>5__2;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <part>5__3;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IEnumerator<AudioClip> <>7__wrap3;

			[Token(Token = "0x17000160")]
			private AudioClip System.Collections.Generic.IEnumerator<UnityEngine.AudioClip>.Current
			{
				[Token(Token = "0x6001403")]
				[Address(RVA = "0xE50608", Offset = "0xE50608", VA = "0xE50608", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000161")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001405")]
				[Address(RVA = "0xE50674", Offset = "0xE50674", VA = "0xE50674", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xE4F2CC", Offset = "0xE4F2CC", VA = "0xE4F2CC")]
			[DebuggerHidden]
			public <EnumComponentsWithUnits>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001400")]
			[Address(RVA = "0xE5000C", Offset = "0xE5000C", VA = "0xE5000C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001401")]
			[Address(RVA = "0xE500E8", Offset = "0xE500E8", VA = "0xE500E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0xE50028", Offset = "0xE50028", VA = "0xE50028")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001404")]
			[Address(RVA = "0xE50610", Offset = "0xE50610", VA = "0xE50610", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001406")]
			[Address(RVA = "0xE5067C", Offset = "0xE5067C", VA = "0xE5067C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AudioClip> System.Collections.Generic.IEnumerable<UnityEngine.AudioClip>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0xE50734", Offset = "0xE50734", VA = "0xE50734", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B238C", Offset = "0x9B238C")]
		private sealed class <SpeakNumber_CR>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NumberToSpeech <>4__this;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string num;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<AudioClip> speakSound;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<AudioClip> <>7__wrap1;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600140C")]
				[Address(RVA = "0xE513EC", Offset = "0xE513EC", VA = "0xE513EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600140E")]
				[Address(RVA = "0xE51458", Offset = "0xE51458", VA = "0xE51458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001408")]
			[Address(RVA = "0xE4F38C", Offset = "0xE4F38C", VA = "0xE4F38C")]
			[DebuggerHidden]
			public <SpeakNumber_CR>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001409")]
			[Address(RVA = "0xE50FFC", Offset = "0xE50FFC", VA = "0xE50FFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600140A")]
			[Address(RVA = "0xE510D8", Offset = "0xE510D8", VA = "0xE510D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600140B")]
			[Address(RVA = "0xE51018", Offset = "0xE51018", VA = "0xE51018")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600140D")]
			[Address(RVA = "0xE513F4", Offset = "0xE513F4", VA = "0xE513F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B239C", Offset = "0x9B239C")]
		private sealed class <SpeakNumberWithUnits_CR>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NumberToSpeech <>4__this;

			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string num;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<AudioClip> speakSound;

			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<AudioClip> <>7__wrap1;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001413")]
				[Address(RVA = "0xE50F88", Offset = "0xE50F88", VA = "0xE50F88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001415")]
				[Address(RVA = "0xE50FF4", Offset = "0xE50FF4", VA = "0xE50FF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600140F")]
			[Address(RVA = "0xE4F440", Offset = "0xE4F440", VA = "0xE4F440")]
			[DebuggerHidden]
			public <SpeakNumberWithUnits_CR>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001410")]
			[Address(RVA = "0xE50B98", Offset = "0xE50B98", VA = "0xE50B98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001411")]
			[Address(RVA = "0xE50C74", Offset = "0xE50C74", VA = "0xE50C74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001412")]
			[Address(RVA = "0xE50BB4", Offset = "0xE50BB4", VA = "0xE50BB4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001414")]
			[Address(RVA = "0xE50F90", Offset = "0xE50F90", VA = "0xE50F90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] decimalDigits;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip[] from11To19;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip[] multiplesOf10;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip oneHundred;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip point;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B45F8", Offset = "0x9B45F8")]
		public Dictionary<char, AudioClip[]> units;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float preempt;

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xE4F0A0", Offset = "0xE4F0A0", VA = "0xE4F0A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B980C", Offset = "0x9B980C")]
		public IEnumerable<AudioClip> EnumComponents(string num)
		{
			return null;
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xE4F168", Offset = "0xE4F168", VA = "0xE4F168")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9870", Offset = "0x9B9870")]
		private IEnumerable<AudioClip> EnumIntegerComponents(string integer, bool forceSingleDigit)
		{
			return null;
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xE4F23C", Offset = "0xE4F23C", VA = "0xE4F23C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B98D4", Offset = "0x9B98D4")]
		public IEnumerable<AudioClip> EnumComponentsWithUnits(string num)
		{
			return null;
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0xE4F304", Offset = "0xE4F304", VA = "0xE4F304")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9938", Offset = "0x9B9938")]
		public IEnumerator SpeakNumber_CR(string num, Action<AudioClip> speakSound)
		{
			return null;
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xE4F3B8", Offset = "0xE4F3B8", VA = "0xE4F3B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B999C", Offset = "0x9B999C")]
		public IEnumerator SpeakNumberWithUnits_CR(string num, Action<AudioClip> speakSound)
		{
			return null;
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xE4F46C", Offset = "0xE4F46C", VA = "0xE4F46C", Slot = "8")]
		public void QueueSpeakNumbers(string numbers, Action<AudioClip, float> queueFn)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xE4F71C", Offset = "0xE4F71C", VA = "0xE4F71C")]
		public NumberToSpeech()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1A34", Offset = "0x9B1A34")]
	public class NumberToSpeechChinese : SerializedScriptableObject, INumberToSpeech
	{
		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B23AC", Offset = "0x9B23AC")]
		private sealed class <EnumComponents>d__6 : IEnumerable<AudioClip>, IEnumerable, IEnumerator<AudioClip>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioClip <>2__current;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string num;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__num;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NumberToSpeechChinese <>4__this;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <fraction>5__2;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<AudioClip> <>7__wrap2;

			[Token(Token = "0x17000166")]
			private AudioClip System.Collections.Generic.IEnumerator<UnityEngine.AudioClip>.Current
			{
				[Token(Token = "0x600141B")]
				[Address(RVA = "0xE5229C", Offset = "0xE5229C", VA = "0xE5229C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600141D")]
				[Address(RVA = "0xE52308", Offset = "0xE52308", VA = "0xE52308", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001416")]
			[Address(RVA = "0xE514F0", Offset = "0xE514F0", VA = "0xE514F0")]
			[DebuggerHidden]
			public <EnumComponents>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001417")]
			[Address(RVA = "0xE51BD4", Offset = "0xE51BD4", VA = "0xE51BD4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001418")]
			[Address(RVA = "0xE51D8C", Offset = "0xE51D8C", VA = "0xE51D8C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001419")]
			[Address(RVA = "0xE51C0C", Offset = "0xE51C0C", VA = "0xE51C0C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600141A")]
			[Address(RVA = "0xE51CCC", Offset = "0xE51CCC", VA = "0xE51CCC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600141C")]
			[Address(RVA = "0xE522A4", Offset = "0xE522A4", VA = "0xE522A4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600141E")]
			[Address(RVA = "0xE52310", Offset = "0xE52310", VA = "0xE52310", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AudioClip> System.Collections.Generic.IEnumerable<UnityEngine.AudioClip>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600141F")]
			[Address(RVA = "0xE523C8", Offset = "0xE523C8", VA = "0xE523C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B23BC", Offset = "0x9B23BC")]
		private sealed class <EnumIntegerComponents>d__7 : IEnumerable<AudioClip>, IEnumerable, IEnumerator<AudioClip>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioClip <>2__current;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string integer;

			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__integer;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NumberToSpeechChinese <>4__this;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool speakTenAndHundred;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool <>3__speakTenAndHundred;

			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <charsRemaining>5__2;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <>7__wrap2;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap3;

			[Token(Token = "0x17000168")]
			private AudioClip System.Collections.Generic.IEnumerator<UnityEngine.AudioClip>.Current
			{
				[Token(Token = "0x6001423")]
				[Address(RVA = "0xE52CB8", Offset = "0xE52CB8", VA = "0xE52CB8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000169")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001425")]
				[Address(RVA = "0xE52D24", Offset = "0xE52D24", VA = "0xE52D24", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001420")]
			[Address(RVA = "0xE515C4", Offset = "0xE515C4", VA = "0xE515C4")]
			[DebuggerHidden]
			public <EnumIntegerComponents>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001421")]
			[Address(RVA = "0xE52AF8", Offset = "0xE52AF8", VA = "0xE52AF8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001422")]
			[Address(RVA = "0xE52AFC", Offset = "0xE52AFC", VA = "0xE52AFC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001424")]
			[Address(RVA = "0xE52CC0", Offset = "0xE52CC0", VA = "0xE52CC0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001426")]
			[Address(RVA = "0xE52D2C", Offset = "0xE52D2C", VA = "0xE52D2C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AudioClip> System.Collections.Generic.IEnumerable<UnityEngine.AudioClip>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001427")]
			[Address(RVA = "0xE52DEC", Offset = "0xE52DEC", VA = "0xE52DEC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B23CC", Offset = "0x9B23CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__8_0;

			[Token(Token = "0x6001429")]
			[Address(RVA = "0xE51B48", Offset = "0xE51B48", VA = "0xE51B48")]
			public <>c()
			{
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0xE51B50", Offset = "0xE51B50", VA = "0xE51B50")]
			internal bool <EnumComponentsWithUnits>b__8_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B23DC", Offset = "0x9B23DC")]
		private sealed class <EnumComponentsWithUnits>d__8 : IEnumerable<AudioClip>, IEnumerable, IEnumerator<AudioClip>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioClip <>2__current;

			[Token(Token = "0x4000D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string num;

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__num;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NumberToSpeechChinese <>4__this;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <index>5__2;

			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <part>5__3;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IEnumerator<AudioClip> <>7__wrap3;

			[Token(Token = "0x1700016A")]
			private AudioClip System.Collections.Generic.IEnumerator<UnityEngine.AudioClip>.Current
			{
				[Token(Token = "0x600142F")]
				[Address(RVA = "0xE529C8", Offset = "0xE529C8", VA = "0xE529C8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001431")]
				[Address(RVA = "0xE52A34", Offset = "0xE52A34", VA = "0xE52A34", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600142B")]
			[Address(RVA = "0xE5168C", Offset = "0xE5168C", VA = "0xE5168C")]
			[DebuggerHidden]
			public <EnumComponentsWithUnits>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0xE523CC", Offset = "0xE523CC", VA = "0xE523CC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0xE524A8", Offset = "0xE524A8", VA = "0xE524A8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0xE523E8", Offset = "0xE523E8", VA = "0xE523E8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0xE529D0", Offset = "0xE529D0", VA = "0xE529D0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0xE52A3C", Offset = "0xE52A3C", VA = "0xE52A3C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AudioClip> System.Collections.Generic.IEnumerable<UnityEngine.AudioClip>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001433")]
			[Address(RVA = "0xE52AF4", Offset = "0xE52AF4", VA = "0xE52AF4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B23EC", Offset = "0x9B23EC")]
		private sealed class <SpeakNumber_CR>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NumberToSpeechChinese <>4__this;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string num;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<AudioClip> speakSound;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<AudioClip> <>7__wrap1;

			[Token(Token = "0x1700016C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001438")]
				[Address(RVA = "0xE53644", Offset = "0xE53644", VA = "0xE53644", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600143A")]
				[Address(RVA = "0xE536B0", Offset = "0xE536B0", VA = "0xE536B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0xE5174C", Offset = "0xE5174C", VA = "0xE5174C")]
			[DebuggerHidden]
			public <SpeakNumber_CR>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0xE53254", Offset = "0xE53254", VA = "0xE53254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0xE53330", Offset = "0xE53330", VA = "0xE53330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001437")]
			[Address(RVA = "0xE53270", Offset = "0xE53270", VA = "0xE53270")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001439")]
			[Address(RVA = "0xE5364C", Offset = "0xE5364C", VA = "0xE5364C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B23FC", Offset = "0x9B23FC")]
		private sealed class <SpeakNumberWithUnits_CR>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NumberToSpeechChinese <>4__this;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string num;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<AudioClip> speakSound;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<AudioClip> <>7__wrap1;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600143F")]
				[Address(RVA = "0xE531E0", Offset = "0xE531E0", VA = "0xE531E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001441")]
				[Address(RVA = "0xE5324C", Offset = "0xE5324C", VA = "0xE5324C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600143B")]
			[Address(RVA = "0xE51800", Offset = "0xE51800", VA = "0xE51800")]
			[DebuggerHidden]
			public <SpeakNumberWithUnits_CR>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600143C")]
			[Address(RVA = "0xE52DF0", Offset = "0xE52DF0", VA = "0xE52DF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0xE52ECC", Offset = "0xE52ECC", VA = "0xE52ECC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0xE52E0C", Offset = "0xE52E0C", VA = "0xE52E0C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0xE531E8", Offset = "0xE531E8", VA = "0xE531E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] decimalDigits;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip ten;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip hundred;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip point;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4630", Offset = "0x9B4630")]
		public Dictionary<char, AudioClip[]> units;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float preempt;

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xE51460", Offset = "0xE51460", VA = "0xE51460")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9A00", Offset = "0x9B9A00")]
		public IEnumerable<AudioClip> EnumComponents(string num)
		{
			return null;
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xE51528", Offset = "0xE51528", VA = "0xE51528")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9A64", Offset = "0x9B9A64")]
		private IEnumerable<AudioClip> EnumIntegerComponents(string integer, bool speakTenAndHundred)
		{
			return null;
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xE515FC", Offset = "0xE515FC", VA = "0xE515FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9AC8", Offset = "0x9B9AC8")]
		public IEnumerable<AudioClip> EnumComponentsWithUnits(string num)
		{
			return null;
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xE516C4", Offset = "0xE516C4", VA = "0xE516C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9B2C", Offset = "0x9B9B2C")]
		public IEnumerator SpeakNumber_CR(string num, Action<AudioClip> speakSound)
		{
			return null;
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xE51778", Offset = "0xE51778", VA = "0xE51778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9B90", Offset = "0x9B9B90")]
		public IEnumerator SpeakNumberWithUnits_CR(string num, Action<AudioClip> speakSound)
		{
			return null;
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xE5182C", Offset = "0xE5182C", VA = "0xE5182C", Slot = "8")]
		public void QueueSpeakNumbers(string numbers, Action<AudioClip, float> queueFn)
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xE51ADC", Offset = "0xE51ADC", VA = "0xE51ADC")]
		public NumberToSpeechChinese()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class NumberToSpeechTest : MonoBehaviour
	{
		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B240C", Offset = "0x9B240C")]
		private sealed class <TestTo60_CR>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NumberToSpeechTest <>4__this;

			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001445")]
				[Address(RVA = "0xE539CC", Offset = "0xE539CC", VA = "0xE539CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001447")]
				[Address(RVA = "0xE53A38", Offset = "0xE53A38", VA = "0xE53A38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001442")]
			[Address(RVA = "0xE53800", Offset = "0xE53800", VA = "0xE53800")]
			[DebuggerHidden]
			public <TestTo60_CR>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0xE538A4", Offset = "0xE538A4", VA = "0xE538A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001444")]
			[Address(RVA = "0xE538A8", Offset = "0xE538A8", VA = "0xE538A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001446")]
			[Address(RVA = "0xE539D4", Offset = "0xE539D4", VA = "0xE539D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string testString;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NumberToSpeechChinese numberToSpeech;

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xE536B8", Offset = "0xE536B8", VA = "0xE536B8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9B9BF4", Offset = "0x9B9BF4")]
		public void Test()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xE53760", Offset = "0xE53760", VA = "0xE53760")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9B9C2C", Offset = "0x9B9C2C")]
		public void TestTo60()
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xE5378C", Offset = "0xE5378C", VA = "0xE5378C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9C64", Offset = "0x9B9C64")]
		private IEnumerator TestTo60_CR()
		{
			return null;
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xE5382C", Offset = "0xE5382C", VA = "0xE5382C")]
		private void SpeakSound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xE5389C", Offset = "0xE5389C", VA = "0xE5389C")]
		public NumberToSpeechTest()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class SoundControl : SingletonMono<SoundControl>
	{
		[Serializable]
		[Token(Token = "0x2000332")]
		public class AudioSourcePool
		{
			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource[] audioSources;

			[NonSerialized]
			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public SourceState[] sourceStates;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int nextSource;

			[Token(Token = "0x6001448")]
			[Address(RVA = "0xE5B4AC", Offset = "0xE5B4AC", VA = "0xE5B4AC")]
			public void Init()
			{
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0xE5B94C", Offset = "0xE5B94C", VA = "0xE5B94C")]
			public AudioSource GetNextAndReset()
			{
				return null;
			}

			[Token(Token = "0x600144A")]
			[Address(RVA = "0xE5C0F0", Offset = "0xE5C0F0", VA = "0xE5C0F0")]
			public void Update()
			{
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0xE5BEB8", Offset = "0xE5BEB8", VA = "0xE5BEB8")]
			public void FadeOut(AudioSource source, AudioClip clip, float duration)
			{
			}

			[Token(Token = "0x600144C")]
			[Address(RVA = "0xE5C5F0", Offset = "0xE5C5F0", VA = "0xE5C5F0")]
			public AudioSourcePool()
			{
			}
		}

		[Token(Token = "0x2000333")]
		public struct SourceState
		{
			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fadeStart;

			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float fadeDuration;

			[Token(Token = "0x600144D")]
			[Address(RVA = "0xA5E758", Offset = "0xA5E758", VA = "0xA5E758")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000334")]
		private struct VoiceQueueEntry
		{
			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip clip;

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float wait;
		}

		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B241C", Offset = "0x9B241C")]
		private sealed class <VoiceQueue_CR>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundControl <>4__this;

			[Token(Token = "0x17000172")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001451")]
				[Address(RVA = "0xE5C574", Offset = "0xE5C574", VA = "0xE5C574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001453")]
				[Address(RVA = "0xE5C5E0", Offset = "0xE5C5E0", VA = "0xE5C5E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144E")]
			[Address(RVA = "0xE5BA94", Offset = "0xE5BA94", VA = "0xE5BA94")]
			[DebuggerHidden]
			public <VoiceQueue_CR>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0xE5C424", Offset = "0xE5C424", VA = "0xE5C424", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0xE5C428", Offset = "0xE5C428", VA = "0xE5C428", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0xE5C57C", Offset = "0xE5C57C", VA = "0xE5C57C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004AF")]
		private const int AUDIO_SOURCE_POOL_STANDARD = 0;

		[Token(Token = "0x40004B0")]
		private const int AUDIO_SOURCE_POOL_VOICE = 1;

		[Token(Token = "0x40004B1")]
		private const string VOICE_CHANNEL_NAME = "Voice";

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interVoiceDelay;

		[NonSerialized]
		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, float> configuredGroupVolumes;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopSpammingConfiguredGroupsTime;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSourcePool[] audioSourcePools;

		[NonSerialized]
		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public INumberToSpeech numberToSpeech;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioMixerGroup spatializedEffectGroup;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioMixerGroup effectGroup;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioMixerGroup voiceGroup;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip clip_default;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Queue<VoiceQueueEntry> voiceQueue;

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xE5B438", Offset = "0xE5B438", VA = "0xE5B438")]
		private void Awake()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xE5B518", Offset = "0xE5B518", VA = "0xE5B518")]
		public void SetConfiguredGroupVolume(string groupName, float volume)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xE5B5A0", Offset = "0xE5B5A0", VA = "0xE5B5A0")]
		private void SetConfigureVolume(string groupName, float volume)
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xE5B5E8", Offset = "0xE5B5E8", VA = "0xE5B5E8")]
		private AudioSourcePool ChoosePool(AudioMixerGroup mixerGroup, out bool voice)
		{
			return null;
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0xE4E884", Offset = "0xE4E884", VA = "0xE4E884")]
		public AudioSource PlaySoundEffect(SoundEffect effect, float volume = 1f, float pitch = 1f)
		{
			return null;
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xE5B900", Offset = "0xE5B900", VA = "0xE5B900")]
		public AudioSource PlaySoundEffect(SoundEffect effect, Vector3? pos, float volume = 1f, float pitch = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xE5B938", Offset = "0xE5B938", VA = "0xE5B938")]
		public AudioSource PlaySoundEffect(AudioClip clip, float volume = 1f, float pitch = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xE5B6EC", Offset = "0xE5B6EC", VA = "0xE5B6EC")]
		public AudioSource PlaySoundEffect(AudioClip clip, Vector3? pos, [Optional] AudioMixerGroup mixerGroup, float volume = 1f, float pitch = 1f, [Optional] AudioSourcePool asp)
		{
			return null;
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xE5B9D4", Offset = "0xE5B9D4", VA = "0xE5B9D4")]
		public AudioSource PlaySoundEffect()
		{
			return null;
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xE5B9F4", Offset = "0xE5B9F4", VA = "0xE5B9F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xE5BA20", Offset = "0xE5BA20", VA = "0xE5BA20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9B9CC8", Offset = "0x9B9CC8")]
		private IEnumerator VoiceQueue_CR()
		{
			return null;
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xE5BAC0", Offset = "0xE5BAC0", VA = "0xE5BAC0")]
		public void QueueVoice(AudioClip clip, float wait)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xE5BB38", Offset = "0xE5BB38", VA = "0xE5BB38")]
		public void QueueVoice(AudioClip clip)
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0xE5BB40", Offset = "0xE5BB40", VA = "0xE5BB40")]
		public void QueueVoice(SoundEffect clip)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xE5BBAC", Offset = "0xE5BBAC", VA = "0xE5BBAC")]
		public void QueueSpeakNumbers(string numbers)
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xE5BCB8", Offset = "0xE5BCB8", VA = "0xE5BCB8")]
		public static void SetAudioSource(AudioSource source, SoundEffect effect)
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xE5BD88", Offset = "0xE5BD88", VA = "0xE5BD88")]
		public static AudioSourceTool CreateAudioSource(GameObject go, AudioSourceConfig config, string name, bool loop = true)
		{
			return null;
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0xE5BE5C", Offset = "0xE5BE5C", VA = "0xE5BE5C")]
		public void FadeOut(AudioSource source, SoundEffect effect, float duration)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xE5C048", Offset = "0xE5C048", VA = "0xE5C048")]
		public void Update()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xE5C308", Offset = "0xE5C308", VA = "0xE5C308")]
		public void ReapplyConfiguredGroups()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xE5C208", Offset = "0xE5C208", VA = "0xE5C208")]
		private void ApplyConfiguredGroups()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xE5C30C", Offset = "0xE5C30C", VA = "0xE5C30C")]
		public void TransitionTo(AudioMixerSnapshot snapShot, float duration)
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xE5C364", Offset = "0xE5C364", VA = "0xE5C364")]
		public SoundControl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public class SoundEffect
	{
		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clip;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B4668", Offset = "0x9B4668")]
		public float volume;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B4680", Offset = "0x9B4680")]
		public float pitch;

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xE5C5F8", Offset = "0xE5C5F8", VA = "0xE5C5F8")]
		public SoundEffect()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class CanvasManager : MonoBehaviour
	{
		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sortingOrder;

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xC697AC", Offset = "0xC697AC", VA = "0xC697AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xC697C4", Offset = "0xC697C4", VA = "0xC697C4")]
		public static void AddRaycaster(GameObject go)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xC698C8", Offset = "0xC698C8", VA = "0xC698C8")]
		public CanvasManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D4")]
	public class ColorResponse
	{
		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color output;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float outputScale;

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xC69E30", Offset = "0xC69E30", VA = "0xC69E30")]
		public ColorResponse()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1A70", Offset = "0x9B1A70")]
	public class ColorProcessing : ScriptableObject
	{
		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColorResponse red;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorResponse green;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorResponse blue;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ColorResponse constant;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xC698D0", Offset = "0xC698D0", VA = "0xC698D0")]
		public void Apply(RenderUtil.RTWrapper rt)
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xC69980", Offset = "0xC69980", VA = "0xC69980")]
		public void Apply(Material m)
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xC69BB4", Offset = "0xC69BB4", VA = "0xC69BB4")]
		public Color Apply(Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xC69D9C", Offset = "0xC69D9C", VA = "0xC69D9C")]
		public ColorProcessing()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class ColorRandomizer : MonoBehaviour
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xC69DA4", Offset = "0xC69DA4", VA = "0xC69DA4")]
		private void Start()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xC69E28", Offset = "0xC69E28", VA = "0xC69E28")]
		public ColorRandomizer()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public static class ColorUtil
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xC69E40", Offset = "0xC69E40", VA = "0xC69E40")]
		public static Color32 ToColor(this uint hex)
		{
			return default(Color32);
		}
	}
	[Token(Token = "0x20000D8")]
	public static class NetworkPlatformManager
	{
		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool haveID;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string userID;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ulong userLongID;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool entitlementCheckComplete;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool notEntitled;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool specialUser;

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xE4EA54", Offset = "0xE4EA54", VA = "0xE4EA54")]
		public static void Init()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xE4EC28", Offset = "0xE4EC28", VA = "0xE4EC28")]
		private static void PlatformCallback(Message message)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xE4ED58", Offset = "0xE4ED58", VA = "0xE4ED58")]
		private static void LoggedInUserCallback(Message<User> message)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xE4EF54", Offset = "0xE4EF54", VA = "0xE4EF54")]
		public static string GetPlatformUserID()
		{
			return null;
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0xE4EFBC", Offset = "0xE4EFBC", VA = "0xE4EFBC")]
		public static void Update()
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xE4EFC8", Offset = "0xE4EFC8", VA = "0xE4EFC8")]
		public static bool HaveID()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D9")]
	internal class OculusInputManager : IPlatformInputManager
	{
		[Serializable]
		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B242C", Offset = "0x9B242C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<OVRInput.Button, bool> <>9__4_0;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<OVRInput.Button, bool> <>9__4_1;

			[Token(Token = "0x6001455")]
			[Address(RVA = "0xE54A34", Offset = "0xE54A34", VA = "0xE54A34")]
			public <>c()
			{
			}

			[Token(Token = "0x6001456")]
			[Address(RVA = "0xE54A3C", Offset = "0xE54A3C", VA = "0xE54A3C")]
			internal bool <Update>b__4_0(OVRInput.Button b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001457")]
			[Address(RVA = "0xE54AA8", Offset = "0xE54AA8", VA = "0xE54AA8")]
			internal bool <Update>b__4_1(OVRInput.Button b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputManager inputManager;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRCameraRig cameraRig;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRInput.Controller activeController;

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xE53C08", Offset = "0xE53C08", VA = "0xE53C08", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xE53ED4", Offset = "0xE53ED4", VA = "0xE53ED4", Slot = "18")]
		public void Update()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xE540F0", Offset = "0xE540F0", VA = "0xE540F0")]
		private InputManager.VRInputDefinition GetVRDefinition(UniversalInputManager.GameButton button)
		{
			return null;
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xE54240", Offset = "0xE54240", VA = "0xE54240", Slot = "8")]
		public string DebugButton(UniversalInputManager.GameButton button)
		{
			return null;
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xE54398", Offset = "0xE54398", VA = "0xE54398", Slot = "5")]
		public bool GetButton(UniversalInputManager.GameButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xE544C8", Offset = "0xE544C8", VA = "0xE544C8", Slot = "7")]
		public bool GetButtonDown(UniversalInputManager.GameButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xE545E4", Offset = "0xE545E4", VA = "0xE545E4", Slot = "6")]
		public bool GetButtonUp(UniversalInputManager.GameButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xE546F4", Offset = "0xE546F4", VA = "0xE546F4", Slot = "9")]
		public Quaternion GetActiveControllerRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xE54760", Offset = "0xE54760", VA = "0xE54760", Slot = "10")]
		public float GetActiveControllerStick()
		{
			return default(float);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xE547D0", Offset = "0xE547D0", VA = "0xE547D0")]
		public OVRInput.Controller GetDominantController()
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xE547D8", Offset = "0xE547D8", VA = "0xE547D8", Slot = "13")]
		private UniversalInputManager.Controller Coplanar.IPlatformInputManager.GetActiveController()
		{
			return default(UniversalInputManager.Controller);
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xE547EC", Offset = "0xE547EC", VA = "0xE547EC", Slot = "11")]
		public Transform GetActiveControllerTransform()
		{
			return null;
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xE54820", Offset = "0xE54820", VA = "0xE54820", Slot = "12")]
		public Transform GetControllerTransform(XRNode node)
		{
			return null;
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xE54850", Offset = "0xE54850", VA = "0xE54850", Slot = "17")]
		public Vector3 GetCursorPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xE54880", Offset = "0xE54880", VA = "0xE54880", Slot = "15")]
		public float GetAxisValue(UniversalInputManager.Axis1D axis)
		{
			return default(float);
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xE548EC", Offset = "0xE548EC", VA = "0xE548EC", Slot = "16")]
		public Vector2 GetAxisValue(UniversalInputManager.Axis2D axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xE54958", Offset = "0xE54958", VA = "0xE54958", Slot = "14")]
		public bool ActivatePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xE549C0", Offset = "0xE549C0", VA = "0xE549C0")]
		public OculusInputManager()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class ContextManager : SingletonMono<ContextManager>
	{
		[Token(Token = "0x2000337")]
		public enum Property
		{
			[Token(Token = "0x4000D9C")]
			HasGui,
			[Token(Token = "0x4000D9D")]
			PositionalTracking,
			[Token(Token = "0x4000D9E")]
			Vignette,
			[Token(Token = "0x4000D9F")]
			PlayMenuMusic,
			[Token(Token = "0x4000DA0")]
			GameSounds,
			[Token(Token = "0x4000DA1")]
			GPUIntense
		}

		[Token(Token = "0x2000338")]
		private struct ContextInfo
		{
			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IContext contextObject;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<Property> propsList;
		}

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Property> currentProps;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Property, Action<bool>> propertyHandlers;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Stack<ContextInfo> contextStack;

		[Token(Token = "0x17000043")]
		public IContext Top
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0xC69E80", Offset = "0xC69E80", VA = "0xC69E80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		public string TopName
		{
			[Token(Token = "0x60004A7")]
			[Address(RVA = "0xC69ED8", Offset = "0xC69ED8", VA = "0xC69ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		public IContext CurrentContext
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0xC6A11C", Offset = "0xC6A11C", VA = "0xC6A11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xC69FD4", Offset = "0xC69FD4", VA = "0xC69FD4")]
		public bool InStack(IContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xC6A0F4", Offset = "0xC6A0F4", VA = "0xC6A0F4")]
		public bool IsCurrent(IContext a)
		{
			return default(bool);
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xC6A174", Offset = "0xC6A174", VA = "0xC6A174")]
		public void Push(IContext c)
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xC6A954", Offset = "0xC6A954", VA = "0xC6A954")]
		public void Pop(IContext c)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xC6A4E8", Offset = "0xC6A4E8", VA = "0xC6A4E8")]
		private void RefreshAllProps(List<Property> newProps)
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xC6A684", Offset = "0xC6A684", VA = "0xC6A684")]
		private void HandlePropsChange(List<Property> oldProps, List<Property> newProps)
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xC6AC84", Offset = "0xC6AC84", VA = "0xC6AC84")]
		private void Update()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xC6AD40", Offset = "0xC6AD40", VA = "0xC6AD40")]
		public void PopPush(IContext toPop, IContext toPush)
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xC6B18C", Offset = "0xC6B18C", VA = "0xC6B18C")]
		public void AddPropertyHandler(Property prop, Action<bool> action)
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xC6B22C", Offset = "0xC6B22C", VA = "0xC6B22C")]
		public ContextManager()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public interface IContext
	{
		[Token(Token = "0x60004B3")]
		void OnGainFocus();

		[Token(Token = "0x60004B4")]
		void OnPushed();

		[Token(Token = "0x60004B5")]
		void OnPopped();

		[Token(Token = "0x60004B6")]
		void OnLoseFocus();

		[Token(Token = "0x60004B7")]
		void ContextUpdate();

		[Token(Token = "0x60004B8")]
		List<ContextManager.Property> GetProps();

		[Token(Token = "0x60004B9")]
		UniversalCameraSettings GetCamSettings();
	}
	[Token(Token = "0x20000DC")]
	public class CPUGPUSpeedManager : SingletonMono<CPUGPUSpeedManager>
	{
		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool debugControlledClockSpeeds;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int debugCPUClockSpeed;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int debugGPUClockSpeed;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int applicationCPUSpeed;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int applicationGPUSpeed;

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xC69710", Offset = "0xC69710", VA = "0xC69710")]
		public void SetAppClockLevels(int cpu, int gpu)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xC69730", Offset = "0xC69730", VA = "0xC69730")]
		public void Update()
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xC69734", Offset = "0xC69734", VA = "0xC69734")]
		public CPUGPUSpeedManager()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1ABC", Offset = "0x9B1ABC")]
	public class GeometryDump : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000339")]
		public struct Entry
		{
			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 v;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool absolute;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color col;
		}

		[Serializable]
		[Token(Token = "0x200033A")]
		public class EntryList
		{
			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Entry> entries;

			[Token(Token = "0x6001458")]
			[Address(RVA = "0xC72388", Offset = "0xC72388", VA = "0xC72388")]
			public EntryList()
			{
			}
		}

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EntryList> listOfLists;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Entry> entries;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EntryList currentList;

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xC72174", Offset = "0xC72174", VA = "0xC72174")]
		public void AddVector(Vector3 p, Color c)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xC72244", Offset = "0xC72244", VA = "0xC72244")]
		public void AddPoint(Vector3 p, Color c)
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xC72318", Offset = "0xC72318", VA = "0xC72318")]
		public void StartNew()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xC723F8", Offset = "0xC723F8", VA = "0xC723F8")]
		public void Save()
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xC72454", Offset = "0xC72454", VA = "0xC72454")]
		public GeometryDump()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class GeometryDumpViewer : MonoBehaviour
	{
		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int drawCount;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float gizmoScale;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeometryDump dump;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int listIndex;

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xC724C4", Offset = "0xC724C4", VA = "0xC724C4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xC726B4", Offset = "0xC726B4", VA = "0xC726B4")]
		public GeometryDumpViewer()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class VertCountTester : MonoBehaviour
	{
		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] testObjectPrefabs;

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xD0BF6C", Offset = "0xD0BF6C", VA = "0xD0BF6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xD0BF70", Offset = "0xD0BF70", VA = "0xD0BF70")]
		private void SetInstances(int n, float scale, int modelIndex, float radius, float distance)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xD0C2CC", Offset = "0xD0C2CC", VA = "0xD0C2CC")]
		public VertCountTester()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class DebugConsole : MonoBehaviour
	{
		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro text;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject blackOutQuad;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject backgroundQuad;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform camTrans;

		[Token(Token = "0x40004E5")]
		private const int sortingLayer = 100;

		[Token(Token = "0x40004E6")]
		private const int quadRenderQueue = 4000;

		[Token(Token = "0x40004E7")]
		private const int panelRenderQueue = 4001;

		[Token(Token = "0x40004E8")]
		private const int layer = 5;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 forward;

		[Token(Token = "0x40004EA")]
		private const int textRenderQueue = 4002;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float distance;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float panelWidth;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float panelHeight;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool visible;

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xC6B5AC", Offset = "0xC6B5AC", VA = "0xC6B5AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xC6B9B4", Offset = "0xC6B9B4", VA = "0xC6B9B4")]
		private GameObject SetupQuad(Color color, int renderQueue)
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xC6BBD4", Offset = "0xC6BBD4", VA = "0xC6BBD4")]
		public void SetText(string newText)
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xC6BBF0", Offset = "0xC6BBF0", VA = "0xC6BBF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xC6BE30", Offset = "0xC6BE30", VA = "0xC6BE30")]
		public static DebugConsole CreateConsole()
		{
			return null;
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xC6BEB0", Offset = "0xC6BEB0", VA = "0xC6BEB0")]
		public void Center(bool horiz, bool vert)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xC6BEEC", Offset = "0xC6BEEC", VA = "0xC6BEEC")]
		public void Hide()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xC6BF4C", Offset = "0xC6BF4C", VA = "0xC6BF4C")]
		public void Show()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xC6BFB0", Offset = "0xC6BFB0", VA = "0xC6BFB0")]
		public DebugConsole()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class DebugDaemonAPI
	{
		[Token(Token = "0x200033B")]
		[Flags]
		public enum Flags
		{
			[Token(Token = "0x4000DA9")]
			SendSelectedSceneObjectPath = 1
		}

		[Serializable]
		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B244C", Offset = "0x9B244C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, DebugDaemonButtonArg> <>9__5_0;

			[Token(Token = "0x600145A")]
			[Address(RVA = "0xC6C648", Offset = "0xC6C648", VA = "0xC6C648")]
			public <>c()
			{
			}

			[Token(Token = "0x600145B")]
			[Address(RVA = "0xC6C650", Offset = "0xC6C650", VA = "0xC6C650")]
			internal DebugDaemonButtonArg <QButton>b__5_0(int i)
			{
				return null;
			}
		}

		[Token(Token = "0x40004EF")]
		private const string QUICK_DEBUG_GROUP = "Quick debug";

		[Token(Token = "0x17000046")]
		public static bool pluginPermitted
		{
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xC6BFD4", Offset = "0xC6BFD4", VA = "0xC6BFD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xC6BFDC", Offset = "0xC6BFDC", VA = "0xC6BFDC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9D3C", Offset = "0x9B9D3C")]
		public static void QText(string id, params object[] values)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xC6BFE0", Offset = "0xC6BFE0", VA = "0xC6BFE0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9D74", Offset = "0x9B9D74")]
		public static void QButton(string id, Action<string[]> action, int paramsCount = 0)
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xC6C01C", Offset = "0xC6C01C", VA = "0xC6C01C")]
		public static bool QToggle(string id, bool defaultValue = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xC6C024", Offset = "0xC6C024", VA = "0xC6C024")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9DAC", Offset = "0x9B9DAC")]
		public static void Button(string group, string id, Action<string[]> action, params string[] values)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xC6C028", Offset = "0xC6C028", VA = "0xC6C028")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9DE4", Offset = "0x9B9DE4")]
		public static void Button(string group, string id, Action<string[]> action, Flags flags, params string[] values)
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xC6C09C", Offset = "0xC6C09C", VA = "0xC6C09C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9E1C", Offset = "0x9B9E1C")]
		public static void Text(string group, string id, params object[] values)
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xC6C314", Offset = "0xC6C314", VA = "0xC6C314")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9E54", Offset = "0x9B9E54")]
		public static void Button(string group, string id, Action<string[]> action, DebugDaemonButtonArg[] argDescriptions)
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xC6C318", Offset = "0xC6C318", VA = "0xC6C318")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9E8C", Offset = "0x9B9E8C")]
		public static void Button(string group, string id, Action<string[]> action, Flags flags, DebugDaemonButtonArg[] argDescriptions)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xC6C3D8", Offset = "0xC6C3D8", VA = "0xC6C3D8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9EC4", Offset = "0x9B9EC4")]
		public static void Toggle(string group, string id, Func<bool> valueGetter, Action<bool> valueSetter)
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xC6C4AC", Offset = "0xC6C4AC", VA = "0xC6C4AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9EFC", Offset = "0x9B9EFC")]
		public static void ToggleUpdateValue(string group, string id)
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xC6C5DC", Offset = "0xC6C5DC", VA = "0xC6C5DC")]
		public DebugDaemonAPI()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class DebugDaemonConstants
	{
		[Token(Token = "0x200033D")]
		public class DebugCommand
		{
			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MethodInfo mi;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x600145C")]
			[Address(RVA = "0xC6C804", Offset = "0xC6C804", VA = "0xC6C804")]
			public DebugCommand()
			{
			}
		}

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int hostPort;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int clientPort;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int deviceHostPort;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int COMMUNICATION_BUFFER_SIZE;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string string_sendElements;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string string_invokeAction;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string string_invokeActionSuccess;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string string_invokeActionFailure;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string string_testResult;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string string_testStatus;

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xC6C704", Offset = "0xC6C704", VA = "0xC6C704")]
		public DebugDaemonConstants()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class DebugDaemonElement
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xC6C80C", Offset = "0xC6C80C", VA = "0xC6C80C")]
		public DebugDaemonElement()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class DebugDaemonElementText : DebugDaemonElement
	{
		[Serializable]
		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B245C", Offset = "0x9B245C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, string> <>9__3_0;

			[Token(Token = "0x600145E")]
			[Address(RVA = "0xC6CC48", Offset = "0xC6CC48", VA = "0xC6CC48")]
			public <>c()
			{
			}

			[Token(Token = "0x600145F")]
			[Address(RVA = "0xC6CC50", Offset = "0xC6CC50", VA = "0xC6CC50")]
			internal string <.ctor>b__3_0(object value)
			{
				return null;
			}
		}

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Values;

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xC6CAC8", Offset = "0xC6CAC8", VA = "0xC6CAC8")]
		public DebugDaemonElementText()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xC6C0D8", Offset = "0xC6C0D8", VA = "0xC6C0D8")]
		public DebugDaemonElementText(object[] _values)
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class DebugDaemonButtonArg
	{
		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DefaultValue;

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xC6C064", Offset = "0xC6C064", VA = "0xC6C064")]
		public DebugDaemonButtonArg(string name, string defaultValue = "")
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class DebugDaemonElementButton : DebugDaemonElement
	{
		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<string[]> callback;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugDaemonAPI.Flags flags;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DebugDaemonButtonArg[] ArgDescriptions;

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xC6C814", Offset = "0xC6C814", VA = "0xC6C814")]
		public DebugDaemonElementButton()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xC6C354", Offset = "0xC6C354", VA = "0xC6C354")]
		public DebugDaemonElementButton(Action<string[]> callback, DebugDaemonAPI.Flags flags, DebugDaemonButtonArg[] argDescriptions)
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xC6C86C", Offset = "0xC6C86C", VA = "0xC6C86C")]
		public void Invoke(string[] args)
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class DebugDaemonElementToggle : DebugDaemonElement
	{
		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CurrentValue;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<bool> valueSetter;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Func<bool> valueGetter;

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xC6CB20", Offset = "0xC6CB20", VA = "0xC6CB20")]
		public DebugDaemonElementToggle()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xC6C414", Offset = "0xC6C414", VA = "0xC6C414")]
		public DebugDaemonElementToggle(Func<bool> valueGetter, Action<bool> valueSetter)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xC6CCB8", Offset = "0xC6CCB8", VA = "0xC6CCB8")]
		public bool GetCurrentValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xC6CD10", Offset = "0xC6CD10", VA = "0xC6CD10")]
		public void OnValueChanged(bool value)
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class DebugDaemonInvokeActionParams
	{
		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Args;

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xC6CD84", Offset = "0xC6CD84", VA = "0xC6CD84")]
		public DebugDaemonInvokeActionParams(string _id, string[] _args)
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class DebugDaemonElementConverter : JsonConverter
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xC6C8D4", Offset = "0xC6C8D4", VA = "0xC6C8D4", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xC6C964", Offset = "0xC6C964", VA = "0xC6C964", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xC6CB78", Offset = "0xC6CB78", VA = "0xC6CB78", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xC6CBDC", Offset = "0xC6CBDC", VA = "0xC6CBDC")]
		public DebugDaemonElementConverter()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class DebugDaemonPlugin : SingletonMono<DebugDaemonPlugin>
	{
		[Serializable]
		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B246C", Offset = "0x9B246C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, DebugDaemonElement>, string> <>9__25_1;

			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, DebugDaemonElement>, DebugDaemonElement> <>9__25_2;

			[Token(Token = "0x6001461")]
			[Address(RVA = "0xC6F044", Offset = "0xC6F044", VA = "0xC6F044")]
			public <>c()
			{
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0xC6F04C", Offset = "0xC6F04C", VA = "0xC6F04C")]
			internal string <SyncRegisteredElements>b__25_1(KeyValuePair<string, DebugDaemonElement> pair)
			{
				return null;
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0xC6F090", Offset = "0xC6F090", VA = "0xC6F090")]
			internal DebugDaemonElement <SyncRegisteredElements>b__25_2(KeyValuePair<string, DebugDaemonElement> pair)
			{
				return null;
			}
		}

		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B247C", Offset = "0x9B247C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DebugDaemonPlugin <>4__this;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string id;

			[Token(Token = "0x6001464")]
			[Address(RVA = "0xC6EE00", Offset = "0xC6EE00", VA = "0xC6EE00")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001465")]
			[Address(RVA = "0xC6F0D4", Offset = "0xC6F0D4", VA = "0xC6F0D4")]
			internal bool <FastToggle>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0xC6F13C", Offset = "0xC6F13C", VA = "0xC6F13C")]
			internal void <FastToggle>b__1(bool value)
			{
			}
		}

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string IpFileName;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string HostAddress;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReconnectRateSec;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RegisteredElementsSyncRateSec;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TcpListener tcpListener;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TcpClient tcpClient;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NetworkStream tcpStream;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string tcpReceivedData;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hostAddressFileNotFound;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int maxDefaultConnections;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int socketId;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int connectionId;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private byte[] recvBuffer;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int myReliableChannelId;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, DebugDaemonElement> registeredElements;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HashSet<string> elementsToUpdate;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, bool> fastToggles;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool connected;

		[NonSerialized]
		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool UsbDebuggingEnabled;

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xC6CFDC", Offset = "0xC6CFDC", VA = "0xC6CFDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xC6D234", Offset = "0xC6D234", VA = "0xC6D234")]
		private void NetworkSetup()
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xC6D348", Offset = "0xC6D348", VA = "0xC6D348")]
		private void SetupServer()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xC6D4B0", Offset = "0xC6D4B0", VA = "0xC6D4B0")]
		private void AttemptReconnect()
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xC6D804", Offset = "0xC6D804", VA = "0xC6D804")]
		private void SendMessageToServer(string message)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xC6DAB0", Offset = "0xC6DAB0", VA = "0xC6DAB0")]
		private void ResendAllElements()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xC6DB6C", Offset = "0xC6DB6C", VA = "0xC6DB6C")]
		private void SyncRegisteredElements()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xC6DE14", Offset = "0xC6DE14", VA = "0xC6DE14")]
		public void SendTestResult(Dictionary<string, string> result)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xC6DED4", Offset = "0xC6DED4", VA = "0xC6DED4")]
		public void SendTestStatus(string status)
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xC6D524", Offset = "0xC6D524", VA = "0xC6D524")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xC6DF60", Offset = "0xC6DF60", VA = "0xC6DF60", Slot = "4")]
		protected override void OnSingletonDestroy()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xC6D974", Offset = "0xC6D974", VA = "0xC6D974")]
		public void SendSocketMessage(string message)
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xC6D814", Offset = "0xC6D814", VA = "0xC6D814")]
		public void SendSocketMessageTCP(string message)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xC6DFC0", Offset = "0xC6DFC0", VA = "0xC6DFC0")]
		private void ReceiveMessage()
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xC6E930", Offset = "0xC6E930", VA = "0xC6E930")]
		private void ReceiveMessageTCP()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xC6EB20", Offset = "0xC6EB20", VA = "0xC6EB20")]
		private void CheckForConnections()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xC6EC4C", Offset = "0xC6EC4C", VA = "0xC6EC4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xC6E280", Offset = "0xC6E280", VA = "0xC6E280")]
		public void ProcessMessage(string message)
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xC6C204", Offset = "0xC6C204", VA = "0xC6C204")]
		public void RegisterElement(string group, string idInGroup, DebugDaemonElement element)
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xC6EC78", Offset = "0xC6EC78", VA = "0xC6EC78")]
		public bool FastToggle(string group, string id, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xC6C4E8", Offset = "0xC6C4E8", VA = "0xC6C4E8")]
		public void UpdateToggle(string id)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xC6EE08", Offset = "0xC6EE08", VA = "0xC6EE08")]
		public DebugDaemonPlugin()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xC6EF78", Offset = "0xC6EF78", VA = "0xC6EF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B9F34", Offset = "0x9B9F34")]
		private bool <SyncRegisteredElements>b__25_0(KeyValuePair<string, DebugDaemonElement> pair)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000EB")]
	public class DDGPUTimer : MonoBehaviour
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GPUTimer gpuTimer;

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xC6B344", Offset = "0xC6B344", VA = "0xC6B344")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xC6B39C", Offset = "0xC6B39C", VA = "0xC6B39C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xC6B3A0", Offset = "0xC6B3A0", VA = "0xC6B3A0")]
		public DDGPUTimer()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class DDInspector : SingletonMono<DDInspector>
	{
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string groupName;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool latestQueryResult;

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xC6B3A8", Offset = "0xC6B3A8", VA = "0xC6B3A8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xC6B3AC", Offset = "0xC6B3AC", VA = "0xC6B3AC")]
		private void SetState(string path, bool state)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xC6B490", Offset = "0xC6B490", VA = "0xC6B490")]
		private void Query(string path)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xC6B52C", Offset = "0xC6B52C", VA = "0xC6B52C")]
		public DDInspector()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class DebugDaemonMatEditor : MonoBehaviour
	{
		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugDaemonMatEditorSO matEditorSO;

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xC6CDBC", Offset = "0xC6CDBC", VA = "0xC6CDBC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9F44", Offset = "0x9B9F44")]
		public void Update()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xC6CE28", Offset = "0xC6CE28", VA = "0xC6CE28")]
		public DebugDaemonMatEditor()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1AF8", Offset = "0x9B1AF8")]
	public class DebugDaemonMatEditorSO : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000341")]
		public struct PropEntry
		{
			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string type;
		}

		[Serializable]
		[Token(Token = "0x2000342")]
		public struct MatEntry
		{
			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropEntry[] props;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] buttonParams;
		}

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatEntry[] matEntries;

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xC6CDD4", Offset = "0xC6CDD4", VA = "0xC6CDD4")]
		public void UpdateDebugDaemon()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xC6CE30", Offset = "0xC6CE30", VA = "0xC6CE30")]
		public DebugDaemonMatEditorSO()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	internal class DebugDaemonObjectControl : MonoBehaviour
	{
		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string group;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string debugDaemonId;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float updateIntervalSec;

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xC6CE38", Offset = "0xC6CE38", VA = "0xC6CE38")]
		public static string GetGameObjectPath(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xC6CF7C", Offset = "0xC6CF7C", VA = "0xC6CF7C")]
		public DebugDaemonObjectControl()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class BCD
	{
		[Token(Token = "0x2000343")]
		public enum C
		{
			[Token(Token = "0x4000DBC")]
			none,
			[Token(Token = "0x4000DBD")]
			editor,
			[Token(Token = "0x4000DBE")]
			rendering,
			[Token(Token = "0x4000DBF")]
			analytics,
			[Token(Token = "0x4000DC0")]
			ai,
			[Token(Token = "0x4000DC1")]
			weapons,
			[Token(Token = "0x4000DC2")]
			music,
			[Token(Token = "0x4000DC3")]
			menus,
			[Token(Token = "0x4000DC4")]
			saves,
			[Token(Token = "0x4000DC5")]
			config,
			[Token(Token = "0x4000DC6")]
			network,
			[Token(Token = "0x4000DC7")]
			race,
			[Token(Token = "0x4000DC8")]
			trail,
			[Token(Token = "0x4000DC9")]
			perf,
			[Token(Token = "0x4000DCA")]
			dd,
			[Token(Token = "0x4000DCB")]
			game,
			[Token(Token = "0x4000DCC")]
			localization
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xC67C8C", Offset = "0xC67C8C", VA = "0xC67C8C")]
		public BCD()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class DebugUtil
	{
		[Token(Token = "0x2000344")]
		public class DebugTimer
		{
			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string timerName;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float startTime;

			[Token(Token = "0x6001467")]
			[Address(RVA = "0xC6F828", Offset = "0xC6F828", VA = "0xC6F828")]
			public void Start()
			{
			}

			[Token(Token = "0x6001468")]
			[Address(RVA = "0xC70408", Offset = "0xC70408", VA = "0xC70408")]
			public void Stop()
			{
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0xC6F820", Offset = "0xC6F820", VA = "0xC6F820")]
			public DebugTimer()
			{
			}
		}

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool[] catEnabled;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int categoryCount;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int profileDepth;

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xC6F1B4", Offset = "0xC6F1B4", VA = "0xC6F1B4")]
		private static void OnFail(string message)
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xC6F21C", Offset = "0xC6F21C", VA = "0xC6F21C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9F7C", Offset = "0x9B9F7C")]
		public static void AssertLessThan(double a, double b)
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xC6F2D4", Offset = "0xC6F2D4", VA = "0xC6F2D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9FB4", Offset = "0x9B9FB4")]
		public static void AssertGreaterThan(double a, double b)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xC6F390", Offset = "0xC6F390", VA = "0xC6F390")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9B9FEC", Offset = "0x9B9FEC")]
		public static void AssertLessThanOrEqual(double a, double b)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xC6F44C", Offset = "0xC6F44C", VA = "0xC6F44C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA024", Offset = "0x9BA024")]
		public static void AssertGreaterThanOrEqual(double a, double b)
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xC6F504", Offset = "0xC6F504", VA = "0xC6F504")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA05C", Offset = "0x9BA05C")]
		public static void AssertEqual(double a, double b)
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xC6F5BC", Offset = "0xC6F5BC", VA = "0xC6F5BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA094", Offset = "0x9BA094")]
		public static void AssertEqual(object a, object b)
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xC6F63C", Offset = "0xC6F63C", VA = "0xC6F63C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA0CC", Offset = "0x9BA0CC")]
		public static void AssertSimilar(double a, double b, double range)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xC67334", Offset = "0xC67334", VA = "0xC67334")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA104", Offset = "0x9BA104")]
		public static void Assert(bool t, string message = "Assert true fail")
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xC6F73C", Offset = "0xC6F73C", VA = "0xC6F73C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA13C", Offset = "0x9BA13C")]
		public static void AssertNull(object obj)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xC6F7A4", Offset = "0xC6F7A4", VA = "0xC6F7A4")]
		public static DebugTimer StartDebugTimer(string name)
		{
			return null;
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xC6F850", Offset = "0xC6F850", VA = "0xC6F850")]
		public static string WriteFileToGuidFile(string fileNamePrefix, string text)
		{
			return null;
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xC6F910", Offset = "0xC6F910", VA = "0xC6F910")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA174", Offset = "0x9BA174")]
		public static void Pause()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xC6F914", Offset = "0xC6F914", VA = "0xC6F914")]
		public static void InitLogging()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xC6FA04", Offset = "0xC6FA04", VA = "0xC6FA04")]
		public static void EnableAll()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xC6FAB0", Offset = "0xC6FAB0", VA = "0xC6FAB0")]
		public static void Disable(BCD.C cat)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xC6FB34", Offset = "0xC6FB34", VA = "0xC6FB34")]
		public static void Enable(BCD.C cat)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xC6FBBC", Offset = "0xC6FBBC", VA = "0xC6FBBC")]
		public static string GetTimeString()
		{
			return null;
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xC6FC50", Offset = "0xC6FC50", VA = "0xC6FC50")]
		private static void Log_Internal(string text)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xC6FD5C", Offset = "0xC6FD5C", VA = "0xC6FD5C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA1AC", Offset = "0x9BA1AC")]
		public static void LogFormat(BCD.C category, string text, params object[] args)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xC6FE44", Offset = "0xC6FE44", VA = "0xC6FE44")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA1E4", Offset = "0x9BA1E4")]
		public static void Log(BCD.C category, object obj)
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xC6FF0C", Offset = "0xC6FF0C", VA = "0xC6FF0C")]
		public static void LogError(object o)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xC6FF74", Offset = "0xC6FF74", VA = "0xC6FF74")]
		public static void LogWarning(object o)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xC6FFDC", Offset = "0xC6FFDC", VA = "0xC6FFDC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA21C", Offset = "0x9BA21C")]
		public static void Log(object o)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xC70044", Offset = "0xC70044", VA = "0xC70044")]
		public static void LogErrorFormat(string text, params object[] args)
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xC700BC", Offset = "0xC700BC", VA = "0xC700BC")]
		public static void LogWarningFormat(string text, params object[] args)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xC70134", Offset = "0xC70134", VA = "0xC70134")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA254", Offset = "0x9BA254")]
		public static void LogFormat(string text, params object[] args)
		{
		}

		[Token(Token = "0x600052E")]
		public static void ArraySet<T>(T[] a, int i, T v)
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xC701AC", Offset = "0xC701AC", VA = "0xC701AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA28C", Offset = "0x9BA28C")]
		public static void DebugRandom(string text)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xC7027C", Offset = "0xC7027C", VA = "0xC7027C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA2C4", Offset = "0x9BA2C4")]
		public static void ProfileBegin(string name)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xC702D4", Offset = "0xC702D4", VA = "0xC702D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA2FC", Offset = "0x9BA2FC")]
		public static void ProfileEnd()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xC703BC", Offset = "0xC703BC", VA = "0xC703BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA334", Offset = "0x9BA334")]
		private static void DumpProfileFrames()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xC703C0", Offset = "0xC703C0", VA = "0xC703C0")]
		public static void ProfileLabel(string name)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xC703C4", Offset = "0xC703C4", VA = "0xC703C4")]
		public static bool ProfileABTest_B()
		{
			return default(bool);
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xC70400", Offset = "0xC70400", VA = "0xC70400")]
		public DebugUtil()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class ProfileSegment : IDisposable
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0xE56DE4", Offset = "0xE56DE4", VA = "0xE56DE4")]
		public ProfileSegment(string name)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xE56DEC", Offset = "0xE56DEC", VA = "0xE56DEC", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class DisplayMono : MonoBehaviour
	{
		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MonoCamera monoCam;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material displayMaterial;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float translate;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer commandBuf;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture rtInCommandBuffer;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VignetteMode vignetteMode;

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xC705AC", Offset = "0xC705AC", VA = "0xC705AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xC706C0", Offset = "0xC706C0", VA = "0xC706C0")]
		public void SetMaterialProperties()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xC7077C", Offset = "0xC7077C", VA = "0xC7077C")]
		private void BuildCommandBuffer()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xC708C8", Offset = "0xC708C8", VA = "0xC708C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xC708CC", Offset = "0xC708CC", VA = "0xC708CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xC70934", Offset = "0xC70934", VA = "0xC70934")]
		public void SetTranslate(float t)
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xC709A4", Offset = "0xC709A4", VA = "0xC709A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xC70AA8", Offset = "0xC70AA8", VA = "0xC70AA8")]
		public DisplayMono()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class CurveAttribute : PropertyAttribute
	{
		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PosX;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PosY;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RangeX;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RangeY;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool b;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int x;

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xC6B2EC", Offset = "0xC6B2EC", VA = "0xC6B2EC")]
		public CurveAttribute(float PosX, float PosY, float RangeX, float RangeY, bool b)
		{
		}
	}
	[Token(Token = "0x20000F5")]
	[ExecuteInEditMode]
	public class FineMover : MonoBehaviour
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 start;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 pointA;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion startQuat;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion quatA;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B4698", Offset = "0x9B4698")]
		public float interpolatePoint;

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xC7127C", Offset = "0xC7127C", VA = "0xC7127C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BA36C", Offset = "0x9BA36C")]
		public void SetStart()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xC712D8", Offset = "0xC712D8", VA = "0xC712D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BA3A4", Offset = "0x9BA3A4")]
		public void SetPointA()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xC71334", Offset = "0xC71334", VA = "0xC71334")]
		private void Update()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xC714A0", Offset = "0xC714A0", VA = "0xC714A0")]
		public FineMover()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class ProgressBarTask : IDisposable
	{
		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nestedTasks;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool cancelled;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string desc;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int nestingLevel;

		[Token(Token = "0x17000047")]
		public bool Cancelled
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0xE57048", Offset = "0xE57048", VA = "0xE57048")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000048")]
		private bool TopLevel
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0xE57038", Offset = "0xE57038", VA = "0xE57038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000049")]
		public float Progress
		{
			[Token(Token = "0x600054A")]
			[Address(RVA = "0xE56EA4", Offset = "0xE56EA4", VA = "0xE56EA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xE56DF0", Offset = "0xE56DF0", VA = "0xE56DF0")]
		public ProgressBarTask(string title, string desc)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xE56F18", Offset = "0xE56F18", VA = "0xE56F18")]
		public ProgressBarTask(string title)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xE56FC8", Offset = "0xE56FC8", VA = "0xE56FC8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xE57050", Offset = "0xE57050", VA = "0xE57050")]
		public static bool DisplayCancellableProgressBar(string title, string info, float p)
		{
			return default(bool);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xE57058", Offset = "0xE57058", VA = "0xE57058")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA3DC", Offset = "0x9BA3DC")]
		public static void DisplayProgressBar(string title, float p)
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xE5705C", Offset = "0xE5705C", VA = "0xE5705C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA414", Offset = "0x9BA414")]
		public static void DisplayProgressBar(string title, string info, float p)
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xE57060", Offset = "0xE57060", VA = "0xE57060")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA44C", Offset = "0x9BA44C")]
		public static void ClearProgressBar()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public static class EditorUtils
	{
	}
	[Token(Token = "0x20000F8")]
	public class EffectBaker : MonoBehaviour
	{
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public iVector2 atlasSize;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iVector2 renderSize;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int framesToBake;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool forceAlphaTo1;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B46B0", Offset = "0x9B46B0")]
		public bool projectionMatrixFromSrcCam;

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xC70AB0", Offset = "0xC70AB0", VA = "0xC70AB0")]
		public EffectBaker()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class EventQueue
	{
		[Token(Token = "0x2000345")]
		public struct QueueItem
		{
			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object obj;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float dueTime;
		}

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float duration;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<QueueItem> queue;

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xC70AC0", Offset = "0xC70AC0", VA = "0xC70AC0")]
		public EventQueue(float duration)
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xC70B48", Offset = "0xC70B48", VA = "0xC70B48")]
		public void Add(object obj, float timeNow)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xC70BC8", Offset = "0xC70BC8", VA = "0xC70BC8")]
		public object GetDueEvent(float timeNow)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1B44", Offset = "0x9B1B44")]
	public class GameEvent : ScriptableObject
	{
		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GameEventListener> eventListeners;

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xC71D50", Offset = "0xC71D50", VA = "0xC71D50")]
		public void Raise()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xC71E0C", Offset = "0xC71E0C", VA = "0xC71E0C")]
		public void RegisterListener(GameEventListener listener)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xC71EA4", Offset = "0xC71EA4", VA = "0xC71EA4")]
		public void UnregisterListener(GameEventListener listener)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xC71F3C", Offset = "0xC71F3C", VA = "0xC71F3C")]
		public static void RaiseByName(string eventName)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xC720BC", Offset = "0xC720BC", VA = "0xC720BC")]
		public GameEvent()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class GameEventListener : MonoBehaviour
	{
		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B46E8", Offset = "0x9B46E8")]
		public GameEvent Event;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4720", Offset = "0x9B4720")]
		public UnityEvent Response;

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xC7212C", Offset = "0xC7212C", VA = "0xC7212C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xC7214C", Offset = "0xC7214C", VA = "0xC7214C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xC71DF0", Offset = "0xC71DF0", VA = "0xC71DF0")]
		public void OnEventRaised()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xC7216C", Offset = "0xC7216C", VA = "0xC7216C")]
		public GameEventListener()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class EventSystemManager : MonoBehaviour
	{
		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject vrObject;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject nonVRObject;

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xC70C68", Offset = "0xC70C68", VA = "0xC70C68")]
		private void Awake()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xC70CAC", Offset = "0xC70CAC", VA = "0xC70CAC")]
		public EventSystemManager()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public static class Extensions
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0xC70CB4", Offset = "0xC70CB4", VA = "0xC70CB4")]
		public static void Merge(this IDictionary target, IDictionary addHash)
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class FPSMonitor : MonoBehaviour
	{
		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text fps;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastFrameCheckTime;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numFrames;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fpsText;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] frameTimes;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool markDroppedFrame;

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xC7109C", Offset = "0xC7109C", VA = "0xC7109C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xC71204", Offset = "0xC71204", VA = "0xC71204")]
		public FPSMonitor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class TempEffect
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip startSound;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip endSound;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activeOverride;

		[NonSerialized]
		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float startTime;

		[NonSerialized]
		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool activeLastFrame;

		[Token(Token = "0x1700004A")]
		public float elapsed
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0xD048E4", Offset = "0xD048E4", VA = "0xD048E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xD047F8", Offset = "0xD047F8", VA = "0xD047F8")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xD0488C", Offset = "0xD0488C", VA = "0xD0488C")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xD04910", Offset = "0xD04910", VA = "0xD04910")]
		public bool HasStopped()
		{
			return default(bool);
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xD04A1C", Offset = "0xD04A1C", VA = "0xD04A1C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xD04A28", Offset = "0xD04A28", VA = "0xD04A28")]
		public TempEffect()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class VoxelTool
	{
		[Token(Token = "0x2000346")]
		private enum Axis
		{
			[Token(Token = "0x4000DD2")]
			X,
			[Token(Token = "0x4000DD3")]
			Y,
			[Token(Token = "0x4000DD4")]
			Z
		}

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int width;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int height;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int depth;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Func<Vector3, float> densityFn;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshBuilder mb;

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xD0DD64", Offset = "0xD0DD64", VA = "0xD0DD64")]
		private int GetDim(Axis axis)
		{
			return default(int);
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xD0DD8C", Offset = "0xD0DD8C", VA = "0xD0DD8C")]
		private Vector3 GetDirection(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xD0DE4C", Offset = "0xD0DE4C", VA = "0xD0DE4C")]
		public VoxelTool(int width, int height, int depth, Func<Vector3, float> densityFn)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xD0DEE0", Offset = "0xD0DEE0", VA = "0xD0DEE0")]
		public void Build(string name, Path path)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xD0DF30", Offset = "0xD0DF30", VA = "0xD0DF30")]
		private void BuildPlane(Axis a1, Axis a2, Axis a3)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xD0E340", Offset = "0xD0E340", VA = "0xD0E340")]
		private void AddFace(Vector3 faceCenter, Vector3 d1, Vector3 d2)
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class GUITextManager : SingletonMono<GUITextManager>
	{
		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string text;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentFrame;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool drawGUI;

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xC7175C", Offset = "0xC7175C", VA = "0xC7175C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BA494", Offset = "0x9BA494")]
		public void Text(string t)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xC71834", Offset = "0xC71834", VA = "0xC71834")]
		public bool KeyboardToggle(ref bool field, KeyCode key, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xC7187C", Offset = "0xC7187C", VA = "0xC7187C")]
		public bool KeyboardToggle(ref int field, int numValues, KeyCode key, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xC718CC", Offset = "0xC718CC", VA = "0xC718CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xC71904", Offset = "0xC71904", VA = "0xC71904")]
		public GUITextManager()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class GUIUtil : MonoBehaviour
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0xC7198C", Offset = "0xC7198C", VA = "0xC7198C")]
		public static int EnumButtons(Type type, int current)
		{
			return default(int);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xC71D48", Offset = "0xC71D48", VA = "0xC71D48")]
		public GUIUtil()
		{
		}
	}
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1B64", Offset = "0x9B1B64")]
	public class HandEmulator : MonoBehaviour
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform hand;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouseMovementEnabled;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 handOffset;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float mouseMovementScale;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float arrowControlSpeed;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode toggleKey;

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xC73810", Offset = "0xC73810", VA = "0xC73810")]
		public HandEmulator()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class HighWaterMemoryStream : MemoryStream
	{
		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private long highWater;

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xC7404C", Offset = "0xC7404C", VA = "0xC7404C")]
		public HighWaterMemoryStream(byte[] buffer)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xC74054", Offset = "0xC74054", VA = "0xC74054")]
		public void SetHighWater()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xC74080", Offset = "0xC74080", VA = "0xC74080", Slot = "27")]
		public override int Read([In][Out] byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xC74144", Offset = "0xC74144", VA = "0xC74144", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Token(Token = "0x2000105")]
	[ExecuteInEditMode]
	public class HudPrototype : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000347")]
		public class MeterSpec
		{
			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float min;

			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float max;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float alpha0;

			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float alpha1;

			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string propName;

			[Token(Token = "0x4000DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string meterName;

			[Token(Token = "0x4000DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float alpha;

			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool invert;

			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B884C", Offset = "0x9B884C")]
			public float force;

			[Token(Token = "0x600146A")]
			[Address(RVA = "0xC744D8", Offset = "0xC744D8", VA = "0xC744D8")]
			public MeterSpec()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ShowInInspector]
		public bool forceValues;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeterSpec[] meterSpecs;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, MeterSpec> specDict;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material prototypeMat;

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xC7414C", Offset = "0xC7414C", VA = "0xC7414C")]
		private void Start()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xC7428C", Offset = "0xC7428C", VA = "0xC7428C")]
		public void SetValue(string propName, float value)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xC743B0", Offset = "0xC743B0", VA = "0xC743B0")]
		public void SetBatteryFlash(Color col, float v)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xC74468", Offset = "0xC74468", VA = "0xC74468")]
		public HudPrototype()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class ImageTools : MonoBehaviour
	{
		[Token(Token = "0x2000348")]
		public class TextureAverager
		{
			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] kernel;

			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RenderUtil.RenderTextureManager rtManager;

			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int nextKernelIndex;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RenderUtil.RTWrapper rtTotal;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private MiscUtil.ShaderMat addMat;

			[Token(Token = "0x600146B")]
			[Address(RVA = "0xC77218", Offset = "0xC77218", VA = "0xC77218")]
			public TextureAverager(RenderUtil.RenderTextureManager manager, float[] kernel)
			{
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0xC77314", Offset = "0xC77314", VA = "0xC77314")]
			public void SubmitImage(Texture src)
			{
			}

			[Token(Token = "0x600146D")]
			[Address(RVA = "0xC77448", Offset = "0xC77448", VA = "0xC77448")]
			public RenderUtil.RTWrapper GetResult()
			{
				return null;
			}

			[Token(Token = "0x600146E")]
			[Address(RVA = "0xC77458", Offset = "0xC77458", VA = "0xC77458")]
			public void Release()
			{
			}
		}

		[Token(Token = "0x4000568")]
		private const float root2pi = 2.5066283f;

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xC744E0", Offset = "0xC744E0", VA = "0xC744E0")]
		public static Texture2D BlitToTexture2D(Material mat, Texture2D src)
		{
			return null;
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xC74634", Offset = "0xC74634", VA = "0xC74634")]
		public static void SetColorBlock(Texture2D texture, iVector2 pos, iVector2 size, Color color)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xC74740", Offset = "0xC74740", VA = "0xC74740")]
		public static Texture2D AverageColumns(Texture2D srcTex)
		{
			return null;
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xC74AAC", Offset = "0xC74AAC", VA = "0xC74AAC")]
		public static Texture2D BoxBlur(Texture2D src, int kernelExtent, Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xC74CF4", Offset = "0xC74CF4", VA = "0xC74CF4")]
		public static float Gaussian(float sigma, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xC74D84", Offset = "0xC74D84", VA = "0xC74D84")]
		public static float GaussianInv(float sigma, float g)
		{
			return default(float);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xC74E24", Offset = "0xC74E24", VA = "0xC74E24")]
		public static Texture2D SingleDirectionGaussianBlur(Texture2D src, int sigma, Vector2 direction, [Optional] iVector2? outputSize_p, bool hackHDR = false)
		{
			return null;
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xC751DC", Offset = "0xC751DC", VA = "0xC751DC")]
		public static void ScaleAndResetAlpha(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xC752C0", Offset = "0xC752C0", VA = "0xC752C0")]
		public static Texture2D GaussianBlur(Texture2D src, int sigma, [Optional] iVector2? outputSize_p, bool hackHDR = false)
		{
			return null;
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xC75418", Offset = "0xC75418", VA = "0xC75418")]
		public static void SinglePixelBlur(RenderUtil.RTWrapper rtw, float toLeave)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xC756E8", Offset = "0xC756E8", VA = "0xC756E8")]
		public static Texture2D BlurImage(Texture2D srcTex, int filterSize, int angle)
		{
			return null;
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xC75BD8", Offset = "0xC75BD8", VA = "0xC75BD8")]
		public static Texture2D RotateImage(Texture2D srcTex, float angle)
		{
			return null;
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xC75EF4", Offset = "0xC75EF4", VA = "0xC75EF4")]
		public static Texture2D EnlargeTiled(Texture2D srcTex, float scale)
		{
			return null;
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xC76214", Offset = "0xC76214", VA = "0xC76214")]
		public static Texture2D ScaleImageY(Texture2D srcTex, int scale)
		{
			return null;
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xC76450", Offset = "0xC76450", VA = "0xC76450")]
		public static Texture2D SetAlphaOne(Texture2D srcTex)
		{
			return null;
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xC75AF4", Offset = "0xC75AF4", VA = "0xC75AF4")]
		private static Color ColorPow(Color a, float p)
		{
			return default(Color);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xC76590", Offset = "0xC76590", VA = "0xC76590")]
		public static Texture2D ScaleImageY_0_5(Texture2D srcTex)
		{
			return null;
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xC768BC", Offset = "0xC768BC", VA = "0xC768BC")]
		public static Texture2D BlurImageY_0_5(Texture2D srcTex)
		{
			return null;
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xC76B94", Offset = "0xC76B94", VA = "0xC76B94")]
		public static Texture2D GetReadableTexture(Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xC76D90", Offset = "0xC76D90", VA = "0xC76D90")]
		public static void DrawGrid(RenderUtil.RTWrapper displayTex, int divisions)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xC76EA8", Offset = "0xC76EA8", VA = "0xC76EA8")]
		public static void FilterPixels(Texture2D tex, Func<Color, Color> func)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xC76FDC", Offset = "0xC76FDC", VA = "0xC76FDC")]
		public static Texture2D CopyTexAndFilterPixels(Texture2D tex, Func<Color, Color> func)
		{
			return null;
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xC77210", Offset = "0xC77210", VA = "0xC77210")]
		public ImageTools()
		{
		}
	}
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1BD8", Offset = "0x9B1BD8")]
	public class InputManager : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000349")]
		public class VRInputDefinition
		{
			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9B8864", Offset = "0x9B8864")]
			public OVRInput.Button buttonMask;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public OVRInput.Axis1D axis;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float axisThreshold;

			[Token(Token = "0x600146F")]
			[Address(RVA = "0xC7771C", Offset = "0xC7771C", VA = "0xC7771C")]
			public VRInputDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034A")]
		public class InputSetVR
		{
			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRInputDefinition primaryButton;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRInputDefinition secondaryButton;

			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRInputDefinition pauseButton;

			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRInputDefinition grabButton;

			[Token(Token = "0x6001470")]
			[Address(RVA = "0xC7770C", Offset = "0xC7770C", VA = "0xC7770C")]
			public InputSetVR()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034B")]
		public class PCInputDefinition
		{
			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode key;

			[Token(Token = "0x6001471")]
			[Address(RVA = "0xC77714", Offset = "0xC77714", VA = "0xC77714")]
			public PCInputDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034C")]
		public class InputSetPC
		{
			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PCInputDefinition primaryButton;

			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PCInputDefinition secondaryButton;

			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PCInputDefinition pauseButton;

			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PCInputDefinition grabButton;

			[Token(Token = "0x6001472")]
			[Address(RVA = "0xC77704", Offset = "0xC77704", VA = "0xC77704")]
			public InputSetPC()
			{
			}
		}

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputSetVR inputSetVR;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputSetPC inputSetPC;

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xC7746C", Offset = "0xC7746C", VA = "0xC7746C")]
		public VRInputDefinition GetVRDefinition(UniversalInputManager.GameButton button)
		{
			return null;
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xC775B4", Offset = "0xC775B4", VA = "0xC775B4")]
		public PCInputDefinition GetPCDefinition(UniversalInputManager.GameButton button)
		{
			return null;
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xC776FC", Offset = "0xC776FC", VA = "0xC776FC")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class InternetTester : SingletonMono<InternetTester>
	{
		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B248C", Offset = "0x9B248C")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InternetTester <>4__this;

			[Token(Token = "0x17000174")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001476")]
				[Address(RVA = "0xC77F84", Offset = "0xC77F84", VA = "0xC77F84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001478")]
				[Address(RVA = "0xC77FF0", Offset = "0xC77FF0", VA = "0xC77FF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001473")]
			[Address(RVA = "0xC777AC", Offset = "0xC777AC", VA = "0xC777AC")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001474")]
			[Address(RVA = "0xC77E64", Offset = "0xC77E64", VA = "0xC77E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001475")]
			[Address(RVA = "0xC77E68", Offset = "0xC77E68", VA = "0xC77E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001477")]
			[Address(RVA = "0xC77F8C", Offset = "0xC77F8C", VA = "0xC77F8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B249C", Offset = "0x9B249C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, Ping> <>9__8_0;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Ping, bool> <>9__8_1;

			[Token(Token = "0x600147A")]
			[Address(RVA = "0xC77A28", Offset = "0xC77A28", VA = "0xC77A28")]
			public <>c()
			{
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0xC77A30", Offset = "0xC77A30", VA = "0xC77A30")]
			internal Ping <CheckInternet_CR>b__8_0(string add)
			{
				return null;
			}

			[Token(Token = "0x600147C")]
			[Address(RVA = "0xC77A94", Offset = "0xC77A94", VA = "0xC77A94")]
			internal bool <CheckInternet_CR>b__8_1(Ping x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B24AC", Offset = "0x9B24AC")]
		private sealed class <CheckInternet_CR>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InternetTester <>4__this;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Ping[] <pings>5__2;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <pingStartTime>5__3;

			[Token(Token = "0x17000176")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001480")]
				[Address(RVA = "0xC77DF0", Offset = "0xC77DF0", VA = "0xC77DF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000177")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001482")]
				[Address(RVA = "0xC77E5C", Offset = "0xC77E5C", VA = "0xC77E5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600147D")]
			[Address(RVA = "0xC7784C", Offset = "0xC7784C", VA = "0xC7784C")]
			[DebuggerHidden]
			public <CheckInternet_CR>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0xC77AE8", Offset = "0xC77AE8", VA = "0xC77AE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0xC77AEC", Offset = "0xC77AEC", VA = "0xC77AEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001481")]
			[Address(RVA = "0xC77DF8", Offset = "0xC77DF8", VA = "0xC77DF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400056B")]
		private const float maxPingWait = 5f;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] pingAddresses;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int pingFailCount;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4768", Offset = "0x9B4768")]
		private bool <InternetAccessible>k__BackingField;

		[Token(Token = "0x1700004B")]
		public bool InternetAccessible
		{
			[Token(Token = "0x6000598")]
			[Address(RVA = "0xC77724", Offset = "0xC77724", VA = "0xC77724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA4CC", Offset = "0x9BA4CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000599")]
			[Address(RVA = "0xC7772C", Offset = "0xC7772C", VA = "0xC7772C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA4DC", Offset = "0x9BA4DC")]
			private set
			{
			}
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xC77738", Offset = "0xC77738", VA = "0xC77738")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BA4EC", Offset = "0x9BA4EC")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xC777D8", Offset = "0xC777D8", VA = "0xC777D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BA550", Offset = "0x9BA550")]
		public IEnumerator CheckInternet_CR()
		{
			return null;
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xC77878", Offset = "0xC77878", VA = "0xC77878")]
		public InternetTester()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B1BE8", Offset = "0x9B1BE8")]
	public struct iVector2
	{
		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x1700004C")]
		public int Item
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0xA5D484", Offset = "0xA5D484", VA = "0xA5D484")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600059E")]
			[Address(RVA = "0xA5D49C", Offset = "0xA5D49C", VA = "0xA5D49C")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public static iVector2 Zero
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0xD03EF0", Offset = "0xD03EF0", VA = "0xD03EF0")]
			get
			{
				return default(iVector2);
			}
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xA5D4B4", Offset = "0xA5D4B4", VA = "0xA5D4B4")]
		public iVector2(int x, int y)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xA5D4BC", Offset = "0xA5D4BC", VA = "0xA5D4BC")]
		public bool IsZero()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xD0E548", Offset = "0xD0E548", VA = "0xD0E548")]
		public static implicit operator Vector2(iVector2 src)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xD0E580", Offset = "0xD0E580", VA = "0xD0E580")]
		public static explicit operator iVector2(Vector2 src)
		{
			return default(iVector2);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xD0E590", Offset = "0xD0E590", VA = "0xD0E590")]
		public static bool operator ==(iVector2 a, iVector2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xD0E5B0", Offset = "0xD0E5B0", VA = "0xD0E5B0")]
		public static bool operator !=(iVector2 a, iVector2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xA5D4DC", Offset = "0xA5D4DC", VA = "0xA5D4DC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xA5D518", Offset = "0xA5D518", VA = "0xA5D518", Slot = "0")]
		public override bool Equals(object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xD0E69C", Offset = "0xD0E69C", VA = "0xD0E69C")]
		public static iVector2 operator *(iVector2 a, iVector2 b)
		{
			return default(iVector2);
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xD0E6B4", Offset = "0xD0E6B4", VA = "0xD0E6B4")]
		public static iVector2 operator /(iVector2 a, iVector2 b)
		{
			return default(iVector2);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xD0E6CC", Offset = "0xD0E6CC", VA = "0xD0E6CC")]
		public static iVector2 operator %(iVector2 a, iVector2 b)
		{
			return default(iVector2);
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xD0E6EC", Offset = "0xD0E6EC", VA = "0xD0E6EC")]
		public static Vector2 operator *(iVector2 a, Vector2 b)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200010A")]
	public class LeaderBoardManager : MonoBehaviour
	{
		[Token(Token = "0x2000350")]
		public class LeaderboardEntry
		{
			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Rank;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long Score;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Username;

			[Token(Token = "0x6001483")]
			[Address(RVA = "0xC788C4", Offset = "0xC788C4", VA = "0xC788C4")]
			public LeaderboardEntry()
			{
			}
		}

		[Token(Token = "0x2000351")]
		public struct Query
		{
			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string table;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ViewMode viewMode;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LeaderBoardUpdatedCallback callback;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int count;
		}

		[Token(Token = "0x2000352")]
		public enum ViewMode
		{
			[Token(Token = "0x4000E02")]
			AllTop,
			[Token(Token = "0x4000E03")]
			AllMe,
			[Token(Token = "0x4000E04")]
			FriendsTop,
			[Token(Token = "0x4000E05")]
			FriendsMe
		}

		[Token(Token = "0x2000353")]
		public delegate void LeaderBoardUpdatedCallback(string table, ViewMode viewMode, SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x2000354")]
		private struct ScoreToSubmit
		{
			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string table;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint score;
		}

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LeaderBoardUpdatedCallback leaderboardUpdatedCallback_;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ViewMode viewMode;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<ScoreToSubmit> scoresToSubmit;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool submissionPending;

		[Token(Token = "0x1700004E")]
		public LeaderBoardUpdatedCallback leaderboardUpdatedCallback
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xC78120", Offset = "0xC78120", VA = "0xC78120")]
			set
			{
			}
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xC77FF8", Offset = "0xC77FF8", VA = "0xC77FF8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xC78000", Offset = "0xC78000", VA = "0xC78000")]
		private void MoveViewMode(int dir)
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xC78110", Offset = "0xC78110", VA = "0xC78110")]
		public void MoveToNextViewMode()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xC78118", Offset = "0xC78118", VA = "0xC78118")]
		public void MoveToPrevViewMode()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xC78128", Offset = "0xC78128", VA = "0xC78128")]
		public void SubmitScore(string table, uint score)
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xC781AC", Offset = "0xC781AC", VA = "0xC781AC")]
		public void QueryLeaderboard(string table, int count)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xC781CC", Offset = "0xC781CC", VA = "0xC781CC")]
		private void SubmitScoreNow()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xC782AC", Offset = "0xC782AC", VA = "0xC782AC")]
		public void Update()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xC78320", Offset = "0xC78320", VA = "0xC78320")]
		public LeaderBoardManager()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xC78390", Offset = "0xC78390", VA = "0xC78390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA5B4", Offset = "0x9BA5B4")]
		private void <SubmitScoreNow>b__16_0(bool success)
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class LifeTimeHelper : MonoBehaviour
	{
		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xC788CC", Offset = "0xC788CC", VA = "0xC788CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xC7895C", Offset = "0xC7895C", VA = "0xC7895C")]
		public LifeTimeHelper()
		{
		}
	}
	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1C20", Offset = "0x9B1C20")]
	public class LightmapSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000355")]
		public struct ParamSave
		{
			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public double value;
		}

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float envScale;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ParamSave> savedParams;

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xC78964", Offset = "0xC78964", VA = "0xC78964")]
		public LightmapSettings()
		{
		}
	}
	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1C5C", Offset = "0x9B1C5C")]
	public class MaterialCopier : ScriptableObject
	{
		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xC78974", Offset = "0xC78974", VA = "0xC78974")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9BA5C4", Offset = "0x9BA5C4")]
		public void CopyAll()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xC78A78", Offset = "0xC78A78", VA = "0xC78A78")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9BA5D4", Offset = "0x9BA5D4")]
		public void CopyAllBack()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xC789E0", Offset = "0xC789E0", VA = "0xC789E0")]
		private void Copy(Material mat)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xC78AE4", Offset = "0xC78AE4", VA = "0xC78AE4")]
		private void CopyBack(Material mat)
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xC78B7C", Offset = "0xC78B7C", VA = "0xC78B7C")]
		public void AssignAllInScene()
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xC78BE8", Offset = "0xC78BE8", VA = "0xC78BE8")]
		private void AssignAllInScene(Material mat)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xC78DBC", Offset = "0xC78DBC", VA = "0xC78DBC")]
		public MaterialCopier()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class MaterialWrapper : IDisposable
	{
		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialManager manager;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xC792B8", Offset = "0xC792B8", VA = "0xC792B8")]
		public static implicit operator Material(MaterialWrapper wrapper)
		{
			return null;
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xC792D0", Offset = "0xC792D0", VA = "0xC792D0", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xC78EA8", Offset = "0xC78EA8", VA = "0xC78EA8")]
		public MaterialWrapper()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class MaterialManager : SingletonMono<MaterialManager>
	{
		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MaterialWrapper> materials;

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xC78DC4", Offset = "0xC78DC4", VA = "0xC78DC4")]
		public MaterialWrapper FromShader(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xC78EB0", Offset = "0xC78EB0", VA = "0xC78EB0")]
		public void Free(MaterialWrapper mw)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xC78F50", Offset = "0xC78F50", VA = "0xC78F50")]
		public MaterialManager()
		{
		}
	}
	[Token(Token = "0x2000110")]
	[ExecuteInEditMode]
	public class MaterialPropsCache : MonoBehaviour
	{
		[Token(Token = "0x2000356")]
		public enum PropType
		{
			[Token(Token = "0x4000E0B")]
			Float,
			[Token(Token = "0x4000E0C")]
			Vector
		}

		[Serializable]
		[Token(Token = "0x2000357")]
		public struct PropEntry
		{
			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropType type;

			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float value_float;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector4 value_vector;
		}

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PropEntry[] propEntries;

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xC78FE8", Offset = "0xC78FE8", VA = "0xC78FE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xC78FEC", Offset = "0xC78FEC", VA = "0xC78FEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BA5E4", Offset = "0x9BA5E4")]
		public void ApplyNow()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xC79064", Offset = "0xC79064", VA = "0xC79064")]
		public MaterialPropertyBlock GetPropBlock()
		{
			return null;
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xC79158", Offset = "0xC79158", VA = "0xC79158")]
		public static void AddAndApply(MeshRenderer mr, List<PropEntry> props)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xC79258", Offset = "0xC79258", VA = "0xC79258")]
		public MaterialPropsCache()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public static class MathUtil
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xC792F0", Offset = "0xC792F0", VA = "0xC792F0")]
		public static int Squared(this int x)
		{
			return default(int);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xC792F8", Offset = "0xC792F8", VA = "0xC792F8")]
		public static float Squared(this float x)
		{
			return default(float);
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xC780FC", Offset = "0xC780FC", VA = "0xC780FC")]
		public static int mod(this int x, int m)
		{
			return default(int);
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xC79300", Offset = "0xC79300", VA = "0xC79300")]
		public static float mod(this float x, float m)
		{
			return default(float);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xC7932C", Offset = "0xC7932C", VA = "0xC7932C")]
		public static int AbsModDistance(int x, int y, int mod)
		{
			return default(int);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xC793B0", Offset = "0xC793B0", VA = "0xC793B0")]
		public static float AbsModDistance(float x, float y, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xC79438", Offset = "0xC79438", VA = "0xC79438")]
		public static float SignedModDistance(float x, float y, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xC7947C", Offset = "0xC7947C", VA = "0xC7947C")]
		public static float WrappedLerpUnclamped(float x, float y, float mod, float lerp)
		{
			return default(float);
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xC7955C", Offset = "0xC7955C", VA = "0xC7955C")]
		public static float ModDistance(float x, float y, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xC79590", Offset = "0xC79590", VA = "0xC79590")]
		public static Vector2 RotateLeft(this Vector2 a)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xC795C8", Offset = "0xC795C8", VA = "0xC795C8")]
		public static Vector3 RotateLeft(this Vector3 a)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xC7960C", Offset = "0xC7960C", VA = "0xC7960C")]
		public static Vector2 RotateRight(this Vector2 a)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xC79644", Offset = "0xC79644", VA = "0xC79644")]
		public static Vector3 RotateRight(this Vector3 a)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xC79688", Offset = "0xC79688", VA = "0xC79688")]
		public static Vector2 Rotate(this Vector2 v, float degrees)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xC79738", Offset = "0xC79738", VA = "0xC79738")]
		public static Vector3 Horiz(this Vector2 a)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xC79774", Offset = "0xC79774", VA = "0xC79774")]
		public static Vector2 Horiz(this Vector3 a)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xC6B97C", Offset = "0xC6B97C", VA = "0xC6B97C")]
		public static Vector3 NormalizedHoriz(this Vector3 a)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xC797A4", Offset = "0xC797A4", VA = "0xC797A4")]
		public static Vector3 Divide(this Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xC797E4", Offset = "0xC797E4", VA = "0xC797E4")]
		public static Vector2 Divide(this Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xC79818", Offset = "0xC79818", VA = "0xC79818")]
		public static Vector3 Multiply(this Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xC79858", Offset = "0xC79858", VA = "0xC79858")]
		public static Vector2 Multiply(this Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xC7988C", Offset = "0xC7988C", VA = "0xC7988C")]
		public static Matrix4x4 Matrix_RotateEuler(float x, float y, float z)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xC799D4", Offset = "0xC799D4", VA = "0xC799D4")]
		public static Matrix4x4 Matrix_RotateEuler(Vector3 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xC79B1C", Offset = "0xC79B1C", VA = "0xC79B1C")]
		public static Matrix4x4 Matrix_Translate(Vector3 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xC79C44", Offset = "0xC79C44", VA = "0xC79C44")]
		public static Matrix4x4 Matrix_Rotate(Quaternion q)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xC79D4C", Offset = "0xC79D4C", VA = "0xC79D4C")]
		public static Matrix4x4 Matrix_InvRotate(Quaternion q)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xC79E9C", Offset = "0xC79E9C", VA = "0xC79E9C")]
		public static string DP4(this Vector2 a)
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xC79F3C", Offset = "0xC79F3C", VA = "0xC79F3C")]
		public static string DP4(this Vector3 a)
		{
			return null;
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xC7A008", Offset = "0xC7A008", VA = "0xC7A008")]
		public static string DP4(this Vector4 a)
		{
			return null;
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xC7A1BC", Offset = "0xC7A1BC", VA = "0xC7A1BC")]
		public static float Sinc(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xC7A24C", Offset = "0xC7A24C", VA = "0xC7A24C")]
		public static float CubicFilter(float p, float B, float C)
		{
			return default(float);
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xC7A3B4", Offset = "0xC7A3B4", VA = "0xC7A3B4")]
		public static float CubicFilter2D(float x, float y, float B, float C)
		{
			return default(float);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xC7A404", Offset = "0xC7A404", VA = "0xC7A404")]
		public static float ApplySoftDeadZone(float x, float deadZone)
		{
			return default(float);
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xC7A494", Offset = "0xC7A494", VA = "0xC7A494")]
		public static float SmoothToSin(float x, float v)
		{
			return default(float);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xC7A534", Offset = "0xC7A534", VA = "0xC7A534")]
		public static float SmoothMax(float a, float b, float k)
		{
			return default(float);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xC7A5CC", Offset = "0xC7A5CC", VA = "0xC7A5CC")]
		public static float SmoothMin(float a, float b, float k)
		{
			return default(float);
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xC7A5EC", Offset = "0xC7A5EC", VA = "0xC7A5EC")]
		public static float CgSmoothStep(float a, float b, float x)
		{
			return default(float);
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xC7A690", Offset = "0xC7A690", VA = "0xC7A690")]
		public static float ApplyDeadZone(float x, float deadZone)
		{
			return default(float);
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xC7A738", Offset = "0xC7A738", VA = "0xC7A738")]
		public static float FitRange(float a, float b, float c, float d, float x)
		{
			return default(float);
		}

		[Token(Token = "0x60005F3")]
		public static void InterpolateFromTable<T>(Func<int, T> tableFn, int tableLength, float index, out T lower, out T upper, out float fraction)
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xC7A754", Offset = "0xC7A754", VA = "0xC7A754")]
		public static float InterpolateFromTable(Func<int, float> tableFn, int tableLength, float index)
		{
			return default(float);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xC7A800", Offset = "0xC7A800", VA = "0xC7A800")]
		public static Vector2 InterpolateFromTable(Func<int, Vector2> tableFn, int tableLength, float index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xC7A90C", Offset = "0xC7A90C", VA = "0xC7A90C")]
		public static Vector3 InterpolateFromTable(Func<int, Vector3> tableFn, int tableLength, float index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005F7")]
		public static void InterpolateFromTable<T>(T[] table, float index, out T lower, out T upper, out float fraction)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xC7AA3C", Offset = "0xC7AA3C", VA = "0xC7AA3C")]
		public static float InterpolateFromTable(float[] table, float index)
		{
			return default(float);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xC7AAE0", Offset = "0xC7AAE0", VA = "0xC7AAE0")]
		public static Vector2 InterpolateFromTable(Vector2[] table, float index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xC7ABE0", Offset = "0xC7ABE0", VA = "0xC7ABE0")]
		public static Vector3 InterpolateFromTable(Vector3[] table, float index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xC7AD00", Offset = "0xC7AD00", VA = "0xC7AD00")]
		public static float FindInterpolationIndex(Func<int, float> tableFn, int tableLength, float targetValue, int startIndex = -1, int minIndex = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xC7AE64", Offset = "0xC7AE64", VA = "0xC7AE64")]
		public static Quaternion SafeLookRotation(Vector3 forward, Vector3 up)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xC7AFA0", Offset = "0xC7AFA0", VA = "0xC7AFA0")]
		public static float GetConnectingRadius_func(Vector2 n1, Vector2 n2, Vector2 posDelta)
		{
			return default(float);
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xC7B11C", Offset = "0xC7B11C", VA = "0xC7B11C")]
		public static float GetConnectingRadius(Vector2 d1, Vector2 d2, Vector2 startPos, Vector2 endPos)
		{
			return default(float);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xC7B29C", Offset = "0xC7B29C", VA = "0xC7B29C")]
		private static float Cross2D(Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xC7B39C", Offset = "0xC7B39C", VA = "0xC7B39C")]
		public static float SmoothStart(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xC7B414", Offset = "0xC7B414", VA = "0xC7B414")]
		public static float SmoothStop(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xC7B498", Offset = "0xC7B498", VA = "0xC7B498")]
		public static Bounds GetBounds(List<Vector3> points)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xC7B798", Offset = "0xC7B798", VA = "0xC7B798")]
		public static Vector3 GetAverage(List<Vector3> points)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000112")]
	public class MeshBuilder
	{
		[Token(Token = "0x2000358")]
		[Flags]
		public enum Attributes
		{
			[Token(Token = "0x4000E12")]
			Invalid = -1,
			[Token(Token = "0x4000E13")]
			Position = 1,
			[Token(Token = "0x4000E14")]
			Normal = 2,
			[Token(Token = "0x4000E15")]
			Tangent = 4,
			[Token(Token = "0x4000E16")]
			Color = 8,
			[Token(Token = "0x4000E17")]
			UV1 = 0x10,
			[Token(Token = "0x4000E18")]
			UV2 = 0x20,
			[Token(Token = "0x4000E19")]
			UV3 = 0x40,
			[Token(Token = "0x4000E1A")]
			UV4 = 0x80,
			[Token(Token = "0x4000E1B")]
			BoneWeights = 0x100
		}

		[Token(Token = "0x2000359")]
		public struct MeshAndMatrix
		{
			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh mesh;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Matrix4x4 matrix;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float userData;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 userData2;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float userData3;
		}

		[Token(Token = "0x200035A")]
		public struct VertexData
		{
			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector2 uv;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 normal;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 tangent;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Color color;
		}

		[Token(Token = "0x200035B")]
		public delegate void VertexModifier(ref Vector3 pos, ref Vector2 uv, ref Color color, ref Vector3 normal, ref Vector4 tangent, ref Attributes atts);

		[Token(Token = "0x200035C")]
		public delegate void PostVertexModifier(ref Vector3 pos, ref Vector2 uv, ref Color color, ref Vector3 normal, ref Vector4 tangent, ref Attributes atts, Bounds bounds);

		[Token(Token = "0x200035D")]
		public class AttributeMismatchException : Exception
		{
			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Attributes expected;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Attributes actual;

			[Token(Token = "0x6001490")]
			[Address(RVA = "0xE49AA4", Offset = "0xE49AA4", VA = "0xE49AA4")]
			public new string Message()
			{
				return null;
			}

			[Token(Token = "0x6001491")]
			[Address(RVA = "0xE49B40", Offset = "0xE49B40", VA = "0xE49B40")]
			public AttributeMismatchException()
			{
			}
		}

		[Token(Token = "0x200035E")]
		public class VertMapper
		{
			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<int, int> indexMap;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int outVertIndex;

			[Token(Token = "0x6001492")]
			[Address(RVA = "0xE4A0D4", Offset = "0xE4A0D4", VA = "0xE4A0D4")]
			public void AddVert(int srcIndex, Vector3 vert, Action<int> addVertFn, Action<int> addTriFn)
			{
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0xE4A204", Offset = "0xE4A204", VA = "0xE4A204")]
			public VertMapper()
			{
			}
		}

		[Token(Token = "0x200035F")]
		private struct TriInfo
		{
			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] vs;
		}

		[Serializable]
		[Token(Token = "0x2000360")]
		public class LightParams
		{
			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 dir;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color color;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float intensity;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color ambientColor;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float ambientIntensity;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float emissionThreshold;

			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color emissionColor;

			[Token(Token = "0x6001494")]
			[Address(RVA = "0xE49BA8", Offset = "0xE49BA8", VA = "0xE49BA8")]
			public LightParams()
			{
			}
		}

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B24CC", Offset = "0x9B24CC")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshBuilder <>4__this;

			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Attributes atts;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Matrix4x4 m;

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Mesh sourceMesh;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool haveUVs;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
			public bool haveUV2s;

			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
			public bool haveColors;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Color colorDelta;

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool haveNormals;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Matrix4x4 normalMatrix;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public bool haveTangents;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public Matrix4x4 tangentMatrix;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			public int ic;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public Action<int> <>9__0;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public Action<int> <>9__1;

			[Token(Token = "0x6001495")]
			[Address(RVA = "0xE49618", Offset = "0xE49618", VA = "0xE49618")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001496")]
			[Address(RVA = "0xE49620", Offset = "0xE49620", VA = "0xE49620")]
			internal void <AddMeshWithColorDelta>b__0(int i)
			{
			}

			[Token(Token = "0x6001497")]
			[Address(RVA = "0xE49A2C", Offset = "0xE49A2C", VA = "0xE49A2C")]
			internal void <AddMeshWithColorDelta>b__1(int dstIndex)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B24DC", Offset = "0x9B24DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vector3, Vector3, Vector3> <>9__30_1;

			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<List<int>, bool> <>9__48_0;

			[Token(Token = "0x6001499")]
			[Address(RVA = "0xE49510", Offset = "0xE49510", VA = "0xE49510")]
			public <>c()
			{
			}

			[Token(Token = "0x600149A")]
			[Address(RVA = "0xE49518", Offset = "0xE49518", VA = "0xE49518")]
			internal Vector3 <SortFaces>b__30_1(Vector3 a, Vector3 b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0xE495C0", Offset = "0xE495C0", VA = "0xE495C0")]
			internal bool <BuildMesh>b__48_0(List<int> submesh)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Attributes expectedAtts;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> verts;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector2> uvs;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector2> uv2s;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Color> colors;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> normals;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Vector4> tangents;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<int> tris;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<List<int>> subMeshes;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3? light;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color ambient;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color lightColor;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float lightIntensity;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool applyMatrixToNormals;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool applyMatrixToTangents;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public VertexModifier perVertexFunc;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool recalculateNormals;

		[Token(Token = "0x1700004F")]
		public int NumVerts
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0xC7B960", Offset = "0xC7B960", VA = "0xC7B960")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xC7B9B4", Offset = "0xC7B9B4", VA = "0xC7B9B4")]
		public MeshBuilder()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xC7BBA0", Offset = "0xC7BBA0", VA = "0xC7BBA0")]
		private void AddVertex(Attributes atts, Vector3 position, [Optional] Vector3 normal, [Optional] Vector4 tangent, [Optional] Color color, [Optional] Vector2 UV1, [Optional] Vector2 UV2, [Optional] Vector2 UV3, [Optional] Vector2 UV4)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xC7BE08", Offset = "0xC7BE08", VA = "0xC7BE08")]
		public void AddMeshWithColorDelta(Mesh sourceMesh, Matrix4x4 m, Color colorDelta, int subMeshIndex = -1, bool reverseVertexOrder = false, Attributes atts = Attributes.Invalid)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xC7C844", Offset = "0xC7C844", VA = "0xC7C844")]
		public static Attributes MeshAttributes(List<MeshAndMatrix> meshList)
		{
			return default(Attributes);
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xC7C964", Offset = "0xC7C964", VA = "0xC7C964")]
		public void SortFaces(int axis, bool reverse)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xC7C724", Offset = "0xC7C724", VA = "0xC7C724")]
		public static Attributes MeshAttributes(Mesh mesh)
		{
			return default(Attributes);
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xC7CE50", Offset = "0xC7CE50", VA = "0xC7CE50")]
		public void AddMesh(List<MeshAndMatrix> meshList, Attributes atts)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xC7D028", Offset = "0xC7D028", VA = "0xC7D028")]
		public void AddMesh(MeshAndMatrix meshAndMatrix, Attributes atts)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xC7CFA0", Offset = "0xC7CFA0", VA = "0xC7CFA0")]
		public void AddMesh(Mesh sourceMesh, Matrix4x4 m, int subMeshIndex = -1, bool reverseVertexOrder = false, Attributes atts = Attributes.Invalid)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xC7D09C", Offset = "0xC7D09C", VA = "0xC7D09C")]
		public void AddGrid(int width, int height)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xC7D384", Offset = "0xC7D384", VA = "0xC7D384")]
		public void AddFace(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xC7D538", Offset = "0xC7D538", VA = "0xC7D538")]
		public void AddFace(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Vector3 normal)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xC7D744", Offset = "0xC7D744", VA = "0xC7D744")]
		public void AddFaceWithUVs(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4)
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xC7D8F8", Offset = "0xC7D8F8", VA = "0xC7D8F8")]
		public void AddFaceWithUVs(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Vector3 normal)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xC7DB7C", Offset = "0xC7DB7C", VA = "0xC7DB7C")]
		public void AddQuad(Vector3 centre, Vector3 side1, Vector3 side2, [Optional] Color? p_vertexColor, [Optional] Vector2? p_UVZeroPoint, [Optional] Vector2? p_UVScale)
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xC7E404", Offset = "0xC7E404", VA = "0xC7E404")]
		public void ConvertVerts(PostVertexModifier vertexModifier)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xC7E80C", Offset = "0xC7E80C", VA = "0xC7E80C")]
		public static Vector2[] GetCornerOffsets(float scale)
		{
			return null;
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xC7DD40", Offset = "0xC7DD40", VA = "0xC7DD40")]
		public void AddQuadExplicitUVs(Vector3 centre, Vector3 side1, Vector3 side2, Vector2 UV1_1, Vector2 UV1_2, [Optional] Color? p_vertexColor, [Optional] Vector2? UV2_1, [Optional] Vector2? UV2_2)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xC7E944", Offset = "0xC7E944", VA = "0xC7E944")]
		public void AddBox(Vector3 centre, Vector3 side1, Vector3 side2, Vector3 side3, [Optional] Color? p_vertexColor)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xC7EDD8", Offset = "0xC7EDD8", VA = "0xC7EDD8")]
		public void ApplyLighting(LightParams p)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xC7F0D4", Offset = "0xC7F0D4", VA = "0xC7F0D4")]
		public Vector3 Recenter()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xC7F384", Offset = "0xC7F384", VA = "0xC7F384")]
		public Mesh BuildMesh(string name, [Optional] Mesh m)
		{
			return null;
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xC7F954", Offset = "0xC7F954", VA = "0xC7F954")]
		public void RemoveDoubles(float threshold)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xC7BB1C", Offset = "0xC7BB1C", VA = "0xC7BB1C")]
		public void AddSubMesh()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xC7FC40", Offset = "0xC7FC40", VA = "0xC7FC40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA74C", Offset = "0x9BA74C")]
		private Vector3 <SortFaces>b__30_0(int vi)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1CB8", Offset = "0x9B1CB8")]
	public class MeshToLines : ScriptableObject
	{
		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh srcMesh;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool justHardEdges;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B4778", Offset = "0x9B4778")]
		public bool insideEdgesOnly;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float endGap;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string outSuffix;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string outName;

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xE4A6A0", Offset = "0xE4A6A0", VA = "0xE4A6A0")]
		public MeshToLines()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class MeshUtil : MonoBehaviour
	{
		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B24EC", Offset = "0x9B24EC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float length;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int lengthDivisions;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float degrees;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int curveDivisions;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float radius;

			[Token(Token = "0x600149C")]
			[Address(RVA = "0xE4A7C8", Offset = "0xE4A7C8", VA = "0xE4A7C8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600149D")]
			[Address(RVA = "0xE4AB58", Offset = "0xE4AB58", VA = "0xE4AB58")]
			internal void <BuildCylinderSection>b__0(ref Vector3 pos, ref Vector2 uv, ref Color color, ref Vector3 normal, ref Vector4 tangent, ref MeshBuilder.Attributes atts)
			{
			}
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xE4A6B0", Offset = "0xE4A6B0", VA = "0xE4A6B0")]
		public static Mesh BuildCylinderSection(string name, float length, float radius, float degrees, int lengthDivisions, int curveDivisions)
		{
			return null;
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xE4A7D0", Offset = "0xE4A7D0", VA = "0xE4A7D0")]
		public static void ReverseTriArray(int[] triArray)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xE4A958", Offset = "0xE4A958", VA = "0xE4A958")]
		public static GameObject SpawnObjectAtMeshCenter(Mesh mesh, Transform root)
		{
			return null;
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xE4AB50", Offset = "0xE4AB50", VA = "0xE4AB50")]
		public MeshUtil()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class MonoCamera : MonoBehaviour
	{
		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera srcCam;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera monoCam;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFormat textureFormat;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int depthBits;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int antiAliasingSamples;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool createDepthTexture;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture renderTex;

		[Token(Token = "0x17000050")]
		public iVector2 Resolution
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0xE4D764", Offset = "0xE4D764", VA = "0xE4D764")]
			get
			{
				return default(iVector2);
			}
			[Token(Token = "0x6000624")]
			[Address(RVA = "0xE4D7D8", Offset = "0xE4D7D8", VA = "0xE4D7D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xE4D92C", Offset = "0xE4D92C", VA = "0xE4D92C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xE4D824", Offset = "0xE4D824", VA = "0xE4D824")]
		private void SetupRT(iVector2 resolution)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xE4DA78", Offset = "0xE4DA78", VA = "0xE4DA78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xE4DC34", Offset = "0xE4DC34", VA = "0xE4DC34")]
		public MonoCamera()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class MouseCam : MonoBehaviour
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool mouseControl;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool lockForward;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseMovementScale;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float arrowControlSpeed;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform centerEye;

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xE4DC50", Offset = "0xE4DC50", VA = "0xE4DC50")]
		public MouseCam()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class NameTextureMaker : MonoBehaviour
	{
		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxNameLength;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTexture rt;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI[] textLines;

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xE4E938", Offset = "0xE4E938", VA = "0xE4E938")]
		private void Awake()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xE4E93C", Offset = "0xE4E93C", VA = "0xE4E93C")]
		public void SetName(int index, string nameString)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xE4EA10", Offset = "0xE4EA10", VA = "0xE4EA10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BA75C", Offset = "0x9BA75C")]
		public void RebakeTexture()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xE4EA2C", Offset = "0xE4EA2C", VA = "0xE4EA2C")]
		public void RemoveRenderTexture()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xE4EA4C", Offset = "0xE4EA4C", VA = "0xE4EA4C")]
		public NameTextureMaker()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public static class ObjectCopier
	{
		[Token(Token = "0x600062F")]
		public static T DeepClone<T>(this T source)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000119")]
	public static class OSUtil
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xE53A40", Offset = "0xE53A40", VA = "0xE53A40")]
		public static void Shell(string command)
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class Path
	{
		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B24FC", Offset = "0x9B24FC")]
		private sealed class <EnumFiles>d__26 : IEnumerable<Path>, IEnumerable, IEnumerator<Path>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Path <>2__current;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Path <>4__this;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string filter;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string <>3__filter;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool recurse;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool <>3__recurse;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string[] <>7__wrap1;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap2;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<Path> <>7__wrap3;

			[Token(Token = "0x17000178")]
			private Path System.Collections.Generic.IEnumerator<Coplanar.Path>.Current
			{
				[Token(Token = "0x60014A2")]
				[Address(RVA = "0xE561A4", Offset = "0xE561A4", VA = "0xE561A4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014A4")]
				[Address(RVA = "0xE56210", Offset = "0xE56210", VA = "0xE56210", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600149E")]
			[Address(RVA = "0xE55B78", Offset = "0xE55B78", VA = "0xE55B78")]
			[DebuggerHidden]
			public <EnumFiles>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600149F")]
			[Address(RVA = "0xE55C88", Offset = "0xE55C88", VA = "0xE55C88", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xE55D64", Offset = "0xE55D64", VA = "0xE55D64", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xE55CA4", Offset = "0xE55CA4", VA = "0xE55CA4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xE561AC", Offset = "0xE561AC", VA = "0xE561AC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xE56218", Offset = "0xE56218", VA = "0xE56218", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Path> System.Collections.Generic.IEnumerable<Coplanar.Path>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xE562D8", Offset = "0xE562D8", VA = "0xE562D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B250C", Offset = "0x9B250C")]
		private sealed class <EnumFilesExcludeMeta>d__27 : IEnumerable<Path>, IEnumerable, IEnumerator<Path>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Path <>2__current;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Path <>4__this;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string filter;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string <>3__filter;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool recurse;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool <>3__recurse;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Path> <>7__wrap1;

			[Token(Token = "0x1700017A")]
			private Path System.Collections.Generic.IEnumerator<Coplanar.Path>.Current
			{
				[Token(Token = "0x60014AB")]
				[Address(RVA = "0xE56680", Offset = "0xE56680", VA = "0xE56680", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014AD")]
				[Address(RVA = "0xE566EC", Offset = "0xE566EC", VA = "0xE566EC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xE55C50", Offset = "0xE55C50", VA = "0xE55C50")]
			[DebuggerHidden]
			public <EnumFilesExcludeMeta>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xE562DC", Offset = "0xE562DC", VA = "0xE562DC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xE563B8", Offset = "0xE563B8", VA = "0xE563B8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xE562F8", Offset = "0xE562F8", VA = "0xE562F8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xE56688", Offset = "0xE56688", VA = "0xE56688", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xE566F4", Offset = "0xE566F4", VA = "0xE566F4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Path> System.Collections.Generic.IEnumerable<Coplanar.Path>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xE567B4", Offset = "0xE567B4", VA = "0xE567B4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string path;

		[Token(Token = "0x17000051")]
		public string BelowAssets
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0xE55260", Offset = "0xE55260", VA = "0xE55260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		public string AssetPath
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0xE5528C", Offset = "0xE5528C", VA = "0xE5528C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public string AssetPath_FwdSlash
		{
			[Token(Token = "0x6000637")]
			[Address(RVA = "0xE553E8", Offset = "0xE553E8", VA = "0xE553E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		public string FullPath
		{
			[Token(Token = "0x6000638")]
			[Address(RVA = "0xE55360", Offset = "0xE55360", VA = "0xE55360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		public Path ParentDirectory
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0xE555BC", Offset = "0xE555BC", VA = "0xE555BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		public string Extension
		{
			[Token(Token = "0x6000641")]
			[Address(RVA = "0xE55860", Offset = "0xE55860", VA = "0xE55860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xE54FDC", Offset = "0xE54FDC", VA = "0xE54FDC")]
		public Path(string path)
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xE55108", Offset = "0xE55108", VA = "0xE55108")]
		public string BelowPath(string parentPath)
		{
			return null;
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xE551DC", Offset = "0xE551DC", VA = "0xE551DC")]
		public static string CorrectSeparator(string path)
		{
			return null;
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xE5531C", Offset = "0xE5531C", VA = "0xE5531C")]
		public bool IsAssetPath()
		{
			return default(bool);
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xE55490", Offset = "0xE55490", VA = "0xE55490")]
		public static implicit operator Path(string path)
		{
			return null;
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xE554F0", Offset = "0xE554F0", VA = "0xE554F0")]
		public static explicit operator string(Path path)
		{
			return null;
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xE55508", Offset = "0xE55508", VA = "0xE55508", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xE5550C", Offset = "0xE5550C", VA = "0xE5550C")]
		public static Path operator +(Path path1, string path2)
		{
			return null;
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xE556FC", Offset = "0xE556FC", VA = "0xE556FC")]
		public void EnsureExists(bool self = false)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xE55724", Offset = "0xE55724", VA = "0xE55724")]
		public void SetExtension(string ext)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xE55754", Offset = "0xE55754", VA = "0xE55754")]
		public Path WithExtension(string ext)
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xE558F8", Offset = "0xE558F8", VA = "0xE558F8")]
		public string PathTail(int parts, bool includeExtension = true)
		{
			return null;
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xE55A74", Offset = "0xE55A74", VA = "0xE55A74")]
		public static bool IsBeneath(Path dir, Path fileOrDir)
		{
			return default(bool);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xE55AD8", Offset = "0xE55AD8", VA = "0xE55AD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BA7A4", Offset = "0x9BA7A4")]
		public IEnumerable<Path> EnumFiles(string filter = "*", bool recurse = false)
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xE55BB0", Offset = "0xE55BB0", VA = "0xE55BB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BA808", Offset = "0x9BA808")]
		public IEnumerable<Path> EnumFilesExcludeMeta(string filter = "*", bool recurse = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200011B")]
	internal class PCInputManager : IPlatformInputManager
	{
		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputManager inputManager;

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xE54B14", Offset = "0xE54B14", VA = "0xE54B14", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xE54C98", Offset = "0xE54C98", VA = "0xE54C98", Slot = "18")]
		public void Update()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xE54C9C", Offset = "0xE54C9C", VA = "0xE54C9C", Slot = "5")]
		public bool GetButton(UniversalInputManager.GameButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xE54CCC", Offset = "0xE54CCC", VA = "0xE54CCC", Slot = "8")]
		public string DebugButton(UniversalInputManager.GameButton button)
		{
			return null;
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xE54D14", Offset = "0xE54D14", VA = "0xE54D14", Slot = "7")]
		public bool GetButtonDown(UniversalInputManager.GameButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xE54D44", Offset = "0xE54D44", VA = "0xE54D44", Slot = "6")]
		public bool GetButtonUp(UniversalInputManager.GameButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xE54D74", Offset = "0xE54D74", VA = "0xE54D74", Slot = "9")]
		public Quaternion GetActiveControllerRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xE54DD4", Offset = "0xE54DD4", VA = "0xE54DD4", Slot = "10")]
		public float GetActiveControllerStick()
		{
			return default(float);
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xE54DDC", Offset = "0xE54DDC", VA = "0xE54DDC", Slot = "11")]
		public Transform GetActiveControllerTransform()
		{
			return null;
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xE54E40", Offset = "0xE54E40", VA = "0xE54E40", Slot = "13")]
		private UniversalInputManager.Controller Coplanar.IPlatformInputManager.GetActiveController()
		{
			return default(UniversalInputManager.Controller);
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xE54EA4", Offset = "0xE54EA4", VA = "0xE54EA4", Slot = "15")]
		public float GetAxisValue(UniversalInputManager.Axis1D axis)
		{
			return default(float);
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xE54EAC", Offset = "0xE54EAC", VA = "0xE54EAC", Slot = "12")]
		public Transform GetControllerTransform(XRNode node)
		{
			return null;
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xE54EB4", Offset = "0xE54EB4", VA = "0xE54EB4", Slot = "16")]
		public Vector2 GetAxisValue(UniversalInputManager.Axis2D axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xE54F14", Offset = "0xE54F14", VA = "0xE54F14")]
		public bool GetThrottle()
		{
			return default(bool);
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xE54F1C", Offset = "0xE54F1C", VA = "0xE54F1C", Slot = "17")]
		public Vector3 GetCursorPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xE54F2C", Offset = "0xE54F2C", VA = "0xE54F2C", Slot = "14")]
		public bool ActivatePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xE54FD4", Offset = "0xE54FD4", VA = "0xE54FD4")]
		public PCInputManager()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class PlatformDependentEnable : MonoBehaviour
	{
		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool pc;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool pcVR;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool mobileVR;

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xE567B8", Offset = "0xE567B8", VA = "0xE567B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xE567F0", Offset = "0xE567F0", VA = "0xE567F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xE567F4", Offset = "0xE567F4", VA = "0xE567F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xE567F8", Offset = "0xE567F8", VA = "0xE567F8")]
		public PlatformDependentEnable()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public static class PrimitiveHelper
	{
		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<PrimitiveType, Mesh> primitiveMeshes;

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xE56A3C", Offset = "0xE56A3C", VA = "0xE56A3C")]
		public static GameObject CreatePrimitive(PrimitiveType type, bool withCollider)
		{
			return null;
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xE56B8C", Offset = "0xE56B8C", VA = "0xE56B8C")]
		public static Mesh GetPrimitiveMesh(PrimitiveType type)
		{
			return null;
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xE56C70", Offset = "0xE56C70", VA = "0xE56C70")]
		private static Mesh CreatePrimitiveMesh(PrimitiveType type)
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	public static class RandomUtil
	{
		[Token(Token = "0x600065F")]
		public static T[] GetRandomChoice<T>(T[] src, int n)
		{
			return null;
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xE57068", Offset = "0xE57068", VA = "0xE57068")]
		public static int[] GetRandomChoice(int max, int n)
		{
			return null;
		}

		[Token(Token = "0x6000661")]
		public static T GetRandomChoice<T>(T[] src)
		{
			return (T)null;
		}

		[Token(Token = "0x6000662")]
		public static void Shuffle<T>(IList<T> input)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xE571B4", Offset = "0xE571B4", VA = "0xE571B4")]
		public static Color RandomBrightColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xE57228", Offset = "0xE57228", VA = "0xE57228")]
		public static Color RandomColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xE5728C", Offset = "0xE5728C", VA = "0xE5728C")]
		public static Vector3 GetVector3(Vector3 range, bool centerOnZero)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xE57320", Offset = "0xE57320", VA = "0xE57320")]
		public static int WeightedChoice(float[] weights)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200011F")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0xE573B4", Offset = "0xE573B4", VA = "0xE573B4")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000120")]
	internal class SkyboxGenerator : MonoBehaviour
	{
		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int faceSize;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material emptySkybox;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask cullingMask;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float near;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float far;

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xE5B330", Offset = "0xE5B330", VA = "0xE5B330")]
		public SkyboxGenerator()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public static class VolumetricLineVertexData
	{
		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2[] TexCoords;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2[] VertexOffsets;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int[] Indices;
	}
	[Token(Token = "0x2000122")]
	public class VolumetricLines
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> vertexPositions;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector4> otherPositions;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> vertexOffsets;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2> texCoords;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> indices;

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xD0C680", Offset = "0xD0C680", VA = "0xD0C680")]
		public VolumetricLines()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xD0C78C", Offset = "0xD0C78C", VA = "0xD0C78C")]
		public void AddLine(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xD0CB78", Offset = "0xD0CB78", VA = "0xD0CB78")]
		public Mesh BuildMesh()
		{
			return null;
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xD0CBE4", Offset = "0xD0CBE4", VA = "0xD0CBE4")]
		public void SetupMesh(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class VolumetricStrips
	{
		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector4> nextPositions;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> prevPositions;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> vertexOffsets;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2> texCoords;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> indices;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> vertexPositions;

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xD0CD10", Offset = "0xD0CD10", VA = "0xD0CD10")]
		public VolumetricStrips()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xD0CE3C", Offset = "0xD0CE3C", VA = "0xD0CE3C")]
		public void AddLineSequence(Vector3[] newPoints)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xD0DBAC", Offset = "0xD0DBAC", VA = "0xD0DBAC")]
		public Mesh BuildMesh()
		{
			return null;
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xD0DC18", Offset = "0xD0DC18", VA = "0xD0DC18")]
		public void SetupMesh(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000124")]
	public static class RenderUtil
	{
		[Token(Token = "0x2000366")]
		public enum PostRenderSpaceMap
		{
			[Token(Token = "0x4000E5E")]
			PassThrough,
			[Token(Token = "0x4000E5F")]
			ToLinear,
			[Token(Token = "0x4000E60")]
			ToHDRLinear
		}

		[Token(Token = "0x2000367")]
		public class RTWrapper : IDisposable
		{
			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTextureManager manager;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RenderTexture renderTexture;

			[Token(Token = "0x1700017C")]
			public float Width
			{
				[Token(Token = "0x60014B0")]
				[Address(RVA = "0xE593B4", Offset = "0xE593B4", VA = "0xE593B4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700017D")]
			public float Height
			{
				[Token(Token = "0x60014B1")]
				[Address(RVA = "0xE593E0", Offset = "0xE593E0", VA = "0xE593E0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xE58590", Offset = "0xE58590", VA = "0xE58590")]
			public void BlitToSelf(Material mat, bool clear = false)
			{
			}

			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xE5953C", Offset = "0xE5953C", VA = "0xE5953C")]
			public void sRGBToLinear()
			{
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xE595B0", Offset = "0xE595B0", VA = "0xE595B0")]
			public void LinearTosRGB()
			{
			}

			[Token(Token = "0x60014B5")]
			[Address(RVA = "0xE58528", Offset = "0xE58528", VA = "0xE58528")]
			public void Clear()
			{
			}

			[Token(Token = "0x60014B6")]
			[Address(RVA = "0xE59624", Offset = "0xE59624", VA = "0xE59624")]
			public static implicit operator RenderTexture(RTWrapper rtw)
			{
				return null;
			}

			[Token(Token = "0x60014B7")]
			[Address(RVA = "0xE5963C", Offset = "0xE5963C", VA = "0xE5963C")]
			public static implicit operator bool(RTWrapper rtw)
			{
				return default(bool);
			}

			[Token(Token = "0x60014B8")]
			[Address(RVA = "0xE5884C", Offset = "0xE5884C", VA = "0xE5884C", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60014B9")]
			[Address(RVA = "0xE597A8", Offset = "0xE597A8", VA = "0xE597A8")]
			public RTWrapper()
			{
			}
		}

		[Token(Token = "0x2000368")]
		public class RenderTextureManager : IDisposable
		{
			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int width;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int height;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int depthBuffer;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public RenderTextureFormat format;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RenderTextureReadWrite readWriteMode;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RenderTexture spare;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<RTWrapper> texturesInUse;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Stack<RTWrapper> available;

			[Token(Token = "0x60014BA")]
			[Address(RVA = "0xE5838C", Offset = "0xE5838C", VA = "0xE5838C")]
			public RenderTextureManager(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBFloat, RenderTextureReadWrite readWriteMode = RenderTextureReadWrite.Default)
			{
			}

			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xE58460", Offset = "0xE58460", VA = "0xE58460")]
			public RTWrapper GetNewTexture()
			{
				return null;
			}

			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xE596C0", Offset = "0xE596C0", VA = "0xE596C0")]
			public void Free(RTWrapper rtw)
			{
			}

			[Token(Token = "0x60014BD")]
			[Address(RVA = "0xE597B0", Offset = "0xE597B0", VA = "0xE597B0")]
			private RenderTexture Allocate()
			{
				return null;
			}

			[Token(Token = "0x60014BE")]
			[Address(RVA = "0xE5940C", Offset = "0xE5940C", VA = "0xE5940C")]
			public void BlitToSelf(RTWrapper rtw, Material mat, bool clear)
			{
			}

			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xE585BC", Offset = "0xE585BC", VA = "0xE585BC", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xE59840", Offset = "0xE59840", VA = "0xE59840")]
			public void FreeAll()
			{
			}
		}

		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B251C", Offset = "0x9B251C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float toCentre;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int aaGridSize;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Matrix4x4 projectionMatrix;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float m02;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float pixelStepX;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m12;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pixelStepY;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public RTWrapper rt;

			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xE58384", Offset = "0xE58384", VA = "0xE58384")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xE591C4", Offset = "0xE591C4", VA = "0xE591C4")]
			internal Vector2 <Render>b__0(int x, int y)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xE592A0", Offset = "0xE592A0", VA = "0xE592A0")]
			internal void <Render>b__1(Vector2 pixelOffset)
			{
			}
		}

		[Token(Token = "0x40005BD")]
		public const int RENDER_TO_TEXTURE_LAYER = 31;

		[Token(Token = "0x40005BE")]
		private const string addShaderName = "ImageTools/Add_49Tap";

		[Token(Token = "0x40005BF")]
		private const int shaderTapEdgeLength = 7;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material addTapsMat;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material addMat;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material divideMat;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material toLinearHackHDR;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Material toLinear;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Material tosRGB;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static bool initted;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static GameObject camObj;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Camera cam;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int allocatedTempRTs;

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xE573BC", Offset = "0xE573BC", VA = "0xE573BC")]
		public static void RenderToTexture(this Camera cam, RenderTexture tex)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xE57420", Offset = "0xE57420", VA = "0xE57420")]
		public static void Init()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xE576DC", Offset = "0xE576DC", VA = "0xE576DC")]
		public static void AssignCamera()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xE5778C", Offset = "0xE5778C", VA = "0xE5778C")]
		public static void FreeCamera()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xE57830", Offset = "0xE57830", VA = "0xE57830")]
		public static RTWrapper RenderRTTLayer(Matrix4x4 projectionMatrix, int textureWidth, int textureHeight, [Optional] Vector3? camPos, [Optional] Quaternion? camRot, int aaGridSize = 1, int singleAASample = -1, float cubicFilter_B = 0.33333f, float cubicFilter_C = 0.333333f, RenderTextureFormat rtFormat = RenderTextureFormat.ARGBFloat, PostRenderSpaceMap postRenderSpaceMap = PostRenderSpaceMap.PassThrough, [Optional] RenderTextureManager rtManager)
		{
			return null;
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xE5797C", Offset = "0xE5797C", VA = "0xE5797C")]
		public static RTWrapper Render(Matrix4x4 projectionMatrix, int textureWidth, int textureHeight, [Optional] Vector3? camPos, [Optional] Quaternion? camRot, int layerMask = -1, int aaGridSize = 1, int singleAASample = -1, float cubicFilter_B = 0.33333f, float cubicFilter_C = 0.333333f, RenderTextureFormat rtFormat = RenderTextureFormat.ARGBFloat, PostRenderSpaceMap postRenderSpaceMap = PostRenderSpaceMap.PassThrough, [Optional] RenderTextureManager rtManager)
		{
			return null;
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xE5886C", Offset = "0xE5886C", VA = "0xE5886C")]
		public static void Add(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xE58918", Offset = "0xE58918", VA = "0xE58918")]
		public static void Divide(RenderTexture src, RenderTexture dst, float denominator)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xE589F8", Offset = "0xE589F8", VA = "0xE589F8")]
		public static Matrix4x4 PerspectiveZoomedIn(float fovY, float aspectRatio, float near, float far, Rect zoomRect)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xE58B54", Offset = "0xE58B54", VA = "0xE58B54")]
		public static Matrix4x4 PerspectiveOffCenter(float left, float right, float bottom, float top, float near, float far)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xE58D68", Offset = "0xE58D68", VA = "0xE58D68")]
		public static Texture2D RTToTexture2D(RenderTexture rt, bool mipmap = false)
		{
			return null;
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xE58F00", Offset = "0xE58F00", VA = "0xE58F00")]
		public static void RTToTexture2D(RenderTexture rt, Texture2D outImage)
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xE58FFC", Offset = "0xE58FFC", VA = "0xE58FFC")]
		public static void ClearRT(RenderTexture rt)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xE59098", Offset = "0xE59098", VA = "0xE59098")]
		public static RenderTexture GetTempRT(int width, int height, int depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite)
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xE59144", Offset = "0xE59144", VA = "0xE59144")]
		public static void FreeTempRT(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class RumbleController : SingletonMono<RumbleController>
	{
		[Serializable]
		[Token(Token = "0x200036A")]
		public struct Rumble
		{
			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float freq;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float amp;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float duration;
		}

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float rumbleStopTime;

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xE59A88", Offset = "0xE59A88", VA = "0xE59A88")]
		public void DoRumble(Rumble rumble)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xE59C64", Offset = "0xE59C64", VA = "0xE59C64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xE59D04", Offset = "0xE59D04", VA = "0xE59D04")]
		public RumbleController()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[ExecuteInEditMode]
	public class SimpleColorCorrect : SingletonMono<SimpleColorCorrect>
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xE59D84", Offset = "0xE59D84", VA = "0xE59D84")]
		public SimpleColorCorrect()
		{
		}
	}
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1D24", Offset = "0x9B1D24")]
	public class SimpleColorCorrectState : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200036B")]
		public struct ColorAdjust
		{
			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 rgb;
		}

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool globallyEnabled;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string suffix;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorAdjust r;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ColorAdjust g;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ColorAdjust b;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ColorAdjust c;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ColorAdjust h;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _SCC_R_plus_suffix;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _SCC_G_plus_suffix;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _SCC_B_plus_suffix;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _SCC_C_plus_suffix;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _SCC_H_plus_suffix;

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xE59DF4", Offset = "0xE59DF4", VA = "0xE59DF4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xE59EC0", Offset = "0xE59EC0", VA = "0xE59EC0")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xE5A018", Offset = "0xE5A018", VA = "0xE5A018")]
		public void Apply(SimpleColorCorrectState other, float blendFactor)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xE5A244", Offset = "0xE5A244", VA = "0xE5A244")]
		public void ResetSchemeToNeutral()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xE5A3F0", Offset = "0xE5A3F0", VA = "0xE5A3F0")]
		public void Set(SimpleColorCorrectState other)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xE5A458", Offset = "0xE5A458", VA = "0xE5A458")]
		public SimpleColorCorrectState()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class Flasher : MonoBehaviour
	{
		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B252C", Offset = "0x9B252C")]
		private sealed class <Flash_CR>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Flasher <>4__this;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <t>5__2;

			[Token(Token = "0x1700017E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014C7")]
				[Address(RVA = "0xC716E8", Offset = "0xC716E8", VA = "0xC716E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014C9")]
				[Address(RVA = "0xC71754", Offset = "0xC71754", VA = "0xC71754", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xC71548", Offset = "0xC71548", VA = "0xC71548")]
			[DebuggerHidden]
			public <Flash_CR>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xC71584", Offset = "0xC71584", VA = "0xC71584", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xC71588", Offset = "0xC71588", VA = "0xC71588", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xC716F0", Offset = "0xC716F0", VA = "0xC716F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float period;

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC714A8", Offset = "0xC714A8", VA = "0xC714A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xC714D4", Offset = "0xC714D4", VA = "0xC714D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BA87C", Offset = "0x9BA87C")]
		private IEnumerator Flash_CR()
		{
			return null;
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xC71574", Offset = "0xC71574", VA = "0xC71574")]
		public Flasher()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class Singleton<T> where T : new()
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object Lock;

		[Token(Token = "0x17000057")]
		public static T Instance
		{
			[Token(Token = "0x6000691")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000690")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public static T I
		{
			[Token(Token = "0x6000693")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000692")]
			set
			{
			}
		}

		[Token(Token = "0x6000694")]
		public Singleton()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public abstract class SingletonMono<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool flagsSet;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool allowCreate;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object Lock;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsInitializedForTesting;

		[Token(Token = "0x17000059")]
		public static T Instance
		{
			[Token(Token = "0x6000697")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000696")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public static T I
		{
			[Token(Token = "0x6000699")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000698")]
			set
			{
			}
		}

		[Token(Token = "0x600069A")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600069B")]
		protected virtual void OnSingletonDestroy()
		{
		}

		[Token(Token = "0x600069C")]
		protected SingletonMono()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class SingletonNoCreateAttribute : Attribute
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xE5B328", Offset = "0xE5B328", VA = "0xE5B328")]
		public SingletonNoCreateAttribute()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class SkyboxMover : MonoBehaviour
	{
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xE5B380", Offset = "0xE5B380", VA = "0xE5B380")]
		private void Update()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xE5B430", Offset = "0xE5B430", VA = "0xE5B430")]
		public SkyboxMover()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012D")]
	public class SpriteAtlas
	{
		[Serializable]
		[Token(Token = "0x200036D")]
		public class SpriteCoords
		{
			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public iVector2 origin;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public iVector2 size;

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xD04204", Offset = "0xD04204", VA = "0xD04204")]
			public SpriteCoords()
			{
			}
		}

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Texture2D texture;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private iVector2 texSize;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int rowDepth;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int rowUsed;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int currentRowY;

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xD03E5C", Offset = "0xD03E5C", VA = "0xD03E5C")]
		public void EraseAndAllocate(iVector2 size)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xD03EF8", Offset = "0xD03EF8", VA = "0xD03EF8")]
		public SpriteCoords AddSprite(RenderTexture rt, [Optional] Func<Color, Vector2, Color> colorFilter)
		{
			return null;
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xD03F74", Offset = "0xD03F74", VA = "0xD03F74")]
		public SpriteCoords AddSprite(RenderTexture rt, iVector2 origin, iVector2 size, [Optional] Func<Color, Vector2, Color> colorFilter)
		{
			return null;
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xD0420C", Offset = "0xD0420C", VA = "0xD0420C")]
		public Matrix4x4 GetUnitSpaceToUVsMatrix(SpriteCoords coords)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xD04340", Offset = "0xD04340", VA = "0xD04340")]
		public Texture2D GetTex()
		{
			return null;
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xD04348", Offset = "0xD04348", VA = "0xD04348")]
		public SpriteAtlas()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public static class StringExtensions
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xD04350", Offset = "0xD04350", VA = "0xD04350")]
		public static string WithEnding(this string str, string ending)
		{
			return null;
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xD043F0", Offset = "0xD043F0", VA = "0xD043F0")]
		public static string Right(this string value, int length)
		{
			return null;
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xD04518", Offset = "0xD04518", VA = "0xD04518")]
		public static string StripPrefix(this string text, string prefix)
		{
			return null;
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xD0457C", Offset = "0xD0457C", VA = "0xD0457C")]
		public static string StripSuffix(this string text, string suffix)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public class TextureScaleTuner : MonoBehaviour
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader replacementShader;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool shadersOn;

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xD04A38", Offset = "0xD04A38", VA = "0xD04A38")]
		private void Update()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xD04A3C", Offset = "0xD04A3C", VA = "0xD04A3C")]
		private void SetShaderTestValue(float testValue)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xD04A98", Offset = "0xD04A98", VA = "0xD04A98")]
		private void SetShadersOn(bool on)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xD04B08", Offset = "0xD04B08", VA = "0xD04B08")]
		public TextureScaleTuner()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class BufferedTexture
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D texture;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color[] pixels;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int width;

		[Token(Token = "0x1700005B")]
		public float Width
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0xC67C94", Offset = "0xC67C94", VA = "0xC67C94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005C")]
		public float Height
		{
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0xC67CC0", Offset = "0xC67CC0", VA = "0xC67CC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xC67CEC", Offset = "0xC67CEC", VA = "0xC67CEC")]
		public BufferedTexture(int width, int height)
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xC67D8C", Offset = "0xC67D8C", VA = "0xC67D8C")]
		public void SetPixel(int x, int y, Color c)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xC67DE0", Offset = "0xC67DE0", VA = "0xC67DE0")]
		public void Apply()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class TimedMessageHud : MonoBehaviour
	{
		[Token(Token = "0x200036E")]
		private class Message
		{
			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string text;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float time;

			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xD04C88", Offset = "0xD04C88", VA = "0xD04C88")]
			public Message()
			{
			}
		}

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxMessageCount;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI uiText;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float messageTimeout;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string permanentMessage;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<Message> messages;

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xD04B10", Offset = "0xD04B10", VA = "0xD04B10")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9BA920", Offset = "0x9BA920")]
		public void AddFoo()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xD04C38", Offset = "0xD04C38", VA = "0xD04C38")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9BA930", Offset = "0x9BA930")]
		public void AddBar()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xD04B60", Offset = "0xD04B60", VA = "0xD04B60")]
		public void AddMessage(string message)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xD04E30", Offset = "0xD04E30", VA = "0xD04E30")]
		public void Update()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xD04C90", Offset = "0xD04C90", VA = "0xD04C90")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xD04EEC", Offset = "0xD04EEC", VA = "0xD04EEC")]
		public TimedMessageHud()
		{
		}
	}
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1D70", Offset = "0x9B1D70")]
	internal class TMP_UGUI_Translator : MonoBehaviour
	{
		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public new string tag;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpugui;

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xD045EC", Offset = "0xD045EC", VA = "0xD045EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xD047F0", Offset = "0xD047F0", VA = "0xD047F0")]
		public TMP_UGUI_Translator()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class TranslationManager
	{
		[Token(Token = "0x200036F")]
		public class SubTag
		{
			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tag;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tagWithAttributes;

			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xD08930", Offset = "0xD08930", VA = "0xD08930")]
			public SubTag(string tag, int quantity)
			{
			}
		}

		[Token(Token = "0x2000370")]
		private class Language
		{
			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, string> tagToText;

			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xD07400", Offset = "0xD07400", VA = "0xD07400")]
			public Language()
			{
			}
		}

		[Token(Token = "0x2000371")]
		private class HeaderIndices
		{
			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int catHeader;

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int tagHeader;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, int> langHeaders;

			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xD0849C", Offset = "0xD0849C", VA = "0xD0849C")]
			public HeaderIndices()
			{
			}
		}

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B253C", Offset = "0x9B253C")]
		private sealed class <EnumLanguages>d__11 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TranslationManager <>4__this;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SortedDictionary<string, Language>.KeyCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x17000180")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x60014D3")]
				[Address(RVA = "0xD08808", Offset = "0xD08808", VA = "0xD08808", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000181")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D5")]
				[Address(RVA = "0xD08874", Offset = "0xD08874", VA = "0xD08874", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xD07AD4", Offset = "0xD07AD4", VA = "0xD07AD4")]
			[DebuggerHidden]
			public <EnumLanguages>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xD08600", Offset = "0xD08600", VA = "0xD08600", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xD08674", Offset = "0xD08674", VA = "0xD08674", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xD0861C", Offset = "0xD0861C", VA = "0xD0861C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xD08810", Offset = "0xD08810", VA = "0xD08810", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xD0887C", Offset = "0xD0887C", VA = "0xD0887C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xD0892C", Offset = "0xD0892C", VA = "0xD0892C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B254C", Offset = "0x9B254C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, bool> <>9__19_0;

			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xD08578", Offset = "0xD08578", VA = "0xD08578")]
			public <>c()
			{
			}

			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xD08580", Offset = "0xD08580", VA = "0xD08580")]
			internal bool <Translate>b__19_0(object o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] enabledLanguages;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TranslationManager _instance;

		[Token(Token = "0x40005F3")]
		private const string formatRegex = "\\{(\\w+)\\}";

		[Token(Token = "0x40005F4")]
		private const string DEFAULT_LANGUAGE = "english";

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<string, Language> languages;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string currentLanguage;

		[Token(Token = "0x1700005D")]
		public static TranslationManager I
		{
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0xD04734", Offset = "0xD04734", VA = "0xD04734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		public string CurrentLanguage
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0xD08494", Offset = "0xD08494", VA = "0xD08494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xD068A0", Offset = "0xD068A0", VA = "0xD068A0")]
		public string TranslateToLanguage(string tagMixedCase, string language, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xD047B0", Offset = "0xD047B0", VA = "0xD047B0")]
		public string Translate(string tagMixedCase, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xD06B3C", Offset = "0xD06B3C", VA = "0xD06B3C")]
		public void SetEnabledLanguages(string[] enabledLanguages)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xD06B44", Offset = "0xD06B44", VA = "0xD06B44")]
		public void ParseCSVText(string src)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xD072BC", Offset = "0xD072BC", VA = "0xD072BC")]
		public void AddTranslation(string tagMixedCase, string lang, string text)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xD07470", Offset = "0xD07470", VA = "0xD07470")]
		public void SetCurrentLanguage(string langChoice)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xD07554", Offset = "0xD07554", VA = "0xD07554")]
		public void DumpCharacters()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xD07A14", Offset = "0xD07A14", VA = "0xD07A14")]
		public void ParseTextAsset(TextAsset srcAsset)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xD07A50", Offset = "0xD07A50", VA = "0xD07A50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BA940", Offset = "0x9BA940")]
		public IEnumerable<string> EnumLanguages()
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xD07B0C", Offset = "0xD07B0C", VA = "0xD07B0C")]
		public bool IsValidTag(string tagMixedCase)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xD06980", Offset = "0xD06980", VA = "0xD06980")]
		private Language GetCurrentLanguage()
		{
			return null;
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xD07BB8", Offset = "0xD07BB8", VA = "0xD07BB8")]
		private string TranslateSubTag(Language lang, string subTag, string parentTag)
		{
			return null;
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xD07CE4", Offset = "0xD07CE4", VA = "0xD07CE4")]
		private bool Translate(Language lang, string tagLowerCase, object[] args, out string translation)
		{
			return default(bool);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xD069DC", Offset = "0xD069DC", VA = "0xD069DC")]
		private string Translate_Internal(string tagMixedCase, Language lang, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xD0722C", Offset = "0xD0722C", VA = "0xD0722C")]
		private string GetField(string[] fields, int index)
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xD06F90", Offset = "0xD06F90", VA = "0xD06F90")]
		private HeaderIndices ParseHeaders(string[] headers)
		{
			return null;
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xD06ABC", Offset = "0xD06ABC", VA = "0xD06ABC")]
		public TranslationManager()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public static class TranslationUtil
	{
		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<TextMeshProUGUI, string> originalTags;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, TMP_FontAsset> fontOverrides;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static TMP_FontAsset forceFont;

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xD089C8", Offset = "0xD089C8", VA = "0xD089C8")]
		public static void Init()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xD08A84", Offset = "0xD08A84", VA = "0xD08A84")]
		private static void TranslateUGUI(TextMeshProUGUI uiText, bool applyHighlights)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xD08E98", Offset = "0xD08E98", VA = "0xD08E98")]
		public static void ForgetUGUITag(TextMeshProUGUI ugui)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xD08F1C", Offset = "0xD08F1C", VA = "0xD08F1C")]
		public static void TranslateUI(bool applyHighlights = false)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xD09134", Offset = "0xD09134", VA = "0xD09134")]
		public static void TranslateUI(Transform root)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xD08D68", Offset = "0xD08D68", VA = "0xD08D68")]
		public static string ApplyHighlights(string src)
		{
			return null;
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xD09034", Offset = "0xD09034", VA = "0xD09034")]
		private static void RefreshForceFont()
		{
		}
	}
	[Token(Token = "0x2000135")]
	[SingletonNoCreate]
	public class UniversalCameraRig : SingletonMono<UniversalCameraRig>
	{
		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B255C", Offset = "0x9B255C")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SimpleColorCorrectState colorCorrect;

			[Token(Token = "0x60014DB")]
			[Address(RVA = "0xD0A254", Offset = "0xD0A254", VA = "0xD0A254")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xD0A588", Offset = "0xD0A588", VA = "0xD0A588")]
			internal void <StartColorBlendSeq>b__0(float blend)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B256C", Offset = "0x9B256C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__45_1;

			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xD0A504", Offset = "0xD0A504", VA = "0xD0A504")]
			public <>c()
			{
			}

			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xD0A50C", Offset = "0xD0A50C", VA = "0xD0A50C")]
			internal void <StartColorBlendSeq>b__45_1()
			{
			}
		}

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cameraRigParent;

		[NonSerialized]
		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera[] mainCams;

		[NonSerialized]
		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera monoCam;

		[NonSerialized]
		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform viewTransform;

		[NonSerialized]
		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BaseRaycaster physicsRaycaster;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject skybox;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool allowMono;

		[NonSerialized]
		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform fadeQuad;

		[NonSerialized]
		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshRenderer fadeQuadRenderer;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DisplayMono displayMono;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float defaultFov;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UniversalCameraSettings currentSettings;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material cameraSkybox;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material levelSkybox;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SimpleColorCorrectState blendCC;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SimpleColorCorrectState overrideCC;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float blendFactor;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool camDisabled;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] distances;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine colorBlendCoroutine;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<string, SimpleColorCorrectState> extraColorCorrects;

		[Token(Token = "0x1700005F")]
		public Camera FirstMainCam
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0xD09234", Offset = "0xD09234", VA = "0xD09234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		public bool Positional
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0xD094E4", Offset = "0xD094E4", VA = "0xD094E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public Vector3 Pos
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xD094F0", Offset = "0xD094F0", VA = "0xD094F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xD09270", Offset = "0xD09270", VA = "0xD09270")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xD0935C", Offset = "0xD0935C", VA = "0xD0935C")]
		public void Mount(Transform camMountPoint)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xD0951C", Offset = "0xD0951C", VA = "0xD0951C")]
		public void ApplySettings(UniversalCameraSettings settings)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xD09924", Offset = "0xD09924", VA = "0xD09924")]
		public void SetClearColor(Color color)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xD0991C", Offset = "0xD0991C", VA = "0xD0991C")]
		public void SetCameraSkybox(Material skybox)
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xD09B14", Offset = "0xD09B14", VA = "0xD09B14")]
		public void SetLevelSkybox(Material skybox)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xD09B1C", Offset = "0xD09B1C", VA = "0xD09B1C")]
		public Material GetLevelSkybox()
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xD099CC", Offset = "0xD099CC", VA = "0xD099CC")]
		private void UpdateSkybox()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xD09B24", Offset = "0xD09B24", VA = "0xD09B24")]
		public void RemoveLayer(int layer)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xD09BC4", Offset = "0xD09BC4", VA = "0xD09BC4")]
		public void AddLayer(int layer)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xD09C60", Offset = "0xD09C60", VA = "0xD09C60")]
		public Camera GetBackgroundCam()
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xD09CE8", Offset = "0xD09CE8", VA = "0xD09CE8")]
		public void ApplyVignette(VignetteMode vm)
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xD09CEC", Offset = "0xD09CEC", VA = "0xD09CEC")]
		public void SetMonoMode(bool monoMode)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xD09D00", Offset = "0xD09D00", VA = "0xD09D00")]
		public void EnablePhysicsRaycaster(bool enabled)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xD09D20", Offset = "0xD09D20", VA = "0xD09D20")]
		public void SetBlendColorCorrect(SimpleColorCorrectState colorCorrectState, float factor = 0f)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xD09D2C", Offset = "0xD09D2C", VA = "0xD09D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xD09DD8", Offset = "0xD09DD8", VA = "0xD09DD8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xD09FF8", Offset = "0xD09FF8", VA = "0xD09FF8")]
		private void ApplyBlended(SimpleColorCorrectState baseCC)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xD098BC", Offset = "0xD098BC", VA = "0xD098BC")]
		private void SetCullDistances(Camera cam)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xD0A0B4", Offset = "0xD0A0B4", VA = "0xD0A0B4")]
		public void StartColorBlendSeq(AnimationCurve curve, float duration, SimpleColorCorrectState colorCorrect)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xD0A25C", Offset = "0xD0A25C", VA = "0xD0A25C")]
		public void SetZoom(float zoom)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xD0A29C", Offset = "0xD0A29C", VA = "0xD0A29C")]
		public void SetFov(float fov)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xD0A2CC", Offset = "0xD0A2CC", VA = "0xD0A2CC")]
		public void SetColorCorrectOverride(SimpleColorCorrectState levelColorCorrectOverride)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xD0A2D4", Offset = "0xD0A2D4", VA = "0xD0A2D4")]
		public void RegisterExtraColorCorrect(SimpleColorCorrectState colorCorrection)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xD0A380", Offset = "0xD0A380", VA = "0xD0A380")]
		public void RemoveExtraColorCorrect(SimpleColorCorrectState colorCorrection)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xD0A3F0", Offset = "0xD0A3F0", VA = "0xD0A3F0")]
		public UniversalCameraRig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000136")]
	public class VignetteMode
	{
		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float start;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float blend;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ymultiplier;

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xD0C2D4", Offset = "0xD0C2D4", VA = "0xD0C2D4")]
		public VignetteMode()
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B1DE4", Offset = "0x9B1DE4")]
	public class UniversalCameraSettings : ScriptableObject
	{
		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask stereoLayerMask;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask monoLayerMask;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material skybox;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B4810", Offset = "0x9B4810")]
		public float stereoNear;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stereoFar;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float monoNear;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float monoFar;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SimpleColorCorrectState colorCorrect;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float transparentFXDrawDistance;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool allowCCOverride;

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xD0A618", Offset = "0xD0A618", VA = "0xD0A618")]
		public UniversalCameraSettings()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public interface IPlatformInputManager
	{
		[Token(Token = "0x60006F6")]
		void Init();

		[Token(Token = "0x60006F7")]
		bool GetButton(UniversalInputManager.GameButton button);

		[Token(Token = "0x60006F8")]
		bool GetButtonUp(UniversalInputManager.GameButton button);

		[Token(Token = "0x60006F9")]
		bool GetButtonDown(UniversalInputManager.GameButton button);

		[Token(Token = "0x60006FA")]
		string DebugButton(UniversalInputManager.GameButton button);

		[Token(Token = "0x60006FB")]
		Quaternion GetActiveControllerRotation();

		[Token(Token = "0x60006FC")]
		float GetActiveControllerStick();

		[Token(Token = "0x60006FD")]
		Transform GetActiveControllerTransform();

		[Token(Token = "0x60006FE")]
		Transform GetControllerTransform(XRNode node);

		[Token(Token = "0x60006FF")]
		UniversalInputManager.Controller GetActiveController();

		[Token(Token = "0x6000700")]
		bool ActivatePressed();

		[Token(Token = "0x6000701")]
		float GetAxisValue(UniversalInputManager.Axis1D axis);

		[Token(Token = "0x6000702")]
		Vector2 GetAxisValue(UniversalInputManager.Axis2D axis);

		[Token(Token = "0x6000703")]
		Vector3 GetCursorPos();

		[Token(Token = "0x6000704")]
		void Update();
	}
	[Token(Token = "0x2000139")]
	public class VRPointerEventData : PointerEventData
	{
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Ray worldSpaceRay;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Vector2 swipeStart;

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xD0B550", Offset = "0xD0B550", VA = "0xD0B550")]
		public VRPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xD0B558", Offset = "0xD0B558", VA = "0xD0B558", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200013A")]
	public static class PointerEventDataExtension
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE56800", Offset = "0xE56800", VA = "0xE56800")]
		public static bool IsVRPointer(this PointerEventData pointerEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xE56880", Offset = "0xE56880", VA = "0xE56880")]
		public static Ray GetRay(this PointerEventData pointerEventData)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xE5691C", Offset = "0xE5691C", VA = "0xE5691C")]
		public static Vector2 GetSwipeStart(this PointerEventData pointerEventData)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xE569A4", Offset = "0xE569A4", VA = "0xE569A4")]
		public static void SetSwipeStart(this PointerEventData pointerEventData, Vector2 start)
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class UniversalInputManager : SingletonMono<UniversalInputManager>
	{
		[Token(Token = "0x2000376")]
		public enum Controller
		{
			[Token(Token = "0x4000E90")]
			None,
			[Token(Token = "0x4000E91")]
			Left,
			[Token(Token = "0x4000E92")]
			Right
		}

		[Serializable]
		[Token(Token = "0x2000377")]
		public enum GameButton
		{
			[Token(Token = "0x4000E94")]
			PrimaryAction,
			[Token(Token = "0x4000E95")]
			SecondaryAction,
			[Token(Token = "0x4000E96")]
			Pause,
			[Token(Token = "0x4000E97")]
			Grab
		}

		[Token(Token = "0x2000378")]
		public enum Button
		{
			[Token(Token = "0x4000E99")]
			None = 0,
			[Token(Token = "0x4000E9A")]
			One = 1,
			[Token(Token = "0x4000E9B")]
			Two = 2,
			[Token(Token = "0x4000E9C")]
			Three = 4,
			[Token(Token = "0x4000E9D")]
			Four = 8,
			[Token(Token = "0x4000E9E")]
			Start = 256,
			[Token(Token = "0x4000E9F")]
			Back = 512,
			[Token(Token = "0x4000EA0")]
			PrimaryShoulder = 4096,
			[Token(Token = "0x4000EA1")]
			PrimaryIndexTrigger = 8192,
			[Token(Token = "0x4000EA2")]
			PrimaryHandTrigger = 16384,
			[Token(Token = "0x4000EA3")]
			PrimaryThumbstick = 32768,
			[Token(Token = "0x4000EA4")]
			PrimaryThumbstickUp = 65536,
			[Token(Token = "0x4000EA5")]
			PrimaryThumbstickDown = 131072,
			[Token(Token = "0x4000EA6")]
			PrimaryThumbstickLeft = 262144,
			[Token(Token = "0x4000EA7")]
			PrimaryThumbstickRight = 524288,
			[Token(Token = "0x4000EA8")]
			PrimaryTouchpad = 1024,
			[Token(Token = "0x4000EA9")]
			SecondaryShoulder = 1048576,
			[Token(Token = "0x4000EAA")]
			SecondaryIndexTrigger = 2097152,
			[Token(Token = "0x4000EAB")]
			SecondaryHandTrigger = 4194304,
			[Token(Token = "0x4000EAC")]
			SecondaryThumbstick = 8388608,
			[Token(Token = "0x4000EAD")]
			SecondaryThumbstickUp = 16777216,
			[Token(Token = "0x4000EAE")]
			SecondaryThumbstickDown = 33554432,
			[Token(Token = "0x4000EAF")]
			SecondaryThumbstickLeft = 67108864,
			[Token(Token = "0x4000EB0")]
			SecondaryThumbstickRight = 134217728,
			[Token(Token = "0x4000EB1")]
			SecondaryTouchpad = 2048,
			[Token(Token = "0x4000EB2")]
			DpadUp = 16,
			[Token(Token = "0x4000EB3")]
			DpadDown = 32,
			[Token(Token = "0x4000EB4")]
			DpadLeft = 64,
			[Token(Token = "0x4000EB5")]
			DpadRight = 128,
			[Token(Token = "0x4000EB6")]
			Up = 268435456,
			[Token(Token = "0x4000EB7")]
			Down = 536870912,
			[Token(Token = "0x4000EB8")]
			Left = 1073741824,
			[Token(Token = "0x4000EB9")]
			Right = int.MinValue,
			[Token(Token = "0x4000EBA")]
			Any = -1
		}

		[Token(Token = "0x2000379")]
		public enum Axis1D
		{
			[Token(Token = "0x4000EBC")]
			None = 0,
			[Token(Token = "0x4000EBD")]
			PrimaryIndexTrigger = 1,
			[Token(Token = "0x4000EBE")]
			PrimaryHandTrigger = 4,
			[Token(Token = "0x4000EBF")]
			SecondaryIndexTrigger = 2,
			[Token(Token = "0x4000EC0")]
			SecondaryHandTrigger = 8,
			[Token(Token = "0x4000EC1")]
			Any = -1
		}

		[Token(Token = "0x200037A")]
		public enum Axis2D
		{
			[Token(Token = "0x4000EC3")]
			None = 0,
			[Token(Token = "0x4000EC4")]
			PrimaryThumbstick = 1,
			[Token(Token = "0x4000EC5")]
			PrimaryTouchpad = 4,
			[Token(Token = "0x4000EC6")]
			SecondaryThumbstick = 2,
			[Token(Token = "0x4000EC7")]
			SecondaryTouchpad = 8,
			[Token(Token = "0x4000EC8")]
			Any = -1
		}

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPlatformInputManager pim;

		[Token(Token = "0x4000621")]
		private const int numButtons = 4;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] buttonConsumed;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] lastButtonDownTime;

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xD0A620", Offset = "0xD0A620", VA = "0xD0A620")]
		private void Awake()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xD0A71C", Offset = "0xD0A71C", VA = "0xD0A71C")]
		public void Update()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xD0A814", Offset = "0xD0A814", VA = "0xD0A814")]
		public bool GetButton(GameButton button, [Optional] IContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xD0A940", Offset = "0xD0A940", VA = "0xD0A940")]
		public string DebugButton(GameButton button)
		{
			return null;
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xD0AA08", Offset = "0xD0AA08", VA = "0xD0AA08")]
		public float TimeSinceLastDown(GameButton button)
		{
			return default(float);
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xD0AA68", Offset = "0xD0AA68", VA = "0xD0AA68")]
		public bool GetButtonDown(GameButton button, [Optional] IContext context, float debounceTime = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xD0AC0C", Offset = "0xD0AC0C", VA = "0xD0AC0C")]
		public bool GetButtonUp(GameButton button, [Optional] IContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xD0AD68", Offset = "0xD0AD68", VA = "0xD0AD68")]
		public float GetAxisValue(Axis1D axis)
		{
			return default(float);
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xD0AE30", Offset = "0xD0AE30", VA = "0xD0AE30")]
		public Vector2 GetAxisValue(Axis2D axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xD0AEF8", Offset = "0xD0AEF8", VA = "0xD0AEF8")]
		public Vector3 GetCursorPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xD0AFB0", Offset = "0xD0AFB0", VA = "0xD0AFB0")]
		public Quaternion GetActiveControllerRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xD0B068", Offset = "0xD0B068", VA = "0xD0B068")]
		public float GetActiveControllerStick()
		{
			return default(float);
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xD0B120", Offset = "0xD0B120", VA = "0xD0B120")]
		public Transform GetActiveControllerTransform()
		{
			return null;
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xD0B1D8", Offset = "0xD0B1D8", VA = "0xD0B1D8")]
		public Transform GetControllerTransform(XRNode node)
		{
			return null;
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xD0B2A0", Offset = "0xD0B2A0", VA = "0xD0B2A0")]
		public Controller GetActiveController()
		{
			return default(Controller);
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xD0B358", Offset = "0xD0B358", VA = "0xD0B358")]
		public void ConsumeButton(Button button)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xD0B3A0", Offset = "0xD0B3A0", VA = "0xD0B3A0")]
		public void ConsumeAll()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xD0B3F8", Offset = "0xD0B3F8", VA = "0xD0B3F8")]
		public bool ActivatePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xD0B4B0", Offset = "0xD0B4B0", VA = "0xD0B4B0")]
		public UniversalInputManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013C")]
	public class Trans
	{
		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x17000062")]
		public Matrix4x4 matrix
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0xD05504", Offset = "0xD05504", VA = "0xD05504")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000063")]
		public Vector3 Up
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0xD0613C", Offset = "0xD0613C", VA = "0xD0613C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000064")]
		public Vector3 Down
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xD06218", Offset = "0xD06218", VA = "0xD06218")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000065")]
		public Vector3 Left
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xD062F4", Offset = "0xD062F4", VA = "0xD062F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000066")]
		public Vector3 Right
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xD063D0", Offset = "0xD063D0", VA = "0xD063D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000067")]
		public Vector3 Forward
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xD064AC", Offset = "0xD064AC", VA = "0xD064AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000068")]
		public Vector3 Back
		{
			[Token(Token = "0x6000735")]
			[Address(RVA = "0xD06588", Offset = "0xD06588", VA = "0xD06588")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xD04F64", Offset = "0xD04F64", VA = "0xD04F64")]
		public Trans()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xD05010", Offset = "0xD05010", VA = "0xD05010")]
		public Trans(Vector3 pos)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xD050E0", Offset = "0xD050E0", VA = "0xD050E0")]
		public Trans(Vector3 pos, Quaternion quat)
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xD051A8", Offset = "0xD051A8", VA = "0xD051A8")]
		public Trans(Transform t)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xD05240", Offset = "0xD05240", VA = "0xD05240")]
		public Trans(Vector3 pos, Quaternion quat, Vector3 scale)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xD052C4", Offset = "0xD052C4", VA = "0xD052C4")]
		public void Set(Trans t)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xD051D8", Offset = "0xD051D8", VA = "0xD051D8")]
		public void Set(Transform t)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xD05314", Offset = "0xD05314", VA = "0xD05314")]
		public static Trans GetGlobal(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xD0540C", Offset = "0xD0540C", VA = "0xD0540C")]
		public static Trans GetLocal(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xD055DC", Offset = "0xD055DC", VA = "0xD055DC")]
		public void Apply(Transform transform)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xD0562C", Offset = "0xD0562C", VA = "0xD0562C")]
		public void ApplyLocal(Transform transform)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xD0567C", Offset = "0xD0567C", VA = "0xD0567C")]
		public Vector3 Transform(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xD05810", Offset = "0xD05810", VA = "0xD05810")]
		public Vector3 InverseTransform(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xD059C8", Offset = "0xD059C8", VA = "0xD059C8")]
		public static Trans operator /(Trans a, Trans b)
		{
			return null;
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xD05BD8", Offset = "0xD05BD8", VA = "0xD05BD8")]
		public static Trans DivideIgnoreScale(Trans a, Trans b)
		{
			return null;
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xD05D98", Offset = "0xD05D98", VA = "0xD05D98")]
		public static Trans MultiplyIgnoreScale(Trans a, Trans b)
		{
			return null;
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xD05F4C", Offset = "0xD05F4C", VA = "0xD05F4C")]
		public static Trans operator *(Trans a, Trans b)
		{
			return null;
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xD06664", Offset = "0xD06664", VA = "0xD06664")]
		public Trans Inverse()
		{
			return null;
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xD06810", Offset = "0xD06810", VA = "0xD06810")]
		public Trans Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public static class MiscUtil
	{
		[Token(Token = "0x200037B")]
		public class VoteCounter
		{
			[Token(Token = "0x20003D9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2758", Offset = "0x9B2758")]
			private sealed class <>c__DisplayClass3_0
			{
				[Token(Token = "0x40010B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public VoteCounter <>4__this;

				[Token(Token = "0x40010B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int mostVotesCount;

				[Token(Token = "0x60015D0")]
				[Address(RVA = "0xE4D704", Offset = "0xE4D704", VA = "0xE4D704")]
				public <>c__DisplayClass3_0()
				{
				}

				[Token(Token = "0x60015D1")]
				[Address(RVA = "0xE4D70C", Offset = "0xE4D70C", VA = "0xE4D70C")]
				internal bool <ChooseWinner>b__0(int x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int[] votes;

			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xE4D504", Offset = "0xE4D504", VA = "0xE4D504")]
			public VoteCounter(int optionCount)
			{
			}

			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xE4D574", Offset = "0xE4D574", VA = "0xE4D574")]
			public void Vote(int optionIndex)
			{
			}

			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xE4D5C8", Offset = "0xE4D5C8", VA = "0xE4D5C8")]
			public int ChooseWinner()
			{
				return default(int);
			}
		}

		[Token(Token = "0x200037C")]
		public class Progress
		{
			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float duration;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float startTime;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool unscaled;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			private bool skippable;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			private bool returnedOne;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			private bool requireReturnedOne;

			[Token(Token = "0x17000182")]
			private float rightTime
			{
				[Token(Token = "0x60014E5")]
				[Address(RVA = "0xE4D274", Offset = "0xE4D274", VA = "0xE4D274")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000183")]
			public float fraction
			{
				[Token(Token = "0x60014E6")]
				[Address(RVA = "0xE4D2C8", Offset = "0xE4D2C8", VA = "0xE4D2C8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000184")]
			public bool finished
			{
				[Token(Token = "0x60014E7")]
				[Address(RVA = "0xE4D390", Offset = "0xE4D390", VA = "0xE4D390")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000185")]
			public float time
			{
				[Token(Token = "0x60014E8")]
				[Address(RVA = "0xE4D3C8", Offset = "0xE4D3C8", VA = "0xE4D3C8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xE4D190", Offset = "0xE4D190", VA = "0xE4D190")]
			public Progress(float d, bool unscaled = false, bool skippable = false, bool requireReturnedOne = false, bool resetSkip = false)
			{
			}

			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xE4D28C", Offset = "0xE4D28C", VA = "0xE4D28C")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200037D")]
		public class ShaderMat
		{
			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string shaderPath;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Material mat;

			[Token(Token = "0x17000186")]
			public Material Mat
			{
				[Token(Token = "0x60014EB")]
				[Address(RVA = "0xE4D500", Offset = "0xE4D500", VA = "0xE4D500")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xE4D408", Offset = "0xE4D408", VA = "0xE4D408")]
			public ShaderMat(string path)
			{
			}

			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xE4D434", Offset = "0xE4D434", VA = "0xE4D434")]
			public static implicit operator Material(ShaderMat sm)
			{
				return null;
			}
		}

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B257C", Offset = "0x9B257C")]
		private sealed class <>c__DisplayClass5_0<T>
		{
			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T item;

			[Token(Token = "0x60014EC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60014ED")]
			internal bool <IndexOf>b__0(T i)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B258C", Offset = "0x9B258C")]
		private sealed class <WaitUnscaledTime>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float t;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <startTime>5__2;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F1")]
				[Address(RVA = "0xE4D11C", Offset = "0xE4D11C", VA = "0xE4D11C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F3")]
				[Address(RVA = "0xE4D188", Offset = "0xE4D188", VA = "0xE4D188", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xE4B170", Offset = "0xE4B170", VA = "0xE4B170")]
			[DebuggerHidden]
			public <WaitUnscaledTime>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60014EF")]
			[Address(RVA = "0xE4D0A0", Offset = "0xE4D0A0", VA = "0xE4D0A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F0")]
			[Address(RVA = "0xE4D0A4", Offset = "0xE4D0A4", VA = "0xE4D0A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F2")]
			[Address(RVA = "0xE4D124", Offset = "0xE4D124", VA = "0xE4D124", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B259C", Offset = "0x9B259C")]
		private sealed class <WaitTime>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool unscaled;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float t;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F7")]
				[Address(RVA = "0xE4D02C", Offset = "0xE4D02C", VA = "0xE4D02C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F9")]
				[Address(RVA = "0xE4D098", Offset = "0xE4D098", VA = "0xE4D098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xE4B224", Offset = "0xE4B224", VA = "0xE4B224")]
			[DebuggerHidden]
			public <WaitTime>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xE4CF60", Offset = "0xE4CF60", VA = "0xE4CF60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xE4CF64", Offset = "0xE4CF64", VA = "0xE4CF64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xE4D034", Offset = "0xE4D034", VA = "0xE4D034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B25AC", Offset = "0x9B25AC")]
		private sealed class <SkippableWait>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool resetSkip;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float t;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014FD")]
				[Address(RVA = "0xE4CD60", Offset = "0xE4CD60", VA = "0xE4CD60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014FF")]
				[Address(RVA = "0xE4CDCC", Offset = "0xE4CDCC", VA = "0xE4CDCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xE4B2D8", Offset = "0xE4B2D8", VA = "0xE4B2D8")]
			[DebuggerHidden]
			public <SkippableWait>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xE4CC5C", Offset = "0xE4CC5C", VA = "0xE4CC5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xE4CC60", Offset = "0xE4CC60", VA = "0xE4CC60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014FE")]
			[Address(RVA = "0xE4CD68", Offset = "0xE4CD68", VA = "0xE4CD68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B25BC", Offset = "0x9B25BC")]
		private sealed class <Zip>d__33<T, U> : IEnumerable<KeyValuePair<T, U>>, IEnumerable, IEnumerator<KeyValuePair<T, U>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private KeyValuePair<T, U> <>2__current;

			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<T> first;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<T> <>3__first;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<U> second;

			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<U> <>3__second;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <firstEnumerator>5__2;

			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<U> <secondEnumerator>5__3;

			[Token(Token = "0x1700018D")]
			private KeyValuePair<T, U> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<T,U>>.Current
			{
				[Token(Token = "0x6001503")]
				[DebuggerHidden]
				get
				{
					return default(KeyValuePair<T, U>);
				}
			}

			[Token(Token = "0x1700018E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001505")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001500")]
			[DebuggerHidden]
			public <Zip>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001501")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001502")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001504")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001506")]
			[DebuggerHidden]
			private IEnumerator<KeyValuePair<T, U>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<T,U>>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001507")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B25CC", Offset = "0x9B25CC")]
		private sealed class <Tween_CR>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<float> callback;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action doneCallback;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__2;

			[Token(Token = "0x1700018F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600150B")]
				[Address(RVA = "0xE4CEEC", Offset = "0xE4CEEC", VA = "0xE4CEEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000190")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600150D")]
				[Address(RVA = "0xE4CF58", Offset = "0xE4CF58", VA = "0xE4CF58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001508")]
			[Address(RVA = "0xE4C9D8", Offset = "0xE4C9D8", VA = "0xE4C9D8")]
			[DebuggerHidden]
			public <Tween_CR>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6001509")]
			[Address(RVA = "0xE4CDD4", Offset = "0xE4CDD4", VA = "0xE4CDD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600150A")]
			[Address(RVA = "0xE4CDD8", Offset = "0xE4CDD8", VA = "0xE4CDD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600150C")]
			[Address(RVA = "0xE4CEF4", Offset = "0xE4CEF4", VA = "0xE4CEF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B25DC", Offset = "0x9B25DC")]
		private sealed class <AnimCurveTween_CR>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<float> callback;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve curve;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action doneCallback;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startTime>5__2;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001511")]
				[Address(RVA = "0xE4CBE8", Offset = "0xE4CBE8", VA = "0xE4CBE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001513")]
				[Address(RVA = "0xE4CC54", Offset = "0xE4CC54", VA = "0xE4CC54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600150E")]
			[Address(RVA = "0xE4CA04", Offset = "0xE4CA04", VA = "0xE4CA04")]
			[DebuggerHidden]
			public <AnimCurveTween_CR>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x600150F")]
			[Address(RVA = "0xE4CAA8", Offset = "0xE4CAA8", VA = "0xE4CAA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001510")]
			[Address(RVA = "0xE4CAAC", Offset = "0xE4CAAC", VA = "0xE4CAAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0xE4CBF0", Offset = "0xE4CBF0", VA = "0xE4CBF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random random;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool SkipWaitFlag;

		[Token(Token = "0x17000069")]
		public static int UnixTime
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xE4AF54", Offset = "0xE4AF54", VA = "0xE4AF54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700006A")]
		public static string SQLTime
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0xE4C678", Offset = "0xE4C678", VA = "0xE4C678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000738")]
		public static void ExtendArray<T>(ref T[] array, int extension)
		{
		}

		[Token(Token = "0x6000739")]
		public static int MaxIndex<T>(this IEnumerable<T> sequence) where T : IComparable<T>
		{
			return default(int);
		}

		[Token(Token = "0x600073A")]
		public static int MinIndex<T>(this IEnumerable<T> sequence) where T : IComparable<T>
		{
			return default(int);
		}

		[Token(Token = "0x600073B")]
		public static int FindIndex<T>(this IEnumerable<T> items, Func<T, bool> predicate)
		{
			return default(int);
		}

		[Token(Token = "0x600073C")]
		public static int IndexOf<T>(this IEnumerable<T> items, T item)
		{
			return default(int);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xE4ACC8", Offset = "0xE4ACC8", VA = "0xE4ACC8")]
		public static string GetTimeString()
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xE4AD4C", Offset = "0xE4AD4C", VA = "0xE4AD4C")]
		public static string FormatUTCTimeInLocalTime(DateTime dt, string fmt)
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xE4AE3C", Offset = "0xE4AE3C", VA = "0xE4AE3C")]
		public static string GetGUID_Weak()
		{
			return null;
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xE4B00C", Offset = "0xE4B00C", VA = "0xE4B00C")]
		public static string MD5Hash(string input)
		{
			return null;
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xE4B0F4", Offset = "0xE4B0F4", VA = "0xE4B0F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BAA24", Offset = "0x9BAA24")]
		public static IEnumerator WaitUnscaledTime(float t)
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xE4B19C", Offset = "0xE4B19C", VA = "0xE4B19C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BAA88", Offset = "0x9BAA88")]
		public static IEnumerator WaitTime(bool unscaled, float t)
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xE4B250", Offset = "0xE4B250", VA = "0xE4B250")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BAAEC", Offset = "0x9BAAEC")]
		public static IEnumerator SkippableWait(float t, bool resetSkip = true)
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xE4B304", Offset = "0xE4B304", VA = "0xE4B304")]
		public static void SkipWait()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xE4B370", Offset = "0xE4B370", VA = "0xE4B370")]
		public static bool InBox(Vector3 point, Vector3 box)
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xE4B458", Offset = "0xE4B458", VA = "0xE4B458")]
		public static void MakeInteger(ref Vector3 v)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xE4B4EC", Offset = "0xE4B4EC", VA = "0xE4B4EC")]
		public static bool CloseTo(Vector3 a, Vector3 b, double v)
		{
			return default(bool);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xE4B5D4", Offset = "0xE4B5D4", VA = "0xE4B5D4")]
		public static Vector3 TimeCorrectSmooth(Vector3 state, Vector3 influence, float amount, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xE4B6CC", Offset = "0xE4B6CC", VA = "0xE4B6CC")]
		public static Vector2 TimeCorrectSmooth(Vector2 state, Vector2 influence, float amount, float time)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xE4B7AC", Offset = "0xE4B7AC", VA = "0xE4B7AC")]
		public static void SetParentAndZeroTransform(Transform parent, Transform child)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xE4B88C", Offset = "0xE4B88C", VA = "0xE4B88C")]
		public static void ZeroTransform(Transform child)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xE4B950", Offset = "0xE4B950", VA = "0xE4B950")]
		public static Quaternion TimeCorrectSmooth(Quaternion state, Quaternion influence, float amount, float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xE4BA4C", Offset = "0xE4BA4C", VA = "0xE4BA4C")]
		public static float TimeCorrectSmooth(float state, float influence, float amount, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xE4BAE8", Offset = "0xE4BAE8", VA = "0xE4BAE8")]
		public static Vector3 ProjectDirectionOnToPlane(Vector3 dir, Vector3 normal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xE4BBEC", Offset = "0xE4BBEC", VA = "0xE4BBEC")]
		public static Vector3 ProjectVectorOnToPlane(Vector3 dir, Vector3 normal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xE4BCC8", Offset = "0xE4BCC8", VA = "0xE4BCC8")]
		public static int BinarySearch(Func<int, int> comparison, int len)
		{
			return default(int);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xE4BDDC", Offset = "0xE4BDDC", VA = "0xE4BDDC")]
		public static bool FindBracketIndicesAndInterpolationValue(float x, int len, out int a, out int b, out float v, Func<int, float> fn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xE4BF00", Offset = "0xE4BF00", VA = "0xE4BF00")]
		public static string AbsPathToAssetPath(string absPath)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xE4BFB8", Offset = "0xE4BFB8", VA = "0xE4BFB8")]
		public static void DebugShow(Rect r)
		{
		}

		[Token(Token = "0x6000754")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BAB50", Offset = "0x9BAB50")]
		private static IEnumerable<KeyValuePair<T, U>> Zip<T, U>(IEnumerable<T> first, IEnumerable<U> second)
		{
			return null;
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xE4C1B8", Offset = "0xE4C1B8", VA = "0xE4C1B8")]
		public static bool IsSceneCurrentlyLoaded(string sceneNameNoExtention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xE4C240", Offset = "0xE4C240", VA = "0xE4C240")]
		public static void LoadIfNotLoaded(string sceneName)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xE4C2C0", Offset = "0xE4C2C0", VA = "0xE4C2C0")]
		public static Transform GetFromPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xE4C4DC", Offset = "0xE4C4DC", VA = "0xE4C4DC")]
		public static void SetRGB(ref Color color, Color src)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xE4C4E8", Offset = "0xE4C4E8", VA = "0xE4C4E8")]
		public static void Serialize(BinaryFormatter binaryFormatter, Stream fileStream, Vector2 vec)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xE4C5A0", Offset = "0xE4C5A0", VA = "0xE4C5A0")]
		public static void Deserialize(BinaryFormatter binaryFormatter, Stream fileStream, ref Vector2 vec)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xE4C6FC", Offset = "0xE4C6FC", VA = "0xE4C6FC")]
		public static string GetSQLTime(DateTime d)
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		public static T[] GetRepeatedArray<T>(T tangentValue, int n)
		{
			return null;
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xE4C754", Offset = "0xE4C754", VA = "0xE4C754")]
		public static Coroutine AnimCurveTween(MonoBehaviour obj, AnimationCurve curve, float duration, Action<float> callback, [Optional] Action doneCallback)
		{
			return null;
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xE4C8A0", Offset = "0xE4C8A0", VA = "0xE4C8A0")]
		public static Coroutine Tween(MonoBehaviour obj, float duration, Action<float> callback, [Optional] Action doneCallback)
		{
			return null;
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xE4C944", Offset = "0xE4C944", VA = "0xE4C944")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BABB4", Offset = "0x9BABB4")]
		private static IEnumerator Tween_CR(float duration, Action<float> callback, [Optional] Action doneCallback)
		{
			return null;
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xE4C808", Offset = "0xE4C808", VA = "0xE4C808")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BAC18", Offset = "0x9BAC18")]
		private static IEnumerator AnimCurveTween_CR(AnimationCurve curve, float duration, Action<float> callback, [Optional] Action doneCallback)
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public class UniqueCounter<T>
	{
		[Token(Token = "0x2000385")]
		public class ItemData
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T item;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int count;

			[Token(Token = "0x6001514")]
			public ItemData()
			{
			}
		}

		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B25EC", Offset = "0x9B25EC")]
		private sealed class <EnumItems>d__3 : IEnumerable<ItemData>, IEnumerable, IEnumerator<ItemData>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ItemData <>2__current;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UniqueCounter<T> <>4__this;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Dictionary<T, ItemData>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x17000193")]
			private ItemData System.Collections.Generic.IEnumerator<Coplanar.UniqueCounter<T>.ItemData>.Current
			{
				[Token(Token = "0x6001519")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600151B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001515")]
			[DebuggerHidden]
			public <EnumItems>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001516")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001517")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001518")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600151A")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600151C")]
			[DebuggerHidden]
			private IEnumerator<ItemData> System.Collections.Generic.IEnumerable<Coplanar.UniqueCounter<T>.ItemData>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600151D")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T, ItemData> items;

		[Token(Token = "0x6000764")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000765")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BAC7C", Offset = "0x9BAC7C")]
		public IEnumerable<ItemData> EnumItems()
		{
			return null;
		}

		[Token(Token = "0x6000766")]
		public UniqueCounter()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class HandTool : MonoBehaviour
	{
		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject handPrefab;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraHandle;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool editEnabled;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float grabRange;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UniversalInputManager.GameButton interactButton;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UniversalInputManager.GameButton grabButton;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Func<Vector3, float, Transform> GetObjectAtPositionFn;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool reparent;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform tool;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform movingPiece;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform savedParent;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 grabOffset;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion grabOffsetRotation;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Trans initialTool;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Trans initialCameraHandle;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool movingWorld;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float lastDeltaMag;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 lastTrackingPos;

		[Token(Token = "0x1700006B")]
		public double ShakeAmount
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xC73824", Offset = "0xC73824", VA = "0xC73824")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC73830", Offset = "0xC73830", VA = "0xC73830")]
		private void Update()
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xC73834", Offset = "0xC73834", VA = "0xC73834")]
		private void SetMovingPieceTransform()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC739D8", Offset = "0xC739D8", VA = "0xC739D8")]
		private Transform GetObjectAtPosition(Vector3 toolPos, float scaledGrabRange)
		{
			return null;
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC73B74", Offset = "0xC73B74", VA = "0xC73B74")]
		public Transform GetObject()
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC73C34", Offset = "0xC73C34", VA = "0xC73C34")]
		public void Give(Transform newNode)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC73E44", Offset = "0xC73E44", VA = "0xC73E44")]
		public void Drop()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC73E98", Offset = "0xC73E98", VA = "0xC73E98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC73E9C", Offset = "0xC73E9C", VA = "0xC73E9C")]
		public void AddHandRenderer()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC74034", Offset = "0xC74034", VA = "0xC74034")]
		public HandTool()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class HandToolTarget : MonoBehaviour
	{
		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC74044", Offset = "0xC74044", VA = "0xC74044")]
		public HandToolTarget()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class VRUtil : SingletonMono<VRUtil>
	{
		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform leftEyeTransform;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform rightEyeTransform;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform leftHandTransform;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform rightHandTransform;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4848", Offset = "0x9B4848")]
		private iVector2 <CachedDisplayResolution>k__BackingField;

		[Token(Token = "0x1700006C")]
		public iVector2 CachedDisplayResolution
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xD0B820", Offset = "0xD0B820", VA = "0xD0B820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACE0", Offset = "0x9BACE0")]
			get
			{
				return default(iVector2);
			}
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xD0B828", Offset = "0xD0B828", VA = "0xD0B828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACF0", Offset = "0x9BACF0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public static bool VrActive
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0xD09354", Offset = "0xD09354", VA = "0xD09354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xD0B830", Offset = "0xD0B830", VA = "0xD0B830")]
		public Vector2 GetRenderTanAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xD0B9F4", Offset = "0xD0B9F4", VA = "0xD0B9F4")]
		public static float GetFov()
		{
			return default(float);
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xD0BA9C", Offset = "0xD0BA9C", VA = "0xD0BA9C")]
		private static iVector2 GetRenderResolution()
		{
			return default(iVector2);
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xD0BB54", Offset = "0xD0BB54", VA = "0xD0BB54")]
		public Vector2 GetPixelsPerTanAngle()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xD0BBAC", Offset = "0xD0BBAC", VA = "0xD0BBAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xD0BCF4", Offset = "0xD0BCF4", VA = "0xD0BCF4")]
		public Transform GetTransform(XRNode node)
		{
			return null;
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xD0BDF4", Offset = "0xD0BDF4", VA = "0xD0BDF4")]
		public Vector3 GetGlobalPosition(XRNode node)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xD0BE14", Offset = "0xD0BE14", VA = "0xD0BE14")]
		public static Trans GetTrackingSpaceTrans()
		{
			return null;
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xD0BEFC", Offset = "0xD0BEFC", VA = "0xD0BEFC")]
		public VRUtil()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public static class WebUtil
	{
		[Token(Token = "0x600077E")]
		[Address(RVA = "0xD0E3A8", Offset = "0xD0E3A8", VA = "0xD0E3A8")]
		public static UnityWebRequest Get(string url)
		{
			return null;
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xD0E44C", Offset = "0xD0E44C", VA = "0xD0E44C")]
		public static UnityWebRequest Post(string url, WWWForm form)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public class SplineFollower : MonoBehaviour
	{
		[Token(Token = "0x2000387")]
		private struct SplinePoint
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 h1;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 h2;
		}

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform icon;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Spline spline;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float startTime;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentSection;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SplinePoint> splinePoints;

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xE5C60C", Offset = "0xE5C60C", VA = "0xE5C60C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xE5C638", Offset = "0xE5C638", VA = "0xE5C638")]
		public void BuildSplineList()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xE5C838", Offset = "0xE5C838", VA = "0xE5C838")]
		private string AddArrayEntryLine(Vector3 p, int index, string arrayName)
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xE5CA1C", Offset = "0xE5CA1C", VA = "0xE5CA1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9BAD00", Offset = "0x9BAD00")]
		private void DumpControlPoint()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xE5CC90", Offset = "0xE5CC90", VA = "0xE5CC90")]
		public void RestSplineFollowing()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xE5CCB8", Offset = "0xE5CCB8", VA = "0xE5CCB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xE5D1B8", Offset = "0xE5D1B8", VA = "0xE5D1B8")]
		public Vector3 Evaluate(float position, float duration)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xE5CFF0", Offset = "0xE5CFF0", VA = "0xE5CFF0")]
		private Vector3 CalculatePosition(Vector3 _P0, Vector3 _P1, Vector3 _P2, Vector3 _P3, float _i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xE5D318", Offset = "0xE5D318", VA = "0xE5D318")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x2000388")]
		public delegate void VoidDelegate(int selectedWay);

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoidDelegate CallBack;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subWay;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color mainColor;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color hoverColor;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material myMat;

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xC665B4", Offset = "0xC665B4", VA = "0xC665B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xC666B4", Offset = "0xC666B4", VA = "0xC666B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xC66A5C", Offset = "0xC66A5C", VA = "0xC66A5C")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1E40", Offset = "0x9B1E40")]
	public class MoveObject : MonoBehaviour
	{
		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool lookRotation;

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xE4DC6C", Offset = "0xE4DC6C", VA = "0xE4DC6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xE4DCD0", Offset = "0xE4DCD0", VA = "0xE4DCD0")]
		public void Move(Vector3 pos)
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xE4DD1C", Offset = "0xE4DD1C", VA = "0xE4DD1C")]
		public MoveObject()
		{
		}
	}
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1EA4", Offset = "0x9B1EA4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1EA4", Offset = "0x9B1EA4")]
	public class MoveObjectPhysically : MonoBehaviour
	{
		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B4858", Offset = "0x9B4858")]
		public float rotationSpeed;

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xE4DD2C", Offset = "0xE4DD2C", VA = "0xE4DD2C")]
		public void Move(Vector3 pos)
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xE4E048", Offset = "0xE4E048", VA = "0xE4E048")]
		public MoveObjectPhysically()
		{
		}
	}
}
namespace Coplanar.SplineTool
{
	[Token(Token = "0x2000147")]
	public class FollowSpline : MonoBehaviour
	{
		[Token(Token = "0x2000389")]
		public enum ControlType
		{
			[Token(Token = "0x4000F02")]
			PlayerControlled,
			[Token(Token = "0x4000F03")]
			AIControlled,
			[Token(Token = "0x4000F04")]
			Random
		}

		[Token(Token = "0x200038A")]
		public enum OffsetType
		{
			[Token(Token = "0x4000F06")]
			None,
			[Token(Token = "0x4000F07")]
			Constant,
			[Token(Token = "0x4000F08")]
			Random
		}

		[Token(Token = "0x200038B")]
		public delegate void MoveDelegate(Vector3 pos);

		[Token(Token = "0x200038C")]
		public delegate void IntDelegate(ref int i, Vector3[] nextPos);

		[Token(Token = "0x200038D")]
		public delegate void VoidDelegate();

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float offset;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int originalStartIndex;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPhysically;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool reverse;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool moveOnAwake;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ControlType controlType;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OffsetType offsetType;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SplineWindow splineWindow;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent[] events;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currSubway;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _currPoint;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4878", Offset = "0x9B4878")]
		private float <currSeg>k__BackingField;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int startIndex;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool paused;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool moving;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 pointOffset;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 minOffset;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 maxOffset;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MoveDelegate Move;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IntDelegate ChooseSubway;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VoidDelegate Finished;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 progressPoint;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Spline spline;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject arrow;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform[] arrows;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int selectedArrow;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float rpp;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 nextPos;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 nextPointPos;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float speed;

		[Token(Token = "0x1700006E")]
		public int CurrSubway
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xE5D390", Offset = "0xE5D390", VA = "0xE5D390")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700006F")]
		public int CurrPoint
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0xE5D398", Offset = "0xE5D398", VA = "0xE5D398")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000070")]
		public float currSeg
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xE5D3A0", Offset = "0xE5D3A0", VA = "0xE5D3A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD38", Offset = "0x9BAD38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000794")]
			[Address(RVA = "0xE5D3A8", Offset = "0xE5D3A8", VA = "0xE5D3A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD48", Offset = "0x9BAD48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public bool chooseSubway
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xE5D3B0", Offset = "0xE5D3B0", VA = "0xE5D3B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xE5D3C0", Offset = "0xE5D3C0", VA = "0xE5D3C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xE5D650", Offset = "0xE5D650", VA = "0xE5D650")]
		private void SetUpStartingPoint()
		{
		}

		[Token(Token = "0x6000798")]
		private Delegate GetMethod<T>(string name)
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xE5D7CC", Offset = "0xE5D7CC", VA = "0xE5D7CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xE5DA9C", Offset = "0xE5DA9C", VA = "0xE5DA9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xE5D7E4", Offset = "0xE5D7E4", VA = "0xE5D7E4")]
		private void GoThrow()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xE5DAB4", Offset = "0xE5DAB4", VA = "0xE5DAB4")]
		private bool CheckCanMove()
		{
			return default(bool);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xE5DB80", Offset = "0xE5DB80", VA = "0xE5DB80")]
		private Vector3 GetCurrPos(float off)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xE5DD0C", Offset = "0xE5DD0C", VA = "0xE5DD0C")]
		private void ToNewPos()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xE5E7A0", Offset = "0xE5E7A0", VA = "0xE5E7A0")]
		public bool CheckForWay()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xE5E36C", Offset = "0xE5E36C", VA = "0xE5E36C")]
		private int[] GetNextPoint(ref int point)
		{
			return null;
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xE5E424", Offset = "0xE5E424", VA = "0xE5E424")]
		private void SetNextPointPos()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xE5E080", Offset = "0xE5E080", VA = "0xE5E080")]
		private void SetSubway()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xE5EC28", Offset = "0xE5EC28", VA = "0xE5EC28")]
		public void ChooseSubwayPlayer(ref int i, Vector3[] nextPos)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xE5F340", Offset = "0xE5F340", VA = "0xE5F340")]
		public void ChoosedSubway(int selectedWay)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xE5D6C4", Offset = "0xE5D6C4", VA = "0xE5D6C4")]
		public bool StartMoving(int point, int subway = 0, float segment = 0f, bool bReverse = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xE5F39C", Offset = "0xE5F39C", VA = "0xE5F39C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xE5EA90", Offset = "0xE5EA90", VA = "0xE5EA90")]
		public void Stop()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xE5F3B8", Offset = "0xE5F3B8", VA = "0xE5F3B8")]
		public void Resume()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xE5F3A8", Offset = "0xE5F3A8", VA = "0xE5F3A8")]
		public void ResetToDefaults()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xE5F3C0", Offset = "0xE5F3C0", VA = "0xE5F3C0")]
		public void ReverseMovement()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xE5F3D0", Offset = "0xE5F3D0", VA = "0xE5F3D0")]
		public bool SetSpline(SplineWindow other)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xE5EB54", Offset = "0xE5EB54", VA = "0xE5EB54")]
		public void DestroyArrows()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xE5EAA0", Offset = "0xE5EAA0", VA = "0xE5EAA0")]
		public float GetRPP(int point, int index)
		{
			return default(float);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xE5F49C", Offset = "0xE5F49C", VA = "0xE5F49C")]
		public FollowSpline()
		{
		}
	}
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B1F30", Offset = "0x9B1F30")]
	public class Spline : ScriptableObject, IEnumerable
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Waypoint[] waypoints;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float resolution;

		[Token(Token = "0x4000671")]
		private const float handleOffest = 1.5f;

		[Token(Token = "0x17000072")]
		public Waypoint Item
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0xE5E328", Offset = "0xE5E328", VA = "0xE5E328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		public int Length
		{
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0xE5CFD0", Offset = "0xE5CFD0", VA = "0xE5CFD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xE5F348", Offset = "0xE5F348", VA = "0xE5F348")]
		public int GetSubwaysLength(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xE5F6CC", Offset = "0xE5F6CC", VA = "0xE5F6CC")]
		public int GetReversewaysLength(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xE5F720", Offset = "0xE5F720", VA = "0xE5F720")]
		public int GetHandlesLength(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xE5F774", Offset = "0xE5F774", VA = "0xE5F774")]
		public int GetSubway(int point, int index)
		{
			return default(int);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xE5F7D8", Offset = "0xE5F7D8", VA = "0xE5F7D8")]
		public int GetReverseway(int point, int index)
		{
			return default(int);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xE5F83C", Offset = "0xE5F83C", VA = "0xE5F83C")]
		public Vector3 GetHandle(int point, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xE5F8AC", Offset = "0xE5F8AC", VA = "0xE5F8AC")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xE5F8FC", Offset = "0xE5F8FC", VA = "0xE5F8FC")]
		public float GetLength(int point, int sw = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xE5FA28", Offset = "0xE5FA28", VA = "0xE5FA28", Slot = "4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xE5FA44", Offset = "0xE5FA44", VA = "0xE5FA44")]
		public Spline()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xE5FAB0", Offset = "0xE5FAB0", VA = "0xE5FAB0")]
		public Spline(Spline other)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xE5FF8C", Offset = "0xE5FF8C", VA = "0xE5FF8C")]
		public static Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xE60008", Offset = "0xE60008", VA = "0xE60008")]
		public static Spline CreateSpline(Spline other)
		{
			return null;
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xE5E4F8", Offset = "0xE5E4F8", VA = "0xE5E4F8")]
		public Vector3 GetPointAtTime(float t, int i, int s = 0, bool bReverse = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xE604D0", Offset = "0xE604D0", VA = "0xE604D0")]
		private Vector3 CalculatePosition(Vector3 _P0, Vector3 _P1, Vector3 _P2, Vector3 _P3, float _i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xE60698", Offset = "0xE60698", VA = "0xE60698")]
		public void AddPoint(Vector3 pos, int i1)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xE60C30", Offset = "0xE60C30", VA = "0xE60C30")]
		public void Subdivide(int i1, int i2)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xE611FC", Offset = "0xE611FC", VA = "0xE611FC")]
		public void Merge(int i1, int i2)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xE618A0", Offset = "0xE618A0", VA = "0xE618A0")]
		public void DrawLine(int i1, int i2)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xE62134", Offset = "0xE62134", VA = "0xE62134")]
		public void RemoveLine(int i1, int i2)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xE61714", Offset = "0xE61714", VA = "0xE61714")]
		private void BreakSubway(Waypoint p1, Waypoint p2)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xE618CC", Offset = "0xE618CC", VA = "0xE618CC")]
		private void ConnectSubway(int i1, int i2)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xE6146C", Offset = "0xE6146C", VA = "0xE6146C")]
		private void ConnectSubway(Waypoint p1, Waypoint p2)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xE6186C", Offset = "0xE6186C", VA = "0xE6186C")]
		public void CleanSpline()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xE62234", Offset = "0xE62234", VA = "0xE62234")]
		private void RemoveSinglePoints()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xE625E8", Offset = "0xE625E8", VA = "0xE625E8")]
		public void RemovePoint(int index)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xE6247C", Offset = "0xE6247C", VA = "0xE6247C")]
		public void RemovePointClean(int index)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xE6280C", Offset = "0xE6280C", VA = "0xE6280C")]
		public void SetSegments()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xE60AC4", Offset = "0xE60AC4", VA = "0xE60AC4")]
		public void SetReverseWays()
		{
		}

		[Token(Token = "0x60007CE")]
		private void Insert<T>(ref T[] array, int index, T element)
		{
		}

		[Token(Token = "0x60007CF")]
		private void Remove<T>(ref T[] array, int index)
		{
		}

		[Token(Token = "0x60007D0")]
		private int IndexOf<T>(T[] array, T element)
		{
			return default(int);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xE5E2F4", Offset = "0xE5E2F4", VA = "0xE5E2F4")]
		public bool IsValid(int i)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xE61008", Offset = "0xE61008", VA = "0xE61008")]
		private bool CheckIfConsecutive(ref int i1, ref int i2, ref int sw, ref int rw)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xE61DD8", Offset = "0xE61DD8", VA = "0xE61DD8")]
		public void CleanWays()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xE61B78", Offset = "0xE61B78", VA = "0xE61B78")]
		public void CleanHandles()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xE6297C", Offset = "0xE6297C", VA = "0xE6297C", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xE62D24", Offset = "0xE62D24", VA = "0xE62D24", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000149")]
	public enum GenerateType
	{
		[Token(Token = "0x4000673")]
		GenerateOnPoint,
		[Token(Token = "0x4000674")]
		GenerateByDistance
	}
	[Token(Token = "0x200014A")]
	public class SplineMesh : MonoBehaviour
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplineWindow spline;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GenerateType type;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float distance;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offsetPosition;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 offsetRotation;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 scale;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool UseLookAtRotation;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<MeshInfo> spawnedObjects;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool update;

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xD022F0", Offset = "0xD022F0", VA = "0xD022F0")]
		public void UpdatePosition()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xD02BAC", Offset = "0xD02BAC", VA = "0xD02BAC")]
		public void ReGenerate()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xD031E0", Offset = "0xD031E0", VA = "0xD031E0")]
		private void Spawn(Vector3 position, Quaternion rotation, MeshInfo info)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xD02AA4", Offset = "0xD02AA4", VA = "0xD02AA4")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xD033C4", Offset = "0xD033C4", VA = "0xD033C4")]
		public SplineMesh()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class MeshInfo
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pointIndex;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subwayIndex;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float segmentIndex;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform prefabInstance;

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xE5F684", Offset = "0xE5F684", VA = "0xE5F684")]
		public MeshInfo(int i, int s = 0, float f = 0f)
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class SplineWindow : MonoBehaviour
	{
		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Spline spline;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Spline splineRefernce;

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xD03474", Offset = "0xD03474", VA = "0xD03474")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xD03744", Offset = "0xD03744", VA = "0xD03744")]
		public void SetLocalPositions()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xD03958", Offset = "0xD03958", VA = "0xD03958")]
		public void SetLocalPositions(int i)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xD03478", Offset = "0xD03478", VA = "0xD03478")]
		public void SetWorldPositions()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xD03B64", Offset = "0xD03B64", VA = "0xD03B64")]
		public static void SetWorldPositionsFromLocal(Spline spline)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xD03CB4", Offset = "0xD03CB4", VA = "0xD03CB4")]
		public void SetPointPosition(int i, Vector3 pos)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xD03D1C", Offset = "0xD03D1C", VA = "0xD03D1C")]
		public SplineWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014D")]
	public class Waypoint
	{
		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string method;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4888", Offset = "0x9B4888")]
		private Vector3 <position>k__BackingField;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 localPosition;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] subways;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] reversedWays;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] handles;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] localHandles;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[] segments;

		[Token(Token = "0x17000074")]
		public Vector3 position
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0xD03D24", Offset = "0xD03D24", VA = "0xD03D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD58", Offset = "0x9BAD58")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0xD03D30", Offset = "0xD03D30", VA = "0xD03D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD68", Offset = "0x9BAD68")]
			set
			{
			}
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xD03D3C", Offset = "0xD03D3C", VA = "0xD03D3C")]
		public Waypoint(Vector3 pos)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xD03E14", Offset = "0xD03E14", VA = "0xD03E14")]
		public int GetHandleFromReverseWays(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xD03E38", Offset = "0xD03E38", VA = "0xD03E38")]
		public int GetReverseWayFromHandle(int i)
		{
			return default(int);
		}
	}
}
namespace Coplanar.CPExtensions
{
	[Token(Token = "0x200014E")]
	public static class CPExtensions
	{
		[Token(Token = "0x60007E9")]
		public static bool Each<T>(this IEnumerable<T> ie, Func<T, int, bool> action)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EA")]
		public static bool Each<T>(this IEnumerable ie, Func<T, int, bool> action)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xC67E20", Offset = "0xC67E20", VA = "0xC67E20")]
		public static GameObject FindObject(this GameObject parent, string name)
		{
			return null;
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xC67F78", Offset = "0xC67F78", VA = "0xC67F78")]
		public static Mesh GetSharedMesh(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xC68030", Offset = "0xC68030", VA = "0xC68030")]
		public static GameObject AddChild(this GameObject go, string name)
		{
			return null;
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xC681B4", Offset = "0xC681B4", VA = "0xC681B4")]
		public static void SetLayerRecursive(this Transform t, int layer)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xC68428", Offset = "0xC68428", VA = "0xC68428")]
		public static string GetPath(this Transform t)
		{
			return null;
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xC6853C", Offset = "0xC6853C", VA = "0xC6853C")]
		public static void SetLayerRecursive(this GameObject t, int layer)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xC6856C", Offset = "0xC6856C", VA = "0xC6856C")]
		public static void DoRecursive(this GameObject go, Action<GameObject> func)
		{
		}

		[Token(Token = "0x60007F2")]
		public static T GetOrAddComponent<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xC680F0", Offset = "0xC680F0", VA = "0xC680F0")]
		public static void Reset(this Transform t)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xC68828", Offset = "0xC68828", VA = "0xC68828")]
		public static void SetPosRot(this Transform t, Transform other)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xC68884", Offset = "0xC68884", VA = "0xC68884")]
		public static void ResetPosition(this Transform t)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xC68900", Offset = "0xC68900", VA = "0xC68900")]
		public static void DestroyImmediateAllChildren(this Transform t)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xC68A5C", Offset = "0xC68A5C", VA = "0xC68A5C")]
		public static void DestroyAllChildren(this Transform t)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xC68BB8", Offset = "0xC68BB8", VA = "0xC68BB8")]
		public static void DestroyAllChildrenImmediateInEditor(this Transform t)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xC68BBC", Offset = "0xC68BBC", VA = "0xC68BBC")]
		public static void Merge(this IDictionary target, IDictionary addHash)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xC68FA4", Offset = "0xC68FA4", VA = "0xC68FA4")]
		public static Vector3 Reciprocal(this Vector3 input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xC68FE8", Offset = "0xC68FE8", VA = "0xC68FE8")]
		public static Vector2 Reciprocal(this Vector2 input)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xC69020", Offset = "0xC69020", VA = "0xC69020")]
		public static Color PointSample(this Texture2D tex, float u, float v)
		{
			return default(Color);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xC69098", Offset = "0xC69098", VA = "0xC69098")]
		public static iVector2 Size(this Texture2D tex)
		{
			return default(iVector2);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xC69104", Offset = "0xC69104", VA = "0xC69104")]
		public static Texture2D GetTexture2D(this RenderTexture rt, bool mipmaps = false)
		{
			return null;
		}

		[Token(Token = "0x60007FF")]
		public static T AddComponentWithInit<T>(this GameObject obj, Action<T> onInit) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xC692D4", Offset = "0xC692D4", VA = "0xC692D4")]
		public static Color ToColor(this Vector3 v)
		{
			return default(Color);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xC69304", Offset = "0xC69304", VA = "0xC69304")]
		public static Vector3 ToVector(this Color c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xC69338", Offset = "0xC69338", VA = "0xC69338")]
		public static Vector3 GetClamped(this Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xC69434", Offset = "0xC69434", VA = "0xC69434")]
		public static float MinComp(this Vector4 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xC694E0", Offset = "0xC694E0", VA = "0xC694E0")]
		public static float MinComp(this Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xC69570", Offset = "0xC69570", VA = "0xC69570")]
		public static float MaxComp(this Vector4 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xC6960C", Offset = "0xC6960C", VA = "0xC6960C")]
		public static long TotalSeconds(this DateTime date)
		{
			return default(long);
		}
	}
}
namespace Coplanar.SimpleSerialization
{
	[Token(Token = "0x200014F")]
	internal class Tools
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0xE5B25C", Offset = "0xE5B25C", VA = "0xE5B25C")]
		public static SType TypeToEnum(Type t)
		{
			return default(SType);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xE5B320", Offset = "0xE5B320", VA = "0xE5B320")]
		public Tools()
		{
		}
	}
	[Token(Token = "0x2000150")]
	internal enum SType
	{
		[Token(Token = "0x400068E")]
		Int,
		[Token(Token = "0x400068F")]
		Float,
		[Token(Token = "0x4000690")]
		Vector2,
		[Token(Token = "0x4000691")]
		Vector3,
		[Token(Token = "0x4000692")]
		Bool,
		[Token(Token = "0x4000693")]
		Array,
		[Token(Token = "0x4000694")]
		Quaternion
	}
	[Token(Token = "0x2000151")]
	public class SimpleSerializer : IDisposable
	{
		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream fileStream;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] buffer;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int bufferPos;

		[Token(Token = "0x4000698")]
		private const int bufferSize = 1024;

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xE5AC10", Offset = "0xE5AC10", VA = "0xE5AC10")]
		public SimpleSerializer(string filePath)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xE5ACAC", Offset = "0xE5ACAC", VA = "0xE5ACAC")]
		public SimpleSerializer(MemoryStream memStream)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xE5AD24", Offset = "0xE5AD24", VA = "0xE5AD24", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xE5AD54", Offset = "0xE5AD54", VA = "0xE5AD54")]
		public void Flush()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xE5ADB4", Offset = "0xE5ADB4", VA = "0xE5ADB4")]
		private void WriteByte(byte b)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xE5AE04", Offset = "0xE5AE04", VA = "0xE5AE04")]
		private void WriteBytes(byte[] bytes)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xE5AE5C", Offset = "0xE5AE5C", VA = "0xE5AE5C")]
		public void Serialize(int x)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xE5AEE8", Offset = "0xE5AEE8", VA = "0xE5AEE8")]
		public void Serialize(float x)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xE5AF74", Offset = "0xE5AF74", VA = "0xE5AF74")]
		public void Serialize(bool x)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xE5B000", Offset = "0xE5B000", VA = "0xE5B000")]
		public void Serialize(Vector2 v)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xE5B0A8", Offset = "0xE5B0A8", VA = "0xE5B0A8")]
		public void Serialize(Vector3 v)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xE5B174", Offset = "0xE5B174", VA = "0xE5B174")]
		public void Serialize(Quaternion q)
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class SimpleDeserializer : IDisposable
	{
		[Token(Token = "0x200038E")]
		private enum SType
		{
			[Token(Token = "0x4000F0A")]
			Int,
			[Token(Token = "0x4000F0B")]
			Float,
			[Token(Token = "0x4000F0C")]
			Vector2,
			[Token(Token = "0x4000F0D")]
			Vector3,
			[Token(Token = "0x4000F0E")]
			Bool,
			[Token(Token = "0x4000F0F")]
			Array,
			[Token(Token = "0x4000F10")]
			Quaternion
		}

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream stream;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] buffer;

		[Token(Token = "0x400069B")]
		private const int bufferSize = 1024;

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xE5A4B4", Offset = "0xE5A4B4", VA = "0xE5A4B4")]
		public SimpleDeserializer(string filePath)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xE5A550", Offset = "0xE5A550", VA = "0xE5A550")]
		public SimpleDeserializer(Path filePath)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xE5A608", Offset = "0xE5A608", VA = "0xE5A608")]
		public SimpleDeserializer(MemoryStream memStream)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xE5A67C", Offset = "0xE5A67C", VA = "0xE5A67C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xE5A6B0", Offset = "0xE5A6B0", VA = "0xE5A6B0")]
		private byte GetByte()
		{
			return default(byte);
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xE5A780", Offset = "0xE5A780", VA = "0xE5A780")]
		private void Read(int n)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xE5A830", Offset = "0xE5A830", VA = "0xE5A830")]
		public float Float()
		{
			return default(float);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xE5A918", Offset = "0xE5A918", VA = "0xE5A918")]
		public int Int()
		{
			return default(int);
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xE5A9B8", Offset = "0xE5A9B8", VA = "0xE5A9B8")]
		public bool Bool()
		{
			return default(bool);
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xE5AA34", Offset = "0xE5AA34", VA = "0xE5AA34")]
		public Vector2 Vector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xE5AAC0", Offset = "0xE5AAC0", VA = "0xE5AAC0")]
		public Vector3 Vector3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xE5AB5C", Offset = "0xE5AB5C", VA = "0xE5AB5C")]
		public Quaternion Quaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xE5A89C", Offset = "0xE5A89C", VA = "0xE5A89C")]
		private float Deserialize_float()
		{
			return default(float);
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000153")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000075")]
		public bool Highlight
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0xDC3604", Offset = "0xDC3604", VA = "0xDC3604")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000823")]
			[Address(RVA = "0xDC360C", Offset = "0xDC360C", VA = "0xDC360C")]
			set
			{
			}
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xDC3618", Offset = "0xDC3618", VA = "0xDC3618")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xDC37F0", Offset = "0xDC37F0", VA = "0xDC37F0", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xDC3818", Offset = "0xDC3818", VA = "0xDC3818", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xDC3840", Offset = "0xDC3840", VA = "0xDC3840")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xDC36E4", Offset = "0xDC36E4", VA = "0xDC36E4")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xDC3AB4", Offset = "0xDC3AB4", VA = "0xDC3AB4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000076")]
		public bool InRange
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0xDC424C", Offset = "0xDC424C", VA = "0xDC424C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600082C")]
			[Address(RVA = "0xDC4254", Offset = "0xDC4254", VA = "0xDC4254")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public bool Targeted
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0xDC43E4", Offset = "0xDC43E4", VA = "0xDC43E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600082E")]
			[Address(RVA = "0xDC43EC", Offset = "0xDC43EC", VA = "0xDC43EC")]
			set
			{
			}
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xDC43F8", Offset = "0xDC43F8", VA = "0xDC43F8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xDC4260", Offset = "0xDC4260", VA = "0xDC4260")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xDC45CC", Offset = "0xDC45CC", VA = "0xDC45CC")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xDC4610", Offset = "0xDC4610", VA = "0xDC4610")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xDC4670", Offset = "0xDC4670", VA = "0xDC4670")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1F78", Offset = "0x9B1F78")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000078")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0xDC4678", Offset = "0xDC4678", VA = "0xDC4678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000835")]
			[Address(RVA = "0xDC4680", Offset = "0xDC4680", VA = "0xDC4680")]
			set
			{
			}
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xDC469C", Offset = "0xDC469C", VA = "0xDC469C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xDC4824", Offset = "0xDC4824", VA = "0xDC4824", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xDC51E0", Offset = "0xDC51E0", VA = "0xDC51E0", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xDC57A4", Offset = "0xDC57A4", VA = "0xDC57A4", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xDC5B8C", Offset = "0xDC5B8C", VA = "0xDC5B8C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xDC4AF4", Offset = "0xDC4AF4", VA = "0xDC4AF4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xDC5C6C", Offset = "0xDC5C6C", VA = "0xDC5C6C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xDC60AC", Offset = "0xDC60AC", VA = "0xDC60AC", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xDC60C4", Offset = "0xDC60C4", VA = "0xDC60C4", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xDC60CC", Offset = "0xDC60CC", VA = "0xDC60CC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200038F")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000F12")]
			Disabled,
			[Token(Token = "0x4000F13")]
			Enabled,
			[Token(Token = "0x4000F14")]
			Targeted
		}

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xDC7D10", Offset = "0xDC7D10", VA = "0xDC7D10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xDC4530", Offset = "0xDC4530", VA = "0xDC4530")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xDC7D78", Offset = "0xDC7D78", VA = "0xDC7D78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xDC7DC4", Offset = "0xDC7DC4", VA = "0xDC7DC4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xDC7BA4", Offset = "0xDC7BA4", VA = "0xDC7BA4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xDC7C58", Offset = "0xDC7C58", VA = "0xDC7C58")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xDC7D08", Offset = "0xDC7D08", VA = "0xDC7D08")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000847")]
		[Address(RVA = "0xDCCE5C", Offset = "0xDCCE5C", VA = "0xDCCE5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xDCCF28", Offset = "0xDCCF28", VA = "0xDCCF28")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xDCCF34", Offset = "0xDCCF34", VA = "0xDCCF34")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xDCCF40", Offset = "0xDCCF40", VA = "0xDCCF40")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x103CD88", Offset = "0x103CD88", VA = "0x103CD88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x103CDE0", Offset = "0x103CDE0", VA = "0x103CDE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x103D08C", Offset = "0x103D08C", VA = "0x103D08C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x103D180", Offset = "0x103D180", VA = "0x103D180")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x103CDE4", Offset = "0x103CDE4", VA = "0x103CDE4")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x103D274", Offset = "0x103D274", VA = "0x103D274")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000390")]
		public enum ContactTest
		{
			[Token(Token = "0x4000F16")]
			PerpenTest,
			[Token(Token = "0x4000F17")]
			BackwardsPress
		}

		[Token(Token = "0x40006C0")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40006C1")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000079")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x103D30C", Offset = "0x103D30C", VA = "0x103D30C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700007A")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x103D314", Offset = "0x103D314", VA = "0x103D314")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x103D320", Offset = "0x103D320", VA = "0x103D320", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x103D418", Offset = "0x103D418", VA = "0x103D418")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x103D584", Offset = "0x103D584", VA = "0x103D584")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x103D6F0", Offset = "0x103D6F0", VA = "0x103D6F0")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x103D85C", Offset = "0x103D85C", VA = "0x103D85C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x103DD34", Offset = "0x103DD34", VA = "0x103DD34")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x103DE20", Offset = "0x103DE20", VA = "0x103DE20")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x103DF18", Offset = "0x103DF18", VA = "0x103DF18")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x103E040", Offset = "0x103E040", VA = "0x103E040")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B49D8", Offset = "0x9B49D8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B49E8", Offset = "0x9B49E8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700007B")]
		public Collider Collider
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0xDC3464", Offset = "0xDC3464", VA = "0xDC3464", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF58", Offset = "0x9BAF58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600085D")]
			[Address(RVA = "0xDC346C", Offset = "0xDC346C", VA = "0xDC346C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF68", Offset = "0x9BAF68")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xDC3474", Offset = "0xDC3474", VA = "0xDC3474", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF78", Offset = "0x9BAF78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xDC347C", Offset = "0xDC347C", VA = "0xDC347C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF88", Offset = "0x9BAF88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xDC3484", Offset = "0xDC3484", VA = "0xDC3484", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xDC34D8", Offset = "0xDC34D8", VA = "0xDC34D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xDC3558", Offset = "0xDC3558", VA = "0xDC3558")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700007E")]
		Collider Collider
		{
			[Token(Token = "0x6000863")]
			get;
		}

		[Token(Token = "0x1700007F")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000864")]
			get;
		}

		[Token(Token = "0x17000080")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000865")]
			get;
		}
	}
	[Token(Token = "0x200015D")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xDC3560", Offset = "0xDC3560", VA = "0xDC3560")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200015E")]
	public enum InteractionType
	{
		[Token(Token = "0x40006D5")]
		Enter,
		[Token(Token = "0x40006D6")]
		Stay,
		[Token(Token = "0x40006D7")]
		Exit
	}
	[Token(Token = "0x200015F")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000391")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000F19")]
			Mesh,
			[Token(Token = "0x4000F1A")]
			Skeleton,
			[Token(Token = "0x4000F1B")]
			Both
		}

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B25FC", Offset = "0x9B25FC")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000195")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001531")]
				[Address(RVA = "0xDC8D1C", Offset = "0xDC8D1C", VA = "0xDC8D1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000196")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001533")]
				[Address(RVA = "0xDC8D88", Offset = "0xDC8D88", VA = "0xDC8D88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600152E")]
			[Address(RVA = "0xDC8808", Offset = "0xDC8808", VA = "0xDC8808")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600152F")]
			[Address(RVA = "0xDC8AF4", Offset = "0xDC8AF4", VA = "0xDC8AF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001530")]
			[Address(RVA = "0xDC8AF8", Offset = "0xDC8AF8", VA = "0xDC8AF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001532")]
			[Address(RVA = "0xDC8D24", Offset = "0xDC8D24", VA = "0xDC8D24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006D8")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4A18", Offset = "0x9B4A18")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000081")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0xDC6C48", Offset = "0xDC6C48", VA = "0xDC6C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xDC7DCC", Offset = "0xDC7DCC", VA = "0xDC7DCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xDC7818", Offset = "0xDC7818", VA = "0xDC7818")]
			get
			{
				return null;
			}
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xDC7E38", Offset = "0xDC7E38", VA = "0xDC7E38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0xDC7EA4", Offset = "0xDC7EA4", VA = "0xDC7EA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xDC7EE4", Offset = "0xDC7EE4", VA = "0xDC7EE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0xDC7F50", Offset = "0xDC7F50", VA = "0xDC7F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xDC7F90", Offset = "0xDC7F90", VA = "0xDC7F90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0xDC7FFC", Offset = "0xDC7FFC", VA = "0xDC7FFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000870")]
			[Address(RVA = "0xDC803C", Offset = "0xDC803C", VA = "0xDC803C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0xDC6C0C", Offset = "0xDC6C0C", VA = "0xDC6C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000872")]
			[Address(RVA = "0xDC80A8", Offset = "0xDC80A8", VA = "0xDC80A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xDC77DC", Offset = "0xDC77DC", VA = "0xDC77DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xDC8110", Offset = "0xDC8110", VA = "0xDC8110")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0xDC8178", Offset = "0xDC8178", VA = "0xDC8178")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xDC81B4", Offset = "0xDC81B4", VA = "0xDC81B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0xDC821C", Offset = "0xDC821C", VA = "0xDC821C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xDC8258", Offset = "0xDC8258", VA = "0xDC8258")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0xDC82C0", Offset = "0xDC82C0", VA = "0xDC82C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xDC82FC", Offset = "0xDC82FC", VA = "0xDC82FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0xDC8364", Offset = "0xDC8364", VA = "0xDC8364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF98", Offset = "0x9BAF98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600087C")]
			[Address(RVA = "0xDC83B4", Offset = "0xDC83B4", VA = "0xDC83B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAFA8", Offset = "0x9BAFA8")]
			private set
			{
			}
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xDC8408", Offset = "0xDC8408", VA = "0xDC8408")]
		private void Awake()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xDC8780", Offset = "0xDC8780", VA = "0xDC8780")]
		private void Update()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xDC870C", Offset = "0xDC870C", VA = "0xDC870C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BAFB8", Offset = "0x9BAFB8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xDC409C", Offset = "0xDC409C", VA = "0xDC409C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xDC8834", Offset = "0xDC8834", VA = "0xDC8834")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xDC7858", Offset = "0xDC7858", VA = "0xDC7858")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xDC6A7C", Offset = "0xDC6A7C", VA = "0xDC6A7C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xDC8A14", Offset = "0xDC8A14", VA = "0xDC8A14")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000393")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0xDC9544", Offset = "0xDC9544", VA = "0xDC9544")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700008C")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0xDC8D90", Offset = "0xDC8D90", VA = "0xDC8D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000886")]
			[Address(RVA = "0xDC8D98", Offset = "0xDC8D98", VA = "0xDC8D98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0xDC8DA0", Offset = "0xDC8DA0", VA = "0xDC8DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0xDC8DA8", Offset = "0xDC8DA8", VA = "0xDC8DA8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0xDC8DB0", Offset = "0xDC8DB0", VA = "0xDC8DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB01C", Offset = "0x9BB01C")]
			add
			{
			}
			[Token(Token = "0x600088A")]
			[Address(RVA = "0xDC8E54", Offset = "0xDC8E54", VA = "0xDC8E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB02C", Offset = "0x9BB02C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0xDC8F6C", Offset = "0xDC8F6C", VA = "0xDC8F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB03C", Offset = "0x9BB03C")]
			add
			{
			}
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xDC9010", Offset = "0xDC9010", VA = "0xDC9010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB04C", Offset = "0x9BB04C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xDC9128", Offset = "0xDC9128", VA = "0xDC9128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB05C", Offset = "0x9BB05C")]
			add
			{
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xDC91CC", Offset = "0xDC91CC", VA = "0xDC91CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB06C", Offset = "0x9BB06C")]
			remove
			{
			}
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xDC8EF8", Offset = "0xDC8EF8", VA = "0xDC8EF8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xDC90B4", Offset = "0xDC90B4", VA = "0xDC90B4", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xDC9270", Offset = "0xDC9270", VA = "0xDC9270", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000892")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xDC92E4", Offset = "0xDC92E4", VA = "0xDC92E4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xDC9410", Offset = "0xDC9410", VA = "0xDC9410", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xDC953C", Offset = "0xDC953C", VA = "0xDC953C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40006F0")]
		None,
		[Token(Token = "0x40006F1")]
		Proximity,
		[Token(Token = "0x40006F2")]
		Contact,
		[Token(Token = "0x40006F3")]
		Action
	}
	[Token(Token = "0x2000162")]
	public enum InteractableState
	{
		[Token(Token = "0x40006F5")]
		Default,
		[Token(Token = "0x40006F6")]
		ProximityState,
		[Token(Token = "0x40006F7")]
		ContactState,
		[Token(Token = "0x40006F8")]
		ActionState
	}
	[Token(Token = "0x2000163")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xDC9678", Offset = "0xDC9678", VA = "0xDC9678")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000090")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0xDC9594", Offset = "0xDC9594", VA = "0xDC9594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xDC9348", Offset = "0xDC9348", VA = "0xDC9348")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xDC9474", Offset = "0xDC9474", VA = "0xDC9474")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xDC95FC", Offset = "0xDC95FC", VA = "0xDC95FC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B260C", Offset = "0x9B260C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000197")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001539")]
				[Address(RVA = "0xDCA790", Offset = "0xDCA790", VA = "0xDCA790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600153B")]
				[Address(RVA = "0xDCA7FC", Offset = "0xDCA7FC", VA = "0xDCA7FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001535")]
			[Address(RVA = "0xDCA248", Offset = "0xDCA248", VA = "0xDCA248")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001536")]
			[Address(RVA = "0xDCA37C", Offset = "0xDCA37C", VA = "0xDCA37C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001537")]
			[Address(RVA = "0xDCA3F0", Offset = "0xDCA3F0", VA = "0xDCA3F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001538")]
			[Address(RVA = "0xDCA398", Offset = "0xDCA398", VA = "0xDCA398")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600153A")]
			[Address(RVA = "0xDCA798", Offset = "0xDCA798", VA = "0xDCA798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xDCA13C", Offset = "0xDCA13C", VA = "0xDCA13C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xDCA1B8", Offset = "0xDCA1B8", VA = "0xDCA1B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB07C", Offset = "0x9BB07C")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xDCA274", Offset = "0xDCA274", VA = "0xDCA274")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xDCA374", Offset = "0xDCA374", VA = "0xDCA374")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000091")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0xDC64A0", Offset = "0xDC64A0", VA = "0xDC64A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xDC6608", Offset = "0xDC6608", VA = "0xDC6608")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xDCA804", Offset = "0xDCA804", VA = "0xDCA804")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xDCA8B8", Offset = "0xDCA8B8", VA = "0xDCA8B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xDCAB7C", Offset = "0xDCAB7C", VA = "0xDCAB7C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xDCABC4", Offset = "0xDCABC4", VA = "0xDCABC4")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xDCAE3C", Offset = "0xDCAE3C", VA = "0xDCAE3C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xDCAF78", Offset = "0xDCAF78", VA = "0xDCAF78")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B261C", Offset = "0x9B261C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000199")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600153F")]
				[Address(RVA = "0xDC7A6C", Offset = "0xDC7A6C", VA = "0xDC7A6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001541")]
				[Address(RVA = "0xDC7AD8", Offset = "0xDC7AD8", VA = "0xDC7AD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600153C")]
			[Address(RVA = "0xDC6730", Offset = "0xDC6730", VA = "0xDC6730")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600153D")]
			[Address(RVA = "0xDC7448", Offset = "0xDC7448", VA = "0xDC7448", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600153E")]
			[Address(RVA = "0xDC744C", Offset = "0xDC744C", VA = "0xDC744C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001540")]
			[Address(RVA = "0xDC7A74", Offset = "0xDC7A74", VA = "0xDC7A74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000708")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000092")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0xDC637C", Offset = "0xDC637C", VA = "0xDC637C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000093")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0xDC6384", Offset = "0xDC6384", VA = "0xDC6384", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000094")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0xDC638C", Offset = "0xDC638C", VA = "0xDC638C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public override bool EnableState
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xDC6394", Offset = "0xDC6394", VA = "0xDC6394", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0xDC63C0", Offset = "0xDC63C0", VA = "0xDC63C0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xDC63FC", Offset = "0xDC63FC", VA = "0xDC63FC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xDC66BC", Offset = "0xDC66BC", VA = "0xDC66BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB0E0", Offset = "0x9BB0E0")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xDC675C", Offset = "0xDC675C", VA = "0xDC675C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xDC6C88", Offset = "0xDC6C88", VA = "0xDC6C88")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xDC6F0C", Offset = "0xDC6F0C", VA = "0xDC6F0C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xDC7058", Offset = "0xDC7058", VA = "0xDC7058", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xDC731C", Offset = "0xDC731C", VA = "0xDC731C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xDC7320", Offset = "0xDC7320", VA = "0xDC7320", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xDC7324", Offset = "0xDC7324", VA = "0xDC7324")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4AA8", Offset = "0x9B4AA8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4AB8", Offset = "0x9B4AB8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4AC8", Offset = "0x9B4AC8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000096")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0xDC7AE0", Offset = "0xDC7AE0", VA = "0xDC7AE0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB144", Offset = "0x9BB144")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xDC7AE8", Offset = "0xDC7AE8", VA = "0xDC7AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB154", Offset = "0x9BB154")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public bool EnableState
		{
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0xDC7AF0", Offset = "0xDC7AF0", VA = "0xDC7AF0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xDC7B0C", Offset = "0xDC7B0C", VA = "0xDC7B0C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xDC7B2C", Offset = "0xDC7B2C", VA = "0xDC7B2C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB164", Offset = "0x9BB164")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xDC7B34", Offset = "0xDC7B34", VA = "0xDC7B34", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB174", Offset = "0x9BB174")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public float SphereRadius
		{
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0xDC7B40", Offset = "0xDC7B40", VA = "0xDC7B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB184", Offset = "0x9BB184")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0xDC7B48", Offset = "0xDC7B48", VA = "0xDC7B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB194", Offset = "0x9BB194")]
			private set
			{
			}
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xDC7B50", Offset = "0xDC7B50", VA = "0xDC7B50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xDC7B98", Offset = "0xDC7B98", VA = "0xDC7B98", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xDC7B9C", Offset = "0xDC7B9C", VA = "0xDC7B9C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000169")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000718")]
		None = 0,
		[Token(Token = "0x4000719")]
		Ray = 1,
		[Token(Token = "0x400071A")]
		Poke = 4,
		[Token(Token = "0x400071B")]
		All = -1
	}
	[Token(Token = "0x200016A")]
	public enum ToolInputState
	{
		[Token(Token = "0x400071D")]
		Inactive,
		[Token(Token = "0x400071E")]
		PrimaryInputDown,
		[Token(Token = "0x400071F")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000720")]
		PrimaryInputUp
	}
	[Token(Token = "0x200016B")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xDC72D8", Offset = "0xDC72D8", VA = "0xDC72D8")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200016C")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4AD8", Offset = "0x9B4AD8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4AE8", Offset = "0x9B4AE8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4AF8", Offset = "0x9B4AF8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700009A")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0xDC971C", Offset = "0xDC971C", VA = "0xDC971C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0xDC9724", Offset = "0xDC9724", VA = "0xDC9724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1A4", Offset = "0x9BB1A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0xDC972C", Offset = "0xDC972C", VA = "0xDC972C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1B4", Offset = "0x9BB1B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60008C5")]
			get;
		}

		[Token(Token = "0x1700009D")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60008C6")]
			get;
		}

		[Token(Token = "0x1700009E")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60008C7")]
			get;
		}

		[Token(Token = "0x1700009F")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0xDC9738", Offset = "0xDC9738", VA = "0xDC9738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1C4", Offset = "0x9BB1C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0xDC9744", Offset = "0xDC9744", VA = "0xDC9744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1D4", Offset = "0x9BB1D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0xDC9750", Offset = "0xDC9750", VA = "0xDC9750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1E4", Offset = "0x9BB1E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xDC975C", Offset = "0xDC975C", VA = "0xDC975C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1F4", Offset = "0x9BB1F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60008D0")]
			get;
			[Token(Token = "0x60008D1")]
			set;
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xDC9768", Offset = "0xDC9768", VA = "0xDC9768")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60008CD")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60008CE")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60008CF")]
		public abstract void DeFocus();

		[Token(Token = "0x60008D2")]
		public abstract void Initialize();

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xDC9770", Offset = "0xDC9770", VA = "0xDC9770")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xDC97C0", Offset = "0xDC97C0", VA = "0xDC97C0")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xDC9818", Offset = "0xDC9818", VA = "0xDC9818", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xDC9A6C", Offset = "0xDC9A6C", VA = "0xDC9A6C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xDC7338", Offset = "0xDC7338", VA = "0xDC7338")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170000A2")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60008D8")]
			get;
		}

		[Token(Token = "0x170000A3")]
		bool EnableState
		{
			[Token(Token = "0x60008DA")]
			get;
			[Token(Token = "0x60008DB")]
			set;
		}

		[Token(Token = "0x170000A4")]
		bool ToolActivateState
		{
			[Token(Token = "0x60008DC")]
			get;
			[Token(Token = "0x60008DD")]
			set;
		}

		[Token(Token = "0x60008D9")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200016E")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000396")]
		private enum PinchState
		{
			[Token(Token = "0x4000F2C")]
			None,
			[Token(Token = "0x4000F2D")]
			PinchDown,
			[Token(Token = "0x4000F2E")]
			PinchStay,
			[Token(Token = "0x4000F2F")]
			PinchUp
		}

		[Token(Token = "0x400072D")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170000A5")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0xDCCF48", Offset = "0xDCCF48", VA = "0xDCCF48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A6")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0xDCCFD4", Offset = "0xDCCFD4", VA = "0xDCCFD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A7")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0xDCD060", Offset = "0xDCD060", VA = "0xDCD060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xDCD0EC", Offset = "0xDCD0EC", VA = "0xDCD0EC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xDCD118", Offset = "0xDCD118", VA = "0xDCD118")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000730")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000731")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000732")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000733")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000734")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B4B18", Offset = "0x9B4B18")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000A8")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xDCD3C0", Offset = "0xDCD3C0", VA = "0xDCD3C0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000A9")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0xDCD3C8", Offset = "0xDCD3C8", VA = "0xDCD3C8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000AA")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xDCD430", Offset = "0xDCD430", VA = "0xDCD430", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AB")]
		public override bool EnableState
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0xDCD438", Offset = "0xDCD438", VA = "0xDCD438", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xDCD46C", Offset = "0xDCD46C", VA = "0xDCD46C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xDCD4E0", Offset = "0xDCD4E0", VA = "0xDCD4E0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xDCD540", Offset = "0xDCD540", VA = "0xDCD540")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xDCD5DC", Offset = "0xDCD5DC", VA = "0xDCD5DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xDCD8E4", Offset = "0xDCD8E4", VA = "0xDCD8E4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xDCD9E0", Offset = "0xDCD9E0", VA = "0xDCD9E0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xDCDD50", Offset = "0xDCDD50", VA = "0xDCDD50")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xDCDF10", Offset = "0xDCDF10", VA = "0xDCDF10")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xDCE038", Offset = "0xDCE038", VA = "0xDCE038")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xDCE37C", Offset = "0xDCE37C", VA = "0xDCE37C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xDCE798", Offset = "0xDCE798", VA = "0xDCE798", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xDCE874", Offset = "0xDCE874", VA = "0xDCE874", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xDCE8A8", Offset = "0xDCE8A8", VA = "0xDCE8A8")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000740")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000741")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4B8C", Offset = "0x9B4B8C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000AC")]
		public bool EnableState
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0xDCD450", Offset = "0xDCD450", VA = "0xDCD450", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0xDCD488", Offset = "0xDCD488", VA = "0xDCD488", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0xDCE960", Offset = "0xDCE960", VA = "0xDCE960", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xDCD8A8", Offset = "0xDCD8A8", VA = "0xDCD8A8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0xDCEB9C", Offset = "0xDCEB9C", VA = "0xDCEB9C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB204", Offset = "0x9BB204")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0xDCEBA4", Offset = "0xDCEBA4", VA = "0xDCEBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB214", Offset = "0x9BB214")]
			set
			{
			}
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xDCE968", Offset = "0xDCE968", VA = "0xDCE968")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xDCE7D0", Offset = "0xDCE7D0", VA = "0xDCE7D0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xDCEBAC", Offset = "0xDCEBAC", VA = "0xDCEBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xDCEEE4", Offset = "0xDCEEE4", VA = "0xDCEEE4")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xDCF0D4", Offset = "0xDCF0D4", VA = "0xDCF0D4")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000AF")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0xDC60EC", Offset = "0xDC60EC", VA = "0xDC60EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000900")]
			[Address(RVA = "0xDC60F4", Offset = "0xDC60F4", VA = "0xDC60F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0xDC6184", Offset = "0xDC6184", VA = "0xDC6184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000902")]
			[Address(RVA = "0xDC618C", Offset = "0xDC618C", VA = "0xDC618C")]
			set
			{
			}
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xDC61FC", Offset = "0xDC61FC", VA = "0xDC61FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xDC6354", Offset = "0xDC6354", VA = "0xDC6354")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xDC6364", Offset = "0xDC6364", VA = "0xDC6364")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xDC6374", Offset = "0xDC6374", VA = "0xDC6374")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xDC3BB0", Offset = "0xDC3BB0", VA = "0xDC3BB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xDC3BB4", Offset = "0xDC3BB4", VA = "0xDC3BB4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xDC3C38", Offset = "0xDC3C38", VA = "0xDC3C38")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xDC3D2C", Offset = "0xDC3D2C", VA = "0xDC3D2C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xDC3E20", Offset = "0xDC3E20", VA = "0xDC3E20")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xDC3EE4", Offset = "0xDC3EE4", VA = "0xDC3EE4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xDC3FD8", Offset = "0xDC3FD8", VA = "0xDC3FD8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xDC4024", Offset = "0xDC4024", VA = "0xDC4024")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xDC4184", Offset = "0xDC4184", VA = "0xDC4184")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xDC41F8", Offset = "0xDC41F8", VA = "0xDC41F8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xDC4200", Offset = "0xDC4200", VA = "0xDC4200")]
		private void Start()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xDC4204", Offset = "0xDC4204", VA = "0xDC4204")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xDC41BC", Offset = "0xDC41BC", VA = "0xDC41BC")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xDC4244", Offset = "0xDC4244", VA = "0xDC4244")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B262C", Offset = "0x9B262C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700019B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001545")]
				[Address(RVA = "0xDCCDE8", Offset = "0xDCCDE8", VA = "0xDCCDE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001547")]
				[Address(RVA = "0xDCCE54", Offset = "0xDCCE54", VA = "0xDCCE54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001542")]
			[Address(RVA = "0xDCCB0C", Offset = "0xDCCB0C", VA = "0xDCCB0C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001543")]
			[Address(RVA = "0xDCCBF0", Offset = "0xDCCBF0", VA = "0xDCCBF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001544")]
			[Address(RVA = "0xDCCBF4", Offset = "0xDCCBF4", VA = "0xDCCBF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001546")]
			[Address(RVA = "0xDCCDF0", Offset = "0xDCCDF0", VA = "0xDCCDF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000751")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000752")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xDCC718", Offset = "0xDCC718", VA = "0xDCC718")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xDCC7B0", Offset = "0xDCC7B0", VA = "0xDCC7B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xDCCA44", Offset = "0xDCCA44", VA = "0xDCCA44")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xDCC9D0", Offset = "0xDCC9D0", VA = "0xDCC9D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB224", Offset = "0x9BB224")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xDCCB38", Offset = "0xDCCB38", VA = "0xDCCB38")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000398")]
		public enum SelectionState
		{
			[Token(Token = "0x4000F37")]
			Off,
			[Token(Token = "0x4000F38")]
			Selected,
			[Token(Token = "0x4000F39")]
			Highlighted
		}

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000B1")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600091A")]
			[Address(RVA = "0xDCF134", Offset = "0xDCF134", VA = "0xDCF134")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600091B")]
			[Address(RVA = "0xDCF13C", Offset = "0xDCF13C", VA = "0xDCF13C")]
			set
			{
			}
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xDCF2D0", Offset = "0xDCF2D0", VA = "0xDCF2D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xDCF49C", Offset = "0xDCF49C", VA = "0xDCF49C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xDCF1C4", Offset = "0xDCF1C4", VA = "0xDCF1C4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xDCF584", Offset = "0xDCF584", VA = "0xDCF584")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000399")]
		public enum SegmentType
		{
			[Token(Token = "0x4000F3B")]
			Straight,
			[Token(Token = "0x4000F3C")]
			LeftTurn,
			[Token(Token = "0x4000F3D")]
			RightTurn,
			[Token(Token = "0x4000F3E")]
			Switch
		}

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000767")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000768")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4C6C", Offset = "0x9B4C6C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000B2")]
		public float StartDistance
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0xDCF5F0", Offset = "0xDCF5F0", VA = "0xDCF5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB288", Offset = "0x9BB288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000922")]
			[Address(RVA = "0xDCF5F8", Offset = "0xDCF5F8", VA = "0xDCF5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB298", Offset = "0x9BB298")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public float GridSize
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0xDCF600", Offset = "0xDCF600", VA = "0xDCF600")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xDCF608", Offset = "0xDCF608", VA = "0xDCF608")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public int SubDivCount
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0xDCF610", Offset = "0xDCF610", VA = "0xDCF610")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000926")]
			[Address(RVA = "0xDCF618", Offset = "0xDCF618", VA = "0xDCF618")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public SegmentType Type
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0xDCF620", Offset = "0xDCF620", VA = "0xDCF620")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000B6")]
		public Pose EndPose
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0xDCF628", Offset = "0xDCF628", VA = "0xDCF628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public float Radius
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0xDCFAC0", Offset = "0xDCFAC0", VA = "0xDCFAC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B8")]
		public float SegmentLength
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0xDCF690", Offset = "0xDCF690", VA = "0xDCF690")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xDCFAD0", Offset = "0xDCFAD0", VA = "0xDCFAD0")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xDCFAE8", Offset = "0xDCFAE8", VA = "0xDCFAE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xDCF6D0", Offset = "0xDCF6D0", VA = "0xDCF6D0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xDCFAEC", Offset = "0xDCFAEC", VA = "0xDCFAEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xDCFAF0", Offset = "0xDCFAF0", VA = "0xDCFAF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xDCFB5C", Offset = "0xDCFB5C", VA = "0xDCFB5C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xDD06F0", Offset = "0xDD06F0", VA = "0xDD06F0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xDD0A08", Offset = "0xDD0A08", VA = "0xDD0A08")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B263C", Offset = "0x9B263C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700019D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600154B")]
				[Address(RVA = "0xDD1654", Offset = "0xDD1654", VA = "0xDD1654", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600154D")]
				[Address(RVA = "0xDD16C0", Offset = "0xDD16C0", VA = "0xDD16C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001548")]
			[Address(RVA = "0xDD13A4", Offset = "0xDD13A4", VA = "0xDD13A4")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0xDD14A0", Offset = "0xDD14A0", VA = "0xDD14A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600154A")]
			[Address(RVA = "0xDD14A4", Offset = "0xDD14A4", VA = "0xDD14A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600154C")]
			[Address(RVA = "0xDD165C", Offset = "0xDD165C", VA = "0xDD165C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400076E")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400076F")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xDD0AAC", Offset = "0xDD0AAC", VA = "0xDD0AAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xDD0B5C", Offset = "0xDD0B5C", VA = "0xDD0B5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xDD0C10", Offset = "0xDD0C10", VA = "0xDD0C10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xDD0D40", Offset = "0xDD0D40", VA = "0xDD0D40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xDD0EB4", Offset = "0xDD0EB4", VA = "0xDD0EB4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xDD1054", Offset = "0xDD1054", VA = "0xDD1054")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xDD12D8", Offset = "0xDD12D8", VA = "0xDD12D8")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xDD1170", Offset = "0xDD1170", VA = "0xDD1170")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xDD1184", Offset = "0xDD1184", VA = "0xDD1184")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xDD1330", Offset = "0xDD1330", VA = "0xDD1330")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB2A8", Offset = "0x9BB2A8")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xDD13D0", Offset = "0xDD13D0", VA = "0xDD13D0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000B9")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0xDD16C8", Offset = "0xDD16C8", VA = "0xDD16C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xDD16D8", Offset = "0xDD16D8", VA = "0xDD16D8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xDD16E0", Offset = "0xDD16E0", VA = "0xDD16E0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xDD1B64", Offset = "0xDD1B64", VA = "0xDD1B64")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000782")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000783")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4D6C", Offset = "0x9B4D6C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000BA")]
		public float Distance
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0xDD1C5C", Offset = "0xDD1C5C", VA = "0xDD1C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB30C", Offset = "0x9BB30C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000943")]
			[Address(RVA = "0xDD1C64", Offset = "0xDD1C64", VA = "0xDD1C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB31C", Offset = "0x9BB31C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public float Scale
		{
			[Token(Token = "0x6000944")]
			[Address(RVA = "0xDD1C6C", Offset = "0xDD1C6C", VA = "0xDD1C6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000945")]
			[Address(RVA = "0xDD1C74", Offset = "0xDD1C74", VA = "0xDD1C74")]
			set
			{
			}
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xDD16DC", Offset = "0xDD16DC", VA = "0xDD16DC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xDD1C7C", Offset = "0xDD1C7C", VA = "0xDD1C7C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xDD1730", Offset = "0xDD1730", VA = "0xDD1730")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xDD1A10", Offset = "0xDD1A10", VA = "0xDD1A10")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600094A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xDD1BD4", Offset = "0xDD1BD4", VA = "0xDD1BD4")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B264C", Offset = "0x9B264C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700019F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001551")]
				[Address(RVA = "0xDD2660", Offset = "0xDD2660", VA = "0xDD2660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001553")]
				[Address(RVA = "0xDD26CC", Offset = "0xDD26CC", VA = "0xDD26CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600154E")]
			[Address(RVA = "0xDD2278", Offset = "0xDD2278", VA = "0xDD2278")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600154F")]
			[Address(RVA = "0xDD241C", Offset = "0xDD241C", VA = "0xDD241C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001550")]
			[Address(RVA = "0xDD2420", Offset = "0xDD2420", VA = "0xDD2420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001552")]
			[Address(RVA = "0xDD2668", Offset = "0xDD2668", VA = "0xDD2668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xDD1E5C", Offset = "0xDD1E5C", VA = "0xDD1E5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xDD1EB0", Offset = "0xDD1EB0", VA = "0xDD1EB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xDD1FBC", Offset = "0xDD1FBC", VA = "0xDD1FBC")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xDD2114", Offset = "0xDD2114", VA = "0xDD2114")]
		private void Update()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xDD201C", Offset = "0xDD201C", VA = "0xDD201C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xDD21F4", Offset = "0xDD21F4", VA = "0xDD21F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB32C", Offset = "0x9BB32C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xDD22A4", Offset = "0xDD22A4", VA = "0xDD22A4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xDD235C", Offset = "0xDD235C", VA = "0xDD235C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xDD23BC", Offset = "0xDD23BC", VA = "0xDD23BC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200039C")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000F51")]
			Start,
			[Token(Token = "0x4000F52")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000F53")]
			Stop
		}

		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B265C", Offset = "0x9B265C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170001A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001557")]
				[Address(RVA = "0xDD301C", Offset = "0xDD301C", VA = "0xDD301C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001559")]
				[Address(RVA = "0xDD3088", Offset = "0xDD3088", VA = "0xDD3088", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001554")]
			[Address(RVA = "0xDD29A8", Offset = "0xDD29A8", VA = "0xDD29A8")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001555")]
			[Address(RVA = "0xDD2DF8", Offset = "0xDD2DF8", VA = "0xDD2DF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001556")]
			[Address(RVA = "0xDD2DFC", Offset = "0xDD2DFC", VA = "0xDD2DFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001558")]
			[Address(RVA = "0xDD3024", Offset = "0xDD3024", VA = "0xDD3024", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000796")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000797")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000798")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000799")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B4DCC", Offset = "0x9B4DCC")]
		protected float _initialSpeed;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xDD26D4", Offset = "0xDD26D4", VA = "0xDD26D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xDD2838", Offset = "0xDD2838", VA = "0xDD2838")]
		private void Update()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xDD2844", Offset = "0xDD2844", VA = "0xDD2844", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xDC3BEC", Offset = "0xDC3BEC", VA = "0xDC3BEC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xDD27B0", Offset = "0xDD27B0", VA = "0xDD27B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB390", Offset = "0x9BB390")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xDD29D4", Offset = "0xDD29D4", VA = "0xDD29D4")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xDD2940", Offset = "0xDD2940", VA = "0xDD2940")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xDC3C70", Offset = "0xDC3C70", VA = "0xDC3C70")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xDC3D64", Offset = "0xDC3D64", VA = "0xDC3D64")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xDD2C14", Offset = "0xDD2C14", VA = "0xDD2C14")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xDD2D04", Offset = "0xDD2D04", VA = "0xDD2D04")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xDC3E58", Offset = "0xDC3E58", VA = "0xDC3E58")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xDC3F1C", Offset = "0xDC3F1C", VA = "0xDC3F1C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xDC4014", Offset = "0xDC4014", VA = "0xDC4014")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xDD2D8C", Offset = "0xDD2D8C", VA = "0xDD2D8C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000BC")]
		public float TrackLength
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0xDD3090", Offset = "0xDD3090", VA = "0xDD3090")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000966")]
			[Address(RVA = "0xDD3098", Offset = "0xDD3098", VA = "0xDD3098")]
			private set
			{
			}
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xDD30A0", Offset = "0xDD30A0", VA = "0xDD30A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xDD1D00", Offset = "0xDD1D00", VA = "0xDD1D00")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xDD30A4", Offset = "0xDD30A4", VA = "0xDD30A4")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xDD32A8", Offset = "0xDD32A8", VA = "0xDD32A8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xDD33CC", Offset = "0xDD33CC", VA = "0xDD33CC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class Pose
	{
		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xDCD2A4", Offset = "0xDCD2A4", VA = "0xDCD2A4")]
		public Pose()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xDCD350", Offset = "0xDCD350", VA = "0xDCD350")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B266C", Offset = "0x9B266C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170001A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600155D")]
				[Address(RVA = "0xDD39C0", Offset = "0xDD39C0", VA = "0xDD39C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600155F")]
				[Address(RVA = "0xDD3A2C", Offset = "0xDD3A2C", VA = "0xDD3A2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600155A")]
			[Address(RVA = "0xDD367C", Offset = "0xDD367C", VA = "0xDD367C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600155B")]
			[Address(RVA = "0xDD37E0", Offset = "0xDD37E0", VA = "0xDD37E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600155C")]
			[Address(RVA = "0xDD37E4", Offset = "0xDD37E4", VA = "0xDD37E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600155E")]
			[Address(RVA = "0xDD39C8", Offset = "0xDD39C8", VA = "0xDD39C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B267C", Offset = "0x9B267C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170001A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001563")]
				[Address(RVA = "0xDD3B00", Offset = "0xDD3B00", VA = "0xDD3B00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001565")]
				[Address(RVA = "0xDD3B6C", Offset = "0xDD3B6C", VA = "0xDD3B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001560")]
			[Address(RVA = "0xDD3740", Offset = "0xDD3740", VA = "0xDD3740")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001561")]
			[Address(RVA = "0xDD3A34", Offset = "0xDD3A34", VA = "0xDD3A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001562")]
			[Address(RVA = "0xDD3A38", Offset = "0xDD3A38", VA = "0xDD3A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001564")]
			[Address(RVA = "0xDD3B08", Offset = "0xDD3B08", VA = "0xDD3B08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007BC")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B4FB4", Offset = "0x9B4FB4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000BD")]
		public bool IsMoving
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0xDD33E8", Offset = "0xDD33E8", VA = "0xDD33E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB3F4", Offset = "0x9BB3F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600096F")]
			[Address(RVA = "0xDD33F0", Offset = "0xDD33F0", VA = "0xDD33F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB404", Offset = "0x9BB404")]
			private set
			{
			}
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xDD33FC", Offset = "0xDD33FC", VA = "0xDD33FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xDD3438", Offset = "0xDD3438", VA = "0xDD3438")]
		private void Update()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xDD3590", Offset = "0xDD3590", VA = "0xDD3590")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xDD35F8", Offset = "0xDD35F8", VA = "0xDD35F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB414", Offset = "0x9BB414")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xDD36A8", Offset = "0xDD36A8", VA = "0xDD36A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB478", Offset = "0x9BB478")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xDD376C", Offset = "0xDD376C", VA = "0xDD376C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xDD37D8", Offset = "0xDD37D8", VA = "0xDD37D8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xDD3B74", Offset = "0xDD3B74", VA = "0xDD3B74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xDD3BDC", Offset = "0xDD3BDC", VA = "0xDD3BDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xDD3C9C", Offset = "0xDD3C9C", VA = "0xDD3C9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xDD3DA4", Offset = "0xDD3DA4", VA = "0xDD3DA4")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xDD3E24", Offset = "0xDD3E24", VA = "0xDD3E24")]
		private void Update()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xDD3F04", Offset = "0xDD3F04", VA = "0xDD3F04")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40007CD")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40007CE")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40007CF")]
		EUDT_None,
		[Token(Token = "0x40007D0")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000181")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B268C", Offset = "0x9B268C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170001A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001569")]
				[Address(RVA = "0xDCC6A4", Offset = "0xDCC6A4", VA = "0xDCC6A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600156B")]
				[Address(RVA = "0xDCC710", Offset = "0xDCC710", VA = "0xDCC710", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001566")]
			[Address(RVA = "0xDCBD14", Offset = "0xDCBD14", VA = "0xDCBD14")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001567")]
			[Address(RVA = "0xDCC454", Offset = "0xDCC454", VA = "0xDCC454", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001568")]
			[Address(RVA = "0xDCC458", Offset = "0xDCC458", VA = "0xDCC458", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600156A")]
			[Address(RVA = "0xDCC6AC", Offset = "0xDCC6AC", VA = "0xDCC6AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40007D2")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40007D3")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40007D4")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B4FF4", Offset = "0x9B4FF4")]
		public GameObject mainCamera;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9B502C", Offset = "0x9B502C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xDCB038", Offset = "0xDCB038", VA = "0xDCB038")]
		private void Start()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xDCB828", Offset = "0xDCB828", VA = "0xDCB828")]
		private void Update()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xDCB968", Offset = "0xDCB968", VA = "0xDCB968")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xDCBA98", Offset = "0xDCBA98", VA = "0xDCBA98")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xDCBBC8", Offset = "0xDCBBC8", VA = "0xDCBBC8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xDCB93C", Offset = "0xDCB93C", VA = "0xDCB93C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xDCBCA0", Offset = "0xDCBCA0", VA = "0xDCBCA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB4DC", Offset = "0x9BB4DC")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xDCBD40", Offset = "0xDCBD40", VA = "0xDCBD40")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xDCB3AC", Offset = "0xDCB3AC", VA = "0xDCB3AC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xDCBE68", Offset = "0xDCBE68", VA = "0xDCBE68")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xDCBD74", Offset = "0xDCBD74", VA = "0xDCBD74")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xDCC20C", Offset = "0xDCC20C", VA = "0xDCC20C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xDCC2E8", Offset = "0xDCC2E8", VA = "0xDCC2E8")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xDCC364", Offset = "0xDCC364", VA = "0xDCC364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB540", Offset = "0x9BB540")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xDCC3B4", Offset = "0xDCC3B4", VA = "0xDCC3B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB550", Offset = "0x9BB550")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xDCC404", Offset = "0xDCC404", VA = "0xDCC404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB560", Offset = "0x9BB560")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B1FEC", Offset = "0x9B1FEC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B269C", Offset = "0x9B269C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600156D")]
			[Address(RVA = "0xC88A28", Offset = "0xC88A28", VA = "0xC88A28")]
			public <>c()
			{
			}

			[Token(Token = "0x600156E")]
			[Address(RVA = "0xC88A30", Offset = "0xC88A30", VA = "0xC88A30")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40007E9")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40007EA")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40007EB")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40007EC")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40007ED")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40007EE")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40007EF")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40007F0")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40007F1")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40007F2")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40007F3")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xC87D14", Offset = "0xC87D14", VA = "0xC87D14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xC87D6C", Offset = "0xC87D6C", VA = "0xC87D6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xC8817C", Offset = "0xC8817C", VA = "0xC8817C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xC8828C", Offset = "0xC8828C", VA = "0xC8828C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xC885C8", Offset = "0xC885C8", VA = "0xC885C8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xC88738", Offset = "0xC88738", VA = "0xC88738")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xC88888", Offset = "0xC88888", VA = "0xC88888")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xC88328", Offset = "0xC88328", VA = "0xC88328")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xC883C8", Offset = "0xC883C8", VA = "0xC883C8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xC87FD0", Offset = "0xC87FD0", VA = "0xC87FD0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xC889AC", Offset = "0xC889AC", VA = "0xC889AC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000806")]
		Default,
		[Token(Token = "0x4000807")]
		Generic,
		[Token(Token = "0x4000808")]
		PingPongBall,
		[Token(Token = "0x4000809")]
		Controller
	}
	[Token(Token = "0x2000184")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000BE")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xC88A60", Offset = "0xC88A60", VA = "0xC88A60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xC88A68", Offset = "0xC88A68", VA = "0xC88A68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C0")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0xC88A70", Offset = "0xC88A70", VA = "0xC88A70")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xC88A78", Offset = "0xC88A78", VA = "0xC88A78")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xC88A80", Offset = "0xC88A80", VA = "0xC88A80")]
		private void Update()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xC88CF8", Offset = "0xC88CF8", VA = "0xC88CF8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xC88D54", Offset = "0xC88D54", VA = "0xC88D54")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xC88D9C", Offset = "0xC88D9C", VA = "0xC88D9C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000186")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000811")]
		TRIANGLES,
		[Token(Token = "0x4000812")]
		QUADS
	}
	[Token(Token = "0x2000187")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000814")]
		ABSORPTION,
		[Token(Token = "0x4000815")]
		TRANSMISSION,
		[Token(Token = "0x4000816")]
		SCATTERING
	}
	[Token(Token = "0x2000188")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000189")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xC92F08", Offset = "0xC92F08", VA = "0xC92F08")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xC93008", Offset = "0xC93008", VA = "0xC93008")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xC9312C", Offset = "0xC9312C", VA = "0xC9312C")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xC93250", Offset = "0xC93250", VA = "0xC93250")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xC932A0", Offset = "0xC932A0", VA = "0xC932A0", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public enum AbuseReportType
	{
		[Token(Token = "0x400081D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B50E4", Offset = "0x9B50E4")]
		Unknown,
		[Token(Token = "0x400081E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B511C", Offset = "0x9B511C")]
		Object,
		[Token(Token = "0x400081F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5154", Offset = "0x9B5154")]
		User
	}
	[Token(Token = "0x200018B")]
	public enum AchievementType
	{
		[Token(Token = "0x4000821")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B518C", Offset = "0x9B518C")]
		Unknown,
		[Token(Token = "0x4000822")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B51C4", Offset = "0x9B51C4")]
		Simple,
		[Token(Token = "0x4000823")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B51FC", Offset = "0x9B51FC")]
		Bitfield,
		[Token(Token = "0x4000824")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5234", Offset = "0x9B5234")]
		Count
	}
	[Token(Token = "0x200018C")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xC94594", Offset = "0xC94594", VA = "0xC94594")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xC94700", Offset = "0xC94700", VA = "0xC94700")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xC948A0", Offset = "0xC948A0", VA = "0xC948A0")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xC94E14", Offset = "0xC94E14", VA = "0xC94E14")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xC94F14", Offset = "0xC94F14", VA = "0xC94F14")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xC94B88", Offset = "0xC94B88", VA = "0xC94B88")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xC95038", Offset = "0xC95038", VA = "0xC95038", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public static class Callback
	{
		[Token(Token = "0x20003A2")]
		private class RequestCallback
		{
			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x600156F")]
			[Address(RVA = "0xF21DA8", Offset = "0xF21DA8", VA = "0xF21DA8")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001570")]
			[Address(RVA = "0xF215F8", Offset = "0xF215F8", VA = "0xF215F8")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6001571")]
			[Address(RVA = "0xF21DB0", Offset = "0xF21DB0", VA = "0xF21DB0", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20003A3")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6001572")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001573")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x60009AC")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xF214F8", Offset = "0xF214F8", VA = "0xF214F8")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xF21624", Offset = "0xF21624", VA = "0xF21624")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xF216F8", Offset = "0xF216F8", VA = "0xF216F8")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xF21A1C", Offset = "0xF21A1C", VA = "0xF21A1C")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xF21AB4", Offset = "0xF21AB4", VA = "0xF21AB4")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xF21B50", Offset = "0xF21B50", VA = "0xF21B50")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xF21868", Offset = "0xF21868", VA = "0xF21868")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xF22174", Offset = "0xF22174", VA = "0xF22174")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xF221FC", Offset = "0xF221FC", VA = "0xF221FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xF222F8", Offset = "0xF222F8", VA = "0xF222F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xF22384", Offset = "0xF22384", VA = "0xF22384")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xF22388", Offset = "0xF22388", VA = "0xF22388")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xF223E4", Offset = "0xF223E4", VA = "0xF223E4")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class CAPI
	{
		[Token(Token = "0x20003A4")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6001574")]
			[Address(RVA = "0xA61088", Offset = "0xA61088", VA = "0xA61088")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6001575")]
			[Address(RVA = "0xA610A0", Offset = "0xA610A0", VA = "0xA610A0")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6001576")]
			[Address(RVA = "0xA610BC", Offset = "0xA610BC", VA = "0xA610BC")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20003A5")]
		public struct ovrNetSyncVec3
		{
			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;
		}

		[Token(Token = "0x20003A6")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x6001577")]
			[Address(RVA = "0xA61188", Offset = "0xA61188", VA = "0xA61188")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20003A7")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20003A8")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9B26AC", Offset = "0x9B26AC")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x400082B")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x400082D")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xC96838", Offset = "0xC96838", VA = "0xC96838")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xC969FC", Offset = "0xC969FC", VA = "0xC969FC")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xC96F00", Offset = "0xC96F00", VA = "0xC96F00")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xC96FC0", Offset = "0xC96FC0", VA = "0xC96FC0")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xC972E8", Offset = "0xC972E8", VA = "0xC972E8")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xC97400", Offset = "0xC97400", VA = "0xC97400")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xC9748C", Offset = "0xC9748C", VA = "0xC9748C")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xC974FC", Offset = "0xC974FC", VA = "0xC974FC")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xC975EC", Offset = "0xC975EC", VA = "0xC975EC")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xC976D8", Offset = "0xC976D8", VA = "0xC976D8")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xC9777C", Offset = "0xC9777C", VA = "0xC9777C")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xC94648", Offset = "0xC94648", VA = "0xC94648")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xC978F8", Offset = "0xC978F8", VA = "0xC978F8")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xC947EC", Offset = "0xC947EC", VA = "0xC947EC")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xC97994", Offset = "0xC97994", VA = "0xC97994")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xC97A5C", Offset = "0xC97A5C", VA = "0xC97A5C")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xC97B54", Offset = "0xC97B54", VA = "0xC97B54")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xC97C1C", Offset = "0xC97C1C", VA = "0xC97C1C")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xC97CE4", Offset = "0xC97CE4", VA = "0xC97CE4")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xC97DA8", Offset = "0xC97DA8", VA = "0xC97DA8")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xC97E60", Offset = "0xC97E60", VA = "0xC97E60")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xC97EC0", Offset = "0xC97EC0", VA = "0xC97EC0")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xC97F4C", Offset = "0xC97F4C", VA = "0xC97F4C")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xC97FD8", Offset = "0xC97FD8", VA = "0xC97FD8")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xC98074", Offset = "0xC98074", VA = "0xC98074")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xC98100", Offset = "0xC98100", VA = "0xC98100")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xC9819C", Offset = "0xC9819C", VA = "0xC9819C")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xC98228", Offset = "0xC98228", VA = "0xC98228")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xC982C4", Offset = "0xC982C4", VA = "0xC982C4")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xC98380", Offset = "0xC98380", VA = "0xC98380")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xC9840C", Offset = "0xC9840C", VA = "0xC9840C")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xC984A8", Offset = "0xC984A8", VA = "0xC984A8")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xC98544", Offset = "0xC98544", VA = "0xC98544")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xC985E0", Offset = "0xC985E0", VA = "0xC985E0")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xC94354", Offset = "0xC94354", VA = "0xC94354")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xC9866C", Offset = "0xC9866C", VA = "0xC9866C")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xC986F8", Offset = "0xC986F8", VA = "0xC986F8")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xC98798", Offset = "0xC98798", VA = "0xC98798")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xC98848", Offset = "0xC98848", VA = "0xC98848")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xC98B58", Offset = "0xC98B58", VA = "0xC98B58")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xC94D10", Offset = "0xC94D10", VA = "0xC94D10")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xC98C14", Offset = "0xC98C14", VA = "0xC98C14")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xC98D0C", Offset = "0xC98D0C", VA = "0xC98D0C")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xC98E84", Offset = "0xC98E84", VA = "0xC98E84")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xC98F48", Offset = "0xC98F48", VA = "0xC98F48")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xC98FE0", Offset = "0xC98FE0", VA = "0xC98FE0")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xC99048", Offset = "0xC99048", VA = "0xC99048")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xC990E4", Offset = "0xC990E4", VA = "0xC990E4")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xC991A0", Offset = "0xC991A0", VA = "0xC991A0")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xC9925C", Offset = "0xC9925C", VA = "0xC9925C")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xC99318", Offset = "0xC99318", VA = "0xC99318")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xC993D4", Offset = "0xC993D4", VA = "0xC993D4")]
		public static extern bool ovr_NetSync_GetListenerPosition(long connection_id, ulong sessionId, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xC99490", Offset = "0xC99490", VA = "0xC99490")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamFloatPCM(long connection_id, ulong sessionId, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xC9955C", Offset = "0xC9955C", VA = "0xC9955C")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamInt16PCM(long connection_id, ulong session_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xC99628", Offset = "0xC99628", VA = "0xC99628")]
		public static extern UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();

		[PreserveSig]
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xC996B4", Offset = "0xC996B4", VA = "0xC996B4")]
		public static extern void ovr_NetSync_SetListenerPosition(long connection_id, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xC99760", Offset = "0xC99760", VA = "0xC99760")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xC997FC", Offset = "0xC997FC", VA = "0xC997FC")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xC99890", Offset = "0xC99890", VA = "0xC99890")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xC9992C", Offset = "0xC9992C", VA = "0xC9992C")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xC999B8", Offset = "0xC999B8", VA = "0xC999B8")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xC99A54", Offset = "0xC99A54", VA = "0xC99A54")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xC99AF8", Offset = "0xC99AF8", VA = "0xC99AF8")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xC99B94", Offset = "0xC99B94", VA = "0xC99B94")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xC99C20", Offset = "0xC99C20", VA = "0xC99C20")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xC99CF4", Offset = "0xC99CF4", VA = "0xC99CF4")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xC99DB8", Offset = "0xC99DB8", VA = "0xC99DB8")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xC99E44", Offset = "0xC99E44", VA = "0xC99E44")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xC99ED0", Offset = "0xC99ED0", VA = "0xC99ED0")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xC99F64", Offset = "0xC99F64", VA = "0xC99F64")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xC99FF0", Offset = "0xC99FF0", VA = "0xC99FF0")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xC9A08C", Offset = "0xC9A08C", VA = "0xC9A08C")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xC9A128", Offset = "0xC9A128", VA = "0xC9A128")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xC9A1C4", Offset = "0xC9A1C4", VA = "0xC9A1C4")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xC9A250", Offset = "0xC9A250", VA = "0xC9A250")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xC9A30C", Offset = "0xC9A30C", VA = "0xC9A30C")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xC9A3C8", Offset = "0xC9A3C8", VA = "0xC9A3C8")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xC9A464", Offset = "0xC9A464", VA = "0xC9A464")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xC9A538", Offset = "0xC9A538", VA = "0xC9A538")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xC9A60C", Offset = "0xC9A60C", VA = "0xC9A60C")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xC9A6A8", Offset = "0xC9A6A8", VA = "0xC9A6A8")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xC9A744", Offset = "0xC9A744", VA = "0xC9A744")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xC9A7F0", Offset = "0xC9A7F0", VA = "0xC9A7F0")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xC9A87C", Offset = "0xC9A87C", VA = "0xC9A87C")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xC9A908", Offset = "0xC9A908", VA = "0xC9A908")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xC9A9A4", Offset = "0xC9A9A4", VA = "0xC9A9A4")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xC9AA40", Offset = "0xC9AA40", VA = "0xC9AA40")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xC9AADC", Offset = "0xC9AADC", VA = "0xC9AADC")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xC9AB78", Offset = "0xC9AB78", VA = "0xC9AB78")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xC93514", Offset = "0xC93514", VA = "0xC93514")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xC9AC14", Offset = "0xC9AC14", VA = "0xC9AC14")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xC936EC", Offset = "0xC936EC", VA = "0xC936EC")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xC9ACC0", Offset = "0xC9ACC0", VA = "0xC9ACC0")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xC938C8", Offset = "0xC938C8", VA = "0xC938C8")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xC93A5C", Offset = "0xC93A5C", VA = "0xC93A5C")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xC93C14", Offset = "0xC93C14", VA = "0xC93C14")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xC93EAC", Offset = "0xC93EAC", VA = "0xC93EAC")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xC94130", Offset = "0xC94130", VA = "0xC94130")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xC9AD6C", Offset = "0xC9AD6C", VA = "0xC9AD6C")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xC9AE08", Offset = "0xC9AE08", VA = "0xC9AE08")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xC9AEB4", Offset = "0xC9AEB4", VA = "0xC9AEB4")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xC949B0", Offset = "0xC949B0", VA = "0xC949B0")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xC94BD8", Offset = "0xC94BD8", VA = "0xC94BD8")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xC9AF40", Offset = "0xC9AF40", VA = "0xC9AF40")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xC9AFCC", Offset = "0xC9AFCC", VA = "0xC9AFCC")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xC9B058", Offset = "0xC9B058", VA = "0xC9B058")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xC9B100", Offset = "0xC9B100", VA = "0xC9B100")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xC952A4", Offset = "0xC952A4", VA = "0xC952A4")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xC95458", Offset = "0xC95458", VA = "0xC95458")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xC9560C", Offset = "0xC9560C", VA = "0xC9560C")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xC9B19C", Offset = "0xC9B19C", VA = "0xC9B19C")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xC957CC", Offset = "0xC957CC", VA = "0xC957CC")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xC95980", Offset = "0xC95980", VA = "0xC95980")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xC95B34", Offset = "0xC95B34", VA = "0xC95B34")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xC9B238", Offset = "0xC9B238", VA = "0xC9B238")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xC95CF4", Offset = "0xC95CF4", VA = "0xC95CF4")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xC95EA8", Offset = "0xC95EA8", VA = "0xC95EA8")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xC9605C", Offset = "0xC9605C", VA = "0xC9605C")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xC9B2D4", Offset = "0xC9B2D4", VA = "0xC9B2D4")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xC9620C", Offset = "0xC9620C", VA = "0xC9620C")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xC963B0", Offset = "0xC963B0", VA = "0xC963B0")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xC96564", Offset = "0xC96564", VA = "0xC96564")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xC96718", Offset = "0xC96718", VA = "0xC96718")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xC9B370", Offset = "0xC9B370", VA = "0xC9B370")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xC9B40C", Offset = "0xC9B40C", VA = "0xC9B40C")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xC9B4E0", Offset = "0xC9B4E0", VA = "0xC9B4E0")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xC9B58C", Offset = "0xC9B58C", VA = "0xC9B58C")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xC9B658", Offset = "0xC9B658", VA = "0xC9B658")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xC9B714", Offset = "0xC9B714", VA = "0xC9B714")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xC9B7E0", Offset = "0xC9B7E0", VA = "0xC9B7E0")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xC9B8B4", Offset = "0xC9B8B4", VA = "0xC9B8B4")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xC9B960", Offset = "0xC9B960", VA = "0xC9B960")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xC9BA34", Offset = "0xC9BA34", VA = "0xC9BA34")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xC9BAE0", Offset = "0xC9BAE0", VA = "0xC9BAE0")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xC9BB88", Offset = "0xC9BB88", VA = "0xC9BB88")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xC9BC24", Offset = "0xC9BC24", VA = "0xC9BC24")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xC9BCF8", Offset = "0xC9BCF8", VA = "0xC9BCF8")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xC9BDA4", Offset = "0xC9BDA4", VA = "0xC9BDA4")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xC9BE4C", Offset = "0xC9BE4C", VA = "0xC9BE4C")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xC9BEE8", Offset = "0xC9BEE8", VA = "0xC9BEE8")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xC9BFBC", Offset = "0xC9BFBC", VA = "0xC9BFBC")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xC9C068", Offset = "0xC9C068", VA = "0xC9C068")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xC9C15C", Offset = "0xC9C15C", VA = "0xC9C15C")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xC9C210", Offset = "0xC9C210", VA = "0xC9C210")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xC9C304", Offset = "0xC9C304", VA = "0xC9C304")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xC9C3B8", Offset = "0xC9C3B8", VA = "0xC9C3B8")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xC9C4D4", Offset = "0xC9C4D4", VA = "0xC9C4D4")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xC9C5B8", Offset = "0xC9C5B8", VA = "0xC9C5B8")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xC9C644", Offset = "0xC9C644", VA = "0xC9C644")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xC9C6D0", Offset = "0xC9C6D0", VA = "0xC9C6D0")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xC9C778", Offset = "0xC9C778", VA = "0xC9C778")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xC9C814", Offset = "0xC9C814", VA = "0xC9C814")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xC9C8BC", Offset = "0xC9C8BC", VA = "0xC9C8BC")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xC9C958", Offset = "0xC9C958", VA = "0xC9C958")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xC9C9E4", Offset = "0xC9C9E4", VA = "0xC9C9E4")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xC9CA8C", Offset = "0xC9CA8C", VA = "0xC9CA8C")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xC9CB28", Offset = "0xC9CB28", VA = "0xC9CB28")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xC9CBD0", Offset = "0xC9CBD0", VA = "0xC9CBD0")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xC9CC68", Offset = "0xC9CC68", VA = "0xC9CC68")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xC9CD10", Offset = "0xC9CD10", VA = "0xC9CD10")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xC9CDAC", Offset = "0xC9CDAC", VA = "0xC9CDAC")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xC9CE80", Offset = "0xC9CE80", VA = "0xC9CE80")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xC9CF2C", Offset = "0xC9CF2C", VA = "0xC9CF2C")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xC9D08C", Offset = "0xC9D08C", VA = "0xC9D08C")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xC9D234", Offset = "0xC9D234", VA = "0xC9D234")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xC9D2DC", Offset = "0xC9D2DC", VA = "0xC9D2DC")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xC9D378", Offset = "0xC9D378", VA = "0xC9D378")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xC9D420", Offset = "0xC9D420", VA = "0xC9D420")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xC9D4BC", Offset = "0xC9D4BC", VA = "0xC9D4BC")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xC9D628", Offset = "0xC9D628", VA = "0xC9D628")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xC9D6B4", Offset = "0xC9D6B4", VA = "0xC9D6B4")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xC9D740", Offset = "0xC9D740", VA = "0xC9D740")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xC9D7E8", Offset = "0xC9D7E8", VA = "0xC9D7E8")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xC9D884", Offset = "0xC9D884", VA = "0xC9D884")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xC9D910", Offset = "0xC9D910", VA = "0xC9D910")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xC9D9B8", Offset = "0xC9D9B8", VA = "0xC9D9B8")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xC9DA54", Offset = "0xC9DA54", VA = "0xC9DA54")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xC9DB24", Offset = "0xC9DB24", VA = "0xC9DB24")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xC9DBE8", Offset = "0xC9DBE8", VA = "0xC9DBE8")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xC9DCA8", Offset = "0xC9DCA8", VA = "0xC9DCA8")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xC9DD5C", Offset = "0xC9DD5C", VA = "0xC9DD5C")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xC9DDF8", Offset = "0xC9DDF8", VA = "0xC9DDF8")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xC9DE94", Offset = "0xC9DE94", VA = "0xC9DE94")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xC9DF6C", Offset = "0xC9DF6C", VA = "0xC9DF6C")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xC9E040", Offset = "0xC9E040", VA = "0xC9E040")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xC9E0CC", Offset = "0xC9E0CC", VA = "0xC9E0CC")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xC9E174", Offset = "0xC9E174", VA = "0xC9E174")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xC9E210", Offset = "0xC9E210", VA = "0xC9E210")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xC9E29C", Offset = "0xC9E29C", VA = "0xC9E29C")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xC9E328", Offset = "0xC9E328", VA = "0xC9E328")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xC9E3B4", Offset = "0xC9E3B4", VA = "0xC9E3B4")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xC9E460", Offset = "0xC9E460", VA = "0xC9E460")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xC9E4EC", Offset = "0xC9E4EC", VA = "0xC9E4EC")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xC9E578", Offset = "0xC9E578", VA = "0xC9E578")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xC9E614", Offset = "0xC9E614", VA = "0xC9E614")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xC9E6B0", Offset = "0xC9E6B0", VA = "0xC9E6B0")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xC9E768", Offset = "0xC9E768", VA = "0xC9E768")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xC9E814", Offset = "0xC9E814", VA = "0xC9E814")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xC9E8CC", Offset = "0xC9E8CC", VA = "0xC9E8CC")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xC9E978", Offset = "0xC9E978", VA = "0xC9E978")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xC9EA4C", Offset = "0xC9EA4C", VA = "0xC9EA4C")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xC9EAF8", Offset = "0xC9EAF8", VA = "0xC9EAF8")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xC9EB84", Offset = "0xC9EB84", VA = "0xC9EB84")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xC9EC54", Offset = "0xC9EC54", VA = "0xC9EC54")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xC9ED18", Offset = "0xC9ED18", VA = "0xC9ED18")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xC9EDD0", Offset = "0xC9EDD0", VA = "0xC9EDD0")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xC9EE7C", Offset = "0xC9EE7C", VA = "0xC9EE7C")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xC9EF3C", Offset = "0xC9EF3C", VA = "0xC9EF3C")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xC9EFF0", Offset = "0xC9EFF0", VA = "0xC9EFF0")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xC9F0A8", Offset = "0xC9F0A8", VA = "0xC9F0A8")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xC9F154", Offset = "0xC9F154", VA = "0xC9F154")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xC9F20C", Offset = "0xC9F20C", VA = "0xC9F20C")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xC9F2B8", Offset = "0xC9F2B8", VA = "0xC9F2B8")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xC9F370", Offset = "0xC9F370", VA = "0xC9F370")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xC9F41C", Offset = "0xC9F41C", VA = "0xC9F41C")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xC9F4C8", Offset = "0xC9F4C8", VA = "0xC9F4C8")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xC9F574", Offset = "0xC9F574", VA = "0xC9F574")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xC9F600", Offset = "0xC9F600", VA = "0xC9F600")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xC9F6C0", Offset = "0xC9F6C0", VA = "0xC9F6C0")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xC9F774", Offset = "0xC9F774", VA = "0xC9F774")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xC9F820", Offset = "0xC9F820", VA = "0xC9F820")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xC9F8D8", Offset = "0xC9F8D8", VA = "0xC9F8D8")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xC9FA50", Offset = "0xC9FA50", VA = "0xC9FA50")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xC9FAEC", Offset = "0xC9FAEC", VA = "0xC9FAEC")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xC9FBC8", Offset = "0xC9FBC8", VA = "0xC9FBC8")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xC9FC7C", Offset = "0xC9FC7C", VA = "0xC9FC7C")]
		public static extern ulong ovr_NetSync_Connect(IntPtr connect_options);

		[PreserveSig]
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xC9FD18", Offset = "0xC9FD18", VA = "0xC9FD18")]
		public static extern ulong ovr_NetSync_Disconnect(long connection_id);

		[PreserveSig]
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xC9FDB4", Offset = "0xC9FDB4", VA = "0xC9FDB4")]
		public static extern ulong ovr_NetSync_GetSessions(long connection_id);

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xC9FE50", Offset = "0xC9FE50", VA = "0xC9FE50")]
		public static ulong ovr_NetSync_SetVoipGroup(long connection_id, string group_id)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xC9FF0C", Offset = "0xC9FF0C", VA = "0xC9FF0C")]
		private static extern ulong ovr_NetSync_SetVoipGroup_Native(long connection_id, IntPtr group_id);

		[PreserveSig]
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xC9FFB8", Offset = "0xC9FFB8", VA = "0xC9FFB8")]
		public static extern ulong ovr_NetSync_SetVoipMicSource(long connection_id, NetSyncVoipMicSource mic_source);

		[PreserveSig]
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xCA0064", Offset = "0xCA0064", VA = "0xCA0064")]
		public static extern ulong ovr_NetSync_SetVoipSessionMuted(long connection_id, ulong session_id, bool muted);

		[PreserveSig]
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xCA0118", Offset = "0xCA0118", VA = "0xCA0118")]
		public static extern ulong ovr_NetSync_SetVoipStreamMode(long connection_id, ulong sessionId, NetSyncVoipStreamMode streamMode);

		[PreserveSig]
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xCA01CC", Offset = "0xCA01CC", VA = "0xCA01CC")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xCA0258", Offset = "0xCA0258", VA = "0xCA0258")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xCA02F4", Offset = "0xCA02F4", VA = "0xCA02F4")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xCA0380", Offset = "0xCA0380", VA = "0xCA0380")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xCA042C", Offset = "0xCA042C", VA = "0xCA042C")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xCA04C8", Offset = "0xCA04C8", VA = "0xCA04C8")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xCA0554", Offset = "0xCA0554", VA = "0xCA0554")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xCA05F0", Offset = "0xCA05F0", VA = "0xCA05F0")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xCA0698", Offset = "0xCA0698", VA = "0xCA0698")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xCA0734", Offset = "0xCA0734", VA = "0xCA0734")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xCA07D0", Offset = "0xCA07D0", VA = "0xCA07D0")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xCA085C", Offset = "0xCA085C", VA = "0xCA085C")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xCA08E8", Offset = "0xCA08E8", VA = "0xCA08E8")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xCA0984", Offset = "0xCA0984", VA = "0xCA0984")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xCA0A38", Offset = "0xCA0A38", VA = "0xCA0A38")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xCA0AEC", Offset = "0xCA0AEC", VA = "0xCA0AEC")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xCA0B88", Offset = "0xCA0B88", VA = "0xCA0B88")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xCA0C14", Offset = "0xCA0C14", VA = "0xCA0C14")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xCA0CB0", Offset = "0xCA0CB0", VA = "0xCA0CB0")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xCA0D3C", Offset = "0xCA0D3C", VA = "0xCA0D3C")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xCA0DD8", Offset = "0xCA0DD8", VA = "0xCA0DD8")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xCA0E64", Offset = "0xCA0E64", VA = "0xCA0E64")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xCA0F00", Offset = "0xCA0F00", VA = "0xCA0F00")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xCA0FBC", Offset = "0xCA0FBC", VA = "0xCA0FBC")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xCA1068", Offset = "0xCA1068", VA = "0xCA1068")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xCA1114", Offset = "0xCA1114", VA = "0xCA1114")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xCA11C0", Offset = "0xCA11C0", VA = "0xCA11C0")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xCA1270", Offset = "0xCA1270", VA = "0xCA1270")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xCA130C", Offset = "0xCA130C", VA = "0xCA130C")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xCA13A8", Offset = "0xCA13A8", VA = "0xCA13A8")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xCA1464", Offset = "0xCA1464", VA = "0xCA1464")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xCA1510", Offset = "0xCA1510", VA = "0xCA1510")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xCA15C8", Offset = "0xCA15C8", VA = "0xCA15C8")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xCA173C", Offset = "0xCA173C", VA = "0xCA173C")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xCA17E8", Offset = "0xCA17E8", VA = "0xCA17E8")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xCA1894", Offset = "0xCA1894", VA = "0xCA1894")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xCA1940", Offset = "0xCA1940", VA = "0xCA1940")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xCA19DC", Offset = "0xCA19DC", VA = "0xCA19DC")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xCA1A78", Offset = "0xCA1A78", VA = "0xCA1A78")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xCA1B20", Offset = "0xCA1B20", VA = "0xCA1B20")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xCA1BBC", Offset = "0xCA1BBC", VA = "0xCA1BBC")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xCA1C58", Offset = "0xCA1C58", VA = "0xCA1C58")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xCA1CE4", Offset = "0xCA1CE4", VA = "0xCA1CE4")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xCA1D80", Offset = "0xCA1D80", VA = "0xCA1D80")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xCA1E0C", Offset = "0xCA1E0C", VA = "0xCA1E0C")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xCA1E98", Offset = "0xCA1E98", VA = "0xCA1E98")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xCA1F24", Offset = "0xCA1F24", VA = "0xCA1F24")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xCA1FC0", Offset = "0xCA1FC0", VA = "0xCA1FC0")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xCA205C", Offset = "0xCA205C", VA = "0xCA205C")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xCA20E8", Offset = "0xCA20E8", VA = "0xCA20E8")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xCA2174", Offset = "0xCA2174", VA = "0xCA2174")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xCA2210", Offset = "0xCA2210", VA = "0xCA2210")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xCA22AC", Offset = "0xCA22AC", VA = "0xCA22AC")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xCA2348", Offset = "0xCA2348", VA = "0xCA2348")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xCA23E4", Offset = "0xCA23E4", VA = "0xCA23E4")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xCA2490", Offset = "0xCA2490", VA = "0xCA2490")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xCA252C", Offset = "0xCA252C", VA = "0xCA252C")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xCA25B8", Offset = "0xCA25B8", VA = "0xCA25B8")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xCA2644", Offset = "0xCA2644", VA = "0xCA2644")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xCA26D0", Offset = "0xCA26D0", VA = "0xCA26D0")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xCA275C", Offset = "0xCA275C", VA = "0xCA275C")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xCA2818", Offset = "0xCA2818", VA = "0xCA2818")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xCA28C4", Offset = "0xCA28C4", VA = "0xCA28C4")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xCA2988", Offset = "0xCA2988", VA = "0xCA2988")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xCA2A3C", Offset = "0xCA2A3C", VA = "0xCA2A3C")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xCA2AFC", Offset = "0xCA2AFC", VA = "0xCA2AFC")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xCA2BB8", Offset = "0xCA2BB8", VA = "0xCA2BB8")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xCA2C54", Offset = "0xCA2C54", VA = "0xCA2C54")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xCA2CBC", Offset = "0xCA2CBC", VA = "0xCA2CBC")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xCA2D58", Offset = "0xCA2D58", VA = "0xCA2D58")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xCA2DF4", Offset = "0xCA2DF4", VA = "0xCA2DF4")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xCA2E5C", Offset = "0xCA2E5C", VA = "0xCA2E5C")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xCA2EF8", Offset = "0xCA2EF8", VA = "0xCA2EF8")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xCA2F94", Offset = "0xCA2F94", VA = "0xCA2F94")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xCA3030", Offset = "0xCA3030", VA = "0xCA3030")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xCA30DC", Offset = "0xCA30DC", VA = "0xCA30DC")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xCA3144", Offset = "0xCA3144", VA = "0xCA3144")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xCA31E0", Offset = "0xCA31E0", VA = "0xCA31E0")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xCA327C", Offset = "0xCA327C", VA = "0xCA327C")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xCA3320", Offset = "0xCA3320", VA = "0xCA3320")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xCA3388", Offset = "0xCA3388", VA = "0xCA3388")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xCA3424", Offset = "0xCA3424", VA = "0xCA3424")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xCA34C0", Offset = "0xCA34C0", VA = "0xCA34C0")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xCA3564", Offset = "0xCA3564", VA = "0xCA3564")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xCA35CC", Offset = "0xCA35CC", VA = "0xCA35CC")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xCA3668", Offset = "0xCA3668", VA = "0xCA3668")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xCA36D0", Offset = "0xCA36D0", VA = "0xCA36D0")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xCA376C", Offset = "0xCA376C", VA = "0xCA376C")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xCA3818", Offset = "0xCA3818", VA = "0xCA3818")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xCA3880", Offset = "0xCA3880", VA = "0xCA3880")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xCA391C", Offset = "0xCA391C", VA = "0xCA391C")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xCA39B8", Offset = "0xCA39B8", VA = "0xCA39B8")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xCA3A5C", Offset = "0xCA3A5C", VA = "0xCA3A5C")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xCA3B00", Offset = "0xCA3B00", VA = "0xCA3B00")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xCA3B68", Offset = "0xCA3B68", VA = "0xCA3B68")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xCA3C04", Offset = "0xCA3C04", VA = "0xCA3C04")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xCA3CA0", Offset = "0xCA3CA0", VA = "0xCA3CA0")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xCA3D3C", Offset = "0xCA3D3C", VA = "0xCA3D3C")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xCA3DA4", Offset = "0xCA3DA4", VA = "0xCA3DA4")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xCA3E40", Offset = "0xCA3E40", VA = "0xCA3E40")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xCA3EDC", Offset = "0xCA3EDC", VA = "0xCA3EDC")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xCA3F44", Offset = "0xCA3F44", VA = "0xCA3F44")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xCA3FE0", Offset = "0xCA3FE0", VA = "0xCA3FE0")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xCA407C", Offset = "0xCA407C", VA = "0xCA407C")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xCA40E4", Offset = "0xCA40E4", VA = "0xCA40E4")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xCA4180", Offset = "0xCA4180", VA = "0xCA4180")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xCA41E8", Offset = "0xCA41E8", VA = "0xCA41E8")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xCA4284", Offset = "0xCA4284", VA = "0xCA4284")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xCA42EC", Offset = "0xCA42EC", VA = "0xCA42EC")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xCA4388", Offset = "0xCA4388", VA = "0xCA4388")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xCA43F0", Offset = "0xCA43F0", VA = "0xCA43F0")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xCA448C", Offset = "0xCA448C", VA = "0xCA448C")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xCA4528", Offset = "0xCA4528", VA = "0xCA4528")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xCA4590", Offset = "0xCA4590", VA = "0xCA4590")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xCA462C", Offset = "0xCA462C", VA = "0xCA462C")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xCA46D8", Offset = "0xCA46D8", VA = "0xCA46D8")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xCA4774", Offset = "0xCA4774", VA = "0xCA4774")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xCA4810", Offset = "0xCA4810", VA = "0xCA4810")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xCA48AC", Offset = "0xCA48AC", VA = "0xCA48AC")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xCA4914", Offset = "0xCA4914", VA = "0xCA4914")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xCA49B0", Offset = "0xCA49B0", VA = "0xCA49B0")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xCA4A54", Offset = "0xCA4A54", VA = "0xCA4A54")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xCA4AF0", Offset = "0xCA4AF0", VA = "0xCA4AF0")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xCA4B8C", Offset = "0xCA4B8C", VA = "0xCA4B8C")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xCA4BF4", Offset = "0xCA4BF4", VA = "0xCA4BF4")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xCA4C90", Offset = "0xCA4C90", VA = "0xCA4C90")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xCA4D34", Offset = "0xCA4D34", VA = "0xCA4D34")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xCA4DD0", Offset = "0xCA4DD0", VA = "0xCA4DD0")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xCA4E38", Offset = "0xCA4E38", VA = "0xCA4E38")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xCA4ED4", Offset = "0xCA4ED4", VA = "0xCA4ED4")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xCA4F70", Offset = "0xCA4F70", VA = "0xCA4F70")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xCA500C", Offset = "0xCA500C", VA = "0xCA500C")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xCA50A8", Offset = "0xCA50A8", VA = "0xCA50A8")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xCA5144", Offset = "0xCA5144", VA = "0xCA5144")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xCA51E8", Offset = "0xCA51E8", VA = "0xCA51E8")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xCA5284", Offset = "0xCA5284", VA = "0xCA5284")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xCA5320", Offset = "0xCA5320", VA = "0xCA5320")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xCA5388", Offset = "0xCA5388", VA = "0xCA5388")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xCA5424", Offset = "0xCA5424", VA = "0xCA5424")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xCA54C0", Offset = "0xCA54C0", VA = "0xCA54C0")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xCA555C", Offset = "0xCA555C", VA = "0xCA555C")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xCA55C4", Offset = "0xCA55C4", VA = "0xCA55C4")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xCA5660", Offset = "0xCA5660", VA = "0xCA5660")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xCA570C", Offset = "0xCA570C", VA = "0xCA570C")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xCA57A8", Offset = "0xCA57A8", VA = "0xCA57A8")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xCA5810", Offset = "0xCA5810", VA = "0xCA5810")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xCA58AC", Offset = "0xCA58AC", VA = "0xCA58AC")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xCA5948", Offset = "0xCA5948", VA = "0xCA5948")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xCA59E4", Offset = "0xCA59E4", VA = "0xCA59E4")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xCA5A4C", Offset = "0xCA5A4C", VA = "0xCA5A4C")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xCA5AE8", Offset = "0xCA5AE8", VA = "0xCA5AE8")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xCA5C00", Offset = "0xCA5C00", VA = "0xCA5C00")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xCA5B64", Offset = "0xCA5B64", VA = "0xCA5B64")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xCA5C9C", Offset = "0xCA5C9C", VA = "0xCA5C9C")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xCA5D04", Offset = "0xCA5D04", VA = "0xCA5D04")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xCA5DA0", Offset = "0xCA5DA0", VA = "0xCA5DA0")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xCA5E08", Offset = "0xCA5E08", VA = "0xCA5E08")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xCA5EA4", Offset = "0xCA5EA4", VA = "0xCA5EA4")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xCA5F40", Offset = "0xCA5F40", VA = "0xCA5F40")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xCA5FDC", Offset = "0xCA5FDC", VA = "0xCA5FDC")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xCA6044", Offset = "0xCA6044", VA = "0xCA6044")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xCA60E0", Offset = "0xCA60E0", VA = "0xCA60E0")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xCA6148", Offset = "0xCA6148", VA = "0xCA6148")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xCA61E4", Offset = "0xCA61E4", VA = "0xCA61E4")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xCA6280", Offset = "0xCA6280", VA = "0xCA6280")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xCA631C", Offset = "0xCA631C", VA = "0xCA631C")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xCA6384", Offset = "0xCA6384", VA = "0xCA6384")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xCA6420", Offset = "0xCA6420", VA = "0xCA6420")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xCA64CC", Offset = "0xCA64CC", VA = "0xCA64CC")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xCA6534", Offset = "0xCA6534", VA = "0xCA6534")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xCA65D0", Offset = "0xCA65D0", VA = "0xCA65D0")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xCA666C", Offset = "0xCA666C", VA = "0xCA666C")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xCA6710", Offset = "0xCA6710", VA = "0xCA6710")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xCA6778", Offset = "0xCA6778", VA = "0xCA6778")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xCA6814", Offset = "0xCA6814", VA = "0xCA6814")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xCA687C", Offset = "0xCA687C", VA = "0xCA687C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xCA6918", Offset = "0xCA6918", VA = "0xCA6918")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xCA69B4", Offset = "0xCA69B4", VA = "0xCA69B4")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xCA6A1C", Offset = "0xCA6A1C", VA = "0xCA6A1C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xCA6AB8", Offset = "0xCA6AB8", VA = "0xCA6AB8")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xCA6B74", Offset = "0xCA6B74", VA = "0xCA6B74")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xC971B0", Offset = "0xC971B0", VA = "0xC971B0")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xCA6C20", Offset = "0xCA6C20", VA = "0xCA6C20")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xC97114", Offset = "0xC97114", VA = "0xC97114")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xC97228", Offset = "0xC97228", VA = "0xC97228")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xCA6CCC", Offset = "0xCA6CCC", VA = "0xCA6CCC")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xCA6D78", Offset = "0xCA6D78", VA = "0xCA6D78")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xCA6DE0", Offset = "0xCA6DE0", VA = "0xCA6DE0")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xCA6E7C", Offset = "0xCA6E7C", VA = "0xCA6E7C")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xCA6EE4", Offset = "0xCA6EE4", VA = "0xCA6EE4")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xCA6F80", Offset = "0xCA6F80", VA = "0xCA6F80")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xCA6FE8", Offset = "0xCA6FE8", VA = "0xCA6FE8")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xCA7084", Offset = "0xCA7084", VA = "0xCA7084")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xCA7130", Offset = "0xCA7130", VA = "0xCA7130")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xCA7198", Offset = "0xCA7198", VA = "0xCA7198")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xCA7234", Offset = "0xCA7234", VA = "0xCA7234")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xCA72D0", Offset = "0xCA72D0", VA = "0xCA72D0")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xCA7374", Offset = "0xCA7374", VA = "0xCA7374")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xCA740C", Offset = "0xCA740C", VA = "0xCA740C")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xCA7474", Offset = "0xCA7474", VA = "0xCA7474")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xCA7510", Offset = "0xCA7510", VA = "0xCA7510")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xCA75AC", Offset = "0xCA75AC", VA = "0xCA75AC")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xCA7614", Offset = "0xCA7614", VA = "0xCA7614")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xCA76B0", Offset = "0xCA76B0", VA = "0xCA76B0")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xCA774C", Offset = "0xCA774C", VA = "0xCA774C")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xCA77E8", Offset = "0xCA77E8", VA = "0xCA77E8")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xCA7884", Offset = "0xCA7884", VA = "0xCA7884")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xCA7928", Offset = "0xCA7928", VA = "0xCA7928")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xCA7990", Offset = "0xCA7990", VA = "0xCA7990")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xCA7A2C", Offset = "0xCA7A2C", VA = "0xCA7A2C")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xCA7A94", Offset = "0xCA7A94", VA = "0xCA7A94")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xCA7B30", Offset = "0xCA7B30", VA = "0xCA7B30")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xCA7B98", Offset = "0xCA7B98", VA = "0xCA7B98")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xCA7C34", Offset = "0xCA7C34", VA = "0xCA7C34")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xCA7CD0", Offset = "0xCA7CD0", VA = "0xCA7CD0")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xCA7D38", Offset = "0xCA7D38", VA = "0xCA7D38")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xCA7DD4", Offset = "0xCA7DD4", VA = "0xCA7DD4")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xCA7E80", Offset = "0xCA7E80", VA = "0xCA7E80")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xCA7F1C", Offset = "0xCA7F1C", VA = "0xCA7F1C")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xCA7F84", Offset = "0xCA7F84", VA = "0xCA7F84")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xCA8020", Offset = "0xCA8020", VA = "0xCA8020")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xCA8088", Offset = "0xCA8088", VA = "0xCA8088")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xCA8124", Offset = "0xCA8124", VA = "0xCA8124")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xCA818C", Offset = "0xCA818C", VA = "0xCA818C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xCA8228", Offset = "0xCA8228", VA = "0xCA8228")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xCA82CC", Offset = "0xCA82CC", VA = "0xCA82CC")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xCA8370", Offset = "0xCA8370", VA = "0xCA8370")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xCA83D8", Offset = "0xCA83D8", VA = "0xCA83D8")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xCA8474", Offset = "0xCA8474", VA = "0xCA8474")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xCA84DC", Offset = "0xCA84DC", VA = "0xCA84DC")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xCA8578", Offset = "0xCA8578", VA = "0xCA8578")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xCA85E0", Offset = "0xCA85E0", VA = "0xCA85E0")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xCA867C", Offset = "0xCA867C", VA = "0xCA867C")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xCA8718", Offset = "0xCA8718", VA = "0xCA8718")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xCA87B4", Offset = "0xCA87B4", VA = "0xCA87B4")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xCA8850", Offset = "0xCA8850", VA = "0xCA8850")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xCA88F4", Offset = "0xCA88F4", VA = "0xCA88F4")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xCA8998", Offset = "0xCA8998", VA = "0xCA8998")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xCA8A3C", Offset = "0xCA8A3C", VA = "0xCA8A3C")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xCA8AD8", Offset = "0xCA8AD8", VA = "0xCA8AD8")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xCA8B7C", Offset = "0xCA8B7C", VA = "0xCA8B7C")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xCA8C20", Offset = "0xCA8C20", VA = "0xCA8C20")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xCA8D38", Offset = "0xCA8D38", VA = "0xCA8D38")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xCA8C9C", Offset = "0xCA8C9C", VA = "0xCA8C9C")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xCA8DD4", Offset = "0xCA8DD4", VA = "0xCA8DD4")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xCA8E70", Offset = "0xCA8E70", VA = "0xCA8E70")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xCA8F0C", Offset = "0xCA8F0C", VA = "0xCA8F0C")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xCA8F74", Offset = "0xCA8F74", VA = "0xCA8F74")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xCA9010", Offset = "0xCA9010", VA = "0xCA9010")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xCA90AC", Offset = "0xCA90AC", VA = "0xCA90AC")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xCA9158", Offset = "0xCA9158", VA = "0xCA9158")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xCA91C0", Offset = "0xCA91C0", VA = "0xCA91C0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xCA925C", Offset = "0xCA925C", VA = "0xCA925C")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xCA92C4", Offset = "0xCA92C4", VA = "0xCA92C4")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xCA9360", Offset = "0xCA9360", VA = "0xCA9360")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xCA93FC", Offset = "0xCA93FC", VA = "0xCA93FC")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xCA9498", Offset = "0xCA9498", VA = "0xCA9498")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xCA953C", Offset = "0xCA953C", VA = "0xCA953C")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xCA95E0", Offset = "0xCA95E0", VA = "0xCA95E0")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xCA9684", Offset = "0xCA9684", VA = "0xCA9684")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xCA96EC", Offset = "0xCA96EC", VA = "0xCA96EC")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xCA9788", Offset = "0xCA9788", VA = "0xCA9788")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xCA9824", Offset = "0xCA9824", VA = "0xCA9824")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xCA988C", Offset = "0xCA988C", VA = "0xCA988C")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xCA9928", Offset = "0xCA9928", VA = "0xCA9928")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xCA99D4", Offset = "0xCA99D4", VA = "0xCA99D4")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xCA9A70", Offset = "0xCA9A70", VA = "0xCA9A70")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xCA9B14", Offset = "0xCA9B14", VA = "0xCA9B14")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xCA9BB0", Offset = "0xCA9BB0", VA = "0xCA9BB0")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xCA9C54", Offset = "0xCA9C54", VA = "0xCA9C54")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xCA9CF8", Offset = "0xCA9CF8", VA = "0xCA9CF8")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xCA9D9C", Offset = "0xCA9D9C", VA = "0xCA9D9C")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xCA9E38", Offset = "0xCA9E38", VA = "0xCA9E38")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xCA9EDC", Offset = "0xCA9EDC", VA = "0xCA9EDC")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xCA9F78", Offset = "0xCA9F78", VA = "0xCA9F78")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xCAA014", Offset = "0xCAA014", VA = "0xCAA014")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xCAA07C", Offset = "0xCAA07C", VA = "0xCAA07C")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xCAA118", Offset = "0xCAA118", VA = "0xCAA118")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xCAA1B4", Offset = "0xCAA1B4", VA = "0xCAA1B4")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xCAA250", Offset = "0xCAA250", VA = "0xCAA250")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xCAA2F4", Offset = "0xCAA2F4", VA = "0xCAA2F4")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xCAA390", Offset = "0xCAA390", VA = "0xCAA390")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xCAA42C", Offset = "0xCAA42C", VA = "0xCAA42C")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xCAA4C8", Offset = "0xCAA4C8", VA = "0xCAA4C8")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xCAA530", Offset = "0xCAA530", VA = "0xCAA530")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xCAA5CC", Offset = "0xCAA5CC", VA = "0xCAA5CC")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xCAA678", Offset = "0xCAA678", VA = "0xCAA678")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xCAA714", Offset = "0xCAA714", VA = "0xCAA714")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xCAA7B0", Offset = "0xCAA7B0", VA = "0xCAA7B0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xCAA84C", Offset = "0xCAA84C", VA = "0xCAA84C")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xCAA8B4", Offset = "0xCAA8B4", VA = "0xCAA8B4")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xCAA950", Offset = "0xCAA950", VA = "0xCAA950")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xCAA9EC", Offset = "0xCAA9EC", VA = "0xCAA9EC")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xCAAA98", Offset = "0xCAAA98", VA = "0xCAAA98")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xCAAB00", Offset = "0xCAAB00", VA = "0xCAAB00")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xCAAB9C", Offset = "0xCAAB9C", VA = "0xCAAB9C")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xCAAC38", Offset = "0xCAAC38", VA = "0xCAAC38")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xCAACDC", Offset = "0xCAACDC", VA = "0xCAACDC")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xCAAD78", Offset = "0xCAAD78", VA = "0xCAAD78")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xCAAE14", Offset = "0xCAAE14", VA = "0xCAAE14")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xCAAEB0", Offset = "0xCAAEB0", VA = "0xCAAEB0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xCAAF4C", Offset = "0xCAAF4C", VA = "0xCAAF4C")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xCAAFB4", Offset = "0xCAAFB4", VA = "0xCAAFB4")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xCAB050", Offset = "0xCAB050", VA = "0xCAB050")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xCAB0EC", Offset = "0xCAB0EC", VA = "0xCAB0EC")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xCAB154", Offset = "0xCAB154", VA = "0xCAB154")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xCAB1F0", Offset = "0xCAB1F0", VA = "0xCAB1F0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xCAB28C", Offset = "0xCAB28C", VA = "0xCAB28C")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xCAB328", Offset = "0xCAB328", VA = "0xCAB328")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xCAB3D4", Offset = "0xCAB3D4", VA = "0xCAB3D4")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xCAB470", Offset = "0xCAB470", VA = "0xCAB470")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xCAB50C", Offset = "0xCAB50C", VA = "0xCAB50C")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xCAB5A8", Offset = "0xCAB5A8", VA = "0xCAB5A8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xCAB654", Offset = "0xCAB654", VA = "0xCAB654")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xCAB6F0", Offset = "0xCAB6F0", VA = "0xCAB6F0")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xCAB78C", Offset = "0xCAB78C", VA = "0xCAB78C")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xCAB828", Offset = "0xCAB828", VA = "0xCAB828")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xCAB890", Offset = "0xCAB890", VA = "0xCAB890")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xCAB92C", Offset = "0xCAB92C", VA = "0xCAB92C")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xCAB9C8", Offset = "0xCAB9C8", VA = "0xCAB9C8")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xCABA64", Offset = "0xCABA64", VA = "0xCABA64")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xCABB08", Offset = "0xCABB08", VA = "0xCABB08")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xCABBB4", Offset = "0xCABBB4", VA = "0xCABBB4")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xCABC50", Offset = "0xCABC50", VA = "0xCABC50")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xCABCEC", Offset = "0xCABCEC", VA = "0xCABCEC")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xCABD88", Offset = "0xCABD88", VA = "0xCABD88")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xCABE24", Offset = "0xCABE24", VA = "0xCABE24")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xCABEC0", Offset = "0xCABEC0", VA = "0xCABEC0")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xCABF5C", Offset = "0xCABF5C", VA = "0xCABF5C")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xCABFF8", Offset = "0xCABFF8", VA = "0xCABFF8")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xCAC094", Offset = "0xCAC094", VA = "0xCAC094")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xCAC130", Offset = "0xCAC130", VA = "0xCAC130")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xCAC1CC", Offset = "0xCAC1CC", VA = "0xCAC1CC")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xCAC268", Offset = "0xCAC268", VA = "0xCAC268")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xCAC304", Offset = "0xCAC304", VA = "0xCAC304")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xCAC3A0", Offset = "0xCAC3A0", VA = "0xCAC3A0")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xCAC43C", Offset = "0xCAC43C", VA = "0xCAC43C")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xCAC4D8", Offset = "0xCAC4D8", VA = "0xCAC4D8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xCAC574", Offset = "0xCAC574", VA = "0xCAC574")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xCAC610", Offset = "0xCAC610", VA = "0xCAC610")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xCAC6AC", Offset = "0xCAC6AC", VA = "0xCAC6AC")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xCAC748", Offset = "0xCAC748", VA = "0xCAC748")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xCAC7E4", Offset = "0xCAC7E4", VA = "0xCAC7E4")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xCAC880", Offset = "0xCAC880", VA = "0xCAC880")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xCAC91C", Offset = "0xCAC91C", VA = "0xCAC91C")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xCAC9B8", Offset = "0xCAC9B8", VA = "0xCAC9B8")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xCACA54", Offset = "0xCACA54", VA = "0xCACA54")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xCACAF0", Offset = "0xCACAF0", VA = "0xCACAF0")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xCACB8C", Offset = "0xCACB8C", VA = "0xCACB8C")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xCACC28", Offset = "0xCACC28", VA = "0xCACC28")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xCACCC4", Offset = "0xCACCC4", VA = "0xCACCC4")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xCACD60", Offset = "0xCACD60", VA = "0xCACD60")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xCACDFC", Offset = "0xCACDFC", VA = "0xCACDFC")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xCACE98", Offset = "0xCACE98", VA = "0xCACE98")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xCACF34", Offset = "0xCACF34", VA = "0xCACF34")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xCACFD0", Offset = "0xCACFD0", VA = "0xCACFD0")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xCAD06C", Offset = "0xCAD06C", VA = "0xCAD06C")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xCAD108", Offset = "0xCAD108", VA = "0xCAD108")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xCAD1A4", Offset = "0xCAD1A4", VA = "0xCAD1A4")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xCAD240", Offset = "0xCAD240", VA = "0xCAD240")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xCAD2DC", Offset = "0xCAD2DC", VA = "0xCAD2DC")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xCAD378", Offset = "0xCAD378", VA = "0xCAD378")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xCAD414", Offset = "0xCAD414", VA = "0xCAD414")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xCAD4B0", Offset = "0xCAD4B0", VA = "0xCAD4B0")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xCAD54C", Offset = "0xCAD54C", VA = "0xCAD54C")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xCAD5E8", Offset = "0xCAD5E8", VA = "0xCAD5E8")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xCAD684", Offset = "0xCAD684", VA = "0xCAD684")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xCAD720", Offset = "0xCAD720", VA = "0xCAD720")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xCAD7BC", Offset = "0xCAD7BC", VA = "0xCAD7BC")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xCAD858", Offset = "0xCAD858", VA = "0xCAD858")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xCAD8F4", Offset = "0xCAD8F4", VA = "0xCAD8F4")]
		public static extern IntPtr ovr_Message_GetNetSyncConnection(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xCAD990", Offset = "0xCAD990", VA = "0xCAD990")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xCADA2C", Offset = "0xCADA2C", VA = "0xCADA2C")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xCADAC8", Offset = "0xCADAC8", VA = "0xCADAC8")]
		public static extern IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xCADB64", Offset = "0xCADB64", VA = "0xCADB64")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xCADC00", Offset = "0xCADC00", VA = "0xCADC00")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xCADC9C", Offset = "0xCADC9C", VA = "0xCADC9C")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xCADD38", Offset = "0xCADD38", VA = "0xCADD38")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xCADDD4", Offset = "0xCADDD4", VA = "0xCADDD4")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xCADE70", Offset = "0xCADE70", VA = "0xCADE70")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xCADF0C", Offset = "0xCADF0C", VA = "0xCADF0C")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xCADFA8", Offset = "0xCADFA8", VA = "0xCADFA8")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xCAE044", Offset = "0xCAE044", VA = "0xCAE044")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xCAE0E0", Offset = "0xCAE0E0", VA = "0xCAE0E0")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xCAE17C", Offset = "0xCAE17C", VA = "0xCAE17C")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xCAE218", Offset = "0xCAE218", VA = "0xCAE218")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xCAE2B4", Offset = "0xCAE2B4", VA = "0xCAE2B4")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xCAE350", Offset = "0xCAE350", VA = "0xCAE350")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xCAE3EC", Offset = "0xCAE3EC", VA = "0xCAE3EC")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xCAE488", Offset = "0xCAE488", VA = "0xCAE488")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xCAE524", Offset = "0xCAE524", VA = "0xCAE524")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xCAE5C0", Offset = "0xCAE5C0", VA = "0xCAE5C0")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xCAE65C", Offset = "0xCAE65C", VA = "0xCAE65C")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xCAE6C4", Offset = "0xCAE6C4", VA = "0xCAE6C4")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xCAE760", Offset = "0xCAE760", VA = "0xCAE760")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xCAE7FC", Offset = "0xCAE7FC", VA = "0xCAE7FC")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xCAE898", Offset = "0xCAE898", VA = "0xCAE898")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xCAE934", Offset = "0xCAE934", VA = "0xCAE934")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xCAE9D0", Offset = "0xCAE9D0", VA = "0xCAE9D0")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xCAEA6C", Offset = "0xCAEA6C", VA = "0xCAEA6C")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xCAEB08", Offset = "0xCAEB08", VA = "0xCAEB08")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xCAEBA4", Offset = "0xCAEBA4", VA = "0xCAEBA4")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xCAEC40", Offset = "0xCAEC40", VA = "0xCAEC40")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xCAECE4", Offset = "0xCAECE4", VA = "0xCAECE4")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xCAED80", Offset = "0xCAED80", VA = "0xCAED80")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xCAEE1C", Offset = "0xCAEE1C", VA = "0xCAEE1C")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xCAEED8", Offset = "0xCAEED8", VA = "0xCAEED8")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xCAEF94", Offset = "0xCAEF94", VA = "0xCAEF94")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xCAF050", Offset = "0xCAF050", VA = "0xCAF050")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xCAF0FC", Offset = "0xCAF0FC", VA = "0xCAF0FC")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xCAF198", Offset = "0xCAF198", VA = "0xCAF198")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xCAF234", Offset = "0xCAF234", VA = "0xCAF234")]
		public static extern long ovr_NetSyncConnection_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xCAF2D0", Offset = "0xCAF2D0", VA = "0xCAF2D0")]
		public static extern NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xCAF36C", Offset = "0xCAF36C", VA = "0xCAF36C")]
		public static extern ulong ovr_NetSyncConnection_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xCAF408", Offset = "0xCAF408", VA = "0xCAF408")]
		public static extern NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(IntPtr obj);

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xCAF4A4", Offset = "0xCAF4A4", VA = "0xCAF4A4")]
		public static string ovr_NetSyncConnection_GetZoneId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xCAF50C", Offset = "0xCAF50C", VA = "0xCAF50C")]
		private static extern IntPtr ovr_NetSyncConnection_GetZoneId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xCAF5A8", Offset = "0xCAF5A8", VA = "0xCAF5A8")]
		public static extern long ovr_NetSyncSession_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xCAF644", Offset = "0xCAF644", VA = "0xCAF644")]
		public static extern bool ovr_NetSyncSession_GetMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xCAF6E8", Offset = "0xCAF6E8", VA = "0xCAF6E8")]
		public static extern ulong ovr_NetSyncSession_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xCAF784", Offset = "0xCAF784", VA = "0xCAF784")]
		public static extern ulong ovr_NetSyncSession_GetUserId(IntPtr obj);

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xCAF820", Offset = "0xCAF820", VA = "0xCAF820")]
		public static string ovr_NetSyncSession_GetVoipGroup(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xCAF888", Offset = "0xCAF888", VA = "0xCAF888")]
		private static extern IntPtr ovr_NetSyncSession_GetVoipGroup_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xCAF924", Offset = "0xCAF924", VA = "0xCAF924")]
		public static extern IntPtr ovr_NetSyncSessionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xCAF9D0", Offset = "0xCAF9D0", VA = "0xCAF9D0")]
		public static extern UIntPtr ovr_NetSyncSessionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xCAFA6C", Offset = "0xCAFA6C", VA = "0xCAFA6C")]
		public static extern long ovr_NetSyncSessionsChangedNotification_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xCAFB08", Offset = "0xCAFB08", VA = "0xCAFB08")]
		public static extern IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xCAFBA4", Offset = "0xCAFBA4", VA = "0xCAFBA4")]
		public static extern IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xCAFC40", Offset = "0xCAFC40", VA = "0xCAFC40")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xCAFCDC", Offset = "0xCAFCDC", VA = "0xCAFCDC")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xCAFD78", Offset = "0xCAFD78", VA = "0xCAFD78")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xCAFE14", Offset = "0xCAFE14", VA = "0xCAFE14")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xCAFEB0", Offset = "0xCAFEB0", VA = "0xCAFEB0")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xCAFF4C", Offset = "0xCAFF4C", VA = "0xCAFF4C")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xCAFFE8", Offset = "0xCAFFE8", VA = "0xCAFFE8")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xCB0084", Offset = "0xCB0084", VA = "0xCB0084")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xCB0120", Offset = "0xCB0120", VA = "0xCB0120")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xCB01BC", Offset = "0xCB01BC", VA = "0xCB01BC")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xCB0258", Offset = "0xCB0258", VA = "0xCB0258")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xCB02F4", Offset = "0xCB02F4", VA = "0xCB02F4")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xCB038C", Offset = "0xCB038C", VA = "0xCB038C")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xCB0428", Offset = "0xCB0428", VA = "0xCB0428")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xCB04C0", Offset = "0xCB04C0", VA = "0xCB04C0")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xCB055C", Offset = "0xCB055C", VA = "0xCB055C")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xCB05F8", Offset = "0xCB05F8", VA = "0xCB05F8")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xCB0694", Offset = "0xCB0694", VA = "0xCB0694")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xCB06FC", Offset = "0xCB06FC", VA = "0xCB06FC")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xCB0798", Offset = "0xCB0798", VA = "0xCB0798")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCB0800", Offset = "0xCB0800", VA = "0xCB0800")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xCB089C", Offset = "0xCB089C", VA = "0xCB089C")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xCB0938", Offset = "0xCB0938", VA = "0xCB0938")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xCB09A0", Offset = "0xCB09A0", VA = "0xCB09A0")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xCB0A3C", Offset = "0xCB0A3C", VA = "0xCB0A3C")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xCB0AA4", Offset = "0xCB0AA4", VA = "0xCB0AA4")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xCB0B40", Offset = "0xCB0B40", VA = "0xCB0B40")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xCB0BEC", Offset = "0xCB0BEC", VA = "0xCB0BEC")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xCB0C88", Offset = "0xCB0C88", VA = "0xCB0C88")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xCB0D24", Offset = "0xCB0D24", VA = "0xCB0D24")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xCB0DC0", Offset = "0xCB0DC0", VA = "0xCB0DC0")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xCB0E64", Offset = "0xCB0E64", VA = "0xCB0E64")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xCB0F00", Offset = "0xCB0F00", VA = "0xCB0F00")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xCB0F9C", Offset = "0xCB0F9C", VA = "0xCB0F9C")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xCB1004", Offset = "0xCB1004", VA = "0xCB1004")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xCB10A0", Offset = "0xCB10A0", VA = "0xCB10A0")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xCB1108", Offset = "0xCB1108", VA = "0xCB1108")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xCB11A4", Offset = "0xCB11A4", VA = "0xCB11A4")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xCB120C", Offset = "0xCB120C", VA = "0xCB120C")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xCB12A8", Offset = "0xCB12A8", VA = "0xCB12A8")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xCB1310", Offset = "0xCB1310", VA = "0xCB1310")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xCB13AC", Offset = "0xCB13AC", VA = "0xCB13AC")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xCB1414", Offset = "0xCB1414", VA = "0xCB1414")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xCB14B0", Offset = "0xCB14B0", VA = "0xCB14B0")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xCB1518", Offset = "0xCB1518", VA = "0xCB1518")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xCB15B4", Offset = "0xCB15B4", VA = "0xCB15B4")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xCB1660", Offset = "0xCB1660", VA = "0xCB1660")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xCB16C8", Offset = "0xCB16C8", VA = "0xCB16C8")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xCB1764", Offset = "0xCB1764", VA = "0xCB1764")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xCB1800", Offset = "0xCB1800", VA = "0xCB1800")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xCB18A4", Offset = "0xCB18A4", VA = "0xCB18A4")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xCB190C", Offset = "0xCB190C", VA = "0xCB190C")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xCB19A8", Offset = "0xCB19A8", VA = "0xCB19A8")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xCB1A10", Offset = "0xCB1A10", VA = "0xCB1A10")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xCB1AAC", Offset = "0xCB1AAC", VA = "0xCB1AAC")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xCB1B48", Offset = "0xCB1B48", VA = "0xCB1B48")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xCB1BB0", Offset = "0xCB1BB0", VA = "0xCB1BB0")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xCB1C4C", Offset = "0xCB1C4C", VA = "0xCB1C4C")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xCB1CF8", Offset = "0xCB1CF8", VA = "0xCB1CF8")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xCB1D60", Offset = "0xCB1D60", VA = "0xCB1D60")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xCB1DFC", Offset = "0xCB1DFC", VA = "0xCB1DFC")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xCB1E98", Offset = "0xCB1E98", VA = "0xCB1E98")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xCB1F3C", Offset = "0xCB1F3C", VA = "0xCB1F3C")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xCB1FD8", Offset = "0xCB1FD8", VA = "0xCB1FD8")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xCB2074", Offset = "0xCB2074", VA = "0xCB2074")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xCB20DC", Offset = "0xCB20DC", VA = "0xCB20DC")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xCB2178", Offset = "0xCB2178", VA = "0xCB2178")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xCB2214", Offset = "0xCB2214", VA = "0xCB2214")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xCB22B0", Offset = "0xCB22B0", VA = "0xCB22B0")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xCB2354", Offset = "0xCB2354", VA = "0xCB2354")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xCB23F0", Offset = "0xCB23F0", VA = "0xCB23F0")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xCB248C", Offset = "0xCB248C", VA = "0xCB248C")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xCB2528", Offset = "0xCB2528", VA = "0xCB2528")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xCB25C4", Offset = "0xCB25C4", VA = "0xCB25C4")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xCB262C", Offset = "0xCB262C", VA = "0xCB262C")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xCB26C8", Offset = "0xCB26C8", VA = "0xCB26C8")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xCB2760", Offset = "0xCB2760", VA = "0xCB2760")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xCB27F8", Offset = "0xCB27F8", VA = "0xCB27F8")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xCB2894", Offset = "0xCB2894", VA = "0xCB2894")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xCB292C", Offset = "0xCB292C", VA = "0xCB292C")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xCB29C8", Offset = "0xCB29C8", VA = "0xCB29C8")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xCB2A74", Offset = "0xCB2A74", VA = "0xCB2A74")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xCB2ADC", Offset = "0xCB2ADC", VA = "0xCB2ADC")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xCB2B78", Offset = "0xCB2B78", VA = "0xCB2B78")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xCB2C14", Offset = "0xCB2C14", VA = "0xCB2C14")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xCB2CB8", Offset = "0xCB2CB8", VA = "0xCB2CB8")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xCB2D54", Offset = "0xCB2D54", VA = "0xCB2D54")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xCB2DF0", Offset = "0xCB2DF0", VA = "0xCB2DF0")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xCB2E8C", Offset = "0xCB2E8C", VA = "0xCB2E8C")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xCB2EF4", Offset = "0xCB2EF4", VA = "0xCB2EF4")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xCB2F90", Offset = "0xCB2F90", VA = "0xCB2F90")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xCB303C", Offset = "0xCB303C", VA = "0xCB303C")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xCB30A4", Offset = "0xCB30A4", VA = "0xCB30A4")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xCB3140", Offset = "0xCB3140", VA = "0xCB3140")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xCB31DC", Offset = "0xCB31DC", VA = "0xCB31DC")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xCB3280", Offset = "0xCB3280", VA = "0xCB3280")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xCB331C", Offset = "0xCB331C", VA = "0xCB331C")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xCB33B8", Offset = "0xCB33B8", VA = "0xCB33B8")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xCB3464", Offset = "0xCB3464", VA = "0xCB3464")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xCB3500", Offset = "0xCB3500", VA = "0xCB3500")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xCB359C", Offset = "0xCB359C", VA = "0xCB359C")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xCB3640", Offset = "0xCB3640", VA = "0xCB3640")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xCB36DC", Offset = "0xCB36DC", VA = "0xCB36DC")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xCB3778", Offset = "0xCB3778", VA = "0xCB3778")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xCB3814", Offset = "0xCB3814", VA = "0xCB3814")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xCB38B0", Offset = "0xCB38B0", VA = "0xCB38B0")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xCB394C", Offset = "0xCB394C", VA = "0xCB394C")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xCB39E8", Offset = "0xCB39E8", VA = "0xCB39E8")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xCB3A50", Offset = "0xCB3A50", VA = "0xCB3A50")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xCB3AEC", Offset = "0xCB3AEC", VA = "0xCB3AEC")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xCB3B98", Offset = "0xCB3B98", VA = "0xCB3B98")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xCB3C34", Offset = "0xCB3C34", VA = "0xCB3C34")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xCB3C9C", Offset = "0xCB3C9C", VA = "0xCB3C9C")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xCB3D38", Offset = "0xCB3D38", VA = "0xCB3D38")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xCB3DD4", Offset = "0xCB3DD4", VA = "0xCB3DD4")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xCB3E70", Offset = "0xCB3E70", VA = "0xCB3E70")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xCB3ED8", Offset = "0xCB3ED8", VA = "0xCB3ED8")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xCB3F74", Offset = "0xCB3F74", VA = "0xCB3F74")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xCB4010", Offset = "0xCB4010", VA = "0xCB4010")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xCB4078", Offset = "0xCB4078", VA = "0xCB4078")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xCB4114", Offset = "0xCB4114", VA = "0xCB4114")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xCB41B0", Offset = "0xCB41B0", VA = "0xCB41B0")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xCB424C", Offset = "0xCB424C", VA = "0xCB424C")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xCB42B4", Offset = "0xCB42B4", VA = "0xCB42B4")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xCB4350", Offset = "0xCB4350", VA = "0xCB4350")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xCB43EC", Offset = "0xCB43EC", VA = "0xCB43EC")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xCB4488", Offset = "0xCB4488", VA = "0xCB4488")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xCB4534", Offset = "0xCB4534", VA = "0xCB4534")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xCB45D0", Offset = "0xCB45D0", VA = "0xCB45D0")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xCB466C", Offset = "0xCB466C", VA = "0xCB466C")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xCB46D4", Offset = "0xCB46D4", VA = "0xCB46D4")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xCB4770", Offset = "0xCB4770", VA = "0xCB4770")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xCB47D8", Offset = "0xCB47D8", VA = "0xCB47D8")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xCB4874", Offset = "0xCB4874", VA = "0xCB4874")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xCB48DC", Offset = "0xCB48DC", VA = "0xCB48DC")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xCB4978", Offset = "0xCB4978", VA = "0xCB4978")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xCB49E0", Offset = "0xCB49E0", VA = "0xCB49E0")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xCB4A7C", Offset = "0xCB4A7C", VA = "0xCB4A7C")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xCB4AE4", Offset = "0xCB4AE4", VA = "0xCB4AE4")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xCB4B80", Offset = "0xCB4B80", VA = "0xCB4B80")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xCB4BE8", Offset = "0xCB4BE8", VA = "0xCB4BE8")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xCB4C84", Offset = "0xCB4C84", VA = "0xCB4C84")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xCB4D20", Offset = "0xCB4D20", VA = "0xCB4D20")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xCB4D88", Offset = "0xCB4D88", VA = "0xCB4D88")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xCB4E24", Offset = "0xCB4E24", VA = "0xCB4E24")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xCB4EC0", Offset = "0xCB4EC0", VA = "0xCB4EC0")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xCB4F5C", Offset = "0xCB4F5C", VA = "0xCB4F5C")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xCB5008", Offset = "0xCB5008", VA = "0xCB5008")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xCB5070", Offset = "0xCB5070", VA = "0xCB5070")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xCB510C", Offset = "0xCB510C", VA = "0xCB510C")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xCB51A8", Offset = "0xCB51A8", VA = "0xCB51A8")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xCB524C", Offset = "0xCB524C", VA = "0xCB524C")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xCB52F8", Offset = "0xCB52F8", VA = "0xCB52F8")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xCB5360", Offset = "0xCB5360", VA = "0xCB5360")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xCB53FC", Offset = "0xCB53FC", VA = "0xCB53FC")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xCB5498", Offset = "0xCB5498", VA = "0xCB5498")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xCB553C", Offset = "0xCB553C", VA = "0xCB553C")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xCB55A4", Offset = "0xCB55A4", VA = "0xCB55A4")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xCB5640", Offset = "0xCB5640", VA = "0xCB5640")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xCB56E4", Offset = "0xCB56E4", VA = "0xCB56E4")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xCB5780", Offset = "0xCB5780", VA = "0xCB5780")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xCB583C", Offset = "0xCB583C", VA = "0xCB583C")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xCB58F8", Offset = "0xCB58F8", VA = "0xCB58F8")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xCB59B4", Offset = "0xCB59B4", VA = "0xCB59B4")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xCB5A70", Offset = "0xCB5A70", VA = "0xCB5A70")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xC92F7C", Offset = "0xC92F7C", VA = "0xC92F7C")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xC93358", Offset = "0xC93358", VA = "0xC93358")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xC93080", Offset = "0xC93080", VA = "0xC93080")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xC931A4", Offset = "0xC931A4", VA = "0xC931A4")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xC94E88", Offset = "0xC94E88", VA = "0xC94E88")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xC950F0", Offset = "0xC950F0", VA = "0xC950F0")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xC94F8C", Offset = "0xC94F8C", VA = "0xC94F8C")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xCB5B0C", Offset = "0xCB5B0C", VA = "0xCB5B0C")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xCB5BB8", Offset = "0xCB5BB8", VA = "0xCB5BB8")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xCB5C44", Offset = "0xCB5C44", VA = "0xCB5C44")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xCB5CE0", Offset = "0xCB5CE0", VA = "0xCB5CE0")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xCB5DAC", Offset = "0xCB5DAC", VA = "0xCB5DAC")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xCB5E60", Offset = "0xCB5E60", VA = "0xCB5E60")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xCB5EFC", Offset = "0xCB5EFC", VA = "0xCB5EFC")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xCB5FA8", Offset = "0xCB5FA8", VA = "0xCB5FA8")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xCB6054", Offset = "0xCB6054", VA = "0xCB6054")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xCB6100", Offset = "0xCB6100", VA = "0xCB6100")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xCB619C", Offset = "0xCB619C", VA = "0xCB619C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xCB6250", Offset = "0xCB6250", VA = "0xCB6250")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xCB6304", Offset = "0xCB6304", VA = "0xCB6304")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xCB63C0", Offset = "0xCB63C0", VA = "0xCB63C0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xCB647C", Offset = "0xCB647C", VA = "0xCB647C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xCB6548", Offset = "0xCB6548", VA = "0xCB6548")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xCB65FC", Offset = "0xCB65FC", VA = "0xCB65FC")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xCB6698", Offset = "0xCB6698", VA = "0xCB6698")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xCB6744", Offset = "0xCB6744", VA = "0xCB6744")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xCB67F0", Offset = "0xCB67F0", VA = "0xCB67F0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xCB689C", Offset = "0xCB689C", VA = "0xCB689C")]
		public static extern IntPtr ovr_NetSyncOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xCB6928", Offset = "0xCB6928", VA = "0xCB6928")]
		public static extern void ovr_NetSyncOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xCB69C4", Offset = "0xCB69C4", VA = "0xCB69C4")]
		public static void ovr_NetSyncOptions_SetVoipGroup(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xCB6A70", Offset = "0xCB6A70", VA = "0xCB6A70")]
		private static extern void ovr_NetSyncOptions_SetVoipGroup_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xCB6B1C", Offset = "0xCB6B1C", VA = "0xCB6B1C")]
		public static extern void ovr_NetSyncOptions_SetVoipStreamDefault(IntPtr handle, NetSyncVoipStreamMode value);

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xCB6BC8", Offset = "0xCB6BC8", VA = "0xCB6BC8")]
		public static void ovr_NetSyncOptions_SetZoneId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xCB6C74", Offset = "0xCB6C74", VA = "0xCB6C74")]
		private static extern void ovr_NetSyncOptions_SetZoneId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xCB6D20", Offset = "0xCB6D20", VA = "0xCB6D20")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xCB6DAC", Offset = "0xCB6DAC", VA = "0xCB6DAC")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xCB6E48", Offset = "0xCB6E48", VA = "0xCB6E48")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xCB6EF4", Offset = "0xCB6EF4", VA = "0xCB6EF4")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xCB6FA0", Offset = "0xCB6FA0", VA = "0xCB6FA0")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xCB706C", Offset = "0xCB706C", VA = "0xCB706C")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xCB7120", Offset = "0xCB7120", VA = "0xCB7120")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xCB71BC", Offset = "0xCB71BC", VA = "0xCB71BC")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xCB7268", Offset = "0xCB7268", VA = "0xCB7268")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xCB7314", Offset = "0xCB7314", VA = "0xCB7314")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xCB73C0", Offset = "0xCB73C0", VA = "0xCB73C0")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xCB743C", Offset = "0xCB743C", VA = "0xCB743C")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xCB74E8", Offset = "0xCB74E8", VA = "0xCB74E8")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xCB7594", Offset = "0xCB7594", VA = "0xCB7594")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xCB7640", Offset = "0xCB7640", VA = "0xCB7640")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xCB76EC", Offset = "0xCB76EC", VA = "0xCB76EC")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xCB7798", Offset = "0xCB7798", VA = "0xCB7798")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xCB7844", Offset = "0xCB7844", VA = "0xCB7844")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xCB78F0", Offset = "0xCB78F0", VA = "0xCB78F0")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xCB796C", Offset = "0xCB796C", VA = "0xCB796C")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xCB7A18", Offset = "0xCB7A18", VA = "0xCB7A18")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xCB7AA4", Offset = "0xCB7AA4", VA = "0xCB7AA4")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xCB7B40", Offset = "0xCB7B40", VA = "0xCB7B40")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xCB7C0C", Offset = "0xCB7C0C", VA = "0xCB7C0C")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xCB7CC0", Offset = "0xCB7CC0", VA = "0xCB7CC0")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xCB7D5C", Offset = "0xCB7D5C", VA = "0xCB7D5C")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xCB7E08", Offset = "0xCB7E08", VA = "0xCB7E08")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xCB7EB4", Offset = "0xCB7EB4", VA = "0xCB7EB4")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xCB7F60", Offset = "0xCB7F60", VA = "0xCB7F60")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xCB800C", Offset = "0xCB800C", VA = "0xCB800C")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xCB80B8", Offset = "0xCB80B8", VA = "0xCB80B8")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xCB8164", Offset = "0xCB8164", VA = "0xCB8164")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xCB81F0", Offset = "0xCB81F0", VA = "0xCB81F0")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xCB828C", Offset = "0xCB828C", VA = "0xCB828C")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xCB8338", Offset = "0xCB8338", VA = "0xCB8338")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xCB83E4", Offset = "0xCB83E4", VA = "0xCB83E4")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xCB8480", Offset = "0xCB8480", VA = "0xCB8480")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xCB852C", Offset = "0xCB852C", VA = "0xCB852C")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xCB85B8", Offset = "0xCB85B8", VA = "0xCB85B8")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xCB8654", Offset = "0xCB8654", VA = "0xCB8654")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xCB8700", Offset = "0xCB8700", VA = "0xCB8700")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xCB87AC", Offset = "0xCB87AC", VA = "0xCB87AC")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x400082F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B526C", Offset = "0x9B526C")]
		Unknown,
		[Token(Token = "0x4000830")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B52A4", Offset = "0x9B52A4")]
		InSync,
		[Token(Token = "0x4000831")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B52DC", Offset = "0x9B52DC")]
		NeedsDownload,
		[Token(Token = "0x4000832")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5314", Offset = "0x9B5314")]
		RemoteDownloading,
		[Token(Token = "0x4000833")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B534C", Offset = "0x9B534C")]
		NeedsUpload,
		[Token(Token = "0x4000834")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5384", Offset = "0x9B5384")]
		LocalUploading,
		[Token(Token = "0x4000835")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B53BC", Offset = "0x9B53BC")]
		InConflict
	}
	[Token(Token = "0x2000192")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4000837")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B53F4", Offset = "0x9B53F4")]
		Unknown,
		[Token(Token = "0x4000838")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B542C", Offset = "0x9B542C")]
		Ok,
		[Token(Token = "0x4000839")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5464", Offset = "0x9B5464")]
		BetterVersionStored,
		[Token(Token = "0x400083A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B549C", Offset = "0x9B549C")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000193")]
	public interface IMicrophone
	{
		[Token(Token = "0x6000D42")]
		void Start();

		[Token(Token = "0x6000D43")]
		void Stop();

		[Token(Token = "0x6000D44")]
		float[] Update();
	}
	[Token(Token = "0x2000194")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6000D45")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6000D46")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6000D47")]
		void Update();

		[Token(Token = "0x6000D48")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000195")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x400083C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B54D4", Offset = "0x9B54D4")]
		String,
		[Token(Token = "0x400083D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B550C", Offset = "0x9B550C")]
		Int,
		[Token(Token = "0x400083E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5544", Offset = "0x9B5544")]
		Double,
		[Token(Token = "0x400083F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B557C", Offset = "0x9B557C")]
		Unknown
	}
	[Token(Token = "0x2000196")]
	public enum LaunchType
	{
		[Token(Token = "0x4000841")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B55B4", Offset = "0x9B55B4")]
		Unknown,
		[Token(Token = "0x4000842")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B55EC", Offset = "0x9B55EC")]
		Normal,
		[Token(Token = "0x4000843")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5624", Offset = "0x9B5624")]
		Invite,
		[Token(Token = "0x4000844")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B565C", Offset = "0x9B565C")]
		Coordinated,
		[Token(Token = "0x4000845")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5694", Offset = "0x9B5694")]
		Deeplink
	}
	[Token(Token = "0x2000197")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4000847")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B56CC", Offset = "0x9B56CC")]
		None,
		[Token(Token = "0x4000848")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5704", Offset = "0x9B5704")]
		Friends,
		[Token(Token = "0x4000849")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B573C", Offset = "0x9B573C")]
		Unknown
	}
	[Token(Token = "0x2000198")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x400084B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5774", Offset = "0x9B5774")]
		Top,
		[Token(Token = "0x400084C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B57AC", Offset = "0x9B57AC")]
		CenteredOnViewer,
		[Token(Token = "0x400084D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B57E4", Offset = "0x9B57E4")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x400084E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B581C", Offset = "0x9B581C")]
		Unknown
	}
	[Token(Token = "0x2000199")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000850")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5854", Offset = "0x9B5854")]
		Unknown,
		[Token(Token = "0x4000851")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B588C", Offset = "0x9B588C")]
		Public,
		[Token(Token = "0x4000852")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B58C4", Offset = "0x9B58C4")]
		Friends,
		[Token(Token = "0x4000853")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B58FC", Offset = "0x9B58FC")]
		OnlyMe
	}
	[Token(Token = "0x200019A")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4000855")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5934", Offset = "0x9B5934")]
		Unknown,
		[Token(Token = "0x4000856")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B596C", Offset = "0x9B596C")]
		MicrophoneOn,
		[Token(Token = "0x4000857")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B59A4", Offset = "0x9B59A4")]
		MicrophoneOff
	}
	[Token(Token = "0x200019B")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000859")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B59DC", Offset = "0x9B59DC")]
		Success = 1,
		[Token(Token = "0x400085A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5A14", Offset = "0x9B5A14")]
		Unknown = 0,
		[Token(Token = "0x400085B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5A4C", Offset = "0x9B5A4C")]
		NoPackageSet = -1,
		[Token(Token = "0x400085C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5A84", Offset = "0x9B5A84")]
		NoFbConnect = -2,
		[Token(Token = "0x400085D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5ABC", Offset = "0x9B5ABC")]
		NoSessionId = -3,
		[Token(Token = "0x400085E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5AF4", Offset = "0x9B5AF4")]
		MissingParameters = -4
	}
	[Token(Token = "0x200019C")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000860")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5B2C", Offset = "0x9B5B2C")]
		Required,
		[Token(Token = "0x4000861")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5B64", Offset = "0x9B5B64")]
		High,
		[Token(Token = "0x4000862")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5B9C", Offset = "0x9B5B9C")]
		Medium,
		[Token(Token = "0x4000863")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5BD4", Offset = "0x9B5BD4")]
		Low,
		[Token(Token = "0x4000864")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5C0C", Offset = "0x9B5C0C")]
		Unknown
	}
	[Token(Token = "0x200019D")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xF2694C", Offset = "0xF2694C", VA = "0xF2694C")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xF269C4", Offset = "0xF269C4", VA = "0xF269C4")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xF26A48", Offset = "0xF26A48", VA = "0xF26A48")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xF26AB4", Offset = "0xF26AB4", VA = "0xF26AB4")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xF26B30", Offset = "0xF26B30", VA = "0xF26B30")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xF26BAC", Offset = "0xF26BAC", VA = "0xF26BAC")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xF26C28", Offset = "0xF26C28", VA = "0xF26C28")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xF26C94", Offset = "0xF26C94", VA = "0xF26C94")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xF26D18", Offset = "0xF26D18", VA = "0xF26D18")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xF26DA4", Offset = "0xF26DA4", VA = "0xF26DA4")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xF26E28", Offset = "0xF26E28", VA = "0xF26E28")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xF26E94", Offset = "0xF26E94", VA = "0xF26E94")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xF26F10", Offset = "0xF26F10", VA = "0xF26F10")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xF258E0", Offset = "0xF258E0", VA = "0xF258E0")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xF26F8C", Offset = "0xF26F8C", VA = "0xF26F8C", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4000867")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5C44", Offset = "0x9B5C44")]
		Unknown,
		[Token(Token = "0x4000868")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5C7C", Offset = "0x9B5C7C")]
		Trailing,
		[Token(Token = "0x4000869")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5CB4", Offset = "0x9B5CB4")]
		Swingy
	}
	[Token(Token = "0x200019F")]
	public enum MediaContentType
	{
		[Token(Token = "0x400086B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5CEC", Offset = "0x9B5CEC")]
		Unknown,
		[Token(Token = "0x400086C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5D24", Offset = "0x9B5D24")]
		Photo
	}
	[Token(Token = "0x20001A0")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20003AA")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170000C1")]
		public T Data
		{
			[Token(Token = "0x6000D59")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000D58")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000D5A")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x20001A1")]
	public class Message
	{
		[Token(Token = "0x20003AB")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20003AC")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000F86")]
			Unknown = 0u,
			[Token(Token = "0x4000F87")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4000F88")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4000F89")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4000F8A")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4000F8B")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4000F8C")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4000F8D")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000F8E")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000F8F")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000F90")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000F91")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000F92")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000F93")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4000F94")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4000F95")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4000F96")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4000F97")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4000F98")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4000F99")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4000F9A")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4000F9B")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4000F9C")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4000F9D")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000F9E")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000F9F")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4000FA0")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4000FA1")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4000FA2")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000FA3")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4000FA4")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4000FA5")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000FA6")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4000FA7")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4000FA8")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4000FA9")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000FAA")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000FAB")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000FAC")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000FAD")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000FAE")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000FAF")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000FB0")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000FB1")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000FB2")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000FB3")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x4000FB4")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4000FB5")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4000FB6")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4000FB7")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000FB8")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000FB9")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000FBA")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000FBB")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000FBC")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000FBD")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000FBE")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000FBF")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000FC0")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000FC1")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000FC2")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000FC3")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4000FC4")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4000FC5")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000FC6")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000FC7")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000FC8")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000FC9")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000FCA")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000FCB")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000FCC")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000FCD")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000FCE")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000FCF")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000FD0")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4000FD1")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000FD2")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000FD3")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4000FD4")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4000FD5")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4000FD6")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4000FD7")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4000FD8")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4000FD9")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000FDA")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000FDB")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000FDC")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000FDD")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000FDE")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000FDF")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4000FE0")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4000FE1")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4000FE2")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4000FE3")]
			Room_Join = 382373641u,
			[Token(Token = "0x4000FE4")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000FE5")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000FE6")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000FE7")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000FE8")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000FE9")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000FEA")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000FEB")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000FEC")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000FED")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000FEE")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000FEF")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4000FF0")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4000FF1")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4000FF2")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4000FF3")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4000FF4")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4000FF5")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4000FF6")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4000FF7")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4000FF8")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4000FF9")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4000FFA")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4000FFB")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4000FFC")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4000FFD")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4000FFE")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4000FFF")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4001000")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4001001")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4001002")]
			Notification_NetSync_ConnectionStatusChanged = 120882378u,
			[Token(Token = "0x4001003")]
			Notification_NetSync_SessionsChanged = 947814198u,
			[Token(Token = "0x4001004")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4001005")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4001006")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4001007")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4001008")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4001009")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x400100A")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x400100B")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x400100C")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x400100D")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x400100E")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x400100F")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4001010")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4001011")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20003AD")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B5D5C", Offset = "0x9B5D5C")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170000C2")]
		public MessageType Type
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xF273FC", Offset = "0xF273FC", VA = "0xF273FC")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170000C3")]
		public bool IsError
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xF27404", Offset = "0xF27404", VA = "0xF27404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C4")]
		public ulong RequestID
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xF27414", Offset = "0xF27414", VA = "0xF27414")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C5")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xF2A874", Offset = "0xF2A874", VA = "0xF2A874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB580", Offset = "0x9BB580")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xF2A820", Offset = "0xF2A820", VA = "0xF2A820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB570", Offset = "0x9BB570")]
			set
			{
			}
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xF2717C", Offset = "0xF2717C", VA = "0xF2717C")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xF273F4", Offset = "0xF273F4", VA = "0xF273F4", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xF2741C", Offset = "0xF2741C", VA = "0xF2741C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xF27424", Offset = "0xF27424", VA = "0xF27424", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xF2742C", Offset = "0xF2742C", VA = "0xF2742C", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xF27434", Offset = "0xF27434", VA = "0xF27434", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xF2743C", Offset = "0xF2743C", VA = "0xF2743C", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xF27444", Offset = "0xF27444", VA = "0xF27444", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xF2744C", Offset = "0xF2744C", VA = "0xF2744C", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xF27454", Offset = "0xF27454", VA = "0xF27454", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xF2745C", Offset = "0xF2745C", VA = "0xF2745C", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xF27464", Offset = "0xF27464", VA = "0xF27464", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xF2746C", Offset = "0xF2746C", VA = "0xF2746C", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xF27474", Offset = "0xF27474", VA = "0xF27474", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xF2747C", Offset = "0xF2747C", VA = "0xF2747C", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xF27484", Offset = "0xF27484", VA = "0xF27484", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xF2748C", Offset = "0xF2748C", VA = "0xF2748C", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xF27494", Offset = "0xF27494", VA = "0xF27494", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xF2749C", Offset = "0xF2749C", VA = "0xF2749C", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xF274A4", Offset = "0xF274A4", VA = "0xF274A4", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xF274AC", Offset = "0xF274AC", VA = "0xF274AC", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xF274B4", Offset = "0xF274B4", VA = "0xF274B4", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xF274BC", Offset = "0xF274BC", VA = "0xF274BC", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xF274C4", Offset = "0xF274C4", VA = "0xF274C4", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xF274CC", Offset = "0xF274CC", VA = "0xF274CC", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xF274D4", Offset = "0xF274D4", VA = "0xF274D4", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xF274DC", Offset = "0xF274DC", VA = "0xF274DC", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xF274E4", Offset = "0xF274E4", VA = "0xF274E4", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xF274EC", Offset = "0xF274EC", VA = "0xF274EC", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xF274F4", Offset = "0xF274F4", VA = "0xF274F4", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xF274FC", Offset = "0xF274FC", VA = "0xF274FC", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xF27504", Offset = "0xF27504", VA = "0xF27504", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xF2750C", Offset = "0xF2750C", VA = "0xF2750C", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xF27514", Offset = "0xF27514", VA = "0xF27514", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xF2751C", Offset = "0xF2751C", VA = "0xF2751C", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xF27524", Offset = "0xF27524", VA = "0xF27524", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xF2752C", Offset = "0xF2752C", VA = "0xF2752C", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xF27534", Offset = "0xF27534", VA = "0xF27534", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xF2753C", Offset = "0xF2753C", VA = "0xF2753C", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xF27544", Offset = "0xF27544", VA = "0xF27544", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xF2754C", Offset = "0xF2754C", VA = "0xF2754C", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xF27554", Offset = "0xF27554", VA = "0xF27554", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xF2755C", Offset = "0xF2755C", VA = "0xF2755C", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xF27564", Offset = "0xF27564", VA = "0xF27564", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xF2756C", Offset = "0xF2756C", VA = "0xF2756C", Slot = "46")]
		public virtual NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xF27574", Offset = "0xF27574", VA = "0xF27574", Slot = "47")]
		public virtual NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xF2757C", Offset = "0xF2757C", VA = "0xF2757C", Slot = "48")]
		public virtual NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xF27584", Offset = "0xF27584", VA = "0xF27584", Slot = "49")]
		public virtual NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xF2758C", Offset = "0xF2758C", VA = "0xF2758C", Slot = "50")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xF27594", Offset = "0xF27594", VA = "0xF27594", Slot = "51")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xF2759C", Offset = "0xF2759C", VA = "0xF2759C", Slot = "52")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xF275A4", Offset = "0xF275A4", VA = "0xF275A4", Slot = "53")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xF275AC", Offset = "0xF275AC", VA = "0xF275AC", Slot = "54")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xF275B4", Offset = "0xF275B4", VA = "0xF275B4", Slot = "55")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xF275BC", Offset = "0xF275BC", VA = "0xF275BC", Slot = "56")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xF275C4", Offset = "0xF275C4", VA = "0xF275C4", Slot = "57")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xF275CC", Offset = "0xF275CC", VA = "0xF275CC", Slot = "58")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xF275D4", Offset = "0xF275D4", VA = "0xF275D4", Slot = "59")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xF275DC", Offset = "0xF275DC", VA = "0xF275DC", Slot = "60")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xF275E4", Offset = "0xF275E4", VA = "0xF275E4", Slot = "61")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xF275EC", Offset = "0xF275EC", VA = "0xF275EC", Slot = "62")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xF275F4", Offset = "0xF275F4", VA = "0xF275F4", Slot = "63")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xF275FC", Offset = "0xF275FC", VA = "0xF275FC", Slot = "64")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xF27604", Offset = "0xF27604", VA = "0xF27604", Slot = "65")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xF2760C", Offset = "0xF2760C", VA = "0xF2760C", Slot = "66")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xF27614", Offset = "0xF27614", VA = "0xF27614", Slot = "67")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xF2761C", Offset = "0xF2761C", VA = "0xF2761C", Slot = "68")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xF27624", Offset = "0xF27624", VA = "0xF27624", Slot = "69")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xF2762C", Offset = "0xF2762C", VA = "0xF2762C", Slot = "70")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xF27634", Offset = "0xF27634", VA = "0xF27634", Slot = "71")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xF2763C", Offset = "0xF2763C", VA = "0xF2763C")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xF21774", Offset = "0xF21774", VA = "0xF21774")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20001A2")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xF2AC30", Offset = "0xF2AC30", VA = "0xF2AC30")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xF2AC90", Offset = "0xF2AC90", VA = "0xF2AC90", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xF2ACD4", Offset = "0xF2ACD4", VA = "0xF2ACD4", Slot = "72")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A3")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xF28B90", Offset = "0xF28B90", VA = "0xF28B90")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xF2ADF8", Offset = "0xF2ADF8", VA = "0xF2ADF8", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xF2AE3C", Offset = "0xF2AE3C", VA = "0xF2AE3C", Slot = "72")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A4")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xF28BF0", Offset = "0xF28BF0", VA = "0xF28BF0")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xF2B0DC", Offset = "0xF2B0DC", VA = "0xF2B0DC", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xF2B120", Offset = "0xF2B120", VA = "0xF2B120", Slot = "72")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A5")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xF28C50", Offset = "0xF28C50", VA = "0xF28C50")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xF2B3C0", Offset = "0xF2B3C0", VA = "0xF2B3C0", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xF2B404", Offset = "0xF2B404", VA = "0xF2B404", Slot = "72")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A6")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xF28CB0", Offset = "0xF28CB0", VA = "0xF28CB0")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xF2B53C", Offset = "0xF2B53C", VA = "0xF2B53C", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xF2B580", Offset = "0xF2B580", VA = "0xF2B580", Slot = "72")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A7")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xF28D10", Offset = "0xF28D10", VA = "0xF28D10")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xF2B6D4", Offset = "0xF2B6D4", VA = "0xF2B6D4", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xF2B718", Offset = "0xF2B718", VA = "0xF2B718", Slot = "72")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A8")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xF28D70", Offset = "0xF28D70", VA = "0xF28D70")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xF2B900", Offset = "0xF2B900", VA = "0xF2B900", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xF2B944", Offset = "0xF2B944", VA = "0xF2B944", Slot = "72")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A9")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xF28DD0", Offset = "0xF28DD0", VA = "0xF28DD0")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xF2BBB4", Offset = "0xF2BBB4", VA = "0xF2BBB4", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xF2BBF8", Offset = "0xF2BBF8", VA = "0xF2BBF8", Slot = "72")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AA")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xF28E30", Offset = "0xF28E30", VA = "0xF28E30")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xF2BD50", Offset = "0xF2BD50", VA = "0xF2BD50", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xF2BD94", Offset = "0xF2BD94", VA = "0xF2BD94", Slot = "72")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AB")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xF28E90", Offset = "0xF28E90", VA = "0xF28E90")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xF2BEEC", Offset = "0xF2BEEC", VA = "0xF2BEEC", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xF2BF30", Offset = "0xF2BF30", VA = "0xF2BF30", Slot = "72")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AC")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xF28EF0", Offset = "0xF28EF0", VA = "0xF28EF0")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xF2C064", Offset = "0xF2C064", VA = "0xF2C064", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xF2C0A8", Offset = "0xF2C0A8", VA = "0xF2C0A8", Slot = "72")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AD")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xF28F50", Offset = "0xF28F50", VA = "0xF28F50")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xF2C210", Offset = "0xF2C210", VA = "0xF2C210", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xF2C254", Offset = "0xF2C254", VA = "0xF2C254", Slot = "72")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AE")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xF28FB0", Offset = "0xF28FB0", VA = "0xF28FB0")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xF2C398", Offset = "0xF2C398", VA = "0xF2C398", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xF2C3DC", Offset = "0xF2C3DC", VA = "0xF2C3DC", Slot = "72")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AF")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xF2C500", Offset = "0xF2C500", VA = "0xF2C500")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xF2C560", Offset = "0xF2C560", VA = "0xF2C560", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xF2C5A4", Offset = "0xF2C5A4", VA = "0xF2C5A4", Slot = "72")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B0")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xF29010", Offset = "0xF29010", VA = "0xF29010")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xF2C814", Offset = "0xF2C814", VA = "0xF2C814", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xF2C858", Offset = "0xF2C858", VA = "0xF2C858", Slot = "72")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B1")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xF29070", Offset = "0xF29070", VA = "0xF29070")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xF2C9D4", Offset = "0xF2C9D4", VA = "0xF2C9D4", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xF2CA18", Offset = "0xF2CA18", VA = "0xF2CA18", Slot = "72")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B2")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xF290D0", Offset = "0xF290D0", VA = "0xF290D0")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xF2CE50", Offset = "0xF2CE50", VA = "0xF2CE50", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xF2CE94", Offset = "0xF2CE94", VA = "0xF2CE94", Slot = "72")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B3")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xF29130", Offset = "0xF29130", VA = "0xF29130")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xF2CB6C", Offset = "0xF2CB6C", VA = "0xF2CB6C", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xF2CBB0", Offset = "0xF2CBB0", VA = "0xF2CBB0", Slot = "72")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B4")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xF29190", Offset = "0xF29190", VA = "0xF29190")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xF2D028", Offset = "0xF2D028", VA = "0xF2D028", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xF2D06C", Offset = "0xF2D06C", VA = "0xF2D06C", Slot = "72")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B5")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xF291F0", Offset = "0xF291F0", VA = "0xF291F0")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xF2D1C0", Offset = "0xF2D1C0", VA = "0xF2D1C0", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xF2D204", Offset = "0xF2D204", VA = "0xF2D204", Slot = "72")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B6")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xF2D6CC", Offset = "0xF2D6CC", VA = "0xF2D6CC")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xF2D72C", Offset = "0xF2D72C", VA = "0xF2D72C", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xF2D770", Offset = "0xF2D770", VA = "0xF2D770", Slot = "72")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B7")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xF2D9E0", Offset = "0xF2D9E0", VA = "0xF2D9E0")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xF2DA40", Offset = "0xF2DA40", VA = "0xF2DA40", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xF2DA84", Offset = "0xF2DA84", VA = "0xF2DA84", Slot = "72")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B8")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xF29250", Offset = "0xF29250", VA = "0xF29250")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xF2DBC0", Offset = "0xF2DBC0", VA = "0xF2DBC0", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xF2DC04", Offset = "0xF2DC04", VA = "0xF2DC04", Slot = "72")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B9")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xF2DD40", Offset = "0xF2DD40", VA = "0xF2DD40")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xF2DDA0", Offset = "0xF2DDA0", VA = "0xF2DDA0", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xF2DDE4", Offset = "0xF2DDE4", VA = "0xF2DDE4", Slot = "72")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BA")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xF2DF1C", Offset = "0xF2DF1C", VA = "0xF2DF1C")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xF2DF7C", Offset = "0xF2DF7C", VA = "0xF2DF7C", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xF2DFC0", Offset = "0xF2DFC0", VA = "0xF2DFC0", Slot = "72")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BB")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xF292B0", Offset = "0xF292B0", VA = "0xF292B0")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xF2E1B8", Offset = "0xF2E1B8", VA = "0xF2E1B8", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xF2E1FC", Offset = "0xF2E1FC", VA = "0xF2E1FC", Slot = "72")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BC")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xF2E4BC", Offset = "0xF2E4BC", VA = "0xF2E4BC")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xF2E51C", Offset = "0xF2E51C", VA = "0xF2E51C", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xF2E560", Offset = "0xF2E560", VA = "0xF2E560", Slot = "72")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BD")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xF2E7D0", Offset = "0xF2E7D0", VA = "0xF2E7D0")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xF2E830", Offset = "0xF2E830", VA = "0xF2E830", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xF2E874", Offset = "0xF2E874", VA = "0xF2E874", Slot = "72")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BE")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xF2E99C", Offset = "0xF2E99C", VA = "0xF2E99C")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xF2E9FC", Offset = "0xF2E9FC", VA = "0xF2E9FC", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xF2EA40", Offset = "0xF2EA40", VA = "0xF2EA40", Slot = "72")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BF")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xF29370", Offset = "0xF29370", VA = "0xF29370")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xF2EB64", Offset = "0xF2EB64", VA = "0xF2EB64", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xF2EBA8", Offset = "0xF2EBA8", VA = "0xF2EBA8", Slot = "72")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C0")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xF2ED1C", Offset = "0xF2ED1C", VA = "0xF2ED1C")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xF2ED7C", Offset = "0xF2ED7C", VA = "0xF2ED7C", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xF2EDC0", Offset = "0xF2EDC0", VA = "0xF2EDC0", Slot = "72")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C1")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xF293D0", Offset = "0xF293D0", VA = "0xF293D0")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xF2EF04", Offset = "0xF2EF04", VA = "0xF2EF04", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xF2EF48", Offset = "0xF2EF48", VA = "0xF2EF48", Slot = "72")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C2")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xF29490", Offset = "0xF29490", VA = "0xF29490")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xF2F2C4", Offset = "0xF2F2C4", VA = "0xF2F2C4", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xF2F308", Offset = "0xF2F308", VA = "0xF2F308", Slot = "72")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C3")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xF294F0", Offset = "0xF294F0", VA = "0xF294F0")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xF2F4F0", Offset = "0xF2F4F0", VA = "0xF2F4F0", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xF2F534", Offset = "0xF2F534", VA = "0xF2F534", Slot = "72")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C4")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xF29550", Offset = "0xF29550", VA = "0xF29550")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xF2FAE0", Offset = "0xF2FAE0", VA = "0xF2FAE0", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xF2FB24", Offset = "0xF2FB24", VA = "0xF2FB24", Slot = "72")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C5")]
	public class MessageWithNetSyncConnection : Message<NetSyncConnection>
	{
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xF295B0", Offset = "0xF295B0", VA = "0xF295B0")]
		public MessageWithNetSyncConnection(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xF2FC98", Offset = "0xF2FC98", VA = "0xF2FC98", Slot = "46")]
		public override NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xF2FCDC", Offset = "0xF2FCDC", VA = "0xF2FCDC", Slot = "72")]
		protected override NetSyncConnection GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C6")]
	public class MessageWithNetSyncSessionList : Message<NetSyncSessionList>
	{
		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xF2FE40", Offset = "0xF2FE40", VA = "0xF2FE40")]
		public MessageWithNetSyncSessionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xF2FEA0", Offset = "0xF2FEA0", VA = "0xF2FEA0", Slot = "47")]
		public override NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xF2FEE4", Offset = "0xF2FEE4", VA = "0xF2FEE4", Slot = "72")]
		protected override NetSyncSessionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C7")]
	public class MessageWithNetSyncSessionsChangedNotification : Message<NetSyncSessionsChangedNotification>
	{
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xF29610", Offset = "0xF29610", VA = "0xF29610")]
		public MessageWithNetSyncSessionsChangedNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xF30154", Offset = "0xF30154", VA = "0xF30154", Slot = "48")]
		public override NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xF30198", Offset = "0xF30198", VA = "0xF30198", Slot = "72")]
		protected override NetSyncSessionsChangedNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C8")]
	public class MessageWithNetSyncSetSessionPropertyResult : Message<NetSyncSetSessionPropertyResult>
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xF302F0", Offset = "0xF302F0", VA = "0xF302F0")]
		public MessageWithNetSyncSetSessionPropertyResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xF30350", Offset = "0xF30350", VA = "0xF30350", Slot = "49")]
		public override NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xF30394", Offset = "0xF30394", VA = "0xF30394", Slot = "72")]
		protected override NetSyncSetSessionPropertyResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C9")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xF29670", Offset = "0xF29670", VA = "0xF29670")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xF3061C", Offset = "0xF3061C", VA = "0xF3061C", Slot = "50")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xF30660", Offset = "0xF30660", VA = "0xF30660", Slot = "72")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CA")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xF30784", Offset = "0xF30784", VA = "0xF30784")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xF307E4", Offset = "0xF307E4", VA = "0xF307E4", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xF30828", Offset = "0xF30828", VA = "0xF30828", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CB")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xF296D0", Offset = "0xF296D0", VA = "0xF296D0")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xF30CAC", Offset = "0xF30CAC", VA = "0xF30CAC", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xF30CF0", Offset = "0xF30CF0", VA = "0xF30CF0", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CC")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xF30AE4", Offset = "0xF30AE4", VA = "0xF30AE4")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xF30B44", Offset = "0xF30B44", VA = "0xF30B44", Slot = "52")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xF30B88", Offset = "0xF30B88", VA = "0xF30B88", Slot = "72")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CD")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xF29730", Offset = "0xF29730", VA = "0xF29730")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xF30D8C", Offset = "0xF30D8C", VA = "0xF30D8C", Slot = "53")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xF30DD0", Offset = "0xF30DD0", VA = "0xF30DD0", Slot = "72")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CE")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xF29790", Offset = "0xF29790", VA = "0xF29790")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xF30F54", Offset = "0xF30F54", VA = "0xF30F54", Slot = "54")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xF30F98", Offset = "0xF30F98", VA = "0xF30F98", Slot = "72")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CF")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xF297F0", Offset = "0xF297F0", VA = "0xF297F0")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xF31510", Offset = "0xF31510", VA = "0xF31510", Slot = "55")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xF31554", Offset = "0xF31554", VA = "0xF31554", Slot = "72")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D0")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xF29850", Offset = "0xF29850", VA = "0xF29850")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xF317F4", Offset = "0xF317F4", VA = "0xF317F4", Slot = "56")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xF31838", Offset = "0xF31838", VA = "0xF31838", Slot = "72")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D1")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xF298B0", Offset = "0xF298B0", VA = "0xF298B0")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xF3198C", Offset = "0xF3198C", VA = "0xF3198C", Slot = "57")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xF319D0", Offset = "0xF319D0", VA = "0xF319D0", Slot = "72")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D2")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xF29910", Offset = "0xF29910", VA = "0xF29910")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xF31C70", Offset = "0xF31C70", VA = "0xF31C70", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xF31CB4", Offset = "0xF31CB4", VA = "0xF31CB4", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D3")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xF29970", Offset = "0xF29970", VA = "0xF29970")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xF324B0", Offset = "0xF324B0", VA = "0xF324B0", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xF324F4", Offset = "0xF324F4", VA = "0xF324F4", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D4")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xF299D0", Offset = "0xF299D0", VA = "0xF299D0")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xF32590", Offset = "0xF32590", VA = "0xF32590", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xF325D4", Offset = "0xF325D4", VA = "0xF325D4", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D5")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xF29A30", Offset = "0xF29A30", VA = "0xF29A30")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xF321CC", Offset = "0xF321CC", VA = "0xF321CC", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xF32210", Offset = "0xF32210", VA = "0xF32210", Slot = "72")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D6")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xF29A90", Offset = "0xF29A90", VA = "0xF29A90")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xF31D50", Offset = "0xF31D50", VA = "0xF31D50", Slot = "59")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xF31D94", Offset = "0xF31D94", VA = "0xF31D94", Slot = "72")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D7")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xF29AF0", Offset = "0xF29AF0", VA = "0xF29AF0")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xF31EE8", Offset = "0xF31EE8", VA = "0xF31EE8", Slot = "60")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xF31F2C", Offset = "0xF31F2C", VA = "0xF31F2C", Slot = "72")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D8")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xF29B50", Offset = "0xF29B50", VA = "0xF29B50")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xF32670", Offset = "0xF32670", VA = "0xF32670", Slot = "62")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xF326B4", Offset = "0xF326B4", VA = "0xF326B4", Slot = "72")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D9")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xF29BB0", Offset = "0xF29BB0", VA = "0xF29BB0")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xF32924", Offset = "0xF32924", VA = "0xF32924", Slot = "63")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xF32968", Offset = "0xF32968", VA = "0xF32968", Slot = "72")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DA")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xF29C10", Offset = "0xF29C10", VA = "0xF29C10")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xF32A8C", Offset = "0xF32A8C", VA = "0xF32A8C", Slot = "64")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xF32AD0", Offset = "0xF32AD0", VA = "0xF32AD0", Slot = "72")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DB")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xF32B38", Offset = "0xF32B38", VA = "0xF32B38")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xF32B98", Offset = "0xF32B98", VA = "0xF32B98", Slot = "65")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xF32BDC", Offset = "0xF32BDC", VA = "0xF32BDC", Slot = "72")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DC")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xF29C70", Offset = "0xF29C70", VA = "0xF29C70")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xF32D14", Offset = "0xF32D14", VA = "0xF32D14", Slot = "66")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xF32D58", Offset = "0xF32D58", VA = "0xF32D58", Slot = "72")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DD")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xF29CD0", Offset = "0xF29CD0", VA = "0xF29CD0")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xF32E8C", Offset = "0xF32E8C", VA = "0xF32E8C", Slot = "67")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xF32ED0", Offset = "0xF32ED0", VA = "0xF32ED0", Slot = "72")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DE")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xF29D30", Offset = "0xF29D30", VA = "0xF29D30")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xF33074", Offset = "0xF33074", VA = "0xF33074", Slot = "68")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xF330B8", Offset = "0xF330B8", VA = "0xF330B8", Slot = "72")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DF")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xF29D90", Offset = "0xF29D90", VA = "0xF29D90")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xF33358", Offset = "0xF33358", VA = "0xF33358", Slot = "69")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xF3339C", Offset = "0xF3339C", VA = "0xF3339C", Slot = "72")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E0")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xF29DF0", Offset = "0xF29DF0", VA = "0xF29DF0")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xF3363C", Offset = "0xF3363C", VA = "0xF3363C", Slot = "70")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xF33680", Offset = "0xF33680", VA = "0xF33680", Slot = "72")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E1")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xF337A4", Offset = "0xF337A4", VA = "0xF337A4")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xF33804", Offset = "0xF33804", VA = "0xF33804", Slot = "71")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xF33848", Offset = "0xF33848", VA = "0xF33848", Slot = "72")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E2")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xF29E50", Offset = "0xF29E50", VA = "0xF29E50")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xF304DC", Offset = "0xF304DC", VA = "0xF304DC", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xF30520", Offset = "0xF30520", VA = "0xF30520", Slot = "72")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E3")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xF29EB0", Offset = "0xF29EB0", VA = "0xF29EB0")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xF31208", Offset = "0xF31208", VA = "0xF31208", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xF3124C", Offset = "0xF3124C", VA = "0xF3124C", Slot = "72")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E4")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xF29310", Offset = "0xF29310", VA = "0xF29310")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xF2E0FC", Offset = "0xF2E0FC", VA = "0xF2E0FC", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xF2E140", Offset = "0xF2E140", VA = "0xF2E140", Slot = "72")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E5")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xF29F10", Offset = "0xF29F10", VA = "0xF29F10")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xF2F6B0", Offset = "0xF2F6B0", VA = "0xF2F6B0", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xF2F6F4", Offset = "0xF2F6F4", VA = "0xF2F6F4", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E6")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xF29430", Offset = "0xF29430", VA = "0xF29430")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xF2F0A0", Offset = "0xF2F0A0", VA = "0xF2F0A0", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xF2F0F4", Offset = "0xF2F0F4", VA = "0xF2F0F4", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xF2F148", Offset = "0xF2F148", VA = "0xF2F148", Slot = "72")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E7")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xF29F70", Offset = "0xF29F70", VA = "0xF29F70")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xF2D4A4", Offset = "0xF2D4A4", VA = "0xF2D4A4", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xF2D4E8", Offset = "0xF2D4E8", VA = "0xF2D4E8", Slot = "72")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E8")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xF29FD0", Offset = "0xF29FD0", VA = "0xF29FD0")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xF313A8", Offset = "0xF313A8", VA = "0xF313A8", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xF313EC", Offset = "0xF313EC", VA = "0xF313EC", Slot = "72")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E9")]
	public enum NetSyncConnectionStatus
	{
		[Token(Token = "0x4000873")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5D6C", Offset = "0x9B5D6C")]
		Unknown,
		[Token(Token = "0x4000874")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5DA4", Offset = "0x9B5DA4")]
		Connecting,
		[Token(Token = "0x4000875")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5DDC", Offset = "0x9B5DDC")]
		Disconnected,
		[Token(Token = "0x4000876")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5E14", Offset = "0x9B5E14")]
		Connected
	}
	[Token(Token = "0x20001EA")]
	public enum NetSyncDisconnectReason
	{
		[Token(Token = "0x4000878")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5E4C", Offset = "0x9B5E4C")]
		Unknown,
		[Token(Token = "0x4000879")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5E84", Offset = "0x9B5E84")]
		LocalTerminated,
		[Token(Token = "0x400087A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5EBC", Offset = "0x9B5EBC")]
		ServerTerminated,
		[Token(Token = "0x400087B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5EF4", Offset = "0x9B5EF4")]
		Failed,
		[Token(Token = "0x400087C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5F2C", Offset = "0x9B5F2C")]
		Lost
	}
	[Token(Token = "0x20001EB")]
	public class NetSyncOptions
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xF35A4C", Offset = "0xF35A4C", VA = "0xF35A4C")]
		public NetSyncOptions()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xF35AC4", Offset = "0xF35AC4", VA = "0xF35AC4")]
		public void SetVoipGroup(string value)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xF35B40", Offset = "0xF35B40", VA = "0xF35B40")]
		public void SetVoipStreamDefault(NetSyncVoipStreamMode value)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xF35BBC", Offset = "0xF35BBC", VA = "0xF35BBC")]
		public void SetZoneId(string value)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xF35C38", Offset = "0xF35C38", VA = "0xF35C38")]
		public static explicit operator IntPtr(NetSyncOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xF35C88", Offset = "0xF35C88", VA = "0xF35C88", Slot = "1")]
		~NetSyncOptions()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public enum NetSyncVoipMicSource
	{
		[Token(Token = "0x400087F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5F64", Offset = "0x9B5F64")]
		Unknown,
		[Token(Token = "0x4000880")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5F9C", Offset = "0x9B5F9C")]
		None,
		[Token(Token = "0x4000881")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B5FD4", Offset = "0x9B5FD4")]
		Internal
	}
	[Token(Token = "0x20001ED")]
	public enum NetSyncVoipStreamMode
	{
		[Token(Token = "0x4000883")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B600C", Offset = "0x9B600C")]
		Unknown,
		[Token(Token = "0x4000884")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6044", Offset = "0x9B6044")]
		Ambisonic,
		[Token(Token = "0x4000885")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B607C", Offset = "0x9B607C")]
		Mono
	}
	[Token(Token = "0x20001EE")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170000C6")]
		public ulong SenderID
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0xF36240", Offset = "0xF36240", VA = "0xF36240")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C7")]
		public ulong Size
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0xF362AC", Offset = "0xF362AC", VA = "0xF362AC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C8")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xF362B4", Offset = "0xF362B4", VA = "0xF362B4")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xF34E24", Offset = "0xF34E24", VA = "0xF34E24")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xF360E4", Offset = "0xF360E4", VA = "0xF360E4")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xF36320", Offset = "0xF36320", VA = "0xF36320", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xF3638C", Offset = "0xF3638C", VA = "0xF3638C", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000889")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B60B4", Offset = "0x9B60B4")]
		Unknown,
		[Token(Token = "0x400088A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B60EC", Offset = "0x9B60EC")]
		Join,
		[Token(Token = "0x400088B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6124", Offset = "0x9B6124")]
		Leave,
		[Token(Token = "0x400088C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B615C", Offset = "0x9B615C")]
		Invite,
		[Token(Token = "0x400088D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6194", Offset = "0x9B6194")]
		Uninvite
	}
	[Token(Token = "0x20001F0")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x400088F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B61CC", Offset = "0x9B61CC")]
		Unknown,
		[Token(Token = "0x4000890")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6204", Offset = "0x9B6204")]
		Connected,
		[Token(Token = "0x4000891")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B623C", Offset = "0x9B623C")]
		Timeout,
		[Token(Token = "0x4000892")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6274", Offset = "0x9B6274")]
		Closed
	}
	[Token(Token = "0x20001F1")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000894")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B62AC", Offset = "0x9B62AC")]
		Unknown,
		[Token(Token = "0x4000895")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B62E4", Offset = "0x9B62E4")]
		Granted,
		[Token(Token = "0x4000896")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B631C", Offset = "0x9B631C")]
		Denied,
		[Token(Token = "0x4000897")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6354", Offset = "0x9B6354")]
		Blocked
	}
	[Token(Token = "0x20001F2")]
	public enum PermissionType
	{
		[Token(Token = "0x4000899")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B638C", Offset = "0x9B638C")]
		Unknown,
		[Token(Token = "0x400089A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B63C4", Offset = "0x9B63C4")]
		Microphone,
		[Token(Token = "0x400089B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B63FC", Offset = "0x9B63FC")]
		WriteExternalStorage
	}
	[Token(Token = "0x20001F3")]
	public sealed class Core
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xF23110", Offset = "0xF23110", VA = "0xF23110")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xF23178", Offset = "0xF23178", VA = "0xF23178")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xF231E4", Offset = "0xF231E4", VA = "0xF231E4")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xF233A8", Offset = "0xF233A8", VA = "0xF233A8")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xF23664", Offset = "0xF23664", VA = "0xF23664")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xF23380", Offset = "0xF23380", VA = "0xF23380")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xF23984", Offset = "0xF23984", VA = "0xF23984")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xC94C84", Offset = "0xC94C84", VA = "0xC94C84")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xC94D9C", Offset = "0xC94D9C", VA = "0xC94D9C")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public static class Rooms
	{
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xF37E4C", Offset = "0xF37E4C", VA = "0xF37E4C")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xF380A8", Offset = "0xF380A8", VA = "0xF380A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9BB590", Offset = "0x9BB590")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xF38124", Offset = "0xF38124", VA = "0xF38124")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xF38258", Offset = "0xF38258", VA = "0xF38258")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xF383B8", Offset = "0xF383B8", VA = "0xF383B8")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xF384D4", Offset = "0xF384D4", VA = "0xF384D4")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xF385E0", Offset = "0xF385E0", VA = "0xF385E0")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xF386FC", Offset = "0xF386FC", VA = "0xF386FC")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xF38808", Offset = "0xF38808", VA = "0xF38808")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xF38950", Offset = "0xF38950", VA = "0xF38950")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xF38A5C", Offset = "0xF38A5C", VA = "0xF38A5C")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xF38B80", Offset = "0xF38B80", VA = "0xF38B80")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xF38CA4", Offset = "0xF38CA4", VA = "0xF38CA4")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xF38DF4", Offset = "0xF38DF4", VA = "0xF38DF4")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xF38F28", Offset = "0xF38F28", VA = "0xF38F28")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xF3903C", Offset = "0xF3903C", VA = "0xF3903C")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xF39158", Offset = "0xF39158", VA = "0xF39158")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xF3927C", Offset = "0xF3927C", VA = "0xF3927C")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xF393A0", Offset = "0xF393A0", VA = "0xF393A0")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xF394BC", Offset = "0xF394BC", VA = "0xF394BC")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xF380AC", Offset = "0xF380AC", VA = "0xF380AC")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xF395E0", Offset = "0xF395E0", VA = "0xF395E0")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xF39658", Offset = "0xF39658", VA = "0xF39658")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xF396D0", Offset = "0xF396D0", VA = "0xF396D0")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F6")]
	public static class Matchmaking
	{
		[Token(Token = "0x20003AE")]
		public class CustomQuery
		{
			[Token(Token = "0x20003DA")]
			public struct Criterion
			{
				[Token(Token = "0x40010B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x40010BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x40010BB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x60015D2")]
				[Address(RVA = "0xA6122C", Offset = "0xA6122C", VA = "0xA6122C")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x6001588")]
			[Address(RVA = "0xF25438", Offset = "0xF25438", VA = "0xF25438")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6001589")]
			[Address(RVA = "0xF26934", Offset = "0xF26934", VA = "0xF26934")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xF24F70", Offset = "0xF24F70", VA = "0xF24F70")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xF251D0", Offset = "0xF251D0", VA = "0xF251D0")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xF25304", Offset = "0xF25304", VA = "0xF25304")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xF25790", Offset = "0xF25790", VA = "0xF25790")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xF25930", Offset = "0xF25930", VA = "0xF25930")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xF25A4C", Offset = "0xF25A4C", VA = "0xF25A4C")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xF25B50", Offset = "0xF25B50", VA = "0xF25B50")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xF25C9C", Offset = "0xF25C9C", VA = "0xF25C9C")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xF25DEC", Offset = "0xF25DEC", VA = "0xF25DEC")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xF25F20", Offset = "0xF25F20", VA = "0xF25F20")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xF26070", Offset = "0xF26070", VA = "0xF26070")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xF261A4", Offset = "0xF261A4", VA = "0xF261A4")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xF262F4", Offset = "0xF262F4", VA = "0xF262F4")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xF26428", Offset = "0xF26428", VA = "0xF26428")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xF26578", Offset = "0xF26578", VA = "0xF26578")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xF26684", Offset = "0xF26684", VA = "0xF26684")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xF267A8", Offset = "0xF267A8", VA = "0xF267A8")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xF268BC", Offset = "0xF268BC", VA = "0xF268BC")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public static class Net
	{
		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xF34D14", Offset = "0xF34D14", VA = "0xF34D14")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xF34EE4", Offset = "0xF34EE4", VA = "0xF34EE4")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xF35034", Offset = "0xF35034", VA = "0xF35034")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xF35120", Offset = "0xF35120", VA = "0xF35120")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xF3520C", Offset = "0xF3520C", VA = "0xF3520C")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xF352F8", Offset = "0xF352F8", VA = "0xF352F8")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xF353E8", Offset = "0xF353E8", VA = "0xF353E8")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xF35524", Offset = "0xF35524", VA = "0xF35524")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xF35600", Offset = "0xF35600", VA = "0xF35600")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xF356D8", Offset = "0xF356D8", VA = "0xF356D8")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xF357F4", Offset = "0xF357F4", VA = "0xF357F4")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xF3586C", Offset = "0xF3586C", VA = "0xF3586C")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xF358E4", Offset = "0xF358E4", VA = "0xF358E4")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public static class Leaderboards
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xF245AC", Offset = "0xF245AC", VA = "0xF245AC")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xF246E0", Offset = "0xF246E0", VA = "0xF246E0")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xF24814", Offset = "0xF24814", VA = "0xF24814")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xF24950", Offset = "0xF24950", VA = "0xF24950")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xF24A84", Offset = "0xF24A84", VA = "0xF24A84")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F9")]
	public static class Voip
	{
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1039334", Offset = "0x1039334", VA = "0x1039334")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1039688", Offset = "0x1039688", VA = "0x1039688")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1039420", Offset = "0x1039420", VA = "0x1039420")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x103ADA8", Offset = "0x103ADA8", VA = "0x103ADA8")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x103AECC", Offset = "0x103AECC", VA = "0x103AECC")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x103AFB8", Offset = "0x103AFB8", VA = "0x103AFB8")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x103B094", Offset = "0x103B094", VA = "0x103B094")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x103B170", Offset = "0x103B170", VA = "0x103B170")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x103B260", Offset = "0x103B260", VA = "0x103B260")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x103B350", Offset = "0x103B350", VA = "0x103B350")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x103B440", Offset = "0x103B440", VA = "0x103B440")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x103B5A8", Offset = "0x103B5A8", VA = "0x103B5A8")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x103917C", Offset = "0x103917C", VA = "0x103917C")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x10391F4", Offset = "0x10391F4", VA = "0x10391F4")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x103B6C4", Offset = "0x103B6C4", VA = "0x103B6C4")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public static class Achievements
	{
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xC933F4", Offset = "0xC933F4", VA = "0xC933F4")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xC935CC", Offset = "0xC935CC", VA = "0xC935CC")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xC937C0", Offset = "0xC937C0", VA = "0xC937C0")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xC93954", Offset = "0xC93954", VA = "0xC93954")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xC93AE8", Offset = "0xC93AE8", VA = "0xC93AE8")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xC93D80", Offset = "0xC93D80", VA = "0xC93D80")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xC94018", Offset = "0xC94018", VA = "0xC94018")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xC941D8", Offset = "0xC941D8", VA = "0xC941D8")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xC94418", Offset = "0xC94418", VA = "0xC94418")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FB")]
	public static class Application
	{
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xC948A8", Offset = "0xC948A8", VA = "0xC948A8")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xC94A3C", Offset = "0xC94A3C", VA = "0xC94A3C")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FC")]
	public static class AssetFile
	{
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xC9518C", Offset = "0xC9518C", VA = "0xC9518C")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xC95340", Offset = "0xC95340", VA = "0xC95340")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xC954F4", Offset = "0xC954F4", VA = "0xC954F4")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xC956B4", Offset = "0xC956B4", VA = "0xC956B4")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xC95868", Offset = "0xC95868", VA = "0xC95868")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xC95A1C", Offset = "0xC95A1C", VA = "0xC95A1C")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xC95BDC", Offset = "0xC95BDC", VA = "0xC95BDC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xC95D90", Offset = "0xC95D90", VA = "0xC95D90")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xC95F44", Offset = "0xC95F44", VA = "0xC95F44")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xC96104", Offset = "0xC96104", VA = "0xC96104")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xC96298", Offset = "0xC96298", VA = "0xC96298")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xC9644C", Offset = "0xC9644C", VA = "0xC9644C")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xC96600", Offset = "0xC96600", VA = "0xC96600")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xC967C0", Offset = "0xC967C0", VA = "0xC967C0")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public static class Avatar
	{
	}
	[Token(Token = "0x20001FE")]
	public static class Cal
	{
	}
	[Token(Token = "0x20001FF")]
	public static class CloudStorage
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xF223F4", Offset = "0xF223F4", VA = "0xF223F4")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xF22518", Offset = "0xF22518", VA = "0xF22518")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xF2263C", Offset = "0xF2263C", VA = "0xF2263C")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xF22758", Offset = "0xF22758", VA = "0xF22758")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xF2287C", Offset = "0xF2287C", VA = "0xF2287C")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xF22998", Offset = "0xF22998", VA = "0xF22998")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xF22ABC", Offset = "0xF22ABC", VA = "0xF22ABC")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xF22BF0", Offset = "0xF22BF0", VA = "0xF22BF0")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xF22D24", Offset = "0xF22D24", VA = "0xF22D24")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xF22E84", Offset = "0xF22E84", VA = "0xF22E84")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000200")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xF23004", Offset = "0xF23004", VA = "0xF23004")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x2000201")]
	public static class Colocation
	{
	}
	[Token(Token = "0x2000202")]
	public static class Entitlements
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xF23990", Offset = "0xF23990", VA = "0xF23990")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000203")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000204")]
	public static class HTTP
	{
	}
	[Token(Token = "0x2000205")]
	public static class IAP
	{
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xF23AC0", Offset = "0xF23AC0", VA = "0xF23AC0")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xF23BD4", Offset = "0xF23BD4", VA = "0xF23BD4")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xF23D04", Offset = "0xF23D04", VA = "0xF23D04")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xF23E10", Offset = "0xF23E10", VA = "0xF23E10")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xF23F1C", Offset = "0xF23F1C", VA = "0xF23F1C")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xF24084", Offset = "0xF24084", VA = "0xF24084")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xF24204", Offset = "0xF24204", VA = "0xF24204")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000206")]
	public static class LanguagePack
	{
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xF24384", Offset = "0xF24384", VA = "0xF24384")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xF24490", Offset = "0xF24490", VA = "0xF24490")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000207")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xF24BD4", Offset = "0xF24BD4", VA = "0xF24BD4")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xF24CE0", Offset = "0xF24CE0", VA = "0xF24CE0")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xF24DEC", Offset = "0xF24DEC", VA = "0xF24DEC")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xF24EF8", Offset = "0xF24EF8", VA = "0xF24EF8")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000208")]
	public static class Media
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xF27048", Offset = "0xF27048", VA = "0xF27048")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000209")]
	public static class NetSync
	{
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xF3595C", Offset = "0xF3595C", VA = "0xF3595C")]
		public static void SetConnectionStatusChangedNotificationCallback(Message<NetSyncConnection>.Callback callback)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xF359D4", Offset = "0xF359D4", VA = "0xF359D4")]
		public static void SetSessionsChangedNotificationCallback(Message<NetSyncSessionsChangedNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200020A")]
	public static class Notifications
	{
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xF35D44", Offset = "0xF35D44", VA = "0xF35D44")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xF35E50", Offset = "0xF35E50", VA = "0xF35E50")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xF35F64", Offset = "0xF35F64", VA = "0xF35F64")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200020B")]
	public static class Parties
	{
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xF36424", Offset = "0xF36424", VA = "0xF36424")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xF36530", Offset = "0xF36530", VA = "0xF36530")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200020C")]
	public static class RichPresence
	{
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xF36CD4", Offset = "0xF36CD4", VA = "0xF36CD4")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xF36DD8", Offset = "0xF36DD8", VA = "0xF36DD8")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xF36EE4", Offset = "0xF36EE4", VA = "0xF36EE4")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xF37074", Offset = "0xF37074", VA = "0xF37074")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200020D")]
	public static class Users
	{
		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1023AC4", Offset = "0x1023AC4", VA = "0x1023AC4")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x103A2F0", Offset = "0x103A2F0", VA = "0x103A2F0")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x10239B8", Offset = "0x10239B8", VA = "0x10239B8")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1023BE0", Offset = "0x1023BE0", VA = "0x1023BE0")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x103A3FC", Offset = "0x103A3FC", VA = "0x103A3FC")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x103A508", Offset = "0x103A508", VA = "0x103A508")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x103A650", Offset = "0x103A650", VA = "0x103A650")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x103A76C", Offset = "0x103A76C", VA = "0x103A76C")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x10238AC", Offset = "0x10238AC", VA = "0x10238AC")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x103A878", Offset = "0x103A878", VA = "0x103A878")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x103A994", Offset = "0x103A994", VA = "0x103A994")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x103AAA8", Offset = "0x103AAA8", VA = "0x103AAA8")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x103AC28", Offset = "0x103AC28", VA = "0x103AC28")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200020E")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x400089F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6434", Offset = "0x9B6434")]
		Success = 0,
		[Token(Token = "0x40008A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B646C", Offset = "0x9B646C")]
		Uninitialized = -1,
		[Token(Token = "0x40008A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B64A4", Offset = "0x9B64A4")]
		PreLoaded = -2,
		[Token(Token = "0x40008A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B64DC", Offset = "0x9B64DC")]
		FileInvalid = -3,
		[Token(Token = "0x40008A3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6514", Offset = "0x9B6514")]
		SignatureInvalid = -4,
		[Token(Token = "0x40008A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B654C", Offset = "0x9B654C")]
		UnableToVerify = -5,
		[Token(Token = "0x40008A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6584", Offset = "0x9B6584")]
		VersionMismatch = -6,
		[Token(Token = "0x40008A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B65BC", Offset = "0x9B65BC")]
		Unknown = -7,
		[Token(Token = "0x40008A7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B65F4", Offset = "0x9B65F4")]
		InvalidCredentials = -8,
		[Token(Token = "0x40008A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B662C", Offset = "0x9B662C")]
		NotEntitled = -9
	}
	[Token(Token = "0x200020F")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20003AF")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4001015")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4001016")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4001017")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4001018")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4001019")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x400101A")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x400101B")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x400101C")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x400101D")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x400101E")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x400101F")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4001020")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4001021")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4001022")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4001023")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4001024")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4001025")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4001026")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4001027")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4001028")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4001029")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x400102A")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x400102B")]
			NetSync_Connect = 1684899167u,
			[Token(Token = "0x400102C")]
			NetSync_Disconnect = 359268021u,
			[Token(Token = "0x400102D")]
			NetSync_GetSessions = 1859521077u,
			[Token(Token = "0x400102E")]
			NetSync_SetVoipGroup = 1477614734u,
			[Token(Token = "0x400102F")]
			NetSync_SetVoipMicSource = 855832432u,
			[Token(Token = "0x4001030")]
			NetSync_SetVoipSessionMuted = 1434844938u,
			[Token(Token = "0x4001031")]
			NetSync_SetVoipStreamMode = 1742839095u,
			[Token(Token = "0x4001032")]
			Party_Create = 450042703u,
			[Token(Token = "0x4001033")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4001034")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4001035")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4001036")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4001037")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4001038")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4001039")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x400103A")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x400103B")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x400103C")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x400103D")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x400103E")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x400103F")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4001040")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4001041")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4001042")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4001043")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4001044")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4001045")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4001046")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4001047")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4001048")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4001049")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x400104A")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20003B0")]
		public static class HTTP
		{
			[Token(Token = "0x600158A")]
			[Address(RVA = "0xF36740", Offset = "0xF36740", VA = "0xF36740")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x20003B1")]
		public static class Users
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0xF367B8", Offset = "0xF367B8", VA = "0xF367B8")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xF365A8", Offset = "0xF365A8", VA = "0xF365A8")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xF2A030", Offset = "0xF2A030", VA = "0xF2A030")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xF36608", Offset = "0xF36608", VA = "0xF36608")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000210")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x170000C9")]
		public static string AppID
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xF23964", Offset = "0xF23964", VA = "0xF23964")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xF36A74", Offset = "0xF36A74", VA = "0xF36A74")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public static string MobileAppID
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xF23944", Offset = "0xF23944", VA = "0xF23944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xF36AA0", Offset = "0xF36AA0", VA = "0xF36AA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0xF23644", Offset = "0xF23644", VA = "0xF23644")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0xF36ACC", Offset = "0xF36ACC", VA = "0xF36ACC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xF36960", Offset = "0xF36960", VA = "0xF36960")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xF36AFC", Offset = "0xF36AFC", VA = "0xF36AFC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xF36B50", Offset = "0xF36B50", VA = "0xF36B50")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6000F37")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000F38")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class Request
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B6694", Offset = "0x9B6694")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x170000CD")]
		public ulong RequestID
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xF36BB0", Offset = "0xF36BB0", VA = "0xF36BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB5C8", Offset = "0x9BB5C8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xF36BB8", Offset = "0xF36BB8", VA = "0xF36BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB5D8", Offset = "0x9BB5D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xF23A94", Offset = "0xF23A94", VA = "0xF23A94")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xF36BC0", Offset = "0xF36BC0", VA = "0xF36BC0")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xF36C3C", Offset = "0xF36C3C", VA = "0xF36C3C", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xF22300", Offset = "0xF22300", VA = "0xF22300")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x40008B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B66A4", Offset = "0x9B66A4")]
		Unknown,
		[Token(Token = "0x40008B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B66DC", Offset = "0x9B66DC")]
		None,
		[Token(Token = "0x40008B3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6714", Offset = "0x9B6714")]
		CurrentCapacity,
		[Token(Token = "0x40008B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B674C", Offset = "0x9B674C")]
		StartedAgo,
		[Token(Token = "0x40008B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6784", Offset = "0x9B6784")]
		EndingIn,
		[Token(Token = "0x40008B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B67BC", Offset = "0x9B67BC")]
		LookingForAMatch
	}
	[Token(Token = "0x2000214")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xF371F4", Offset = "0xF371F4", VA = "0xF371F4")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xF3726C", Offset = "0xF3726C", VA = "0xF3726C")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xF372E8", Offset = "0xF372E8", VA = "0xF372E8")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xF3736C", Offset = "0xF3736C", VA = "0xF3736C")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xF373D8", Offset = "0xF373D8", VA = "0xF373D8")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xF37454", Offset = "0xF37454", VA = "0xF37454")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xF374D0", Offset = "0xF374D0", VA = "0xF374D0")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xF3754C", Offset = "0xF3754C", VA = "0xF3754C")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xF375C8", Offset = "0xF375C8", VA = "0xF375C8")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xF37644", Offset = "0xF37644", VA = "0xF37644")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xF376C0", Offset = "0xF376C0", VA = "0xF376C0")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xF3773C", Offset = "0xF3773C", VA = "0xF3773C")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xF377B8", Offset = "0xF377B8", VA = "0xF377B8")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xF37024", Offset = "0xF37024", VA = "0xF37024")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xF37834", Offset = "0xF37834", VA = "0xF37834", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public enum RoomJoinability
	{
		[Token(Token = "0x40008B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B67F4", Offset = "0x9B67F4")]
		Unknown,
		[Token(Token = "0x40008BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B682C", Offset = "0x9B682C")]
		AreIn,
		[Token(Token = "0x40008BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6864", Offset = "0x9B6864")]
		AreKicked,
		[Token(Token = "0x40008BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B689C", Offset = "0x9B689C")]
		CanJoin,
		[Token(Token = "0x40008BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B68D4", Offset = "0x9B68D4")]
		IsFull,
		[Token(Token = "0x40008BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B690C", Offset = "0x9B690C")]
		NoViewer,
		[Token(Token = "0x40008BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6944", Offset = "0x9B6944")]
		PolicyPrevents
	}
	[Token(Token = "0x2000216")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x40008C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B697C", Offset = "0x9B697C")]
		None,
		[Token(Token = "0x40008C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B69B4", Offset = "0x9B69B4")]
		Everyone,
		[Token(Token = "0x40008C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B69EC", Offset = "0x9B69EC")]
		FriendsOfMembers,
		[Token(Token = "0x40008C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6A24", Offset = "0x9B6A24")]
		FriendsOfOwner,
		[Token(Token = "0x40008C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6A5C", Offset = "0x9B6A5C")]
		InvitedUsers,
		[Token(Token = "0x40008C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6A94", Offset = "0x9B6A94")]
		Unknown
	}
	[Token(Token = "0x2000217")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x40008C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6ACC", Offset = "0x9B6ACC")]
		Unknown,
		[Token(Token = "0x40008C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6B04", Offset = "0x9B6B04")]
		Lock,
		[Token(Token = "0x40008CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6B3C", Offset = "0x9B6B3C")]
		Unlock
	}
	[Token(Token = "0x2000218")]
	public class RoomOptions
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xF378F0", Offset = "0xF378F0", VA = "0xF378F0")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xF37968", Offset = "0xF37968", VA = "0xF37968")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xF379EC", Offset = "0xF379EC", VA = "0xF379EC")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xF37A58", Offset = "0xF37A58", VA = "0xF37A58")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xF37AD4", Offset = "0xF37AD4", VA = "0xF37AD4")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xF37B50", Offset = "0xF37B50", VA = "0xF37B50")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xF37BCC", Offset = "0xF37BCC", VA = "0xF37BCC")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xF37C48", Offset = "0xF37C48", VA = "0xF37C48")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xF37CC4", Offset = "0xF37CC4", VA = "0xF37CC4")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xF37D40", Offset = "0xF37D40", VA = "0xF37D40")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xF37D90", Offset = "0xF37D90", VA = "0xF37D90", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public enum RoomType
	{
		[Token(Token = "0x40008CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6B74", Offset = "0x9B6B74")]
		Unknown,
		[Token(Token = "0x40008CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6BAC", Offset = "0x9B6BAC")]
		Matchmaking,
		[Token(Token = "0x40008CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6BE4", Offset = "0x9B6BE4")]
		Moderated,
		[Token(Token = "0x40008D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6C1C", Offset = "0x9B6C1C")]
		Private,
		[Token(Token = "0x40008D1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6C54", Offset = "0x9B6C54")]
		Solo
	}
	[Token(Token = "0x200021A")]
	public enum SdkAccountType
	{
		[Token(Token = "0x40008D3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6C8C", Offset = "0x9B6C8C")]
		Unknown,
		[Token(Token = "0x40008D4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6CC4", Offset = "0x9B6CC4")]
		Oculus,
		[Token(Token = "0x40008D5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6CFC", Offset = "0x9B6CFC")]
		FacebookGameroom
	}
	[Token(Token = "0x200021B")]
	public enum SendPolicy
	{
		[Token(Token = "0x40008D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6D34", Offset = "0x9B6D34")]
		Unreliable,
		[Token(Token = "0x40008D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6D6C", Offset = "0x9B6D6C")]
		Reliable,
		[Token(Token = "0x40008D9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6DA4", Offset = "0x9B6DA4")]
		Unknown
	}
	[Token(Token = "0x200021C")]
	public enum ServiceProvider
	{
		[Token(Token = "0x40008DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6DDC", Offset = "0x9B6DDC")]
		Unknown,
		[Token(Token = "0x40008DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6E14", Offset = "0x9B6E14")]
		Dropbox,
		[Token(Token = "0x40008DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6E4C", Offset = "0x9B6E4C")]
		Facebook,
		[Token(Token = "0x40008DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6E84", Offset = "0x9B6E84")]
		Google,
		[Token(Token = "0x40008DF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6EBC", Offset = "0x9B6EBC")]
		Instagram,
		[Token(Token = "0x40008E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6EF4", Offset = "0x9B6EF4")]
		RemoteMedia
	}
	[Token(Token = "0x200021D")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40008E2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6F2C", Offset = "0x9B6F2C")]
		Unknown,
		[Token(Token = "0x40008E3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6F64", Offset = "0x9B6F64")]
		Shared,
		[Token(Token = "0x40008E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6F9C", Offset = "0x9B6F9C")]
		Canceled
	}
	[Token(Token = "0x200021E")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9B26C0", Offset = "0x9B26C0")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1039960", Offset = "0x1039960", VA = "0x1039960")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1039AA4", Offset = "0x1039AA4", VA = "0x1039AA4")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1039B68", Offset = "0x1039B68", VA = "0x1039B68")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x170000CE")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1039E88", Offset = "0x1039E88", VA = "0x1039E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x1039ED8", Offset = "0x1039ED8", VA = "0x1039ED8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1039EDC", Offset = "0x1039EDC", VA = "0x1039EDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x1039F2C", Offset = "0x1039F2C", VA = "0x1039F2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1039F30", Offset = "0x1039F30", VA = "0x1039F30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x1039F80", Offset = "0x1039F80", VA = "0x1039F80")]
			set
			{
			}
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1039F84", Offset = "0x1039F84", VA = "0x1039F84")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40008E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B6FD4", Offset = "0x9B6FD4")]
		Unknown,
		[Token(Token = "0x40008E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B700C", Offset = "0x9B700C")]
		Unavailable,
		[Token(Token = "0x40008E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7044", Offset = "0x9B7044")]
		Suppressed,
		[Token(Token = "0x40008E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B707C", Offset = "0x9B707C")]
		Active
	}
	[Token(Token = "0x2000221")]
	public enum TimeWindow
	{
		[Token(Token = "0x40008EB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B70B4", Offset = "0x9B70B4")]
		Unknown,
		[Token(Token = "0x40008EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B70EC", Offset = "0x9B70EC")]
		OneHour,
		[Token(Token = "0x40008ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7124", Offset = "0x9B7124")]
		OneDay,
		[Token(Token = "0x40008EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B715C", Offset = "0x9B715C")]
		OneWeek,
		[Token(Token = "0x40008EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7194", Offset = "0x9B7194")]
		ThirtyDays,
		[Token(Token = "0x40008F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B71CC", Offset = "0x9B71CC")]
		NinetyDays
	}
	[Token(Token = "0x2000222")]
	public class UserOptions
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1039F8C", Offset = "0x1039F8C", VA = "0x1039F8C")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x103A004", Offset = "0x103A004", VA = "0x103A004")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x103A080", Offset = "0x103A080", VA = "0x103A080")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x103A0FC", Offset = "0x103A0FC", VA = "0x103A0FC")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x103A168", Offset = "0x103A168", VA = "0x103A168")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x103A1E4", Offset = "0x103A1E4", VA = "0x103A1E4")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x103A234", Offset = "0x103A234", VA = "0x103A234", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public enum UserOrdering
	{
		[Token(Token = "0x40008F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7204", Offset = "0x9B7204")]
		Unknown,
		[Token(Token = "0x40008F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B723C", Offset = "0x9B723C")]
		None,
		[Token(Token = "0x40008F5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7274", Offset = "0x9B7274")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000224")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40008F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B72AC", Offset = "0x9B72AC")]
		Unknown,
		[Token(Token = "0x40008F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B72E4", Offset = "0x9B72E4")]
		Online,
		[Token(Token = "0x40008F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B731C", Offset = "0x9B731C")]
		Offline
	}
	[Token(Token = "0x2000225")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20003B3")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6001590")]
			[Address(RVA = "0x103BE20", Offset = "0x103BE20", VA = "0x103BE20")]
			private void Awake()
			{
			}

			[Token(Token = "0x6001591")]
			[Address(RVA = "0x103BED8", Offset = "0x103BED8", VA = "0x103BED8")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6001592")]
			[Address(RVA = "0x103C3B0", Offset = "0x103C3B0", VA = "0x103C3B0")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170000D1")]
		public ulong senderID
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x103926C", Offset = "0x103926C", VA = "0x103926C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x103B73C", Offset = "0x103B73C", VA = "0x103B73C")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x103B740", Offset = "0x103B740", VA = "0x103B740")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x103B77C", Offset = "0x103B77C", VA = "0x103B77C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x103BA2C", Offset = "0x103BA2C", VA = "0x103BA2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x103BA48", Offset = "0x103BA48", VA = "0x103BA48", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x103BAB0", Offset = "0x103BAB0", VA = "0x103BAB0")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x103BB38", Offset = "0x103BB38", VA = "0x103BB38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x103BE14", Offset = "0x103BE14", VA = "0x103BE14")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public enum VoipBitrate
	{
		[Token(Token = "0x4000901")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7354", Offset = "0x9B7354")]
		Unknown,
		[Token(Token = "0x4000902")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B738C", Offset = "0x9B738C")]
		B16000,
		[Token(Token = "0x4000903")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B73C4", Offset = "0x9B73C4")]
		B24000,
		[Token(Token = "0x4000904")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B73FC", Offset = "0x9B73FC")]
		B32000,
		[Token(Token = "0x4000905")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7434", Offset = "0x9B7434")]
		B64000,
		[Token(Token = "0x4000906")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B746C", Offset = "0x9B746C")]
		B96000,
		[Token(Token = "0x4000907")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B74A4", Offset = "0x9B74A4")]
		B128000
	}
	[Token(Token = "0x2000227")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4000909")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B74DC", Offset = "0x9B74DC")]
		Unknown,
		[Token(Token = "0x400090A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7514", Offset = "0x9B7514")]
		Enabled,
		[Token(Token = "0x400090B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B754C", Offset = "0x9B754C")]
		Disabled
	}
	[Token(Token = "0x2000228")]
	public enum VoipMuteState
	{
		[Token(Token = "0x400090D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7584", Offset = "0x9B7584")]
		Unknown,
		[Token(Token = "0x400090E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B75BC", Offset = "0x9B75BC")]
		Muted,
		[Token(Token = "0x400090F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B75F4", Offset = "0x9B75F4")]
		Unmuted
	}
	[Token(Token = "0x2000229")]
	public class VoipOptions
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x103C3B8", Offset = "0x103C3B8", VA = "0x103C3B8")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x103C430", Offset = "0x103C430", VA = "0x103C430")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x103C4AC", Offset = "0x103C4AC", VA = "0x103C4AC")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x103B558", Offset = "0x103B558", VA = "0x103B558")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x103C528", Offset = "0x103C528", VA = "0x103C528", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x103C5E4", Offset = "0x103C5E4", VA = "0x103C5E4", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x103C6A4", Offset = "0x103C6A4", VA = "0x103C6A4", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x103C6AC", Offset = "0x103C6AC", VA = "0x103C6AC", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x103C74C", Offset = "0x103C74C", VA = "0x103C74C", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x103BAA8", Offset = "0x103BAA8", VA = "0x103BAA8")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4000913")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B762C", Offset = "0x9B762C")]
		Unknown,
		[Token(Token = "0x4000914")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B7664", Offset = "0x9B7664")]
		HZ24000,
		[Token(Token = "0x4000915")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B769C", Offset = "0x9B769C")]
		HZ44100,
		[Token(Token = "0x4000916")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9B76D4", Offset = "0x9B76D4")]
		HZ48000
	}
	[Token(Token = "0x200022C")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9B26D4", Offset = "0x9B26D4")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x103C750", Offset = "0x103C750", VA = "0x103C750")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x103C828", Offset = "0x103C828", VA = "0x103C828")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x103C868", Offset = "0x103C868", VA = "0x103C868")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x103C950", Offset = "0x103C950", VA = "0x103C950")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x103CA68", Offset = "0x103CA68", VA = "0x103CA68")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x200022D")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xF2AD70", Offset = "0xF2AD70", VA = "0xF2AD70")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class AchievementDefinition
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xF33980", Offset = "0xF33980", VA = "0xF33980")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xF2AED8", Offset = "0xF2AED8", VA = "0xF2AED8")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class AchievementProgress
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xF33A38", Offset = "0xF33A38", VA = "0xF33A38")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xF2B1BC", Offset = "0xF2B1BC", VA = "0xF2B1BC")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xF2B4A0", Offset = "0xF2B4A0", VA = "0xF2B4A0")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xF2B61C", Offset = "0xF2B61C", VA = "0xF2B61C")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class AssetDetails
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B770C", Offset = "0x9B770C")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xF2B7B4", Offset = "0xF2B7B4", VA = "0xF2B7B4")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xF2B9E0", Offset = "0xF2B9E0", VA = "0xF2B9E0")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xF2BC94", Offset = "0xF2BC94", VA = "0xF2BC94")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xF2BE30", Offset = "0xF2BE30", VA = "0xF2BE30")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xF2BFCC", Offset = "0xF2BFCC", VA = "0xF2BFCC")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xF2C144", Offset = "0xF2C144", VA = "0xF2C144")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xF2C2F0", Offset = "0xF2C2F0", VA = "0xF2C2F0")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xF2C478", Offset = "0xF2C478", VA = "0xF2C478")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xF33BAC", Offset = "0xF33BAC", VA = "0xF33BAC")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xF2C640", Offset = "0xF2C640", VA = "0xF2C640")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xF2C8F4", Offset = "0xF2C8F4", VA = "0xF2C8F4")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class CloudStorageData
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xF2CAB4", Offset = "0xF2CAB4", VA = "0xF2CAB4")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xF2CF30", Offset = "0xF2CF30", VA = "0xF2CF30")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xF2CC4C", Offset = "0xF2CC4C", VA = "0xF2CC4C")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xF2D108", Offset = "0xF2D108", VA = "0xF2D108")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B2050", Offset = "0x9B2050")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170000D2")]
		public int Count
		{
			[Token(Token = "0x6000F9A")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000F9B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D4")]
		public T Item
		{
			[Token(Token = "0x6000F9D")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000F9E")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9BD044", Offset = "0x9BD044")]
		public List<T> Data
		{
			[Token(Token = "0x6000FA9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000FAA")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D7")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000FAB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D8")]
		public string NextUrl
		{
			[Token(Token = "0x6000FAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000FAD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9C")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000F9F")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000FA0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000FA1")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000FA3")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FA4")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000FA5")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA6")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000FA7")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000FA8")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FAE")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class Destination
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xF33C44", Offset = "0xF33C44", VA = "0xF33C44")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xF2D2A0", Offset = "0xF2D2A0", VA = "0xF2D2A0")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class Error
	{
		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xF273B4", Offset = "0xF273B4", VA = "0xF273B4")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xF2D584", Offset = "0xF2D584", VA = "0xF2D584")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xF33CEC", Offset = "0xF33CEC", VA = "0xF33CEC")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xF2D80C", Offset = "0xF2D80C", VA = "0xF2D80C")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xF33B04", Offset = "0xF33B04", VA = "0xF33B04")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xF2DB20", Offset = "0xF2DB20", VA = "0xF2DB20")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class LaunchDetails
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B7744", Offset = "0x9B7744")]
		public readonly UserList Users;

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xF33DB4", Offset = "0xF33DB4", VA = "0xF33DB4")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xF2DCA0", Offset = "0xF2DCA0", VA = "0xF2DCA0")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xF2DE80", Offset = "0xF2DE80", VA = "0xF2DE80")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xF2E05C", Offset = "0xF2E05C", VA = "0xF2E05C")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xF33ED0", Offset = "0xF33ED0", VA = "0xF33ED0")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xF2E298", Offset = "0xF2E298", VA = "0xF2E298")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class LinkedAccount
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xF33FBC", Offset = "0xF33FBC", VA = "0xF33FBC")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xF2E5FC", Offset = "0xF2E5FC", VA = "0xF2E5FC")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xF2E910", Offset = "0xF2E910", VA = "0xF2E910")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xF2EADC", Offset = "0xF2EADC", VA = "0xF2EADC")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xF2EC44", Offset = "0xF2EC44", VA = "0xF2EC44")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xF2EE5C", Offset = "0xF2EE5C", VA = "0xF2EE5C")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xF2EFE4", Offset = "0xF2EFE4", VA = "0xF2EFE4")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xF34238", Offset = "0xF34238", VA = "0xF34238")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xF34064", Offset = "0xF34064", VA = "0xF34064")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xF2F1E4", Offset = "0xF2F1E4", VA = "0xF2F1E4")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B777C", Offset = "0x9B777C")]
		public readonly User User;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xF34304", Offset = "0xF34304", VA = "0xF34304")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xF343E8", Offset = "0xF343E8", VA = "0xF343E8")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B77B4", Offset = "0x9B77B4")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xF2F3A4", Offset = "0xF2F3A4", VA = "0xF2F3A4")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xF2F5D0", Offset = "0xF2F5D0", VA = "0xF2F5D0")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class MatchmakingStats
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xF2FBC0", Offset = "0xF2FBC0", VA = "0xF2FBC0")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class NetSyncConnection
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncDisconnectReason DisconnectReason;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly NetSyncConnectionStatus Status;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string ZoneId;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xF2FD78", Offset = "0xF2FD78", VA = "0xF2FD78")]
		public NetSyncConnection(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class NetSyncSession
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool Muted;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VoipGroup;

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xF345BC", Offset = "0xF345BC", VA = "0xF345BC")]
		public NetSyncSession(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class NetSyncSessionList : DeserializableList<NetSyncSession>
	{
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xF2FF80", Offset = "0xF2FF80", VA = "0xF2FF80")]
		public NetSyncSessionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class NetSyncSessionsChangedNotification
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncSessionList Sessions;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xF30234", Offset = "0xF30234", VA = "0xF30234")]
		public NetSyncSessionsChangedNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class NetSyncSetSessionPropertyResult
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly NetSyncSession Session;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xF30430", Offset = "0xF30430", VA = "0xF30430")]
		public NetSyncSetSessionPropertyResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class NetworkingPeer
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B77EC", Offset = "0x9B77EC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B77FC", Offset = "0x9B77FC")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170000DA")]
		public ulong ID
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xF34688", Offset = "0xF34688", VA = "0xF34688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB5E8", Offset = "0x9BB5E8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xF34690", Offset = "0xF34690", VA = "0xF34690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB5F8", Offset = "0x9BB5F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xF34698", Offset = "0xF34698", VA = "0xF34698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB608", Offset = "0x9BB608")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xF346A0", Offset = "0xF346A0", VA = "0xF346A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB618", Offset = "0x9BB618")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xF305E0", Offset = "0xF305E0", VA = "0xF305E0")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class OrgScopedID
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xF306FC", Offset = "0xF306FC", VA = "0xF306FC")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class Party
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B780C", Offset = "0x9B780C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B7844", Offset = "0x9B7844")]
		public readonly User Leader;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B787C", Offset = "0x9B787C")]
		public readonly Room Room;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B78B4", Offset = "0x9B78B4")]
		public readonly UserList Users;

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xF308C4", Offset = "0xF308C4", VA = "0xF308C4")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class PartyID
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xF30C24", Offset = "0xF30C24", VA = "0xF30C24")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xF30E6C", Offset = "0xF30E6C", VA = "0xF30E6C")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class Pid
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xF346A8", Offset = "0xF346A8", VA = "0xF346A8")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xF31034", Offset = "0xF31034", VA = "0xF31034")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class PingResult
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B78EC", Offset = "0x9B78EC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170000DC")]
		public ulong ID
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xF34730", Offset = "0xF34730", VA = "0xF34730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB628", Offset = "0x9BB628")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xF34738", Offset = "0xF34738", VA = "0xF34738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB638", Offset = "0x9BB638")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xF34740", Offset = "0xF34740", VA = "0xF34740")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000DE")]
		public bool IsTimeout
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xF347A8", Offset = "0xF347A8", VA = "0xF347A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xF31368", Offset = "0xF31368", VA = "0xF31368")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class PlatformInitialize
	{
		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xF31488", Offset = "0xF31488", VA = "0xF31488")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class Product
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xF347F4", Offset = "0xF347F4", VA = "0xF347F4")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xF315F0", Offset = "0xF315F0", VA = "0xF315F0")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class Purchase
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xF318D4", Offset = "0xF318D4", VA = "0xF318D4")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xF31A6C", Offset = "0xF31A6C", VA = "0xF31A6C")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class Room
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B78FC", Offset = "0x9B78FC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B7934", Offset = "0x9B7934")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B796C", Offset = "0x9B796C")]
		public readonly User Owner;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B79A4", Offset = "0x9B79A4")]
		public readonly TeamList Teams;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B79DC", Offset = "0x9B79DC")]
		public readonly UserList Users;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xF2F790", Offset = "0xF2F790", VA = "0xF2F790")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xF322AC", Offset = "0xF322AC", VA = "0xF322AC")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xF31E30", Offset = "0xF31E30", VA = "0xF31E30")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xF31FC8", Offset = "0xF31FC8", VA = "0xF31FC8")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class SdkAccount
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xF34A80", Offset = "0xF34A80", VA = "0xF34A80")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xF32750", Offset = "0xF32750", VA = "0xF32750")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class ShareMediaResult
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xF32A04", Offset = "0xF32A04", VA = "0xF32A04")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class SystemPermission
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xF32C78", Offset = "0xF32C78", VA = "0xF32C78")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class SystemVoipState
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xF32DF4", Offset = "0xF32DF4", VA = "0xF32DF4")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class Team
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xF34B18", Offset = "0xF34B18", VA = "0xF34B18")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xF348AC", Offset = "0xF348AC", VA = "0xF348AC")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class User
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xF32F6C", Offset = "0xF32F6C", VA = "0xF32F6C")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xF33438", Offset = "0xF33438", VA = "0xF33438")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class UserAndRoom
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B7A14", Offset = "0x9B7A14")]
		public readonly Room Room;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xF34BF4", Offset = "0xF34BF4", VA = "0xF34BF4")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xF33154", Offset = "0xF33154", VA = "0xF33154")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class UserProof
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xF3371C", Offset = "0xF3371C", VA = "0xF3371C")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class UserReportID
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xF338E4", Offset = "0xF338E4", VA = "0xF338E4")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x2000284")]
	public class P2PManager
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x170000DF")]
		public bool Connected
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x1035558", Offset = "0x1035558", VA = "0x1035558")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x1035B1C", Offset = "0x1035B1C", VA = "0x1035B1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1035258", Offset = "0x1035258", VA = "0x1035258")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x10353B4", Offset = "0x10353B4", VA = "0x10353B4")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1035524", Offset = "0x1035524", VA = "0x1035524")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1035568", Offset = "0x1035568", VA = "0x1035568")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x10356E8", Offset = "0x10356E8", VA = "0x10356E8")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x1035B60", Offset = "0x1035B60", VA = "0x1035B60")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x1035D10", Offset = "0x1035D10", VA = "0x1035D10")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x1035DB8", Offset = "0x1035DB8", VA = "0x1035DB8")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20003B5")]
		public enum State
		{
			[Token(Token = "0x400104E")]
			INITIALIZING,
			[Token(Token = "0x400104F")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x4001050")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x4001051")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x4001052")]
			HANGUP
		}

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B26E8", Offset = "0x9B26E8")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6001597")]
			[Address(RVA = "0x1037CC8", Offset = "0x1037CC8", VA = "0x1037CC8")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001598")]
			[Address(RVA = "0x1037CDC", Offset = "0x1037CDC", VA = "0x1037CDC")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x170000E1")]
		public static State CurrentState
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x103705C", Offset = "0x103705C", VA = "0x103705C")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000E2")]
		public static ulong MyID
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x1035448", Offset = "0x1035448", VA = "0x1035448")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000E3")]
		public static string MyOculusID
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x10370D4", Offset = "0x10370D4", VA = "0x10370D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1036264", Offset = "0x1036264", VA = "0x1036264")]
		private void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x10364A8", Offset = "0x10364A8", VA = "0x10364A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1036B74", Offset = "0x1036B74", VA = "0x1036B74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1036C10", Offset = "0x1036C10", VA = "0x1036C10")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x1036DB4", Offset = "0x1036DB4", VA = "0x1036DB4")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1036EE0", Offset = "0x1036EE0", VA = "0x1036EE0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1036D04", Offset = "0x1036D04", VA = "0x1036D04")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x10371EC", Offset = "0x10371EC", VA = "0x10371EC")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x1037328", Offset = "0x1037328", VA = "0x1037328")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x1037340", Offset = "0x1037340", VA = "0x1037340")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1037348", Offset = "0x1037348", VA = "0x1037348")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x10366A4", Offset = "0x10366A4", VA = "0x10366A4")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x10358D8", Offset = "0x10358D8", VA = "0x10358D8")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x10375D8", Offset = "0x10375D8", VA = "0x10375D8")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1037CD0", Offset = "0x1037CD0", VA = "0x1037CD0")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class RoomManager
	{
		[Token(Token = "0x20003B7")]
		public struct Invite
		{
			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6001599")]
			[Address(RVA = "0xA63120", Offset = "0xA63120", VA = "0xA63120")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x170000E4")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x10374F4", Offset = "0x10374F4", VA = "0x10374F4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000E5")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x1037D44", Offset = "0x1037D44", VA = "0x1037D44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x1036324", Offset = "0x1036324", VA = "0x1036324")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x10369EC", Offset = "0x10369EC", VA = "0x10369EC")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1037DA8", Offset = "0x1037DA8", VA = "0x1037DA8")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1036EB8", Offset = "0x1036EB8", VA = "0x1036EB8")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1037270", Offset = "0x1037270", VA = "0x1037270")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1037EDC", Offset = "0x1037EDC", VA = "0x1037EDC")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1038000", Offset = "0x1038000", VA = "0x1038000")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x1036364", Offset = "0x1036364", VA = "0x1036364")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x103808C", Offset = "0x103808C", VA = "0x103808C")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1038464", Offset = "0x1038464", VA = "0x1038464")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x103743C", Offset = "0x103743C", VA = "0x103743C")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x10385EC", Offset = "0x10385EC", VA = "0x10385EC")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1038A70", Offset = "0x1038A70", VA = "0x1038A70")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1036F3C", Offset = "0x1036F3C", VA = "0x1036F3C")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class VoipManager
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x170000E7")]
		public bool Connected
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x10375C8", Offset = "0x10375C8", VA = "0x10375C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1036AB4", Offset = "0x1036AB4", VA = "0x1036AB4")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x103750C", Offset = "0x103750C", VA = "0x103750C")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1036FB4", Offset = "0x1036FB4", VA = "0x1036FB4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x103950C", Offset = "0x103950C", VA = "0x103950C")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1039774", Offset = "0x1039774", VA = "0x1039774")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1038F6C", Offset = "0x1038F6C", VA = "0x1038F6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x1039174", Offset = "0x1039174", VA = "0x1039174")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x2000289")]
	public class AchievementsManager
	{
		[Token(Token = "0x4000A2B")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x170000E8")]
		public bool LikesToWin
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x102B89C", Offset = "0x102B89C", VA = "0x102B89C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x102B8A4", Offset = "0x102B8A4", VA = "0x102B8A4")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x102B9BC", Offset = "0x102B9BC", VA = "0x102B9BC")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x102BA18", Offset = "0x102BA18", VA = "0x102BA18")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x102BA20", Offset = "0x102BA20", VA = "0x102BA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB648", Offset = "0x9BB648")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6001033")]
		[Address(RVA = "0x102B548", Offset = "0x102B548", VA = "0x102B548")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x102B828", Offset = "0x102B828", VA = "0x102B828")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6001035")]
		[Address(RVA = "0x102BC74", Offset = "0x102BC74", VA = "0x102BC74")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6001036")]
		[Address(RVA = "0x102BC7C", Offset = "0x102BC7C", VA = "0x102BC7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x102BEF8", Offset = "0x102BEF8", VA = "0x102BEF8")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x20003B8")]
		private enum BasketPhase
		{
			[Token(Token = "0x4001057")]
			NONE,
			[Token(Token = "0x4001058")]
			TOP,
			[Token(Token = "0x4001059")]
			BOTH,
			[Token(Token = "0x400105A")]
			BOTTOM
		}

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x170000E9")]
		public Player Player
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x102BF00", Offset = "0x102BF00", VA = "0x102BF00")]
			set
			{
			}
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x102BF08", Offset = "0x102BF08", VA = "0x102BF08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x102BFEC", Offset = "0x102BFEC", VA = "0x102BFEC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x102C1AC", Offset = "0x102C1AC", VA = "0x102C1AC")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x4000A2F")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x102C1B4", Offset = "0x102C1B4", VA = "0x102C1B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x102C254", Offset = "0x102C254", VA = "0x102C254")]
		private void Update()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x102C394", Offset = "0x102C394", VA = "0x102C394")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x4000A34")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x170000EA")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x102C430", Offset = "0x102C430", VA = "0x102C430")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x102C43C", Offset = "0x102C43C", VA = "0x102C43C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x102C448", Offset = "0x102C448", VA = "0x102C448")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x102C454", Offset = "0x102C454", VA = "0x102C454")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x102C460", Offset = "0x102C460", VA = "0x102C460")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x102C46C", Offset = "0x102C46C", VA = "0x102C46C")]
			set
			{
			}
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x102C478", Offset = "0x102C478", VA = "0x102C478")]
		private void Start()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x102C608", Offset = "0x102C608", VA = "0x102C608")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x102C940", Offset = "0x102C940", VA = "0x102C940")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class LeaderboardManager
	{
		[Token(Token = "0x20003B9")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x20003BA")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x4000A38")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x4000A39")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x4000A3A")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x4000A3B")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x170000ED")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x102CBE0", Offset = "0x102CBE0", VA = "0x102CBE0")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x102D3F0", Offset = "0x102D3F0", VA = "0x102D3F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x102C958", Offset = "0x102C958", VA = "0x102C958")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x102C9C0", Offset = "0x102C9C0", VA = "0x102C9C0")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x102CBE8", Offset = "0x102CBE8", VA = "0x102CBE8")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x102CAD0", Offset = "0x102CAD0", VA = "0x102CAD0")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x102D3F8", Offset = "0x102D3F8", VA = "0x102D3F8")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x102DB50", Offset = "0x102DB50", VA = "0x102DB50")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x102DC04", Offset = "0x102DC04", VA = "0x102DC04")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x170000EF")]
		public override uint Score
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x102DC8C", Offset = "0x102DC8C", VA = "0x102DC8C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x102DF7C", Offset = "0x102DF7C", VA = "0x102DF7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x102E100", Offset = "0x102E100", VA = "0x102E100")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x20003BB")]
		private enum State
		{
			[Token(Token = "0x400105C")]
			UNKNOWN,
			[Token(Token = "0x400105D")]
			NONE,
			[Token(Token = "0x400105E")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x400105F")]
			PRACTICING,
			[Token(Token = "0x4001060")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4001061")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4001062")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4001063")]
			PLAYING_MATCH,
			[Token(Token = "0x4001064")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x170000F0")]
		public float MatchStartTime
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x102E908", Offset = "0x102E908", VA = "0x102E908")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x102E928", Offset = "0x102E928", VA = "0x102E928")]
			private set
			{
			}
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x102E104", Offset = "0x102E104", VA = "0x102E104")]
		private void Start()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x102E63C", Offset = "0x102E63C", VA = "0x102E63C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x102E370", Offset = "0x102E370", VA = "0x102E370")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x102E660", Offset = "0x102E660", VA = "0x102E660")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x102E704", Offset = "0x102E704", VA = "0x102E704")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x102E930", Offset = "0x102E930", VA = "0x102E930")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x102EBB8", Offset = "0x102EBB8", VA = "0x102EBB8")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x102F29C", Offset = "0x102F29C", VA = "0x102F29C")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x102E9E4", Offset = "0x102E9E4", VA = "0x102E9E4")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x102ECBC", Offset = "0x102ECBC", VA = "0x102ECBC")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x102F55C", Offset = "0x102F55C", VA = "0x102F55C")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x102F574", Offset = "0x102F574", VA = "0x102F574")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x102F728", Offset = "0x102F728", VA = "0x102F728")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x102F73C", Offset = "0x102F73C", VA = "0x102F73C")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x102F840", Offset = "0x102F840", VA = "0x102F840")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x102FDCC", Offset = "0x102FDCC", VA = "0x102FDCC")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x102EE4C", Offset = "0x102EE4C", VA = "0x102EE4C")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x102F3B0", Offset = "0x102F3B0", VA = "0x102F3B0")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1030410", Offset = "0x1030410", VA = "0x1030410")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class MatchmakingManager
	{
		[Token(Token = "0x20003BC")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x20003BD")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x4000A54")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x170000F1")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x1030564", Offset = "0x1030564", VA = "0x1030564")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x103056C", Offset = "0x103056C", VA = "0x103056C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x1030574", Offset = "0x1030574", VA = "0x1030574")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x103057C", Offset = "0x103057C", VA = "0x103057C")]
			set
			{
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x103047C", Offset = "0x103047C", VA = "0x103047C")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x102F644", Offset = "0x102F644", VA = "0x102F644")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1030584", Offset = "0x1030584", VA = "0x1030584")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x1030894", Offset = "0x1030894", VA = "0x1030894")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1030968", Offset = "0x1030968", VA = "0x1030968")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1031180", Offset = "0x1031180", VA = "0x1031180")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x102F168", Offset = "0x102F168", VA = "0x102F168")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x102F700", Offset = "0x102F700", VA = "0x102F700")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class P2PManager
	{
		[Token(Token = "0x20003BE")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1032A74", Offset = "0x1032A74", VA = "0x1032A74")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x20003BF")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x4000A5B")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x4000A5C")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000A5D")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4000A5E")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4000A5F")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000A60")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4000A61")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x4000A62")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x4000A63")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x4000A64")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4000A65")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4000A66")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x170000F3")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x10333FC", Offset = "0x10333FC", VA = "0x10333FC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x1033404", Offset = "0x1033404", VA = "0x1033404")]
			set
			{
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1031828", Offset = "0x1031828", VA = "0x1031828")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x10319A0", Offset = "0x10319A0", VA = "0x10319A0")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x1030FCC", Offset = "0x1030FCC", VA = "0x1030FCC")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x10315C8", Offset = "0x10315C8", VA = "0x10315C8")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1032AE4", Offset = "0x1032AE4", VA = "0x1032AE4")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1032CB0", Offset = "0x1032CB0", VA = "0x1032CB0")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1032F04", Offset = "0x1032F04", VA = "0x1032F04")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x1031BA8", Offset = "0x1031BA8", VA = "0x1031BA8")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x1033354", Offset = "0x1033354", VA = "0x1033354")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1033194", Offset = "0x1033194", VA = "0x1033194")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1032190", Offset = "0x1032190", VA = "0x1032190")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1033694", Offset = "0x1033694", VA = "0x1033694")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x10321EC", Offset = "0x10321EC", VA = "0x10321EC")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x102E064", Offset = "0x102E064", VA = "0x102E064")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1033B18", Offset = "0x1033B18", VA = "0x1033B18")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1032724", Offset = "0x1032724", VA = "0x1032724")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1032330", Offset = "0x1032330", VA = "0x1032330")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x102DDFC", Offset = "0x102DDFC", VA = "0x102DDFC")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x1032678", Offset = "0x1032678", VA = "0x1032678")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x10338A4", Offset = "0x10338A4", VA = "0x10338A4")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x10338F4", Offset = "0x10338F4", VA = "0x10338F4")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x103423C", Offset = "0x103423C", VA = "0x103423C")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1033060", Offset = "0x1033060", VA = "0x1033060")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1033108", Offset = "0x1033108", VA = "0x1033108")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1033660", Offset = "0x1033660", VA = "0x1033660")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1033C14", Offset = "0x1033C14", VA = "0x1033C14")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1033D24", Offset = "0x1033D24", VA = "0x1033D24")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x103410C", Offset = "0x103410C", VA = "0x103410C")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x10341AC", Offset = "0x10341AC", VA = "0x10341AC")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1033BC4", Offset = "0x1033BC4", VA = "0x1033BC4")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1033CD0", Offset = "0x1033CD0", VA = "0x1033CD0")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000295")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x170000F4")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x1033CB4", Offset = "0x1033CB4", VA = "0x1033CB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1034360", Offset = "0x1034360", VA = "0x1034360")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1033B98", Offset = "0x1033B98", VA = "0x1033B98")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1033F98", Offset = "0x1033F98", VA = "0x1033F98")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x10343C8", Offset = "0x10343C8", VA = "0x10343C8")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1034504", Offset = "0x1034504", VA = "0x1034504")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x103464C", Offset = "0x103464C", VA = "0x103464C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1034674", Offset = "0x1034674", VA = "0x1034674")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x10346B8", Offset = "0x10346B8", VA = "0x10346B8")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x170000F5")]
		public bool SendUpdates
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x10346C0", Offset = "0x10346C0", VA = "0x10346C0")]
			set
			{
			}
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x10346CC", Offset = "0x10346CC", VA = "0x10346CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1034734", Offset = "0x1034734", VA = "0x1034734")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1034814", Offset = "0x1034814", VA = "0x1034814")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x103394C", Offset = "0x103394C", VA = "0x103394C")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x10348D4", Offset = "0x10348D4", VA = "0x10348D4")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20003C0")]
		public enum State
		{
			[Token(Token = "0x400106B")]
			INITIALIZING,
			[Token(Token = "0x400106C")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x400106D")]
			MATCH_TRANSITION,
			[Token(Token = "0x400106E")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x400106F")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x170000F6")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x102E280", Offset = "0x102E280", VA = "0x102E280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public static P2PManager P2P
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x102DD9C", Offset = "0x102DD9C", VA = "0x102DD9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x102E310", Offset = "0x102E310", VA = "0x102E310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x10303B0", Offset = "0x10303B0", VA = "0x10303B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public static State CurrentState
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x102C14C", Offset = "0x102C14C", VA = "0x102C14C")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000FB")]
		public static ulong MyID
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x102CF94", Offset = "0x102CF94", VA = "0x102CF94")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000FC")]
		public static string MyOculusID
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x102F1E4", Offset = "0x102F1E4", VA = "0x102F1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x10348DC", Offset = "0x10348DC", VA = "0x10348DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x1034910", Offset = "0x1034910", VA = "0x1034910")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1034ACC", Offset = "0x1034ACC", VA = "0x1034ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1034B68", Offset = "0x1034B68", VA = "0x1034B68")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1034C3C", Offset = "0x1034C3C", VA = "0x1034C3C")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x1031518", Offset = "0x1031518", VA = "0x1031518")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1034CEC", Offset = "0x1034CEC", VA = "0x1034CEC")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1034CF4", Offset = "0x1034CF4", VA = "0x1034CF4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x102EB04", Offset = "0x102EB04", VA = "0x102EB04")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1034D28", Offset = "0x1034D28", VA = "0x1034D28")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x4000A79")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4000A7A")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4000A7B")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x170000FD")]
		public virtual uint Score
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x1034D30", Offset = "0x1034D30", VA = "0x1034D30", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x102DCD4", Offset = "0x102DCD4", VA = "0x102DCD4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x1034D38", Offset = "0x1034D38", VA = "0x1034D38")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		protected bool HasBall
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x102B5AC", Offset = "0x102B5AC", VA = "0x102B5AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1034D40", Offset = "0x1034D40", VA = "0x1034D40")]
		private void Start()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1033DB0", Offset = "0x1033DB0", VA = "0x1033DB0")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x102B7AC", Offset = "0x102B7AC", VA = "0x102B7AC")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x102B61C", Offset = "0x102B61C", VA = "0x102B61C")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1034DF4", Offset = "0x1034DF4", VA = "0x1034DF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x102B82C", Offset = "0x102B82C", VA = "0x102B82C")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x17000100")]
		public Player Player
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x1030358", Offset = "0x1030358", VA = "0x1030358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public Text NameText
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x1034F28", Offset = "0x1034F28", VA = "0x1034F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1034F30", Offset = "0x1034F30", VA = "0x1034F30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C3")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1035020", Offset = "0x1035020", VA = "0x1035020")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x17000102")]
		public User User
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x1035028", Offset = "0x1035028", VA = "0x1035028")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public ulong ID
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x1032A54", Offset = "0x1032A54", VA = "0x1032A54")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000104")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x1035030", Offset = "0x1035030", VA = "0x1035030")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x1035038", Offset = "0x1035038", VA = "0x1035038")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public override uint Score
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x1035040", Offset = "0x1035040", VA = "0x1035040", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1034238", Offset = "0x1034238", VA = "0x1034238")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1035044", Offset = "0x1035044", VA = "0x1035044")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1035048", Offset = "0x1035048", VA = "0x1035048")]
		private void Update()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1035250", Offset = "0x1035250", VA = "0x1035250")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x200029C")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B7BAC", Offset = "0x9B7BAC")]
		public int x;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B7BEC", Offset = "0x9B7BEC")]
		public int y;

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1026280", Offset = "0x1026280", VA = "0x1026280")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1026288", Offset = "0x1026288", VA = "0x1026288")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1026B84", Offset = "0x1026B84", VA = "0x1026B84")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x20003C1")]
		private struct PositionInfo
		{
			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4000A93")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4000A94")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000A95")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x1026B8C", Offset = "0x1026B8C", VA = "0x1026B8C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1026D68", Offset = "0x1026D68", VA = "0x1026D68")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1026E64", Offset = "0x1026E64", VA = "0x1026E64")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1026F30", Offset = "0x1026F30", VA = "0x1026F30")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1026FFC", Offset = "0x1026FFC", VA = "0x1026FFC")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x10275D4", Offset = "0x10275D4", VA = "0x10275D4")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x10276BC", Offset = "0x10276BC", VA = "0x10276BC")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1027888", Offset = "0x1027888", VA = "0x1027888")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1027200", Offset = "0x1027200", VA = "0x1027200")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x10279D4", Offset = "0x10279D4", VA = "0x10279D4")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x102737C", Offset = "0x102737C", VA = "0x102737C")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1027A18", Offset = "0x1027A18", VA = "0x1027A18")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20003C2")]
		private enum GameState
		{
			[Token(Token = "0x4001074")]
			None,
			[Token(Token = "0x4001075")]
			PracticingMyTurn,
			[Token(Token = "0x4001076")]
			PracticingAiTurn,
			[Token(Token = "0x4001077")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4001078")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1027AEC", Offset = "0x1027AEC", VA = "0x1027AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1027C4C", Offset = "0x1027C4C", VA = "0x1027C4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1027B14", Offset = "0x1027B14", VA = "0x1027B14")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1028074", Offset = "0x1028074", VA = "0x1028074")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1027C50", Offset = "0x1027C50", VA = "0x1027C50")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x10287C8", Offset = "0x10287C8", VA = "0x10287C8")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1028318", Offset = "0x1028318", VA = "0x1028318")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x10288F8", Offset = "0x10288F8", VA = "0x10288F8")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1028958", Offset = "0x1028958", VA = "0x1028958")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1028A10", Offset = "0x1028A10", VA = "0x1028A10")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1028A24", Offset = "0x1028A24", VA = "0x1028A24")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1026830", Offset = "0x1026830", VA = "0x1026830")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1026828", Offset = "0x1026828", VA = "0x1026828")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1026838", Offset = "0x1026838", VA = "0x1026838")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1026AB8", Offset = "0x1026AB8", VA = "0x1026AB8")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1028530", Offset = "0x1028530", VA = "0x1028530")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x102863C", Offset = "0x102863C", VA = "0x102863C")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1028CB8", Offset = "0x1028CB8", VA = "0x1028CB8")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1028CC0", Offset = "0x1028CC0", VA = "0x1028CC0")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1027B1C", Offset = "0x1027B1C", VA = "0x1027B1C")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1027D08", Offset = "0x1027D08", VA = "0x1027D08")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1028E1C", Offset = "0x1028E1C", VA = "0x1028E1C")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x20003C3")]
		public enum Piece
		{
			[Token(Token = "0x400107A")]
			A,
			[Token(Token = "0x400107B")]
			B,
			[Token(Token = "0x400107C")]
			PowerBall
		}

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x17000106")]
		public Piece Type
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x1028E80", Offset = "0x1028E80", VA = "0x1028E80")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x17000107")]
		public BoardPosition Position
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x1028E88", Offset = "0x1028E88", VA = "0x1028E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x1028E90", Offset = "0x1028E90", VA = "0x1028E90")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public GameObject Prefab
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x10288CC", Offset = "0x10288CC", VA = "0x10288CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x10289E8", Offset = "0x10289E8", VA = "0x10289E8")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1028E98", Offset = "0x1028E98", VA = "0x1028E98")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4000AB4")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1028EA0", Offset = "0x1028EA0", VA = "0x1028EA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1028EC4", Offset = "0x1028EC4", VA = "0x1028EC4")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1029088", Offset = "0x1029088", VA = "0x1029088")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1028FDC", Offset = "0x1028FDC", VA = "0x1028FDC")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1029558", Offset = "0x1029558", VA = "0x1029558")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1029980", Offset = "0x1029980", VA = "0x1029980")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1029A38", Offset = "0x1029A38", VA = "0x1029A38")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1029B28", Offset = "0x1029B28", VA = "0x1029B28")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x20003C4")]
		private enum MatchRoomState
		{
			[Token(Token = "0x400107E")]
			None,
			[Token(Token = "0x400107F")]
			Queued,
			[Token(Token = "0x4001080")]
			Configuring,
			[Token(Token = "0x4001081")]
			MyTurn,
			[Token(Token = "0x4001082")]
			RemoteTurn
		}

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x4000AB8")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4000ABC")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1029B30", Offset = "0x1029B30", VA = "0x1029B30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1029D80", Offset = "0x1029D80", VA = "0x1029D80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1029EAC", Offset = "0x1029EAC", VA = "0x1029EAC")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x1028160", Offset = "0x1028160", VA = "0x1028160")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1029F6C", Offset = "0x1029F6C", VA = "0x1029F6C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1029BF0", Offset = "0x1029BF0", VA = "0x1029BF0")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1029FA8", Offset = "0x1029FA8", VA = "0x1029FA8")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x102A23C", Offset = "0x102A23C", VA = "0x102A23C")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x102A390", Offset = "0x102A390", VA = "0x102A390")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x102AB30", Offset = "0x102AB30", VA = "0x102AB30")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x102A64C", Offset = "0x102A64C", VA = "0x102A64C")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x102AEB0", Offset = "0x102AEB0", VA = "0x102AEB0")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1028A88", Offset = "0x1028A88", VA = "0x1028A88")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x102B0A8", Offset = "0x102B0A8", VA = "0x102B0A8")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x102AE64", Offset = "0x102AE64", VA = "0x102AE64")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x102B0E0", Offset = "0x102B0E0", VA = "0x102B0E0")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x102B1A8", Offset = "0x102B1A8", VA = "0x102B1A8")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x17000109")]
		public static ulong MyID
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x1029EC4", Offset = "0x1029EC4", VA = "0x1029EC4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700010A")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x1028D64", Offset = "0x1028D64", VA = "0x1028D64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x102B1B0", Offset = "0x102B1B0", VA = "0x102B1B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x102B2F0", Offset = "0x102B2F0", VA = "0x102B2F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x102B38C", Offset = "0x102B38C", VA = "0x102B38C")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x102B460", Offset = "0x102B460", VA = "0x102B460")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x10294A8", Offset = "0x10294A8", VA = "0x10294A8")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x102B540", Offset = "0x102B540", VA = "0x102B540")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x20002A4")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1021930", Offset = "0x1021930", VA = "0x1021930")]
		private void Start()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1021A3C", Offset = "0x1021A3C", VA = "0x1021A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1021B00", Offset = "0x1021B00", VA = "0x1021B00")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1023730", Offset = "0x1023730", VA = "0x1023730")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1023614", Offset = "0x1023614", VA = "0x1023614")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1023558", Offset = "0x1023558", VA = "0x1023558")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1023470", Offset = "0x1023470", VA = "0x1023470")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x10233BC", Offset = "0x10233BC", VA = "0x10233BC")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x10232AC", Offset = "0x10232AC", VA = "0x10232AC")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x102319C", Offset = "0x102319C", VA = "0x102319C")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x10219A0", Offset = "0x10219A0", VA = "0x10219A0")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x10230E0", Offset = "0x10230E0", VA = "0x10230E0")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x10222E0", Offset = "0x10222E0", VA = "0x10222E0")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x10223F0", Offset = "0x10223F0", VA = "0x10223F0")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x10224B0", Offset = "0x10224B0", VA = "0x10224B0")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x10225B0", Offset = "0x10225B0", VA = "0x10225B0")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x10226B4", Offset = "0x10226B4", VA = "0x10226B4")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x10227B4", Offset = "0x10227B4", VA = "0x10227B4")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x10228E4", Offset = "0x10228E4", VA = "0x10228E4")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x10229A0", Offset = "0x10229A0", VA = "0x10229A0")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1022A9C", Offset = "0x1022A9C", VA = "0x1022A9C")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1022B58", Offset = "0x1022B58", VA = "0x1022B58")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1022C18", Offset = "0x1022C18", VA = "0x1022C18")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1022D30", Offset = "0x1022D30", VA = "0x1022D30")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1022E48", Offset = "0x1022E48", VA = "0x1022E48")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x10237F0", Offset = "0x10237F0", VA = "0x10237F0")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1023CEC", Offset = "0x1023CEC", VA = "0x1023CEC")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x102422C", Offset = "0x102422C", VA = "0x102422C")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1024784", Offset = "0x1024784", VA = "0x1024784")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1024860", Offset = "0x1024860", VA = "0x1024860")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x10248E4", Offset = "0x10248E4", VA = "0x10248E4")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1024EB4", Offset = "0x1024EB4", VA = "0x1024EB4")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1024FDC", Offset = "0x1024FDC", VA = "0x1024FDC")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x102509C", Offset = "0x102509C", VA = "0x102509C")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x102515C", Offset = "0x102515C", VA = "0x102515C")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x102521C", Offset = "0x102521C", VA = "0x102521C")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x10255B0", Offset = "0x10255B0", VA = "0x10255B0")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x10259BC", Offset = "0x10259BC", VA = "0x10259BC")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1025A9C", Offset = "0x1025A9C", VA = "0x1025A9C")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1025B7C", Offset = "0x1025B7C", VA = "0x1025B7C")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1025C5C", Offset = "0x1025C5C", VA = "0x1025C5C")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1025D3C", Offset = "0x1025D3C", VA = "0x1025D3C")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1025FF8", Offset = "0x1025FF8", VA = "0x1025FF8")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x10260D8", Offset = "0x10260D8", VA = "0x10260D8")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x10261B8", Offset = "0x10261B8", VA = "0x10261B8")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1026278", Offset = "0x1026278", VA = "0x1026278")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x20002A5")]
	internal enum states
	{
		[Token(Token = "0x4000AC3")]
		NOT_INIT,
		[Token(Token = "0x4000AC4")]
		IDLE,
		[Token(Token = "0x4000AC5")]
		REQUEST_FIND,
		[Token(Token = "0x4000AC6")]
		FINDING_ROOM,
		[Token(Token = "0x4000AC7")]
		REQUEST_CREATE,
		[Token(Token = "0x4000AC8")]
		REQUEST_JOIN,
		[Token(Token = "0x4000AC9")]
		REQUEST_LEAVE,
		[Token(Token = "0x4000ACA")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4000ACB")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x20002A6")]
	public static class Constants
	{
		[Token(Token = "0x4000ACC")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4000ACD")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4000ACE")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x20002A7")]
	public class chatPacket
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B7DDC", Offset = "0x9B7DDC")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B7DEC", Offset = "0x9B7DEC")]
		private string <textString>k__BackingField;

		[Token(Token = "0x1700010B")]
		public int packetID
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xF3C9BC", Offset = "0xF3C9BC", VA = "0xF3C9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB658", Offset = "0x9BB658")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001149")]
			[Address(RVA = "0xF3C9C4", Offset = "0xF3C9C4", VA = "0xF3C9C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB668", Offset = "0x9BB668")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public string textString
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0xF3C9CC", Offset = "0xF3C9CC", VA = "0xF3C9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB678", Offset = "0x9BB678")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114B")]
			[Address(RVA = "0xF3C9D4", Offset = "0xF3C9D4", VA = "0xF3C9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB688", Offset = "0x9BB688")]
			set
			{
			}
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xF3C13C", Offset = "0xF3C13C", VA = "0xF3C13C")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xF3C478", Offset = "0xF3C478", VA = "0xF3C478")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xF3C134", Offset = "0xF3C134", VA = "0xF3C134")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xF39F80", Offset = "0xF39F80", VA = "0xF39F80")]
		private void Start()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xF3A0F8", Offset = "0xF3A0F8", VA = "0xF3A0F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xF3A1C0", Offset = "0xF3A1C0", VA = "0xF3A1C0")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xF3B4C8", Offset = "0xF3B4C8", VA = "0xF3B4C8")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xF3A06C", Offset = "0xF3A06C", VA = "0xF3A06C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xF3B584", Offset = "0xF3B584", VA = "0xF3B584")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xF3B674", Offset = "0xF3B674", VA = "0xF3B674")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xF3A6B8", Offset = "0xF3A6B8", VA = "0xF3A6B8")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xF3B798", Offset = "0xF3B798", VA = "0xF3B798")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xF3A838", Offset = "0xF3A838", VA = "0xF3A838")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xF3ABD4", Offset = "0xF3ABD4", VA = "0xF3ABD4")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xF3AD4C", Offset = "0xF3AD4C", VA = "0xF3AD4C")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xF3B8D0", Offset = "0xF3B8D0", VA = "0xF3B8D0")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xF3BA0C", Offset = "0xF3BA0C", VA = "0xF3BA0C")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xF3AA5C", Offset = "0xF3AA5C", VA = "0xF3AA5C")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xF3BCFC", Offset = "0xF3BCFC", VA = "0xF3BCFC")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xF3BDD0", Offset = "0xF3BDD0", VA = "0xF3BDD0")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xF3AFF0", Offset = "0xF3AFF0", VA = "0xF3AFF0")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xF3A52C", Offset = "0xF3A52C", VA = "0xF3A52C")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xF3B0EC", Offset = "0xF3B0EC", VA = "0xF3B0EC")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xF3C744", Offset = "0xF3C744", VA = "0xF3C744")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xF3B218", Offset = "0xF3B218", VA = "0xF3B218")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xF3C81C", Offset = "0xF3C81C", VA = "0xF3C81C")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xF3B314", Offset = "0xF3B314", VA = "0xF3B314")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xF3C8F0", Offset = "0xF3C8F0", VA = "0xF3C8F0")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xF3C9B4", Offset = "0xF3C9B4", VA = "0xF3C9B4")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x20002A9")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000015")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0xF39850", Offset = "0xF39850", VA = "0xF39850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB698", Offset = "0x9BB698")]
			add
			{
			}
			[Token(Token = "0x600116A")]
			[Address(RVA = "0xF39904", Offset = "0xF39904", VA = "0xF39904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6A8", Offset = "0x9BB6A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0xF399B8", Offset = "0xF399B8", VA = "0xF399B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6B8", Offset = "0x9BB6B8")]
			add
			{
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0xF39A70", Offset = "0xF39A70", VA = "0xF39A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6C8", Offset = "0x9BB6C8")]
			remove
			{
			}
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xF39B28", Offset = "0xF39B28", VA = "0xF39B28")]
		private void Start()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xF39F4C", Offset = "0xF39F4C", VA = "0xF39F4C")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xF39CD0", Offset = "0xF39CD0", VA = "0xF39CD0")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xF39F70", Offset = "0xF39F70", VA = "0xF39F70")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20002AA")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000ADB")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000ADC")]
		public const string Tab = "    ";

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xC8A300", Offset = "0xC8A300", VA = "0xC8A300")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB6D8", Offset = "0x9BB6D8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB6D8", Offset = "0x9BB6D8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xC8A388", Offset = "0xC8A388", VA = "0xC8A388")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB738", Offset = "0x9BB738")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB738", Offset = "0x9BB738")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xC8A420", Offset = "0xC8A420", VA = "0xC8A420")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB798", Offset = "0x9BB798")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB798", Offset = "0x9BB798")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xC8A4A8", Offset = "0xC8A4A8", VA = "0xC8A4A8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB7F8", Offset = "0x9BB7F8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB7F8", Offset = "0x9BB7F8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xC8A530", Offset = "0xC8A530", VA = "0xC8A530")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB858", Offset = "0x9BB858")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9BB858", Offset = "0x9BB858")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class CAPI
	{
		[Token(Token = "0x20003C5")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20003C6")]
		public enum Result
		{
			[Token(Token = "0x4001084")]
			Success = 0,
			[Token(Token = "0x4001085")]
			Failure = -1000,
			[Token(Token = "0x4001086")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001087")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001088")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001089")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x400108A")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400108B")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400108C")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20003C7")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0xC92978", Offset = "0xC92978", VA = "0xC92978")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000ADD")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000AE5")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001176")]
		[Address(RVA = "0xC8A630", Offset = "0xC8A630", VA = "0xC8A630")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xC8A6DC", Offset = "0xC8A6DC", VA = "0xC8A6DC")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xC8A898", Offset = "0xC8A898", VA = "0xC8A898")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001179")]
		[Address(RVA = "0xC8A978", Offset = "0xC8A978", VA = "0xC8A978")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600117A")]
		[Address(RVA = "0xC8AA04", Offset = "0xC8AA04", VA = "0xC8AA04")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600117B")]
		[Address(RVA = "0xC8AA90", Offset = "0xC8AA90", VA = "0xC8AA90")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xC8AB2C", Offset = "0xC8AB2C", VA = "0xC8AB2C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xC8AC44", Offset = "0xC8AC44", VA = "0xC8AC44")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xC8ACE0", Offset = "0xC8ACE0", VA = "0xC8ACE0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600117F")]
		[Address(RVA = "0xC8ADF8", Offset = "0xC8ADF8", VA = "0xC8ADF8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xC8AE94", Offset = "0xC8AE94", VA = "0xC8AE94")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001181")]
		[Address(RVA = "0xC8AF30", Offset = "0xC8AF30", VA = "0xC8AF30")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001182")]
		[Address(RVA = "0xC8AFCC", Offset = "0xC8AFCC", VA = "0xC8AFCC")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001183")]
		[Address(RVA = "0xC8B068", Offset = "0xC8B068", VA = "0xC8B068")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001184")]
		[Address(RVA = "0xC8B114", Offset = "0xC8B114", VA = "0xC8B114")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001185")]
		[Address(RVA = "0xC8B1C0", Offset = "0xC8B1C0", VA = "0xC8B1C0")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001186")]
		[Address(RVA = "0xC8B26C", Offset = "0xC8B26C", VA = "0xC8B26C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001187")]
		[Address(RVA = "0xC8B308", Offset = "0xC8B308", VA = "0xC8B308")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001188")]
		[Address(RVA = "0xC8B3A4", Offset = "0xC8B3A4", VA = "0xC8B3A4")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001189")]
		[Address(RVA = "0xC8B450", Offset = "0xC8B450", VA = "0xC8B450")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600118A")]
		[Address(RVA = "0xC8B4FC", Offset = "0xC8B4FC", VA = "0xC8B4FC")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600118B")]
		[Address(RVA = "0xC8B5A8", Offset = "0xC8B5A8", VA = "0xC8B5A8")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600118C")]
		[Address(RVA = "0xC8B644", Offset = "0xC8B644", VA = "0xC8B644")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xC8B708", Offset = "0xC8B708", VA = "0xC8B708")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600118E")]
		[Address(RVA = "0xC8B78C", Offset = "0xC8B78C", VA = "0xC8B78C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600118F")]
		[Address(RVA = "0xC8B848", Offset = "0xC8B848", VA = "0xC8B848")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001190")]
		[Address(RVA = "0xC8B924", Offset = "0xC8B924", VA = "0xC8B924")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001191")]
		[Address(RVA = "0xC8BA10", Offset = "0xC8BA10", VA = "0xC8BA10")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001192")]
		[Address(RVA = "0xC8BABC", Offset = "0xC8BABC", VA = "0xC8BABC")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001193")]
		[Address(RVA = "0xC8BB68", Offset = "0xC8BB68", VA = "0xC8BB68")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001194")]
		[Address(RVA = "0xC8BC14", Offset = "0xC8BC14", VA = "0xC8BC14")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001195")]
		[Address(RVA = "0xC8BCC0", Offset = "0xC8BCC0", VA = "0xC8BCC0")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001196")]
		[Address(RVA = "0xC8BD6C", Offset = "0xC8BD6C", VA = "0xC8BD6C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xC8BE08", Offset = "0xC8BE08", VA = "0xC8BE08")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xC8BF44", Offset = "0xC8BF44", VA = "0xC8BF44")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001199")]
		[Address(RVA = "0xC8BE98", Offset = "0xC8BE98", VA = "0xC8BE98")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xC8C138", Offset = "0xC8C138", VA = "0xC8C138")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xC8C270", Offset = "0xC8C270", VA = "0xC8C270")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600119C")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xC8C30C", Offset = "0xC8C30C", VA = "0xC8C30C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600119E")]
		[Address(RVA = "0xC8C57C", Offset = "0xC8C57C", VA = "0xC8C57C")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xC8C618", Offset = "0xC8C618", VA = "0xC8C618")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xC8C750", Offset = "0xC8C750", VA = "0xC8C750")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xC8C7EC", Offset = "0xC8C7EC", VA = "0xC8C7EC")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xC8C924", Offset = "0xC8C924", VA = "0xC8C924")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xC8C9C0", Offset = "0xC8C9C0", VA = "0xC8C9C0")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xC8CAF8", Offset = "0xC8CAF8", VA = "0xC8CAF8")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xC8CB94", Offset = "0xC8CB94", VA = "0xC8CB94")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xC8CCCC", Offset = "0xC8CCCC", VA = "0xC8CCCC")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xC8CD68", Offset = "0xC8CD68", VA = "0xC8CD68")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xC8CE04", Offset = "0xC8CE04", VA = "0xC8CE04")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xC8CEB8", Offset = "0xC8CEB8", VA = "0xC8CEB8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xC8CF54", Offset = "0xC8CF54", VA = "0xC8CF54")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xC8D12C", Offset = "0xC8D12C", VA = "0xC8D12C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xC8D268", Offset = "0xC8D268", VA = "0xC8D268")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xC8D090", Offset = "0xC8D090", VA = "0xC8D090")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xC8D304", Offset = "0xC8D304", VA = "0xC8D304")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xC8D3A0", Offset = "0xC8D3A0", VA = "0xC8D3A0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xC8D44C", Offset = "0xC8D44C", VA = "0xC8D44C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xC8D4E8", Offset = "0xC8D4E8", VA = "0xC8D4E8")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xC8D594", Offset = "0xC8D594", VA = "0xC8D594")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xC8D630", Offset = "0xC8D630", VA = "0xC8D630")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xC8D6CC", Offset = "0xC8D6CC", VA = "0xC8D6CC")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xC8D914", Offset = "0xC8D914", VA = "0xC8D914")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xC8D9C0", Offset = "0xC8D9C0", VA = "0xC8D9C0")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xC8DBAC", Offset = "0xC8DBAC", VA = "0xC8DBAC")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xC8DC60", Offset = "0xC8DC60", VA = "0xC8DC60")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xC8DD8C", Offset = "0xC8DD8C", VA = "0xC8DD8C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xC8DE28", Offset = "0xC8DE28", VA = "0xC8DE28")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xC8DEC4", Offset = "0xC8DEC4", VA = "0xC8DEC4")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xC8DFEC", Offset = "0xC8DFEC", VA = "0xC8DFEC")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xC8E088", Offset = "0xC8E088", VA = "0xC8E088")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xC8E1B0", Offset = "0xC8E1B0", VA = "0xC8E1B0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xC8E24C", Offset = "0xC8E24C", VA = "0xC8E24C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xC8E2F8", Offset = "0xC8E2F8", VA = "0xC8E2F8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xC8E3A4", Offset = "0xC8E3A4", VA = "0xC8E3A4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xC8E450", Offset = "0xC8E450", VA = "0xC8E450")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xC8E4EC", Offset = "0xC8E4EC", VA = "0xC8E4EC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xC8E590", Offset = "0xC8E590", VA = "0xC8E590")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xC8E634", Offset = "0xC8E634", VA = "0xC8E634")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xC8E6D0", Offset = "0xC8E6D0", VA = "0xC8E6D0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xC8E76C", Offset = "0xC8E76C", VA = "0xC8E76C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xC8E83C", Offset = "0xC8E83C", VA = "0xC8E83C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xC8E8E8", Offset = "0xC8E8E8", VA = "0xC8E8E8")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xC8E994", Offset = "0xC8E994", VA = "0xC8E994")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xC8EA30", Offset = "0xC8EA30", VA = "0xC8EA30")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xC8EACC", Offset = "0xC8EACC", VA = "0xC8EACC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xC8EB68", Offset = "0xC8EB68", VA = "0xC8EB68")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xC8EC1C", Offset = "0xC8EC1C", VA = "0xC8EC1C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xC8ECC8", Offset = "0xC8ECC8", VA = "0xC8ECC8")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xC8ED74", Offset = "0xC8ED74", VA = "0xC8ED74")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xC8EE20", Offset = "0xC8EE20", VA = "0xC8EE20")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xC8EED4", Offset = "0xC8EED4", VA = "0xC8EED4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xC8EF88", Offset = "0xC8EF88", VA = "0xC8EF88")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xC8F024", Offset = "0xC8F024", VA = "0xC8F024")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC8F0C0", Offset = "0xC8F0C0", VA = "0xC8F0C0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xC8F1E8", Offset = "0xC8F1E8", VA = "0xC8F1E8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xC8F284", Offset = "0xC8F284", VA = "0xC8F284")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xC8F3AC", Offset = "0xC8F3AC", VA = "0xC8F3AC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xC8F448", Offset = "0xC8F448", VA = "0xC8F448")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xC8F570", Offset = "0xC8F570", VA = "0xC8F570")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xC8F60C", Offset = "0xC8F60C", VA = "0xC8F60C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xC8F7D0", Offset = "0xC8F7D0", VA = "0xC8F7D0")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xC8FA78", Offset = "0xC8FA78", VA = "0xC8FA78")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xC8F734", Offset = "0xC8F734", VA = "0xC8F734")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xC8FB24", Offset = "0xC8FB24", VA = "0xC8FB24")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xC8FBC0", Offset = "0xC8FBC0", VA = "0xC8FBC0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xC8FC6C", Offset = "0xC8FC6C", VA = "0xC8FC6C")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xC8FD18", Offset = "0xC8FD18", VA = "0xC8FD18")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xC8FDC4", Offset = "0xC8FDC4", VA = "0xC8FDC4")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xC8FE80", Offset = "0xC8FE80", VA = "0xC8FE80")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xC8FF3C", Offset = "0xC8FF3C", VA = "0xC8FF3C")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xC8FFF8", Offset = "0xC8FFF8", VA = "0xC8FFF8")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xC90094", Offset = "0xC90094", VA = "0xC90094")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xC90130", Offset = "0xC90130", VA = "0xC90130")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xC901CC", Offset = "0xC901CC", VA = "0xC901CC")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xC90268", Offset = "0xC90268", VA = "0xC90268")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xC90304", Offset = "0xC90304", VA = "0xC90304")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xC90444", Offset = "0xC90444", VA = "0xC90444")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC904F8", Offset = "0xC904F8", VA = "0xC904F8")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC90594", Offset = "0xC90594", VA = "0xC90594")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC905F8", Offset = "0xC905F8", VA = "0xC905F8")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xC90714", Offset = "0xC90714", VA = "0xC90714")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xC907C0", Offset = "0xC907C0", VA = "0xC907C0")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xC90904", Offset = "0xC90904", VA = "0xC90904")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xC909B0", Offset = "0xC909B0", VA = "0xC909B0")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC90A74", Offset = "0xC90A74", VA = "0xC90A74")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC90E14", Offset = "0xC90E14", VA = "0xC90E14")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC90EB0", Offset = "0xC90EB0", VA = "0xC90EB0")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC90F64", Offset = "0xC90F64", VA = "0xC90F64")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xC91734", Offset = "0xC91734", VA = "0xC91734")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC917D0", Offset = "0xC917D0", VA = "0xC917D0")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xC8A5C8", Offset = "0xC8A5C8", VA = "0xC8A5C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9BB8B8", Offset = "0x9BB8B8")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xC91884", Offset = "0xC91884", VA = "0xC91884")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xC91924", Offset = "0xC91924", VA = "0xC91924")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xC919C0", Offset = "0xC919C0", VA = "0xC919C0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xC91A5C", Offset = "0xC91A5C", VA = "0xC91A5C")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xC91AF8", Offset = "0xC91AF8", VA = "0xC91AF8")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001200")]
		[Address(RVA = "0xC924DC", Offset = "0xC924DC", VA = "0xC924DC")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xC92578", Offset = "0xC92578", VA = "0xC92578")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001202")]
		[Address(RVA = "0xC92A70", Offset = "0xC92A70", VA = "0xC92A70")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xC928E8", Offset = "0xC928E8", VA = "0xC928E8")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xC92AFC", Offset = "0xC92AFC", VA = "0xC92AFC")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20002AC")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x9B7E1C", Offset = "0x9B7E1C")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x18FB58C", Offset = "0x18FB58C", VA = "0x18FB58C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x18FB590", Offset = "0x18FB590", VA = "0x18FB590")]
		private void Update()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x18FB658", Offset = "0x18FB658", VA = "0x18FB658")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B7E68", Offset = "0x9B7E68")]
		public bool autoRetrigger;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9B7EA0", Offset = "0x9B7EA0")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B7EC4", Offset = "0x9B7EC4")]
		public Transform[] playPositions;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x18F2754", Offset = "0x18F2754", VA = "0x18F2754")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x18F28DC", Offset = "0x18F28DC", VA = "0x18F28DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x18F2ABC", Offset = "0x18F2ABC", VA = "0x18F2ABC")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x18F293C", Offset = "0x18F293C", VA = "0x18F293C")]
		public void Play()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x18F2C08", Offset = "0x18F2C08", VA = "0x18F2C08")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x18F2D88", Offset = "0x18F2D88", VA = "0x18F2D88")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000AF4")]
		Default,
		[Token(Token = "0x4000AF5")]
		Preload,
		[Token(Token = "0x4000AF6")]
		ManualPreload
	}
	[Token(Token = "0x20002AF")]
	public enum Fade
	{
		[Token(Token = "0x4000AF8")]
		In,
		[Token(Token = "0x4000AF9")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class SoundGroup
	{
		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B7EFC", Offset = "0x9B7EFC")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x18FB46C", Offset = "0x18FB46C", VA = "0x18FB46C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x18FB500", Offset = "0x18FB500", VA = "0x18FB500")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x18F9E8C", Offset = "0x18F9E8C", VA = "0x18F9E8C")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x18F9FCC", Offset = "0x18F9FCC", VA = "0x18F9FCC")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x18FAAC0", Offset = "0x18FAAC0", VA = "0x18FAAC0")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002B1")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003C8")]
		public enum Fade
		{
			[Token(Token = "0x400108F")]
			In,
			[Token(Token = "0x4001090")]
			Out
		}

		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B26F8", Offset = "0x9B26F8")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x18F6F4C", Offset = "0x18F6F4C", VA = "0x18F6F4C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x18F9944", Offset = "0x18F9944", VA = "0x18F9944")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2708", Offset = "0x9B2708")]
		private sealed class <>c
		{
			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x18F98A8", Offset = "0x18F98A8", VA = "0x18F98A8")]
			public <>c()
			{
			}

			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x18F98B0", Offset = "0x18F98B0", VA = "0x18F98B0")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B7F28", Offset = "0x9B7F28")]
		public bool makePersistent;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B7F60", Offset = "0x9B7F60")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B7F98", Offset = "0x9B7F98")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B7FD0", Offset = "0x9B7FD0")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8008", Offset = "0x9B8008")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8040", Offset = "0x9B8040")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8078", Offset = "0x9B8078")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B80B0", Offset = "0x9B80B0")]
		public bool verboseLogging;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B80E8", Offset = "0x9B80E8")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8120", Offset = "0x9B8120")]
		public float volumeSoundFX;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8158", Offset = "0x9B8158")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700010D")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x18F2E44", Offset = "0x18F2E44", VA = "0x18F2E44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x18F2F28", Offset = "0x18F2F28", VA = "0x18F2F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0x18F2F90", Offset = "0x18F2F90", VA = "0x18F2F90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000110")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0x18F3008", Offset = "0x18F3008", VA = "0x18F3008")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000111")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x18F3080", Offset = "0x18F3080", VA = "0x18F3080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x18F30F8", Offset = "0x18F30F8", VA = "0x18F30F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x18F3170", Offset = "0x18F3170", VA = "0x18F3170")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x18F4F08", Offset = "0x18F4F08", VA = "0x18F4F08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x18F31E8", Offset = "0x18F31E8", VA = "0x18F31E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x18F3414", Offset = "0x18F3414", VA = "0x18F3414")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x18F31EC", Offset = "0x18F31EC", VA = "0x18F31EC")]
		private void Init()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x18F405C", Offset = "0x18F405C", VA = "0x18F405C")]
		private void Update()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x18F356C", Offset = "0x18F356C", VA = "0x18F356C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x18F4688", Offset = "0x18F4688", VA = "0x18F4688")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x18F4810", Offset = "0x18F4810", VA = "0x18F4810")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x18F49B0", Offset = "0x18F49B0", VA = "0x18F49B0")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x18F4AB0", Offset = "0x18F4AB0", VA = "0x18F4AB0")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x18F4B44", Offset = "0x18F4B44", VA = "0x18F4B44")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x18F39BC", Offset = "0x18F39BC", VA = "0x18F39BC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x18F4060", Offset = "0x18F4060", VA = "0x18F4060")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x18F5184", Offset = "0x18F5184", VA = "0x18F5184")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x18F5280", Offset = "0x18F5280", VA = "0x18F5280")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x18F5380", Offset = "0x18F5380", VA = "0x18F5380")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x18F5050", Offset = "0x18F5050", VA = "0x18F5050")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x18F5500", Offset = "0x18F5500", VA = "0x18F5500")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x18F5660", Offset = "0x18F5660", VA = "0x18F5660")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x18F581C", Offset = "0x18F581C", VA = "0x18F581C")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x18F2B4C", Offset = "0x18F2B4C", VA = "0x18F2B4C")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x18F2CCC", Offset = "0x18F2CCC", VA = "0x18F2CCC")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x18F59D4", Offset = "0x18F59D4", VA = "0x18F59D4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x18F5AA4", Offset = "0x18F5AA4", VA = "0x18F5AA4")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x18F5B4C", Offset = "0x18F5B4C", VA = "0x18F5B4C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x18F5C20", Offset = "0x18F5C20", VA = "0x18F5C20")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x18F5CCC", Offset = "0x18F5CCC", VA = "0x18F5CCC")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x18F5DAC", Offset = "0x18F5DAC", VA = "0x18F5DAC")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x18F6890", Offset = "0x18F6890", VA = "0x18F6890")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x18F6F54", Offset = "0x18F6F54", VA = "0x18F6F54")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x18F7134", Offset = "0x18F7134", VA = "0x18F7134")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x18F7E80", Offset = "0x18F7E80", VA = "0x18F7E80")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x18F5FB4", Offset = "0x18F5FB4", VA = "0x18F5FB4")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x18F7FA4", Offset = "0x18F7FA4", VA = "0x18F7FA4")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x18F8090", Offset = "0x18F8090", VA = "0x18F8090")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x18F8188", Offset = "0x18F8188", VA = "0x18F8188")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x18F8544", Offset = "0x18F8544", VA = "0x18F8544")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x18F874C", Offset = "0x18F874C", VA = "0x18F874C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x18F8868", Offset = "0x18F8868", VA = "0x18F8868")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x18F8A3C", Offset = "0x18F8A3C", VA = "0x18F8A3C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x18F8B18", Offset = "0x18F8B18", VA = "0x18F8B18")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x18F8C54", Offset = "0x18F8C54", VA = "0x18F8C54")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x18F9048", Offset = "0x18F9048", VA = "0x18F9048")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000B21")]
		None = -1,
		[Token(Token = "0x4000B22")]
		Reserved,
		[Token(Token = "0x4000B23")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002B3")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x18F9A44", Offset = "0x18F9A44", VA = "0x18F9A44")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x18F99E8", Offset = "0x18F99E8", VA = "0x18F99E8")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003CB")]
		public enum FadeState
		{
			[Token(Token = "0x4001095")]
			Null,
			[Token(Token = "0x4001096")]
			FadingIn,
			[Token(Token = "0x4001097")]
			FadingOut,
			[Token(Token = "0x4001098")]
			Ducking
		}

		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2718", Offset = "0x9B2718")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400109D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015BD")]
				[Address(RVA = "0x18FA4AC", Offset = "0x18FA4AC", VA = "0x18FA4AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015BF")]
				[Address(RVA = "0x18FA518", Offset = "0x18FA518", VA = "0x18FA518", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x18FA17C", Offset = "0x18FA17C", VA = "0x18FA17C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x18FA3C4", Offset = "0x18FA3C4", VA = "0x18FA3C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x18FA3C8", Offset = "0x18FA3C8", VA = "0x18FA3C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x18FA4B4", Offset = "0x18FA4B4", VA = "0x18FA4B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2728", Offset = "0x9B2728")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400109F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C3")]
				[Address(RVA = "0x18FA970", Offset = "0x18FA970", VA = "0x18FA970", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015C5")]
				[Address(RVA = "0x18FA9DC", Offset = "0x18FA9DC", VA = "0x18FA9DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x18FA354", Offset = "0x18FA354", VA = "0x18FA354")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x18FA800", Offset = "0x18FA800", VA = "0x18FA800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x18FA804", Offset = "0x18FA804", VA = "0x18FA804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x18FA978", Offset = "0x18FA978", VA = "0x18FA978", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9B2738", Offset = "0x9B2738")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C9")]
				[Address(RVA = "0x18FA78C", Offset = "0x18FA78C", VA = "0x18FA78C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015CB")]
				[Address(RVA = "0x18FA7F8", Offset = "0x18FA7F8", VA = "0x18FA7F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x18FA380", Offset = "0x18FA380", VA = "0x18FA380")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x18FA520", Offset = "0x18FA520", VA = "0x18FA520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x18FA524", Offset = "0x18FA524", VA = "0x18FA524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x18FA794", Offset = "0x18FA794", VA = "0x18FA794", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000115")]
		public float volume
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x18F7E64", Offset = "0x18F7E64", VA = "0x18F7E64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x18F9AE4", Offset = "0x18F9AE4", VA = "0x18F9AE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public float pitch
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x18F9B00", Offset = "0x18F9B00", VA = "0x18F9B00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x18F9B1C", Offset = "0x18F9B1C", VA = "0x18F9B1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public AudioClip clip
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x18F9B38", Offset = "0x18F9B38", VA = "0x18F9B38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x18F9B54", Offset = "0x18F9B54", VA = "0x18F9B54")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public float time
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x18F9B70", Offset = "0x18F9B70", VA = "0x18F9B70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x18F5D90", Offset = "0x18F5D90", VA = "0x18F5D90")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public float length
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x18F9B8C", Offset = "0x18F9B8C", VA = "0x18F9B8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011A")]
		public bool loop
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x18F9C44", Offset = "0x18F9C44", VA = "0x18F9C44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x18F9C60", Offset = "0x18F9C60", VA = "0x18F9C60")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public bool mute
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x18F9C80", Offset = "0x18F9C80", VA = "0x18F9C80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x18F9C9C", Offset = "0x18F9C9C", VA = "0x18F9C9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x18F9CBC", Offset = "0x18F9CBC", VA = "0x18F9CBC")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x18F9CD8", Offset = "0x18F9CD8", VA = "0x18F9CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public bool isPlaying
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x18F9CF4", Offset = "0x18F9CF4", VA = "0x18F9CF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x18F9D10", Offset = "0x18F9D10", VA = "0x18F9D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x18F7E50", Offset = "0x18F7E50", VA = "0x18F7E50")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x18F9F1C", Offset = "0x18F9F1C", VA = "0x18F9F1C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x18F8180", Offset = "0x18F8180", VA = "0x18F8180")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x18F9F24", Offset = "0x18F9F24", VA = "0x18F9F24")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x18F9F2C", Offset = "0x18F9F2C", VA = "0x18F9F2C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x18F8994", Offset = "0x18F8994", VA = "0x18F8994")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x18F5124", Offset = "0x18F5124", VA = "0x18F5124")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x18F9F34", Offset = "0x18F9F34", VA = "0x18F9F34")]
		public void Play()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x18F9F94", Offset = "0x18F9F94", VA = "0x18F9F94")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x18F4F70", Offset = "0x18F4F70", VA = "0x18F4F70")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x18FA05C", Offset = "0x18FA05C", VA = "0x18FA05C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x18F8448", Offset = "0x18F8448", VA = "0x18F8448")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x18F8694", Offset = "0x18F8694", VA = "0x18F8694")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x18F54C0", Offset = "0x18F54C0", VA = "0x18F54C0")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x18FA0BC", Offset = "0x18FA0BC", VA = "0x18FA0BC")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x18FA0E8", Offset = "0x18FA0E8", VA = "0x18FA0E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB91C", Offset = "0x9BB91C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x18FA1A8", Offset = "0x18FA1A8", VA = "0x18FA1A8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x18F58E0", Offset = "0x18F58E0", VA = "0x18F58E0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x18F595C", Offset = "0x18F595C", VA = "0x18F595C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x18F5784", Offset = "0x18F5784", VA = "0x18F5784")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x18F55C4", Offset = "0x18F55C4", VA = "0x18F55C4")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x18FA220", Offset = "0x18FA220", VA = "0x18FA220")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB980", Offset = "0x9BB980")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x18FA2A8", Offset = "0x18FA2A8", VA = "0x18FA2A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9BB9E4", Offset = "0x9BB9E4")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x18FA3AC", Offset = "0x18FA3AC", VA = "0x18FA3AC")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000B3A")]
		Random,
		[Token(Token = "0x4000B3B")]
		Sequential
	}
	[Token(Token = "0x20002B7")]
	public enum FreqHint
	{
		[Token(Token = "0x4000B3D")]
		None,
		[Token(Token = "0x4000B3E")]
		Wide,
		[Token(Token = "0x4000B3F")]
		Narrow
	}
	[Token(Token = "0x20002B8")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000B41")]
		VeryLow = -2,
		[Token(Token = "0x4000B42")]
		Low,
		[Token(Token = "0x4000B43")]
		Default,
		[Token(Token = "0x4000B44")]
		High,
		[Token(Token = "0x4000B45")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class OSPProps
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8240", Offset = "0x9B8240")]
		public bool enableSpatialization;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8278", Offset = "0x9B8278")]
		public bool useFastOverride;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B82B0", Offset = "0x9B82B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B82B0", Offset = "0x9B82B0")]
		public float gain;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8304", Offset = "0x9B8304")]
		public bool enableInvSquare;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B833C", Offset = "0x9B833C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B833C", Offset = "0x9B833C")]
		public float volumetric;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8394", Offset = "0x9B8394")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9B8394", Offset = "0x9B8394")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x18F9A54", Offset = "0x18F9A54", VA = "0x18F9A54")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public class SoundFX
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B83F4", Offset = "0x9B83F4")]
		public string name;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B842C", Offset = "0x9B842C")]
		public SoundFXNext playback;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8464", Offset = "0x9B8464")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B8464", Offset = "0x9B8464")]
		public float volume;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B84B8", Offset = "0x9B84B8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9B84B8", Offset = "0x9B84B8")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8514", Offset = "0x9B8514")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9B8514", Offset = "0x9B8514")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8574", Offset = "0x9B8574")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B85AC", Offset = "0x9B85AC")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B85E4", Offset = "0x9B85E4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B861C", Offset = "0x9B861C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B861C", Offset = "0x9B861C")]
		public float spread;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8674", Offset = "0x9B8674")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9B8674", Offset = "0x9B8674")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B86C8", Offset = "0x9B86C8")]
		public SoundPriority priority;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8700", Offset = "0x9B8700")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9B8700", Offset = "0x9B8700")]
		public Vector2 delay;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B875C", Offset = "0x9B875C")]
		public bool looping;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9B8794", Offset = "0x9B8794")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700011E")]
		public int Length
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x18FA9E4", Offset = "0x18FA9E4", VA = "0x18FA9E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700011F")]
		public bool IsValid
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x18FAA04", Offset = "0x18FAA04", VA = "0x18FAA04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000120")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x18FAAB0", Offset = "0x18FAAB0", VA = "0x18FAAB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x18FAAB8", Offset = "0x18FAAB8", VA = "0x18FAAB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x18F7D54", Offset = "0x18F7D54", VA = "0x18F7D54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000122")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x18F7D88", Offset = "0x18F7D88", VA = "0x18F7D88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x18F9358", Offset = "0x18F9358", VA = "0x18F9358")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x18F7C7C", Offset = "0x18F7C7C", VA = "0x18F7C7C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x18F7DAC", Offset = "0x18F7DAC", VA = "0x18F7DAC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x18F7D60", Offset = "0x18F7D60", VA = "0x18F7D60")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x18FAAE0", Offset = "0x18FAAE0", VA = "0x18FAAE0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x18F7DA0", Offset = "0x18F7DA0", VA = "0x18F7DA0")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x18FABE8", Offset = "0x18FABE8", VA = "0x18FABE8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x18FACC4", Offset = "0x18FACC4", VA = "0x18FACC4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x18FADD8", Offset = "0x18FADD8", VA = "0x18FADD8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x18FAE64", Offset = "0x18FAE64", VA = "0x18FAE64")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x18FAEF8", Offset = "0x18FAEF8", VA = "0x18FAEF8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x18FAF84", Offset = "0x18FAF84", VA = "0x18FAF84")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x18FB010", Offset = "0x18FB010", VA = "0x18FB010")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BB")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000123")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0x18FB088", Offset = "0x18FB088", VA = "0x18FB088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public string name
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x18FB17C", Offset = "0x18FB17C", VA = "0x18FB17C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001288")]
			[Address(RVA = "0x18FB184", Offset = "0x18FB184", VA = "0x18FB184")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public int Length
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x18FB18C", Offset = "0x18FB18C", VA = "0x18FB18C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000126")]
		public bool IsValid
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x18FB1D4", Offset = "0x18FB1D4", VA = "0x18FB1D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x18FB0B8", Offset = "0x18FB0B8", VA = "0x18FB0B8")]
		private void Init()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x18FB20C", Offset = "0x18FB20C", VA = "0x18FB20C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x18FB244", Offset = "0x18FB244", VA = "0x18FB244")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x18FB284", Offset = "0x18FB284", VA = "0x18FB284")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x18F2ACC", Offset = "0x18F2ACC", VA = "0x18F2ACC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x18FB2CC", Offset = "0x18FB2CC", VA = "0x18FB2CC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x18FB30C", Offset = "0x18FB30C", VA = "0x18FB30C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x18FB35C", Offset = "0x18FB35C", VA = "0x18FB35C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x18FB394", Offset = "0x18FB394", VA = "0x18FB394")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x18FB3D4", Offset = "0x18FB3D4", VA = "0x18FB3D4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x18FB40C", Offset = "0x18FB40C", VA = "0x18FB40C")]
		public SoundFXRef()
		{
		}
	}
}
