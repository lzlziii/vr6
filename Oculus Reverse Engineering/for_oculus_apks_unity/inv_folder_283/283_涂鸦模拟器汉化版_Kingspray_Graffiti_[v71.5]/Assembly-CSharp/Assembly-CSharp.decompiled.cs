using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using AmplifyColor;
using AudioStream;
using Battlehub.RTHandles;
using Battlehub.UIControls;
using Battlehub.Utils;
using Concentus.Common;
using Concentus.Enums;
using Concentus.Oggfile;
using Concentus.Structs;
using DigitalOpus.MB.Core;
using ExitGames.Client.Photon;
using FMOD;
using Il2CppDummyDll;
using Ionic.Crc;
using KSVR_Animation;
using Michsky.UI.ModernUIPack;
using Oculus.Platform;
using Oculus.Platform.Models;
using OggVorbisEncoder;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using TMPro;
using Unity.Collections;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using VacuumShaders.TerrainToMesh;
using ViveGrip.TypeReferences;
using kleberswf.tools.util;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ShaderChanger : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Shader> Shaders;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xB65E68", Offset = "0xB65E68", VA = "0xB65E68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xB65E6C", Offset = "0xB65E6C", VA = "0xB65E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xB66040", Offset = "0xB66040", VA = "0xB66040")]
	public ShaderChanger()
	{
	}
}
[Token(Token = "0x2000003")]
public class DistanceFade : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _RadiusClose;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _RadiusFar;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _DistanceFrom;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _DefaultStrength;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xCBE05C", Offset = "0xCBE05C", VA = "0xCBE05C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xCBE0F0", Offset = "0xCBE0F0", VA = "0xCBE0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCBE314", Offset = "0xCBE314", VA = "0xCBE314")]
	public DistanceFade()
	{
	}
}
[Token(Token = "0x2000004")]
public class LogoScreen : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject InfectiousRoot;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PlatformRoot;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xD3574C", Offset = "0xD3574C", VA = "0xD3574C")]
	public void ShowPlatformLogo()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xD357A4", Offset = "0xD357A4", VA = "0xD357A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xD357A8", Offset = "0xD357A8", VA = "0xD357A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xD357AC", Offset = "0xD357AC", VA = "0xD357AC")]
	public LogoScreen()
	{
	}
}
[Token(Token = "0x2000005")]
public class SprayCanPlayback : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004BD")]
	private class Frame
	{
		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public SerializableVector3 Pos;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public SerializableQuaternion Rot;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float TriggerValue;

		[Token(Token = "0x6002844")]
		[Address(RVA = "0xB6F248", Offset = "0xB6F248", VA = "0xB6F248")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6934", Offset = "0x8F6934")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] bytes;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool done;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SprayCanPlayback <>4__this;

		[Token(Token = "0x6002845")]
		[Address(RVA = "0xB6F2C8", Offset = "0xB6F2C8", VA = "0xB6F2C8")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0xB6F2D0", Offset = "0xB6F2D0", VA = "0xB6F2D0")]
		internal void <LoadAsync>b__0()
		{
		}
	}

	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6944", Offset = "0x8F6944")]
	private sealed class <LoadAsync>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filename;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SprayCanPlayback <>4__this;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass10_0 <>8__1;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x170002FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600284A")]
			[Address(RVA = "0xB6F6EC", Offset = "0xB6F6EC", VA = "0xB6F6EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600284C")]
			[Address(RVA = "0xB6F75C", Offset = "0xB6F75C", VA = "0xB6F75C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0xB6EA74", Offset = "0xB6EA74", VA = "0xB6EA74")]
		[DebuggerHidden]
		public <LoadAsync>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0xB6F370", Offset = "0xB6F370", VA = "0xB6F370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0xB6F374", Offset = "0xB6F374", VA = "0xB6F374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xB6F6F4", Offset = "0xB6F6F4", VA = "0xB6F6F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRecording;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isPlaying;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int frameIndex;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Frame> Frames;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PlaybackObject;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SprayCan SprayCan;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRScreenFade SceneCameraFade;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextAsset PlaybackData;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject EnabledObjectWhenDone;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ArmRecord;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool AutoPlay;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB6E8C8", Offset = "0xB6E8C8", VA = "0xB6E8C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB6E9DC", Offset = "0xB6E9DC", VA = "0xB6E9DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90347C", Offset = "0x90347C")]
	public IEnumerator LoadAsync(string filename)
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB6EAA0", Offset = "0xB6EAA0", VA = "0xB6EAA0")]
	public void Save(string filename)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB6ECDC", Offset = "0xB6ECDC", VA = "0xB6ECDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB6F250", Offset = "0xB6F250", VA = "0xB6F250")]
	public SprayCanPlayback()
	{
	}
}
[Token(Token = "0x2000006")]
internal class AnimatedTexture : MonoBehaviour
{
	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6954", Offset = "0x8F6954")]
	private sealed class <updateTiling>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatedTexture <>4__this;

		[Token(Token = "0x17000300")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002850")]
			[Address(RVA = "0xF33E20", Offset = "0xF33E20", VA = "0xF33E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002852")]
			[Address(RVA = "0xF33E90", Offset = "0xF33E90", VA = "0xF33E90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xF33C4C", Offset = "0xF33C4C", VA = "0xF33C4C")]
		[DebuggerHidden]
		public <updateTiling>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xF33C98", Offset = "0xF33C98", VA = "0xF33C98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xF33C9C", Offset = "0xF33C9C", VA = "0xF33C9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xF33E28", Offset = "0xF33E28", VA = "0xF33E28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int columns;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rows;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float framesPerSecond;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material MyMat;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useframecount;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int framecount;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int indexdiff;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int derp;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF33B14", Offset = "0xF33B14", VA = "0xF33B14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF33BD8", Offset = "0xF33BD8", VA = "0xF33BD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9034E0", Offset = "0x9034E0")]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF33C78", Offset = "0xF33C78", VA = "0xF33C78")]
	public AnimatedTexture()
	{
	}
}
[Token(Token = "0x2000007")]
public class Watch : MonoBehaviour
{
	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6964", Offset = "0x8F6964")]
	private sealed class <UpdateTime>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Watch <>4__this;

		[Token(Token = "0x17000302")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x11A77A0", Offset = "0x11A77A0", VA = "0x11A77A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002858")]
			[Address(RVA = "0x11A7810", Offset = "0x11A7810", VA = "0x11A7810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x11A75FC", Offset = "0x11A75FC", VA = "0x11A75FC")]
		[DebuggerHidden]
		public <UpdateTime>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x11A7630", Offset = "0x11A7630", VA = "0x11A7630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x11A7634", Offset = "0x11A7634", VA = "0x11A7634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x11A77A8", Offset = "0x11A77A8", VA = "0x11A77A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text TimeText;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text DateText;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DateTime dateTime;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x11A74C0", Offset = "0x11A74C0", VA = "0x11A74C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x11A7588", Offset = "0x11A7588", VA = "0x11A7588")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903544", Offset = "0x903544")]
	private IEnumerator UpdateTime()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x11A7628", Offset = "0x11A7628", VA = "0x11A7628")]
	public Watch()
	{
	}
}
[Token(Token = "0x2000008")]
public class AudioHelper : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioHelper _instance;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer AudioMixerMusic;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixer AudioMixerAmbience;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixer AudioMixerSpray;

	[Token(Token = "0x17000001")]
	public static AudioHelper Instance
	{
		[Token(Token = "0x6000016")]
		[Address(RVA = "0xF3D68C", Offset = "0xF3D68C", VA = "0xF3D68C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xF3D758", Offset = "0xF3D758", VA = "0xF3D758")]
	public void Play(string soundFxName, Vector3 position, float volume = 1f, float delay = 0f)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xF3DA20", Offset = "0xF3DA20", VA = "0xF3DA20")]
	public void Play(string soundFxName)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xF3DAEC", Offset = "0xF3DAEC", VA = "0xF3DAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xF3DCBC", Offset = "0xF3DCBC", VA = "0xF3DCBC")]
	public AudioHelper()
	{
	}
}
[Token(Token = "0x2000009")]
public class AudioMixerSlider : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider m_Slider;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixer AudioMixerGroup;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ExposedMixerParameter;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xF45254", Offset = "0xF45254", VA = "0xF45254")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xF45394", Offset = "0xF45394", VA = "0xF45394")]
	private void SetMixerVolume(float volume)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xF45434", Offset = "0xF45434", VA = "0xF45434")]
	private void SliderValueChanged()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF455E0", Offset = "0xF455E0", VA = "0xF455E0")]
	public AudioMixerSlider()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF45638", Offset = "0xF45638", VA = "0xF45638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9035A8", Offset = "0x9035A8")]
	private void <Start>b__3_0(float <p0>)
	{
	}
}
[Token(Token = "0x200000A")]
public class AudioSimplePlayer : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource m_AudioSource;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] AudioClips;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x107FF1C", Offset = "0x107FF1C", VA = "0x107FF1C")]
	public void Play(string name)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x107FFFC", Offset = "0x107FFFC", VA = "0x107FFFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1080054", Offset = "0x1080054", VA = "0x1080054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1080058", Offset = "0x1080058", VA = "0x1080058")]
	public AudioSimplePlayer()
	{
	}
}
[Token(Token = "0x200000B")]
public class C_SimpleStreetAudio : MonoBehaviour
{
	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6974", Offset = "0x8F6974")]
	private sealed class <playNewAmbience>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public C_SimpleStreetAudio <>4__this;

		[Token(Token = "0x17000304")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600285C")]
			[Address(RVA = "0xB44A38", Offset = "0xB44A38", VA = "0xB44A38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0xB44AA8", Offset = "0xB44AA8", VA = "0xB44AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xB44754", Offset = "0xB44754", VA = "0xB44754")]
		[DebuggerHidden]
		public <playNewAmbience>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xB447CC", Offset = "0xB447CC", VA = "0xB447CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0xB447D0", Offset = "0xB447D0", VA = "0xB447D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xB44A40", Offset = "0xB44A40", VA = "0xB44A40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] ambienceLoopClips;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource streetAudioSrc;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool useLoopDelay;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 LoopDelayMinmax;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB4462C", Offset = "0xB4462C", VA = "0xB4462C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB44750", Offset = "0xB44750", VA = "0xB44750")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB446DC", Offset = "0xB446DC", VA = "0xB446DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9035B8", Offset = "0x9035B8")]
	private IEnumerator playNewAmbience()
	{
		return null;
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB44780", Offset = "0xB44780", VA = "0xB44780")]
	public C_SimpleStreetAudio()
	{
	}
}
[Token(Token = "0x200000C")]
public class C_SimpleTrainAudio : MonoBehaviour
{
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6984", Offset = "0x8F6984")]
	private sealed class <startTrainPassBy>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public C_SimpleTrainAudio <>4__this;

		[Token(Token = "0x17000306")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002862")]
			[Address(RVA = "0xB45534", Offset = "0xB45534", VA = "0xB45534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002864")]
			[Address(RVA = "0xB455A4", Offset = "0xB455A4", VA = "0xB455A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xB44D84", Offset = "0xB44D84", VA = "0xB44D84")]
		[DebuggerHidden]
		public <startTrainPassBy>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0xB45270", Offset = "0xB45270", VA = "0xB45270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0xB45274", Offset = "0xB45274", VA = "0xB45274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0xB4553C", Offset = "0xB4553C", VA = "0xB4553C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6994", Offset = "0x8F6994")]
	private sealed class <delayTrainLoop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public C_SimpleTrainAudio <>4__this;

		[Token(Token = "0x17000308")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002868")]
			[Address(RVA = "0xB451F8", Offset = "0xB451F8", VA = "0xB451F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600286A")]
			[Address(RVA = "0xB45268", Offset = "0xB45268", VA = "0xB45268", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0xB44E24", Offset = "0xB44E24", VA = "0xB44E24")]
		[DebuggerHidden]
		public <delayTrainLoop>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0xB4500C", Offset = "0xB4500C", VA = "0xB4500C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0xB45010", Offset = "0xB45010", VA = "0xB45010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0xB45200", Offset = "0xB45200", VA = "0xB45200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRunning;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource trainAudioSrc;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float loopDelaySeconds;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float loopDuration;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float trainTrackDistance;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 MoveDirection;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB44AB0", Offset = "0xB44AB0", VA = "0xB44AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB44BF4", Offset = "0xB44BF4", VA = "0xB44BF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB44BFC", Offset = "0xB44BFC", VA = "0xB44BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB44B80", Offset = "0xB44B80", VA = "0xB44B80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90361C", Offset = "0x90361C")]
	private IEnumerator startTrainPassBy()
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB44DB0", Offset = "0xB44DB0", VA = "0xB44DB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903680", Offset = "0x903680")]
	private IEnumerator delayTrainLoop()
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB44E50", Offset = "0xB44E50", VA = "0xB44E50")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB44F98", Offset = "0xB44F98", VA = "0xB44F98")]
	public C_SimpleTrainAudio()
	{
	}
}
[Token(Token = "0x200000D")]
public class BundleLoader : MonoBehaviour
{
	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F69A4", Offset = "0x8F69A4")]
	private sealed class <LoadBundle>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BundleLoader <>4__this;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AssetBundleCreateRequest <abca>5__2;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AssetBundle <bundle>5__3;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <scenePath>5__4;

		[Token(Token = "0x1700030A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600286E")]
			[Address(RVA = "0xB427D0", Offset = "0xB427D0", VA = "0xB427D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0xB42840", Offset = "0xB42840", VA = "0xB42840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0xB423D0", Offset = "0xB423D0", VA = "0xB423D0")]
		[DebuggerHidden]
		public <LoadBundle>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0xB42460", Offset = "0xB42460", VA = "0xB42460", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0xB42464", Offset = "0xB42464", VA = "0xB42464", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0xB427D8", Offset = "0xB427D8", VA = "0xB427D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Version;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string BundleName;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ActivateOnLoad;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool LoadGameComponents;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KSVR_Equipment.EquipmentMode EquipmentMode;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BundleLoader _instance;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Loading;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material Skybox;

	[Token(Token = "0x17000002")]
	public static BundleLoader Instance
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0xB422A8", Offset = "0xB422A8", VA = "0xB422A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB41FFC", Offset = "0xB41FFC", VA = "0xB41FFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB4209C", Offset = "0xB4209C", VA = "0xB4209C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB42210", Offset = "0xB42210", VA = "0xB42210")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9036E4", Offset = "0x9036E4")]
	public IEnumerator LoadBundle(string url, Hash128 hash)
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB423FC", Offset = "0xB423FC", VA = "0xB423FC")]
	public BundleLoader()
	{
	}
}
[Token(Token = "0x200000E")]
public class BundleTag : MonoBehaviour
{
	[Token(Token = "0x20004C6")]
	public enum Item
	{
		[Token(Token = "0x4001C5E")]
		NONE,
		[Token(Token = "0x4001C5F")]
		SPAWN_POINT,
		[Token(Token = "0x4001C60")]
		TELEPORT,
		[Token(Token = "0x4001C61")]
		CAMERA_COLLISION,
		[Token(Token = "0x4001C62")]
		BOOMBOX,
		[Token(Token = "0x4001C63")]
		PAINT_SURFACE,
		[Token(Token = "0x4001C64")]
		GRABBABLE,
		[Token(Token = "0x4001C65")]
		PROP_SCISSOR_LIFT,
		[Token(Token = "0x4001C66")]
		PROP_OIL_DRUM,
		[Token(Token = "0x4001C67")]
		PROP_LADDER,
		[Token(Token = "0x4001C68")]
		PROP_CRATE,
		[Token(Token = "0x4001C69")]
		PROP_SCAFFOLDING,
		[Token(Token = "0x4001C6A")]
		PROP_WORKLIGHT,
		[Token(Token = "0x4001C6B")]
		CLIMBABLE,
		[Token(Token = "0x4001C6C")]
		TOD_LIGHT_NIGHT
	}

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Item ItemDesc;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xB42848", Offset = "0xB42848", VA = "0xB42848")]
	public BundleTag()
	{
	}
}
[Token(Token = "0x200000F")]
[ExecuteInEditMode]
public class CarPath : MonoBehaviour
{
	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F69B4", Offset = "0x8F69B4")]
	private sealed class <Following>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CarPath <>4__this;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <node_number>5__2;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <point_number>5__3;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector3>.Enumerator <>7__wrap3;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <point>5__5;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <stopping>5__6;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool <accelerating>5__7;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GameObject>.Enumerator <>7__wrap7;

		[Token(Token = "0x1700030C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002876")]
			[Address(RVA = "0xB4C1A8", Offset = "0xB4C1A8", VA = "0xB4C1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002878")]
			[Address(RVA = "0xB4C218", Offset = "0xB4C218", VA = "0xB4C218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0xB4A074", Offset = "0xB4A074", VA = "0xB4A074")]
		[DebuggerHidden]
		public <Following>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0xB4A178", Offset = "0xB4A178", VA = "0xB4A178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0xB4A298", Offset = "0xB4A298", VA = "0xB4A298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0xB4A240", Offset = "0xB4A240", VA = "0xB4A240")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0xB4A1E8", Offset = "0xB4A1E8", VA = "0xB4A1E8")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0xB4C1B0", Offset = "0xB4C1B0", VA = "0xB4C1B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<GameObject> Nodes;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<NodeListClass> NodesProperties;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float RotationSpeed;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	private int NumberOfTurnPoints;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float NodeThreshold;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Repeat;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool ReverseDirections;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool SingleSpeedForAllNodes;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F8650", Offset = "0x8F8650")]
	public float SingleSpeed;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject NodeParent;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> points;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IEnumerator ienum;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion SampledRotation;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float OriginalSpeed;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xB47CBC", Offset = "0xB47CBC", VA = "0xB47CBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB47CC0", Offset = "0xB47CC0", VA = "0xB47CC0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB47EFC", Offset = "0xB47EFC", VA = "0xB47EFC")]
	public void AddNode()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB483E0", Offset = "0xB483E0", VA = "0xB483E0")]
	public void RemoveNode()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB48600", Offset = "0xB48600", VA = "0xB48600")]
	public void RecalculatePath()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB48F4C", Offset = "0xB48F4C", VA = "0xB48F4C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB49194", Offset = "0xB49194", VA = "0xB49194", Slot = "4")]
	protected virtual void EditorUpdate()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB492F8", Offset = "0xB492F8", VA = "0xB492F8")]
	public void SampleRotation()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB4933C", Offset = "0xB4933C", VA = "0xB4933C")]
	public void MTSP()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB49454", Offset = "0xB49454", VA = "0xB49454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB49D28", Offset = "0xB49D28", VA = "0xB49D28")]
	public void ReevaluatePath()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB48ED8", Offset = "0xB48ED8", VA = "0xB48ED8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903748", Offset = "0x903748")]
	public IEnumerator Following()
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xB4A0A0", Offset = "0xB4A0A0", VA = "0xB4A0A0")]
	public CarPath()
	{
	}
}
[Serializable]
[Token(Token = "0x2000010")]
public struct NodeListClass
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject Node;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float Speed;
}
[Token(Token = "0x2000011")]
[ExecuteInEditMode]
public class NodeScript : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool CurvePoint;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8670", Offset = "0x8F8670")]
	public bool StopPoint;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool SmoothStopping;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StopTime;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F86A8", Offset = "0x8F86A8")]
	public float EntryDistance;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F86C4", Offset = "0x8F86C4")]
	public float ExitDistance;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float Speed;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject BefNode;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject AftNode;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Vector3 CurveStartPoint;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public Vector3 CurveEndPoint;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public GameObject Car;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public NodeListClass ThisNodeClass;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xC2634C", Offset = "0xC2634C", VA = "0xC2634C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xC26570", Offset = "0xC26570", VA = "0xC26570")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xC265BC", Offset = "0xC265BC", VA = "0xC265BC")]
	public void AddNode()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xC26634", Offset = "0xC26634", VA = "0xC26634")]
	public void RemoveNode()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC267E0", Offset = "0xC267E0", VA = "0xC267E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xC2714C", Offset = "0xC2714C", VA = "0xC2714C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xC27770", Offset = "0xC27770", VA = "0xC27770")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xC27774", Offset = "0xC27774", VA = "0xC27774")]
	public NodeScript()
	{
	}
}
[Token(Token = "0x2000012")]
public class ClockTimer : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image ClockWipeImage;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text ClockTimeText;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SessionDurationSeconds;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool IsStarted;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float sessionCompleteRatio;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_CurrentTime;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ManualOverride;

	[Token(Token = "0x17000003")]
	public float CurrentTime
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0xB535D8", Offset = "0xB535D8", VA = "0xB535D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB535E0", Offset = "0xB535E0", VA = "0xB535E0")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xB53694", Offset = "0xB53694", VA = "0xB53694")]
	public void StopTimer(bool reset = true)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB53608", Offset = "0xB53608", VA = "0xB53608")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB536A4", Offset = "0xB536A4", VA = "0xB536A4")]
	public void UpdateTime(float time)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xB53720", Offset = "0xB53720", VA = "0xB53720")]
	private string convertFloatToMinutesSeconds(float Timefloat)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB537EC", Offset = "0xB537EC", VA = "0xB537EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB53848", Offset = "0xB53848", VA = "0xB53848")]
	public ClockTimer()
	{
	}
}
[Token(Token = "0x2000013")]
public static class ExtensionMethods
{
	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F69C4", Offset = "0x8F69C4")]
	private sealed class <Slices>d__2<T> : IEnumerable<T[]>, IEnumerable, IEnumerator<T[]>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] <>2__current;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] source;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] <>3__source;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int count;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>3__count;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool padToLength;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool <>3__padToLength;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700030E")]
		private T[] System.Collections.Generic.IEnumerator<T[]>.Current
		{
			[Token(Token = "0x600287C")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600287E")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002879")]
		[DebuggerHidden]
		public <Slices>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600287A")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600287B")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600287D")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600287F")]
		[DebuggerHidden]
		private IEnumerator<T[]> System.Collections.Generic.IEnumerable<T[]>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002880")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xCCA380", Offset = "0xCCA380", VA = "0xCCA380")]
	public static float Remap(this float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x6000054")]
	public static T[] CopySlice<T>(this T[] source, int index, int length, bool padToLength = false)
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9037CC", Offset = "0x9037CC")]
	public static IEnumerable<T[]> Slices<T>(this T[] source, int count, bool padToLength = false)
	{
		return null;
	}
}
[Token(Token = "0x2000014")]
public class Helpers
{
	[Token(Token = "0x20004C9")]
	public class CoroutineWithData
	{
		[Token(Token = "0x20007BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F85F0", Offset = "0x8F85F0")]
		private sealed class <Run>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoroutineWithData <>4__this;

			[Token(Token = "0x170005AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003430")]
				[Address(RVA = "0x1012DF0", Offset = "0x1012DF0", VA = "0x1012DF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003432")]
				[Address(RVA = "0x1012E60", Offset = "0x1012E60", VA = "0x1012E60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600342D")]
			[Address(RVA = "0x1012C18", Offset = "0x1012C18", VA = "0x1012C18")]
			[DebuggerHidden]
			public <Run>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600342E")]
			[Address(RVA = "0x1012C44", Offset = "0x1012C44", VA = "0x1012C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600342F")]
			[Address(RVA = "0x1012C48", Offset = "0x1012C48", VA = "0x1012C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003431")]
			[Address(RVA = "0x1012DF8", Offset = "0x1012DF8", VA = "0x1012DF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902DBC", Offset = "0x902DBC")]
		private Coroutine <coroutine>k__BackingField;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object result;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator target;

		[Token(Token = "0x17000310")]
		public Coroutine coroutine
		{
			[Token(Token = "0x6002881")]
			[Address(RVA = "0x1008918", Offset = "0x1008918", VA = "0x1008918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910AFC", Offset = "0x910AFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002882")]
			[Address(RVA = "0x1012B9C", Offset = "0x1012B9C", VA = "0x1012B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910B0C", Offset = "0x910B0C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x10088B4", Offset = "0x10088B4", VA = "0x10088B4")]
		public CoroutineWithData(MonoBehaviour owner, IEnumerator target)
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x1012BA4", Offset = "0x1012BA4", VA = "0x1012BA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x910B1C", Offset = "0x910B1C")]
		private IEnumerator Run()
		{
			return null;
		}
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string CurrentLoadedTimeStamp;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string CurrentSavePath;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1011E40", Offset = "0x1011E40", VA = "0x1011E40")]
	private float Pack(Vector2 input, int precision = 8192)
	{
		return default(float);
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1011ED4", Offset = "0x1011ED4", VA = "0x1011ED4")]
	private Vector2 Unpack(float input, int precision = 8192)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1011F9C", Offset = "0x1011F9C", VA = "0x1011F9C")]
	public static Transform GetChildByName(Transform parent, string name)
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1012328", Offset = "0x1012328", VA = "0x1012328")]
	public static Vector3 StringToVector3(string sVector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1012524", Offset = "0x1012524", VA = "0x1012524")]
	public static Transform TraverseParentsAndFind(Transform startTrans, string objectName)
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x101262C", Offset = "0x101262C", VA = "0x101262C")]
	public static Quaternion StringToQuaternion(string sQuat)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x101285C", Offset = "0x101285C", VA = "0x101285C")]
	public static string GetTempSavePath()
	{
		return null;
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x10128D4", Offset = "0x10128D4", VA = "0x10128D4")]
	public static string GetFormattedSceneName(string level)
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1012AE8", Offset = "0x1012AE8", VA = "0x1012AE8")]
	public static string GetSceneName()
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1012B18", Offset = "0x1012B18", VA = "0x1012B18")]
	public static int Wrap(int a, int n)
	{
		return default(int);
	}

	[Token(Token = "0x6000060")]
	public static byte[] SerializeObject<T>(T serializableObject)
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	public static T DeserializeObject<T>(byte[] serilizedBytes)
	{
		return (T)null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1012B30", Offset = "0x1012B30", VA = "0x1012B30")]
	public Helpers()
	{
	}
}
[Token(Token = "0x2000015")]
internal static class IListExtension
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rng;

	[Token(Token = "0x6000064")]
	public static void Shuffle<T>(this IList<T> list)
	{
	}
}
[Token(Token = "0x2000016")]
public class LoadLevel : MonoBehaviour
{
	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F69D4", Offset = "0x8F69D4")]
	private sealed class <DoLoad>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadLevel <>4__this;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <ao>5__2;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <oldProgress>5__3;

		[Token(Token = "0x17000311")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002888")]
			[Address(RVA = "0xD32D8C", Offset = "0xD32D8C", VA = "0xD32D8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600288A")]
			[Address(RVA = "0xD32DFC", Offset = "0xD32DFC", VA = "0xD32DFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0xD32728", Offset = "0xD32728", VA = "0xD32728")]
		[DebuggerHidden]
		public <DoLoad>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xD328AC", Offset = "0xD328AC", VA = "0xD328AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xD328B0", Offset = "0xD328B0", VA = "0xD328B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0xD32D94", Offset = "0xD32D94", VA = "0xD32D94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F69E4", Offset = "0x8F69E4")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadLevel <>4__this;

		[Token(Token = "0x17000313")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600288E")]
			[Address(RVA = "0xD32F9C", Offset = "0xD32F9C", VA = "0xD32F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000314")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002890")]
			[Address(RVA = "0xD3300C", Offset = "0xD3300C", VA = "0xD3300C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0xD32878", Offset = "0xD32878", VA = "0xD32878")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0xD32E04", Offset = "0xD32E04", VA = "0xD32E04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0xD32E08", Offset = "0xD32E08", VA = "0xD32E08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0xD32FA4", Offset = "0xD32FA4", VA = "0xD32FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LevelName;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD326AC", Offset = "0xD326AC", VA = "0xD326AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD326B4", Offset = "0xD326B4", VA = "0xD326B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903850", Offset = "0x903850")]
	public IEnumerator DoLoad()
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD32754", Offset = "0xD32754", VA = "0xD32754")]
	private void RemoveKey(string key)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD32804", Offset = "0xD32804", VA = "0xD32804")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9038B4", Offset = "0x9038B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD328A4", Offset = "0xD328A4", VA = "0xD328A4")]
	public LoadLevel()
	{
	}
}
[Token(Token = "0x2000017")]
public class Music : MonoBehaviour
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Music _instance;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] TrackPool;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource SoundSource;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource m_AudioSource;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float defaultVolume;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_isFadingOut;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool m_isPaused;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float FadeSpeed;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float volume;

	[Token(Token = "0x17000004")]
	public static Music Instance
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xC14D18", Offset = "0xC14D18", VA = "0xC14D18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	public AudioSource AudioSource
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xC14FEC", Offset = "0xC14FEC", VA = "0xC14FEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xC14DE4", Offset = "0xC14DE4", VA = "0xC14DE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xC14FF4", Offset = "0xC14FF4", VA = "0xC14FF4")]
	public void RandomizeTrack()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xC14F70", Offset = "0xC14F70", VA = "0xC14F70")]
	public void Play(float delay = 0f, bool randomize = false)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xC15108", Offset = "0xC15108", VA = "0xC15108")]
	public void UnPause()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC1520C", Offset = "0xC1520C", VA = "0xC1520C")]
	public void Stop(float fadeout = 2f)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xC15218", Offset = "0xC15218", VA = "0xC15218")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xC1521C", Offset = "0xC1521C", VA = "0xC1521C")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xC1525C", Offset = "0xC1525C", VA = "0xC1525C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xC153A8", Offset = "0xC153A8", VA = "0xC153A8")]
	public Music()
	{
	}
}
[Token(Token = "0x2000018")]
public class RenderInfrontCam : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DistanceFromCamera;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB5DCC0", Offset = "0xB5DCC0", VA = "0xB5DCC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB5DCC4", Offset = "0xB5DCC4", VA = "0xB5DCC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB5E014", Offset = "0xB5E014", VA = "0xB5E014")]
	public RenderInfrontCam()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public struct SerializableQuaternion
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float w;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x9A4558", Offset = "0x9A4558", VA = "0x9A4558")]
	public SerializableQuaternion(float rX, float rY, float rZ, float rW)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x9A4564", Offset = "0x9A4564", VA = "0x9A4564", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB65520", Offset = "0xB65520", VA = "0xB65520")]
	public static implicit operator Quaternion(SerializableQuaternion rValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB65550", Offset = "0xB65550", VA = "0xB65550")]
	public static implicit operator SerializableQuaternion(Quaternion rValue)
	{
		return default(SerializableQuaternion);
	}
}
[Serializable]
[Token(Token = "0x200001A")]
public struct SerializableVector3
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x9A456C", Offset = "0x9A456C", VA = "0x9A456C")]
	public SerializableVector3(float rX, float rY, float rZ)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x9A4578", Offset = "0x9A4578", VA = "0x9A4578", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB65620", Offset = "0xB65620", VA = "0xB65620")]
	public static implicit operator Vector3(SerializableVector3 rValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB65654", Offset = "0xB65654", VA = "0xB65654")]
	public static implicit operator SerializableVector3(Vector3 rValue)
	{
		return default(SerializableVector3);
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public struct SerializableVector4
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float w;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x9A4580", Offset = "0x9A4580", VA = "0x9A4580")]
	public SerializableVector4(float rX, float rY, float rZ, float rW)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x9A458C", Offset = "0x9A458C", VA = "0x9A458C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB6587C", Offset = "0xB6587C", VA = "0xB6587C")]
	public static implicit operator Vector4(SerializableVector4 rValue)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB658AC", Offset = "0xB658AC", VA = "0xB658AC")]
	public static implicit operator SerializableVector4(Vector4 rValue)
	{
		return default(SerializableVector4);
	}
}
[Token(Token = "0x200001C")]
public class SetInitialTransform : MonoBehaviour
{
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F69F4", Offset = "0x8F69F4")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetInitialTransform <>4__this;

		[Token(Token = "0x17000315")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002894")]
			[Address(RVA = "0xB65DF0", Offset = "0xB65DF0", VA = "0xB65DF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002896")]
			[Address(RVA = "0xB65E60", Offset = "0xB65E60", VA = "0xB65E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0xB65924", Offset = "0xB65924", VA = "0xB65924")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0xB65C38", Offset = "0xB65C38", VA = "0xB65C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0xB65C3C", Offset = "0xB65C3C", VA = "0xB65C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0xB65DF8", Offset = "0xB65DF8", VA = "0xB65DF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Lerp;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB658B0", Offset = "0xB658B0", VA = "0xB658B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903918", Offset = "0x903918")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB65950", Offset = "0xB65950", VA = "0xB65950")]
	private void Update()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB65C30", Offset = "0xB65C30", VA = "0xB65C30")]
	public SetInitialTransform()
	{
	}
}
[Token(Token = "0x200001D")]
public class SpawnPrefab : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Transform;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool SetParentAndResetTransform;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xB6A828", Offset = "0xB6A828", VA = "0xB6A828")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB6ABB0", Offset = "0xB6ABB0", VA = "0xB6ABB0")]
	public SpawnPrefab()
	{
	}
}
[Token(Token = "0x200001E")]
public class TextureScale
{
	[Token(Token = "0x20004CD")]
	public class ThreadData
	{
		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x6002897")]
		[Address(RVA = "0xAC7D20", Offset = "0xAC7D20", VA = "0xAC7D20")]
		public ThreadData(int s, int e)
		{
		}
	}

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] texColors;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] newColors;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int w;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float ratioX;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float ratioY;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int w2;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int finishCount;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Mutex mutex;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE15844", Offset = "0xE15844", VA = "0xE15844")]
	public static void Point(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE15C80", Offset = "0xE15C80", VA = "0xE15C80")]
	public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE1584C", Offset = "0xE1584C", VA = "0xE1584C")]
	private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE16340", Offset = "0xE16340", VA = "0xE16340")]
	internal static void PointScale(Texture2D tex, int v1, int v2)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE15C88", Offset = "0xE15C88", VA = "0xE15C88")]
	public static void BilinearScale(object obj)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE160E8", Offset = "0xE160E8", VA = "0xE160E8")]
	public static void PointScale(object obj)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xE163A8", Offset = "0xE163A8", VA = "0xE163A8")]
	private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xE1640C", Offset = "0xE1640C", VA = "0xE1640C")]
	public TextureScale()
	{
	}
}
[Token(Token = "0x200001F")]
public class TurnAndFace : MonoBehaviour
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TurnSpeed;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RotationOffset;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xAC900C", Offset = "0xAC900C", VA = "0xAC900C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xAC9160", Offset = "0xAC9160", VA = "0xAC9160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xAC9334", Offset = "0xAC9334", VA = "0xAC9334")]
	public TurnAndFace()
	{
	}
}
[Token(Token = "0x2000020")]
public class UnitTests : MonoBehaviour
{
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A04", Offset = "0x8F6A04")]
	private sealed class <RunSaveUnitTestAsync>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitTests <>4__this;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int count;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x17000317")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600289B")]
			[Address(RVA = "0xAD95AC", Offset = "0xAD95AC", VA = "0xAD95AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0xAD961C", Offset = "0xAD961C", VA = "0xAD961C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0xAD83A8", Offset = "0xAD83A8", VA = "0xAD83A8")]
		[DebuggerHidden]
		public <RunSaveUnitTestAsync>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0xAD9370", Offset = "0xAD9370", VA = "0xAD9370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0xAD9374", Offset = "0xAD9374", VA = "0xAD9374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0xAD95B4", Offset = "0xAD95B4", VA = "0xAD95B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A14", Offset = "0x8F6A14")]
	private sealed class <RunLoadUnitTestAsync>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitTests <>4__this;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int count;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> <savedItems>5__2;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000319")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0xAD92F8", Offset = "0xAD92F8", VA = "0xAD92F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028A3")]
			[Address(RVA = "0xAD9368", Offset = "0xAD9368", VA = "0xAD9368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0xAD8498", Offset = "0xAD8498", VA = "0xAD8498")]
		[DebuggerHidden]
		public <RunLoadUnitTestAsync>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0xAD8FD0", Offset = "0xAD8FD0", VA = "0xAD8FD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0xAD8FD4", Offset = "0xAD8FD4", VA = "0xAD8FD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0xAD9300", Offset = "0xAD9300", VA = "0xAD9300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A24", Offset = "0x8F6A24")]
	private sealed class <RunCleanUnitTestAsync>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int count;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <i>5__2;

		[Token(Token = "0x1700031B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028A7")]
			[Address(RVA = "0xAD8F58", Offset = "0xAD8F58", VA = "0xAD8F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0xAD8FC8", Offset = "0xAD8FC8", VA = "0xAD8FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0xAD8564", Offset = "0xAD8564", VA = "0xAD8564")]
		[DebuggerHidden]
		public <RunCleanUnitTestAsync>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0xAD8D94", Offset = "0xAD8D94", VA = "0xAD8D94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0xAD8D98", Offset = "0xAD8D98", VA = "0xAD8D98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0xAD8F60", Offset = "0xAD8F60", VA = "0xAD8F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A34", Offset = "0x8F6A34")]
	private sealed class <RunTextureToImageLoadAsync>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitTests <>4__this;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int count;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> <m_Saves>5__2;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x1700031D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028AD")]
			[Address(RVA = "0xAD98C0", Offset = "0xAD98C0", VA = "0xAD98C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0xAD9930", Offset = "0xAD9930", VA = "0xAD9930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0xAD8654", Offset = "0xAD8654", VA = "0xAD8654")]
		[DebuggerHidden]
		public <RunTextureToImageLoadAsync>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0xAD9624", Offset = "0xAD9624", VA = "0xAD9624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0xAD9628", Offset = "0xAD9628", VA = "0xAD9628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0xAD98C8", Offset = "0xAD98C8", VA = "0xAD98C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A44", Offset = "0x8F6A44")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitTests <>4__this;

		[Token(Token = "0x1700031F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028B3")]
			[Address(RVA = "0xAD9AA0", Offset = "0xAD9AA0", VA = "0xAD9AA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0xAD9B10", Offset = "0xAD9B10", VA = "0xAD9B10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0xAD8758", Offset = "0xAD8758", VA = "0xAD8758")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0xAD9938", Offset = "0xAD9938", VA = "0xAD9938", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0xAD993C", Offset = "0xAD993C", VA = "0xAD993C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0xAD9AA8", Offset = "0xAD9AA8", VA = "0xAD9AA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A54", Offset = "0x8F6A54")]
	private sealed class <PrepareAndLoadLevel>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LevelName;

		[Token(Token = "0x17000321")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0xAD8D1C", Offset = "0xAD8D1C", VA = "0xAD8D1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0xAD8D8C", Offset = "0xAD8D8C", VA = "0xAD8D8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0xAD88A4", Offset = "0xAD88A4", VA = "0xAD88A4")]
		[DebuggerHidden]
		public <PrepareAndLoadLevel>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0xAD89CC", Offset = "0xAD89CC", VA = "0xAD89CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0xAD89D0", Offset = "0xAD89D0", VA = "0xAD89D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0xAD8D24", Offset = "0xAD8D24", VA = "0xAD8D24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A64", Offset = "0x8F6A64")]
	private sealed class <SwapLevel>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitTests <>4__this;

		[Token(Token = "0x17000323")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0xAD9E3C", Offset = "0xAD9E3C", VA = "0xAD9E3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xAD9EAC", Offset = "0xAD9EAC", VA = "0xAD9EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0xAD88D0", Offset = "0xAD88D0", VA = "0xAD88D0")]
		[DebuggerHidden]
		public <SwapLevel>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0xAD9B18", Offset = "0xAD9B18", VA = "0xAD9B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0xAD9B1C", Offset = "0xAD9B1C", VA = "0xAD9B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0xAD9E44", Offset = "0xAD9E44", VA = "0xAD9E44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera SaveCamera;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image LoadImage;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SprayCanDebugController SprayCanController;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SoundFXRef TestAudio;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isRunningLevelSwap;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int levelSwapCount;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xAD82E4", Offset = "0xAD82E4", VA = "0xAD82E4")]
	public void RunSaveUnitTest(int count = 10)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xAD8310", Offset = "0xAD8310", VA = "0xAD8310")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90397C", Offset = "0x90397C")]
	private IEnumerator RunSaveUnitTestAsync(int count)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xAD83D4", Offset = "0xAD83D4", VA = "0xAD83D4")]
	public void RunLoadUnitTest(int count = 10)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xAD8400", Offset = "0xAD8400", VA = "0xAD8400")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9039E0", Offset = "0x9039E0")]
	private IEnumerator RunLoadUnitTestAsync(int count)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xAD84C4", Offset = "0xAD84C4", VA = "0xAD84C4")]
	public void RunCleanUnitTest(int count = 10)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xAD84F0", Offset = "0xAD84F0", VA = "0xAD84F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903A44", Offset = "0x903A44")]
	private IEnumerator RunCleanUnitTestAsync(int count)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xAD8590", Offset = "0xAD8590", VA = "0xAD8590")]
	public void TextureToImageLoadUnitTest(int count = 10)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xAD85BC", Offset = "0xAD85BC", VA = "0xAD85BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903AA8", Offset = "0x903AA8")]
	private IEnumerator RunTextureToImageLoadAsync(int count)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xAD8680", Offset = "0xAD8680", VA = "0xAD8680")]
	public void StartSprayCanUnitTest()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xAD86E4", Offset = "0xAD86E4", VA = "0xAD86E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903B0C", Offset = "0x903B0C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xAD8784", Offset = "0xAD8784", VA = "0xAD8784")]
	public void StartLevelSwap()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xAD8830", Offset = "0xAD8830", VA = "0xAD8830")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903B70", Offset = "0x903B70")]
	public IEnumerator PrepareAndLoadLevel(string LevelName)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xAD87BC", Offset = "0xAD87BC", VA = "0xAD87BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903BD4", Offset = "0x903BD4")]
	private IEnumerator SwapLevel()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xAD88FC", Offset = "0xAD88FC", VA = "0xAD88FC")]
	private void SceneManager_activeSceneChanged(Scene arg0, Scene arg1)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xAD89C0", Offset = "0xAD89C0", VA = "0xAD89C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xAD89C4", Offset = "0xAD89C4", VA = "0xAD89C4")]
	public UnitTests()
	{
	}
}
[Token(Token = "0x2000021")]
public class CustomizedItemData : MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string String;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Int;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<string, object> m_Data;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xEEBCB4", Offset = "0xEEBCB4", VA = "0xEEBCB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xEEBCB8", Offset = "0xEEBCB8", VA = "0xEEBCB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xEEBCBC", Offset = "0xEEBCBC", VA = "0xEEBCBC")]
	public CustomizedItemData()
	{
	}
}
[Token(Token = "0x2000022")]
public class CustomizedItemsManager : MonoBehaviour
{
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A74", Offset = "0x8F6A74")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomizedItemsManager <>4__this;

		[Token(Token = "0x17000325")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xEECED0", Offset = "0xEECED0", VA = "0xEECED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0xEECF40", Offset = "0xEECF40", VA = "0xEECF40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0xEEBDA8", Offset = "0xEEBDA8", VA = "0xEEBDA8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0xEEC5CC", Offset = "0xEEC5CC", VA = "0xEEC5CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0xEEC5D0", Offset = "0xEEC5D0", VA = "0xEEC5D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0xEECED8", Offset = "0xEECED8", VA = "0xEECED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A84", Offset = "0x8F6A84")]
	private sealed class <LoadTexture>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CustomizedItemsManager <>4__this;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x17000327")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028CB")]
			[Address(RVA = "0xEEC554", Offset = "0xEEC554", VA = "0xEEC554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0xEEC5C4", Offset = "0xEEC5C4", VA = "0xEEC5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0xEEC150", Offset = "0xEEC150", VA = "0xEEC150")]
		[DebuggerHidden]
		public <LoadTexture>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0xEEC1D8", Offset = "0xEEC1D8", VA = "0xEEC1D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0xEEC1DC", Offset = "0xEEC1DC", VA = "0xEEC1DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0xEEC55C", Offset = "0xEEC55C", VA = "0xEEC55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SourceLevelName;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CustomizedItemData[] CustomizedDataItems;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xEEBD34", Offset = "0xEEBD34", VA = "0xEEBD34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903C38", Offset = "0x903C38")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xEEBDD4", Offset = "0xEEBDD4", VA = "0xEEBDD4")]
	public void UpdateSelectedPlayerPref()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xEEC014", Offset = "0xEEC014", VA = "0xEEC014")]
	private bool ValidateSavedPath(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xEEC0A4", Offset = "0xEEC0A4", VA = "0xEEC0A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903C9C", Offset = "0x903C9C")]
	private IEnumerator LoadTexture(string path, Material material)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xEEC17C", Offset = "0xEEC17C", VA = "0xEEC17C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xEEC180", Offset = "0xEEC180", VA = "0xEEC180")]
	public CustomizedItemsManager()
	{
	}
}
[Token(Token = "0x2000023")]
public class CustomizedMask : MonoBehaviour
{
	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6A94", Offset = "0x8F6A94")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomizedMask <>4__this;

		[Token(Token = "0x17000329")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0xEED2CC", Offset = "0xEED2CC", VA = "0xEED2CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0xEED33C", Offset = "0xEED33C", VA = "0xEED33C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0xEECFBC", Offset = "0xEECFBC", VA = "0xEECFBC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0xEED178", Offset = "0xEED178", VA = "0xEED178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0xEED17C", Offset = "0xEED17C", VA = "0xEED17C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0xEED2D4", Offset = "0xEED2D4", VA = "0xEED2D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> Filters;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xEECF48", Offset = "0xEECF48", VA = "0xEECF48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903D00", Offset = "0x903D00")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xEECFE8", Offset = "0xEECFE8", VA = "0xEECFE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xEECFEC", Offset = "0xEECFEC", VA = "0xEECFEC")]
	private void SetMaskFilter(int index)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xEED104", Offset = "0xEED104", VA = "0xEED104")]
	private void Instance_OnPaintMaskFilterChanged(int index)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xEED108", Offset = "0xEED108", VA = "0xEED108")]
	public CustomizedMask()
	{
	}
}
[Token(Token = "0x2000024")]
public class CustomizePostSave : MonoBehaviour
{
	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AA4", Offset = "0x8F6AA4")]
	private sealed class <UploadSelectedItemToCloud>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomizePostSave <>4__this;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x1700032B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0xEEBC3C", Offset = "0xEEBC3C", VA = "0xEEBC3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028D9")]
			[Address(RVA = "0xEEBCAC", Offset = "0xEEBCAC", VA = "0xEEBCAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0xEEB84C", Offset = "0xEEB84C", VA = "0xEEB84C")]
		[DebuggerHidden]
		public <UploadSelectedItemToCloud>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xEEB96C", Offset = "0xEEB96C", VA = "0xEEB96C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xEEB970", Offset = "0xEEB970", VA = "0xEEB970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0xEEBC44", Offset = "0xEEBC44", VA = "0xEEBC44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string CustomizeGroupName;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xEEB740", Offset = "0xEEB740", VA = "0xEEB740")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xEEB7B4", Offset = "0xEEB7B4", VA = "0xEEB7B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903D64", Offset = "0x903D64")]
	private IEnumerator UploadSelectedItemToCloud(string path)
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xEEB878", Offset = "0xEEB878", VA = "0xEEB878")]
	private void KSVR_IO_Android_OnSaveEvent(string folderPath)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xEEB914", Offset = "0xEEB914", VA = "0xEEB914")]
	public CustomizePostSave()
	{
	}
}
[Token(Token = "0x2000025")]
public class OnlineTextureOverride : MonoBehaviour
{
	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AB4", Offset = "0x8F6AB4")]
	private sealed class <LoadTexture>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string userID;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnlineTextureOverride <>4__this;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x1700032D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0xC374C0", Offset = "0xC374C0", VA = "0xC374C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028DF")]
			[Address(RVA = "0xC37530", Offset = "0xC37530", VA = "0xC37530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0xC36CF0", Offset = "0xC36CF0", VA = "0xC36CF0")]
		[DebuggerHidden]
		public <LoadTexture>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0xC36DE4", Offset = "0xC36DE4", VA = "0xC36DE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0xC36DE8", Offset = "0xC36DE8", VA = "0xC36DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0xC374C8", Offset = "0xC374C8", VA = "0xC374C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AssetName;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string UserID;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material ItemsMaterial;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xC36C2C", Offset = "0xC36C2C", VA = "0xC36C2C")]
	public void LoadTextures(string userID)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xC36C58", Offset = "0xC36C58", VA = "0xC36C58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903DC8", Offset = "0x903DC8")]
	private IEnumerator LoadTexture(string userID)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xC36D1C", Offset = "0xC36D1C", VA = "0xC36D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xC36D8C", Offset = "0xC36D8C", VA = "0xC36D8C")]
	public OnlineTextureOverride()
	{
	}
}
[Token(Token = "0x2000026")]
public class SelectCustomizedItem : MonoBehaviour
{
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AC4", Offset = "0x8F6AC4")]
	private sealed class <UploadSelectedItemToCloud>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectCustomizedItem <>4__this;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIMeshSelectionGroupItem item;

		[Token(Token = "0x1700032F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0xB64FF0", Offset = "0xB64FF0", VA = "0xB64FF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0xB65060", Offset = "0xB65060", VA = "0xB65060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0xB647D4", Offset = "0xB647D4", VA = "0xB647D4")]
		[DebuggerHidden]
		public <UploadSelectedItemToCloud>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0xB64CF8", Offset = "0xB64CF8", VA = "0xB64CF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0xB64CFC", Offset = "0xB64CFC", VA = "0xB64CFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0xB64FF8", Offset = "0xB64FF8", VA = "0xB64FF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AD4", Offset = "0x8F6AD4")]
	private sealed class <DelayedSceneStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000331")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0xB64C80", Offset = "0xB64C80", VA = "0xB64C80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0xB64CF0", Offset = "0xB64CF0", VA = "0xB64CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0xB64954", Offset = "0xB64954", VA = "0xB64954")]
		[DebuggerHidden]
		public <DelayedSceneStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0xB64BD4", Offset = "0xB64BD4", VA = "0xB64BD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0xB64BD8", Offset = "0xB64BD8", VA = "0xB64BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0xB64C88", Offset = "0xB64C88", VA = "0xB64C88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LevelName;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string AudioCategory;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB64720", Offset = "0xB64720", VA = "0xB64720")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB64724", Offset = "0xB64724", VA = "0xB64724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903E2C", Offset = "0x903E2C")]
	private IEnumerator UploadSelectedItemToCloud(UIMeshSelectionGroupItem item, string path)
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB64800", Offset = "0xB64800", VA = "0xB64800")]
	private void OnCustomizedItem(UIMeshSelectionGroupItem selectedItem)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB648F4", Offset = "0xB648F4", VA = "0xB648F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903E90", Offset = "0x903E90")]
	private IEnumerator DelayedSceneStart()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB64980", Offset = "0xB64980", VA = "0xB64980")]
	private void OnCustomizedItemSelected(UIMeshSelectionGroupItem selectedItem)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB64B6C", Offset = "0xB64B6C", VA = "0xB64B6C")]
	public SelectCustomizedItem()
	{
	}
}
[Token(Token = "0x2000027")]
public class SelectCustomizeMaskFilter : MonoBehaviour
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AudioCategory;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xB64398", Offset = "0xB64398", VA = "0xB64398")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB6439C", Offset = "0xB6439C", VA = "0xB6439C")]
	private void OnCustomizedItemSelected(UIMeshSelectionGroupItem selectedItem)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB646C8", Offset = "0xB646C8", VA = "0xB646C8")]
	public SelectCustomizeMaskFilter()
	{
	}
}
[Token(Token = "0x2000028")]
public class UIMeshSelectionGroupItem : MonoBehaviour, IMeshRaycaster
{
	[Token(Token = "0x20004DC")]
	private enum State
	{
		[Token(Token = "0x4001CCC")]
		NONE,
		[Token(Token = "0x4001CCD")]
		HOVER,
		[Token(Token = "0x4001CCE")]
		SELECTED
	}

	[Token(Token = "0x20004DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AE4", Offset = "0x8F6AE4")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIMeshSelectionGroupItem <>4__this;

		[Token(Token = "0x17000333")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0xAD7EA4", Offset = "0xAD7EA4", VA = "0xAD7EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028F1")]
			[Address(RVA = "0xAD7F14", Offset = "0xAD7F14", VA = "0xAD7F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0xAD7874", Offset = "0xAD7874", VA = "0xAD7874")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0xAD7CFC", Offset = "0xAD7CFC", VA = "0xAD7CFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0xAD7D00", Offset = "0xAD7D00", VA = "0xAD7D00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0xAD7EAC", Offset = "0xAD7EAC", VA = "0xAD7EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GroupManager;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<UIMeshSelectionGroupItem> customObjects;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, UIMeshSelectionGroupItem> selectedInGroup;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, UIMeshSelectionGroupItem> hovereredInGroup;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Group;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SelectedMesh;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject HoverMesh;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State m_State;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnPointerClickedEvent;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnPointEnterEvent;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnPointLeaveEvent;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool RotateItem;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string CustomizeLevelName;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xAD7360", Offset = "0xAD7360", VA = "0xAD7360")]
	private static void ClearHovers()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xAD7780", Offset = "0xAD7780", VA = "0xAD7780")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xAD7800", Offset = "0xAD7800", VA = "0xAD7800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903EF4", Offset = "0x903EF4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xAD78A0", Offset = "0xAD78A0", VA = "0xAD78A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xAD74BC", Offset = "0xAD74BC", VA = "0xAD74BC")]
	private void SetState(State state)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xAD792C", Offset = "0xAD792C", VA = "0xAD792C", Slot = "4")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xAD79BC", Offset = "0xAD79BC", VA = "0xAD79BC", Slot = "5")]
	public void OnPointerLeave()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xAD7A38", Offset = "0xAD7A38", VA = "0xAD7A38")]
	public void CustomizeItem()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xAD7AAC", Offset = "0xAD7AAC", VA = "0xAD7AAC", Slot = "6")]
	public void OnPointerClicked()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xAD7B90", Offset = "0xAD7B90", VA = "0xAD7B90", Slot = "7")]
	public Vector3 GetPointerSnapPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xAD7BD8", Offset = "0xAD7BD8", VA = "0xAD7BD8")]
	public UIMeshSelectionGroupItem()
	{
	}
}
[Token(Token = "0x2000029")]
public class WearableBaseballCap : MonoBehaviour
{
	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AF4", Offset = "0x8F6AF4")]
	private sealed class <WearCap>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WearableBaseballCap <>4__this;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <basePath>5__2;

		[Token(Token = "0x17000335")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x11A7DC0", Offset = "0x11A7DC0", VA = "0x11A7DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028F7")]
			[Address(RVA = "0x11A7E30", Offset = "0x11A7E30", VA = "0x11A7E30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x11A7890", Offset = "0x11A7890", VA = "0x11A7890")]
		[DebuggerHidden]
		public <WearCap>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x11A79A4", Offset = "0x11A79A4", VA = "0x11A79A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x11A79A8", Offset = "0x11A79A8", VA = "0x11A79A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x11A7DC8", Offset = "0x11A7DC8", VA = "0x11A7DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isUpdatingTextures;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x11A7818", Offset = "0x11A7818", VA = "0x11A7818")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x11A781C", Offset = "0x11A781C", VA = "0x11A781C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903F58", Offset = "0x903F58")]
	private IEnumerator WearCap()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x11A78BC", Offset = "0x11A78BC", VA = "0x11A78BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x11A7998", Offset = "0x11A7998", VA = "0x11A7998")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x11A799C", Offset = "0x11A799C", VA = "0x11A799C")]
	public WearableBaseballCap()
	{
	}
}
[Token(Token = "0x200002A")]
public class LogDog : MonoBehaviour
{
	[Token(Token = "0x20004DF")]
	public enum LogDogLevel
	{
		[Token(Token = "0x4001CD7")]
		general,
		[Token(Token = "0x4001CD8")]
		network,
		[Token(Token = "0x4001CD9")]
		grabbable
	}

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LogDog _instance;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLogging;

	[Token(Token = "0x17000006")]
	public static LogDog Instance
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xD347C4", Offset = "0xD347C4", VA = "0xD347C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xD348F4", Offset = "0xD348F4", VA = "0xD348F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xD34970", Offset = "0xD34970", VA = "0xD34970")]
	public void Log(string Message, LogDogLevel level = LogDogLevel.general, LogType layer = LogType.Log)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xD34A78", Offset = "0xD34A78", VA = "0xD34A78")]
	public void NetLog(string Message)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xD34A80", Offset = "0xD34A80", VA = "0xD34A80")]
	public LogDog()
	{
	}
}
[Token(Token = "0x200002B")]
public class ManualNetworkRunner : MonoBehaviour
{
	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xD47EF8", Offset = "0xD47EF8", VA = "0xD47EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xD47FB4", Offset = "0xD47FB4", VA = "0xD47FB4")]
	public bool ConnectedToServer(bool connected)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xD4804C", Offset = "0xD4804C", VA = "0xD4804C")]
	public bool RoomJoined(bool joined)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xD480E4", Offset = "0xD480E4", VA = "0xD480E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xD480E8", Offset = "0xD480E8", VA = "0xD480E8")]
	public ManualNetworkRunner()
	{
	}
}
[Token(Token = "0x200002C")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xCBE330", Offset = "0xCBE330", VA = "0xCBE330")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xCBE3AC", Offset = "0xCBE3AC", VA = "0xCBE3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xCBE3B0", Offset = "0xCBE3B0", VA = "0xCBE3B0")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x200002D")]
public class DrawBoundsGizmos : MonoBehaviour
{
	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xCBE3B8", Offset = "0xCBE3B8", VA = "0xCBE3B8")]
	public DrawBoundsGizmos()
	{
	}
}
[Token(Token = "0x200002E")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform FollowTrans;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FollowSpeed;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1006D78", Offset = "0x1006D78", VA = "0x1006D78")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1006E64", Offset = "0x1006E64", VA = "0x1006E64")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x10070BC", Offset = "0x10070BC", VA = "0x10070BC")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x200002F")]
public class PigSign_Animator : MonoBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer[] GlowStateMesh;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int curState;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float interval;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xAA0874", Offset = "0xAA0874", VA = "0xAA0874")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xAA08D0", Offset = "0xAA08D0", VA = "0xAA08D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xAA08D4", Offset = "0xAA08D4", VA = "0xAA08D4")]
	private void SwapLight()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xAA0A18", Offset = "0xAA0A18", VA = "0xAA0A18")]
	public PigSign_Animator()
	{
	}
}
[Token(Token = "0x2000030")]
public class Gallery : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B04", Offset = "0x8F6B04")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__0_0;

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x1008254", Offset = "0x1008254", VA = "0x1008254")]
		public <>c()
		{
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x100825C", Offset = "0x100825C", VA = "0x100825C")]
		internal bool <Start>b__0_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20004E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B14", Offset = "0x8F6B14")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gallery <>4__this;

		[Token(Token = "0x17000337")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x1008B6C", Offset = "0x1008B6C", VA = "0x1008B6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002900")]
			[Address(RVA = "0x1008BDC", Offset = "0x1008BDC", VA = "0x1008BDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x1007FF4", Offset = "0x1007FF4", VA = "0x1007FF4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x1008998", Offset = "0x1008998", VA = "0x1008998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x100899C", Offset = "0x100899C", VA = "0x100899C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x1008B74", Offset = "0x1008B74", VA = "0x1008B74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B24", Offset = "0x8F6B24")]
	private sealed class <LoadArtworks>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gallery <>4__this;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Helpers.CoroutineWithData <cwd>5__3;

		[Token(Token = "0x17000339")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002904")]
			[Address(RVA = "0x1008920", Offset = "0x1008920", VA = "0x1008920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002906")]
			[Address(RVA = "0x1008990", Offset = "0x1008990", VA = "0x1008990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x1008150", Offset = "0x1008150", VA = "0x1008150")]
		[DebuggerHidden]
		public <LoadArtworks>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x10082F4", Offset = "0x10082F4", VA = "0x10082F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x10082F8", Offset = "0x10082F8", VA = "0x10082F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x1008928", Offset = "0x1008928", VA = "0x1008928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Pictures;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Dictionary<string, object>> m_ArtworkEntries;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1007F80", Offset = "0x1007F80", VA = "0x1007F80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903FBC", Offset = "0x903FBC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1008020", Offset = "0x1008020", VA = "0x1008020")]
	private void KingsprayMongoDB_OnGetArtworkEntriesComplete(List<Dictionary<string, object>> entries)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x10080DC", Offset = "0x10080DC", VA = "0x10080DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904020", Offset = "0x904020")]
	private IEnumerator LoadArtworks()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x100817C", Offset = "0x100817C", VA = "0x100817C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1008180", Offset = "0x1008180", VA = "0x1008180")]
	public Gallery()
	{
	}
}
[Token(Token = "0x2000031")]
public class GameComponents : MonoBehaviour
{
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameComponents _instance;

	[Token(Token = "0x17000007")]
	public static GameComponents Instance
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x1008BE4", Offset = "0x1008BE4", VA = "0x1008BE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1008CB0", Offset = "0x1008CB0", VA = "0x1008CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1008DEC", Offset = "0x1008DEC", VA = "0x1008DEC")]
	private void SceneManager_sceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1008E54", Offset = "0x1008E54", VA = "0x1008E54")]
	private void SceneManager_sceneLoaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1008EEC", Offset = "0x1008EEC", VA = "0x1008EEC")]
	private void SceneManager_activeSceneChanged(Scene arg0, Scene arg1)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1008EF0", Offset = "0x1008EF0", VA = "0x1008EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1008EF4", Offset = "0x1008EF4", VA = "0x1008EF4")]
	public GameComponents()
	{
	}
}
[Token(Token = "0x2000032")]
public class KS_SlidingDoorWheels : MonoBehaviour
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] DoorWheels;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 prevDoorPosition;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 moveDelta;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xEC863C", Offset = "0xEC863C", VA = "0xEC863C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xEC8680", Offset = "0xEC8680", VA = "0xEC8680")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xEC87A4", Offset = "0xEC87A4", VA = "0xEC87A4")]
	private void TurnWheels()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xEC884C", Offset = "0xEC884C", VA = "0xEC884C")]
	public KS_SlidingDoorWheels()
	{
	}
}
[Token(Token = "0x2000033")]
public class SecurityCamera : MonoBehaviour
{
	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB64138", Offset = "0xB64138", VA = "0xB64138")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB6413C", Offset = "0xB6413C", VA = "0xB6413C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB64390", Offset = "0xB64390", VA = "0xB64390")]
	public SecurityCamera()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4734", Offset = "0x8F4734")]
public class Trigger : MonoBehaviour
{
	[Token(Token = "0x20004E3")]
	public delegate void TriggerEvent(GameObject gameObject);

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ColliderSearchString;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent TriggerEnter;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent TriggerExit;

	[Token(Token = "0x14000001")]
	public event TriggerEvent OnTriggerEvent
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xAC845C", Offset = "0xAC845C", VA = "0xAC845C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904084", Offset = "0x904084")]
		add
		{
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xAC8548", Offset = "0xAC8548", VA = "0xAC8548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904094", Offset = "0x904094")]
		remove
		{
		}
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xAC8458", Offset = "0xAC8458", VA = "0xAC8458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xAC8634", Offset = "0xAC8634", VA = "0xAC8634")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xAC86CC", Offset = "0xAC86CC", VA = "0xAC86CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xAC8EC4", Offset = "0xAC8EC4", VA = "0xAC8EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xAC8EC8", Offset = "0xAC8EC8", VA = "0xAC8EC8")]
	public Trigger()
	{
	}
}
[Token(Token = "0x2000035")]
public class HideOnStart : MonoBehaviour
{
	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1012E68", Offset = "0x1012E68", VA = "0x1012E68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1012EE4", Offset = "0x1012EE4", VA = "0x1012EE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1012EE8", Offset = "0x1012EE8", VA = "0x1012EE8")]
	public HideOnStart()
	{
	}
}
[Token(Token = "0x2000036")]
public class ImageCache : MonoBehaviour
{
	[Token(Token = "0x20004E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B34", Offset = "0x8F6B34")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string localFile;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] screenshot_bytes;

		[Token(Token = "0x600290B")]
		[Address(RVA = "0xC61E60", Offset = "0xC61E60", VA = "0xC61E60")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0xC61E68", Offset = "0xC61E68", VA = "0xC61E68")]
		internal void <DownloadImage>b__0()
		{
		}
	}

	[Token(Token = "0x20004E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B44", Offset = "0x8F6B44")]
	private sealed class <DownloadImage>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ImageCache <>4__this;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass10_0 <>8__1;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread <ThumbnailThread>5__3;

		[Token(Token = "0x1700033B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002910")]
			[Address(RVA = "0xC62418", Offset = "0xC62418", VA = "0xC62418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002912")]
			[Address(RVA = "0xC62488", Offset = "0xC62488", VA = "0xC62488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0xC61BE0", Offset = "0xC61BE0", VA = "0xC61BE0")]
		[DebuggerHidden]
		public <DownloadImage>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0xC61E78", Offset = "0xC61E78", VA = "0xC61E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0xC61E7C", Offset = "0xC61E7C", VA = "0xC61E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0xC62420", Offset = "0xC62420", VA = "0xC62420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B54", Offset = "0x8F6B54")]
	private sealed class <Get>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageCache <>4__this;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x1700033D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002916")]
			[Address(RVA = "0xC625F4", Offset = "0xC625F4", VA = "0xC625F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002918")]
			[Address(RVA = "0xC62664", Offset = "0xC62664", VA = "0xC62664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0xC61CA4", Offset = "0xC61CA4", VA = "0xC61CA4")]
		[DebuggerHidden]
		public <Get>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0xC62490", Offset = "0xC62490", VA = "0xC62490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0xC62494", Offset = "0xC62494", VA = "0xC62494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0xC625FC", Offset = "0xC625FC", VA = "0xC625FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string m_CacheFoler;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string m_CacheDataFile;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ImageCache _instance;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> m_CachedItems;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D texture;

	[Token(Token = "0x17000008")]
	public static ImageCache Instance
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xC61598", Offset = "0xC61598", VA = "0xC61598")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xC61668", Offset = "0xC61668", VA = "0xC61668")]
	private void ValidateFiles()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC619B8", Offset = "0xC619B8", VA = "0xC619B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC6180C", Offset = "0xC6180C", VA = "0xC6180C")]
	private void Save()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC61B48", Offset = "0xC61B48", VA = "0xC61B48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9040A4", Offset = "0x9040A4")]
	public IEnumerator DownloadImage(string url)
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xC61C0C", Offset = "0xC61C0C", VA = "0xC61C0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904108", Offset = "0x904108")]
	public IEnumerator Get(string url)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xC61CD0", Offset = "0xC61CD0", VA = "0xC61CD0")]
	public string GetImage(string url)
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xC61AAC", Offset = "0xC61AAC", VA = "0xC61AAC")]
	private void Load()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xC61D80", Offset = "0xC61D80", VA = "0xC61D80")]
	public bool IsImageCached(string imageUrl)
	{
		return default(bool);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xC61DF0", Offset = "0xC61DF0", VA = "0xC61DF0")]
	public ImageCache()
	{
	}
}
[Token(Token = "0x2000037")]
public class JsonTest : MonoBehaviour
{
	[Token(Token = "0x6000111")]
	[Address(RVA = "0xFD8A20", Offset = "0xFD8A20", VA = "0xFD8A20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xFD8C58", Offset = "0xFD8C58", VA = "0xFD8C58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xFD8C5C", Offset = "0xFD8C5C", VA = "0xFD8C5C")]
	public JsonTest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class NetworkMessage
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int PlayerId;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ObjectType;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Parameter;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xC2633C", Offset = "0xC2633C", VA = "0xC2633C")]
	public NetworkMessage()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class DataTest
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string SomeName;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int someInt;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xEED344", Offset = "0xEED344", VA = "0xEED344")]
	public DataTest()
	{
	}
}
[Token(Token = "0x200003A")]
public class KillTrigger : MonoBehaviour
{
	[Token(Token = "0x6000116")]
	[Address(RVA = "0xEC8854", Offset = "0xEC8854", VA = "0xEC8854")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xEC88DC", Offset = "0xEC88DC", VA = "0xEC88DC")]
	public KillTrigger()
	{
	}
}
[Token(Token = "0x200003B")]
public class KSVR_KeyframeAnim : MonoBehaviour
{
	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B64", Offset = "0x8F6B64")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public _AnimationClip animClip;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] bytes;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x6002919")]
		[Address(RVA = "0xC7E5C4", Offset = "0xC7E5C4", VA = "0xC7E5C4")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xC7E5CC", Offset = "0xC7E5CC", VA = "0xC7E5CC")]
		internal void <LoadAsync>b__0()
		{
		}
	}

	[Token(Token = "0x20004E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B74", Offset = "0x8F6B74")]
	private sealed class <LoadAsync>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass20_0 <>8__1;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KSVR_KeyframeAnim <>4__this;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x1700033F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600291E")]
			[Address(RVA = "0xC7FB58", Offset = "0xC7FB58", VA = "0xC7FB58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002920")]
			[Address(RVA = "0xC7FBC8", Offset = "0xC7FBC8", VA = "0xC7FBC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0xC7D890", Offset = "0xC7D890", VA = "0xC7D890")]
		[DebuggerHidden]
		public <LoadAsync>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xC7E650", Offset = "0xC7E650", VA = "0xC7E650", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0xC7E654", Offset = "0xC7E654", VA = "0xC7E654", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0xC7FB60", Offset = "0xC7FB60", VA = "0xC7FB60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B84", Offset = "0x8F6B84")]
	private sealed class <SaveAsync>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_KeyframeAnim <>4__this;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <tempfile>5__2;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002924")]
			[Address(RVA = "0xC7FE54", Offset = "0xC7FE54", VA = "0xC7FE54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002926")]
			[Address(RVA = "0xC7FEC4", Offset = "0xC7FEC4", VA = "0xC7FEC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0xC7DBF8", Offset = "0xC7DBF8", VA = "0xC7DBF8")]
		[DebuggerHidden]
		public <SaveAsync>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0xC7FBD0", Offset = "0xC7FBD0", VA = "0xC7FBD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0xC7FBD4", Offset = "0xC7FBD4", VA = "0xC7FBD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0xC7FE5C", Offset = "0xC7FE5C", VA = "0xC7FE5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B94", Offset = "0x8F6B94")]
	private sealed class <SetTime>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_KeyframeAnim <>4__this;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600292A")]
			[Address(RVA = "0xC80340", Offset = "0xC80340", VA = "0xC80340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0xC803B0", Offset = "0xC803B0", VA = "0xC803B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xC7E17C", Offset = "0xC7E17C", VA = "0xC7E17C")]
		[DebuggerHidden]
		public <SetTime>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0xC7FECC", Offset = "0xC7FECC", VA = "0xC7FECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0xC7FED0", Offset = "0xC7FED0", VA = "0xC7FED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0xC80348", Offset = "0xC80348", VA = "0xC80348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AnimationCurve xPosCurve;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationCurve yPosCurve;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimationCurve zPosCurve;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnimationCurve xRotCurve;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AnimationCurve yRotCurve;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve zRotCurve;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationCurve wRotCurve;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve fovCurve;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera Cam;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8790", Offset = "0x8F8790")]
	private float <m_Time>k__BackingField;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float AnimDuration;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Keyframe> keyframeTest;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animation anim;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimationClip clip;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<AnimationCurve> Curves;

	[Token(Token = "0x17000009")]
	public float m_Time
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0xC7BE24", Offset = "0xC7BE24", VA = "0xC7BE24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90416C", Offset = "0x90416C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0xC7BE2C", Offset = "0xC7BE2C", VA = "0xC7BE2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90417C", Offset = "0x90417C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xC7E0CC", Offset = "0xC7E0CC", VA = "0xC7E0CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000B")]
	public float NormalizedTime
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xC7E0FC", Offset = "0xC7E0FC", VA = "0xC7E0FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xC7BE34", Offset = "0xC7BE34", VA = "0xC7BE34")]
	public void DeleteKey()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xC7C3D8", Offset = "0xC7C3D8", VA = "0xC7C3D8")]
	public void AddKey(float time)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC7C8A0", Offset = "0xC7C8A0", VA = "0xC7C8A0")]
	private _AnimationClip GetAnimationClip()
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC7D680", Offset = "0xC7D680", VA = "0xC7D680")]
	public List<float> GetKeyframeTimes()
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC7D7C8", Offset = "0xC7D7C8", VA = "0xC7D7C8")]
	public void Load()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC7D81C", Offset = "0xC7D81C", VA = "0xC7D81C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90418C", Offset = "0x90418C")]
	public IEnumerator LoadAsync(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC7D8BC", Offset = "0xC7D8BC", VA = "0xC7D8BC")]
	public void New()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC7DB58", Offset = "0xC7DB58", VA = "0xC7DB58")]
	public void Save()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC7DB84", Offset = "0xC7DB84", VA = "0xC7DB84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9041F0", Offset = "0x9041F0")]
	private IEnumerator SaveAsync()
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC7DC24", Offset = "0xC7DC24", VA = "0xC7DC24")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC7C110", Offset = "0xC7C110", VA = "0xC7C110")]
	public void RefreshCurves()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC7DCB8", Offset = "0xC7DCB8", VA = "0xC7DCB8")]
	public void NextKeyframe()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC7BE88", Offset = "0xC7BE88", VA = "0xC7BE88")]
	private void ReplaceKey()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xC7DEA0", Offset = "0xC7DEA0", VA = "0xC7DEA0")]
	public void PrevKeyframe()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xC7E008", Offset = "0xC7E008", VA = "0xC7E008")]
	public void Play()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xC7DDFC", Offset = "0xC7DDFC", VA = "0xC7DDFC")]
	public float GetNormalizedTime(float time)
	{
		return default(float);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC7DE08", Offset = "0xC7DE08", VA = "0xC7DE08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904254", Offset = "0x904254")]
	public IEnumerator SetTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xC7E1A8", Offset = "0xC7E1A8", VA = "0xC7E1A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xC7E40C", Offset = "0xC7E40C", VA = "0xC7E40C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xC7E454", Offset = "0xC7E454", VA = "0xC7E454")]
	public KSVR_KeyframeAnim()
	{
	}
}
[Token(Token = "0x200003C")]
public class KSVR_RecordNode : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string RelativePath;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationCurve xPosCurve;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimationCurve yPosCurve;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnimationCurve zPosCurve;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AnimationCurve xRotCurve;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve yRotCurve;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationCurve zRotCurve;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve wRotCurve;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_LastPosition;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float posKeyDistance;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float rotKeyDistance;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animation anim;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimationClip clip;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float lastXPos;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float lastYPos;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastZPos;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float lastXRot;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastYRot;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lastZRot;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float lastWRot;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool IsLocalTransform;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xC88818", Offset = "0xC88818", VA = "0xC88818")]
	public void Load(_AnimationClip animClip)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xC89880", Offset = "0xC89880", VA = "0xC89880")]
	public void Play()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xC898D0", Offset = "0xC898D0", VA = "0xC898D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xC89A18", Offset = "0xC89A18", VA = "0xC89A18")]
	public void AddKey(float time)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xC8A084", Offset = "0xC8A084", VA = "0xC8A084")]
	public _AnimationClip GetTransformAnim()
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xC8ACD8", Offset = "0xC8ACD8", VA = "0xC8ACD8")]
	public KSVR_RecordNode()
	{
	}
}
[Token(Token = "0x200003D")]
public class RecordTutorialDude : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Head;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LHand;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RHand;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Root;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB5B214", Offset = "0xB5B214", VA = "0xB5B214")]
	private void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB5B218", Offset = "0xB5B218", VA = "0xB5B218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB5B750", Offset = "0xB5B750", VA = "0xB5B750")]
	public RecordTutorialDude()
	{
	}
}
[Token(Token = "0x200003E")]
public class KS_ArmModel : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform HMDCam;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform HandTfm;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 NeckShoulderElbowLength;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform IntentionTfm;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform additionalTfm;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 intentionDirection;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private Vector3 handOffset;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 HandCursorLoc;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 NeckTFM;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 ShoulderTfm;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 ElbowTfm;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC8E4D8", Offset = "0xC8E4D8", VA = "0xC8E4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC8E4DC", Offset = "0xC8E4DC", VA = "0xC8E4DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC8ED20", Offset = "0xC8ED20", VA = "0xC8ED20")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC8EF3C", Offset = "0xC8EF3C", VA = "0xC8EF3C")]
	public KS_ArmModel()
	{
	}
}
[Token(Token = "0x200003F")]
public class KSVR_Controller_Base : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_IsPrimary;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private KSVR_Hand m_Hand;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool m_VibrationEnabled;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xFDA674", Offset = "0xFDA674", VA = "0xFDA674")]
	public KSVR_Hand GetHand()
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xFDA708", Offset = "0xFDA708", VA = "0xFDA708", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xFDA798", Offset = "0xFDA798", VA = "0xFDA798")]
	public static void ToggleVibration()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xFDA808", Offset = "0xFDA808", VA = "0xFDA808", Slot = "5")]
	public virtual bool MenuButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xFDA810", Offset = "0xFDA810", VA = "0xFDA810", Slot = "6")]
	public virtual bool MenuButtonReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xFDA818", Offset = "0xFDA818", VA = "0xFDA818", Slot = "7")]
	public virtual bool MenuButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xFDA820", Offset = "0xFDA820", VA = "0xFDA820", Slot = "8")]
	public virtual bool ButtonOnePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xFDA828", Offset = "0xFDA828", VA = "0xFDA828", Slot = "9")]
	public virtual bool ButtonOneReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xFDA830", Offset = "0xFDA830", VA = "0xFDA830", Slot = "10")]
	public virtual bool ButtonOneDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xFDA838", Offset = "0xFDA838", VA = "0xFDA838", Slot = "11")]
	public virtual bool ButtonTwoDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xFDA840", Offset = "0xFDA840", VA = "0xFDA840", Slot = "12")]
	public virtual bool ButtonTwoPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xFDA848", Offset = "0xFDA848", VA = "0xFDA848", Slot = "13")]
	public virtual bool ButtonTwoReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xFDA850", Offset = "0xFDA850", VA = "0xFDA850", Slot = "14")]
	public virtual bool ButtonMenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xFDA858", Offset = "0xFDA858", VA = "0xFDA858", Slot = "15")]
	public virtual bool ButtonMenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xFDA860", Offset = "0xFDA860", VA = "0xFDA860", Slot = "16")]
	public virtual bool ButtonMenuReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xFDA868", Offset = "0xFDA868", VA = "0xFDA868", Slot = "17")]
	public virtual bool ButtonThreeDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xFDA870", Offset = "0xFDA870", VA = "0xFDA870", Slot = "18")]
	public virtual bool ButtonThreeReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xFDA878", Offset = "0xFDA878", VA = "0xFDA878", Slot = "19")]
	public virtual bool ButtonThreePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xFDA880", Offset = "0xFDA880", VA = "0xFDA880", Slot = "20")]
	public virtual bool ButtonFourDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xFDA888", Offset = "0xFDA888", VA = "0xFDA888", Slot = "21")]
	public virtual bool ButtonFourPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xFDA890", Offset = "0xFDA890", VA = "0xFDA890", Slot = "22")]
	public virtual bool ButtonFourReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xFDA898", Offset = "0xFDA898", VA = "0xFDA898", Slot = "23")]
	public virtual bool TriggerOnePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xFDA8A0", Offset = "0xFDA8A0", VA = "0xFDA8A0", Slot = "24")]
	public virtual bool TriggerOneReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xFDA8A8", Offset = "0xFDA8A8", VA = "0xFDA8A8", Slot = "25")]
	public virtual bool TriggerOneDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xFDA8B0", Offset = "0xFDA8B0", VA = "0xFDA8B0", Slot = "26")]
	public virtual float TriggerOneValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xFDA8B8", Offset = "0xFDA8B8", VA = "0xFDA8B8", Slot = "27")]
	public virtual Vector2 ThumbstickValue()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xFDA918", Offset = "0xFDA918", VA = "0xFDA918", Slot = "28")]
	public virtual bool ThumbstickRightPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xFDA920", Offset = "0xFDA920", VA = "0xFDA920", Slot = "29")]
	public virtual bool ThumbstickRightDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xFDA928", Offset = "0xFDA928", VA = "0xFDA928", Slot = "30")]
	public virtual bool ThumbstickRightReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xFDA930", Offset = "0xFDA930", VA = "0xFDA930", Slot = "31")]
	public virtual bool ThumbstickButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xFDA938", Offset = "0xFDA938", VA = "0xFDA938", Slot = "32")]
	public virtual bool TriggerTwoPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xFDA940", Offset = "0xFDA940", VA = "0xFDA940", Slot = "33")]
	public virtual bool TriggerTwoReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xFDA948", Offset = "0xFDA948", VA = "0xFDA948", Slot = "34")]
	public virtual bool TriggerTwoDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xFDA950", Offset = "0xFDA950", VA = "0xFDA950", Slot = "35")]
	public virtual float TriggerTwoValue()
	{
		return default(float);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xFDA958", Offset = "0xFDA958", VA = "0xFDA958", Slot = "36")]
	public virtual bool ThumbstickDirDownDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xFDA960", Offset = "0xFDA960", VA = "0xFDA960", Slot = "37")]
	public virtual bool ThumbstickDirDownPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xFDA968", Offset = "0xFDA968", VA = "0xFDA968", Slot = "38")]
	public virtual bool ThumbstickDirDownReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xFDA970", Offset = "0xFDA970", VA = "0xFDA970", Slot = "39")]
	public virtual bool ThumbstickDirUpDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xFDA978", Offset = "0xFDA978", VA = "0xFDA978", Slot = "40")]
	public virtual bool ThumbstickDirUpPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xFDA980", Offset = "0xFDA980", VA = "0xFDA980", Slot = "41")]
	public virtual bool ThumbstickDirUpReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xFDA988", Offset = "0xFDA988", VA = "0xFDA988", Slot = "42")]
	public virtual Vector3 GetLinearVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xFDA9E8", Offset = "0xFDA9E8", VA = "0xFDA9E8", Slot = "43")]
	public virtual Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xFDAA48", Offset = "0xFDAA48", VA = "0xFDAA48", Slot = "44")]
	public virtual void Vibrate(float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xFDAA4C", Offset = "0xFDAA4C", VA = "0xFDAA4C")]
	public static KSVR_Controller_Base GetOppositeController(KSVR_Controller_Base controller)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xFDAB08", Offset = "0xFDAB08", VA = "0xFDAB08")]
	public static KSVR_Controller_Base GetControllerInParent(Transform transform, bool opposite = false)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xFDAD04", Offset = "0xFDAD04", VA = "0xFDAD04")]
	public static KSVR_Controller_Base GetController(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xFDAE14", Offset = "0xFDAE14", VA = "0xFDAE14")]
	private static KSVR_Controller_Base RecurseUpwardsForController(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xFDAF68", Offset = "0xFDAF68", VA = "0xFDAF68")]
	public KSVR_Controller_Base()
	{
	}
}
[Token(Token = "0x2000040")]
public class KSVR_Controller_Oculus : KSVR_Controller_Base
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Controller OVRController;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool UseOldQuestControllers;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xFDAFCC", Offset = "0xFDAFCC", VA = "0xFDAFCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xFDAFF0", Offset = "0xFDAFF0", VA = "0xFDAFF0", Slot = "10")]
	public override bool ButtonOneDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xFDB060", Offset = "0xFDB060", VA = "0xFDB060", Slot = "8")]
	public override bool ButtonOnePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xFDB0D0", Offset = "0xFDB0D0", VA = "0xFDB0D0", Slot = "9")]
	public override bool ButtonOneReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xFDB140", Offset = "0xFDB140", VA = "0xFDB140", Slot = "11")]
	public override bool ButtonTwoDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xFDB1B0", Offset = "0xFDB1B0", VA = "0xFDB1B0", Slot = "12")]
	public override bool ButtonTwoPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xFDB220", Offset = "0xFDB220", VA = "0xFDB220", Slot = "13")]
	public override bool ButtonTwoReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xFDB290", Offset = "0xFDB290", VA = "0xFDB290", Slot = "14")]
	public override bool ButtonMenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xFDB300", Offset = "0xFDB300", VA = "0xFDB300", Slot = "15")]
	public override bool ButtonMenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xFDB370", Offset = "0xFDB370", VA = "0xFDB370", Slot = "16")]
	public override bool ButtonMenuReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xFDB3E0", Offset = "0xFDB3E0", VA = "0xFDB3E0", Slot = "25")]
	public override bool TriggerOneDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xFDB450", Offset = "0xFDB450", VA = "0xFDB450", Slot = "23")]
	public override bool TriggerOnePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xFDB4C0", Offset = "0xFDB4C0", VA = "0xFDB4C0", Slot = "24")]
	public override bool TriggerOneReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xFDB530", Offset = "0xFDB530", VA = "0xFDB530", Slot = "26")]
	public override float TriggerOneValue()
	{
		return default(float);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xFDB5A0", Offset = "0xFDB5A0", VA = "0xFDB5A0", Slot = "34")]
	public override bool TriggerTwoDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xFDB610", Offset = "0xFDB610", VA = "0xFDB610", Slot = "32")]
	public override bool TriggerTwoPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xFDB680", Offset = "0xFDB680", VA = "0xFDB680", Slot = "33")]
	public override bool TriggerTwoReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xFDB6F0", Offset = "0xFDB6F0", VA = "0xFDB6F0", Slot = "35")]
	public override float TriggerTwoValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xFDB760", Offset = "0xFDB760", VA = "0xFDB760", Slot = "42")]
	public override Vector3 GetLinearVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xFDB7CC", Offset = "0xFDB7CC", VA = "0xFDB7CC", Slot = "43")]
	public override Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xFDB838", Offset = "0xFDB838", VA = "0xFDB838", Slot = "27")]
	public override Vector2 ThumbstickValue()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xFDB8A8", Offset = "0xFDB8A8", VA = "0xFDB8A8", Slot = "29")]
	public override bool ThumbstickRightDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xFDB918", Offset = "0xFDB918", VA = "0xFDB918", Slot = "30")]
	public override bool ThumbstickRightReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xFDB988", Offset = "0xFDB988", VA = "0xFDB988", Slot = "28")]
	public override bool ThumbstickRightPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xFDB9F8", Offset = "0xFDB9F8", VA = "0xFDB9F8", Slot = "31")]
	public override bool ThumbstickButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xFDBA68", Offset = "0xFDBA68", VA = "0xFDBA68", Slot = "36")]
	public override bool ThumbstickDirDownDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xFDBAD8", Offset = "0xFDBAD8", VA = "0xFDBAD8", Slot = "37")]
	public override bool ThumbstickDirDownPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xFDBB48", Offset = "0xFDBB48", VA = "0xFDBB48", Slot = "38")]
	public override bool ThumbstickDirDownReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xFDBBB8", Offset = "0xFDBBB8", VA = "0xFDBBB8", Slot = "39")]
	public override bool ThumbstickDirUpDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xFDBC28", Offset = "0xFDBC28", VA = "0xFDBC28", Slot = "40")]
	public override bool ThumbstickDirUpPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xFDBC98", Offset = "0xFDBC98", VA = "0xFDBC98", Slot = "41")]
	public override bool ThumbstickDirUpReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xFDBD08", Offset = "0xFDBD08", VA = "0xFDBD08", Slot = "44")]
	public override void Vibrate(float frequency, float amplitide)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xFDBDCC", Offset = "0xFDBDCC", VA = "0xFDBDCC")]
	public KSVR_Controller_Oculus()
	{
	}
}
[Token(Token = "0x2000041")]
public class KSVR_Controller_PC : KSVR_Controller_Base
{
	[Token(Token = "0x600018F")]
	[Address(RVA = "0xFDBE3C", Offset = "0xFDBE3C", VA = "0xFDBE3C", Slot = "5")]
	public override bool MenuButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xFDBE48", Offset = "0xFDBE48", VA = "0xFDBE48", Slot = "6")]
	public override bool MenuButtonReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xFDBE54", Offset = "0xFDBE54", VA = "0xFDBE54", Slot = "7")]
	public override bool MenuButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xFDBE60", Offset = "0xFDBE60", VA = "0xFDBE60", Slot = "8")]
	public override bool ButtonOnePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xFDBE68", Offset = "0xFDBE68", VA = "0xFDBE68", Slot = "9")]
	public override bool ButtonOneReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xFDBE70", Offset = "0xFDBE70", VA = "0xFDBE70", Slot = "10")]
	public override bool ButtonOneDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xFDBE78", Offset = "0xFDBE78", VA = "0xFDBE78", Slot = "23")]
	public override bool TriggerOnePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xFDBE84", Offset = "0xFDBE84", VA = "0xFDBE84", Slot = "24")]
	public override bool TriggerOneReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xFDBE90", Offset = "0xFDBE90", VA = "0xFDBE90", Slot = "25")]
	public override bool TriggerOneDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xFDBE9C", Offset = "0xFDBE9C", VA = "0xFDBE9C", Slot = "11")]
	public override bool ButtonTwoDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xFDBEA4", Offset = "0xFDBEA4", VA = "0xFDBEA4", Slot = "17")]
	public override bool ButtonThreeDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xFDBEAC", Offset = "0xFDBEAC", VA = "0xFDBEAC", Slot = "18")]
	public override bool ButtonThreeReleased()
	{
		return default(bool);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xFDBEB4", Offset = "0xFDBEB4", VA = "0xFDBEB4", Slot = "20")]
	public override bool ButtonFourDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xFDBEBC", Offset = "0xFDBEBC", VA = "0xFDBEBC", Slot = "26")]
	public override float TriggerOneValue()
	{
		return default(float);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xFDBEE8", Offset = "0xFDBEE8", VA = "0xFDBEE8", Slot = "35")]
	public override float TriggerTwoValue()
	{
		return default(float);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xFDBEF0", Offset = "0xFDBEF0", VA = "0xFDBEF0", Slot = "44")]
	public override void Vibrate(float frequency, float amplitude)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xFDBEF4", Offset = "0xFDBEF4", VA = "0xFDBEF4")]
	public KSVR_Controller_PC()
	{
	}
}
[Token(Token = "0x2000042")]
public abstract class KSVR_IO : MonoBehaviour
{
	[Token(Token = "0x20004EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BA4", Offset = "0x8F6BA4")]
	private sealed class <GetOnlineTexture>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0xFE1380", Offset = "0xFE1380", VA = "0xFE1380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0xFE13F0", Offset = "0xFE13F0", VA = "0xFE13F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0xFDF37C", Offset = "0xFDF37C", VA = "0xFDF37C")]
		[DebuggerHidden]
		public <GetOnlineTexture>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0xFE1340", Offset = "0xFE1340", VA = "0xFE1340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0xFE1344", Offset = "0xFE1344", VA = "0xFE1344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0xFE1388", Offset = "0xFE1388", VA = "0xFE1388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BB4", Offset = "0x8F6BB4")]
	private sealed class <NewAsync>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002936")]
			[Address(RVA = "0xC72A94", Offset = "0xC72A94", VA = "0xC72A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0xC72B04", Offset = "0xC72B04", VA = "0xC72B04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xC72A28", Offset = "0xC72A28", VA = "0xC72A28")]
		[DebuggerHidden]
		public <NewAsync>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0xC72A54", Offset = "0xC72A54", VA = "0xC72A54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0xC72A58", Offset = "0xC72A58", VA = "0xC72A58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0xC72A9C", Offset = "0xC72A9C", VA = "0xC72A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BC4", Offset = "0x8F6BC4")]
	private sealed class <LoadTextureIntoUIImage>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000349")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600293C")]
			[Address(RVA = "0xC729B0", Offset = "0xC729B0", VA = "0xC729B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600293E")]
			[Address(RVA = "0xC72A20", Offset = "0xC72A20", VA = "0xC72A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xC728E4", Offset = "0xC728E4", VA = "0xC728E4")]
		[DebuggerHidden]
		public <LoadTextureIntoUIImage>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0xC72910", Offset = "0xC72910", VA = "0xC72910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0xC72914", Offset = "0xC72914", VA = "0xC72914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0xC729B8", Offset = "0xC729B8", VA = "0xC729B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BD4", Offset = "0x8F6BD4")]
	private sealed class <LoadPaintTextureUrlAsync>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700034B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002942")]
			[Address(RVA = "0xC72788", Offset = "0xC72788", VA = "0xC72788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002944")]
			[Address(RVA = "0xC727F8", Offset = "0xC727F8", VA = "0xC727F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0xC726B8", Offset = "0xC726B8", VA = "0xC726B8")]
		[DebuggerHidden]
		public <LoadPaintTextureUrlAsync>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0xC726E4", Offset = "0xC726E4", VA = "0xC726E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0xC726E8", Offset = "0xC726E8", VA = "0xC726E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0xC72790", Offset = "0xC72790", VA = "0xC72790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BE4", Offset = "0x8F6BE4")]
	private sealed class <LoadPaintTextureAsync>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700034D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002948")]
			[Address(RVA = "0xC72640", Offset = "0xC72640", VA = "0xC72640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600294A")]
			[Address(RVA = "0xC726B0", Offset = "0xC726B0", VA = "0xC726B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xC72570", Offset = "0xC72570", VA = "0xC72570")]
		[DebuggerHidden]
		public <LoadPaintTextureAsync>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xC7259C", Offset = "0xC7259C", VA = "0xC7259C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xC725A0", Offset = "0xC725A0", VA = "0xC725A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0xC72648", Offset = "0xC72648", VA = "0xC72648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BF4", Offset = "0x8F6BF4")]
	private sealed class <LoadApePaintTextureAsync>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700034F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600294E")]
			[Address(RVA = "0xFE149C", Offset = "0xFE149C", VA = "0xFE149C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002950")]
			[Address(RVA = "0xFE150C", Offset = "0xFE150C", VA = "0xFE150C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xFDF598", Offset = "0xFDF598", VA = "0xFDF598")]
		[DebuggerHidden]
		public <LoadApePaintTextureAsync>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0xFE13F8", Offset = "0xFE13F8", VA = "0xFE13F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0xFE13FC", Offset = "0xFE13FC", VA = "0xFE13FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0xFE14A4", Offset = "0xFE14A4", VA = "0xFE14A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C04", Offset = "0x8F6C04")]
	private sealed class <SavePaintTextures>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000351")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002954")]
			[Address(RVA = "0xC72C5C", Offset = "0xC72C5C", VA = "0xC72C5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002956")]
			[Address(RVA = "0xC72CCC", Offset = "0xC72CCC", VA = "0xC72CCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0xC72BF0", Offset = "0xC72BF0", VA = "0xC72BF0")]
		[DebuggerHidden]
		public <SavePaintTextures>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xC72C1C", Offset = "0xC72C1C", VA = "0xC72C1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0xC72C20", Offset = "0xC72C20", VA = "0xC72C20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xC72C64", Offset = "0xC72C64", VA = "0xC72C64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C14", Offset = "0x8F6C14")]
	private sealed class <SaveAsync>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000353")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600295A")]
			[Address(RVA = "0xC72B78", Offset = "0xC72B78", VA = "0xC72B78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600295C")]
			[Address(RVA = "0xC72BE8", Offset = "0xC72BE8", VA = "0xC72BE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xC72B0C", Offset = "0xC72B0C", VA = "0xC72B0C")]
		[DebuggerHidden]
		public <SaveAsync>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xC72B38", Offset = "0xC72B38", VA = "0xC72B38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xC72B3C", Offset = "0xC72B3C", VA = "0xC72B3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xC72B80", Offset = "0xC72B80", VA = "0xC72B80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C24", Offset = "0x8F6C24")]
	private sealed class <LoadAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000355")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002960")]
			[Address(RVA = "0xC724F8", Offset = "0xC724F8", VA = "0xC724F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002962")]
			[Address(RVA = "0xC72568", Offset = "0xC72568", VA = "0xC72568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xC7248C", Offset = "0xC7248C", VA = "0xC7248C")]
		[DebuggerHidden]
		public <LoadAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xC724B8", Offset = "0xC724B8", VA = "0xC724B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xC724BC", Offset = "0xC724BC", VA = "0xC724BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xC72500", Offset = "0xC72500", VA = "0xC72500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C34", Offset = "0x8F6C34")]
	private sealed class <LoadPaintTextures>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000357")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0xC7286C", Offset = "0xC7286C", VA = "0xC7286C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002968")]
			[Address(RVA = "0xC728DC", Offset = "0xC728DC", VA = "0xC728DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xC72800", Offset = "0xC72800", VA = "0xC72800")]
		[DebuggerHidden]
		public <LoadPaintTextures>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xC7282C", Offset = "0xC7282C", VA = "0xC7282C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xC72830", Offset = "0xC72830", VA = "0xC72830", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0xC72874", Offset = "0xC72874", VA = "0xC72874", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C44", Offset = "0x8F6C44")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaintTexture pt;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string paintFileName;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string maskFileName;

		[Token(Token = "0x6002969")]
		[Address(RVA = "0xFDFA00", Offset = "0xFDFA00", VA = "0xFDFA00")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0xFDFA08", Offset = "0xFDFA08", VA = "0xFDFA08")]
		internal void <SaveTexturesWithoutDrawingSupport>b__0()
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0xFDFE1C", Offset = "0xFDFE1C", VA = "0xFDFE1C")]
		internal void <SaveTexturesWithoutDrawingSupport>b__1()
		{
		}
	}

	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C54", Offset = "0x8F6C54")]
	private sealed class <SaveTexturesWithoutDrawingSupport>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintTexture pt;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string paintFileName;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string maskFileName;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass24_0 <>8__1;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread <PngPaintThread>5__2;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread <PngMaskThread>5__3;

		[Token(Token = "0x17000359")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600296F")]
			[Address(RVA = "0xC73314", Offset = "0xC73314", VA = "0xC73314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002971")]
			[Address(RVA = "0xC73384", Offset = "0xC73384", VA = "0xC73384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0xC72FBC", Offset = "0xC72FBC", VA = "0xC72FBC")]
		[DebuggerHidden]
		public <SaveTexturesWithoutDrawingSupport>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0xC72FE8", Offset = "0xC72FE8", VA = "0xC72FE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0xC72FEC", Offset = "0xC72FEC", VA = "0xC72FEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0xC7331C", Offset = "0xC7331C", VA = "0xC7331C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C64", Offset = "0x8F6C64")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int targetWidth;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int targetHeight;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaintTexture pt;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string paintFileName;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string maskFileName;

		[Token(Token = "0x6002972")]
		[Address(RVA = "0xFE01E8", Offset = "0xFE01E8", VA = "0xFE01E8")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0xFE01F0", Offset = "0xFE01F0", VA = "0xFE01F0")]
		internal void <SaveTexturesWithoutDrawingSupport>b__0()
		{
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0xFE064C", Offset = "0xFE064C", VA = "0xFE064C")]
		internal void <SaveTexturesWithoutDrawingSupport>b__1()
		{
		}
	}

	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C74", Offset = "0x8F6C74")]
	private sealed class <SaveTexturesWithoutDrawingSupport>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintTexture pt;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string paintFileName;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string maskFileName;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int newWidth;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int newHeight;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass25_0 <>8__1;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread <PngPaintThread>5__2;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread <PngMaskThread>5__3;

		[Token(Token = "0x1700035B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002978")]
			[Address(RVA = "0xC73770", Offset = "0xC73770", VA = "0xC73770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600297A")]
			[Address(RVA = "0xC737E0", Offset = "0xC737E0", VA = "0xC737E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0xC7338C", Offset = "0xC7338C", VA = "0xC7338C")]
		[DebuggerHidden]
		public <SaveTexturesWithoutDrawingSupport>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0xC733B8", Offset = "0xC733B8", VA = "0xC733B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xC733BC", Offset = "0xC733BC", VA = "0xC733BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xC73778", Offset = "0xC73778", VA = "0xC73778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C84", Offset = "0x8F6C84")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PaintTexture pt;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string paintFileName;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string maskFileName;

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xFE0A68", Offset = "0xFE0A68", VA = "0xFE0A68")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0xFE0A70", Offset = "0xFE0A70", VA = "0xFE0A70")]
		internal void <SaveTexturesWithDrawingSupport>b__0()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xFE0E64", Offset = "0xFE0E64", VA = "0xFE0E64")]
		internal void <SaveTexturesWithDrawingSupport>b__1()
		{
		}
	}

	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C94", Offset = "0x8F6C94")]
	private sealed class <SaveTexturesWithDrawingSupport>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintTexture pt;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string paintFileName;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string maskFileName;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Thread <paintThread>5__2;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread <maskThread>5__3;

		[Token(Token = "0x1700035D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002981")]
			[Address(RVA = "0xC72F44", Offset = "0xC72F44", VA = "0xC72F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0xC72FB4", Offset = "0xC72FB4", VA = "0xC72FB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xC72CD4", Offset = "0xC72CD4", VA = "0xC72CD4")]
		[DebuggerHidden]
		public <SaveTexturesWithDrawingSupport>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0xC72D00", Offset = "0xC72D00", VA = "0xC72D00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xC72D04", Offset = "0xC72D04", VA = "0xC72D04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0xC72F4C", Offset = "0xC72F4C", VA = "0xC72F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KSVR_IO _instance;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string Scene;

	[Token(Token = "0x1700000C")]
	public static KSVR_IO Instance
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xFDF1A8", Offset = "0xFDF1A8", VA = "0xFDF1A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xFDF2C8", Offset = "0xFDF2C8", VA = "0xFDF2C8", Slot = "4")]
	public virtual void TakeAndroidScreenshot(Camera camera)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xFDF2CC", Offset = "0xFDF2CC", VA = "0xFDF2CC", Slot = "5")]
	public virtual string BundlePath()
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xFDF314", Offset = "0xFDF314", VA = "0xFDF314", Slot = "6")]
	public virtual List<string> GetSaves(bool latest = true, [Optional] List<string> ValidLevelNames, [Optional] string ScenePath)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xFDF31C", Offset = "0xFDF31C", VA = "0xFDF31C", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9042B8", Offset = "0x9042B8")]
	public virtual IEnumerator GetOnlineTexture(string url)
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xFDF3A8", Offset = "0xFDF3A8", VA = "0xFDF3A8", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90431C", Offset = "0x90431C")]
	public virtual IEnumerator NewAsync(bool showUI = true)
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xFDF408", Offset = "0xFDF408", VA = "0xFDF408", Slot = "9")]
	public virtual void LoadTextureIntoImage(string filename, Image image)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xFDF40C", Offset = "0xFDF40C", VA = "0xFDF40C", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904380", Offset = "0x904380")]
	public virtual IEnumerator LoadTextureIntoUIImage(string filename, Image image)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xFDF46C", Offset = "0xFDF46C", VA = "0xFDF46C", Slot = "11")]
	public virtual void New()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xFDF470", Offset = "0xFDF470", VA = "0xFDF470", Slot = "12")]
	public virtual Texture2D LoadTexture(string path)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xFDF478", Offset = "0xFDF478", VA = "0xFDF478", Slot = "13")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9043E4", Offset = "0x9043E4")]
	public virtual IEnumerator LoadPaintTextureUrlAsync(PaintTexture pt, string url, bool isMask = false)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xFDF4D8", Offset = "0xFDF4D8", VA = "0xFDF4D8", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904448", Offset = "0x904448")]
	public virtual IEnumerator LoadPaintTextureAsync(PaintTexture pt, string path, bool isMask = false)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xFDF538", Offset = "0xFDF538", VA = "0xFDF538", Slot = "15")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9044AC", Offset = "0x9044AC")]
	public virtual IEnumerator LoadApePaintTextureAsync(PaintTexture pt, string path, bool isMask = false)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xFDF5C4", Offset = "0xFDF5C4", VA = "0xFDF5C4", Slot = "16")]
	public virtual List<string> GetAllArtwork([Optional] string path)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xFDF5CC", Offset = "0xFDF5CC", VA = "0xFDF5CC", Slot = "17")]
	public virtual void Save(Camera screenshotCamera)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xFDF5D0", Offset = "0xFDF5D0", VA = "0xFDF5D0", Slot = "18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904510", Offset = "0x904510")]
	public virtual IEnumerator SavePaintTextures(string folder)
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xFDF630", Offset = "0xFDF630", VA = "0xFDF630", Slot = "19")]
	public virtual void SaveWithTimer(Camera screenshotCamera)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xFDF634", Offset = "0xFDF634", VA = "0xFDF634", Slot = "20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904574", Offset = "0x904574")]
	public virtual IEnumerator SaveAsync(Camera screenshotCamera)
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xFDF694", Offset = "0xFDF694", VA = "0xFDF694", Slot = "21")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9045D8", Offset = "0x9045D8")]
	public virtual IEnumerator LoadAsync(string filepath)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xFDF6F4", Offset = "0xFDF6F4", VA = "0xFDF6F4", Slot = "22")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90463C", Offset = "0x90463C")]
	public virtual IEnumerator LoadPaintTextures(string folder)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xFDF754", Offset = "0xFDF754", VA = "0xFDF754", Slot = "23")]
	public virtual void Load(string name)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xFDF758", Offset = "0xFDF758", VA = "0xFDF758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9046A0", Offset = "0x9046A0")]
	public IEnumerator SaveTexturesWithoutDrawingSupport(PaintTexture pt, string paintFileName, string maskFileName)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xFDF804", Offset = "0xFDF804", VA = "0xFDF804")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904704", Offset = "0x904704")]
	public IEnumerator SaveTexturesWithoutDrawingSupport(PaintTexture pt, string paintFileName, string maskFileName, int newWidth, int newHeight)
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xFDF8E8", Offset = "0xFDF8E8", VA = "0xFDF8E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904768", Offset = "0x904768")]
	public IEnumerator SaveTexturesWithDrawingSupport(PaintTexture pt, string paintFileName, string maskFileName)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xFDF994", Offset = "0xFDF994", VA = "0xFDF994")]
	protected KSVR_IO()
	{
	}
}
[Token(Token = "0x2000043")]
public class KSVR_IO_Android : KSVR_IO
{
	[Token(Token = "0x20004FB")]
	public delegate void SaveEvent(string folderPath);

	[Token(Token = "0x20004FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CA4", Offset = "0x8F6CA4")]
	private sealed class <GetOnlineTexture>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <w>5__2;

		[Token(Token = "0x1700035F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0xC76514", Offset = "0xC76514", VA = "0xC76514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600298D")]
			[Address(RVA = "0xC76584", Offset = "0xC76584", VA = "0xC76584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0xC74704", Offset = "0xC74704", VA = "0xC74704")]
		[DebuggerHidden]
		public <GetOnlineTexture>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0xC76354", Offset = "0xC76354", VA = "0xC76354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0xC76358", Offset = "0xC76358", VA = "0xC76358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0xC7651C", Offset = "0xC7651C", VA = "0xC7651C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CB4", Offset = "0x8F6CB4")]
	private sealed class <SavePaintTextures>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string savePath;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PaintTexture <pt>5__2;

		[Token(Token = "0x17000361")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002991")]
			[Address(RVA = "0xC7A1A8", Offset = "0xC7A1A8", VA = "0xC7A1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002993")]
			[Address(RVA = "0xC7A218", Offset = "0xC7A218", VA = "0xC7A218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0xC747C8", Offset = "0xC747C8", VA = "0xC747C8")]
		[DebuggerHidden]
		public <SavePaintTextures>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0xC79DF8", Offset = "0xC79DF8", VA = "0xC79DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0xC79DFC", Offset = "0xC79DFC", VA = "0xC79DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0xC7A1B0", Offset = "0xC7A1B0", VA = "0xC7A1B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CC4", Offset = "0x8F6CC4")]
	private sealed class <SaveAsync>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera screenshotCamera;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <folderPath>5__2;

		[Token(Token = "0x17000363")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002997")]
			[Address(RVA = "0xC79D80", Offset = "0xC79D80", VA = "0xC79D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0xC79DF0", Offset = "0xC79DF0", VA = "0xC79DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0xC7488C", Offset = "0xC7488C", VA = "0xC7488C")]
		[DebuggerHidden]
		public <SaveAsync>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0xC7916C", Offset = "0xC7916C", VA = "0xC7916C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0xC79170", Offset = "0xC79170", VA = "0xC79170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0xC79D88", Offset = "0xC79D88", VA = "0xC79D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CD4", Offset = "0x8F6CD4")]
	private sealed class <DelayedScreenshot>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera screenshotCamera;

		[Token(Token = "0x17000365")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0xC762DC", Offset = "0xC762DC", VA = "0xC762DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0xC7634C", Offset = "0xC7634C", VA = "0xC7634C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0xC74BE0", Offset = "0xC74BE0", VA = "0xC74BE0")]
		[DebuggerHidden]
		public <DelayedScreenshot>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0xC75FB0", Offset = "0xC75FB0", VA = "0xC75FB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0xC75FB4", Offset = "0xC75FB4", VA = "0xC75FB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0xC762E4", Offset = "0xC762E4", VA = "0xC762E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CE4", Offset = "0x8F6CE4")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] screenshot_bytes;

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0xC75730", Offset = "0xC75730", VA = "0xC75730")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xC75738", Offset = "0xC75738", VA = "0xC75738")]
		internal void <ScreenshotFromCamera>b__0()
		{
		}
	}

	[Token(Token = "0x2000501")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CF4", Offset = "0x8F6CF4")]
	private sealed class <ScreenshotFromCamera>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera camera;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int resWidth;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int resHeight;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass21_0 <>8__1;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture <storeRt>5__2;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture <rt>5__3;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D <screenShot>5__4;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <stepSize>5__5;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <it>5__6;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Thread <ThumbnailThread>5__7;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <i>5__8;

		[Token(Token = "0x17000367")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0xC7A7C0", Offset = "0xC7A7C0", VA = "0xC7A7C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0xC7A830", Offset = "0xC7A830", VA = "0xC7A830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0xC74CD8", Offset = "0xC74CD8", VA = "0xC74CD8")]
		[DebuggerHidden]
		public <ScreenshotFromCamera>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0xC7A220", Offset = "0xC7A220", VA = "0xC7A220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xC7A224", Offset = "0xC7A224", VA = "0xC7A224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0xC7A7C8", Offset = "0xC7A7C8", VA = "0xC7A7C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000502")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D04", Offset = "0x8F6D04")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int resWidth;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int resHeight;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] tbyte;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0xC75748", Offset = "0xC75748", VA = "0xC75748")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0xC75750", Offset = "0xC75750", VA = "0xC75750")]
		internal void <PNGScreenshotFromCamera>b__0()
		{
		}
	}

	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D14", Offset = "0x8F6D14")]
	private sealed class <PNGScreenshotFromCamera>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int resWidth;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int resHeight;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera camera;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass22_0 <>8__1;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture <storeRt>5__2;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture <rt>5__3;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D <screenShot>5__4;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <stepSize>5__5;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <it>5__6;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Thread <PngSnapshotThread>5__7;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <i>5__8;

		[Token(Token = "0x17000369")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0xC790F4", Offset = "0xC790F4", VA = "0xC790F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0xC79164", Offset = "0xC79164", VA = "0xC79164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0xC74DD0", Offset = "0xC74DD0", VA = "0xC74DD0")]
		[DebuggerHidden]
		public <PNGScreenshotFromCamera>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0xC78A78", Offset = "0xC78A78", VA = "0xC78A78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0xC78A7C", Offset = "0xC78A7C", VA = "0xC78A7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0xC790FC", Offset = "0xC790FC", VA = "0xC790FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D24", Offset = "0x8F6D24")]
	private sealed class <HiResScreenShot>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera camera;

		[Token(Token = "0x1700036B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0xC767A8", Offset = "0xC767A8", VA = "0xC767A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0xC76818", Offset = "0xC76818", VA = "0xC76818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0xC74E94", Offset = "0xC74E94", VA = "0xC74E94")]
		[DebuggerHidden]
		public <HiResScreenShot>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0xC7658C", Offset = "0xC7658C", VA = "0xC7658C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0xC76590", Offset = "0xC76590", VA = "0xC76590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0xC767B0", Offset = "0xC767B0", VA = "0xC767B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000505")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D34", Offset = "0x8F6D34")]
	private sealed class <LoadPaintTextures>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string folder;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PaintTexture <pt>5__2;

		[Token(Token = "0x1700036D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0xC7821C", Offset = "0xC7821C", VA = "0xC7821C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0xC7828C", Offset = "0xC7828C", VA = "0xC7828C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xC74F84", Offset = "0xC74F84", VA = "0xC74F84")]
		[DebuggerHidden]
		public <LoadPaintTextures>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0xC77A88", Offset = "0xC77A88", VA = "0xC77A88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0xC77A8C", Offset = "0xC77A8C", VA = "0xC77A8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xC78224", Offset = "0xC78224", VA = "0xC78224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000506")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D44", Offset = "0x8F6D44")]
	private sealed class <LoadAsync>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string folderPath;

		[Token(Token = "0x1700036F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0xC77310", Offset = "0xC77310", VA = "0xC77310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0xC77380", Offset = "0xC77380", VA = "0xC77380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xC75048", Offset = "0xC75048", VA = "0xC75048")]
		[DebuggerHidden]
		public <LoadAsync>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xC76DD0", Offset = "0xC76DD0", VA = "0xC76DD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0xC76DD4", Offset = "0xC76DD4", VA = "0xC76DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0xC77318", Offset = "0xC77318", VA = "0xC77318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D54", Offset = "0x8F6D54")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0xC75A44", Offset = "0xC75A44", VA = "0xC75A44")]
		public <>c__DisplayClass29_0()
		{
		}
	}

	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D64", Offset = "0x8F6D64")]
	private sealed class <>c__DisplayClass29_1
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bufCount;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass29_0 CS$<>8__locals1;

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0xC75A4C", Offset = "0xC75A4C", VA = "0xC75A4C")]
		public <>c__DisplayClass29_1()
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0xC75A54", Offset = "0xC75A54", VA = "0xC75A54")]
		internal void <LoadApePaintTextureAsync>b__0()
		{
		}
	}

	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D74", Offset = "0x8F6D74")]
	private sealed class <LoadApePaintTextureAsync>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PaintTexture pt;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isMask;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass29_1 <>8__1;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread <readThread>5__2;

		[Token(Token = "0x17000371")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0xC76D58", Offset = "0xC76D58", VA = "0xC76D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0xC76DC8", Offset = "0xC76DC8", VA = "0xC76DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0xC751CC", Offset = "0xC751CC", VA = "0xC751CC")]
		[DebuggerHidden]
		public <LoadApePaintTextureAsync>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0xC76820", Offset = "0xC76820", VA = "0xC76820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0xC76824", Offset = "0xC76824", VA = "0xC76824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0xC76D60", Offset = "0xC76D60", VA = "0xC76D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D84", Offset = "0x8F6D84")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0xC75E5C", Offset = "0xC75E5C", VA = "0xC75E5C")]
		public <>c__DisplayClass30_0()
		{
		}
	}

	[Token(Token = "0x200050B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D94", Offset = "0x8F6D94")]
	private sealed class <>c__DisplayClass30_1
	{
		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] fluffy;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass30_0 CS$<>8__locals1;

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0xC75E64", Offset = "0xC75E64", VA = "0xC75E64")]
		public <>c__DisplayClass30_1()
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0xC75E6C", Offset = "0xC75E6C", VA = "0xC75E6C")]
		internal void <LoadPaintTextureAsync>b__0()
		{
		}
	}

	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DA4", Offset = "0x8F6DA4")]
	private sealed class <LoadPaintTextureAsync>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isMask;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PaintTexture pt;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass30_1 <>8__1;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <www>5__2;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread <readThread>5__3;

		[Token(Token = "0x17000373")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0xC77A10", Offset = "0xC77A10", VA = "0xC77A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0xC77A80", Offset = "0xC77A80", VA = "0xC77A80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0xC752AC", Offset = "0xC752AC", VA = "0xC752AC")]
		[DebuggerHidden]
		public <LoadPaintTextureAsync>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0xC77388", Offset = "0xC77388", VA = "0xC77388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0xC77464", Offset = "0xC77464", VA = "0xC77464", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xC773A4", Offset = "0xC773A4", VA = "0xC773A4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xC77A18", Offset = "0xC77A18", VA = "0xC77A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DB4", Offset = "0x8F6DB4")]
	private sealed class <LoadTextureIntoUIImage>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filename;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KSVR_IO_Android <>4__this;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image image;

		[Token(Token = "0x17000375")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0xC784A4", Offset = "0xC784A4", VA = "0xC784A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0xC78514", Offset = "0xC78514", VA = "0xC78514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0xC75384", Offset = "0xC75384", VA = "0xC75384")]
		[DebuggerHidden]
		public <LoadTextureIntoUIImage>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0xC78294", Offset = "0xC78294", VA = "0xC78294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xC78298", Offset = "0xC78298", VA = "0xC78298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xC784AC", Offset = "0xC784AC", VA = "0xC784AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DC4", Offset = "0x8F6DC4")]
	private sealed class <NewAsync>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showUI;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PaintTexture <pt>5__2;

		[Token(Token = "0x17000377")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0xC78A00", Offset = "0xC78A00", VA = "0xC78A00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0xC78A70", Offset = "0xC78A70", VA = "0xC78A70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xC7545C", Offset = "0xC7545C", VA = "0xC7545C")]
		[DebuggerHidden]
		public <NewAsync>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0xC7851C", Offset = "0xC7851C", VA = "0xC7851C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0xC78520", Offset = "0xC78520", VA = "0xC78520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0xC78A08", Offset = "0xC78A08", VA = "0xC78A08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] buffy;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D tempTexture;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string loadedPaintFolderPath;

	[Token(Token = "0x1700000D")]
	public static string RootPath
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xC737E8", Offset = "0xC737E8", VA = "0xC737E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000002")]
	public static event SaveEvent OnSaveEvent
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xC748B8", Offset = "0xC748B8", VA = "0xC748B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9048F8", Offset = "0x9048F8")]
		add
		{
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xC749B4", Offset = "0xC749B4", VA = "0xC749B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904908", Offset = "0x904908")]
		remove
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xC737F0", Offset = "0xC737F0", VA = "0xC737F0")]
	private void CleanUpSaves()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xC73F40", Offset = "0xC73F40", VA = "0xC73F40")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xC74060", Offset = "0xC74060", VA = "0xC74060", Slot = "6")]
	public override List<string> GetSaves(bool latestSaves = true, [Optional] List<string> ValidLevelNames, [Optional] string ScenePath)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xC74218", Offset = "0xC74218", VA = "0xC74218")]
	public static string GetRootSavePath()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xC74294", Offset = "0xC74294", VA = "0xC74294")]
	public string GetNewFilePath()
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xC7434C", Offset = "0xC7434C", VA = "0xC7434C", Slot = "16")]
	public override List<string> GetAllArtwork([Optional] string levelName)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xC74618", Offset = "0xC74618", VA = "0xC74618", Slot = "5")]
	public override string BundlePath()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xC74690", Offset = "0xC74690", VA = "0xC74690", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9047CC", Offset = "0x9047CC")]
	public override IEnumerator GetOnlineTexture(string url)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xC74730", Offset = "0xC74730", VA = "0xC74730", Slot = "18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904830", Offset = "0x904830")]
	public override IEnumerator SavePaintTextures([Optional] string savePath)
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xC747F4", Offset = "0xC747F4", VA = "0xC747F4", Slot = "20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904894", Offset = "0x904894")]
	public override IEnumerator SaveAsync(Camera screenshotCamera)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xC74AB0", Offset = "0xC74AB0", VA = "0xC74AB0", Slot = "17")]
	public override void Save(Camera screenshotCamera)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xC74AE8", Offset = "0xC74AE8", VA = "0xC74AE8", Slot = "19")]
	public override void SaveWithTimer(Camera screenshotCamera)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xC74B48", Offset = "0xC74B48", VA = "0xC74B48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904918", Offset = "0x904918")]
	private IEnumerator DelayedScreenshot(Camera screenshotCamera)
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xC74C0C", Offset = "0xC74C0C", VA = "0xC74C0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90497C", Offset = "0x90497C")]
	public IEnumerator ScreenshotFromCamera(string path, Camera camera, int resWidth = 640, int resHeight = 360)
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xC74D04", Offset = "0xC74D04", VA = "0xC74D04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9049E0", Offset = "0x9049E0")]
	public IEnumerator PNGScreenshotFromCamera(string path, Camera camera, int resWidth = 1920, int resHeight = 1080)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xC74DFC", Offset = "0xC74DFC", VA = "0xC74DFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904A44", Offset = "0x904A44")]
	private IEnumerator HiResScreenShot(Camera camera)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xC74EC0", Offset = "0xC74EC0", VA = "0xC74EC0", Slot = "4")]
	public override void TakeAndroidScreenshot(Camera camera)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xC74EEC", Offset = "0xC74EEC", VA = "0xC74EEC", Slot = "22")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904AA8", Offset = "0x904AA8")]
	public override IEnumerator LoadPaintTextures(string folder)
	{
		return null;
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xC74FB0", Offset = "0xC74FB0", VA = "0xC74FB0", Slot = "21")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904B0C", Offset = "0x904B0C")]
	public override IEnumerator LoadAsync(string folderPath)
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xC75074", Offset = "0xC75074", VA = "0xC75074", Slot = "23")]
	public override void Load(string filepath)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xC750FC", Offset = "0xC750FC", VA = "0xC750FC", Slot = "15")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904B70", Offset = "0x904B70")]
	public override IEnumerator LoadApePaintTextureAsync(PaintTexture pt, string path, bool isMask = false)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xC751F8", Offset = "0xC751F8", VA = "0xC751F8", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904BD4", Offset = "0x904BD4")]
	public override IEnumerator LoadPaintTextureAsync(PaintTexture pt, string path, bool isMask = false)
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xC752D8", Offset = "0xC752D8", VA = "0xC752D8", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904C38", Offset = "0x904C38")]
	public override IEnumerator LoadTextureIntoUIImage(string filename, Image image)
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xC753B0", Offset = "0xC753B0", VA = "0xC753B0", Slot = "9")]
	public override void LoadTextureIntoImage(string filename, Image image)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xC753E4", Offset = "0xC753E4", VA = "0xC753E4", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904C9C", Offset = "0x904C9C")]
	public override IEnumerator NewAsync(bool showUI = true)
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xC75488", Offset = "0xC75488", VA = "0xC75488", Slot = "11")]
	public override void New()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xC7556C", Offset = "0xC7556C", VA = "0xC7556C")]
	private void Menu_OnConfirmationEvent(bool confirm)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xC756B0", Offset = "0xC756B0", VA = "0xC756B0")]
	public KSVR_IO_Android()
	{
	}
}
[Token(Token = "0x2000044")]
public class KSVR_IO_PS4 : KSVR_IO
{
	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xC7A878", Offset = "0xC7A878", VA = "0xC7A878", Slot = "17")]
	public override void Save(Camera screenshotCamera)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xC7A8E4", Offset = "0xC7A8E4", VA = "0xC7A8E4", Slot = "23")]
	public override void Load(string name)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xC7A950", Offset = "0xC7A950", VA = "0xC7A950")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xC7A954", Offset = "0xC7A954", VA = "0xC7A954")]
	public KSVR_IO_PS4()
	{
	}
}
[Token(Token = "0x2000045")]
public class KSVR_IO_Windows : KSVR_IO
{
	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DD4", Offset = "0x8F6DD4")]
	private sealed class <SavePNGTexture>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D texture;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filename;

		[Token(Token = "0x17000379")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0xC7B9DC", Offset = "0xC7B9DC", VA = "0xC7B9DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0xC7BA4C", Offset = "0xC7BA4C", VA = "0xC7BA4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0xC7AD84", Offset = "0xC7AD84", VA = "0xC7AD84")]
		[DebuggerHidden]
		public <SavePNGTexture>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0xC7B928", Offset = "0xC7B928", VA = "0xC7B928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0xC7B92C", Offset = "0xC7B92C", VA = "0xC7B92C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0xC7B9E4", Offset = "0xC7B9E4", VA = "0xC7B9E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DE4", Offset = "0x8F6DE4")]
	private sealed class <LoadImageSpriteAsync>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filename;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image image;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x1700037B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0xC7B420", Offset = "0xC7B420", VA = "0xC7B420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0xC7B490", Offset = "0xC7B490", VA = "0xC7B490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0xC7AF74", Offset = "0xC7AF74", VA = "0xC7AF74")]
		[DebuggerHidden]
		public <LoadImageSpriteAsync>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0xC7B260", Offset = "0xC7B260", VA = "0xC7B260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0xC7B264", Offset = "0xC7B264", VA = "0xC7B264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0xC7B428", Offset = "0xC7B428", VA = "0xC7B428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DF4", Offset = "0x8F6DF4")]
	private sealed class <SaveAsync>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_IO_Windows <>4__this;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <filepath>5__2;

		[Token(Token = "0x1700037D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xC7B8B0", Offset = "0xC7B8B0", VA = "0xC7B8B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0xC7B920", Offset = "0xC7B920", VA = "0xC7B920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0xC7B078", Offset = "0xC7B078", VA = "0xC7B078")]
		[DebuggerHidden]
		public <SaveAsync>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0xC7B498", Offset = "0xC7B498", VA = "0xC7B498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0xC7B49C", Offset = "0xC7B49C", VA = "0xC7B49C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0xC7B8B8", Offset = "0xC7B8B8", VA = "0xC7B8B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E04", Offset = "0x8F6E04")]
	private sealed class <ScreenshotFromCamera>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera camera;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x1700037F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xC7BDAC", Offset = "0xC7BDAC", VA = "0xC7BDAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0xC7BE1C", Offset = "0xC7BE1C", VA = "0xC7BE1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0xC7B13C", Offset = "0xC7B13C", VA = "0xC7B13C")]
		[DebuggerHidden]
		public <ScreenshotFromCamera>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0xC7BA54", Offset = "0xC7BA54", VA = "0xC7BA54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0xC7BA58", Offset = "0xC7BA58", VA = "0xC7BA58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0xC7BDB4", Offset = "0xC7BDB4", VA = "0xC7BDB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x1700000E")]
	private string SaveRootPath
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xC7A9BC", Offset = "0xC7A9BC", VA = "0xC7A9BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public static string RootPath
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xC7AA04", Offset = "0xC7AA04", VA = "0xC7AA04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xC7AA5C", Offset = "0xC7AA5C", VA = "0xC7AA5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xC7AB70", Offset = "0xC7AB70", VA = "0xC7AB70")]
	public static string GetRootSavePath()
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xC7AC1C", Offset = "0xC7AC1C", VA = "0xC7AC1C")]
	public string GetNewFilePath()
	{
		return null;
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xC7ACEC", Offset = "0xC7ACEC", VA = "0xC7ACEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904D00", Offset = "0x904D00")]
	public IEnumerator SavePNGTexture(string filename, Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xC7ADB0", Offset = "0xC7ADB0", VA = "0xC7ADB0")]
	private List<string> GetLevelArtwork(string path)
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xC7AA60", Offset = "0xC7AA60", VA = "0xC7AA60")]
	private List<string> GetAllArtwork()
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xC7AE68", Offset = "0xC7AE68", VA = "0xC7AE68", Slot = "5")]
	public override string BundlePath()
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xC7AEDC", Offset = "0xC7AEDC", VA = "0xC7AEDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904D64", Offset = "0x904D64")]
	private IEnumerator LoadImageSpriteAsync(string filename, Image image)
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC7AFA0", Offset = "0xC7AFA0", VA = "0xC7AFA0", Slot = "9")]
	public override void LoadTextureIntoImage(string filename, Image image)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xC7AFCC", Offset = "0xC7AFCC", VA = "0xC7AFCC", Slot = "17")]
	public override void Save(Camera screenshotCamera)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xC7B004", Offset = "0xC7B004", VA = "0xC7B004", Slot = "20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904DC8", Offset = "0x904DC8")]
	public override IEnumerator SaveAsync(Camera screenshotCamera)
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xC7B0A4", Offset = "0xC7B0A4", VA = "0xC7B0A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904E2C", Offset = "0x904E2C")]
	private IEnumerator ScreenshotFromCamera(string path, Camera camera)
	{
		return null;
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xC7B168", Offset = "0xC7B168", VA = "0xC7B168", Slot = "23")]
	public override void Load(string filepath)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xC7B1F8", Offset = "0xC7B1F8", VA = "0xC7B1F8")]
	public KSVR_IO_Windows()
	{
	}
}
[Token(Token = "0x2000046")]
public class KSVR_Attacher : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AttachPointName;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xFDA4A4", Offset = "0xFDA4A4", VA = "0xFDA4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xFDA66C", Offset = "0xFDA66C", VA = "0xFDA66C")]
	public KSVR_Attacher()
	{
	}
}
[Token(Token = "0x2000047")]
public class KSVR_AttachPoint : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> attachPointList;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xFDA124", Offset = "0xFDA124", VA = "0xFDA124")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xFDA1C0", Offset = "0xFDA1C0", VA = "0xFDA1C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xFDA25C", Offset = "0xFDA25C", VA = "0xFDA25C")]
	public static GameObject GetAttachPointByName(string name)
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xFDA428", Offset = "0xFDA428", VA = "0xFDA428")]
	public KSVR_AttachPoint()
	{
	}
}
[Token(Token = "0x2000048")]
public class KSVR_Crouch : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CrouchDistance;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool IsCrouching;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xFDBF64", Offset = "0xFDBF64", VA = "0xFDBF64")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xFDC030", Offset = "0xFDC030", VA = "0xFDC030")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xFDC244", Offset = "0xFDC244", VA = "0xFDC244")]
	public KSVR_Crouch()
	{
	}
}
[Token(Token = "0x2000049")]
public class KSVR_Damagable : MonoBehaviour
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Health;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startHealth;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xFDC258", Offset = "0xFDC258", VA = "0xFDC258")]
	public void TakeDamage(float damage)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xFDC4AC", Offset = "0xFDC4AC", VA = "0xFDC4AC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xFDC5EC", Offset = "0xFDC5EC", VA = "0xFDC5EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xFDC5FC", Offset = "0xFDC5FC", VA = "0xFDC5FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xFDC640", Offset = "0xFDC640", VA = "0xFDC640")]
	public KSVR_Damagable()
	{
	}
}
[Token(Token = "0x200004A")]
public class KSVR_EntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E14", Offset = "0x8F6E14")]
	private sealed class <DelayBunkerLoad>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000381")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0xFDCA0C", Offset = "0xFDCA0C", VA = "0xFDCA0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029FE")]
			[Address(RVA = "0xFDCA7C", Offset = "0xFDCA7C", VA = "0xFDCA7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0xFDC8CC", Offset = "0xFDC8CC", VA = "0xFDC8CC")]
		[DebuggerHidden]
		public <DelayBunkerLoad>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0xFDC900", Offset = "0xFDC900", VA = "0xFDC900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0xFDC904", Offset = "0xFDC904", VA = "0xFDC904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0xFDCA14", Offset = "0xFDCA14", VA = "0xFDCA14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool SkipEntitlementCheck;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xFDC650", Offset = "0xFDC650", VA = "0xFDC650")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xFDC774", Offset = "0xFDC774", VA = "0xFDC774")]
	private void entitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xFDC86C", Offset = "0xFDC86C", VA = "0xFDC86C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904E90", Offset = "0x904E90")]
	private IEnumerator DelayBunkerLoad()
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xFDC8F8", Offset = "0xFDC8F8", VA = "0xFDC8F8")]
	public KSVR_EntitlementCheck()
	{
	}
}
[Token(Token = "0x200004B")]
public class KSVR_Equipment : MonoBehaviour
{
	[Token(Token = "0x2000514")]
	public enum EquipmentMode
	{
		[Token(Token = "0x4001DAE")]
		NONE,
		[Token(Token = "0x4001DAF")]
		GAME,
		[Token(Token = "0x4001DB0")]
		MENU
	}

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> GameEquipment;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> MenuEquipment;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EquipmentMode Mode;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xFDCA84", Offset = "0xFDCA84", VA = "0xFDCA84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xFDCCC4", Offset = "0xFDCCC4", VA = "0xFDCCC4")]
	public KSVR_Equipment()
	{
	}
}
[Token(Token = "0x200004C")]
public class KSVR_Hand : MonoBehaviour
{
	[Token(Token = "0x2000515")]
	public delegate void OnPoseChanged(string pose);

	[Token(Token = "0x2000516")]
	public delegate void HandGrabPose(float value);

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_animator;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material GloveMaterial;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> PoseStack;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultPose;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRightHand;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string currentPose;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float currentGrabValue;

	[Token(Token = "0x14000003")]
	public event OnPoseChanged OnPoseChangedEvent
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xFDCDA8", Offset = "0xFDCDA8", VA = "0xFDCDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904EF4", Offset = "0x904EF4")]
		add
		{
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xFDCE94", Offset = "0xFDCE94", VA = "0xFDCE94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F04", Offset = "0x904F04")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event HandGrabPose OnHandGrabPose
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xFDCF80", Offset = "0xFDCF80", VA = "0xFDCF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F14", Offset = "0x904F14")]
		add
		{
		}
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xFDD06C", Offset = "0xFDD06C", VA = "0xFDD06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F24", Offset = "0x904F24")]
		remove
		{
		}
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xFDD158", Offset = "0xFDD158", VA = "0xFDD158")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xFDD1DC", Offset = "0xFDD1DC", VA = "0xFDD1DC")]
	public void SetGloveTexture(Texture2D texture)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xFDD214", Offset = "0xFDD214", VA = "0xFDD214")]
	public void SetFloat(string name, float value)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xFDD2E8", Offset = "0xFDD2E8", VA = "0xFDD2E8")]
	public void PopPose()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xFD7CA8", Offset = "0xFD7CA8", VA = "0xFD7CA8")]
	public void SetPose(string posename)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xFDDB5C", Offset = "0xFDDB5C", VA = "0xFDDB5C")]
	public void NetworkSetPose(string posename)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xFDDC20", Offset = "0xFDDC20", VA = "0xFDDC20")]
	private void Update()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xFDE2A8", Offset = "0xFDE2A8", VA = "0xFDE2A8")]
	public KSVR_Hand()
	{
	}
}
[Token(Token = "0x200004D")]
public class KSVR_HandAttacher : MonoBehaviour
{
	[Token(Token = "0x2000517")]
	public delegate void OnAttachedCompleteEvent();

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LeftHandAttach;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string RightHandAttach;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Parent;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<KSVR_HandAttacher> handAttachList;

	[Token(Token = "0x14000005")]
	public event OnAttachedCompleteEvent OnAttachedComplete
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xFDE414", Offset = "0xFDE414", VA = "0xFDE414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F34", Offset = "0x904F34")]
		add
		{
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xFDE500", Offset = "0xFDE500", VA = "0xFDE500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F44", Offset = "0x904F44")]
		remove
		{
		}
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xFDE5EC", Offset = "0xFDE5EC", VA = "0xFDE5EC")]
	private void SetAttachment()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xFDEDAC", Offset = "0xFDEDAC", VA = "0xFDEDAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xFDEDB0", Offset = "0xFDEDB0", VA = "0xFDEDB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xFDEE3C", Offset = "0xFDEE3C", VA = "0xFDEE3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xFDEEC8", Offset = "0xFDEEC8", VA = "0xFDEEC8")]
	public static void UpdateAllAttachments()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xFDF07C", Offset = "0xFDF07C", VA = "0xFDF07C")]
	public KSVR_HandAttacher()
	{
	}
}
[Token(Token = "0x200004E")]
public class KSVR_PlaybackRig : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Head;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform LHand;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RHand;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SprayCan LeftCan;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SprayCan RightCan;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KSVR_PlaybackRig _instance;

	[Token(Token = "0x17000010")]
	public static KSVR_PlaybackRig Instance
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xC825C0", Offset = "0xC825C0", VA = "0xC825C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC8268C", Offset = "0xC8268C", VA = "0xC8268C")]
	public KSVR_PlaybackRig()
	{
	}
}
[Token(Token = "0x200004F")]
public class KSVR_Player : MonoBehaviour
{
	[Token(Token = "0x2000518")]
	public delegate void OnHandsSwitched(bool isRightHanded);

	[Token(Token = "0x2000519")]
	public delegate void PaintMaskFilterChanged(int index);

	[Token(Token = "0x200051A")]
	public delegate void PlayerReady();

	[Token(Token = "0x200051B")]
	public enum Mode
	{
		[Token(Token = "0x4001DB2")]
		SPRAYING,
		[Token(Token = "0x4001DB3")]
		JUST_HANDS,
		[Token(Token = "0x4001DB4")]
		SECRET_WALLS
	}

	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E24", Offset = "0x8F6E24")]
	private sealed class <LoadRoomProfilePicture>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_Player <>4__this;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string profile_pic;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x17000383")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0xC871D0", Offset = "0xC871D0", VA = "0xC871D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0xC87240", Offset = "0xC87240", VA = "0xC87240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xC834A4", Offset = "0xC834A4", VA = "0xC834A4")]
		[DebuggerHidden]
		public <LoadRoomProfilePicture>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0xC86F6C", Offset = "0xC86F6C", VA = "0xC86F6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0xC86F70", Offset = "0xC86F70", VA = "0xC86F70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0xC871D8", Offset = "0xC871D8", VA = "0xC871D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E34", Offset = "0x8F6E34")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__83_0;

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0xC86EFC", Offset = "0xC86EFC", VA = "0xC86EFC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0xC86F04", Offset = "0xC86F04", VA = "0xC86F04")]
		internal bool <SceneChangedEventAsync>b__83_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E44", Offset = "0x8F6E44")]
	private sealed class <SceneChangedEventAsync>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_Player <>4__this;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x17000385")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0xC876D0", Offset = "0xC876D0", VA = "0xC876D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0xC87740", Offset = "0xC87740", VA = "0xC87740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0xC85E64", Offset = "0xC85E64", VA = "0xC85E64")]
		[DebuggerHidden]
		public <SceneChangedEventAsync>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0xC87248", Offset = "0xC87248", VA = "0xC87248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0xC8724C", Offset = "0xC8724C", VA = "0xC8724C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0xC876D8", Offset = "0xC876D8", VA = "0xC876D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E54", Offset = "0x8F6E54")]
	private sealed class <ShowNoNetworkScreen>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_Player <>4__this;

		[Token(Token = "0x17000387")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0xC87954", Offset = "0xC87954", VA = "0xC87954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0xC879C4", Offset = "0xC879C4", VA = "0xC879C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0xC85F30", Offset = "0xC85F30", VA = "0xC85F30")]
		[DebuggerHidden]
		public <ShowNoNetworkScreen>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0xC87748", Offset = "0xC87748", VA = "0xC87748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0xC8774C", Offset = "0xC8774C", VA = "0xC8774C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0xC8795C", Offset = "0xC8795C", VA = "0xC8795C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E64", Offset = "0x8F6E64")]
	private sealed class <Start>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_Player <>4__this;

		[Token(Token = "0x17000389")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xC88558", Offset = "0xC88558", VA = "0xC88558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0xC885C8", Offset = "0xC885C8", VA = "0xC885C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0xC86250", Offset = "0xC86250", VA = "0xC86250")]
		[DebuggerHidden]
		public <Start>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xC879CC", Offset = "0xC879CC", VA = "0xC879CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xC879D0", Offset = "0xC879D0", VA = "0xC879D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xC88560", Offset = "0xC88560", VA = "0xC88560", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KSVR_Controller_Base m_LeftController;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KSVR_Controller_Base m_RightController;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<OnlineTextureOverride> OnlineItemTextureOverrides;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_LeftHandModel;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_RightHandModel;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ViveGrip_Grabber m_LeftGrabber;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public ViveGrip_Grabber m_RightGrabber;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool IsNetworkingDebug;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isPlayerLocked;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public LayerMask CameraDefaultLayerMasks;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask CameraSphereLayer;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject OutOfBoundsUI;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text OverlayText;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject LoadingUI;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject CameraSphere;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject PlayerRoomProfile;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_Text PlayerProfileName;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TMP_Text PlayerRoomName;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image PlayerRoomProfileImage;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite DefaultProfilePic;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Camera m_VRCamera;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public OVRScreenFade m_OVRScreenFade;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public KSVR_Hand m_LeftHand;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public KSVR_Hand m_RightHand;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject RightRoot;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject LeftRoot;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string LeftTrackerName;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string RightTrackerName;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject m_VrRig;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool m_isRightHanded;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private OVRInput.Controller ConnectedControllers;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool m_IsCrouching;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 m_preCrouchPosition;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float CrouchHeightOffset;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F88E0", Offset = "0x8F88E0")]
	private SprayCanPlayerController <SprayCanController>k__BackingField;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private EventSystem eventSystem;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static KSVR_Player _instance;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, MonoBehaviour> m_RegisteredComponents;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform m_LeftTracker;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform m_RightTracker;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool networkWasDisconnected;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool wasRadioPlaying;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	public bool IsSleeping;

	[Token(Token = "0x17000011")]
	public int MaskFilterIndex
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xC8316C", Offset = "0xC8316C", VA = "0xC8316C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xC82CD8", Offset = "0xC82CD8", VA = "0xC82CD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool IsPlayerLocked
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xC833CC", Offset = "0xC833CC", VA = "0xC833CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public SprayCanPlayerController SprayCanController
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0xC832EC", Offset = "0xC832EC", VA = "0xC832EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905018", Offset = "0x905018")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xC855D0", Offset = "0xC855D0", VA = "0xC855D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905028", Offset = "0x905028")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool IsRightHanded
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xC79644", Offset = "0xC79644", VA = "0xC79644")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	public static KSVR_Player Instance
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0xC76108", Offset = "0xC76108", VA = "0xC76108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000016")]
	public ViveGrip_Grabber LeftGrabber
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xC85F5C", Offset = "0xC85F5C", VA = "0xC85F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public ViveGrip_Grabber RightGrabber
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xC85F64", Offset = "0xC85F64", VA = "0xC85F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000006")]
	public event OnHandsSwitched OnHandsSwitchedEvent
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xC82694", Offset = "0xC82694", VA = "0xC82694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F54", Offset = "0x904F54")]
		add
		{
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xC82780", Offset = "0xC82780", VA = "0xC82780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F64", Offset = "0x904F64")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event PaintMaskFilterChanged OnPaintMaskFilterChanged
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xC8286C", Offset = "0xC8286C", VA = "0xC8286C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F74", Offset = "0x904F74")]
		add
		{
		}
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xC82958", Offset = "0xC82958", VA = "0xC82958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F84", Offset = "0x904F84")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event PlayerReady OnPlayerReady
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0xC82A44", Offset = "0xC82A44", VA = "0xC82A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904F94", Offset = "0x904F94")]
		add
		{
		}
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xC82B70", Offset = "0xC82B70", VA = "0xC82B70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904FA4", Offset = "0x904FA4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xC82C9C", Offset = "0xC82C9C", VA = "0xC82C9C")]
	public void ChangeMaskFilter(int index)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xC76230", Offset = "0xC76230", VA = "0xC76230")]
	public void LockPlayer(bool locked, bool lockteleport = true)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC833D4", Offset = "0xC833D4", VA = "0xC833D4")]
	public void SetCameraOverlayStatusText(string text)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC8340C", Offset = "0xC8340C", VA = "0xC8340C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904FB4", Offset = "0x904FB4")]
	private IEnumerator LoadRoomProfilePicture(string profile_pic)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC834D0", Offset = "0xC834D0", VA = "0xC834D0")]
	public void HidePlayerRoomProfile()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC83530", Offset = "0xC83530", VA = "0xC83530")]
	public void ShowPlayerRoomProfile(string name, string roomName, string profile_pic)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xC83668", Offset = "0xC83668", VA = "0xC83668")]
	public void SetCameraSphereEnabled(bool enabled, bool isOutofBounds = true)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC83760", Offset = "0xC83760", VA = "0xC83760")]
	public void UpdateAALevel()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC83868", Offset = "0xC83868", VA = "0xC83868")]
	public void UpdateHandVisibility()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xC83C28", Offset = "0xC83C28", VA = "0xC83C28")]
	public GameObject GetHandModel(bool primary)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xC83C5C", Offset = "0xC83C5C", VA = "0xC83C5C")]
	public KSVR_Controller_Base GetController(bool primary)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xC83C90", Offset = "0xC83C90", VA = "0xC83C90")]
	public void SetMode(Mode mode)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xC84500", Offset = "0xC84500", VA = "0xC84500")]
	public void SwitchHands()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xC845B8", Offset = "0xC845B8", VA = "0xC845B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xC83914", Offset = "0xC83914", VA = "0xC83914")]
	public void SetHandVisible(bool primary, bool visible)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xC84510", Offset = "0xC84510", VA = "0xC84510")]
	public void SetHandiness(bool rightHanded)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xC855D8", Offset = "0xC855D8", VA = "0xC855D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xC8572C", Offset = "0xC8572C", VA = "0xC8572C")]
	public static void RegisterComponent(string accessKey, MonoBehaviour comp)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xC84394", Offset = "0xC84394", VA = "0xC84394")]
	public static MonoBehaviour GetRegisteredComponent(string name)
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xC857C8", Offset = "0xC857C8", VA = "0xC857C8")]
	public void MoveToSpawnPoint()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xC85DCC", Offset = "0xC85DCC", VA = "0xC85DCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905038", Offset = "0x905038")]
	private IEnumerator SceneChangedEventAsync(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xC85E90", Offset = "0xC85E90", VA = "0xC85E90")]
	private void SceneChangedEvent(string sceneName)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xC85EBC", Offset = "0xC85EBC", VA = "0xC85EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90509C", Offset = "0x90509C")]
	private IEnumerator ShowNoNetworkScreen()
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xC8567C", Offset = "0xC8567C", VA = "0xC8567C")]
	private void RemoveKey(string key)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xC85F6C", Offset = "0xC85F6C", VA = "0xC85F6C")]
	public Transform GetTracker(bool primary = true)
	{
		return null;
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xC85FA0", Offset = "0xC85FA0", VA = "0xC85FA0")]
	private void OVRManager_TrackingAcquired()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xC8600C", Offset = "0xC8600C", VA = "0xC8600C")]
	private void OVRManager_TrackingLost()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xC86078", Offset = "0xC86078", VA = "0xC86078")]
	public void DownloadOnlineTextureOverrides()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xC861DC", Offset = "0xC861DC", VA = "0xC861DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905100", Offset = "0x905100")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xC8627C", Offset = "0xC8627C", VA = "0xC8627C")]
	private void Application_lowMemory()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xC86310", Offset = "0xC86310", VA = "0xC86310")]
	private void Instance_OnNetworkConnected()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xC8638C", Offset = "0xC8638C", VA = "0xC8638C")]
	private void Instance_OnNetworkDisconnected()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xC866EC", Offset = "0xC866EC", VA = "0xC866EC")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xC86864", Offset = "0xC86864", VA = "0xC86864")]
	private void OVRManager_VrFocusLost()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xC86ABC", Offset = "0xC86ABC", VA = "0xC86ABC")]
	private void OVRManager_VrFocusAcquired()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xC831D8", Offset = "0xC831D8", VA = "0xC831D8")]
	public void EventSystemSetEnabled(bool enabled, [Optional] GameObject selected)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xC86CE0", Offset = "0xC86CE0", VA = "0xC86CE0")]
	private void Instance_OnPlatformConnectedEvent(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xC86D4C", Offset = "0xC86D4C", VA = "0xC86D4C")]
	public Transform GetHandRoot(bool Primary)
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xC844CC", Offset = "0xC844CC", VA = "0xC844CC")]
	public KSVR_Hand GetHand(bool Primary)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xC86D8C", Offset = "0xC86D8C", VA = "0xC86D8C")]
	public KSVR_Player()
	{
	}
}
[Token(Token = "0x2000050")]
public class KSVR_PlayerSpawn : MonoBehaviour
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnPoints;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PS4Prefab;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject OculusPrefab;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PCPrefab;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xC88774", Offset = "0xC88774", VA = "0xC88774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xC88810", Offset = "0xC88810", VA = "0xC88810")]
	public KSVR_PlayerSpawn()
	{
	}
}
[Token(Token = "0x2000051")]
public class KSVR_Recorder : MonoBehaviour
{
	[Token(Token = "0x2000521")]
	public class KSVR_Track
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<KSVR_Keyframe> Keyframes;

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xC8B4A8", Offset = "0xC8B4A8", VA = "0xC8B4A8")]
		public KSVR_Track()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000522")]
	public class KSVR_Keyframe
	{
		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int FrameIdx;

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0xC8B518", Offset = "0xC8B518", VA = "0xC8B518")]
		public KSVR_Keyframe()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000523")]
	public class KSVR_Keyframe_Transform : KSVR_Keyframe
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public SerializableVector3 Position;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public SerializableQuaternion Rotation;

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0xC8B530", Offset = "0xC8B530", VA = "0xC8B530")]
		public KSVR_Keyframe_Transform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000524")]
	public class KSVR_Keyframe_Float : KSVR_Keyframe
	{
		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public float Value;

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0xC8B520", Offset = "0xC8B520", VA = "0xC8B520")]
		public KSVR_Keyframe_Float()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000525")]
	public class KSVR_Keyframe_Paint : KSVR_Keyframe
	{
		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public SerializableVector3 Color;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float MetallicValue;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public int Cap;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool IsPrimary;

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0xC8B528", Offset = "0xC8B528", VA = "0xC8B528")]
		public KSVR_Keyframe_Paint()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000526")]
	public class KSVR_Pose
	{
		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public SerializableVector3 RootPosition;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public SerializableQuaternion RootRotation;

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0xC8B1A8", Offset = "0xC8B1A8", VA = "0xC8B1A8")]
		public KSVR_Pose()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000527")]
	public class KSVR_PoseStroke : KSVR_Pose
	{
		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public SerializableVector3 Color;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float MetallicValue;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public int Cap;

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0xC8B024", Offset = "0xC8B024", VA = "0xC8B024")]
		public KSVR_PoseStroke()
		{
		}
	}

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KSVR_Recorder _instance;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<KSVR_Keyframe> Keyframes;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private KSVR_Track Root;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private KSVR_Pose[] Poses;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int pseidx;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SprayCan Spraycan;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SprayCan PlaybackSpraycan;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isPlaying;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int frameIdx;

	[Token(Token = "0x17000018")]
	public static KSVR_Recorder Instance
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xC8AE24", Offset = "0xC8AE24", VA = "0xC8AE24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public bool IsPlaying
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xC8B1D8", Offset = "0xC8B1D8", VA = "0xC8B1D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xC8AEF0", Offset = "0xC8AEF0", VA = "0xC8AEF0")]
	public void RecordBrushStroke(SprayCan sprayCan, bool isPrimary)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xC8B02C", Offset = "0xC8B02C", VA = "0xC8B02C")]
	public void RecordPose()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xC8B1B0", Offset = "0xC8B1B0", VA = "0xC8B1B0")]
	public void Play(bool reset = false)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xC8B1C4", Offset = "0xC8B1C4", VA = "0xC8B1C4")]
	public void Stop(bool reset = false)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xC8B1D4", Offset = "0xC8B1D4", VA = "0xC8B1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xC8B1E0", Offset = "0xC8B1E0", VA = "0xC8B1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xC8B404", Offset = "0xC8B404", VA = "0xC8B404")]
	public KSVR_Recorder()
	{
	}
}
[Token(Token = "0x2000052")]
public class KSVR_SetHandPose : MonoBehaviour
{
	[Token(Token = "0x2000528")]
	public enum HandPose
	{
		[Token(Token = "0x4001DD6")]
		Idle,
		[Token(Token = "0x4001DD7")]
		Spraying,
		[Token(Token = "0x4001DD8")]
		Grab,
		[Token(Token = "0x4001DD9")]
		PreGrab,
		[Token(Token = "0x4001DDA")]
		Phone,
		[Token(Token = "0x4001DDB")]
		Flashlight,
		[Token(Token = "0x4001DDC")]
		Remote
	}

	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E74", Offset = "0x8F6E74")]
	private sealed class <GetController>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_SetHandPose <>4__this;

		[Token(Token = "0x1700038B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0xC8B99C", Offset = "0xC8B99C", VA = "0xC8B99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0xC8BA0C", Offset = "0xC8BA0C", VA = "0xC8BA0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0xC8B704", Offset = "0xC8B704", VA = "0xC8B704")]
		[DebuggerHidden]
		public <GetController>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0xC8B7D8", Offset = "0xC8B7D8", VA = "0xC8B7D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0xC8B7DC", Offset = "0xC8B7DC", VA = "0xC8B7DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xC8B9A4", Offset = "0xC8B9A4", VA = "0xC8B9A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E84", Offset = "0x8F6E84")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_SetHandPose <>4__this;

		[Token(Token = "0x1700038D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A42")]
			[Address(RVA = "0xC8BB48", Offset = "0xC8BB48", VA = "0xC8BB48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xC8BBB8", Offset = "0xC8BBB8", VA = "0xC8BBB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0xC8B7A4", Offset = "0xC8B7A4", VA = "0xC8B7A4")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0xC8BA14", Offset = "0xC8BA14", VA = "0xC8BA14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0xC8BA18", Offset = "0xC8BA18", VA = "0xC8BA18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0xC8BB50", Offset = "0xC8BB50", VA = "0xC8BB50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPose m_HandPose;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xC8B538", Offset = "0xC8B538", VA = "0xC8B538")]
	public void HandsSwitched()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xC8B690", Offset = "0xC8B690", VA = "0xC8B690")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905164", Offset = "0x905164")]
	private IEnumerator GetController()
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xC8B730", Offset = "0xC8B730", VA = "0xC8B730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9051C8", Offset = "0x9051C8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xC8B7D0", Offset = "0xC8B7D0", VA = "0xC8B7D0")]
	public KSVR_SetHandPose()
	{
	}
}
[Token(Token = "0x2000053")]
public class KSVR_Teleport : MonoBehaviour
{
	[Token(Token = "0x200052B")]
	public delegate void TeleportEvent(Vector3 position);

	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E94", Offset = "0x8F6E94")]
	private sealed class <SetupController>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_Teleport <>4__this;

		[Token(Token = "0x1700038F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0xC8E3B4", Offset = "0xC8E3B4", VA = "0xC8E3B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000390")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xC8E424", Offset = "0xC8E424", VA = "0xC8E424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0xC8C220", Offset = "0xC8C220", VA = "0xC8C220")]
		[DebuggerHidden]
		public <SetupController>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0xC8E1D0", Offset = "0xC8E1D0", VA = "0xC8E1D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0xC8E1D4", Offset = "0xC8E1D4", VA = "0xC8E1D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0xC8E3BC", Offset = "0xC8E3BC", VA = "0xC8E3BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LineRenderer m_lineRenderer;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_TeleportIsValid;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color LineHitColor;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color LineMissColor;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float LineHitWidth;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float LineMissWidth;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8900", Offset = "0x8F8900")]
	public LayerMask CollisionMask;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject TargetPrefab;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8938", Offset = "0x8F8938")]
	public float DeflectionDistance;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float ZOffsetDistance;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isLocked;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BoxCollider TeleportValidation;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KSVR_Teleport _instance;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<BoxCollider> IgnoreRegions;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float LerpSpeed;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color m_CurrentLineColor;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_CurrentLineWidth;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform playArea;

	[Token(Token = "0x1700001A")]
	public static KSVR_Teleport Instance
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xC832F4", Offset = "0xC832F4", VA = "0xC832F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000009")]
	public event TeleportEvent OnTeleportEvent
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xC8BBC0", Offset = "0xC8BBC0", VA = "0xC8BBC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90522C", Offset = "0x90522C")]
		add
		{
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xC8BCAC", Offset = "0xC8BCAC", VA = "0xC8BCAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90523C", Offset = "0x90523C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC833C0", Offset = "0xC833C0", VA = "0xC833C0")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xC8BD98", Offset = "0xC8BD98", VA = "0xC8BD98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xC8BDEC", Offset = "0xC8BDEC", VA = "0xC8BDEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xC8BFA8", Offset = "0xC8BFA8", VA = "0xC8BFA8")]
	private void SceneChangedEvent(string sceneName)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xC8C1F4", Offset = "0xC8C1F4", VA = "0xC8C1F4")]
	public void OnSwapHandsEvent()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xC8BEBC", Offset = "0xC8BEBC", VA = "0xC8BEBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90524C", Offset = "0x90524C")]
	private IEnumerator SetupController()
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xC8C24C", Offset = "0xC8C24C", VA = "0xC8C24C")]
	private void Deflect(RaycastHit rayHit, out Vector3 targetPosition)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xC8C3F8", Offset = "0xC8C3F8", VA = "0xC8C3F8")]
	private bool ValidateTeleportPoint(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xC8C5A8", Offset = "0xC8C5A8", VA = "0xC8C5A8")]
	public void RaycastScene()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xC8CE84", Offset = "0xC8CE84", VA = "0xC8CE84")]
	private void ShowInvalidLine()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xC8BF30", Offset = "0xC8BF30", VA = "0xC8BF30")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xC8D0F0", Offset = "0xC8D0F0", VA = "0xC8D0F0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xC8D700", Offset = "0xC8D700", VA = "0xC8D700")]
	private void TeleportMyGrabbaleToo(ViveGrip_Grabber vGG, Vector3 theDifference)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xC8DF68", Offset = "0xC8DF68", VA = "0xC8DF68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xC8E134", Offset = "0xC8E134", VA = "0xC8E134")]
	public KSVR_Teleport()
	{
	}
}
[Token(Token = "0x2000054")]
public class KSVR_Platform_Base : MonoBehaviour
{
	[Token(Token = "0x200052D")]
	public delegate void NetworkConnected();

	[Token(Token = "0x200052E")]
	public delegate void NetworkDisconnected();

	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6EA4", Offset = "0x8F6EA4")]
	private sealed class <CheckInternetConnectivitity>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_Platform_Base <>4__this;

		[Token(Token = "0x17000391")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0xC81918", Offset = "0xC81918", VA = "0xC81918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0xC81988", Offset = "0xC81988", VA = "0xC81988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0xC80AFC", Offset = "0xC80AFC", VA = "0xC80AFC")]
		[DebuggerHidden]
		public <CheckInternetConnectivitity>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0xC80FDC", Offset = "0xC80FDC", VA = "0xC80FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0xC80FE0", Offset = "0xC80FE0", VA = "0xC80FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0xC81920", Offset = "0xC81920", VA = "0xC81920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6EB4", Offset = "0x8F6EB4")]
	private sealed class <CheckConnection>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KSVR_Platform_Base <>4__this;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000393")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0xC80F64", Offset = "0xC80F64", VA = "0xC80F64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0xC80FD4", Offset = "0xC80FD4", VA = "0xC80FD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0xC80BC8", Offset = "0xC80BC8", VA = "0xC80BC8")]
		[DebuggerHidden]
		public <CheckConnection>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0xC80D5C", Offset = "0xC80D5C", VA = "0xC80D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0xC80D60", Offset = "0xC80D60", VA = "0xC80D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0xC80F6C", Offset = "0xC80F6C", VA = "0xC80F6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KSVR_Platform_Base _instance;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool IsInitalized;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string Username;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string UniqueID;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string ProfileImageUrl;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static List<string> FriendsOnline;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static List<string> CompletedAchievements;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static string m_ReachabilityText;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetworkReachability m_lastNetworkStatus;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isRunning;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool IsConnectedToInternet;

	[Token(Token = "0x1700001B")]
	public static KSVR_Platform_Base Instance
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xC803B8", Offset = "0xC803B8", VA = "0xC803B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000A")]
	public event EventHandler OnPlatformConnectedEvent
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xC804D8", Offset = "0xC804D8", VA = "0xC804D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9052B0", Offset = "0x9052B0")]
		add
		{
		}
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xC805C4", Offset = "0xC805C4", VA = "0xC805C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9052C0", Offset = "0x9052C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event NetworkConnected OnNetworkConnected
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xC806D8", Offset = "0xC806D8", VA = "0xC806D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9052D0", Offset = "0x9052D0")]
		add
		{
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xC807C4", Offset = "0xC807C4", VA = "0xC807C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9052E0", Offset = "0x9052E0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event NetworkDisconnected OnInternetDisconnected
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xC808B0", Offset = "0xC808B0", VA = "0xC808B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9052F0", Offset = "0x9052F0")]
		add
		{
		}
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xC8099C", Offset = "0xC8099C", VA = "0xC8099C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905300", Offset = "0x905300")]
		remove
		{
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xC806B0", Offset = "0xC806B0", VA = "0xC806B0", Slot = "4")]
	protected virtual void OnPlatformConnected(EventArgs e)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xC806D4", Offset = "0xC806D4", VA = "0xC806D4", Slot = "5")]
	public virtual void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xC80A88", Offset = "0xC80A88", VA = "0xC80A88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905310", Offset = "0x905310")]
	public IEnumerator CheckInternetConnectivitity()
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xC80B28", Offset = "0xC80B28", VA = "0xC80B28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xC80B30", Offset = "0xC80B30", VA = "0xC80B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905374", Offset = "0x905374")]
	public IEnumerator CheckConnection(string url)
	{
		return null;
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xC80BF4", Offset = "0xC80BF4", VA = "0xC80BF4", Slot = "6")]
	public virtual bool IsEntitled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xC80BFC", Offset = "0xC80BFC", VA = "0xC80BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xC80C74", Offset = "0xC80C74", VA = "0xC80C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xC80C78", Offset = "0xC80C78", VA = "0xC80C78")]
	public KSVR_Platform_Base()
	{
	}
}
[Token(Token = "0x2000055")]
public class KSVR_Platform_Oculus : KSVR_Platform_Base
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private User m_user;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UserList m_friendlist;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xC81A30", Offset = "0xC81A30", VA = "0xC81A30")]
	private void GetLoggedInFriendsCallback(Message<UserList> message)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xC81D7C", Offset = "0xC81D7C", VA = "0xC81D7C", Slot = "5")]
	public override void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC81D88", Offset = "0xC81D88", VA = "0xC81D88")]
	private void GetAchievementsCallback(Message<AchievementProgressList> progressList)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC8209C", Offset = "0xC8209C", VA = "0xC8209C")]
	private void GetLoggedInUserCallback(Message<User> message)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xC823CC", Offset = "0xC823CC", VA = "0xC823CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xC824D4", Offset = "0xC824D4", VA = "0xC824D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xC824D8", Offset = "0xC824D8", VA = "0xC824D8")]
	public KSVR_Platform_Oculus()
	{
	}
}
[Token(Token = "0x2000056")]
public class KSVR_Platform_Steam : KSVR_Platform_Base
{
	[Token(Token = "0x600028C")]
	[Address(RVA = "0xC82548", Offset = "0xC82548", VA = "0xC82548")]
	private void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xC8254C", Offset = "0xC8254C", VA = "0xC8254C")]
	private void Update()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xC82550", Offset = "0xC82550", VA = "0xC82550")]
	public KSVR_Platform_Steam()
	{
	}
}
[Token(Token = "0x2000057")]
[ExecuteInEditMode]
public class LineFromChildPoints : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool PlaceInEditor;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xD31610", Offset = "0xD31610", VA = "0xD31610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xD31688", Offset = "0xD31688", VA = "0xD31688")]
	private void CalcBoundary()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xD317B0", Offset = "0xD317B0", VA = "0xD317B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xD318F0", Offset = "0xD318F0", VA = "0xD318F0")]
	public LineFromChildPoints()
	{
	}
}
[Token(Token = "0x2000058")]
public class LoadingPaintSpinner : MonoBehaviour
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Root;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LoadingPaintSpinner _instance;

	[Token(Token = "0x1700001C")]
	public static LoadingPaintSpinner Instance
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xD33234", Offset = "0xD33234", VA = "0xD33234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xD33300", Offset = "0xD33300", VA = "0xD33300")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xD33308", Offset = "0xD33308", VA = "0xD33308")]
	public void SetVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xD33340", Offset = "0xD33340", VA = "0xD33340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xD33344", Offset = "0xD33344", VA = "0xD33344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xD33348", Offset = "0xD33348", VA = "0xD33348")]
	public LoadingPaintSpinner()
	{
	}
}
[Token(Token = "0x2000059")]
public class LoadSavedArtwork : MonoBehaviour
{
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6EC4", Offset = "0x8F6EC4")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadSavedArtwork <>4__this;

		[Token(Token = "0x17000395")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0xD331BC", Offset = "0xD331BC", VA = "0xD331BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0xD3322C", Offset = "0xD3322C", VA = "0xD3322C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0xD33088", Offset = "0xD33088", VA = "0xD33088")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0xD330C0", Offset = "0xD330C0", VA = "0xD330C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0xD330C4", Offset = "0xD330C4", VA = "0xD330C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0xD331C4", Offset = "0xD331C4", VA = "0xD331C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ArtworkFolder;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xD33014", Offset = "0xD33014", VA = "0xD33014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9053D8", Offset = "0x9053D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xD330B4", Offset = "0xD330B4", VA = "0xD330B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xD330B8", Offset = "0xD330B8", VA = "0xD330B8")]
	public LoadSavedArtwork()
	{
	}
}
[Token(Token = "0x200005A")]
public class LobbyTV : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6ED4", Offset = "0x8F6ED4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__3_0;

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xD338DC", Offset = "0xD338DC", VA = "0xD338DC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xD338E4", Offset = "0xD338E4", VA = "0xD338E4")]
		internal bool <Start>b__3_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6EE4", Offset = "0x8F6EE4")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyTV <>4__this;

		[Token(Token = "0x17000397")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0xD33C00", Offset = "0xD33C00", VA = "0xD33C00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0xD33C70", Offset = "0xD33C70", VA = "0xD33C70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0xD3366C", Offset = "0xD3366C", VA = "0xD3366C")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0xD3397C", Offset = "0xD3397C", VA = "0xD3397C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0xD33980", Offset = "0xD33980", VA = "0xD33980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0xD33C08", Offset = "0xD33C08", VA = "0xD33C08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6EF4", Offset = "0x8F6EF4")]
	private sealed class <StartSlideShow>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyTV <>4__this;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x17000399")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0xD3473C", Offset = "0xD3473C", VA = "0xD3473C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0xD347AC", Offset = "0xD347AC", VA = "0xD347AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0xD337C8", Offset = "0xD337C8", VA = "0xD337C8")]
		[DebuggerHidden]
		public <StartSlideShow>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0xD33C78", Offset = "0xD33C78", VA = "0xD33C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xD33C7C", Offset = "0xD33C7C", VA = "0xD33C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xD34744", Offset = "0xD34744", VA = "0xD34744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image TVBackgroundImage;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material TVBackgroundMaterial;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text Username;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Dictionary<string, object>> m_ArtworkEntries;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float TimeBetweenImages;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text TimeText;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentAlpha;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeSpeed;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DateTime dateTime;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xD335F8", Offset = "0xD335F8", VA = "0xD335F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90543C", Offset = "0x90543C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xD33698", Offset = "0xD33698", VA = "0xD33698")]
	private void KingsprayMongoDB_OnGetArtworkEntriesComplete(List<Dictionary<string, object>> entries)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xD33754", Offset = "0xD33754", VA = "0xD33754")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9054A0", Offset = "0x9054A0")]
	private IEnumerator StartSlideShow()
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xD337F4", Offset = "0xD337F4", VA = "0xD337F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xD337F8", Offset = "0xD337F8", VA = "0xD337F8")]
	public LobbyTV()
	{
	}
}
[Token(Token = "0x200005B")]
public class LocalizedText : MonoBehaviour
{
	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xD347B4", Offset = "0xD347B4", VA = "0xD347B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xD347B8", Offset = "0xD347B8", VA = "0xD347B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xD347BC", Offset = "0xD347BC", VA = "0xD347BC")]
	public LocalizedText()
	{
	}
}
[Token(Token = "0x200005C")]
public class Battleground : MonoBehaviour
{
	[Token(Token = "0x2000535")]
	public enum PlayerState
	{
		[Token(Token = "0x4001DFC")]
		NONE,
		[Token(Token = "0x4001DFD")]
		PLAYER_ONE,
		[Token(Token = "0x4001DFE")]
		PLAYER_TWO,
		[Token(Token = "0x4001DFF")]
		SPECTATOR
	}

	[Serializable]
	[Token(Token = "0x2000536")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F04", Offset = "0x8F6F04")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__19_0;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__19_1;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<BattlegroundPlayer, bool> <>9__29_0;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<BattlegroundPlayer, bool> <>9__29_1;

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0xB2EC10", Offset = "0xB2EC10", VA = "0xB2EC10")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0xB2EC18", Offset = "0xB2EC18", VA = "0xB2EC18")]
		internal bool <Start>b__19_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xB2ECB0", Offset = "0xB2ECB0", VA = "0xB2ECB0")]
		internal bool <Start>b__19_1()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xB2ED28", Offset = "0xB2ED28", VA = "0xB2ED28")]
		internal bool <UpdateGameState>b__29_0(BattlegroundPlayer s)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xB2ED5C", Offset = "0xB2ED5C", VA = "0xB2ED5C")]
		internal bool <UpdateGameState>b__29_1(BattlegroundPlayer s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000537")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F14", Offset = "0x8F6F14")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Battleground <>4__this;

		[Token(Token = "0x1700039B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0xB2F5A0", Offset = "0xB2F5A0", VA = "0xB2F5A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0xB2F610", Offset = "0xB2F610", VA = "0xB2F610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0xB2C854", Offset = "0xB2C854", VA = "0xB2C854")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xB2F228", Offset = "0xB2F228", VA = "0xB2F228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0xB2F22C", Offset = "0xB2F22C", VA = "0xB2F22C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0xB2F5A8", Offset = "0xB2F5A8", VA = "0xB2F5A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F24", Offset = "0x8F6F24")]
	private sealed class <StartBombingChallange>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Battleground <>4__this;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <p1Coll>5__2;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <p1Col2>5__3;

		[Token(Token = "0x1700039D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0xB2FB34", Offset = "0xB2FB34", VA = "0xB2FB34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0xB2FBA4", Offset = "0xB2FBA4", VA = "0xB2FBA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0xB2E7B0", Offset = "0xB2E7B0", VA = "0xB2E7B0")]
		[DebuggerHidden]
		public <StartBombingChallange>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xB2F618", Offset = "0xB2F618", VA = "0xB2F618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0xB2F61C", Offset = "0xB2F61C", VA = "0xB2F61C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xB2FB3C", Offset = "0xB2FB3C", VA = "0xB2FB3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000539")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F34", Offset = "0x8F6F34")]
	private sealed class <PlayerCountDownAudio>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Battleground <>4__this;

		[Token(Token = "0x1700039F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0xB2F1B0", Offset = "0xB2F1B0", VA = "0xB2F1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0xB2F220", Offset = "0xB2F220", VA = "0xB2F220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0xB2E850", Offset = "0xB2E850", VA = "0xB2E850")]
		[DebuggerHidden]
		public <PlayerCountDownAudio>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xB2F060", Offset = "0xB2F060", VA = "0xB2F060", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0xB2F064", Offset = "0xB2F064", VA = "0xB2F064", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0xB2F1B8", Offset = "0xB2F1B8", VA = "0xB2F1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F44", Offset = "0x8F6F44")]
	private sealed class <StartCooldown>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Battleground <>4__this;

		[Token(Token = "0x170003A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0xB2FDFC", Offset = "0xB2FDFC", VA = "0xB2FDFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0xB2FE6C", Offset = "0xB2FE6C", VA = "0xB2FE6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0xB2E87C", Offset = "0xB2E87C", VA = "0xB2E87C")]
		[DebuggerHidden]
		public <StartCooldown>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xB2FBAC", Offset = "0xB2FBAC", VA = "0xB2FBAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0xB2FBB0", Offset = "0xB2FBB0", VA = "0xB2FBB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0xB2FE04", Offset = "0xB2FE04", VA = "0xB2FE04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F54", Offset = "0x8F6F54")]
	private sealed class <LoadProfilePic>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Battleground <>4__this;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image profileImage;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x170003A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0xB2EFE8", Offset = "0xB2EFE8", VA = "0xB2EFE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0xB2F058", Offset = "0xB2F058", VA = "0xB2F058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0xB2E8A8", Offset = "0xB2E8A8", VA = "0xB2E8A8")]
		[DebuggerHidden]
		public <LoadProfilePic>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xB2ED90", Offset = "0xB2ED90", VA = "0xB2ED90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0xB2ED94", Offset = "0xB2ED94", VA = "0xB2ED94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xB2EFF0", Offset = "0xB2EFF0", VA = "0xB2EFF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] PlayerOneName;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] PlayerOneProfile;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text[] PlayerTwoName;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] PlayerTwoProfile;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject PlayerOneTrigger;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PlayerTwoTrigger;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SelectGameTimePanel;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject YesNoPanel;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject FinishedStats;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ClockTimer GetReadyTimer;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ClockTimer[] GameTimers;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshCollider[] playerPaintColliders;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Battleground _instance;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BattlegroundPlayer MyPlayer;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<BattlegroundPlayer> m_RegisteredPlayers;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BattlegroundPlayer BattlePlayerOne;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BattlegroundPlayer BattlePlayerTwo;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool inCooldown;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool areWeReady;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool challangeIsRunning;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_SessionTime;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float CoolDownTime;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isTimerActive;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_CurrentTime;

	[Token(Token = "0x1700001D")]
	public static Battleground Instance
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xB2C50C", Offset = "0xB2C50C", VA = "0xB2C50C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xB2C5D8", Offset = "0xB2C5D8", VA = "0xB2C5D8")]
	public void RegisterPlayer(BattlegroundPlayer player)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB2C6DC", Offset = "0xB2C6DC", VA = "0xB2C6DC")]
	public void UnregisterPlayer(BattlegroundPlayer player)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB2C7E0", Offset = "0xB2C7E0", VA = "0xB2C7E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905504", Offset = "0x905504")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB2C880", Offset = "0xB2C880", VA = "0xB2C880")]
	private void Instance_OnJoinedRoomEvent()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB2CAD4", Offset = "0xB2CAD4", VA = "0xB2CAD4")]
	public void PlayerOneEnteredTrigger()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB2CB98", Offset = "0xB2CB98", VA = "0xB2CB98")]
	public void PlayerOneLeftTrigger()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB2CC70", Offset = "0xB2CC70", VA = "0xB2CC70")]
	public void PlayerTwoEnteredTrigger()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB2CD34", Offset = "0xB2CD34", VA = "0xB2CD34")]
	public void PlayerTwoLeftTrigger()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xB2CE0C", Offset = "0xB2CE0C", VA = "0xB2CE0C")]
	public void UpdateGameState()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xB2DE30", Offset = "0xB2DE30", VA = "0xB2DE30")]
	public void StartCooldownProcess()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xB2E068", Offset = "0xB2E068", VA = "0xB2E068")]
	public void SetCurrentTime(float time)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xB2E128", Offset = "0xB2E128", VA = "0xB2E128")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB2E28C", Offset = "0xB2E28C", VA = "0xB2E28C")]
	public void StartBattleSession(float time)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB2E330", Offset = "0xB2E330", VA = "0xB2E330")]
	public void SetSessionTimer(float time)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xB2E4D0", Offset = "0xB2E4D0", VA = "0xB2E4D0")]
	public void GoBackToTimeSelect()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xB2E65C", Offset = "0xB2E65C", VA = "0xB2E65C")]
	public void StartBomb()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xB2E2BC", Offset = "0xB2E2BC", VA = "0xB2E2BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905568", Offset = "0x905568")]
	private IEnumerator StartBombingChallange()
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xB2E7DC", Offset = "0xB2E7DC", VA = "0xB2E7DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9055CC", Offset = "0x9055CC")]
	private IEnumerator PlayerCountDownAudio()
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xB2DFF4", Offset = "0xB2DFF4", VA = "0xB2DFF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905630", Offset = "0x905630")]
	private IEnumerator StartCooldown()
	{
		return null;
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xB2DD84", Offset = "0xB2DD84", VA = "0xB2DD84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905694", Offset = "0x905694")]
	private IEnumerator LoadProfilePic(string url, Image profileImage)
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xB2E8D4", Offset = "0xB2E8D4", VA = "0xB2E8D4")]
	public void StartMasterTimer()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xB2E8E0", Offset = "0xB2E8E0", VA = "0xB2E8E0")]
	public void StopMasterTimer()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xB2E8E8", Offset = "0xB2E8E8", VA = "0xB2E8E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xB2EB34", Offset = "0xB2EB34", VA = "0xB2EB34")]
	public Battleground()
	{
	}
}
[Token(Token = "0x200005D")]
public class BattlegroundPlayer : MonoBehaviourPun, IPunObservable
{
	[Serializable]
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F64", Offset = "0x8F6F64")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__6_0;

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0xB3047C", Offset = "0xB3047C", VA = "0xB3047C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0xB30484", Offset = "0xB30484", VA = "0xB30484")]
		internal bool <Start>b__6_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F74", Offset = "0x8F6F74")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BattlegroundPlayer <>4__this;

		[Token(Token = "0x170003A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0xB30648", Offset = "0xB30648", VA = "0xB30648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0xB306B8", Offset = "0xB306B8", VA = "0xB306B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0xB2FEE8", Offset = "0xB2FEE8", VA = "0xB2FEE8")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0xB304F8", Offset = "0xB304F8", VA = "0xB304F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0xB304FC", Offset = "0xB304FC", VA = "0xB304FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0xB30650", Offset = "0xB30650", VA = "0xB30650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ID;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ProfileUrl;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Username;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Battleground.PlayerState PlayerState;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsBattleActive;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TimeRemaining;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xB2FE74", Offset = "0xB2FE74", VA = "0xB2FE74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9056F8", Offset = "0x9056F8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xB2FF14", Offset = "0xB2FF14", VA = "0xB2FF14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xB2FF48", Offset = "0xB2FF48", VA = "0xB2FF48")]
	[PunRPC]
	public void SetUIVisibility(bool showTimeSelect, bool showYesNo)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xB2FFCC", Offset = "0xB2FFCC", VA = "0xB2FFCC")]
	[PunRPC]
	public void SetSessionTime(float sessionTime)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xB30018", Offset = "0xB30018", VA = "0xB30018")]
	[PunRPC]
	public void UpdateGameTime(float time)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xB30054", Offset = "0xB30054", VA = "0xB30054", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xB30408", Offset = "0xB30408", VA = "0xB30408")]
	public BattlegroundPlayer()
	{
	}
}
[Token(Token = "0x200005E")]
public class BattlegroundTrigger : MonoBehaviour
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ColliderSearchString;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xB306C0", Offset = "0xB306C0", VA = "0xB306C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xB306C4", Offset = "0xB306C4", VA = "0xB306C4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xB30730", Offset = "0xB30730", VA = "0xB30730")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xB3079C", Offset = "0xB3079C", VA = "0xB3079C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xB307A0", Offset = "0xB307A0", VA = "0xB307A0")]
	public BattlegroundTrigger()
	{
	}
}
[Token(Token = "0x200005F")]
public class NetworkDummyCommander : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F84", Offset = "0x8F6F84")]
	private sealed class <SetSleepingAsync>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkDummyCommander <>4__this;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isSleeping;

		[Token(Token = "0x170003A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0xC1AFBC", Offset = "0xC1AFBC", VA = "0xC1AFBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0xC1B02C", Offset = "0xC1B02C", VA = "0xC1B02C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0xC189F0", Offset = "0xC189F0", VA = "0xC189F0")]
		[DebuggerHidden]
		public <SetSleepingAsync>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0xC1AEF8", Offset = "0xC1AEF8", VA = "0xC1AEF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0xC1AEFC", Offset = "0xC1AEFC", VA = "0xC1AEFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0xC1AFC4", Offset = "0xC1AFC4", VA = "0xC1AFC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Head;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LeftHand;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject RightHand;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator m_LeftHandAnimator;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator m_RightHandAnimator;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<OnlineTextureOverride> OnlineItemTextureOverrides;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_PhoneModel;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool IsRightHanded;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ProfileNameTag NameTag;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> MaskFilters;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SprayCan SprayCan;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform SprayCanLHAttach;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform SprayCanRHAttach;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform PhoneLHAttach;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform PhoneRHAttach;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource AudioSource;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 junkPosition;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion junkRotation;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string OculusUserID;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string OculusUsername;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string OculusProfilePicUrl;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool CanOverride;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int overrideExtraFrames;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool hasNetworked;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public KSVR_Hand LeftHandModel;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public KSVR_Hand RightHandModel;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool ReadyPlayerOne;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private PaintManager pMI;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float durationTime;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float lastTime;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 hLT;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 hT;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 lhLT;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lhT;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 rhLT;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 rhT;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Quaternion hLR;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Quaternion hR;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Quaternion lhLR;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Quaternion lhR;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Quaternion rhLR;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Quaternion rhR;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float pressure;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject SleepFX;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool m_hasLoadedOnlineItemTextures;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
	public bool IsSleeping;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Animator Animator;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool hasPlayedTeleportFX;

	[Token(Token = "0x1700001E")]
	public int ViewID
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xC156E4", Offset = "0xC156E4", VA = "0xC156E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC15718", Offset = "0xC15718", VA = "0xC15718")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC16814", Offset = "0xC16814", VA = "0xC16814")]
	public void UpdateInfo(string userId, string userName, string profileUrl)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xC16964", Offset = "0xC16964", VA = "0xC16964")]
	public void LoadOnlineItemTexturesOverrides()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xC16B14", Offset = "0xC16B14", VA = "0xC16B14")]
	public void SetHandiness(bool rightHanded)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xC171A8", Offset = "0xC171A8", VA = "0xC171A8")]
	[PunRPC]
	public void SyncHandiness(bool rightHanded, bool sendBack, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xC17344", Offset = "0xC17344", VA = "0xC17344")]
	[PunRPC]
	public void SyncSprayCanSettings(int capIndex, float metallic, float r, float g, float b, bool sendBack, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xC1782C", Offset = "0xC1782C", VA = "0xC1782C")]
	[PunRPC]
	public void SyncPhoneVisibility(bool visible, bool sendBack, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xC17A10", Offset = "0xC17A10", VA = "0xC17A10")]
	[PunRPC]
	public void SyncGrabPose(float value, bool sendBack, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xC17C80", Offset = "0xC17C80", VA = "0xC17C80")]
	[PunRPC]
	public void SyncHandPose(bool isRightHand, string pose, bool sendBack, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xC17EF0", Offset = "0xC17EF0", VA = "0xC17EF0")]
	[PunRPC]
	public void SetSleeping(bool isSleeping)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC17FBC", Offset = "0xC17FBC", VA = "0xC17FBC")]
	[PunRPC]
	public void Teleport(float newX, float newY, float newZ)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC18468", Offset = "0xC18468", VA = "0xC18468")]
	[PunRPC]
	public void SyncUserDetails(string userID, string userName, string profileUrl, bool isRightHanded, int maskFilter, bool isSleeping, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xC18954", Offset = "0xC18954", VA = "0xC18954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90580C", Offset = "0x90580C")]
	private IEnumerator SetSleepingAsync(bool isSleeping)
	{
		return null;
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xC18A1C", Offset = "0xC18A1C", VA = "0xC18A1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xC18FD0", Offset = "0xC18FD0", VA = "0xC18FD0")]
	public void OverrideCanTransform(Vector3 handPos, Quaternion handRot)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xC181A4", Offset = "0xC181A4", VA = "0xC181A4")]
	private void TeleportMyGrabbaleToo(ViveGrip_Grabber vGG, Vector3 theDifference)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xC190A0", Offset = "0xC190A0", VA = "0xC190A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xC198B4", Offset = "0xC198B4", VA = "0xC198B4")]
	private void Log(string log)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xC1648C", Offset = "0xC1648C", VA = "0xC1648C")]
	public void GenericRPC(string typeName, string FunctionName, RpcTarget target = RpcTarget.AllViaServer, params object[] parameters)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xC198E8", Offset = "0xC198E8", VA = "0xC198E8")]
	public void GenericRPC(string typeName, string FunctionName, Player target, params object[] parameters)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xC19C70", Offset = "0xC19C70", VA = "0xC19C70")]
	[PunRPC]
	public void GenericRPCReceiver(string typeName, string FunctionName, byte[] cereal)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xC1A1E8", Offset = "0xC1A1E8", VA = "0xC1A1E8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xC1ACFC", Offset = "0xC1ACFC", VA = "0xC1ACFC")]
	public NetworkDummyCommander()
	{
	}
}
[Token(Token = "0x2000060")]
public class BrushStroke
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Id;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Point;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 TexCoord;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Distance;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector4 Color;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool First;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Metallic;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float canAngle;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 CanPos;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Quaternion CanRot;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 HandPos;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Quaternion HandRot;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB41A64", Offset = "0xB41A64", VA = "0xB41A64")]
	public BrushStroke()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xB41A6C", Offset = "0xB41A6C", VA = "0xB41A6C")]
	public BrushStroke(int id, Vector3 point, Vector2 texcoord, float distance, Vector4 color)
	{
	}
}
[Token(Token = "0x2000061")]
public class NetworkCanSettings
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int CapindexID;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Metallic;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Color;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool Changed;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Pressure;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool RightHanded;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC156A4", Offset = "0xC156A4", VA = "0xC156A4")]
	public NetworkCanSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000062")]
public class NetworkBrushStroke
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Id;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Point_Color_x;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Point_Color_y;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Point_Color_z;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Pressure_CapIndex;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TexCoord_x;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TexCoord_y;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Distance_Metallic;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float canAngle;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool First;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool SettingsChange;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CanPos_x;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float CanPos_y;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float CanPos_z;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float CanRot_x;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float CanRot_y;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CanRot_z;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float CanRot_w;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public SerializableQuaternion HandRot;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public SerializableVector3 HandPos;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xC15620", Offset = "0xC15620", VA = "0xC15620")]
	public NetworkBrushStroke()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xC15628", Offset = "0xC15628", VA = "0xC15628")]
	public NetworkBrushStroke(int id, Vector3 point_color, Vector2 texcoord, float distance_metallic, float pressure_capindex, float canAngle = 0f)
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class BrushSprite
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Id;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SerializableVector3 Pos;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Brush;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SerializableVector3 Scale;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Last;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float size;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float LastBrushSize;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float alpha;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xB41A5C", Offset = "0xB41A5C", VA = "0xB41A5C")]
	public BrushSprite()
	{
	}
}
[Serializable]
[Token(Token = "0x2000064")]
public class NetworkPlayerPresets
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Owner;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool flashlight;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool spraycan;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool goSpraySomething;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float r;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float g;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float b;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float a;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool phone;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool FrontCamera;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool BackCamera;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool TakingPhotos;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float x;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float y;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float z;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float w;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public long oculusID;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool southPaw;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xC26344", Offset = "0xC26344", VA = "0xC26344")]
	public NetworkPlayerPresets()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public class GrabbableSyncPresets
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string path;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SerializableVector3 position;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SerializableVector4 rotation;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x10114A0", Offset = "0x10114A0", VA = "0x10114A0")]
	public GrabbableSyncPresets()
	{
	}
}
[Token(Token = "0x2000066")]
public class NetworkInstantiate : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string NetworkPrefabName;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xC1B034", Offset = "0xC1B034", VA = "0xC1B034")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xC1B1AC", Offset = "0xC1B1AC", VA = "0xC1B1AC")]
	private void NetworkManager_OnConnectedFinishedEvent()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xC1B3F4", Offset = "0xC1B3F4", VA = "0xC1B3F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC1B3F8", Offset = "0xC1B3F8", VA = "0xC1B3F8")]
	public NetworkInstantiate()
	{
	}
}
[Token(Token = "0x2000067")]
public class NetworkManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200053F")]
	public delegate void JoinedRoom();

	[Token(Token = "0x2000540")]
	public delegate void JoinedServer();

	[Token(Token = "0x2000541")]
	public delegate void OnConnectedFinished();

	[Token(Token = "0x2000542")]
	public struct NetworkRealmDetails
	{
		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902E8C", Offset = "0x902E8C")]
		private string <RoomName>k__BackingField;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902E9C", Offset = "0x902E9C")]
		private string <UserID>k__BackingField;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902EAC", Offset = "0x902EAC")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902EBC", Offset = "0x902EBC")]
		private string <ProfileUrl>k__BackingField;

		[Token(Token = "0x170003A9")]
		public string RoomName
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x9A4CAC", Offset = "0x9A4CAC", VA = "0x9A4CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912340", Offset = "0x912340")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x9A4CB4", Offset = "0x9A4CB4", VA = "0x9A4CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912350", Offset = "0x912350")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public string UserID
		{
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x9A4CBC", Offset = "0x9A4CBC", VA = "0x9A4CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912360", Offset = "0x912360")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x9A4CC4", Offset = "0x9A4CC4", VA = "0x9A4CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912370", Offset = "0x912370")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public string UserName
		{
			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0x9A4CCC", Offset = "0x9A4CCC", VA = "0x9A4CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912380", Offset = "0x912380")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x9A4CD4", Offset = "0x9A4CD4", VA = "0x9A4CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912390", Offset = "0x912390")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public string ProfileUrl
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x9A4CDC", Offset = "0x9A4CDC", VA = "0x9A4CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9123A0", Offset = "0x9123A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x9A4CE4", Offset = "0x9A4CE4", VA = "0x9A4CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9123B0", Offset = "0x9123B0")]
			set
			{
			}
		}
	}

	[Token(Token = "0x2000543")]
	public delegate void PlayerEnteredRoom(Player newPlayer);

	[Token(Token = "0x2000544")]
	public delegate void PlayerLeftRoom(Player player);

	[Token(Token = "0x2000545")]
	public struct UserDetails
	{
		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902ECC", Offset = "0x902ECC")]
		private string <UserID>k__BackingField;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902EDC", Offset = "0x902EDC")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902EEC", Offset = "0x902EEC")]
		private string <ProfileUrl>k__BackingField;

		[Token(Token = "0x170003AD")]
		public string UserID
		{
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x9A4DC0", Offset = "0x9A4DC0", VA = "0x9A4DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9123C0", Offset = "0x9123C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x9A4DC8", Offset = "0x9A4DC8", VA = "0x9A4DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9123D0", Offset = "0x9123D0")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public string UserName
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x9A4DD0", Offset = "0x9A4DD0", VA = "0x9A4DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9123E0", Offset = "0x9123E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x9A4DD8", Offset = "0x9A4DD8", VA = "0x9A4DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9123F0", Offset = "0x9123F0")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public string ProfileUrl
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x9A4DE0", Offset = "0x9A4DE0", VA = "0x9A4DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912400", Offset = "0x912400")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0x9A4DE8", Offset = "0x9A4DE8", VA = "0x9A4DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x912410", Offset = "0x912410")]
			set
			{
			}
		}
	}

	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F94", Offset = "0x8F6F94")]
	private sealed class <ConnectToRoom>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LevelName;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string UserID;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Username;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NetworkManager <>4__this;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__2;

		[Token(Token = "0x170003B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0xC23340", Offset = "0xC23340", VA = "0xC23340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0xC233B0", Offset = "0xC233B0", VA = "0xC233B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0xC1B8AC", Offset = "0xC1B8AC", VA = "0xC1B8AC")]
		[DebuggerHidden]
		public <ConnectToRoom>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0xC229E4", Offset = "0xC229E4", VA = "0xC229E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xC229E8", Offset = "0xC229E8", VA = "0xC229E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xC23348", Offset = "0xC23348", VA = "0xC23348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6FA4", Offset = "0x8F6FA4")]
	private sealed class <SetupAndLoadLevel>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkManager <>4__this;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string LevelName;

		[Token(Token = "0x170003B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0xC24F58", Offset = "0xC24F58", VA = "0xC24F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0xC24FC8", Offset = "0xC24FC8", VA = "0xC24FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0xC1B970", Offset = "0xC1B970", VA = "0xC1B970")]
		[DebuggerHidden]
		public <SetupAndLoadLevel>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0xC24C30", Offset = "0xC24C30", VA = "0xC24C30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xC24C34", Offset = "0xC24C34", VA = "0xC24C34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0xC24F60", Offset = "0xC24F60", VA = "0xC24F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6FB4", Offset = "0x8F6FB4")]
	private sealed class <ConnectToServerAsync>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkManager <>4__this;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170003B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0xC23C14", Offset = "0xC23C14", VA = "0xC23C14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xC23C84", Offset = "0xC23C84", VA = "0xC23C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0xC1CFE8", Offset = "0xC1CFE8", VA = "0xC1CFE8")]
		[DebuggerHidden]
		public <ConnectToServerAsync>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xC233B8", Offset = "0xC233B8", VA = "0xC233B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xC233BC", Offset = "0xC233BC", VA = "0xC233BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xC23C1C", Offset = "0xC23C1C", VA = "0xC23C1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6FC4", Offset = "0x8F6FC4")]
	private sealed class <LeaveRoomAsync>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170003B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0xC23EDC", Offset = "0xC23EDC", VA = "0xC23EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0xC23F4C", Offset = "0xC23F4C", VA = "0xC23F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xC1D074", Offset = "0xC1D074", VA = "0xC1D074")]
		[DebuggerHidden]
		public <LeaveRoomAsync>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0xC23C8C", Offset = "0xC23C8C", VA = "0xC23C8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xC23C90", Offset = "0xC23C90", VA = "0xC23C90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xC23EE4", Offset = "0xC23EE4", VA = "0xC23EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6FD4", Offset = "0x8F6FD4")]
	private sealed class <UpdateOnlineStatus>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkManager <>4__this;

		[Token(Token = "0x170003B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0xC260F4", Offset = "0xC260F4", VA = "0xC260F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0xC26164", Offset = "0xC26164", VA = "0xC26164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0xC1F88C", Offset = "0xC1F88C", VA = "0xC1F88C")]
		[DebuggerHidden]
		public <UpdateOnlineStatus>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0xC25FD4", Offset = "0xC25FD4", VA = "0xC25FD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0xC25FD8", Offset = "0xC25FD8", VA = "0xC25FD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0xC260FC", Offset = "0xC260FC", VA = "0xC260FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6FE4", Offset = "0x8F6FE4")]
	private sealed class <>c__DisplayClass100_0
	{
		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject player;

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0xC2296C", Offset = "0xC2296C", VA = "0xC2296C")]
		public <>c__DisplayClass100_0()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0xC22974", Offset = "0xC22974", VA = "0xC22974")]
		internal bool <SpawnAndSyncNetworkPawn>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6FF4", Offset = "0x8F6FF4")]
	private sealed class <SpawnAndSyncNetworkPawn>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkManager <>4__this;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass100_0 <>8__1;

		[Token(Token = "0x170003BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0xC259AC", Offset = "0xC259AC", VA = "0xC259AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0xC25A1C", Offset = "0xC25A1C", VA = "0xC25A1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0xC1FC38", Offset = "0xC1FC38", VA = "0xC1FC38")]
		[DebuggerHidden]
		public <SpawnAndSyncNetworkPawn>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0xC24FD0", Offset = "0xC24FD0", VA = "0xC24FD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xC24FD4", Offset = "0xC24FD4", VA = "0xC24FD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xC259B4", Offset = "0xC259B4", VA = "0xC259B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7004", Offset = "0x8F7004")]
	private sealed class <SyncGrabbables>d__104 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkManager <>4__this;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ViveGrip_Grabbable>.Enumerator <>7__wrap1;

		[Token(Token = "0x170003BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0xC25F5C", Offset = "0xC25F5C", VA = "0xC25F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0xC25FCC", Offset = "0xC25FCC", VA = "0xC25FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0xC1FD80", Offset = "0xC1FD80", VA = "0xC1FD80")]
		[DebuggerHidden]
		public <SyncGrabbables>d__104(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0xC25A24", Offset = "0xC25A24", VA = "0xC25A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xC25A98", Offset = "0xC25A98", VA = "0xC25A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0xC25A40", Offset = "0xC25A40", VA = "0xC25A40")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0xC25F64", Offset = "0xC25F64", VA = "0xC25F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7014", Offset = "0x8F7014")]
	private sealed class <SendUserCloudPaint>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkManager <>4__this;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool sendToAll;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int networkID;

		[Token(Token = "0x170003BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0xC24BB8", Offset = "0xC24BB8", VA = "0xC24BB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0xC24C28", Offset = "0xC24C28", VA = "0xC24C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xC1FF9C", Offset = "0xC1FF9C", VA = "0xC1FF9C")]
		[DebuggerHidden]
		public <SendUserCloudPaint>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0xC24214", Offset = "0xC24214", VA = "0xC24214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0xC24218", Offset = "0xC24218", VA = "0xC24218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0xC24BC0", Offset = "0xC24BC0", VA = "0xC24BC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7024", Offset = "0x8F7024")]
	private sealed class <NowGrabThePaintAsync>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkManager <>4__this;

		[Token(Token = "0x170003C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0xC2419C", Offset = "0xC2419C", VA = "0xC2419C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0xC2420C", Offset = "0xC2420C", VA = "0xC2420C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0xC203DC", Offset = "0xC203DC", VA = "0xC203DC")]
		[DebuggerHidden]
		public <NowGrabThePaintAsync>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0xC23F54", Offset = "0xC23F54", VA = "0xC23F54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0xC23F58", Offset = "0xC23F58", VA = "0xC23F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0xC241A4", Offset = "0xC241A4", VA = "0xC241A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool LogDoggin;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string logTitle;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool AlwaysBeNetworking;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool IsConnecting;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject NetworkPlayerPrefab;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public NetworkDummyCommander Me;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NetworkManager _instance;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_NetworkRealm;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_NetworkRealmUsername;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string CloudFolder;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string Bucket;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string CloudBaseURL;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8A00", Offset = "0x8F8A00")]
	private string <NetworkRealmProfile>k__BackingField;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8A10", Offset = "0x8F8A10")]
	private string <NetworkRealmRoomName>k__BackingField;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool AppearOffline;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool ReadyToAcceptRequests;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public byte MaxPlayersPerRoom;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public byte MaxPlayersPerLobby;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool roomJoined;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool roomHasLeft;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	private bool connectedToMaster;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PhotonVoiceNetwork PhotonVoiceNetwork;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Dictionary<int, UserDetails> UserDetailsLookup;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Dictionary<int, NetworkDummyCommander> NetworkPlayers;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Dictionary<Player, NetworkDummyCommander> NetworkLookupPlayers;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float UpdateOnlineStatusDelay;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<ViveGrip_Grabbable> grabbables;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<int> m_PendingDownloadUserList;

	[Token(Token = "0x1700001F")]
	public static NetworkManager Instance
	{
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xC11520", Offset = "0xC11520", VA = "0xC11520")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public string NetworkRealm
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xC11604", Offset = "0xC11604", VA = "0xC11604")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xC1B7B0", Offset = "0xC1B7B0", VA = "0xC1B7B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public string NetworkRealmUsername
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xC14178", Offset = "0xC14178", VA = "0xC14178")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xC1B7B8", Offset = "0xC1B7B8", VA = "0xC1B7B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public string NetworkRealmProfile
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xC1B7C0", Offset = "0xC1B7C0", VA = "0xC1B7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9058E0", Offset = "0x9058E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xC1B7C8", Offset = "0xC1B7C8", VA = "0xC1B7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9058F0", Offset = "0x9058F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public string NetworkRealmRoomName
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xC1B7D0", Offset = "0xC1B7D0", VA = "0xC1B7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905900", Offset = "0x905900")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xC1B7D8", Offset = "0xC1B7D8", VA = "0xC1B7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905910", Offset = "0x905910")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float PingTime
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xC1B99C", Offset = "0xC1B99C", VA = "0xC1B99C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000025")]
	public string CloudPath
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xC1BAB0", Offset = "0xC1BAB0", VA = "0xC1BAB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public bool IsConnected
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xC1CA9C", Offset = "0xC1CA9C", VA = "0xC1CA9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	public bool IsMyRoom
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xC1EFF4", Offset = "0xC1EFF4", VA = "0xC1EFF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public bool IsInGameWithPeople
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xC1FC64", Offset = "0xC1FC64", VA = "0xC1FC64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000D")]
	public event JoinedRoom OnJoinedRoomEvent
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xC1B400", Offset = "0xC1B400", VA = "0xC1B400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905880", Offset = "0x905880")]
		add
		{
		}
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xC1B4EC", Offset = "0xC1B4EC", VA = "0xC1B4EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905890", Offset = "0x905890")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event JoinedServer OnJoinedServer
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xC1B5D8", Offset = "0xC1B5D8", VA = "0xC1B5D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9058A0", Offset = "0x9058A0")]
		add
		{
		}
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xC1B6C4", Offset = "0xC1B6C4", VA = "0xC1B6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9058B0", Offset = "0x9058B0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event OnConnectedFinished OnConnectedFinishedEvent
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xC1B0AC", Offset = "0xC1B0AC", VA = "0xC1B0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9058C0", Offset = "0x9058C0")]
		add
		{
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xC1B2F4", Offset = "0xC1B2F4", VA = "0xC1B2F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9058D0", Offset = "0x9058D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event PlayerEnteredRoom OnPlayerEntered
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xC1DA6C", Offset = "0xC1DA6C", VA = "0xC1DA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905AB0", Offset = "0x905AB0")]
		add
		{
		}
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xC1DB58", Offset = "0xC1DB58", VA = "0xC1DB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905AC0", Offset = "0x905AC0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event PlayerLeftRoom OnPlayerLeft
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xC1DC44", Offset = "0xC1DC44", VA = "0xC1DC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905AD0", Offset = "0x905AD0")]
		add
		{
		}
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xC1DD30", Offset = "0xC1DD30", VA = "0xC1DD30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905AE0", Offset = "0x905AE0")]
		remove
		{
		}
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xC1B7E0", Offset = "0xC1B7E0", VA = "0xC1B7E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905920", Offset = "0x905920")]
	private IEnumerator ConnectToRoom(string LevelName, string UserID, string Username, string ProfileUrl)
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xC1B8D8", Offset = "0xC1B8D8", VA = "0xC1B8D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905984", Offset = "0x905984")]
	private IEnumerator SetupAndLoadLevel(string LevelName, string UserID, string Username, string ProfileUrl)
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xC1BB0C", Offset = "0xC1BB0C", VA = "0xC1BB0C")]
	public string GeneratePersistentCloudPathFromIndex(int index, bool isMask)
	{
		return null;
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xC1BE10", Offset = "0xC1BE10", VA = "0xC1BE10")]
	public string GeneratePersistentCloudURLFromIndex(int index, bool isMask)
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xC1C1FC", Offset = "0xC1C1FC", VA = "0xC1C1FC")]
	public string GeneratePersistentApeCloudPathFromIndex(int index, bool isMask)
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xC1C500", Offset = "0xC1C500", VA = "0xC1C500")]
	public string GeneratePersistentApeCloudURLFromIndex(int index, bool isMask)
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xC1C8EC", Offset = "0xC1C8EC", VA = "0xC1C8EC")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xC1CAFC", Offset = "0xC1CAFC", VA = "0xC1CAFC")]
	public Player GetPlayerByUserId(string userID)
	{
		return null;
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xC1CCA0", Offset = "0xC1CCA0", VA = "0xC1CCA0")]
	public void TurnRoomIntoMultiplayer(string roomName, string userId, string userName, string profilePic)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xC1CF74", Offset = "0xC1CF74", VA = "0xC1CF74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9059E8", Offset = "0x9059E8")]
	private IEnumerator ConnectToServerAsync()
	{
		return null;
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xC1D014", Offset = "0xC1D014", VA = "0xC1D014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905A4C", Offset = "0x905A4C")]
	private IEnumerator LeaveRoomAsync()
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xC1CCB4", Offset = "0xC1CCB4", VA = "0xC1CCB4")]
	public void GotoRoom(string roomName, string userId, string username, string profilepic)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xC1D0A0", Offset = "0xC1D0A0", VA = "0xC1D0A0", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Player target, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xC1D860", Offset = "0xC1D860", VA = "0xC1D860", Slot = "30")]
	public override void OnConnected()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xC1D868", Offset = "0xC1D868", VA = "0xC1D868", Slot = "34")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xC1D870", Offset = "0xC1D870", VA = "0xC1D870", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xC1D8F4", Offset = "0xC1D8F4", VA = "0xC1D8F4")]
	public void CleanPaint(bool unusedBool)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xC1D9BC", Offset = "0xC1D9BC", VA = "0xC1D9BC", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC1DE1C", Offset = "0xC1DE1C", VA = "0xC1DE1C", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC1E68C", Offset = "0xC1E68C", VA = "0xC1E68C", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC16318", Offset = "0xC16318", VA = "0xC16318")]
	public void AddNetworkPlayer(Player player, int userID, NetworkDummyCommander networkDummy)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC18EC8", Offset = "0xC18EC8", VA = "0xC18EC8")]
	public void RemoveNetworkPlayer(int userID, Player player)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC1F06C", Offset = "0xC1F06C", VA = "0xC1F06C")]
	public void OverrideNetworkPlayerCanPosition(int viewID, Vector3 handPos, Quaternion handRot)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC1F208", Offset = "0xC1F208", VA = "0xC1F208", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC1F698", Offset = "0xC1F698", VA = "0xC1F698", Slot = "35")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC1F714", Offset = "0xC1F714", VA = "0xC1F714")]
	public void LeaveRoom()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC1F818", Offset = "0xC1F818", VA = "0xC1F818")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905AF0", Offset = "0x905AF0")]
	private IEnumerator UpdateOnlineStatus()
	{
		return null;
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC1F8B8", Offset = "0xC1F8B8", VA = "0xC1F8B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC1F9E8", Offset = "0xC1F9E8", VA = "0xC1F9E8")]
	private void SceneManager_sceneLoaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC1FB70", Offset = "0xC1FB70", VA = "0xC1FB70")]
	public void SetReady(bool ready)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC1FBC4", Offset = "0xC1FBC4", VA = "0xC1FBC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905B54", Offset = "0x905B54")]
	public IEnumerator SpawnAndSyncNetworkPawn()
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC170B0", Offset = "0xC170B0", VA = "0xC170B0")]
	public void Log(string message)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC1FD0C", Offset = "0xC1FD0C", VA = "0xC1FD0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905BB8", Offset = "0x905BB8")]
	public IEnumerator SyncGrabbables()
	{
		return null;
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC1FDAC", Offset = "0xC1FDAC", VA = "0xC1FDAC")]
	public void RequestPersistentPaint(int viewID)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC1FEEC", Offset = "0xC1FEEC", VA = "0xC1FEEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905C1C", Offset = "0x905C1C")]
	public IEnumerator SendUserCloudPaint(int networkID, bool sendToAll = false)
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xC1FFC8", Offset = "0xC1FFC8", VA = "0xC1FFC8")]
	public void PaintDownloadComplete(int userId)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xC201B0", Offset = "0xC201B0", VA = "0xC201B0")]
	public void EveryoneDownloadedAndReady()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC20368", Offset = "0xC20368", VA = "0xC20368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905C80", Offset = "0x905C80")]
	private IEnumerator NowGrabThePaintAsync()
	{
		return null;
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC20408", Offset = "0xC20408", VA = "0xC20408")]
	public void NowGrabTheCloudPaint()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC20490", Offset = "0xC20490", VA = "0xC20490")]
	public void NetworkGrabStart(int networkID, bool rightHand, string rigidBodyName, float pos_x, float pos_y, float pos_z, float quat_x, float quat_y, float quat_z, float quat_w, float grabberPos_x, float grabberPos_y, float grabberPos_z, float grabberRot_x, float grabberRot_y, float grabberRot_z, float grabberRot_w, float grabbiePos_x, float grabbiePos_y, float grabbiePos_z, float grabbieRot_x, float grabbieRot_y, float grabbieRot_z, float grabbieRot_w)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC20978", Offset = "0xC20978", VA = "0xC20978")]
	public void NetworkGrabStop(int networkID, bool rightHand)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xC20B3C", Offset = "0xC20B3C", VA = "0xC20B3C")]
	public void NetworkGrabStopWithVelocity(int networkID, bool rightHand, float pos_x, float pos_y, float pos_z, float rot_x, float rot_y, float rot_z, float rot_w, float vel_x, float vel_y, float vel_z, float ang_x, float ang_y, float ang_z)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xC20E20", Offset = "0xC20E20", VA = "0xC20E20")]
	public void GetGrabbablePositionAndRotation(int networkID, string name)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC20FDC", Offset = "0xC20FDC", VA = "0xC20FDC")]
	public void SetGrabbablePositionAndRotation(string name, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float rotW)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xC212D4", Offset = "0xC212D4", VA = "0xC212D4")]
	public bool IsNetworkPlayerOnline(string userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC2143C", Offset = "0xC2143C", VA = "0xC2143C", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC18AC4", Offset = "0xC18AC4", VA = "0xC18AC4")]
	public void UnhookEvents()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC21628", Offset = "0xC21628", VA = "0xC21628")]
	private void HookEvents()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC21948", Offset = "0xC21948", VA = "0xC21948")]
	private void Instance_OnTeleportEvent(Vector3 position)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC21B34", Offset = "0xC21B34", VA = "0xC21B34")]
	private void SprayCan_OnCanSettingsChanged(int capIndex, float metallic, float r, float g, float b)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC21F64", Offset = "0xC21F64", VA = "0xC21F64")]
	private void OnPhoneVisibilityChanged(bool visible)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC220E0", Offset = "0xC220E0", VA = "0xC220E0")]
	private void OnRightHandPoseChanged(string pose)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC222F4", Offset = "0xC222F4", VA = "0xC222F4")]
	private void OnLeftHandPoseChanged(string pose)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC22504", Offset = "0xC22504", VA = "0xC22504")]
	private void OnHandGrabPoseChanged(float value)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC2268C", Offset = "0xC2268C", VA = "0xC2268C")]
	private void OnHandsSwitched(bool isRightHanded)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC22808", Offset = "0xC22808", VA = "0xC22808")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC2280C", Offset = "0xC2280C", VA = "0xC2280C")]
	public NetworkManager()
	{
	}
}
[Token(Token = "0x2000068")]
public static class Obfusticator
{
	[Token(Token = "0x2000550")]
	public enum Commands
	{
		[Token(Token = "0x4001E50")]
		get,
		[Token(Token = "0x4001E51")]
		set,
		[Token(Token = "0x4001E52")]
		replace,
		[Token(Token = "0x4001E53")]
		ping,
		[Token(Token = "0x4001E54")]
		request_access,
		[Token(Token = "0x4001E55")]
		check_access,
		[Token(Token = "0x4001E56")]
		upload,
		[Token(Token = "0x4001E57")]
		delete
	}

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int endOffset;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int chunky;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string[] stuff;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string junkTrunk;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x19DC7D8", Offset = "0x19DC7D8", VA = "0x19DC7D8")]
	private static string obfusticate(string input)
	{
		return null;
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x19DCABC", Offset = "0x19DCABC", VA = "0x19DCABC")]
	private static string unfusticate(string input)
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x19DCC98", Offset = "0x19DCC98", VA = "0x19DCC98")]
	public static void work()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x19DCC9C", Offset = "0x19DCC9C", VA = "0x19DCC9C")]
	public static string basePath()
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x19DCD04", Offset = "0x19DCD04", VA = "0x19DCD04")]
	public static string fqdn()
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x19DCD6C", Offset = "0x19DCD6C", VA = "0x19DCD6C")]
	public static string fullPath(Commands cmd)
	{
		return null;
	}
}
[Token(Token = "0x2000069")]
public class OnlineNotification : MonoBehaviour
{
	[Token(Token = "0x2000551")]
	public delegate void OnUIItemDestroyed(OnlineNotification item);

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, object> Data;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text MessageText;

	[Token(Token = "0x14000012")]
	public event OnUIItemDestroyed OnUIItemDestroyedEvent
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0xCAC328", Offset = "0xCAC328", VA = "0xCAC328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905CE4", Offset = "0x905CE4")]
		add
		{
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xCAC414", Offset = "0xCAC414", VA = "0xCAC414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905CF4", Offset = "0x905CF4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xCAC324", Offset = "0xCAC324", VA = "0xCAC324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xCAC500", Offset = "0xCAC500", VA = "0xCAC500")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xCACC4C", Offset = "0xCACC4C", VA = "0xCACC4C")]
	public void SetMessage(string message)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xCACC84", Offset = "0xCACC84", VA = "0xCACC84")]
	public void Close()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xCACD00", Offset = "0xCACD00", VA = "0xCACD00")]
	private void Update()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xCACD04", Offset = "0xCACD04", VA = "0xCACD04")]
	public OnlineNotification()
	{
	}
}
[Token(Token = "0x200006A")]
public class OnlinePlayers : MonoBehaviour
{
	[Token(Token = "0x2000552")]
	public enum Request
	{
		[Token(Token = "0x4001E59")]
		JOIN_ROOM,
		[Token(Token = "0x4001E5A")]
		JOIN_ROOM_ACCEPT,
		[Token(Token = "0x4001E5B")]
		JOIN_ROOM_DENIED,
		[Token(Token = "0x4001E5C")]
		CREW_MEMBER_JOINED,
		[Token(Token = "0x4001E5D")]
		KICKED,
		[Token(Token = "0x4001E5E")]
		CREW_REQUEST,
		[Token(Token = "0x4001E5F")]
		MESSAGE
	}

	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7034", Offset = "0x8F7034")]
	private sealed class <SetOnlineAsync>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayers <>4__this;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isOnline;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, object> <data>5__2;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, object> <filter>5__3;

		[Token(Token = "0x170003C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0xC36964", Offset = "0xC36964", VA = "0xC36964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0xC369D4", Offset = "0xC369D4", VA = "0xC369D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0xC35310", Offset = "0xC35310", VA = "0xC35310")]
		[DebuggerHidden]
		public <SetOnlineAsync>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0xC36374", Offset = "0xC36374", VA = "0xC36374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0xC36378", Offset = "0xC36378", VA = "0xC36378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0xC3696C", Offset = "0xC3696C", VA = "0xC3696C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7044", Offset = "0x8F7044")]
	private sealed class <DeleteAllRequests>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayers <>4__this;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Dictionary<string, object>>.Enumerator <>7__wrap2;

		[Token(Token = "0x170003C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xC35D3C", Offset = "0xC35D3C", VA = "0xC35D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xC35DAC", Offset = "0xC35DAC", VA = "0xC35DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0xC353B0", Offset = "0xC353B0", VA = "0xC353B0")]
		[DebuggerHidden]
		public <DeleteAllRequests>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0xC35854", Offset = "0xC35854", VA = "0xC35854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0xC358C8", Offset = "0xC358C8", VA = "0xC358C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0xC35870", Offset = "0xC35870", VA = "0xC35870")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0xC35D44", Offset = "0xC35D44", VA = "0xC35D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7054", Offset = "0x8F7054")]
	private sealed class <PingRequests>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayers <>4__this;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x170003C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0xC362FC", Offset = "0xC362FC", VA = "0xC362FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xC3636C", Offset = "0xC3636C", VA = "0xC3636C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0xC35450", Offset = "0xC35450", VA = "0xC35450")]
		[DebuggerHidden]
		public <PingRequests>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0xC36010", Offset = "0xC36010", VA = "0xC36010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0xC36014", Offset = "0xC36014", VA = "0xC36014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0xC36304", Offset = "0xC36304", VA = "0xC36304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7064", Offset = "0x8F7064")]
	private sealed class <OnApplicationPause>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool paused;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnlinePlayers <>4__this;

		[Token(Token = "0x170003C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0xC35F98", Offset = "0xC35F98", VA = "0xC35F98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B22")]
			[Address(RVA = "0xC36008", Offset = "0xC36008", VA = "0xC36008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0xC35630", Offset = "0xC35630", VA = "0xC35630")]
		[DebuggerHidden]
		public <OnApplicationPause>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0xC35DB4", Offset = "0xC35DB4", VA = "0xC35DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xC35DB8", Offset = "0xC35DB8", VA = "0xC35DB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0xC35FA0", Offset = "0xC35FA0", VA = "0xC35FA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7074", Offset = "0x8F7074")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__16_0;

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0xC357D4", Offset = "0xC357D4", VA = "0xC357D4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0xC357DC", Offset = "0xC357DC", VA = "0xC357DC")]
		internal bool <Start>b__16_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7084", Offset = "0x8F7084")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayers <>4__this;

		[Token(Token = "0x170003CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B29")]
			[Address(RVA = "0xC36BB4", Offset = "0xC36BB4", VA = "0xC36BB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xC36C24", Offset = "0xC36C24", VA = "0xC36C24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0xC356D4", Offset = "0xC356D4", VA = "0xC356D4")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0xC369DC", Offset = "0xC369DC", VA = "0xC369DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0xC369E0", Offset = "0xC369E0", VA = "0xC369E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0xC36BBC", Offset = "0xC36BBC", VA = "0xC36BBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OnlinePlayers _instance;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Dictionary<string, object>> Players;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsOnline;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool wasOnlineWhenPaused;

	[Token(Token = "0x17000029")]
	public static OnlinePlayers Instance
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xC319E0", Offset = "0xC319E0", VA = "0xC319E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC35244", Offset = "0xC35244", VA = "0xC35244")]
	public void SetOnline(bool isOnline)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC35274", Offset = "0xC35274", VA = "0xC35274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905D04", Offset = "0x905D04")]
	public IEnumerator SetOnlineAsync(bool isOnline)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC3533C", Offset = "0xC3533C", VA = "0xC3533C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905D68", Offset = "0x905D68")]
	public IEnumerator DeleteAllRequests()
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC353DC", Offset = "0xC353DC", VA = "0xC353DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905DCC", Offset = "0x905DCC")]
	public IEnumerator PingRequests()
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC334F4", Offset = "0xC334F4", VA = "0xC334F4")]
	public void SendRequest(string from_id, string from_network_realm, string from_name, string from_profile_pic, string room_name, string to, Request request, string message = "")
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC3547C", Offset = "0xC3547C", VA = "0xC3547C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC35590", Offset = "0xC35590", VA = "0xC35590")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC35594", Offset = "0xC35594", VA = "0xC35594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905E30", Offset = "0x905E30")]
	private IEnumerator OnApplicationPause(bool paused)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC3565C", Offset = "0xC3565C", VA = "0xC3565C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC35660", Offset = "0xC35660", VA = "0xC35660")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905E94", Offset = "0x905E94")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC35700", Offset = "0xC35700", VA = "0xC35700")]
	public OnlinePlayers()
	{
	}
}
[Token(Token = "0x200006B")]
public class OnlinePlayerUiItem : MonoBehaviour
{
	[Token(Token = "0x2000559")]
	public delegate void OnUIItemDestroyed(OnlinePlayerUiItem item);

	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7094", Offset = "0x8F7094")]
	private sealed class <TimedOut>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayerUiItem <>4__this;

		[Token(Token = "0x170003CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0xC3518C", Offset = "0xC3518C", VA = "0xC3518C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0xC351FC", Offset = "0xC351FC", VA = "0xC351FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0xC313CC", Offset = "0xC313CC", VA = "0xC313CC")]
		[DebuggerHidden]
		public <TimedOut>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0xC35020", Offset = "0xC35020", VA = "0xC35020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0xC35024", Offset = "0xC35024", VA = "0xC35024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0xC35194", Offset = "0xC35194", VA = "0xC35194", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70A4", Offset = "0x8F70A4")]
	private sealed class <JoinRoomDenied>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayerUiItem <>4__this;

		[Token(Token = "0x170003CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0xC348A4", Offset = "0xC348A4", VA = "0xC348A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xC34914", Offset = "0xC34914", VA = "0xC34914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0xC315B8", Offset = "0xC315B8", VA = "0xC315B8")]
		[DebuggerHidden]
		public <JoinRoomDenied>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0xC346E8", Offset = "0xC346E8", VA = "0xC346E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0xC346EC", Offset = "0xC346EC", VA = "0xC346EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0xC348AC", Offset = "0xC348AC", VA = "0xC348AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70B4", Offset = "0x8F70B4")]
	private sealed class <ShowInfoPanel>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayerUiItem <>4__this;

		[Token(Token = "0x170003D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0xC34DE4", Offset = "0xC34DE4", VA = "0xC34DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xC34E54", Offset = "0xC34E54", VA = "0xC34E54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0xC31658", Offset = "0xC31658", VA = "0xC31658")]
		[DebuggerHidden]
		public <ShowInfoPanel>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0xC34C08", Offset = "0xC34C08", VA = "0xC34C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0xC34C0C", Offset = "0xC34C0C", VA = "0xC34C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0xC34DEC", Offset = "0xC34DEC", VA = "0xC34DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70C4", Offset = "0x8F70C4")]
	private sealed class <ShowMessagePanel>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayerUiItem <>4__this;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x170003D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0xC34FA8", Offset = "0xC34FA8", VA = "0xC34FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xC35018", Offset = "0xC35018", VA = "0xC35018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0xC31870", Offset = "0xC31870", VA = "0xC31870")]
		[DebuggerHidden]
		public <ShowMessagePanel>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0xC34E5C", Offset = "0xC34E5C", VA = "0xC34E5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0xC34E60", Offset = "0xC34E60", VA = "0xC34E60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0xC34FB0", Offset = "0xC34FB0", VA = "0xC34FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70D4", Offset = "0x8F70D4")]
	private sealed class <LoadProfilePicture>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlinePlayerUiItem <>4__this;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image image;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x170003D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0xC34B90", Offset = "0xC34B90", VA = "0xC34B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xC34C00", Offset = "0xC34C00", VA = "0xC34C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0xC32A14", Offset = "0xC32A14", VA = "0xC32A14")]
		[DebuggerHidden]
		public <LoadProfilePicture>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0xC3491C", Offset = "0xC3491C", VA = "0xC3491C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0xC34920", Offset = "0xC34920", VA = "0xC34920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xC34B98", Offset = "0xC34B98", VA = "0xC34B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text Name;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string UserID;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text Level;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text OnlineStatus;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text PingText;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Status;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string NetworkRealm;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string ProfileUrl;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MultiplayerPhoneMenu.UIItemType ItemType;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, object> UserData;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image Thumbnail;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool profilePicLoaded;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject InfoPanel;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TMP_Text InfoPanelText;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool IsCrewMember;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] DisabledObjectsWhenUserNotConnected;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] DisabledObjectsWhenYouAreNotConnected;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject KickBtn;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UIButton JoinBtn;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIButton RequestJoinBtn;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject DetailsPanel;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine timedOut;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool notReady;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int updateCount;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject CancelButton;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<string, Image> inRoomPlayerLookup;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform InRoomPlayersRoot;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color OnlineTextColor;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Dictionary<string, object> Data;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool IsRequest;

	[Token(Token = "0x14000013")]
	public event OnUIItemDestroyed OnUIItemDestroyedEvent
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xC33A40", Offset = "0xC33A40", VA = "0xC33A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9060EC", Offset = "0x9060EC")]
		add
		{
		}
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xC33B30", Offset = "0xC33B30", VA = "0xC33B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9060FC", Offset = "0x9060FC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC3127C", Offset = "0xC3127C", VA = "0xC3127C")]
	public void Collapse()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC31358", Offset = "0xC31358", VA = "0xC31358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905EF8", Offset = "0x905EF8")]
	private IEnumerator TimedOut()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC313F8", Offset = "0xC313F8", VA = "0xC313F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC313FC", Offset = "0xC313FC", VA = "0xC313FC")]
	public void CancelTimeOut()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC31504", Offset = "0xC31504", VA = "0xC31504")]
	public void ToggleMute()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC31544", Offset = "0xC31544", VA = "0xC31544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905F5C", Offset = "0x905F5C")]
	public IEnumerator JoinRoomDenied()
	{
		return null;
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC315E4", Offset = "0xC315E4", VA = "0xC315E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905FC0", Offset = "0x905FC0")]
	public IEnumerator ShowInfoPanel()
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC31684", Offset = "0xC31684", VA = "0xC31684")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC317AC", Offset = "0xC317AC", VA = "0xC317AC")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC317D8", Offset = "0xC317D8", VA = "0xC317D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906024", Offset = "0x906024")]
	public IEnumerator ShowMessagePanel(float time)
	{
		return null;
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC3189C", Offset = "0xC3189C", VA = "0xC3189C")]
	public void ShowRequestSentMessage()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC318F0", Offset = "0xC318F0", VA = "0xC318F0")]
	public void ShowMessage(string message, float time)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC3195C", Offset = "0xC3195C", VA = "0xC3195C")]
	public void SetupNetworkRealmAndGoOnline()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC31AAC", Offset = "0xC31AAC", VA = "0xC31AAC")]
	public void UpdateUI(Dictionary<string, object> user, bool IsOnline, MultiplayerPhoneMenu.UIItemType itemType)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC32968", Offset = "0xC32968", VA = "0xC32968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906088", Offset = "0x906088")]
	private IEnumerator LoadProfilePicture(string url, Image image)
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC32A40", Offset = "0xC32A40", VA = "0xC32A40")]
	public MultiplayerPhoneMenu.UIItemType GetItemType()
	{
		return default(MultiplayerPhoneMenu.UIItemType);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xC32A48", Offset = "0xC32A48", VA = "0xC32A48")]
	public void SetItemType(MultiplayerPhoneMenu.UIItemType itemType)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xC32A50", Offset = "0xC32A50", VA = "0xC32A50")]
	public bool AppearOffline()
	{
		return default(bool);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC32B0C", Offset = "0xC32B0C", VA = "0xC32B0C")]
	public void RequestRoomAccess()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC32B60", Offset = "0xC32B60", VA = "0xC32B60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC332D0", Offset = "0xC332D0", VA = "0xC332D0")]
	public void RoomRequestAccept()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC33850", Offset = "0xC33850", VA = "0xC33850")]
	public void RoomRequestDenied()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC33C20", Offset = "0xC33C20", VA = "0xC33C20")]
	public void UnblockPlayer()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xC33D64", Offset = "0xC33D64", VA = "0xC33D64")]
	public void BlockPlayer()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xC33EA8", Offset = "0xC33EA8", VA = "0xC33EA8")]
	public void RemoveFromCrew()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xC33FC4", Offset = "0xC33FC4", VA = "0xC33FC4")]
	public void AddDebugCrew()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xC34030", Offset = "0xC34030", VA = "0xC34030")]
	public void AddToCrew()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xC340A8", Offset = "0xC340A8", VA = "0xC340A8")]
	public void AcceptCrewRequest()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xC34210", Offset = "0xC34210", VA = "0xC34210")]
	public void KickPlayer()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xC343F4", Offset = "0xC343F4", VA = "0xC343F4")]
	public string GetLevelName()
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xC34424", Offset = "0xC34424", VA = "0xC34424")]
	public string GetNetworkRealm()
	{
		return null;
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xC3445C", Offset = "0xC3445C", VA = "0xC3445C")]
	public string GetUserName()
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xC344E4", Offset = "0xC344E4", VA = "0xC344E4")]
	public string GetProfilePictureUrl()
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xC344EC", Offset = "0xC344EC", VA = "0xC344EC")]
	public void JoinRoom()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xC34640", Offset = "0xC34640", VA = "0xC34640")]
	public OnlinePlayerUiItem()
	{
	}
}
[Token(Token = "0x200006C")]
public class OnlyShowOnce : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string UniqueName;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xC37538", Offset = "0xC37538", VA = "0xC37538")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xC375D0", Offset = "0xC375D0", VA = "0xC375D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xC375E0", Offset = "0xC375E0", VA = "0xC375E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xC375E4", Offset = "0xC375E4", VA = "0xC375E4")]
	public OnlyShowOnce()
	{
	}
}
[Token(Token = "0x200006D")]
public class OutOfBoundsTrigger : MonoBehaviour
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isOutOfBounds;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xC375EC", Offset = "0xC375EC", VA = "0xC375EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xC375F0", Offset = "0xC375F0", VA = "0xC375F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xC376BC", Offset = "0xC376BC", VA = "0xC376BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xC37784", Offset = "0xC37784", VA = "0xC37784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xC3789C", Offset = "0xC3789C", VA = "0xC3789C")]
	public OutOfBoundsTrigger()
	{
	}
}
[Token(Token = "0x200006E")]
public class DripDrop
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int x;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int y;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int counter;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int duration;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float stepSize;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int radius;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float r;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float g;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float b;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m;

	[Token(Token = "0x1700002A")]
	public bool isAvailable
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0xCBE480", Offset = "0xCBE480", VA = "0xCBE480")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002B")]
	public bool isDripping
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0xCBE490", Offset = "0xCBE490", VA = "0xCBE490")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xCBE3C0", Offset = "0xCBE3C0", VA = "0xCBE3C0")]
	public bool run()
	{
		return default(bool);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xCBE464", Offset = "0xCBE464", VA = "0xCBE464")]
	public void begin(int x, int y, float r, float g, float b, float m, int duration, float stepSize, int radius)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xCBE4A0", Offset = "0xCBE4A0", VA = "0xCBE4A0")]
	public DripDrop()
	{
	}
}
[Token(Token = "0x200006F")]
public class PaintableObject : MonoBehaviour
{
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70E4", Offset = "0x8F70E4")]
	private sealed class <FadeInAsync>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintableObject <>4__this;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x170003D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xA8D8C8", Offset = "0xA8D8C8", VA = "0xA8D8C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xA8D938", Offset = "0xA8D938", VA = "0xA8D938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0xA8D210", Offset = "0xA8D210", VA = "0xA8D210")]
		[DebuggerHidden]
		public <FadeInAsync>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0xA8D718", Offset = "0xA8D718", VA = "0xA8D718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0xA8D71C", Offset = "0xA8D71C", VA = "0xA8D71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0xA8D8D0", Offset = "0xA8D8D0", VA = "0xA8D8D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70F4", Offset = "0x8F70F4")]
	private sealed class <FadeOutAsync>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintableObject <>4__this;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x170003D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0xA8DB08", Offset = "0xA8DB08", VA = "0xA8DB08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xA8DB78", Offset = "0xA8DB78", VA = "0xA8DB78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0xA8D2D4", Offset = "0xA8D2D4", VA = "0xA8D2D4")]
		[DebuggerHidden]
		public <FadeOutAsync>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0xA8D940", Offset = "0xA8D940", VA = "0xA8D940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0xA8D944", Offset = "0xA8D944", VA = "0xA8D944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0xA8DB10", Offset = "0xA8DB10", VA = "0xA8DB10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7104", Offset = "0x8F7104")]
	private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintableObject <>4__this;

		[Token(Token = "0x170003DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0xA8E380", Offset = "0xA8E380", VA = "0xA8E380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xA8E3F0", Offset = "0xA8E3F0", VA = "0xA8E3F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0xA8D62C", Offset = "0xA8D62C", VA = "0xA8D62C")]
		[DebuggerHidden]
		public <Start>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0xA8DB80", Offset = "0xA8DB80", VA = "0xA8DB80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0xA8DB84", Offset = "0xA8DB84", VA = "0xA8DB84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0xA8E388", Offset = "0xA8E388", VA = "0xA8E388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 PaintTextureSize;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float BrushScaler;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UsePaintTexture[] UsePaintTextureObjects;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material[] m_PaintMaterial;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fadeTime;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fadeTimer;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool SaveIncrement;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool IgnoreLoadLastSaved;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PaintableObject _instance;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _PaintPrefab;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8A60", Offset = "0x8F8A60")]
	private PaintTexture <PaintTexture>k__BackingField;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int TextureSizeMultiplier;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool IsReady;

	[Token(Token = "0x1700002C")]
	public static PaintableObject Instance
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xA8D058", Offset = "0xA8D058", VA = "0xA8D058")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public PaintTexture PaintTexture
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xA8D5A0", Offset = "0xA8D5A0", VA = "0xA8D5A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9061D4", Offset = "0x9061D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000393")]
		[Address(RVA = "0xA8D5A8", Offset = "0xA8D5A8", VA = "0xA8D5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9061E4", Offset = "0x9061E4")]
		private set
		{
		}
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xA8D178", Offset = "0xA8D178", VA = "0xA8D178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90610C", Offset = "0x90610C")]
	public IEnumerator FadeInAsync(float time = 2f)
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xA8D23C", Offset = "0xA8D23C", VA = "0xA8D23C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906170", Offset = "0x906170")]
	public IEnumerator FadeOutAsync(float time = 2f)
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xA8D300", Offset = "0xA8D300", VA = "0xA8D300")]
	public void SetupUsePaintTextures()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xA8D3FC", Offset = "0xA8D3FC", VA = "0xA8D3FC")]
	public void SetPaintAlpha(float value)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xA8D59C", Offset = "0xA8D59C", VA = "0xA8D59C")]
	public void SetEnabledState(bool enabled)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xA8D5B0", Offset = "0xA8D5B0", VA = "0xA8D5B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xA8D5B8", Offset = "0xA8D5B8", VA = "0xA8D5B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9061F4", Offset = "0x9061F4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xA8D658", Offset = "0xA8D658", VA = "0xA8D658")]
	public PaintableObject()
	{
	}
}
[Token(Token = "0x2000070")]
public class PaintCapSettings : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Description;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CapModel;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 ForceMinMax;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 SpaterStrengthMinMax;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 SpaterSizeMinMax;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ForceDiff;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float FocusDiff;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float SpaterStrengthDiff;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float SpaterSizeDiff;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UsePressureToControlForce;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float PressureMutiplyer;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxRandomness;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float InnerRadius;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float OuterRadius;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float Separation;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float RotationOffset;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float randomCutoff;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float bigDot;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float litDot;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float maxSpatDist;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float minSpatDist;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxSpatWallDist;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector2 BrushScaleMinMax;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float BrushScale;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float BrushScaleDiff;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float MaxDistance;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve PressureCurve;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material DynamicBrushMaterial;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite NoiseSprite;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8A70", Offset = "0x8F8A70")]
	public float dripTrigger;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8AA8", Offset = "0x8F8AA8")]
	public float dripAccumulatorReset;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8AE0", Offset = "0x8F8AE0")]
	public float dripAccumulationDistance;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _SpatStrength;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int _SpatSize;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int _Force;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _innerRadius;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int _outerRadius;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int _separation;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int _raydist;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int _dotSize;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int _dotDist;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int _spotTheDot;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int _MainTexID;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _SplatTexID;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int _PaintColor;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _Metallic;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _Rotator;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int _FillerSpin;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int _leftX;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int _rightX;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int _leftDist;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _rightDist;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _first;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _brushScaler;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int smallTextureDivider;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _leftCanRotation;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int _rightCanRotation;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC3E64C", Offset = "0xC3E64C", VA = "0xC3E64C")]
	public void ApplyToSprite(float brushScaler, bool first, float theta, float oldDistance, float newDistance, Vector2 oldUV, Vector2 newUV, float pressure, Vector4 color, float metallic, float oldCanRot, float newCanRot)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC3EF54", Offset = "0xC3EF54", VA = "0xC3EF54")]
	public void Init()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xC3F248", Offset = "0xC3F248", VA = "0xC3F248")]
	public void UpdateLimits()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC3F284", Offset = "0xC3F284", VA = "0xC3F284")]
	public PaintCapSettings()
	{
	}
}
[Token(Token = "0x2000071")]
public class PaintManager : MonoBehaviour
{
	[Token(Token = "0x2000562")]
	public delegate void ColorChangedEvent(PaintColour color);

	[Token(Token = "0x2000563")]
	public delegate void GroupChangedEvent();

	[Token(Token = "0x2000564")]
	private struct NetworkCanSettingsHolder
	{
		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NetworkCanSettings networkCanSettings;
	}

	[Token(Token = "0x2000565")]
	public delegate void PaintCapChanged(PaintCapSettings settings);

	[Token(Token = "0x2000566")]
	public class PaintColorCollection
	{
		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0x902EFC", Offset = "0x902EFC")]
		public List<PaintColour> Colours;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x902F34", Offset = "0x902F34")]
		public string Name;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x902F6C", Offset = "0x902F6C")]
		public string Author;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x902FA4", Offset = "0x902FA4")]
		public bool IsLocked;

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0xC41218", Offset = "0xC41218", VA = "0xC41218")]
		public PaintColorCollection()
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0xC412B0", Offset = "0xC412B0", VA = "0xC412B0")]
		public void LoadFromText(string text)
		{
		}
	}

	[Token(Token = "0x2000567")]
	public class PaintColour
	{
		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x902FDC", Offset = "0x902FDC")]
		public string Name;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x903014", Offset = "0x903014")]
		public int R;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x90304C", Offset = "0x90304C")]
		public int G;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x903084", Offset = "0x903084")]
		public int B;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x9030BC", Offset = "0x9030BC")]
		public float Metallic;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x9030F4", Offset = "0x9030F4")]
		public float Shininess;

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0xC45C90", Offset = "0xC45C90", VA = "0xC45C90")]
		public PaintColour()
		{
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0xC45CF0", Offset = "0xC45CF0", VA = "0xC45CF0")]
		public Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0xC45D48", Offset = "0xC45D48", VA = "0xC45D48")]
		public Vector4 GetVec4(float alpha)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0xC45DA4", Offset = "0xC45DA4", VA = "0xC45DA4")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0xC45DD0", Offset = "0xC45DD0", VA = "0xC45DD0")]
		public PaintColour(Color color, float mettalicness = 0f)
		{
		}
	}

	[Token(Token = "0x2000568")]
	private struct BrushStrokeHolder
	{
		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BrushStroke brushStroke;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool inUse;
	}

	[Token(Token = "0x2000569")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7114", Offset = "0x8F7114")]
	private sealed class <ProcessPaintTextureInstances>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintManager <>4__this;

		[Token(Token = "0x170003DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B76")]
			[Address(RVA = "0xC44FF4", Offset = "0xC44FF4", VA = "0xC44FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B78")]
			[Address(RVA = "0xC45064", Offset = "0xC45064", VA = "0xC45064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0xC3F6A4", Offset = "0xC3F6A4", VA = "0xC3F6A4")]
		[DebuggerHidden]
		public <ProcessPaintTextureInstances>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0xC44E28", Offset = "0xC44E28", VA = "0xC44E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0xC44E2C", Offset = "0xC44E2C", VA = "0xC44E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xC44FFC", Offset = "0xC44FFC", VA = "0xC44FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7124", Offset = "0x8F7124")]
	private sealed class <UVFlipTest>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintManager <>4__this;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture <flipTest>5__2;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D <flipTex>5__3;

		[Token(Token = "0x170003DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0xC45370", Offset = "0xC45370", VA = "0xC45370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0xC453E0", Offset = "0xC453E0", VA = "0xC453E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0xC402EC", Offset = "0xC402EC", VA = "0xC402EC")]
		[DebuggerHidden]
		public <UVFlipTest>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0xC4506C", Offset = "0xC4506C", VA = "0xC4506C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0xC45070", Offset = "0xC45070", VA = "0xC45070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0xC45378", Offset = "0xC45378", VA = "0xC45378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7134", Offset = "0x8F7134")]
	private sealed class <DownloadPaintFromCloudPersistent>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int paintTextureID;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PaintManager <>4__this;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int userID;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <successTest>5__2;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <maskUrl>5__3;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <paintPath>5__4;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <maskPath>5__5;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityWebRequest <paintWWW>5__6;

		[Token(Token = "0x170003E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xC44DB0", Offset = "0xC44DB0", VA = "0xC44DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B88")]
			[Address(RVA = "0xC44E20", Offset = "0xC44E20", VA = "0xC44E20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0xC403C8", Offset = "0xC403C8", VA = "0xC403C8")]
		[DebuggerHidden]
		public <DownloadPaintFromCloudPersistent>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0xC43A38", Offset = "0xC43A38", VA = "0xC43A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0xC43D70", Offset = "0xC43D70", VA = "0xC43D70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0xC43A70", Offset = "0xC43A70", VA = "0xC43A70")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0xC43B30", Offset = "0xC43B30", VA = "0xC43B30")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xC43BF0", Offset = "0xC43BF0", VA = "0xC43BF0")]
		private void <>m__Finally3()
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0xC43CB0", Offset = "0xC43CB0", VA = "0xC43CB0")]
		private void <>m__Finally4()
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0xC44DB8", Offset = "0xC44DB8", VA = "0xC44DB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7144", Offset = "0x8F7144")]
	private sealed class <UploadPaintToCloudPersistent>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool forceDirty;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PaintManager <>4__this;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <basePath>5__2;

		[Token(Token = "0x170003E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0xC45B48", Offset = "0xC45B48", VA = "0xC45B48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0xC45BB8", Offset = "0xC45BB8", VA = "0xC45BB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0xC40490", Offset = "0xC40490", VA = "0xC40490")]
		[DebuggerHidden]
		public <UploadPaintToCloudPersistent>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0xC453E8", Offset = "0xC453E8", VA = "0xC453E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0xC453EC", Offset = "0xC453EC", VA = "0xC453EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0xC45B50", Offset = "0xC45B50", VA = "0xC45B50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PaintTexture PaintTexture;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BrushDynamic;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public RenderTexture CaptureTexture;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public RenderTexture InterTexture;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture StenTexture;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture DripTexture;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RenderTexture DripInterTexture;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int MaxDripDiameter;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int smallTextureSize;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material PaintBrushNewDefault;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material DripMaterial;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material FlipTestMaterial;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int processedTextures;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool FlipYoShit;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PaintManager _instance;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<TextAsset> PaintGroups;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<PaintColorCollection> PaintColorGroups;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int m_PaintGroupIndex;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int m_PaintColorIndex;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color m_currentColor;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<int, NetworkCanSettings> NetworkCanSettingsDict;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<PaintCapSettings> Caps;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8B58", Offset = "0x8F8B58")]
	private int <CapIndex>k__BackingField;

	[Token(Token = "0x40002E2")]
	public const int BrushPoolSize = 200;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BrushStrokeHolder[] BrushPool;

	[Token(Token = "0x40002E4")]
	public const int NetworkBrushPoolSize = 20;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public NetworkBrushStroke[] NetworkBrushPool;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int NetworkBrushPoolCount;

	[Token(Token = "0x1700002E")]
	public bool FlippedUVs
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xC3F6D0", Offset = "0xC3F6D0", VA = "0xC3F6D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public static PaintManager Instance
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xC3B8C4", Offset = "0xC3B8C4", VA = "0xC3B8C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public int CapIndex
	{
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xC3DD88", Offset = "0xC3DD88", VA = "0xC3DD88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906428", Offset = "0x906428")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xC42AD4", Offset = "0xC42AD4", VA = "0xC42AD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906438", Offset = "0x906438")]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public PaintCapSettings PaintCapSettings
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xC42BC4", Offset = "0xC42BC4", VA = "0xC42BC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000014")]
	public event ColorChangedEvent OnColorChanged
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xC40894", Offset = "0xC40894", VA = "0xC40894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9063E8", Offset = "0x9063E8")]
		add
		{
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xC40980", Offset = "0xC40980", VA = "0xC40980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9063F8", Offset = "0x9063F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event GroupChangedEvent OnGroupChanged
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xC40A6C", Offset = "0xC40A6C", VA = "0xC40A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906408", Offset = "0x906408")]
		add
		{
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xC40B58", Offset = "0xC40B58", VA = "0xC40B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906418", Offset = "0x906418")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event PaintCapChanged OnPaintCapChanged
	{
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xC433DC", Offset = "0xC433DC", VA = "0xC433DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906448", Offset = "0x906448")]
		add
		{
		}
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xC434C8", Offset = "0xC434C8", VA = "0xC434C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906458", Offset = "0x906458")]
		remove
		{
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC3F344", Offset = "0xC3F344", VA = "0xC3F344")]
	public static void ResetPaintables()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC3F348", Offset = "0xC3F348", VA = "0xC3F348")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC3B9E4", Offset = "0xC3B9E4", VA = "0xC3B9E4")]
	public List<PaintColour> GetColors()
	{
		return null;
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC3F630", Offset = "0xC3F630", VA = "0xC3F630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906258", Offset = "0x906258")]
	public IEnumerator ProcessPaintTextureInstances()
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC3F6D8", Offset = "0xC3F6D8", VA = "0xC3F6D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC3F844", Offset = "0xC3F844", VA = "0xC3F844")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xC40278", Offset = "0xC40278", VA = "0xC40278")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9062BC", Offset = "0x9062BC")]
	public IEnumerator UVFlipTest()
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xC40318", Offset = "0xC40318", VA = "0xC40318")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906320", Offset = "0x906320")]
	public IEnumerator DownloadPaintFromCloudPersistent(int userID, int paintTextureID = 0)
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xC403F4", Offset = "0xC403F4", VA = "0xC403F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906384", Offset = "0x906384")]
	public IEnumerator UploadPaintToCloudPersistent(bool forceDirty = false)
	{
		return null;
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC404BC", Offset = "0xC404BC", VA = "0xC404BC")]
	public void Update()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC40C44", Offset = "0xC40C44", VA = "0xC40C44")]
	public PaintColour GetColor(int groupIdx, int colorIdx)
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xC3E490", Offset = "0xC3E490", VA = "0xC3E490")]
	public string GetCurrentColorName()
	{
		return null;
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC3E58C", Offset = "0xC3E58C", VA = "0xC3E58C")]
	public string GetCurrentGroupName()
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC40D10", Offset = "0xC40D10", VA = "0xC40D10")]
	public void RemovePaintGroups(string Author)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC40ED0", Offset = "0xC40ED0", VA = "0xC40ED0")]
	public void LoadPaintGroups(string Author, bool AddTo)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC3F374", Offset = "0xC3F374", VA = "0xC3F374")]
	public void LoadPaintGroups()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xC4150C", Offset = "0xC4150C", VA = "0xC4150C")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xC3D0CC", Offset = "0xC3D0CC", VA = "0xC3D0CC")]
	public void NextColor()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xC3D27C", Offset = "0xC3D27C", VA = "0xC3D27C")]
	public void PrevColor()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xC3CF44", Offset = "0xC3CF44", VA = "0xC3CF44")]
	public void NextPaintGroup()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xC3CC84", Offset = "0xC3CC84", VA = "0xC3CC84")]
	public void PrevPaintGroup()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xC3E630", Offset = "0xC3E630", VA = "0xC3E630")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xC41DC8", Offset = "0xC41DC8", VA = "0xC41DC8")]
	public PaintColour GetCurrentColor()
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xC41E98", Offset = "0xC41E98", VA = "0xC41E98")]
	public void NetworkCanPressure(int ID, float Pressure)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xC41FB4", Offset = "0xC41FB4", VA = "0xC41FB4")]
	public float NetworkCanPressure(int ID)
	{
		return default(float);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xC41ED0", Offset = "0xC41ED0", VA = "0xC41ED0")]
	private NetworkCanSettings GetNetworkCanSettings(int id)
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xC41FE0", Offset = "0xC41FE0", VA = "0xC41FE0")]
	public void ProcessNetworkBrushes(int paintTextureID, NetworkBrushStroke[] brushes, float frameRate = 0f, int numberOfBrushes = 0)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xC428E4", Offset = "0xC428E4", VA = "0xC428E4")]
	public void RequestCanSettings()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xC3DC9C", Offset = "0xC3DC9C", VA = "0xC3DC9C")]
	public void NextCap()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xC3DD90", Offset = "0xC3DD90", VA = "0xC3DD90")]
	public void PrevCap()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xC42ADC", Offset = "0xC42ADC", VA = "0xC42ADC")]
	public void SetPaintCap(int index)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xC435B4", Offset = "0xC435B4", VA = "0xC435B4")]
	private void SceneChangedEvent(string sceneName)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xC3F7D8", Offset = "0xC3F7D8", VA = "0xC3F7D8")]
	public void DestroyAllTextures()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xC3F434", Offset = "0xC3F434", VA = "0xC3F434")]
	private void InitialiseBrushPool()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xC436BC", Offset = "0xC436BC", VA = "0xC436BC")]
	public int GetBrushStroke()
	{
		return default(int);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xC43788", Offset = "0xC43788", VA = "0xC43788")]
	public void ReturnBrushStroke(int ID)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC43804", Offset = "0xC43804", VA = "0xC43804")]
	public unsafe ref BrushStroke AccessBrush(int i)
	{
		return ref *(BrushStroke*)null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC43630", Offset = "0xC43630", VA = "0xC43630")]
	public void ResetBrushPool()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC3F534", Offset = "0xC3F534", VA = "0xC3F534")]
	private void InitialiseNetworkBrushPool()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xC438EC", Offset = "0xC438EC", VA = "0xC438EC")]
	public void DestroyNetworkBrushPool()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC438F0", Offset = "0xC438F0", VA = "0xC438F0")]
	public PaintManager()
	{
	}
}
[Token(Token = "0x2000072")]
public class PaintTexture : MonoBehaviour
{
	[Token(Token = "0x200056D")]
	public enum PaintTextureTypes
	{
		[Token(Token = "0x4001EBB")]
		Paint,
		[Token(Token = "0x4001EBC")]
		Mask,
		[Token(Token = "0x4001EBD")]
		Intermediate
	}

	[Token(Token = "0x200056E")]
	private struct SprayLayerHolder
	{
		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SprayLayer sprayLayer;
	}

	[Token(Token = "0x200056F")]
	private class SprayLayer
	{
		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ID;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int numberOfBrushes;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] Brushes;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 LastBrushPos;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LastBrushSize;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int CapIndex;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 LastUV;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool NeedsUpdating;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector4 lastColor;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 Color;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int lastCap;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lastMetal;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float Metallic;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool forceSettingsUpdate;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float frameRate;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int frameSkipCounter;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lastCanAngle;

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0xA8A050", Offset = "0xA8A050", VA = "0xA8A050")]
		public SprayLayer()
		{
		}
	}

	[Token(Token = "0x2000570")]
	public delegate void BrushAdded(int id, int capIndex, Vector3 point, Vector2 texcoord, float distance, Vector4 color, float metallic, bool first, float canAngle, Transform handTrans, Transform canTrans);

	[Serializable]
	[Token(Token = "0x2000571")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7154", Offset = "0x8F7154")]
	private sealed class <>c
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__51_0;

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0xA88564", Offset = "0xA88564", VA = "0xA88564")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0xA8856C", Offset = "0xA8856C", VA = "0xA8856C")]
		internal bool <Start>b__51_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7164", Offset = "0x8F7164")]
	private sealed class <Start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintTexture <>4__this;

		[Token(Token = "0x170003E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0xA897B4", Offset = "0xA897B4", VA = "0xA897B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0xA89824", Offset = "0xA89824", VA = "0xA89824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0xA89620", Offset = "0xA89620", VA = "0xA89620")]
		[DebuggerHidden]
		public <Start>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0xA8964C", Offset = "0xA8964C", VA = "0xA8964C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0xA89650", Offset = "0xA89650", VA = "0xA89650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0xA897BC", Offset = "0xA897BC", VA = "0xA897BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000573")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7174", Offset = "0x8F7174")]
	private sealed class <GetTexturesAsync>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintTexture <>4__this;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncGPUReadbackRequest <request>5__2;

		[Token(Token = "0x170003E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0xA888E4", Offset = "0xA888E4", VA = "0xA888E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0xA88954", Offset = "0xA88954", VA = "0xA88954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0xA88604", Offset = "0xA88604", VA = "0xA88604")]
		[DebuggerHidden]
		public <GetTexturesAsync>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0xA88630", Offset = "0xA88630", VA = "0xA88630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0xA88634", Offset = "0xA88634", VA = "0xA88634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0xA888EC", Offset = "0xA888EC", VA = "0xA888EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7184", Offset = "0x8F7184")]
	private sealed class <GetTexturesFast>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintTexture <>4__this;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncGPUReadbackRequest <request>5__2;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Thread <paintArrayThread>5__3;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread <maskArrayThread>5__4;

		[Token(Token = "0x170003E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0xA88E6C", Offset = "0xA88E6C", VA = "0xA88E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0xA88EDC", Offset = "0xA88EDC", VA = "0xA88EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xA8895C", Offset = "0xA8895C", VA = "0xA8895C")]
		[DebuggerHidden]
		public <GetTexturesFast>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0xA88988", Offset = "0xA88988", VA = "0xA88988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0xA8898C", Offset = "0xA8898C", VA = "0xA8898C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0xA88E74", Offset = "0xA88E74", VA = "0xA88E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7194", Offset = "0x8F7194")]
	private sealed class <GetTexturesSlow>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintTexture <>4__this;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <stepSize>5__2;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <it>5__3;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x170003EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0xA895A8", Offset = "0xA895A8", VA = "0xA895A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0xA89618", Offset = "0xA89618", VA = "0xA89618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xA88EE4", Offset = "0xA88EE4", VA = "0xA88EE4")]
		[DebuggerHidden]
		public <GetTexturesSlow>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0xA88F10", Offset = "0xA88F10", VA = "0xA88F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xA88F14", Offset = "0xA88F14", VA = "0xA88F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xA895B0", Offset = "0xA895B0", VA = "0xA895B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string NewOldPaint;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string NewOldMask;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string PaintTextureName;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string PaintMaskName;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PaintableObject PaintableObject;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 m_MaskVector;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 m_MaskVector2;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NetworkManager nMI;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8B78", Offset = "0x8F8B78")]
	private int <paintTextureID>k__BackingField;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float skipTimer;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float skipTime;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int SimulateNetworkPlayers;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DryingFrames;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int dryingCounter;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool skipOneDryFrame;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int networkBrushDelay;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int networkBrushDelayCounter;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float FramerateScale;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float HalfFramerateScale;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float DoubleFramerateScale;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float dripThreshold;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int smallTextureSize;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BrushStroke tempBrush;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private NetworkBrushStroke tempNetBrush;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float brushScaler;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material blitMaterialTexture;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderTexture[] m_paintTextures;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RenderTexture m_paintRenderTexture;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderTexture m_maskRenderTexture;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3Int[] m_paintTextureStates;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int m_paintTextureState;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Shader blitShader;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8B98", Offset = "0x8F8B98")]
	private bool <IsDirty>k__BackingField;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8BA8", Offset = "0x8F8BA8")]
	private bool <WasJustCleaned>k__BackingField;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Texture2D tempPaintTexture;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Texture2D tempMaskTexture;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Renderer m_SprayObjRenderer;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int m_TextureWidth;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int m_TextureHeight;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool m_dripsEnabled;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private RenderTexture orig;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float aspect;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector2 newUV;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int frameCount;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float frameTime;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool m_forceFirst;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Dictionary<int, SprayLayer> SprayLayers;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int pix_x;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int pix_y;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int pix_w;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int pix_h;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int st_x;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int st_y;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float rotAngle;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float t_dist;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float hex;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float why;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float theta;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float dripAccumulator;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private DripDrop[] dripDrops;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool m_isSetupAndReady;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Texture2D samplePaintMaskTex;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public byte[] paintBytes;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public byte[] maskBytes;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private NativeArray<byte> pa;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private NativeArray<byte> ma;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool StencilEnabled;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool StencilInvert;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float StencilBorder;

	[Token(Token = "0x17000032")]
	public int paintTextureID
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xC48094", Offset = "0xC48094", VA = "0xC48094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906468", Offset = "0x906468")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xC4809C", Offset = "0xC4809C", VA = "0xC4809C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906478", Offset = "0x906478")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public bool IsDirty
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xC45ABC", Offset = "0xC45ABC", VA = "0xC45ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906488", Offset = "0x906488")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xC4884C", Offset = "0xC4884C", VA = "0xC4884C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906498", Offset = "0x906498")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public bool WasJustCleaned
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xC45AC4", Offset = "0xC45AC4", VA = "0xC45AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9064A8", Offset = "0x9064A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xC48858", Offset = "0xC48858", VA = "0xC48858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9064B8", Offset = "0x9064B8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public bool ForceFirst
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xC491A8", Offset = "0xC491A8", VA = "0xC491A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xC3BF80", Offset = "0xC3BF80", VA = "0xC3BF80")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event BrushAdded OnBrushAdded
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xC49278", Offset = "0xC49278", VA = "0xC49278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90652C", Offset = "0x90652C")]
		add
		{
		}
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xC49368", Offset = "0xC49368", VA = "0xC49368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90653C", Offset = "0x90653C")]
		remove
		{
		}
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC480A4", Offset = "0xC480A4", VA = "0xC480A4")]
	private int getCurrentTexture(PaintTextureTypes pTT)
	{
		return default(int);
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC48170", Offset = "0xC48170", VA = "0xC48170")]
	private int getEmptyTexture()
	{
		return default(int);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC48178", Offset = "0xC48178", VA = "0xC48178")]
	private void changeTexture(PaintTextureTypes pTT)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC48224", Offset = "0xC48224", VA = "0xC48224")]
	private void applyCurrentTextureState()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xC48864", Offset = "0xC48864", VA = "0xC48864")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xC4896C", Offset = "0xC4896C", VA = "0xC4896C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9064C8", Offset = "0x9064C8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xC489E0", Offset = "0xC489E0", VA = "0xC489E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xC48A08", Offset = "0xC48A08", VA = "0xC48A08")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xC4901C", Offset = "0xC4901C", VA = "0xC4901C")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xC49020", Offset = "0xC49020", VA = "0xC49020")]
	public void UpdatePaintDripsEnabled()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC4297C", Offset = "0xC4297C", VA = "0xC4297C")]
	public void ForceSettingsSync()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xC490A0", Offset = "0xC490A0", VA = "0xC490A0")]
	public void SetPlayerCap(int id, int capIndex)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xC491B0", Offset = "0xC491B0", VA = "0xC491B0")]
	private void AddNetworkBrush()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xC490C8", Offset = "0xC490C8", VA = "0xC490C8")]
	private SprayLayer GetLayer(int id)
	{
		return null;
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xC49458", Offset = "0xC49458", VA = "0xC49458")]
	public void AddBrush(int id, int capIndex, Vector3 point, Vector2 texcoord, float distance, Vector4 color, float metallic, bool first, float canAngle, Transform handTrans, Transform canTrans)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xC49FF8", Offset = "0xC49FF8", VA = "0xC49FF8")]
	public void FreeLayer(int id)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xC42464", Offset = "0xC42464", VA = "0xC42464")]
	public void AddBrush(int id, NetworkBrushStroke nBS, float frameRate)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xC42410", Offset = "0xC42410", VA = "0xC42410")]
	public void ChangeSettings(int id, int newCapIndex, float newMetallic, Vector3 newColor)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xC49FFC", Offset = "0xC49FFC", VA = "0xC49FFC")]
	private void newDrip(int x, int y, float r, float g, float b, float m, float accumulationRate = 0.1f)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC4A250", Offset = "0xC4A250", VA = "0xC4A250")]
	private void NewPaintJunk()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC4B93C", Offset = "0xC4B93C", VA = "0xC4B93C")]
	private void OverrideCanPosition(BrushStroke bs)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xC4BA04", Offset = "0xC4BA04", VA = "0xC4BA04")]
	private float Area(Vector2 p1, Vector2 p2, Vector2 p3)
	{
		return default(float);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xC4BADC", Offset = "0xC4BADC", VA = "0xC4BADC")]
	private void dripRunner()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xC4C3F8", Offset = "0xC4C3F8", VA = "0xC4C3F8")]
	public void Setup()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xC4CDE0", Offset = "0xC4CDE0", VA = "0xC4CDE0")]
	public void SendNetworkBrushes()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xC40554", Offset = "0xC40554", VA = "0xC40554")]
	public void AfterEffectsRunner()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xC4CAB8", Offset = "0xC4CAB8", VA = "0xC4CAB8")]
	public void ClearTexture(bool fromNetwork = false)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xC4D3F8", Offset = "0xC4D3F8", VA = "0xC4D3F8")]
	public float GetPaintMaskValue(Vector2 uv)
	{
		return default(float);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xC4D658", Offset = "0xC4D658", VA = "0xC4D658")]
	public Color GetPaintTexturePixel(Vector2 uv)
	{
		return default(Color);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xC4D874", Offset = "0xC4D874", VA = "0xC4D874")]
	public RenderTexture GetMaskRT()
	{
		return null;
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xC4D90C", Offset = "0xC4D90C", VA = "0xC4D90C")]
	public RenderTexture GetPaintRT()
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xC4D9A4", Offset = "0xC4D9A4", VA = "0xC4D9A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90654C", Offset = "0x90654C")]
	public IEnumerator GetTexturesAsync()
	{
		return null;
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC4DA18", Offset = "0xC4DA18", VA = "0xC4DA18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9065B0", Offset = "0x9065B0")]
	public IEnumerator GetTexturesFast()
	{
		return null;
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC4DA8C", Offset = "0xC4DA8C", VA = "0xC4DA8C")]
	public void SetupTempTextures()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC45ACC", Offset = "0xC45ACC", VA = "0xC45ACC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906614", Offset = "0x906614")]
	public IEnumerator GetTexturesSlow()
	{
		return null;
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC45B40", Offset = "0xC45B40", VA = "0xC45B40")]
	public void ClearByteArrays()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC4DCF8", Offset = "0xC4DCF8", VA = "0xC4DCF8")]
	public void SetMaskTexture(Texture2D tex, bool flipX = false)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC4DEB4", Offset = "0xC4DEB4", VA = "0xC4DEB4")]
	public void SetPaintTexture(Texture2D tex, bool flipX = false)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC4D094", Offset = "0xC4D094", VA = "0xC4D094")]
	private void DryTextures()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC4E074", Offset = "0xC4E074", VA = "0xC4E074")]
	public void ConnectPaintTextures()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xC4E34C", Offset = "0xC4E34C", VA = "0xC4E34C")]
	private void StencilInit()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xC4E350", Offset = "0xC4E350", VA = "0xC4E350")]
	public void SetupStencilPreview(bool previewOn, Texture2D StencilTexture, float[] position, float angle, float[] scale)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xC4F404", Offset = "0xC4F404", VA = "0xC4F404")]
	public void StampStencilDown(Texture2D StencilTexture, float[] position, float angle, float[] scale, Material stamperMaterial)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xC4F870", Offset = "0xC4F870", VA = "0xC4F870")]
	public void ApplyStencilToBlueChannel(Texture2D StencilTexture, float[] position, float angle, float[] scale, Material stamperMaterial)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xC4FCDC", Offset = "0xC4FCDC", VA = "0xC4FCDC")]
	public void EnableStencilInvert(bool enable = true)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xC4FDA8", Offset = "0xC4FDA8", VA = "0xC4FDA8")]
	public void ToggleStencilInvert()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xC4FDB8", Offset = "0xC4FDB8", VA = "0xC4FDB8")]
	public void EnableStencil(bool enable = true)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xC4FE84", Offset = "0xC4FE84", VA = "0xC4FE84")]
	public void ToggleStencil()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xC4FE94", Offset = "0xC4FE94", VA = "0xC4FE94")]
	public void SetStencilBorderPercent(float percent = 0f)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xC4FF78", Offset = "0xC4FF78", VA = "0xC4FF78")]
	public PaintTexture()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xC50124", Offset = "0xC50124", VA = "0xC50124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906678", Offset = "0x906678")]
	private void <GetTexturesFast>b__117_0()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xC5017C", Offset = "0xC5017C", VA = "0xC5017C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906688", Offset = "0x906688")]
	private void <GetTexturesFast>b__117_1()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F47A8", Offset = "0x8F47A8")]
public class SprayCan : MonoBehaviour
{
	[Token(Token = "0x2000576")]
	public delegate void CanSettingsChanged(int capIndex, float metallic, float r, float g, float b);

	[Token(Token = "0x2000577")]
	public delegate void BrushAdded(float pressure, Color color, float metallic, int capIndex, bool isFirst);

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SprayCanTop;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CapRoot;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CanBody;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool EnableParticleCollision;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform SprayNozzleTransform;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxDistanceFromWall;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask PaintLayerMask;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PaintManager.PaintColour m_PaintColor;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int canState;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SprayCanAudio m_SprayCanAudio;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_SprayCanTopMaterial;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_IsSpraying;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool m_IsFirstBrush;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool m_RequiresUndoStore;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool isNetworkCan;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material SprayCursorMaterial;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem SprayParticles;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Collider m_ActivePaintCollider;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float last_pressure;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int currentCapIndex;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit m_RayCastHit;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RaycastHit[] m_RayCastHits;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool IsReplayCan;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int m_paintGroupIdx;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int m_paintColorIdx;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float m_paintPressureMultiplier;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool m_SprayCursorEnabled;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject SprayCursor;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject PressureIndicator;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject PressureIndicatorRoot;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Ray m_ray;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private RaycastHit[] m_rayCasts;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float lastDistance;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float BrushSizeScalar;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplaySprayCursor;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool m_IsLocked;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject Visuals;

	[Token(Token = "0x17000036")]
	public int CapIndex
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xB6CB74", Offset = "0xB6CB74", VA = "0xB6CB74")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000018")]
	public event CanSettingsChanged OnCanSettingsChanged
	{
		[Token(Token = "0x600040F")]
		[Address(RVA = "0xB6ABC0", Offset = "0xB6ABC0", VA = "0xB6ABC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906698", Offset = "0x906698")]
		add
		{
		}
		[Token(Token = "0x6000410")]
		[Address(RVA = "0xB6ACAC", Offset = "0xB6ACAC", VA = "0xB6ACAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9066A8", Offset = "0x9066A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event BrushAdded OnBrushAdded
	{
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xB5A5D8", Offset = "0xB5A5D8", VA = "0xB5A5D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9066B8", Offset = "0x9066B8")]
		add
		{
		}
		[Token(Token = "0x6000438")]
		[Address(RVA = "0xB6D520", Offset = "0xB6D520", VA = "0xB6D520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9066C8", Offset = "0x9066C8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB6AD98", Offset = "0xB6AD98", VA = "0xB6AD98")]
	public void ResetPaintables()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xB59720", Offset = "0xB59720", VA = "0xB59720")]
	public void SetFirstBrush()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xB6ADA0", Offset = "0xB6ADA0", VA = "0xB6ADA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xB6ADA4", Offset = "0xB6ADA4", VA = "0xB6ADA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xB6ADB0", Offset = "0xB6ADB0", VA = "0xB6ADB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB6B348", Offset = "0xB6B348", VA = "0xB6B348")]
	private void Instance_OnUIDetectedStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB6B45C", Offset = "0xB6B45C", VA = "0xB6B45C")]
	private void Instance_OnPaintCapChanged(PaintCapSettings settings)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xB6BA3C", Offset = "0xB6BA3C", VA = "0xB6BA3C")]
	public void SetBodyTexure(Texture2D texture)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xB6BB38", Offset = "0xB6BB38", VA = "0xB6BB38")]
	private void Instance_OnColorChanged(PaintManager.PaintColour color)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xB6BC20", Offset = "0xB6BC20", VA = "0xB6BC20")]
	public RaycastHit GetRaycastHit()
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xB6BC3C", Offset = "0xB6BC3C", VA = "0xB6BC3C")]
	public PaintManager.PaintColour GetFullColor()
	{
		return null;
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xB6BC44", Offset = "0xB6BC44", VA = "0xB6BC44")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xB6BC74", Offset = "0xB6BC74", VA = "0xB6BC74")]
	public SerializableVector3 GetColorVec3()
	{
		return default(SerializableVector3);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xB6BCFC", Offset = "0xB6BCFC", VA = "0xB6BCFC")]
	public Vector3 GetColorVec()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xB6BDA8", Offset = "0xB6BDA8", VA = "0xB6BDA8")]
	public void SetPaintColor(SerializableVector3 vec)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xB6BE5C", Offset = "0xB6BE5C", VA = "0xB6BE5C")]
	public void SetPaintColor(Vector4 vec)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xB6BB3C", Offset = "0xB6BB3C", VA = "0xB6BB3C")]
	public void SetPaintColor(PaintManager.PaintColour color)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xB59D94", Offset = "0xB59D94", VA = "0xB59D94")]
	public void SetPaintColor(Color color, float metallic = 0f)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xB6C0D4", Offset = "0xB6C0D4", VA = "0xB6C0D4")]
	public float GetMetallicValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xB6C600", Offset = "0xB6C600", VA = "0xB6C600")]
	public void SetMetallic(float value)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xB6C79C", Offset = "0xB6C79C", VA = "0xB6C79C")]
	public void NextColor()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xB6C844", Offset = "0xB6C844", VA = "0xB6C844")]
	public void PrevColor()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xB6C8EC", Offset = "0xB6C8EC", VA = "0xB6C8EC")]
	public void NextGroup()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xB6C994", Offset = "0xB6C994", VA = "0xB6C994")]
	public void PrevGroup()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xB6CA3C", Offset = "0xB6CA3C", VA = "0xB6CA3C")]
	public void SetPaintPressureMultiplier(float value)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xB6CA44", Offset = "0xB6CA44", VA = "0xB6CA44")]
	public void SetPressureIndicatorVisibility(bool visible)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xB6CA7C", Offset = "0xB6CA7C", VA = "0xB6CA7C")]
	private void UpdateCaps(float pressure)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB6B4E4", Offset = "0xB6B4E4", VA = "0xB6B4E4")]
	public void SetCap(int index)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xB6CB7C", Offset = "0xB6CB7C", VA = "0xB6CB7C")]
	private void UpdateParticles(float pressure)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xB6B240", Offset = "0xB6B240", VA = "0xB6B240")]
	public void UpdateSprayCursorVisbility()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xB6CC7C", Offset = "0xB6CC7C", VA = "0xB6CC7C")]
	public float GetBrushRadius(float distance)
	{
		return default(float);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xB6CD7C", Offset = "0xB6CD7C", VA = "0xB6CD7C")]
	private void UpdateSprayCursor()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xB6D324", Offset = "0xB6D324", VA = "0xB6D324")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xB6D410", Offset = "0xB6D410", VA = "0xB6D410")]
	public bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xB6D350", Offset = "0xB6D350", VA = "0xB6D350")]
	public void UpdateEffects(float pressure)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xB6D494", Offset = "0xB6D494", VA = "0xB6D494")]
	public void SetSpraycanVisible(bool visible)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xB6D4CC", Offset = "0xB6D4CC", VA = "0xB6D4CC")]
	public void StopSpraying()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xB5972C", Offset = "0xB5972C", VA = "0xB5972C")]
	public void Spray(float pressure, bool isReplay = false)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xB6BF10", Offset = "0xB6BF10", VA = "0xB6BF10")]
	private void UpdateElements()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xB6DB94", Offset = "0xB6DB94", VA = "0xB6DB94")]
	private void Update()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xB6E190", Offset = "0xB6E190", VA = "0xB6E190")]
	public SprayCan()
	{
	}
}
[Token(Token = "0x2000074")]
public class SprayCanAudio : MonoBehaviour
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource SprayAudioSource;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ShakeAudioSource;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] ShakeAudioClips;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_shakeVelocityThreshold;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_shakePitch;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_timeInShake;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ShakePitchIncrease;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ShakePitchMinTime;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ShakePitchNormalizeSpeed;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ShakeAudioVolumeScalar;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_debounceTimer;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 tooth;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastTooth;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool toothClicked;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float toothDecay;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float toothDistance;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool noFirstClick;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SprayCan Owner;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform theRent;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xB6E4A0", Offset = "0xB6E4A0", VA = "0xB6E4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xB6D418", Offset = "0xB6D418", VA = "0xB6D418")]
	public void Process(float pressure)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xB6DBF0", Offset = "0xB6DBF0", VA = "0xB6DBF0")]
	public void ProcessShakeAudio()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xB6E664", Offset = "0xB6E664", VA = "0xB6E664")]
	public SprayCanAudio()
	{
	}
}
[Token(Token = "0x2000075")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F480C", Offset = "0x8F480C")]
public class SprayCanDebugController : MonoBehaviour
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SprayCan m_SprayCan;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Pressure;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xB6E6A0", Offset = "0xB6E6A0", VA = "0xB6E6A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xB6E6F8", Offset = "0xB6E6F8", VA = "0xB6E6F8")]
	public void PlayAnim(string animname)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xB6E770", Offset = "0xB6E770", VA = "0xB6E770")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xB6E804", Offset = "0xB6E804", VA = "0xB6E804")]
	private void Update()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xB6E8C0", Offset = "0xB6E8C0", VA = "0xB6E8C0")]
	public SprayCanDebugController()
	{
	}
}
[Token(Token = "0x2000076")]
public class SprayCanPlayerController : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KSVR_HandAttacher m_HandAttacher;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UILaserPointer m_UIPointer;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private KSVR_Hand m_Hand;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8BE8", Offset = "0x8F8BE8")]
	private SprayCan <SprayCan>k__BackingField;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SprayCanPlayerController _instance;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider m_tempCollider;

	[Token(Token = "0x17000037")]
	public SprayCan SprayCan
	{
		[Token(Token = "0x6000447")]
		[Address(RVA = "0xB5A5C0", Offset = "0xB5A5C0", VA = "0xB5A5C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9066D8", Offset = "0x9066D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000448")]
		[Address(RVA = "0xB6F764", Offset = "0xB6F764", VA = "0xB6F764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9066E8", Offset = "0x9066E8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public static SprayCanPlayerController Instance
	{
		[Token(Token = "0x6000449")]
		[Address(RVA = "0xB6F76C", Offset = "0xB6F76C", VA = "0xB6F76C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB6F838", Offset = "0xB6F838", VA = "0xB6F838")]
	public void OnSwapHandsEvent()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xB6F83C", Offset = "0xB6F83C", VA = "0xB6F83C")]
	private void Start()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xB6F8E4", Offset = "0xB6F8E4", VA = "0xB6F8E4")]
	private void M_HandAttacher_OnAttachedComplete()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xB6FD8C", Offset = "0xB6FD8C", VA = "0xB6FD8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xB6F8E8", Offset = "0xB6F8E8", VA = "0xB6F8E8")]
	private void Setup()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xB6FD90", Offset = "0xB6FD90", VA = "0xB6FD90")]
	private void M_UIPointer_OnUIDetectedStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xB70038", Offset = "0xB70038", VA = "0xB70038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB70704", Offset = "0xB70704", VA = "0xB70704")]
	public SprayCanPlayerController()
	{
	}
}
[Token(Token = "0x2000077")]
public class SprayCanReplayController : MonoBehaviour
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SprayCan m_SprayCan;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB7070C", Offset = "0xB7070C", VA = "0xB7070C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB70764", Offset = "0xB70764", VA = "0xB70764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB70768", Offset = "0xB70768", VA = "0xB70768")]
	public SprayCanReplayController()
	{
	}
}
[Token(Token = "0x2000078")]
public class UsePaintTexture : MonoBehaviour
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PaintObject;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer _renderer;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer _paintRenderer;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xAE0E38", Offset = "0xAE0E38", VA = "0xAE0E38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xAE0EB8", Offset = "0xAE0EB8", VA = "0xAE0EB8")]
	public void SetPaintAlpha(float value)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xAE0FA0", Offset = "0xAE0FA0", VA = "0xAE0FA0")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xAE11F4", Offset = "0xAE11F4", VA = "0xAE11F4")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xAE11F8", Offset = "0xAE11F8", VA = "0xAE11F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xAE11FC", Offset = "0xAE11FC", VA = "0xAE11FC")]
	public UsePaintTexture()
	{
	}
}
[Token(Token = "0x2000079")]
public class Phone : MonoBehaviour
{
	[Token(Token = "0x2000578")]
	public enum SaveMode
	{
		[Token(Token = "0x4001EE6")]
		SAVE_ARTWORK,
		[Token(Token = "0x4001EE7")]
		TAKE_SCREENSHOT
	}

	[Token(Token = "0x2000579")]
	public delegate void VisibilityChanged(bool visible);

	[Token(Token = "0x200057A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F71A4", Offset = "0x8F71A4")]
	private sealed class <ProcessRequests>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Dictionary<string, object>> requests;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Phone <>4__this;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <notifyUser>5__2;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Dictionary<string, object>>.Enumerator <>7__wrap2;

		[Token(Token = "0x170003EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xA95874", Offset = "0xA95874", VA = "0xA95874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0xA958E4", Offset = "0xA958E4", VA = "0xA958E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xA94BA4", Offset = "0xA94BA4", VA = "0xA94BA4")]
		[DebuggerHidden]
		public <ProcessRequests>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xA94D58", Offset = "0xA94D58", VA = "0xA94D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xA94DCC", Offset = "0xA94DCC", VA = "0xA94DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xA94D74", Offset = "0xA94D74", VA = "0xA94D74")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xA9587C", Offset = "0xA9587C", VA = "0xA9587C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PhoneRoot;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ProjectorTransform;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private KSVR_HandAttacher m_HandAttacher;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIArtworkMenu LoadArtworkMenu;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Projector Projector;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text TooltipTitle;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text Tooltip;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image TimerImage;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera Camera;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isLocked;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform SelfieCameraTransform;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform RearCameraTransform;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SaveMode m_SaveMode;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Phone _instance;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MultiplayerPhoneMenu MultiplayerPhoneMenu;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIMenu Menu;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UIButton CleanButton;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UIButton SaveButton;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UIButton LoadButton;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIButton ProjectorButton;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UIButton ReplayButton;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool m_SelfieCameraActive;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool m_HidePaintMenuWhenUsingPhone;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Color OfflinePanelColor;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Color OnlinePanelColor;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image OnlinePanel;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Dictionary<string, object>> RequestQueue;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<string, object> RequestLookup;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioSource Audio;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioClip[] Notifications;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TMP_Text NotificationCountText;

	[Token(Token = "0x17000039")]
	public static Phone Instance
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xA937F4", Offset = "0xA937F4", VA = "0xA937F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400001A")]
	public event VisibilityChanged OnVisibilityChanged
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xA938C0", Offset = "0xA938C0", VA = "0xA938C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9066F8", Offset = "0x9066F8")]
		add
		{
		}
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xA939AC", Offset = "0xA939AC", VA = "0xA939AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906708", Offset = "0x906708")]
		remove
		{
		}
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xA935D0", Offset = "0xA935D0", VA = "0xA935D0")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xA93A98", Offset = "0xA93A98", VA = "0xA93A98")]
	public void ShowAndPlayTimer()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xA93B54", Offset = "0xA93B54", VA = "0xA93B54")]
	public void HideTimer()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xA93BA0", Offset = "0xA93BA0", VA = "0xA93BA0")]
	public void RefreshArtwork()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xA93BD0", Offset = "0xA93BD0", VA = "0xA93BD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA93CB4", Offset = "0xA93CB4", VA = "0xA93CB4")]
	public void Save()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA93DF0", Offset = "0xA93DF0", VA = "0xA93DF0")]
	public void FlipCamera()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA93F80", Offset = "0xA93F80", VA = "0xA93F80")]
	public void UpdatePlayerPrefs(bool lockPaintMenu = true)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA94058", Offset = "0xA94058", VA = "0xA94058")]
	public void SetOnline(bool online)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA940CC", Offset = "0xA940CC", VA = "0xA940CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA94194", Offset = "0xA94194", VA = "0xA94194")]
	private void M_HandAttacher_OnAttachedComplete()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xA94198", Offset = "0xA94198", VA = "0xA94198")]
	private void SetupController()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xA935E8", Offset = "0xA935E8", VA = "0xA935E8")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xA94728", Offset = "0xA94728", VA = "0xA94728")]
	private void Update()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xA949BC", Offset = "0xA949BC", VA = "0xA949BC")]
	public void ResetToDefault()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xA949C4", Offset = "0xA949C4", VA = "0xA949C4")]
	public void ClearRequestQueue()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xA949C8", Offset = "0xA949C8", VA = "0xA949C8")]
	public void RemoveItem(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA94B0C", Offset = "0xA94B0C", VA = "0xA94B0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906718", Offset = "0x906718")]
	public IEnumerator ProcessRequests(List<Dictionary<string, object>> requests)
	{
		return null;
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xA94BD0", Offset = "0xA94BD0", VA = "0xA94BD0")]
	public void PlayNotification()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xA94CB8", Offset = "0xA94CB8", VA = "0xA94CB8")]
	public Phone()
	{
	}
}
[Token(Token = "0x200007A")]
public class PlayerSpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GameComponentsPrefab;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRManager.FixedFoveatedRenderingLevel FFRL;

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xAA2124", Offset = "0xAA2124", VA = "0xAA2124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xAA22F0", Offset = "0xAA22F0", VA = "0xAA22F0")]
	public PlayerSpawnPoint()
	{
	}
}
[Token(Token = "0x200007B")]
public class ProfileNameTag : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text PlayerName;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetworkDummyCommander owner;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MasterClientCrown;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startScale;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MaxDistance;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 MinMaxScale;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform NameTagLocation;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xAA3C6C", Offset = "0xAA3C6C", VA = "0xAA3C6C")]
	public void SetNameTag(string name, NetworkDummyCommander dummy)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xAA3CBC", Offset = "0xAA3CBC", VA = "0xAA3CBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xAA3D1C", Offset = "0xAA3D1C", VA = "0xAA3D1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xAA405C", Offset = "0xAA405C", VA = "0xAA405C")]
	public ProfileNameTag()
	{
	}
}
[Token(Token = "0x200007C")]
public class ImageCarousel : MonoBehaviour
{
	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F71B4", Offset = "0x8F71B4")]
	private sealed class <GetCategoryImageUrls>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageCarousel <>4__this;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action result;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Helpers.CoroutineWithData <mongoData>5__2;

		[Token(Token = "0x170003EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xC65078", Offset = "0xC65078", VA = "0xC65078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xC650E8", Offset = "0xC650E8", VA = "0xC650E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xC627B4", Offset = "0xC627B4", VA = "0xC627B4")]
		[DebuggerHidden]
		public <GetCategoryImageUrls>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xC64D04", Offset = "0xC64D04", VA = "0xC64D04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0xC64D08", Offset = "0xC64D08", VA = "0xC64D08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xC65080", Offset = "0xC65080", VA = "0xC65080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F71C4", Offset = "0x8F71C4")]
	private sealed class <GetStencilsImageUrls>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageCarousel <>4__this;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action result;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Helpers.CoroutineWithData <mongoData>5__2;

		[Token(Token = "0x170003F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0xC6555C", Offset = "0xC6555C", VA = "0xC6555C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0xC655CC", Offset = "0xC655CC", VA = "0xC655CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0xC62878", Offset = "0xC62878", VA = "0xC62878")]
		[DebuggerHidden]
		public <GetStencilsImageUrls>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xC650F0", Offset = "0xC650F0", VA = "0xC650F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0xC650F4", Offset = "0xC650F4", VA = "0xC650F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xC65564", Offset = "0xC65564", VA = "0xC65564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F71D4", Offset = "0x8F71D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, bool> <>9__24_0;

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0xC64C64", Offset = "0xC64C64", VA = "0xC64C64")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0xC64C6C", Offset = "0xC64C6C", VA = "0xC64C6C")]
		internal bool <GetLocalStencils>b__24_0(string s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200057E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F71E4", Offset = "0x8F71E4")]
	private sealed class <LoadTextureAsync>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string originalFileName;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Texture2D, Transform> result;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform imageChild;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x170003F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0xC65748", Offset = "0xC65748", VA = "0xC65748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0xC657B8", Offset = "0xC657B8", VA = "0xC657B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xC62E24", Offset = "0xC62E24", VA = "0xC62E24")]
		[DebuggerHidden]
		public <LoadTextureAsync>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xC655D4", Offset = "0xC655D4", VA = "0xC655D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xC655D8", Offset = "0xC655D8", VA = "0xC655D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0xC65750", Offset = "0xC65750", VA = "0xC65750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F71F4", Offset = "0x8F71F4")]
	private sealed class <Start>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageCarousel <>4__this;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170003F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0xC65F34", Offset = "0xC65F34", VA = "0xC65F34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xC65FA4", Offset = "0xC65FA4", VA = "0xC65FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xC62EC4", Offset = "0xC62EC4", VA = "0xC62EC4")]
		[DebuggerHidden]
		public <Start>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xC657C0", Offset = "0xC657C0", VA = "0xC657C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xC657C4", Offset = "0xC657C4", VA = "0xC657C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xC65F3C", Offset = "0xC65F3C", VA = "0xC65F3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> m_Positions;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string localStencilPath;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ChildrenContainer;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LoadingPanel;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject StecilModePanel;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_Index;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ImageCarouselItem> m_Images;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> m_ImageUrls;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> m_CategoryUrls;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float LerpSpeed;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public LayerMask PaintableLayer;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D texture;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material StamperMaterial;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] position;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] scale;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float angle;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float aspect;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float debounce;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float Scale;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool IsCurrentStencilActive;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool hasInitalized;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image SelectedStencilImage;

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC6266C", Offset = "0xC6266C", VA = "0xC6266C")]
	private static string GetCleanFileName(string originalFileName)
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC62718", Offset = "0xC62718", VA = "0xC62718")]
	private void StencilsFinishedLoading()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xC6271C", Offset = "0xC6271C", VA = "0xC6271C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90677C", Offset = "0x90677C")]
	private IEnumerator GetCategoryImageUrls(Action result)
	{
		return null;
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC627E0", Offset = "0xC627E0", VA = "0xC627E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9067E0", Offset = "0x9067E0")]
	private IEnumerator GetStencilsImageUrls(Action result)
	{
		return null;
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC628A4", Offset = "0xC628A4", VA = "0xC628A4")]
	private void GetLocalStencils()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xC62D74", Offset = "0xC62D74", VA = "0xC62D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906844", Offset = "0x906844")]
	public IEnumerator LoadTextureAsync(string originalFileName, Transform imageChild, Action<Texture2D, Transform> result)
	{
		return null;
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xC62E50", Offset = "0xC62E50", VA = "0xC62E50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9068A8", Offset = "0x9068A8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xC62EF0", Offset = "0xC62EF0", VA = "0xC62EF0")]
	private void SetImage(Texture2D texture, Transform imageChild)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xC63090", Offset = "0xC63090", VA = "0xC63090")]
	private void UpdateItems()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xC63570", Offset = "0xC63570", VA = "0xC63570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xC63E4C", Offset = "0xC63E4C", VA = "0xC63E4C")]
	private void Next()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xC641BC", Offset = "0xC641BC", VA = "0xC641BC")]
	private void Prev()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xC64838", Offset = "0xC64838", VA = "0xC64838")]
	private void SetupStencilPreview()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xC648F8", Offset = "0xC648F8", VA = "0xC648F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xC64678", Offset = "0xC64678", VA = "0xC64678")]
	public void StampStencilTexture()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xC64A50", Offset = "0xC64A50", VA = "0xC64A50")]
	public void ToggleStencil()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xC649B8", Offset = "0xC649B8", VA = "0xC649B8")]
	public void EnableStencilInvert(bool enabled)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xC645B0", Offset = "0xC645B0", VA = "0xC645B0")]
	public void StampStencil()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xC64AD8", Offset = "0xC64AD8", VA = "0xC64AD8")]
	public ImageCarousel()
	{
	}
}
[Token(Token = "0x200007D")]
public class ImageCarouselItem : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lerpPos;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float delta;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isLerping;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float Speed;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xC65FAC", Offset = "0xC65FAC", VA = "0xC65FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xC64820", Offset = "0xC64820", VA = "0xC64820")]
	public void SetPosition(Vector3 position, float speed = 1f)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xC65FB0", Offset = "0xC65FB0", VA = "0xC65FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xC66110", Offset = "0xC66110", VA = "0xC66110")]
	public ImageCarouselItem()
	{
	}
}
[Token(Token = "0x200007E")]
public class ImageProjector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000580")]
	public class ProjectorData
	{
		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public SerializableVector3 Position;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public SerializableQuaternion Rotation;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float AspectRatio;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float FieldOfView;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public float Alpha;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string Image;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public bool IsStealth;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		public bool IsLocked;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public int Version;

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xC698C8", Offset = "0xC698C8", VA = "0xC698C8")]
		public ProjectorData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7204", Offset = "0x8F7204")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, bool> <>9__37_0;

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xC68548", Offset = "0xC68548", VA = "0xC68548")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0xC68550", Offset = "0xC68550", VA = "0xC68550")]
		internal bool <GetOutlines>b__37_0(string s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7214", Offset = "0x8F7214")]
	private sealed class <GetOutlines>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageProjector <>4__this;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <getAlbums>5__2;

		[Token(Token = "0x170003F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xC68EE8", Offset = "0xC68EE8", VA = "0xC68EE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xC68F58", Offset = "0xC68F58", VA = "0xC68F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xC678FC", Offset = "0xC678FC", VA = "0xC678FC")]
		[DebuggerHidden]
		public <GetOutlines>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0xC685E8", Offset = "0xC685E8", VA = "0xC685E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xC685EC", Offset = "0xC685EC", VA = "0xC685EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0xC68EF0", Offset = "0xC68EF0", VA = "0xC68EF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7224", Offset = "0x8F7224")]
	private sealed class <LoadProjectorImageAsync2>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MediaUrl;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ImageProjector <>4__this;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x170003F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xC69850", Offset = "0xC69850", VA = "0xC69850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xC698C0", Offset = "0xC698C0", VA = "0xC698C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0xC67B78", Offset = "0xC67B78", VA = "0xC67B78")]
		[DebuggerHidden]
		public <LoadProjectorImageAsync2>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0xC695E8", Offset = "0xC695E8", VA = "0xC695E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0xC695EC", Offset = "0xC695EC", VA = "0xC695EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xC69858", Offset = "0xC69858", VA = "0xC69858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7234", Offset = "0x8F7234")]
	private sealed class <LoadImageAsync>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MediaUrl;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ImageProjector <>4__this;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] <bytes>5__2;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <w>5__3;

		[Token(Token = "0x170003FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xC69570", Offset = "0xC69570", VA = "0xC69570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xC695E0", Offset = "0xC695E0", VA = "0xC695E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0xC67BA4", Offset = "0xC67BA4", VA = "0xC67BA4")]
		[DebuggerHidden]
		public <LoadImageAsync>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0xC68F60", Offset = "0xC68F60", VA = "0xC68F60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0xC6903C", Offset = "0xC6903C", VA = "0xC6903C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0xC68F7C", Offset = "0xC68F7C", VA = "0xC68F7C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0xC69578", Offset = "0xC69578", VA = "0xC69578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_referencePath;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Screen;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> m_ImageList;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_Index;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider AlphaSlider;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider AspectSlider;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider ScaleSlider;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject OptionsPanel;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject LockButton;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject UnockButton;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Visuals;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Root;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ImageBrowser;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_InStealthMode;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material StamperMaterial;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] position;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] scale;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float angle;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float aspect;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool previewOn;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool m_IsLocked;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Dictionary<string, object>> Outlines;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool m_IsProjecting;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture2D texture;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D thumbnailTexture;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LayerMask PaintableLayer;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xC66120", Offset = "0xC66120", VA = "0xC66120")]
	private void OnLevelWasLoaded()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xC66128", Offset = "0xC66128", VA = "0xC66128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xC6659C", Offset = "0xC6659C", VA = "0xC6659C")]
	public void SaveJson(string filename)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xC66BCC", Offset = "0xC66BCC", VA = "0xC66BCC")]
	public void LoadJson(string filename)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xC67438", Offset = "0xC67438", VA = "0xC67438")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xC673DC", Offset = "0xC673DC", VA = "0xC673DC")]
	public void SetStealth(bool enabled)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xC67580", Offset = "0xC67580", VA = "0xC67580")]
	public bool IsStealth()
	{
		return default(bool);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xC67588", Offset = "0xC67588", VA = "0xC67588")]
	private void AlphaValueChanged()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xC6758C", Offset = "0xC6758C", VA = "0xC6758C")]
	private void AspectValueChanged()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xC67590", Offset = "0xC67590", VA = "0xC67590")]
	private void ScaleValueChanged()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xC664C0", Offset = "0xC664C0", VA = "0xC664C0")]
	public void ShowOptions(bool visible)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xC67670", Offset = "0xC67670", VA = "0xC67670")]
	public void LoadImageOntoProjector()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xC67864", Offset = "0xC67864", VA = "0xC67864")]
	public void EnableStencilInvert(bool enabled)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xC66528", Offset = "0xC66528", VA = "0xC66528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90690C", Offset = "0x90690C")]
	private IEnumerator GetOutlines()
	{
		return null;
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xC67928", Offset = "0xC67928", VA = "0xC67928")]
	public void Next()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xC67A50", Offset = "0xC67A50", VA = "0xC67A50")]
	public void Prev()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xC677CC", Offset = "0xC677CC", VA = "0xC677CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906970", Offset = "0x906970")]
	private IEnumerator LoadProjectorImageAsync2(string MediaUrl)
	{
		return null;
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xC674E8", Offset = "0xC674E8", VA = "0xC674E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9069D4", Offset = "0x9069D4")]
	private IEnumerator LoadImageAsync(string MediaUrl)
	{
		return null;
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xC67BD0", Offset = "0xC67BD0", VA = "0xC67BD0")]
	public void StampTexture()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xC67CCC", Offset = "0xC67CCC", VA = "0xC67CCC")]
	public void ToggleStencil()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xC67D54", Offset = "0xC67D54", VA = "0xC67D54")]
	public void StampStencil()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC67E1C", Offset = "0xC67E1C", VA = "0xC67E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC68438", Offset = "0xC68438", VA = "0xC68438")]
	public ImageProjector()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC684D8", Offset = "0xC684D8", VA = "0xC684D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906A38", Offset = "0x906A38")]
	private void <Start>b__21_0(float <p0>)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC684DC", Offset = "0xC684DC", VA = "0xC684DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906A48", Offset = "0x906A48")]
	private void <Start>b__21_1(float <p0>)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC684E0", Offset = "0xC684E0", VA = "0xC684E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906A58", Offset = "0x906A58")]
	private void <Start>b__21_2(float <p0>)
	{
	}
}
[Token(Token = "0x200007F")]
public class AvatarPlayback : MonoBehaviour
{
	[Token(Token = "0x2000585")]
	public delegate void AnimationFinished();

	[Token(Token = "0x2000586")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7244", Offset = "0x8F7244")]
	private sealed class <Playback>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarPlayback <>4__this;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Record.SerializablePose <_trans>5__2;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float <_blendTime>5__3;

		[Token(Token = "0x170003FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xB2AAB0", Offset = "0xB2AAB0", VA = "0xB2AAB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xB2AB20", Offset = "0xB2AB20", VA = "0xB2AB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0xB29878", Offset = "0xB29878", VA = "0xB29878")]
		[DebuggerHidden]
		public <Playback>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0xB2996C", Offset = "0xB2996C", VA = "0xB2996C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0xB29970", Offset = "0xB29970", VA = "0xB29970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0xB2AAB8", Offset = "0xB2AAB8", VA = "0xB2AAB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7254", Offset = "0x8F7254")]
	private sealed class <Start>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarPlayback <>4__this;

		[Token(Token = "0x170003FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xB2ACF0", Offset = "0xB2ACF0", VA = "0xB2ACF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xB2AD60", Offset = "0xB2AD60", VA = "0xB2AD60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0xB29918", Offset = "0xB29918", VA = "0xB29918")]
		[DebuggerHidden]
		public <Start>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0xB2AB28", Offset = "0xB2AB28", VA = "0xB2AB28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0xB2AB2C", Offset = "0xB2AB2C", VA = "0xB2AB2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0xB2ACF8", Offset = "0xB2ACF8", VA = "0xB2ACF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool requiresBlend;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isRightHanded;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool isPlaying;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int frame;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8C08", Offset = "0x8F8C08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8C08", Offset = "0x8F8C08")]
	public bool LoopAnim;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blendTime;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FrameRate;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int UniquePlayerID;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextAsset PlaybackFile;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8C68", Offset = "0x8F8C68")]
	public GameObject ReplayRootNode;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SprayCan ReplaySprayCan;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ReplayLeftHand;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ReplayRightHand;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ReplayHead;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator ReplayLHandAnimator;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator ReplayRHandAnimator;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SprayCanAudio SprayCanAudio;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform SprayCanLHandAttach;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform SprayCanRHandAttach;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ObjectStream<Record.SerializablePose> m_ObjectStream;

	[Token(Token = "0x1400001B")]
	public event AnimationFinished OnAnimationFinished
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xB29104", Offset = "0xB29104", VA = "0xB29104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906A68", Offset = "0x906A68")]
		add
		{
		}
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xB291F0", Offset = "0xB291F0", VA = "0xB291F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906A78", Offset = "0x906A78")]
		remove
		{
		}
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xB292DC", Offset = "0xB292DC", VA = "0xB292DC")]
	public void SetHandiness(bool rightHanded)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xB2952C", Offset = "0xB2952C", VA = "0xB2952C")]
	public void LoadAndPlaybackAsset(byte[] bytes, bool loop = false, bool blend = false)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xB29700", Offset = "0xB29700", VA = "0xB29700")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xB297B8", Offset = "0xB297B8", VA = "0xB297B8")]
	public void StopPlayback()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xB29744", Offset = "0xB29744", VA = "0xB29744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906A88", Offset = "0x906A88")]
	public IEnumerator Playback()
	{
		return null;
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xB298A4", Offset = "0xB298A4", VA = "0xB298A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906AEC", Offset = "0x906AEC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xB29944", Offset = "0xB29944", VA = "0xB29944")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB29948", Offset = "0xB29948", VA = "0xB29948")]
	public AvatarPlayback()
	{
	}
}
[Token(Token = "0x2000080")]
public class AvatarRecorder : MonoBehaviour
{
	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7264", Offset = "0x8F7264")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarRecorder <>4__this;

		[Token(Token = "0x17000400")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xB2BD60", Offset = "0xB2BD60", VA = "0xB2BD60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xB2BDD0", Offset = "0xB2BDD0", VA = "0xB2BDD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0xB2AEF8", Offset = "0xB2AEF8", VA = "0xB2AEF8")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xB2BBB0", Offset = "0xB2BBB0", VA = "0xB2BBB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0xB2BBB4", Offset = "0xB2BBB4", VA = "0xB2BBB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xB2BD68", Offset = "0xB2BD68", VA = "0xB2BD68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjectStream<Record.SerializablePose> m_ObjectStream;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool brushLastFrame;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isRecording;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool AutoStartRecording;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AvatarRecorder _instance;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Record.SerializablePose pose;

	[Token(Token = "0x1700003A")]
	public static AvatarRecorder Instance
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB2ADB8", Offset = "0xB2ADB8", VA = "0xB2ADB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xB2AE84", Offset = "0xB2AE84", VA = "0xB2AE84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906B50", Offset = "0x906B50")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xB2AF24", Offset = "0xB2AF24", VA = "0xB2AF24")]
	private void PaintTexture_OnBrushAdded(int id, int capIndex, Vector3 point, Vector2 texcoord, float distance, Vector4 color, float metallic, bool first, float canAngle, Transform handTrans, Transform canTrans)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xB2AF58", Offset = "0xB2AF58", VA = "0xB2AF58")]
	public void RecordPose(int id, int capIndex, Vector3 point, Vector2 texcoord, float distance, Vector4 color, float metallic, bool first, float canAngle)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xB2B7AC", Offset = "0xB2B7AC", VA = "0xB2B7AC")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xB2B854", Offset = "0xB2B854", VA = "0xB2B854")]
	public void SaveRecording(string filename)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xB2B960", Offset = "0xB2B960", VA = "0xB2B960")]
	public void SaveRecording()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xB2BA64", Offset = "0xB2BA64", VA = "0xB2BA64")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xB2BBA0", Offset = "0xB2BBA0", VA = "0xB2BBA0")]
	public AvatarRecorder()
	{
	}
}
[Token(Token = "0x2000081")]
public class ObjectStream<T>
{
	[Token(Token = "0x2000589")]
	private enum Mode
	{
		[Token(Token = "0x4001F2A")]
		Open,
		[Token(Token = "0x4001F2B")]
		Closed
	}

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int objectSize;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mode mode;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private FileStream fs;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T tempObject;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string fileName;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private byte[] tempBytes;

	[Token(Token = "0x1700003B")]
	public long Length
	{
		[Token(Token = "0x60004BC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700003C")]
	private string fullStreamPath
	{
		[Token(Token = "0x60004BD")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	private bool isReady
	{
		[Token(Token = "0x60004BE")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004BF")]
	private void newStreamFileName()
	{
	}

	[Token(Token = "0x60004C0")]
	private void cleanupOldStream()
	{
	}

	[Token(Token = "0x60004C1")]
	private void newStream()
	{
	}

	[Token(Token = "0x60004C2")]
	public void Write<T>(T singleObject) where T : struct
	{
	}

	[Token(Token = "0x60004C3")]
	public T Read<T>(int index) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x60004C4")]
	public void Save(string saveFileName)
	{
	}

	[Token(Token = "0x60004C5")]
	public void Load(string loadFileName)
	{
	}

	[Token(Token = "0x60004C6")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60004C7")]
	public void Destroy()
	{
	}

	[Token(Token = "0x60004C8")]
	public void init()
	{
	}

	[Token(Token = "0x60004C9")]
	public ObjectStream()
	{
	}
}
[Token(Token = "0x2000082")]
public class Record : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200058A")]
	public struct SerializableVec2
	{
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0x9A443C", Offset = "0x9A443C", VA = "0x9A443C")]
		public SerializableVec2(float x, float y)
		{
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x9A4444", Offset = "0x9A4444", VA = "0x9A4444")]
		public SerializableVec2(Vector2 vector2)
		{
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x9A444C", Offset = "0x9A444C", VA = "0x9A444C")]
		public Vector2 ToVector2()
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200058B")]
	public struct SerializableVec3
	{
		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0x9A447C", Offset = "0x9A447C", VA = "0x9A447C")]
		public SerializableVec3(float x, float y, float z)
		{
		}

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0x9A4488", Offset = "0x9A4488", VA = "0x9A4488")]
		public SerializableVec3(Vector3 vector3)
		{
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0x9A4494", Offset = "0x9A4494", VA = "0x9A4494")]
		public Vector3 ToVector3()
		{
			return default(Vector3);
		}
	}

	[Serializable]
	[Token(Token = "0x200058C")]
	public struct SerializableVec4
	{
		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0x9A44D0", Offset = "0x9A44D0", VA = "0x9A44D0")]
		public SerializableVec4(float x, float y, float z, float w)
		{
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0x9A44DC", Offset = "0x9A44DC", VA = "0x9A44DC")]
		public SerializableVec4(Vector4 vector4)
		{
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0x9A44E8", Offset = "0x9A44E8", VA = "0x9A44E8")]
		public SerializableVec4(Quaternion quat)
		{
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0x9A44F4", Offset = "0x9A44F4", VA = "0x9A44F4")]
		public Vector4 ToVector4()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0x9A44FC", Offset = "0x9A44FC", VA = "0x9A44FC")]
		public Quaternion ToQuaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0x9A4504", Offset = "0x9A4504", VA = "0x9A4504")]
		public Color ToColor()
		{
			return default(Color);
		}
	}

	[Serializable]
	[Token(Token = "0x200058D")]
	public struct SerializablePose
	{
		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SerializablePaint paint;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SerializableTransform lHand;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public SerializableTransform rHand;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SerializableTransform head;

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0x9A4374", Offset = "0x9A4374", VA = "0x9A4374")]
		public SerializablePose(SerializableTransform lHand, SerializableTransform rHand, SerializableTransform head, SerializablePaint paint)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200058E")]
	public struct SerializableCamera
	{
		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SerializableTransform transform;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fov;

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0x9A412C", Offset = "0x9A412C", VA = "0x9A412C")]
		public SerializableCamera(Camera camera)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200058F")]
	public struct SerializablePaint
	{
		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int capIndex;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SerializableVec3 point;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SerializableVec2 texcoord;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distance;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerializableVec4 color;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pressure;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool first;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float canAngle;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool RightHanded;

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0x9A4210", Offset = "0x9A4210", VA = "0x9A4210")]
		public SerializablePaint(int id, int capIndex, Vector3 point, Vector2 texcoord, float distance, Vector4 color, float pressure, bool first, float canAngle, bool rightHanded)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000590")]
	public struct SerializableTransform
	{
		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SerializableVec3 position;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SerializableVec4 rotation;

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0x9A4420", Offset = "0x9A4420", VA = "0x9A4420")]
		public SerializableTransform(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002C1A")]
		[Address(RVA = "0x9A4434", Offset = "0x9A4434", VA = "0x9A4434")]
		public SerializableTransform(Transform trans)
		{
		}
	}

	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7274", Offset = "0x8F7274")]
	private sealed class <Recording>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Record <>4__this;

		[Token(Token = "0x17000402")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xB56C88", Offset = "0xB56C88", VA = "0xB56C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000403")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xB56CF8", Offset = "0xB56CF8", VA = "0xB56CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0xB56B88", Offset = "0xB56B88", VA = "0xB56B88")]
		[DebuggerHidden]
		public <Recording>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002C1C")]
		[Address(RVA = "0xB56BB4", Offset = "0xB56BB4", VA = "0xB56BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0xB56BB8", Offset = "0xB56BB8", VA = "0xB56BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0xB56C90", Offset = "0xB56C90", VA = "0xB56C90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7284", Offset = "0x8F7284")]
	private sealed class <Playback>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000404")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xB56B10", Offset = "0xB56B10", VA = "0xB56B10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000405")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0xB56B80", Offset = "0xB56B80", VA = "0xB56B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0xB56AA4", Offset = "0xB56AA4", VA = "0xB56AA4")]
		[DebuggerHidden]
		public <Playback>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0xB56AD0", Offset = "0xB56AD0", VA = "0xB56AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0xB56AD4", Offset = "0xB56AD4", VA = "0xB56AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0xB56B18", Offset = "0xB56B18", VA = "0xB56B18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isRecording;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool isPlaying;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int frame;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FrameRate;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string filename;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xAA5B20", Offset = "0xAA5B20", VA = "0xAA5B20")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xAA5B98", Offset = "0xAA5B98", VA = "0xAA5B98", Slot = "4")]
	public virtual void StartPlayback()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xAA5BD8", Offset = "0xAA5BD8", VA = "0xAA5BD8", Slot = "5")]
	public virtual void StopPlayback()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xAA5C10", Offset = "0xAA5C10", VA = "0xAA5C10", Slot = "6")]
	public virtual void StartRecord()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xAA5C50", Offset = "0xAA5C50", VA = "0xAA5C50", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906BB4", Offset = "0x906BB4")]
	public virtual IEnumerator Recording()
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xAA5CC4", Offset = "0xAA5CC4", VA = "0xAA5CC4", Slot = "8")]
	public virtual void StopRecord()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xAA5CCC", Offset = "0xAA5CCC", VA = "0xAA5CCC", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906C18", Offset = "0x906C18")]
	public virtual IEnumerator Playback()
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xAA5D2C", Offset = "0xAA5D2C", VA = "0xAA5D2C", Slot = "10")]
	public virtual void CaptureFrame()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xAA5D30", Offset = "0xAA5D30", VA = "0xAA5D30")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xAA5D48", Offset = "0xAA5D48", VA = "0xAA5D48")]
	public Record()
	{
	}
}
[Token(Token = "0x2000083")]
public class RecordBrush : Record
{
	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7294", Offset = "0x8F7294")]
	private sealed class <Playback>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordBrush <>4__this;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000406")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xB57548", Offset = "0xB57548", VA = "0xB57548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xB575B8", Offset = "0xB575B8", VA = "0xB575B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0xB57328", Offset = "0xB57328", VA = "0xB57328")]
		[DebuggerHidden]
		public <Playback>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0xB573FC", Offset = "0xB573FC", VA = "0xB573FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0xB57400", Offset = "0xB57400", VA = "0xB57400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0xB57550", Offset = "0xB57550", VA = "0xB57550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F72A4", Offset = "0x8F72A4")]
	private sealed class <Recording>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000408")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xB57600", Offset = "0xB57600", VA = "0xB57600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C32")]
			[Address(RVA = "0xB57670", Offset = "0xB57670", VA = "0xB57670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0xB573B4", Offset = "0xB573B4", VA = "0xB573B4")]
		[DebuggerHidden]
		public <Recording>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0xB575C0", Offset = "0xB575C0", VA = "0xB575C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0xB575C4", Offset = "0xB575C4", VA = "0xB575C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0xB57608", Offset = "0xB57608", VA = "0xB57608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectStream<SerializablePaint> m_ObjectStream;

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xB5700C", Offset = "0xB5700C", VA = "0xB5700C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xB5705C", Offset = "0xB5705C", VA = "0xB5705C", Slot = "6")]
	public override void StartRecord()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xB570EC", Offset = "0xB570EC", VA = "0xB570EC", Slot = "4")]
	public override void StartPlayback()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xB571AC", Offset = "0xB571AC", VA = "0xB571AC", Slot = "5")]
	public override void StopPlayback()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xB57218", Offset = "0xB57218", VA = "0xB57218", Slot = "8")]
	public override void StopRecord()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xB572B4", Offset = "0xB572B4", VA = "0xB572B4", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906C7C", Offset = "0x906C7C")]
	public override IEnumerator Playback()
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xB57354", Offset = "0xB57354", VA = "0xB57354", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906CE0", Offset = "0x906CE0")]
	public override IEnumerator Recording()
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xB573E0", Offset = "0xB573E0", VA = "0xB573E0", Slot = "10")]
	public override void CaptureFrame()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xB573E8", Offset = "0xB573E8", VA = "0xB573E8")]
	public void AddBrushStroke(BrushStroke brush)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xB573EC", Offset = "0xB573EC", VA = "0xB573EC")]
	public RecordBrush()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xB573F4", Offset = "0xB573F4", VA = "0xB573F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906D44", Offset = "0x906D44")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000084")]
public class RecordCamera : Record
{
	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F72B4", Offset = "0x8F72B4")]
	private sealed class <Playback>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordCamera <>4__this;

		[Token(Token = "0x1700040A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xB57CBC", Offset = "0xB57CBC", VA = "0xB57CBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C38")]
			[Address(RVA = "0xB57D2C", Offset = "0xB57D2C", VA = "0xB57D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xB57974", Offset = "0xB57974", VA = "0xB57974")]
		[DebuggerHidden]
		public <Playback>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0xB57A44", Offset = "0xB57A44", VA = "0xB57A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xB57A48", Offset = "0xB57A48", VA = "0xB57A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xB57CC4", Offset = "0xB57CC4", VA = "0xB57CC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectStream<SerializableCamera> m_ObjectStream;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera m_Camera;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xB57678", Offset = "0xB57678", VA = "0xB57678", Slot = "6")]
	public override void StartRecord()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xB57720", Offset = "0xB57720", VA = "0xB57720", Slot = "4")]
	public override void StartPlayback()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xB577F8", Offset = "0xB577F8", VA = "0xB577F8", Slot = "5")]
	public override void StopPlayback()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xB57864", Offset = "0xB57864", VA = "0xB57864", Slot = "8")]
	public override void StopRecord()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xB57900", Offset = "0xB57900", VA = "0xB57900", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906D7C", Offset = "0x906D7C")]
	public override IEnumerator Playback()
	{
		return null;
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xB579A0", Offset = "0xB579A0", VA = "0xB579A0", Slot = "10")]
	public override void CaptureFrame()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xB57A34", Offset = "0xB57A34", VA = "0xB57A34")]
	public RecordCamera()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xB57A3C", Offset = "0xB57A3C", VA = "0xB57A3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x906DE0", Offset = "0x906DE0")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000085")]
public class RecordReplaySystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F72C4", Offset = "0x8F72C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__17_0;

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0xB58F38", Offset = "0xB58F38", VA = "0xB58F38")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0xB58F40", Offset = "0xB58F40", VA = "0xB58F40")]
		internal bool <Start>b__17_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F72D4", Offset = "0x8F72D4")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordReplaySystem <>4__this;

		[Token(Token = "0x1700040C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0xB5A6C8", Offset = "0xB5A6C8", VA = "0xB5A6C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C41")]
			[Address(RVA = "0xB5A738", Offset = "0xB5A738", VA = "0xB5A738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0xB580C4", Offset = "0xB580C4", VA = "0xB580C4")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0xB5A378", Offset = "0xB5A378", VA = "0xB5A378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xB5A37C", Offset = "0xB5A37C", VA = "0xB5A37C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0xB5A6D0", Offset = "0xB5A6D0", VA = "0xB5A6D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F72E4", Offset = "0x8F72E4")]
	private sealed class <Playback>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordReplaySystem <>4__this;

		[Token(Token = "0x1700040E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C45")]
			[Address(RVA = "0xB59FB8", Offset = "0xB59FB8", VA = "0xB59FB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C47")]
			[Address(RVA = "0xB5A028", Offset = "0xB5A028", VA = "0xB5A028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0xB588E8", Offset = "0xB588E8", VA = "0xB588E8")]
		[DebuggerHidden]
		public <Playback>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xB58FD8", Offset = "0xB58FD8", VA = "0xB58FD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0xB58FDC", Offset = "0xB58FDC", VA = "0xB58FDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0xB59FC0", Offset = "0xB59FC0", VA = "0xB59FC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F72F4", Offset = "0x8F72F4")]
	private sealed class <StartPlaybackAsync>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordReplaySystem <>4__this;

		[Token(Token = "0x17000410")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xB5AA50", Offset = "0xB5AA50", VA = "0xB5AA50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000411")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xB5AAC0", Offset = "0xB5AAC0", VA = "0xB5AAC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0xB58988", Offset = "0xB58988", VA = "0xB58988")]
		[DebuggerHidden]
		public <StartPlaybackAsync>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xB5A740", Offset = "0xB5A740", VA = "0xB5A740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0xB5A744", Offset = "0xB5A744", VA = "0xB5A744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0xB5AA58", Offset = "0xB5AA58", VA = "0xB5AA58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7304", Offset = "0x8F7304")]
	private sealed class <RestorePaintAsync>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordReplaySystem <>4__this;

		[Token(Token = "0x17000412")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xB5A300", Offset = "0xB5A300", VA = "0xB5A300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xB5A370", Offset = "0xB5A370", VA = "0xB5A370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0xB58B44", Offset = "0xB58B44", VA = "0xB58B44")]
		[DebuggerHidden]
		public <RestorePaintAsync>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0xB5A030", Offset = "0xB5A030", VA = "0xB5A030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0xB5A034", Offset = "0xB5A034", VA = "0xB5A034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C52")]
		[Address(RVA = "0xB5A308", Offset = "0xB5A308", VA = "0xB5A308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ReplayLeftHand;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ReplayRightHand;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ReplayHead;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator ReplayLHandAnimator;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator ReplayRHandAnimator;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform SprayCanLHandAttach;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform SprayCanRHandAttach;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ReplayPlayer;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float FrameRate;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isRecording;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isPlaying;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int frame;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ObjectStream<Record.SerializablePose> m_ObjectStream;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RecordReplaySystem _instance;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Record.SerializablePose pose;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SprayCan ReplaySprayCan;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int lastCapIndex;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool isRightHanded;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool lastIsFirstBrush;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int frameSkip;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Color lastColor;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool isCurrentSavedBeforePlayback;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	public bool Loop;

	[Token(Token = "0x1700003E")]
	public static RecordReplaySystem Instance
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xB57F84", Offset = "0xB57F84", VA = "0xB57F84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xB57D34", Offset = "0xB57D34", VA = "0xB57D34")]
	public void SetHandiness(bool rightHanded)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xB58050", Offset = "0xB58050", VA = "0xB58050")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906E18", Offset = "0x906E18")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xB580F0", Offset = "0xB580F0", VA = "0xB580F0")]
	private void SprayCan_OnBrushAdded(float pressure, Color color, float metallic, int capIndex, bool isFirst)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xB58874", Offset = "0xB58874", VA = "0xB58874")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906E7C", Offset = "0x906E7C")]
	public IEnumerator Playback()
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xB58914", Offset = "0xB58914", VA = "0xB58914")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906EE0", Offset = "0x906EE0")]
	private IEnumerator StartPlaybackAsync()
	{
		return null;
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xB589B4", Offset = "0xB589B4", VA = "0xB589B4")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xB58A3C", Offset = "0xB58A3C", VA = "0xB58A3C")]
	public void RestorePaint()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xB58AD0", Offset = "0xB58AD0", VA = "0xB58AD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906F44", Offset = "0x906F44")]
	public IEnumerator RestorePaintAsync()
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xB58A70", Offset = "0xB58A70", VA = "0xB58A70")]
	public void StopPlayback()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xB58B70", Offset = "0xB58B70", VA = "0xB58B70")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xB58C18", Offset = "0xB58C18", VA = "0xB58C18")]
	public void SaveRecording(string path)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xB58D18", Offset = "0xB58D18", VA = "0xB58D18")]
	public void LoadRecording(string path)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xB58E2C", Offset = "0xB58E2C", VA = "0xB58E2C")]
	private void SceneManager_activeSceneChanged(Scene arg0, Scene arg1)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xB58EA8", Offset = "0xB58EA8", VA = "0xB58EA8")]
	public RecordReplaySystem()
	{
	}
}
[Token(Token = "0x2000086")]
public class RecordTransform : Record
{
	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7314", Offset = "0x8F7314")]
	private sealed class <Playback>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordTransform <>4__this;

		[Token(Token = "0x17000414")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C57")]
			[Address(RVA = "0xB5B19C", Offset = "0xB5B19C", VA = "0xB5B19C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xB5B20C", Offset = "0xB5B20C", VA = "0xB5B20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0xB5AD94", Offset = "0xB5AD94", VA = "0xB5AD94")]
		[DebuggerHidden]
		public <Playback>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0xB5AE80", Offset = "0xB5AE80", VA = "0xB5AE80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0xB5AE84", Offset = "0xB5AE84", VA = "0xB5AE84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0xB5B1A4", Offset = "0xB5B1A4", VA = "0xB5B1A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectStream<SerializableTransform> m_ObjectStream;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject PlaybackNode;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xB5AAC8", Offset = "0xB5AAC8", VA = "0xB5AAC8", Slot = "6")]
	public override void StartRecord()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xB5AB58", Offset = "0xB5AB58", VA = "0xB5AB58", Slot = "4")]
	public override void StartPlayback()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xB5AC18", Offset = "0xB5AC18", VA = "0xB5AC18", Slot = "5")]
	public override void StopPlayback()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xB5AC84", Offset = "0xB5AC84", VA = "0xB5AC84", Slot = "8")]
	public override void StopRecord()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xB5AD20", Offset = "0xB5AD20", VA = "0xB5AD20", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906FA8", Offset = "0x906FA8")]
	public override IEnumerator Playback()
	{
		return null;
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xB5ADC0", Offset = "0xB5ADC0", VA = "0xB5ADC0", Slot = "10")]
	public override void CaptureFrame()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xB5AE70", Offset = "0xB5AE70", VA = "0xB5AE70")]
	public RecordTransform()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xB5AE78", Offset = "0xB5AE78", VA = "0xB5AE78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90700C", Offset = "0x90700C")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000087")]
public class ReferencePhotos : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7324", Offset = "0x8F7324")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, bool> <>9__17_0;

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0xB5CACC", Offset = "0xB5CACC", VA = "0xB5CACC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0xB5CAD4", Offset = "0xB5CAD4", VA = "0xB5CAD4")]
		internal bool <RefreshImages>b__17_0(string s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7334", Offset = "0x8F7334")]
	private sealed class <LoadImageAsync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MediaUrl;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ReferencePhotos <>4__this;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000416")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C60")]
			[Address(RVA = "0xB5CF38", Offset = "0xB5CF38", VA = "0xB5CF38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C62")]
			[Address(RVA = "0xB5CFA8", Offset = "0xB5CFA8", VA = "0xB5CFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0xB5C468", Offset = "0xB5C468", VA = "0xB5C468")]
		[DebuggerHidden]
		public <LoadImageAsync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0xB5CB6C", Offset = "0xB5CB6C", VA = "0xB5CB6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0xB5CB70", Offset = "0xB5CB70", VA = "0xB5CB70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0xB5CF40", Offset = "0xB5CF40", VA = "0xB5CF40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Screen;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform ScreenRect;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_referencePath;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_scale;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject NoImagesText;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_DragOffset;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_IsPointerActive;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_TempSphere;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isZoomEnabled;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<string> m_ImageList;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_Index;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_IsPointerOverPanel;

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xB5B758", Offset = "0xB5B758", VA = "0xB5B758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xB5B75C", Offset = "0xB5B75C", VA = "0xB5B75C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xB5C084", Offset = "0xB5C084", VA = "0xB5C084")]
	private void Instance_OnUIDetectedStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xB5C090", Offset = "0xB5C090", VA = "0xB5C090")]
	public void Next()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xB5C250", Offset = "0xB5C250", VA = "0xB5C250")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xB5C378", Offset = "0xB5C378", VA = "0xB5C378")]
	public void Zoom()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xB5BA54", Offset = "0xB5BA54", VA = "0xB5BA54")]
	public void RefreshImages()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xB5C1B8", Offset = "0xB5C1B8", VA = "0xB5C1B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907044", Offset = "0x907044")]
	private IEnumerator LoadImageAsync(string MediaUrl)
	{
		return null;
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xB5C494", Offset = "0xB5C494", VA = "0xB5C494")]
	private void ResetView()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xB5C594", Offset = "0xB5C594", VA = "0xB5C594")]
	private void Update()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xB5C9EC", Offset = "0xB5C9EC", VA = "0xB5C9EC")]
	private void Instance_OnControlEnter(GameObject control)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xB5C9F0", Offset = "0xB5C9F0", VA = "0xB5C9F0")]
	public ReferencePhotos()
	{
	}
}
[Token(Token = "0x2000088")]
public class ResetPlayerPref : MonoBehaviour
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> Prefs;

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xB5E024", Offset = "0xB5E024", VA = "0xB5E024")]
	private void RemoveKey(string key)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xB5E0D4", Offset = "0xB5E0D4", VA = "0xB5E0D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xB5E1E0", Offset = "0xB5E1E0", VA = "0xB5E1E0")]
	public ResetPlayerPref()
	{
	}
}
[Token(Token = "0x2000089")]
public class C_SecretWall_Timer : MonoBehaviour
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float sessionDurationMinutes;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float SessionDurationSeconds;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image[] ClockWipeImages;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image CountDownClockWipeImages;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI[] TimeTexts;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI CountDownTimeTexts;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI FinalText;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI YourWallP1;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI YourWallP2;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject MainPannel;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float sessionCompleteRatio;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float sessionStartTime;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float sessionCurrentTime;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastSessionDuration;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool sessionActive;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool countDownClock;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float CountDownTimer;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xB4375C", Offset = "0xB4375C", VA = "0xB4375C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xB4377C", Offset = "0xB4377C", VA = "0xB4377C")]
	private void Start()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xB43780", Offset = "0xB43780", VA = "0xB43780")]
	private void UpdateClockDisplay()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xB43988", Offset = "0xB43988", VA = "0xB43988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xB43F70", Offset = "0xB43F70", VA = "0xB43F70")]
	public void StartBombingSession()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xB43FC4", Offset = "0xB43FC4", VA = "0xB43FC4")]
	public void BeginBombingSession()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xB43D54", Offset = "0xB43D54", VA = "0xB43D54")]
	private void CountDownClockActive(bool isActive)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xB43C08", Offset = "0xB43C08", VA = "0xB43C08")]
	private void SetYourWallText(int Player)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xB43E84", Offset = "0xB43E84", VA = "0xB43E84")]
	public void EndBombingSession()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xB438BC", Offset = "0xB438BC", VA = "0xB438BC")]
	public string convertFloatToMinutesSeconds(float Timefloat)
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xB444DC", Offset = "0xB444DC", VA = "0xB444DC")]
	public void setSessionDuration(int minutes)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xB44534", Offset = "0xB44534", VA = "0xB44534")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xB44618", Offset = "0xB44618", VA = "0xB44618")]
	public C_SecretWall_Timer()
	{
	}
}
[Token(Token = "0x200008A")]
public class SecretWalls_InfoFetch : MonoBehaviour
{
	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7344", Offset = "0x8F7344")]
	private sealed class <GetSecretWallsInfo>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecretWalls_InfoFetch <>4__this;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000418")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xB63BD4", Offset = "0xB63BD4", VA = "0xB63BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000419")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C68")]
			[Address(RVA = "0xB63C44", Offset = "0xB63C44", VA = "0xB63C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0xB63814", Offset = "0xB63814", VA = "0xB63814")]
		[DebuggerHidden]
		public <GetSecretWallsInfo>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0xB63848", Offset = "0xB63848", VA = "0xB63848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xB6384C", Offset = "0xB6384C", VA = "0xB6384C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xB63BDC", Offset = "0xB63BDC", VA = "0xB63BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xB63774", Offset = "0xB63774", VA = "0xB63774")]
	private void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xB637A0", Offset = "0xB637A0", VA = "0xB637A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9070A8", Offset = "0x9070A8")]
	private IEnumerator GetSecretWallsInfo()
	{
		return null;
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xB63840", Offset = "0xB63840", VA = "0xB63840")]
	public SecretWalls_InfoFetch()
	{
	}
}
[Token(Token = "0x200008B")]
public class StartScreen : MonoBehaviour
{
	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7354", Offset = "0x8F7354")]
	private sealed class <StartTutorialAsync>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x1700041A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xB716D4", Offset = "0xB716D4", VA = "0xB716D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0xB71744", Offset = "0xB71744", VA = "0xB71744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xB7084C", Offset = "0xB7084C", VA = "0xB7084C")]
		[DebuggerHidden]
		public <StartTutorialAsync>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0xB71474", Offset = "0xB71474", VA = "0xB71474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0xB71478", Offset = "0xB71478", VA = "0xB71478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0xB716DC", Offset = "0xB716DC", VA = "0xB716DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7364", Offset = "0x8F7364")]
	private sealed class <HandinessTriggerASync>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StartScreen <>4__this;

		[Token(Token = "0x1700041C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xB713FC", Offset = "0xB713FC", VA = "0xB713FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C74")]
			[Address(RVA = "0xB7146C", Offset = "0xB7146C", VA = "0xB7146C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0xB7093C", Offset = "0xB7093C", VA = "0xB7093C")]
		[DebuggerHidden]
		public <HandinessTriggerASync>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0xB711E4", Offset = "0xB711E4", VA = "0xB711E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0xB711E8", Offset = "0xB711E8", VA = "0xB711E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xB71404", Offset = "0xB71404", VA = "0xB71404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7374", Offset = "0x8F7374")]
	private sealed class <Tutorial02A>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x1700041E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xB71AB8", Offset = "0xB71AB8", VA = "0xB71AB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0xB71B28", Offset = "0xB71B28", VA = "0xB71B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0xB709DC", Offset = "0xB709DC", VA = "0xB709DC")]
		[DebuggerHidden]
		public <Tutorial02A>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0xB718C8", Offset = "0xB718C8", VA = "0xB718C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0xB718CC", Offset = "0xB718CC", VA = "0xB718CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xB71AC0", Offset = "0xB71AC0", VA = "0xB71AC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7384", Offset = "0x8F7384")]
	private sealed class <Tutorial02A2>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x17000420")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xB71850", Offset = "0xB71850", VA = "0xB71850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C80")]
			[Address(RVA = "0xB718C0", Offset = "0xB718C0", VA = "0xB718C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0xB70A7C", Offset = "0xB70A7C", VA = "0xB70A7C")]
		[DebuggerHidden]
		public <Tutorial02A2>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0xB7174C", Offset = "0xB7174C", VA = "0xB7174C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0xB71750", Offset = "0xB71750", VA = "0xB71750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0xB71858", Offset = "0xB71858", VA = "0xB71858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7394", Offset = "0x8F7394")]
	private sealed class <Tutorial02B>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x17000422")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xB71C9C", Offset = "0xB71C9C", VA = "0xB71C9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000423")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xB71D0C", Offset = "0xB71D0C", VA = "0xB71D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0xB70C68", Offset = "0xB70C68", VA = "0xB70C68")]
		[DebuggerHidden]
		public <Tutorial02B>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0xB71B30", Offset = "0xB71B30", VA = "0xB71B30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0xB71B34", Offset = "0xB71B34", VA = "0xB71B34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0xB71CA4", Offset = "0xB71CA4", VA = "0xB71CA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F73A4", Offset = "0x8F73A4")]
	private sealed class <Tutorial03A>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x17000424")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xB71E3C", Offset = "0xB71E3C", VA = "0xB71E3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0xB71EAC", Offset = "0xB71EAC", VA = "0xB71EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0xB70D38", Offset = "0xB70D38", VA = "0xB70D38")]
		[DebuggerHidden]
		public <Tutorial03A>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0xB71D14", Offset = "0xB71D14", VA = "0xB71D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0xB71D18", Offset = "0xB71D18", VA = "0xB71D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0xB71E44", Offset = "0xB71E44", VA = "0xB71E44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F73B4", Offset = "0x8F73B4")]
	private sealed class <Tutorial04Async>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x17000426")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xB7213C", Offset = "0xB7213C", VA = "0xB7213C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xB721AC", Offset = "0xB721AC", VA = "0xB721AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0xB70E30", Offset = "0xB70E30", VA = "0xB70E30")]
		[DebuggerHidden]
		public <Tutorial04Async>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0xB71EB4", Offset = "0xB71EB4", VA = "0xB71EB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0xB71EB8", Offset = "0xB71EB8", VA = "0xB71EB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0xB72144", Offset = "0xB72144", VA = "0xB72144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F73C4", Offset = "0x8F73C4")]
	private sealed class <Tutorial05Async>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x17000428")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C96")]
			[Address(RVA = "0xB72314", Offset = "0xB72314", VA = "0xB72314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0xB72384", Offset = "0xB72384", VA = "0xB72384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0xB70EFC", Offset = "0xB70EFC", VA = "0xB70EFC")]
		[DebuggerHidden]
		public <Tutorial05Async>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0xB721B4", Offset = "0xB721B4", VA = "0xB721B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0xB721B8", Offset = "0xB721B8", VA = "0xB721B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0xB7231C", Offset = "0xB7231C", VA = "0xB7231C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F73D4", Offset = "0x8F73D4")]
	private sealed class <Tutorial05B>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartScreen <>4__this;

		[Token(Token = "0x1700042A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0xDF5BE0", Offset = "0xDF5BE0", VA = "0xDF5BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0xDF5C50", Offset = "0xDF5C50", VA = "0xDF5C50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0xDF59B0", Offset = "0xDF59B0", VA = "0xDF59B0")]
		[DebuggerHidden]
		public <Tutorial05B>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0xDF59DC", Offset = "0xDF59DC", VA = "0xDF59DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0xDF59E0", Offset = "0xDF59E0", VA = "0xDF59E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0xDF5BE8", Offset = "0xDF5BE8", VA = "0xDF5BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ProjectorScreen;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ControllerStand;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject TutorialRoot;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSimplePlayer TutorialVoice;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIMenu ProjectorMenu;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject TutorialPlayer;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float SprayCanDistanceFromCamera;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float SprayCanMoveSpeed;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xB70770", Offset = "0xB70770", VA = "0xB70770")]
	public void ShowControllerPlayAnim(bool primary, string animationName)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xB70774", Offset = "0xB70774", VA = "0xB70774")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xB70778", Offset = "0xB70778", VA = "0xB70778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xB707AC", Offset = "0xB707AC", VA = "0xB707AC")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xB707D8", Offset = "0xB707D8", VA = "0xB707D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90710C", Offset = "0x90710C")]
	private IEnumerator StartTutorialAsync()
	{
		return null;
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xB70878", Offset = "0xB70878", VA = "0xB70878")]
	private void HandinessTrigger_OnTriggerEvent(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xB708A4", Offset = "0xB708A4", VA = "0xB708A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907170", Offset = "0x907170")]
	private IEnumerator HandinessTriggerASync(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xB70968", Offset = "0xB70968", VA = "0xB70968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9071D4", Offset = "0x9071D4")]
	private IEnumerator Tutorial02A()
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xB70A08", Offset = "0xB70A08", VA = "0xB70A08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907238", Offset = "0x907238")]
	private IEnumerator Tutorial02A2()
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xB70AA8", Offset = "0xB70AA8", VA = "0xB70AA8")]
	private void Teleport_OnTeleportEvent(Vector3 position)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xB70BF4", Offset = "0xB70BF4", VA = "0xB70BF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90729C", Offset = "0x90729C")]
	private IEnumerator Tutorial02B()
	{
		return null;
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xB70C94", Offset = "0xB70C94", VA = "0xB70C94")]
	public void Tutorial02()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xB70CC0", Offset = "0xB70CC0", VA = "0xB70CC0")]
	private void TeleportTrigger_OnTriggerEvent(GameObject gameObject)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xB70CC4", Offset = "0xB70CC4", VA = "0xB70CC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907300", Offset = "0x907300")]
	private IEnumerator Tutorial03A()
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xB70D64", Offset = "0xB70D64", VA = "0xB70D64")]
	public void Tutorial03()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xB70D90", Offset = "0xB70D90", VA = "0xB70D90")]
	public void Tutorial04()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xB70DBC", Offset = "0xB70DBC", VA = "0xB70DBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907364", Offset = "0x907364")]
	private IEnumerator Tutorial04Async()
	{
		return null;
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xB70E5C", Offset = "0xB70E5C", VA = "0xB70E5C")]
	public void Tutorial05()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xB70E88", Offset = "0xB70E88", VA = "0xB70E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9073C8", Offset = "0x9073C8")]
	private IEnumerator Tutorial05Async()
	{
		return null;
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xB70F28", Offset = "0xB70F28", VA = "0xB70F28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90742C", Offset = "0x90742C")]
	private IEnumerator Tutorial05B()
	{
		return null;
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xB70F9C", Offset = "0xB70F9C", VA = "0xB70F9C")]
	private void Instance_OnMenuOpenedEvent()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xB71078", Offset = "0xB71078", VA = "0xB71078")]
	public void TutorialFinished()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xB711CC", Offset = "0xB711CC", VA = "0xB711CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xB711D0", Offset = "0xB711D0", VA = "0xB711D0")]
	public StartScreen()
	{
	}
}
[Token(Token = "0x200008C")]
public class CapEditor : MonoBehaviour
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PaintCapSettings currentlyEditing;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xB456D8", Offset = "0xB456D8", VA = "0xB456D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xB4577C", Offset = "0xB4577C", VA = "0xB4577C")]
	public void Edit(PaintCapSettings cap)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xB45998", Offset = "0xB45998", VA = "0xB45998")]
	public void ForceMin(float value)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xB459EC", Offset = "0xB459EC", VA = "0xB459EC")]
	public void ForceMax(float value)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xB45A40", Offset = "0xB45A40", VA = "0xB45A40")]
	public void SetParam(float value)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xB45ADC", Offset = "0xB45ADC", VA = "0xB45ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xB45AE0", Offset = "0xB45AE0", VA = "0xB45AE0")]
	public CapEditor()
	{
	}
}
[Token(Token = "0x200008D")]
public class CollisionTriggerEvent : SimpleEvent
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ColliderName;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsCanAssignCollision;

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xB53858", Offset = "0xB53858", VA = "0xB53858")]
	private void Start()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xB5385C", Offset = "0xB5385C", VA = "0xB5385C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xB53A3C", Offset = "0xB53A3C", VA = "0xB53A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xB53A40", Offset = "0xB53A40", VA = "0xB53A40")]
	public CollisionTriggerEvent()
	{
	}
}
[Token(Token = "0x200008E")]
public class HoverInfront : MonoBehaviour
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DistanceFromCamera;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Offset;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1012EF0", Offset = "0x1012EF0", VA = "0x1012EF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1012EF4", Offset = "0x1012EF4", VA = "0x1012EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1013138", Offset = "0x1013138", VA = "0x1013138")]
	public HoverInfront()
	{
	}
}
[Token(Token = "0x200008F")]
public class ItemLockerUnlocker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F73E4", Offset = "0x8F73E4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__6_0;

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0xFD7890", Offset = "0xFD7890", VA = "0xFD7890")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0xFD7898", Offset = "0xFD7898", VA = "0xFD7898")]
		internal bool <Start>b__6_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F73F4", Offset = "0x8F73F4")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemLockerUnlocker <>4__this;

		[Token(Token = "0x1700042C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0xFD7D74", Offset = "0xFD7D74", VA = "0xFD7D74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0xFD7DE4", Offset = "0xFD7DE4", VA = "0xFD7DE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0xFD77F4", Offset = "0xFD77F4", VA = "0xFD77F4")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0xFD7930", Offset = "0xFD7930", VA = "0xFD7930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xFD7934", Offset = "0xFD7934", VA = "0xFD7934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0xFD7D7C", Offset = "0xFD7D7C", VA = "0xFD7D7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LockPlayer;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool LockSprayCan;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool LockPaintCanMenu;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool LockPaintMenu;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool LockTeleport;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool LockPhone;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xFD7780", Offset = "0xFD7780", VA = "0xFD7780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907490", Offset = "0x907490")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xFD7820", Offset = "0xFD7820", VA = "0xFD7820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xFD7824", Offset = "0xFD7824", VA = "0xFD7824")]
	public ItemLockerUnlocker()
	{
	}
}
[Token(Token = "0x2000090")]
public class OnEnableEvent : SimpleEvent
{
	[Token(Token = "0x20005AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7404", Offset = "0x8F7404")]
	private sealed class <DoEventCall>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnEnableEvent <>4__this;

		[Token(Token = "0x1700042E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0xCAC2AC", Offset = "0xCAC2AC", VA = "0xCAC2AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0xCAC31C", Offset = "0xCAC31C", VA = "0xCAC31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0xCAC150", Offset = "0xCAC150", VA = "0xCAC150")]
		[DebuggerHidden]
		public <DoEventCall>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0xCAC1B0", Offset = "0xCAC1B0", VA = "0xCAC1B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0xCAC1B4", Offset = "0xCAC1B4", VA = "0xCAC1B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0xCAC2B4", Offset = "0xCAC2B4", VA = "0xCAC2B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Delay;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xCAC0DC", Offset = "0xCAC0DC", VA = "0xCAC0DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9074F4", Offset = "0x9074F4")]
	private IEnumerator DoEventCall()
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xCAC17C", Offset = "0xCAC17C", VA = "0xCAC17C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xCAC1A8", Offset = "0xCAC1A8", VA = "0xCAC1A8")]
	public OnEnableEvent()
	{
	}
}
[Token(Token = "0x2000091")]
public class PlayApeAnimation : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7414", Offset = "0x8F7414")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__3_0;

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0xAA0B34", Offset = "0xAA0B34", VA = "0xAA0B34")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0xAA0B3C", Offset = "0xAA0B3C", VA = "0xAA0B3C")]
		internal bool <Start>b__3_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7424", Offset = "0x8F7424")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayApeAnimation <>4__this;

		[Token(Token = "0x17000430")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xAA0DA8", Offset = "0xAA0DA8", VA = "0xAA0DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0xAA0E18", Offset = "0xAA0E18", VA = "0xAA0E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0xAA0A9C", Offset = "0xAA0A9C", VA = "0xAA0A9C")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB2")]
		[Address(RVA = "0xAA0BB4", Offset = "0xAA0BB4", VA = "0xAA0BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0xAA0BB8", Offset = "0xAA0BB8", VA = "0xAA0BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0xAA0DB0", Offset = "0xAA0DB0", VA = "0xAA0DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Loop;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset Asset;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextAsset[] IdleAssets;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xAA0A28", Offset = "0xAA0A28", VA = "0xAA0A28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907558", Offset = "0x907558")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xAA0AC8", Offset = "0xAA0AC8", VA = "0xAA0AC8")]
	public PlayApeAnimation()
	{
	}
}
[Token(Token = "0x2000092")]
public class PlayAudioSimple : MonoBehaviour
{
	[Token(Token = "0x20005AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7434", Offset = "0x8F7434")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayAudioSimple <>4__this;

		[Token(Token = "0x17000432")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xAA1364", Offset = "0xAA1364", VA = "0xAA1364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0xAA13D4", Offset = "0xAA13D4", VA = "0xAA13D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0xAA0E94", Offset = "0xAA0E94", VA = "0xAA0E94")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0xAA1210", Offset = "0xAA1210", VA = "0xAA1210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0xAA1214", Offset = "0xAA1214", VA = "0xAA1214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0xAA136C", Offset = "0xAA136C", VA = "0xAA136C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7444", Offset = "0x8F7444")]
	private sealed class <AudioFinished>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayAudioSimple <>4__this;

		[Token(Token = "0x17000434")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xAA1198", Offset = "0xAA1198", VA = "0xAA1198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xAA1208", Offset = "0xAA1208", VA = "0xAA1208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0xAA0F60", Offset = "0xAA0F60", VA = "0xAA0F60")]
		[DebuggerHidden]
		public <AudioFinished>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002CBE")]
		[Address(RVA = "0xAA0FA8", Offset = "0xAA0FA8", VA = "0xAA0FA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CBF")]
		[Address(RVA = "0xAA0FAC", Offset = "0xAA0FAC", VA = "0xAA0FAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC1")]
		[Address(RVA = "0xAA11A0", Offset = "0xAA11A0", VA = "0xAA11A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip m_AudioClip;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Speaker;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string EventToFire;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Delay;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool RepeatAfterTime;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RepeatTime;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xAA0E20", Offset = "0xAA0E20", VA = "0xAA0E20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9075BC", Offset = "0x9075BC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xAA0EC0", Offset = "0xAA0EC0", VA = "0xAA0EC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xAA0EC8", Offset = "0xAA0EC8", VA = "0xAA0EC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907620", Offset = "0x907620")]
	private IEnumerator AudioFinished(float delay)
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xAA0F8C", Offset = "0xAA0F8C", VA = "0xAA0F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xAA0F90", Offset = "0xAA0F90", VA = "0xAA0F90")]
	public PlayAudioSimple()
	{
	}
}
[Token(Token = "0x2000093")]
public class PlayerEvents : SimpleEvent
{
	[Token(Token = "0x20005AF")]
	public enum PlayerEventType
	{
		[Token(Token = "0x4001FA2")]
		COLOR_CHANGED,
		[Token(Token = "0x4001FA3")]
		GROUP_CHANGED,
		[Token(Token = "0x4001FA4")]
		PHONE_VISIBILITY,
		[Token(Token = "0x4001FA5")]
		MENU_SET,
		[Token(Token = "0x4001FA6")]
		SAVE
	}

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string MethodString;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool MethodBool;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PlayerEventType m_EventType;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xAA1940", Offset = "0xAA1940", VA = "0xAA1940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xAA1BA0", Offset = "0xAA1BA0", VA = "0xAA1BA0")]
	private void KSVR_IO_Android_OnSaveEvent(string folderPath)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xAA1C80", Offset = "0xAA1C80", VA = "0xAA1C80")]
	private void Menu_OnMenuChanged(string menuname)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xAA1DA8", Offset = "0xAA1DA8", VA = "0xAA1DA8")]
	private void Instance_OnVisibilityChanged(bool visible)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xAA1EC4", Offset = "0xAA1EC4", VA = "0xAA1EC4")]
	private void Instance_OnColorChanged(PaintManager.PaintColour color)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xAA1FF0", Offset = "0xAA1FF0", VA = "0xAA1FF0")]
	private void Instance_OnGroupChanged()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xAA211C", Offset = "0xAA211C", VA = "0xAA211C")]
	public PlayerEvents()
	{
	}
}
[Token(Token = "0x2000094")]
public class PolaroidArtworkLoader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7454", Offset = "0x8F7454")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<DirectoryInfo, DateTime> <>9__5_0;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<DirectoryInfo, string> <>9__5_1;

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0xAA29A0", Offset = "0xAA29A0", VA = "0xAA29A0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0xAA29A8", Offset = "0xAA29A8", VA = "0xAA29A8")]
		internal DateTime <Start>b__5_0(DirectoryInfo d)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0xAA29D8", Offset = "0xAA29D8", VA = "0xAA29D8")]
		internal string <Start>b__5_1(DirectoryInfo d)
		{
			return null;
		}
	}

	[Token(Token = "0x20005B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7464", Offset = "0x8F7464")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PolaroidArtworkLoader <>4__this;

		[Token(Token = "0x17000436")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xAA3634", Offset = "0xAA3634", VA = "0xAA3634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xAA36A4", Offset = "0xAA36A4", VA = "0xAA36A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0xAA2510", Offset = "0xAA2510", VA = "0xAA2510")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0xAA2C84", Offset = "0xAA2C84", VA = "0xAA2C84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0xAA2C88", Offset = "0xAA2C88", VA = "0xAA2C88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0xAA363C", Offset = "0xAA363C", VA = "0xAA363C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7474", Offset = "0x8F7474")]
	private sealed class <LoadTexture>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PolaroidArtworkLoader <>4__this;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x17000438")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xAA2C0C", Offset = "0xAA2C0C", VA = "0xAA2C0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xAA2C7C", Offset = "0xAA2C7C", VA = "0xAA2C7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xAA2888", Offset = "0xAA2888", VA = "0xAA2888")]
		[DebuggerHidden]
		public <LoadTexture>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002CCE")]
		[Address(RVA = "0xAA2A0C", Offset = "0xAA2A0C", VA = "0xAA2A0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xAA2A10", Offset = "0xAA2A10", VA = "0xAA2A10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0xAA2C14", Offset = "0xAA2C14", VA = "0xAA2C14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CustomizedItemData[] CustomizedDataItems;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> LevelsToInclude;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LocationsList;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool GetAllLocations;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SceneName;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xAA249C", Offset = "0xAA249C", VA = "0xAA249C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907684", Offset = "0x907684")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xAA253C", Offset = "0xAA253C", VA = "0xAA253C")]
	private bool ValidateSavedPath(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xAA2598", Offset = "0xAA2598", VA = "0xAA2598")]
	public void LoadArtwork(int index)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xAA27DC", Offset = "0xAA27DC", VA = "0xAA27DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9076E8", Offset = "0x9076E8")]
	private IEnumerator LoadTexture(string path, Material material)
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xAA28B4", Offset = "0xAA28B4", VA = "0xAA28B4")]
	public PolaroidArtworkLoader()
	{
	}
}
[Token(Token = "0x2000095")]
public class SimpleEvent : MonoBehaviour
{
	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string EventToCall;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EventObject;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xB660B0", Offset = "0xB660B0", VA = "0xB660B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB660B4", Offset = "0xB660B4", VA = "0xB660B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB660B8", Offset = "0xB660B8", VA = "0xB660B8")]
	public SimpleEvent()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportEvent : SimpleEvent
{
	[Token(Token = "0x600055F")]
	[Address(RVA = "0xE0C014", Offset = "0xE0C014", VA = "0xE0C014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xE0C0B0", Offset = "0xE0C0B0", VA = "0xE0C0B0")]
	private void Instance_OnTeleportEvent(Vector3 position)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xE0C1BC", Offset = "0xE0C1BC", VA = "0xE0C1BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xE0C1C0", Offset = "0xE0C1C0", VA = "0xE0C1C0")]
	public TeleportEvent()
	{
	}
}
[Token(Token = "0x2000097")]
public class Tutorial : MonoBehaviour
{
	[Token(Token = "0x20005B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7484", Offset = "0x8F7484")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x1700043A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0xACA000", Offset = "0xACA000", VA = "0xACA000", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0xACA070", Offset = "0xACA070", VA = "0xACA070", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0xAC93B8", Offset = "0xAC93B8", VA = "0xAC93B8")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0xAC9A5C", Offset = "0xAC9A5C", VA = "0xAC9A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0xAC9A60", Offset = "0xAC9A60", VA = "0xAC9A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0xACA008", Offset = "0xACA008", VA = "0xACA008", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7494", Offset = "0x8F7494")]
	private sealed class <FinishedAysnc>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700043C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0xAC99E4", Offset = "0xAC99E4", VA = "0xAC99E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0xAC9A54", Offset = "0xAC9A54", VA = "0xAC9A54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0xAC94D0", Offset = "0xAC94D0", VA = "0xAC94D0")]
		[DebuggerHidden]
		public <FinishedAysnc>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0xAC98B8", Offset = "0xAC98B8", VA = "0xAC98B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0xAC98BC", Offset = "0xAC98BC", VA = "0xAC98BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0xAC99EC", Offset = "0xAC99EC", VA = "0xAC99EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int index;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Delay;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xAC9344", Offset = "0xAC9344", VA = "0xAC9344")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90774C", Offset = "0x90774C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xAC93E4", Offset = "0xAC93E4", VA = "0xAC93E4")]
	public void FlashSaveButton()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xAC942C", Offset = "0xAC942C", VA = "0xAC942C")]
	public void StopFlashSaveButton()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xAC9470", Offset = "0xAC9470", VA = "0xAC9470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9077B0", Offset = "0x9077B0")]
	private IEnumerator FinishedAysnc()
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xAC94FC", Offset = "0xAC94FC", VA = "0xAC94FC")]
	private void Instance_OnAnimationFinished()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xAC96D0", Offset = "0xAC96D0", VA = "0xAC96D0")]
	public void TutorialFinished()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xAC96FC", Offset = "0xAC96FC", VA = "0xAC96FC")]
	public void NextStep()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xAC98A4", Offset = "0xAC98A4", VA = "0xAC98A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xAC98A8", Offset = "0xAC98A8", VA = "0xAC98A8")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x2000098")]
public class TutorialRecordPlayback : MonoBehaviour
{
	[Token(Token = "0x20005B5")]
	public delegate void AnimationFinished();

	[Token(Token = "0x20005B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F74A4", Offset = "0x8F74A4")]
	private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialRecordPlayback <>4__this;

		[Token(Token = "0x1700043E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0xACCAE0", Offset = "0xACCAE0", VA = "0xACCAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xACCB50", Offset = "0xACCB50", VA = "0xACCB50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0xACA45C", Offset = "0xACA45C", VA = "0xACA45C")]
		[DebuggerHidden]
		public <Start>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0xACC818", Offset = "0xACC818", VA = "0xACC818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xACC81C", Offset = "0xACC81C", VA = "0xACC81C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0xACCAE8", Offset = "0xACCAE8", VA = "0xACCAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F74B4", Offset = "0x8F74B4")]
	private sealed class <Playback>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialRecordPlayback <>4__this;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Record.SerializablePose <_trans>5__2;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float <_blendTime>5__3;

		[Token(Token = "0x17000440")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0xACC7A0", Offset = "0xACC7A0", VA = "0xACC7A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xACC810", Offset = "0xACC810", VA = "0xACC810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0xACAFEC", Offset = "0xACAFEC", VA = "0xACAFEC")]
		[DebuggerHidden]
		public <Playback>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0xACB680", Offset = "0xACB680", VA = "0xACB680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0xACB684", Offset = "0xACB684", VA = "0xACB684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0xACC7A8", Offset = "0xACC7A8", VA = "0xACC7A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ReplayLeftHand;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ReplayRightHand;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ReplayHead;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator ReplayLHandAnimator;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator ReplayRHandAnimator;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform SprayCanLHandAttach;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform SprayCanRHandAttach;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public TextAsset[] IdleAnimations;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject ReplayPlayer;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FrameRate;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isRecording;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isPlaying;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int frame;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ObjectStream<Record.SerializablePose> m_ObjectStream;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TutorialRecordPlayback _instance;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Record.SerializablePose pose;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SprayCan ReplaySprayCan;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int lastCapIndex;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool isRightHanded;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	private bool brushLastFrame;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SprayCanAudio SprayCanAudio;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int UniquePlayerID;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool lastIsFirstBrush;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int frameSkip;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool isCurrentSavedBeforePlayback;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool requiresBlend;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float blendTime;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool LoopAnim;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextAsset PlaybackFile;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool RecordLocalPlayer;

	[Token(Token = "0x1700003F")]
	public static TutorialRecordPlayback Instance
	{
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xAC9528", Offset = "0xAC9528", VA = "0xAC9528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400001C")]
	public event AnimationFinished OnAnimationFinished
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0xAC9F14", Offset = "0xAC9F14", VA = "0xAC9F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907814", Offset = "0x907814")]
		add
		{
		}
		[Token(Token = "0x600056D")]
		[Address(RVA = "0xACA078", Offset = "0xACA078", VA = "0xACA078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907824", Offset = "0x907824")]
		remove
		{
		}
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xACA164", Offset = "0xACA164", VA = "0xACA164")]
	public void SetHandiness(bool rightHanded)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xAC95F4", Offset = "0xAC95F4", VA = "0xAC95F4")]
	public void PlayIdle()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xACA3E8", Offset = "0xACA3E8", VA = "0xACA3E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907834", Offset = "0x907834")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xACA488", Offset = "0xACA488", VA = "0xACA488")]
	private void PaintTexture_OnBrushAdded(int id, int capIndex, Vector3 point, Vector2 texcoord, float distance, Vector4 color, float metallic, bool first, float canAngle, Transform handTrans, Transform canTrans)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xACA3B4", Offset = "0xACA3B4", VA = "0xACA3B4")]
	public void LoadAndPlaybackAsset(byte[] bytes, bool loop = false, bool blend = false)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xACAE08", Offset = "0xACAE08", VA = "0xACAE08")]
	public void LoadAndPlayback(string filename, bool loop = false, bool blend = false)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xACA4B8", Offset = "0xACA4B8", VA = "0xACA4B8")]
	public void RecordPose(int id, int capIndex, Vector3 point, Vector2 texcoord, float distance, Vector4 color, float metallic, bool first, float canAngle)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xACAF78", Offset = "0xACAF78", VA = "0xACAF78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907898", Offset = "0x907898")]
	public IEnumerator Playback()
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xACADC4", Offset = "0xACADC4", VA = "0xACADC4")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xACB018", Offset = "0xACB018", VA = "0xACB018")]
	public void StopPlayback()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xACB0D8", Offset = "0xACB0D8", VA = "0xACB0D8")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xACB180", Offset = "0xACB180", VA = "0xACB180")]
	public void SaveRecording()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xACB2EC", Offset = "0xACB2EC", VA = "0xACB2EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xACACD0", Offset = "0xACACD0", VA = "0xACACD0")]
	public void LoadAssetRecording(byte[] bytes)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xACAE3C", Offset = "0xACAE3C", VA = "0xACAE3C")]
	public void LoadRecording(string filename)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xACB648", Offset = "0xACB648", VA = "0xACB648")]
	public TutorialRecordPlayback()
	{
	}
}
[Token(Token = "0x2000099")]
public class VibrateOnEnable : MonoBehaviour
{
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsPrimary;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xAE3CC0", Offset = "0xAE3CC0", VA = "0xAE3CC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xAE3D44", Offset = "0xAE3D44", VA = "0xAE3D44")]
	public VibrateOnEnable()
	{
	}
}
[Token(Token = "0x200009A")]
public class CapMenu : MonoBehaviour
{
	[Token(Token = "0x20005B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F74C4", Offset = "0x8F74C4")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CapMenu <>4__this;

		[Token(Token = "0x17000442")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xB462A0", Offset = "0xB462A0", VA = "0xB462A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0xB46310", Offset = "0xB46310", VA = "0xB46310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0xB460EC", Offset = "0xB460EC", VA = "0xB460EC")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0xB46124", Offset = "0xB46124", VA = "0xB46124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0xB46128", Offset = "0xB46128", VA = "0xB46128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0xB462A8", Offset = "0xB462A8", VA = "0xB462A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CapPrefabRoot;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Title;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Description;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_SelectedCapIndex;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SprayCan m_ControllingSprayCan;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB45AE8", Offset = "0xB45AE8", VA = "0xB45AE8")]
	public void NextCap()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xB45FA8", Offset = "0xB45FA8", VA = "0xB45FA8")]
	public void PrevCap()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xB45BB8", Offset = "0xB45BB8", VA = "0xB45BB8")]
	private void SetCap(int index)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xB46078", Offset = "0xB46078", VA = "0xB46078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9078FC", Offset = "0x9078FC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xB46118", Offset = "0xB46118", VA = "0xB46118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xB4611C", Offset = "0xB4611C", VA = "0xB4611C")]
	public CapMenu()
	{
	}
}
[Token(Token = "0x200009B")]
public class CarouselCapSelector : MonoBehaviour
{
	[Token(Token = "0x20005B9")]
	public enum PositionType
	{
		[Token(Token = "0x4001FC4")]
		normal,
		[Token(Token = "0x4001FC5")]
		center,
		[Token(Token = "0x4001FC6")]
		explode
	}

	[Token(Token = "0x20005BA")]
	public enum swipingTypes
	{
		[Token(Token = "0x4001FC8")]
		Vertical,
		[Token(Token = "0x4001FC9")]
		Horizontal
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool round;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color invisible;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] positionList;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] objectPositions;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3[] explosionList;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool expand;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float radius;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Root;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float objectBlendSpeed;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rotateSpeed;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PositionType currentPositionType;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float snapSpeed;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool lerpObjects;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float objectSpeed;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int rotationIndex;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float zRotationOffset;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool allowSwipe;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public swipingTypes swipingType;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool invertSwipe;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[HideInInspector]
	public bool swiping;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float swipe2Angle;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float anglePart;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int objectCount;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<GameObject> objectList;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool swipeToProcess;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector2 swipeStartPos;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector2 swipeEndPos;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 m_startLocalPos;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CarouselPicker _instance;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float ObjectSpeedIncrements;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float ObjectSpeedDecay;

	[Token(Token = "0x17000040")]
	public static CarouselPicker Instance
	{
		[Token(Token = "0x6000587")]
		[Address(RVA = "0xB4C220", Offset = "0xB4C220", VA = "0xB4C220")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xB4C2EC", Offset = "0xB4C2EC", VA = "0xB4C2EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xB4CD14", Offset = "0xB4CD14", VA = "0xB4CD14")]
	private void Update()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xB4D360", Offset = "0xB4D360", VA = "0xB4D360")]
	public void ChangeRotationIndex(int Delta)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xB4D7C4", Offset = "0xB4D7C4", VA = "0xB4D7C4")]
	public void AddRotationIndex()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xB4D970", Offset = "0xB4D970", VA = "0xB4D970")]
	public void SubtractRotationIndex()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xB4D3B0", Offset = "0xB4D3B0", VA = "0xB4D3B0")]
	public void ResetMenuItemsPositions()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xB4C93C", Offset = "0xB4C93C", VA = "0xB4C93C")]
	public void RefreshList()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xB4D560", Offset = "0xB4D560", VA = "0xB4D560")]
	public void updateColors()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xB4DB1C", Offset = "0xB4DB1C", VA = "0xB4DB1C")]
	public CarouselCapSelector()
	{
	}
}
[Token(Token = "0x200009C")]
public class CarouselPicker : MonoBehaviour
{
	[Token(Token = "0x20005BB")]
	public enum PositionType
	{
		[Token(Token = "0x4001FCB")]
		normal,
		[Token(Token = "0x4001FCC")]
		center,
		[Token(Token = "0x4001FCD")]
		explode
	}

	[Token(Token = "0x20005BC")]
	public enum swipingTypes
	{
		[Token(Token = "0x4001FCF")]
		Vertical,
		[Token(Token = "0x4001FD0")]
		Horizontal
	}

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool round;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color invisible;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PaintManager.PaintColour> colors;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3[] positionList;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] objectPositions;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] explosionList;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool expand;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float radius;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float objectBlendSpeed;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rotateSpeed;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PositionType currentPositionType;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float snapSpeed;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool lerpObjects;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float objectSpeed;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int rotationIndex;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float zRotationOffset;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool allowSwipe;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public swipingTypes swipingType;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool invertSwipe;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[HideInInspector]
	public bool swiping;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float swipe2Angle;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float anglePart;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int objectCount;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<GameObject> objectList;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool swipeToProcess;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector2 swipeStartPos;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector2 swipeEndPos;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 m_startLocalPos;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CarouselPicker _instance;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float ObjectSpeedIncrements;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float ObjectSpeedDecay;

	[Token(Token = "0x17000041")]
	public static CarouselPicker Instance
	{
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xB4DBD8", Offset = "0xB4DBD8", VA = "0xB4DBD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xB4DCA4", Offset = "0xB4DCA4", VA = "0xB4DCA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xB4E7D0", Offset = "0xB4E7D0", VA = "0xB4E7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xB4EE1C", Offset = "0xB4EE1C", VA = "0xB4EE1C")]
	public void ChangeRotationIndex(int Delta)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xB4F608", Offset = "0xB4F608", VA = "0xB4F608")]
	public void AddRotationIndex()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xB4F644", Offset = "0xB4F644", VA = "0xB4F644")]
	public void SubtractRotationIndex()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xB4F680", Offset = "0xB4F680", VA = "0xB4F680")]
	public void ResetMenuItemsPositions()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xB4F830", Offset = "0xB4F830", VA = "0xB4F830")]
	public void SetColors(List<PaintManager.PaintColour> colours)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xB4E2D0", Offset = "0xB4E2D0", VA = "0xB4E2D0")]
	public void RefreshList()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xB4EE2C", Offset = "0xB4EE2C", VA = "0xB4EE2C")]
	public void updateColors()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xB4F92C", Offset = "0xB4F92C", VA = "0xB4F92C")]
	public PaintManager.PaintColour getSelectedColor()
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xB4FA18", Offset = "0xB4FA18", VA = "0xB4FA18")]
	public CarouselPicker()
	{
	}
}
[Token(Token = "0x200009D")]
public class ControllerHelp : MonoBehaviour
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform LeftController;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RightController;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Distance;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Root;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PrimaryHelp;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SecondaryHelp;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject PrimaryAltHelp;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject SecondaryAltHelp;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool useHandOffsets;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool useHandAverage;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xEEA71C", Offset = "0xEEA71C", VA = "0xEEA71C")]
	private void Start()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xEEA804", Offset = "0xEEA804", VA = "0xEEA804")]
	private void GetController(bool IsRightHanded)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xEEA9B0", Offset = "0xEEA9B0", VA = "0xEEA9B0")]
	private void Instance_OnHandsSwitchedEvent(bool isRightHanded)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xEEA9B8", Offset = "0xEEA9B8", VA = "0xEEA9B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xEEB724", Offset = "0xEEB724", VA = "0xEEB724")]
	public ControllerHelp()
	{
	}
}
[Token(Token = "0x200009E")]
public class DisplayApplicationVersion : MonoBehaviour
{
	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xCBDFB8", Offset = "0xCBDFB8", VA = "0xCBDFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xCBE050", Offset = "0xCBE050", VA = "0xCBE050")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xCBE054", Offset = "0xCBE054", VA = "0xCBE054")]
	public DisplayApplicationVersion()
	{
	}
}
[Token(Token = "0x200009F")]
public interface IMeshRaycaster
{
	[Token(Token = "0x60005A5")]
	void OnPointerEnter();

	[Token(Token = "0x60005A6")]
	void OnPointerLeave();

	[Token(Token = "0x60005A7")]
	void OnPointerClicked();

	[Token(Token = "0x60005A8")]
	Vector3 GetPointerSnapPosition();
}
[Token(Token = "0x20000A0")]
public class LineRendererHelper : MonoBehaviour
{
	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform StartPoint;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform EndPoint;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer m_Linerenderer;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UpdateEachFrame;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xD318F8", Offset = "0xD318F8", VA = "0xD318F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xD31A08", Offset = "0xD31A08", VA = "0xD31A08")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xD31AFC", Offset = "0xD31AFC", VA = "0xD31AFC")]
	public LineRendererHelper()
	{
	}
}
[Token(Token = "0x20000A1")]
public class MultiplayerPhoneMenu : MonoBehaviour
{
	[Token(Token = "0x20005BD")]
	public enum UIItemType
	{
		[Token(Token = "0x4001FD2")]
		ONLINE,
		[Token(Token = "0x4001FD3")]
		CREW_REQUEST,
		[Token(Token = "0x4001FD4")]
		CREW_MEMBER,
		[Token(Token = "0x4001FD5")]
		BLOCKED,
		[Token(Token = "0x4001FD6")]
		IN_ROOM,
		[Token(Token = "0x4001FD7")]
		JOINROOM_REQUEST
	}

	[Token(Token = "0x20005BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F74D4", Offset = "0x8F74D4")]
	private sealed class <AutoRefreshList>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x17000444")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0xC11808", Offset = "0xC11808", VA = "0xC11808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xC11878", Offset = "0xC11878", VA = "0xC11878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0xC11684", Offset = "0xC11684", VA = "0xC11684")]
		[DebuggerHidden]
		public <AutoRefreshList>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0xC116B0", Offset = "0xC116B0", VA = "0xC116B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0xC116B4", Offset = "0xC116B4", VA = "0xC116B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0xC11810", Offset = "0xC11810", VA = "0xC11810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F74E4", Offset = "0x8F74E4")]
	private sealed class <RemoveExpired>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Dictionary<string, object>> players;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <unixTimestamp>5__2;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Dictionary<string, object>>.Enumerator <>7__wrap2;

		[Token(Token = "0x17000446")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0xC146D0", Offset = "0xC146D0", VA = "0xC146D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D01")]
			[Address(RVA = "0xC14740", Offset = "0xC14740", VA = "0xC14740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0xC141F8", Offset = "0xC141F8", VA = "0xC141F8")]
		[DebuggerHidden]
		public <RemoveExpired>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0xC14224", Offset = "0xC14224", VA = "0xC14224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0xC142A8", Offset = "0xC142A8", VA = "0xC142A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0xC14250", Offset = "0xC14250", VA = "0xC14250")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0xC146D8", Offset = "0xC146D8", VA = "0xC146D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F74F4", Offset = "0x8F74F4")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userId;

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0xC0DE48", Offset = "0xC0DE48", VA = "0xC0DE48")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0xC10D44", Offset = "0xC10D44", VA = "0xC10D44")]
		internal bool <RemoveOfflinePlayers>b__0(Dictionary<string, object> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7504", Offset = "0x8F7504")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userID;

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0xC0EC48", Offset = "0xC0EC48", VA = "0xC0EC48")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0xC10DB4", Offset = "0xC10DB4", VA = "0xC10DB4")]
		internal bool <GetUIItemByUserID>b__0(OnlinePlayerUiItem c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7514", Offset = "0x8F7514")]
	private sealed class <ProcessRequestQueue>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, object> <request>5__3;

		[Token(Token = "0x17000448")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D09")]
			[Address(RVA = "0xC125C8", Offset = "0xC125C8", VA = "0xC125C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D0B")]
			[Address(RVA = "0xC12638", Offset = "0xC12638", VA = "0xC12638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0xC11FE0", Offset = "0xC11FE0", VA = "0xC11FE0")]
		[DebuggerHidden]
		public <ProcessRequestQueue>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0xC1200C", Offset = "0xC1200C", VA = "0xC1200C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0xC12010", Offset = "0xC12010", VA = "0xC12010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0xC125D0", Offset = "0xC125D0", VA = "0xC125D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7524", Offset = "0x8F7524")]
	private sealed class <>c__DisplayClass60_0
	{
		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, object> user;

		[Token(Token = "0x6002D0C")]
		[Address(RVA = "0xC10DEC", Offset = "0xC10DEC", VA = "0xC10DEC")]
		public <>c__DisplayClass60_0()
		{
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0xC10DF4", Offset = "0xC10DF4", VA = "0xC10DF4")]
		internal bool <RefreshOnlinePlayers>b__1(Dictionary<string, object> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7534", Offset = "0x8F7534")]
	private sealed class <>c__DisplayClass60_1
	{
		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, object> crewMember;

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0xC10EB0", Offset = "0xC10EB0", VA = "0xC10EB0")]
		public <>c__DisplayClass60_1()
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0xC10EB8", Offset = "0xC10EB8", VA = "0xC10EB8")]
		internal bool <RefreshOnlinePlayers>b__2(Dictionary<string, object> x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20005C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7544", Offset = "0x8F7544")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Dictionary<string, object>, bool> <>9__60_0;

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0xC10CB0", Offset = "0xC10CB0", VA = "0xC10CB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0xC10CB8", Offset = "0xC10CB8", VA = "0xC10CB8")]
		internal bool <RefreshOnlinePlayers>b__60_0(Dictionary<string, object> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7554", Offset = "0x8F7554")]
	private sealed class <RefreshOnlinePlayers>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass60_0 <>8__1;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Helpers.CoroutineWithData <onlinePlayers>5__2;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIItemType <itemType>5__3;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <onlinePlayerCount>5__4;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Dictionary<string, object>>.Enumerator <>7__wrap4;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Helpers.CoroutineWithData <crew_members>5__6;

		[Token(Token = "0x1700044A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D17")]
			[Address(RVA = "0xC14180", Offset = "0xC14180", VA = "0xC14180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D19")]
			[Address(RVA = "0xC141F0", Offset = "0xC141F0", VA = "0xC141F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0xC12640", Offset = "0xC12640", VA = "0xC12640")]
		[DebuggerHidden]
		public <RefreshOnlinePlayers>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0xC1266C", Offset = "0xC1266C", VA = "0xC1266C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0xC126F0", Offset = "0xC126F0", VA = "0xC126F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0xC12698", Offset = "0xC12698", VA = "0xC12698")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0xC14188", Offset = "0xC14188", VA = "0xC14188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7564", Offset = "0x8F7564")]
	private sealed class <AddToCrewAsync>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string userid;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string profile;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool sendRequest;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x1700044C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D1D")]
			[Address(RVA = "0xC1160C", Offset = "0xC1160C", VA = "0xC1160C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xC1167C", Offset = "0xC1167C", VA = "0xC1167C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0xC1124C", Offset = "0xC1124C", VA = "0xC1124C")]
		[DebuggerHidden]
		public <AddToCrewAsync>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0xC11278", Offset = "0xC11278", VA = "0xC11278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0xC1127C", Offset = "0xC1127C", VA = "0xC1127C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0xC11614", Offset = "0xC11614", VA = "0xC11614", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7574", Offset = "0x8F7574")]
	private sealed class <AddDebugToCrewAsync>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string userid;

		[Token(Token = "0x1700044E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D23")]
			[Address(RVA = "0xC111D4", Offset = "0xC111D4", VA = "0xC111D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D25")]
			[Address(RVA = "0xC11244", Offset = "0xC11244", VA = "0xC11244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0xC10FEC", Offset = "0xC10FEC", VA = "0xC10FEC")]
		[DebuggerHidden]
		public <AddDebugToCrewAsync>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0xC11018", Offset = "0xC11018", VA = "0xC11018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0xC1101C", Offset = "0xC1101C", VA = "0xC1101C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0xC111DC", Offset = "0xC111DC", VA = "0xC111DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7584", Offset = "0x8F7584")]
	private sealed class <RemoveFromCrewAsync>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string targetId;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string userid;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D29")]
			[Address(RVA = "0xC14A2C", Offset = "0xC14A2C", VA = "0xC14A2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0xC14A9C", Offset = "0xC14A9C", VA = "0xC14A9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0xC14748", Offset = "0xC14748", VA = "0xC14748")]
		[DebuggerHidden]
		public <RemoveFromCrewAsync>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0xC14774", Offset = "0xC14774", VA = "0xC14774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0xC14778", Offset = "0xC14778", VA = "0xC14778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2A")]
		[Address(RVA = "0xC14A34", Offset = "0xC14A34", VA = "0xC14A34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7594", Offset = "0x8F7594")]
	private sealed class <GetCrewMembersAsync>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <crew_members>5__2;

		[Token(Token = "0x17000452")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0xC11F68", Offset = "0xC11F68", VA = "0xC11F68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D31")]
			[Address(RVA = "0xC11FD8", Offset = "0xC11FD8", VA = "0xC11FD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0xC11D6C", Offset = "0xC11D6C", VA = "0xC11D6C")]
		[DebuggerHidden]
		public <GetCrewMembersAsync>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0xC11D98", Offset = "0xC11D98", VA = "0xC11D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0xC11D9C", Offset = "0xC11D9C", VA = "0xC11D9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D30")]
		[Address(RVA = "0xC11F70", Offset = "0xC11F70", VA = "0xC11F70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F75A4", Offset = "0x8F75A4")]
	private sealed class <GetBlockedAsync>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <blocked_cr>5__2;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D35")]
			[Address(RVA = "0xC11CF4", Offset = "0xC11CF4", VA = "0xC11CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D37")]
			[Address(RVA = "0xC11D64", Offset = "0xC11D64", VA = "0xC11D64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0xC11AF8", Offset = "0xC11AF8", VA = "0xC11AF8")]
		[DebuggerHidden]
		public <GetBlockedAsync>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0xC11B24", Offset = "0xC11B24", VA = "0xC11B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0xC11B28", Offset = "0xC11B28", VA = "0xC11B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0xC11CFC", Offset = "0xC11CFC", VA = "0xC11CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F75B4", Offset = "0x8F75B4")]
	private sealed class <BlockPlayerAsync>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string userID;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string userName;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x17000456")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0xC11A80", Offset = "0xC11A80", VA = "0xC11A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0xC11AF0", Offset = "0xC11AF0", VA = "0xC11AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0xC11880", Offset = "0xC11880", VA = "0xC11880")]
		[DebuggerHidden]
		public <BlockPlayerAsync>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0xC118AC", Offset = "0xC118AC", VA = "0xC118AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0xC118B0", Offset = "0xC118B0", VA = "0xC118B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0xC11A88", Offset = "0xC11A88", VA = "0xC11A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F75C4", Offset = "0x8F75C4")]
	private sealed class <UnblockPlayerAsync>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string userID;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string userName;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MultiplayerPhoneMenu <>4__this;

		[Token(Token = "0x17000458")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D41")]
			[Address(RVA = "0xC14CA0", Offset = "0xC14CA0", VA = "0xC14CA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D43")]
			[Address(RVA = "0xC14D10", Offset = "0xC14D10", VA = "0xC14D10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0xC14AA4", Offset = "0xC14AA4", VA = "0xC14AA4")]
		[DebuggerHidden]
		public <UnblockPlayerAsync>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0xC14AD0", Offset = "0xC14AD0", VA = "0xC14AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0xC14AD4", Offset = "0xC14AD4", VA = "0xC14AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0xC14CA8", Offset = "0xC14CA8", VA = "0xC14CA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F75D4", Offset = "0x8F75D4")]
	private sealed class <>c__DisplayClass81_0
	{
		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userID;

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0xC10F74", Offset = "0xC10F74", VA = "0xC10F74")]
		public <>c__DisplayClass81_0()
		{
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0xC10F7C", Offset = "0xC10F7C", VA = "0xC10F7C")]
		internal bool <IsUserBlocked>b__0(Dictionary<string, object> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject StandardUIPrefab;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CrewMemberUIPrefab;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CrewRequestUIPrefab;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BlockedUIPrefab;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject InRoomUIPrefab;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject JoinRoomRequestPrefab;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject KickedPrefab;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject LoadingPanel;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform ContentNode;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform NotificationsContentNode;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserListScreen;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform OnlineHeader;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform CrewHeader;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform BlockedHeader;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform CrewRequestHeader;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform InRoomHeader;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_Text CrewLabelText;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TMP_Text OnlineLabelText;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text BlockedLabelText;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text InRoomLabelText;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SwitchManager ConnectionSwitch;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<string, object> SelectedUserInfo;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ScrollRect scrollRect;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool showLoading;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiplayerPhoneMenu _instance;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<Dictionary<string, object>> m_OnlinePlayers;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<Dictionary<string, object>> m_CrewMembers;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Dictionary<string, object>> m_CrewRequests;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<Dictionary<string, object>> m_BlockedPlayers;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Dictionary<string, OnlinePlayerUiItem> OnlinePlayerUIItems;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Dictionary<string, OnlinePlayerUiItem> Notifications;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TMP_Text ConnectionStatusText;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject WaitingForPlayersPanel;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UIMenu Menu;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UIButtonStyle OnlineStyle;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UIButtonStyle OfflineStyle;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isAppearingOffline;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public UIButton AppearOfflineButton;

	[Token(Token = "0x17000042")]
	public static MultiplayerPhoneMenu Instance
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xC0D150", Offset = "0xC0D150", VA = "0xC0D150")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xC0D21C", Offset = "0xC0D21C", VA = "0xC0D21C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xC0D270", Offset = "0xC0D270", VA = "0xC0D270")]
	public void SnapTo(RectTransform target)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xC0D448", Offset = "0xC0D448", VA = "0xC0D448")]
	public void RemoveItem(string userID, string request = "", bool isNotification = true)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xC0D56C", Offset = "0xC0D56C", VA = "0xC0D56C")]
	public void CloseToggles()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xC0D7BC", Offset = "0xC0D7BC", VA = "0xC0D7BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907960", Offset = "0x907960")]
	private IEnumerator AutoRefreshList()
	{
		return null;
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xC0D830", Offset = "0xC0D830", VA = "0xC0D830")]
	public void SetAlwaysBeNetworking(bool enabled)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xC0D868", Offset = "0xC0D868", VA = "0xC0D868")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9079C4", Offset = "0x9079C4")]
	private IEnumerator RemoveExpired(List<Dictionary<string, object>> players)
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xC0D8DC", Offset = "0xC0D8DC", VA = "0xC0D8DC")]
	public void JoinCrewRoomButtonClicked()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xC0D954", Offset = "0xC0D954", VA = "0xC0D954")]
	public void RemoveOfflinePlayers(List<Dictionary<string, object>> onlinePlayers)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xC0DE50", Offset = "0xC0DE50", VA = "0xC0DE50")]
	public void AcceptCrewRequest(string userID, string userName, string profile)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xC0DEC8", Offset = "0xC0DEC8", VA = "0xC0DEC8")]
	public void DenyCrewRequest(string targetId, string itemType)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xC0D540", Offset = "0xC0D540", VA = "0xC0D540")]
	public void RefreshOnlinePlayersList()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xC0E1B4", Offset = "0xC0E1B4", VA = "0xC0E1B4")]
	public OnlinePlayerUiItem GetItemByUserID(string userID)
	{
		return null;
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xC0E25C", Offset = "0xC0E25C", VA = "0xC0E25C")]
	public void GoOffline()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xC0E5B0", Offset = "0xC0E5B0", VA = "0xC0E5B0")]
	public void GoOnline()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xC0E6FC", Offset = "0xC0E6FC", VA = "0xC0E6FC")]
	public void SetToggleSwitchEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xC0E730", Offset = "0xC0E730", VA = "0xC0E730")]
	public void ToggleOnlineMode()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xC0E3AC", Offset = "0xC0E3AC", VA = "0xC0E3AC")]
	private void DestroyByType(UIItemType itemType)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xC0E7E0", Offset = "0xC0E7E0", VA = "0xC0E7E0")]
	public int GetNotificationCount()
	{
		return default(int);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xC0E840", Offset = "0xC0E840", VA = "0xC0E840")]
	private int GetNotificationCount(UIItemType itemType)
	{
		return default(int);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xC0E9B0", Offset = "0xC0E9B0", VA = "0xC0E9B0")]
	private int GetItemCount(UIItemType itemType)
	{
		return default(int);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xC0EB20", Offset = "0xC0EB20", VA = "0xC0EB20")]
	private OnlinePlayerUiItem GetUIItemByUserID(string userID)
	{
		return null;
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xC0EC50", Offset = "0xC0EC50", VA = "0xC0EC50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907A28", Offset = "0x907A28")]
	public IEnumerator ProcessRequestQueue()
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xC0ECC4", Offset = "0xC0ECC4", VA = "0xC0ECC4")]
	private void Contactitem_OnUIItemDestroyedEvent(OnlinePlayerUiItem item)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xC0ED14", Offset = "0xC0ED14", VA = "0xC0ED14")]
	private void Item_OnUIItemDestroyedEvent(OnlineNotification item)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xC0E140", Offset = "0xC0E140", VA = "0xC0E140")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907A8C", Offset = "0x907A8C")]
	private IEnumerator RefreshOnlinePlayers()
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xC0ED64", Offset = "0xC0ED64", VA = "0xC0ED64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xC0ED6C", Offset = "0xC0ED6C", VA = "0xC0ED6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xC0EDE0", Offset = "0xC0EDE0", VA = "0xC0EDE0")]
	public void SetTransformIndex(Transform trans, UIItemType itemType)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xC0DE8C", Offset = "0xC0DE8C", VA = "0xC0DE8C")]
	public void AddToCrew(string userID, string userName, string profile, bool sendRequest = true)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xC0EE84", Offset = "0xC0EE84", VA = "0xC0EE84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907AF0", Offset = "0x907AF0")]
	public IEnumerator AddToCrewAsync(string name, string userid, string profile, bool sendRequest = true)
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xC0EF6C", Offset = "0xC0EF6C", VA = "0xC0EF6C")]
	public void AddDebugToCrew(string userID, string userName)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xC0EF9C", Offset = "0xC0EF9C", VA = "0xC0EF9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907B54", Offset = "0x907B54")]
	public IEnumerator AddDebugToCrewAsync(string name, string userid)
	{
		return null;
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xC0F034", Offset = "0xC0F034", VA = "0xC0F034")]
	public void RemoveFromCrew(string userID, string userName)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xC0E074", Offset = "0xC0E074", VA = "0xC0E074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907BB8", Offset = "0x907BB8")]
	public IEnumerator RemoveFromCrewAsync(string targetId, string name, string userid)
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xC0F274", Offset = "0xC0F274", VA = "0xC0F274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907C1C", Offset = "0x907C1C")]
	public IEnumerator GetCrewMembersAsync()
	{
		return null;
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xC0F2E8", Offset = "0xC0F2E8", VA = "0xC0F2E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907C80", Offset = "0x907C80")]
	public IEnumerator GetBlockedAsync()
	{
		return null;
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xC0F35C", Offset = "0xC0F35C", VA = "0xC0F35C")]
	private bool IsUserPartOfCrew(string userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xC0F4EC", Offset = "0xC0F4EC", VA = "0xC0F4EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907CE4", Offset = "0x907CE4")]
	public IEnumerator BlockPlayerAsync(string userID, string userName)
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xC0F59C", Offset = "0xC0F59C", VA = "0xC0F59C")]
	public void BlockPlayer(string userID, string userName)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xC0F5C8", Offset = "0xC0F5C8", VA = "0xC0F5C8")]
	public void ToggleMute(string userID)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xC0F6C0", Offset = "0xC0F6C0", VA = "0xC0F6C0")]
	private NetworkDummyCommander GetNetworkDummyByID(string userID)
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xC0F85C", Offset = "0xC0F85C", VA = "0xC0F85C")]
	public void UnblockPlayer(string userID, string userName)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xC0F100", Offset = "0xC0F100", VA = "0xC0F100")]
	private void RemoveUIItem(string userID)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xC0F888", Offset = "0xC0F888", VA = "0xC0F888")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907D48", Offset = "0x907D48")]
	public IEnumerator UnblockPlayerAsync(string userID, string userName)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xC0F938", Offset = "0xC0F938", VA = "0xC0F938")]
	private bool IsUserBlocked(string userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xC0F9FC", Offset = "0xC0F9FC", VA = "0xC0F9FC")]
	public Dictionary<string, Player> GetPlayersInRoomDict()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xC0FCA8", Offset = "0xC0FCA8", VA = "0xC0FCA8")]
	public OnlinePlayerUiItem AddContact(Dictionary<string, object> user, bool isOnline, UIItemType itemType, bool isNotification = false)
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xC1029C", Offset = "0xC1029C", VA = "0xC1029C")]
	public void ClearAllNotifications()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xC103CC", Offset = "0xC103CC", VA = "0xC103CC")]
	public OnlineNotification AddMessageNotification(string message = "")
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xC10624", Offset = "0xC10624", VA = "0xC10624")]
	public void BackToList()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xC106C0", Offset = "0xC106C0", VA = "0xC106C0")]
	public void GotoNetworkRoom(string roomName)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xC106C4", Offset = "0xC106C4", VA = "0xC106C4")]
	public void RequestRoomAccess(string userId, bool isCrew)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xC10824", Offset = "0xC10824", VA = "0xC10824")]
	public void AppearOffline()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xC1091C", Offset = "0xC1091C", VA = "0xC1091C")]
	public Dictionary<string, object> CreateUserFromRequest(Dictionary<string, object> request)
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xC10B1C", Offset = "0xC10B1C", VA = "0xC10B1C")]
	public MultiplayerPhoneMenu()
	{
	}
}
[Token(Token = "0x20000A2")]
public class PaintCanMenu : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CarouselPicker Carousel;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CarouselCapSelector CarouselCapSelector;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform CapRoot;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text CapText;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoundFXRef UIEnter;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SoundFXRef UIClick;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip HapticAudioClip;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip CapSelectedHapticAudioClip;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Root;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Canvas;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject SliderCanvas;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image ColorSwabImg;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Slider SprayCanPressureSlider;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isLocked;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject SprayCanCap;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PaintCanMenu _instance;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool IsEnabled;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float debouceTimer;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float hideTimer;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text PaintColorLabelText;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text PaintGroupLabelText;

	[Token(Token = "0x17000043")]
	public static PaintCanMenu Instance
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xC3B5DC", Offset = "0xC3B5DC", VA = "0xC3B5DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xC3B520", Offset = "0xC3B520", VA = "0xC3B520")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xC3B6A8", Offset = "0xC3B6A8", VA = "0xC3B6A8")]
	public void OnSwapHandsEvent()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xC3B72C", Offset = "0xC3B72C", VA = "0xC3B72C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xC3BA88", Offset = "0xC3BA88", VA = "0xC3BA88")]
	private void SetHandSprayCanVisible(bool handVisible, bool canVisible)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xC3B534", Offset = "0xC3B534", VA = "0xC3B534")]
	private void Hide()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xC3BF8C", Offset = "0xC3BF8C", VA = "0xC3BF8C")]
	private void UpdatePaintCans()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xC3D42C", Offset = "0xC3D42C", VA = "0xC3D42C")]
	private void UpdateCapsPressure()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xC3DE7C", Offset = "0xC3DE7C", VA = "0xC3DE7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xC3CE0C", Offset = "0xC3CE0C", VA = "0xC3CE0C")]
	private void UpdateLabels()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xC3E63C", Offset = "0xC3E63C", VA = "0xC3E63C")]
	public PaintCanMenu()
	{
	}
}
[Token(Token = "0x20000A3")]
public class ColorUIPicker : MonoBehaviour, IDragHandler, IEventSystemHandler
{
	[Token(Token = "0x20005CF")]
	public delegate void OnColorChangedEvent(Color color);

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image m_colorPickerImage;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform m_rectTransform;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ColorPickerCursor;

	[Token(Token = "0x1400001D")]
	public event OnColorChangedEvent ColorChanged
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xB466C4", Offset = "0xB466C4", VA = "0xB466C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907DAC", Offset = "0x907DAC")]
		add
		{
		}
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xB53A98", Offset = "0xB53A98", VA = "0xB53A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907DBC", Offset = "0x907DBC")]
		remove
		{
		}
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xB53B84", Offset = "0xB53B84", VA = "0xB53B84", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xB5455C", Offset = "0xB5455C", VA = "0xB5455C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xB545F0", Offset = "0xB545F0", VA = "0xB545F0")]
	public void RefreshColor()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xB5482C", Offset = "0xB5482C", VA = "0xB5482C")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB54830", Offset = "0xB54830", VA = "0xB54830")]
	public ColorUIPicker()
	{
	}
}
[Token(Token = "0x20000A4")]
public class FavColorUIElement : MonoBehaviour
{
	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F75E4", Offset = "0x8F75E4")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FavColorUIElement <>4__this;

		[Token(Token = "0x1700045A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D4D")]
			[Address(RVA = "0xCCB730", Offset = "0xCCB730", VA = "0xCCB730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D4F")]
			[Address(RVA = "0xCCB7A0", Offset = "0xCCB7A0", VA = "0xCCB7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0xCCB464", Offset = "0xCCB464", VA = "0xCCB464")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0xCCB4C4", Offset = "0xCCB4C4", VA = "0xCCB4C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0xCCB4C8", Offset = "0xCCB4C8", VA = "0xCCB4C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0xCCB738", Offset = "0xCCB738", VA = "0xCCB738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Metallic;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 CursorPosition;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int ChartIndex;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int SaveIndex;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_SphereMaterial;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsDefaultLoadedOnStart;

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xCCAB24", Offset = "0xCCAB24", VA = "0xCCAB24")]
	public void UpdateFavColor(Color color, float metallic, int colorChartIndex, Vector3 cursorPosition)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xCCB0BC", Offset = "0xCCB0BC", VA = "0xCCB0BC")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xCCB178", Offset = "0xCCB178", VA = "0xCCB178")]
	private void LoadPreference()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xCCB3F0", Offset = "0xCCB3F0", VA = "0xCCB3F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907DCC", Offset = "0x907DCC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xCCB490", Offset = "0xCCB490", VA = "0xCCB490")]
	public FavColorUIElement()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PaintMenu : MonoBehaviour
{
	[Token(Token = "0x20005D1")]
	public delegate void MenuOpenedEvent();

	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F75F4", Offset = "0x8F75F4")]
	private sealed class <Start>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaintMenu <>4__this;

		[Token(Token = "0x1700045C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D57")]
			[Address(RVA = "0xC47FCC", Offset = "0xC47FCC", VA = "0xC47FCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D59")]
			[Address(RVA = "0xC4803C", Offset = "0xC4803C", VA = "0xC4803C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0xC46524", Offset = "0xC46524", VA = "0xC46524")]
		[DebuggerHidden]
		public <Start>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0xC47B6C", Offset = "0xC47B6C", VA = "0xC47B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0xC47B70", Offset = "0xC47B70", VA = "0xC47B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0xC47FD4", Offset = "0xC47FD4", VA = "0xC47FD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_SpritePickerIndex;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] SpritePickerImages;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool menuOpened;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Root;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FavColorUI;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject CapSelectionUI;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject CapHoverInfoUI;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FavColorUIElement m_FavColorUIElement;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image SelectedColorSwab;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ColorUIPicker m_colorUIPicker;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider MetallicSlider;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject MetallicSphere;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_MetallicSphereMaterial;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image ColorPickerImage;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SprayCan m_SprayCanBeingController;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color m_SelectedColor;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool HackDontShowMetallicSphere;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8D80", Offset = "0x8F8D80")]
	public Text CapTitle;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text CapDescription;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform CapUIRoot;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isLocked;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8DB8", Offset = "0x8F8DB8")]
	public Slider PressureSlider;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject PressureIndicatorRoot;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image PressureSprite;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text PressurePercentText;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Color PressureSpriteColor;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PaintMenu _instance;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float uiSwitchTimer;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<GameObject> CapUIButtonList;

	[Token(Token = "0x17000044")]
	public static PaintMenu Instance
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0xC3DBD0", Offset = "0xC3DBD0", VA = "0xC3DBD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400001E")]
	public event MenuOpenedEvent OnMenuOpenedEvent
	{
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xC45E80", Offset = "0xC45E80", VA = "0xC45E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907E30", Offset = "0x907E30")]
		add
		{
		}
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xC45F6C", Offset = "0xC45F6C", VA = "0xC45F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907E40", Offset = "0x907E40")]
		remove
		{
		}
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xC46058", Offset = "0xC46058", VA = "0xC46058")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xC4615C", Offset = "0xC4615C", VA = "0xC4615C")]
	public void ShowCapInfo(int capIndex)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC460B4", Offset = "0xC460B4", VA = "0xC460B4")]
	public void HideCapInfo()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xC464B0", Offset = "0xC464B0", VA = "0xC464B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907E50", Offset = "0x907E50")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xC46550", Offset = "0xC46550", VA = "0xC46550")]
	public SprayCan GetControllingSprayCan()
	{
		return null;
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xC41844", Offset = "0xC41844", VA = "0xC41844")]
	public void SetMetallicValue(float metallic, bool showSphere = true)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xC416CC", Offset = "0xC416CC", VA = "0xC416CC")]
	public void SetCurrentColor(Color color)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xC46558", Offset = "0xC46558", VA = "0xC46558")]
	private void M_colorUIPicker_ColorChanged(Color color)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xC465F4", Offset = "0xC465F4", VA = "0xC465F4")]
	private void PressureValueChanged()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xC467E4", Offset = "0xC467E4", VA = "0xC467E4")]
	private void MetallicValueChanged()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xC46A3C", Offset = "0xC46A3C", VA = "0xC46A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xC4726C", Offset = "0xC4726C", VA = "0xC4726C")]
	public void SetColorChartByIndex(int index)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC47358", Offset = "0xC47358", VA = "0xC47358")]
	public void PrevColorGraph()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC4747C", Offset = "0xC4747C", VA = "0xC4747C")]
	public void NextColorGraph()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xC475A0", Offset = "0xC475A0", VA = "0xC475A0")]
	public void UpdateFavColor()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xC43360", Offset = "0xC43360", VA = "0xC43360")]
	public void SetCapIndex(int index)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC47748", Offset = "0xC47748", VA = "0xC47748")]
	public void SetSelectedCap(UnityEngine.Object button)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xC4784C", Offset = "0xC4784C", VA = "0xC4784C")]
	public void FavColorBtnClicked(UnityEngine.Object button)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xC47B30", Offset = "0xC47B30", VA = "0xC47B30")]
	public PaintMenu()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xC47B64", Offset = "0xC47B64", VA = "0xC47B64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907EB4", Offset = "0x907EB4")]
	private void <Start>b__36_0(float <p0>)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xC47B68", Offset = "0xC47B68", VA = "0xC47B68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907EC4", Offset = "0x907EC4")]
	private void <Start>b__36_1(float <p0>)
	{
	}
}
[Token(Token = "0x20000A6")]
public class Projector : MonoBehaviour
{
	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7604", Offset = "0x8F7604")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Projector <>4__this;

		[Token(Token = "0x1700045E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0xAA4378", Offset = "0xAA4378", VA = "0xAA4378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0xAA43E8", Offset = "0xAA43E8", VA = "0xAA43E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0xAA4124", Offset = "0xAA4124", VA = "0xAA4124")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0xAA426C", Offset = "0xAA426C", VA = "0xAA426C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0xAA4270", Offset = "0xAA4270", VA = "0xAA4270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0xAA4380", Offset = "0xAA4380", VA = "0xAA4380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7614", Offset = "0x8F7614")]
	private struct <GetUserInfo>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0x9A3590", Offset = "0x9A3590", VA = "0x9A3590", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x9A3598", Offset = "0x9A3598", VA = "0x9A3598", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text UsernameText;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text TotalLikesText;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xAA40B0", Offset = "0xAA40B0", VA = "0xAA40B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907ED4", Offset = "0x907ED4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xAA4150", Offset = "0xAA4150", VA = "0xAA4150")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x907F38", Offset = "0x907F38")]
	private void GetUserInfo()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xAA4200", Offset = "0xAA4200", VA = "0xAA4200")]
	private void Instance_OnPlatformConnectedEvent(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xAA4204", Offset = "0xAA4204", VA = "0xAA4204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xAA4208", Offset = "0xAA4208", VA = "0xAA4208")]
	public Projector()
	{
	}
}
[Token(Token = "0x20000A7")]
public class UIArtworkMenu : MonoBehaviour
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text DateTimeText;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image PreviewImage;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button Button;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button NextButton;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button PrevButton;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text IndexText;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_Index;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> m_Saves;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIMenu Menu;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xACCB98", Offset = "0xACCB98", VA = "0xACCB98")]
	private void Start()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xACCD64", Offset = "0xACCD64", VA = "0xACCD64")]
	public void RefreshSavedItems()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xACD3D0", Offset = "0xACD3D0", VA = "0xACD3D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xACD3D4", Offset = "0xACD3D4", VA = "0xACD3D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xACD3DC", Offset = "0xACD3DC", VA = "0xACD3DC")]
	private void OnPointerClicked()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xACD514", Offset = "0xACD514", VA = "0xACD514")]
	public void DeleteArtworkClicked()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xACD6C4", Offset = "0xACD6C4", VA = "0xACD6C4")]
	private void Menu_OnConfirmationEvent(bool confirm)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xACDB34", Offset = "0xACDB34", VA = "0xACDB34")]
	public void Share()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xACDBF0", Offset = "0xACDBF0", VA = "0xACDBF0")]
	public void Next()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xACDCDC", Offset = "0xACDCDC", VA = "0xACDCDC")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xACD0C0", Offset = "0xACD0C0", VA = "0xACD0C0")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xACDDC8", Offset = "0xACDDC8", VA = "0xACDDC8")]
	public UIArtworkMenu()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xACDE38", Offset = "0xACDE38", VA = "0xACDE38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907F9C", Offset = "0x907F9C")]
	private void <Start>b__9_0(BaseEventData <p0>)
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4870", Offset = "0x8F4870")]
public class UIButton : MonoBehaviour
{
	[Token(Token = "0x20005D5")]
	public enum AnimationType
	{
		[Token(Token = "0x4002024")]
		BUTTON_WITH_LABEL,
		[Token(Token = "0x4002025")]
		SIMPLE_ICON_SCALE
	}

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButtonStyle Style;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsLocked;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool OverrideColors;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool PlayAnimation;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool UseHoverBorder;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DisableInMultiplayer;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool DisableInLobby;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool DisableIfNotMasterClient;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text Label;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image IconImage;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_ImageScale;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AnimationType m_AnimationType;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject HoverImage;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color ImageDisabledColor;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xACDE3C", Offset = "0xACDE3C", VA = "0xACDE3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xACDF64", Offset = "0xACDF64", VA = "0xACDF64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xACEAD8", Offset = "0xACEAD8", VA = "0xACEAD8")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xACEB88", Offset = "0xACEB88", VA = "0xACEB88")]
	private void OnPointerEnter()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xACF2D0", Offset = "0xACF2D0", VA = "0xACF2D0")]
	private void ExitAnim()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xACF5C0", Offset = "0xACF5C0", VA = "0xACF5C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xACF87C", Offset = "0xACF87C", VA = "0xACF87C")]
	private void OnPointerExit()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xACFA38", Offset = "0xACFA38", VA = "0xACFA38")]
	private void OnPointerClicked()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xACFC04", Offset = "0xACFC04", VA = "0xACFC04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xACFA48", Offset = "0xACFA48", VA = "0xACFA48")]
	private void ButtonClick()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xACE810", Offset = "0xACE810", VA = "0xACE810")]
	public void UpdateStyle()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xAC9428", Offset = "0xAC9428", VA = "0xAC9428")]
	public void SetButtonFlash(bool flashing)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xACFC0C", Offset = "0xACFC0C", VA = "0xACFC0C")]
	public UIButton()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xACFC50", Offset = "0xACFC50", VA = "0xACFC50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907FAC", Offset = "0x907FAC")]
	private void <Start>b__15_0(BaseEventData <p0>)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xACFC54", Offset = "0xACFC54", VA = "0xACFC54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907FBC", Offset = "0x907FBC")]
	private void <Start>b__15_1(BaseEventData <p0>)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xACFC58", Offset = "0xACFC58", VA = "0xACFC58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x907FCC", Offset = "0x907FCC")]
	private void <Start>b__15_2(BaseEventData <p0>)
	{
	}
}
[Token(Token = "0x20000A9")]
public class UIButtonPlayerPref : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlayerPref;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DefaultOn;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xACFC68", Offset = "0xACFC68", VA = "0xACFC68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xACFD48", Offset = "0xACFD48", VA = "0xACFD48")]
	private void OnClicked()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xACFD94", Offset = "0xACFD94", VA = "0xACFD94")]
	public UIButtonPlayerPref()
	{
	}
}
[Token(Token = "0x20000AA")]
public class UIButtonStyle : MonoBehaviour
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string EnterAudio;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ExitAudio;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ClickAudio;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color DefaultColor;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color HoverColor;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color HoverBorderColor;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color PressedColor;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color DisabledColor;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xACFDA4", Offset = "0xACFDA4", VA = "0xACFDA4")]
	public UIButtonStyle()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F48D4", Offset = "0x8F48D4")]
public class UIButtonTooltip : MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TooltipTitle;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Tooltip;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool IsLocked;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xACFDAC", Offset = "0xACFDAC", VA = "0xACFDAC")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xACFDB8", Offset = "0xACFDB8", VA = "0xACFDB8")]
	private void PointerEnter()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xACFED4", Offset = "0xACFED4", VA = "0xACFED4")]
	private void PointerExit()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xACFFD8", Offset = "0xACFFD8", VA = "0xACFFD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xACFFDC", Offset = "0xACFFDC", VA = "0xACFFDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xACFFE0", Offset = "0xACFFE0", VA = "0xACFFE0")]
	public UIButtonTooltip()
	{
	}
}
[Token(Token = "0x20000AC")]
public class UICaller : MonoBehaviour
{
	[Token(Token = "0x20005D6")]
	public enum Method
	{
		[Token(Token = "0x4002027")]
		NONE,
		[Token(Token = "0x4002028")]
		SAVE,
		[Token(Token = "0x4002029")]
		LOAD,
		[Token(Token = "0x400202A")]
		UNDO,
		[Token(Token = "0x400202B")]
		CLEAN,
		[Token(Token = "0x400202C")]
		PLAYBACK_PLAY,
		[Token(Token = "0x400202D")]
		PLAYBACK_STOP,
		[Token(Token = "0x400202E")]
		PLAYBACK_PAUSE,
		[Token(Token = "0x400202F")]
		PLAYBACK_SPEED_X2,
		[Token(Token = "0x4002030")]
		PLAYBACK_SPEED_X4,
		[Token(Token = "0x4002031")]
		PLAYBACK_SPEED_X8,
		[Token(Token = "0x4002032")]
		SWITCH_HANDS,
		[Token(Token = "0x4002033")]
		SHARE
	}

	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7624", Offset = "0x8F7624")]
	private sealed class <ButtonClickAsync>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UICaller <>4__this;

		[Token(Token = "0x17000460")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D65")]
			[Address(RVA = "0xAD169C", Offset = "0xAD169C", VA = "0xAD169C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D67")]
			[Address(RVA = "0xAD170C", Offset = "0xAD170C", VA = "0xAD170C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0xAD14D8", Offset = "0xAD14D8", VA = "0xAD14D8")]
		[DebuggerHidden]
		public <ButtonClickAsync>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0xAD15D4", Offset = "0xAD15D4", VA = "0xAD15D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0xAD15D8", Offset = "0xAD15D8", VA = "0xAD15D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0xAD16A4", Offset = "0xAD16A4", VA = "0xAD16A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UICaller _instance;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isLocked;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string MethodString;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool MethodBool;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MethodInt;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MethodFloat;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject MethodObject;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Method m_Method;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_MethodToRun;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float Delay;

	[Token(Token = "0x17000045")]
	public static UICaller Instance
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xACFFE8", Offset = "0xACFFE8", VA = "0xACFFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xAD00B4", Offset = "0xAD00B4", VA = "0xAD00B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xAD01C0", Offset = "0xAD01C0", VA = "0xAD01C0")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xAD01CC", Offset = "0xAD01CC", VA = "0xAD01CC")]
	private void DoClick()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xAD1464", Offset = "0xAD1464", VA = "0xAD1464")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907FDC", Offset = "0x907FDC")]
	private IEnumerator ButtonClickAsync()
	{
		return null;
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xAD1504", Offset = "0xAD1504", VA = "0xAD1504")]
	public void ButtonClicked()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xAD1564", Offset = "0xAD1564", VA = "0xAD1564")]
	public UICaller()
	{
	}
}
[Token(Token = "0x20000AD")]
public class UIChildCycle : MonoBehaviour
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int index;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int lastIndex;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xAD1714", Offset = "0xAD1714", VA = "0xAD1714")]
	public void Next()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xAD18A8", Offset = "0xAD18A8", VA = "0xAD18A8")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xAD17CC", Offset = "0xAD17CC", VA = "0xAD17CC")]
	private void UpdateEnabledStates()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xAD1960", Offset = "0xAD1960", VA = "0xAD1960")]
	private void Start()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xAD1964", Offset = "0xAD1964", VA = "0xAD1964")]
	private void Update()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xAD1968", Offset = "0xAD1968", VA = "0xAD1968")]
	public UIChildCycle()
	{
	}
}
[Token(Token = "0x20000AE")]
public class UIChildEnableByName : MonoBehaviour
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_lastSelected;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xAD1970", Offset = "0xAD1970", VA = "0xAD1970")]
	public void SetEnabledByName(string name)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xAD1CE4", Offset = "0xAD1CE4", VA = "0xAD1CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xAD1D40", Offset = "0xAD1D40", VA = "0xAD1D40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xAD1D44", Offset = "0xAD1D44", VA = "0xAD1D44")]
	public UIChildEnableByName()
	{
	}
}
[Token(Token = "0x20000AF")]
public class UIEventLoadLevel : MonoBehaviour
{
	[Token(Token = "0x20005D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7634", Offset = "0x8F7634")]
	private sealed class <CheckInternetConnectionAndProceed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIEventLoadLevel <>4__this;

		[Token(Token = "0x17000462")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xAD2360", Offset = "0xAD2360", VA = "0xAD2360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xAD23D0", Offset = "0xAD23D0", VA = "0xAD23D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0xAD1DC0", Offset = "0xAD1DC0", VA = "0xAD1DC0")]
		[DebuggerHidden]
		public <CheckInternetConnectionAndProceed>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0xAD2068", Offset = "0xAD2068", VA = "0xAD2068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0xAD206C", Offset = "0xAD206C", VA = "0xAD206C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0xAD2368", Offset = "0xAD2368", VA = "0xAD2368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20005D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7644", Offset = "0x8F7644")]
	private struct <EmergencyFadeIn>d__6 : IAsyncStateMachine
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int targetVector;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIEventLoadLevel <>4__this;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0x9A35C0", Offset = "0x9A35C0", VA = "0x9A35C0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0x9A35C8", Offset = "0x9A35C8", VA = "0x9A35C8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7654", Offset = "0x8F7654")]
	private sealed class <PrepareAndLoadLevel>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIEventLoadLevel <>4__this;

		[Token(Token = "0x17000464")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D73")]
			[Address(RVA = "0xAD2B64", Offset = "0xAD2B64", VA = "0xAD2B64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D75")]
			[Address(RVA = "0xAD2BD4", Offset = "0xAD2BD4", VA = "0xAD2BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0xAD1F24", Offset = "0xAD1F24", VA = "0xAD1F24")]
		[DebuggerHidden]
		public <PrepareAndLoadLevel>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0xAD25B4", Offset = "0xAD25B4", VA = "0xAD25B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0xAD25B8", Offset = "0xAD25B8", VA = "0xAD25B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0xAD2B6C", Offset = "0xAD2B6C", VA = "0xAD2B6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string BundleName;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string LevelName;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RequiresInternetConnection;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool IsNetworkAutoJoinHack;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int attackVector;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xAD1D4C", Offset = "0xAD1D4C", VA = "0xAD1D4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909040", Offset = "0x909040")]
	private IEnumerator CheckInternetConnectionAndProceed()
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xAD1DEC", Offset = "0xAD1DEC", VA = "0xAD1DEC")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9090A4", Offset = "0x9090A4")]
	private void EmergencyFadeIn(int targetVector)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xAD1EB0", Offset = "0xAD1EB0", VA = "0xAD1EB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909108", Offset = "0x909108")]
	public IEnumerator PrepareAndLoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xAD1F50", Offset = "0xAD1F50", VA = "0xAD1F50")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xAD2010", Offset = "0xAD2010", VA = "0xAD2010")]
	public UIEventLoadLevel()
	{
	}
}
[Token(Token = "0x20000B0")]
public class UIEventMenuSwitch : MonoBehaviour
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool GoBack;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool GoHome;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIMenu Menu;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RequiresInternetConnection;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string MenuName;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xAD2BDC", Offset = "0xAD2BDC", VA = "0xAD2BDC")]
	private void CheckInternetConnectionAndProceed()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xAD2C8C", Offset = "0xAD2C8C", VA = "0xAD2C8C")]
	private void OnClicked()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xAD2E28", Offset = "0xAD2E28", VA = "0xAD2E28")]
	public UIEventMenuSwitch()
	{
	}
}
[Token(Token = "0x20000B1")]
public class UIEventSendMessage : MonoBehaviour
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent invokeMethod;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xAD2E30", Offset = "0xAD2E30", VA = "0xAD2E30")]
	private void OnClicked()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xAD2E60", Offset = "0xAD2E60", VA = "0xAD2E60")]
	private void Start()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xAD2E64", Offset = "0xAD2E64", VA = "0xAD2E64")]
	private void Update()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xAD2E68", Offset = "0xAD2E68", VA = "0xAD2E68")]
	public UIEventSendMessage()
	{
	}
}
[Token(Token = "0x20000B2")]
public class UIImageMenu : MonoBehaviour
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<UIImageMenuItem> Entries;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ListPrefab;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text HeaderText;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image Image;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button Button;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_Index;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsMultiplayerLocationsMenu;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OnlinePlayerUiItem OnlineUIItem;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xAD2E70", Offset = "0xAD2E70", VA = "0xAD2E70")]
	private void Start()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xAD3548", Offset = "0xAD3548", VA = "0xAD3548")]
	private void OnPointerClicked()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xAD3758", Offset = "0xAD3758", VA = "0xAD3758")]
	public void Next()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xAD3810", Offset = "0xAD3810", VA = "0xAD3810")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xAD331C", Offset = "0xAD331C", VA = "0xAD331C")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xAD38C8", Offset = "0xAD38C8", VA = "0xAD38C8")]
	public UIImageMenu()
	{
	}
}
[Token(Token = "0x20000B3")]
public class UIImageMenuItem : MonoBehaviour
{
	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Header;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SubHeader;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite Image;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xAD3938", Offset = "0xAD3938", VA = "0xAD3938")]
	public UIImageMenuItem()
	{
	}
}
[Token(Token = "0x20000B4")]
public class UIMainMenuProfile : MonoBehaviour
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text UsernameText;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text RatingText;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xAD4E2C", Offset = "0xAD4E2C", VA = "0xAD4E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xAD4E30", Offset = "0xAD4E30", VA = "0xAD4E30")]
	private void Instance_OnPlatformConnectedEvent(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xAD4EC0", Offset = "0xAD4EC0", VA = "0xAD4EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xAD4EC4", Offset = "0xAD4EC4", VA = "0xAD4EC4")]
	public UIMainMenuProfile()
	{
	}
}
[Token(Token = "0x20000B5")]
public class UIMenu : MonoBehaviour
{
	[Token(Token = "0x20005DB")]
	public delegate void ConfirmationDialogEvent(bool confirm);

	[Token(Token = "0x20005DC")]
	public delegate void MenuChanged(string menuname);

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UIMenuItem> m_MenuItems;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIMenuItem m_CurrentSelectedMenuItem;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string HomeMenu;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BackButtonUI;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text MessageDialogText;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UIMenuItem> m_MenuStack;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_MenuStackIndex;

	[Token(Token = "0x1400001F")]
	public event ConfirmationDialogEvent OnConfirmationEvent
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xACD5D8", Offset = "0xACD5D8", VA = "0xACD5D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90916C", Offset = "0x90916C")]
		add
		{
		}
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xACD93C", Offset = "0xACD93C", VA = "0xACD93C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90917C", Offset = "0x90917C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event MenuChanged OnMenuChanged
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xAD4ECC", Offset = "0xAD4ECC", VA = "0xAD4ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90918C", Offset = "0x90918C")]
		add
		{
		}
		[Token(Token = "0x600066B")]
		[Address(RVA = "0xAD4FB8", Offset = "0xAD4FB8", VA = "0xAD4FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90919C", Offset = "0x90919C")]
		remove
		{
		}
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xAD50A4", Offset = "0xAD50A4", VA = "0xAD50A4")]
	public UIMenuItem GetCurrentMenuItem()
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xAD50AC", Offset = "0xAD50AC", VA = "0xAD50AC")]
	private void RecurseChildren(Transform trans)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xAD5470", Offset = "0xAD5470", VA = "0xAD5470")]
	public void SendConfirmationEvent(bool confirm)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xAD58C4", Offset = "0xAD58C4", VA = "0xAD58C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xAD5900", Offset = "0xAD5900", VA = "0xAD5900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xAD5AD4", Offset = "0xAD5AD4", VA = "0xAD5AD4")]
	public void SetMenu(UIMenuItem menuItem)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xACCEF0", Offset = "0xACCEF0", VA = "0xACCEF0")]
	public void SetMenu(string name, [Optional] string messageDialogText)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xACDA28", Offset = "0xACDA28", VA = "0xACDA28")]
	public void GoBack()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xAD2E1C", Offset = "0xAD2E1C", VA = "0xAD2E1C")]
	public void GoHome()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xAD221C", Offset = "0xAD221C", VA = "0xAD221C")]
	public static UIMenu GetUIMenuInParent(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xAD64E0", Offset = "0xAD64E0", VA = "0xAD64E0")]
	public UIMenu()
	{
	}
}
[Token(Token = "0x20000B6")]
public class UIMenuItem : MonoBehaviour
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8E20", Offset = "0x8F8E20")]
	public bool AddedToStack;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ShowBackUI;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool RequriesInternetConnection;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xAD665C", Offset = "0xAD665C", VA = "0xAD665C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xAD6660", Offset = "0xAD6660", VA = "0xAD6660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xAD6664", Offset = "0xAD6664", VA = "0xAD6664")]
	public UIMenuItem()
	{
	}
}
[Token(Token = "0x20000B7")]
public class UIMenuSwitch : MonoBehaviour
{
	[Token(Token = "0x20005DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7664", Offset = "0x8F7664")]
	private sealed class <SwitchMenuAsync>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIMenuSwitch <>4__this;

		[Token(Token = "0x17000466")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D81")]
			[Address(RVA = "0xAD6940", Offset = "0xAD6940", VA = "0xAD6940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D83")]
			[Address(RVA = "0xAD69B0", Offset = "0xAD69B0", VA = "0xAD69B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0xAD67F8", Offset = "0xAD67F8", VA = "0xAD67F8")]
		[DebuggerHidden]
		public <SwitchMenuAsync>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0xAD685C", Offset = "0xAD685C", VA = "0xAD685C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0xAD6860", Offset = "0xAD6860", VA = "0xAD6860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0xAD6948", Offset = "0xAD6948", VA = "0xAD6948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Delay;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Menu;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIMenu UIMenu;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool GoBack;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xAD6674", Offset = "0xAD6674", VA = "0xAD6674")]
	private void SwitchMenu(string menu)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xAD6784", Offset = "0xAD6784", VA = "0xAD6784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9091AC", Offset = "0x9091AC")]
	private IEnumerator SwitchMenuAsync()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xAD6824", Offset = "0xAD6824", VA = "0xAD6824")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xAD6850", Offset = "0xAD6850", VA = "0xAD6850")]
	private void Update()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xAD6854", Offset = "0xAD6854", VA = "0xAD6854")]
	public UIMenuSwitch()
	{
	}
}
[Token(Token = "0x20000B8")]
public class UIMeshRaycaster : MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask RaycastLayer;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RaycastHit m_RayCastHit;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RayCastDistance;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IMeshRaycaster m_MeshRayCaster;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsOverItem;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool IsEnabled;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static UIMeshRaycaster _instance;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isUIActive;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject hitPoint;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LineRenderer m_LineRenderer;

	[Token(Token = "0x17000046")]
	public static UIMeshRaycaster Instance
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xAD6A60", Offset = "0xAD6A60", VA = "0xAD6A60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xAD69B8", Offset = "0xAD69B8", VA = "0xAD69B8")]
	private bool I_Can_See(Bounds bounds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xAD6B88", Offset = "0xAD6B88", VA = "0xAD6B88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xAD7220", Offset = "0xAD7220", VA = "0xAD7220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xAD72D8", Offset = "0xAD72D8", VA = "0xAD72D8")]
	private void SceneManager_activeSceneChanged(Scene arg0, Scene arg1)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xAD734C", Offset = "0xAD734C", VA = "0xAD734C")]
	public UIMeshRaycaster()
	{
	}
}
[Token(Token = "0x20000B9")]
public abstract class IUILaserPointer : MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float laserThickness;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float laserHitScale;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool laserAlwaysOn;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color color;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hitPoint;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject pointer;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask Layer;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _distanceLimit;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Shader LaserShader;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_isInteractingWithUI;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsActive;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public LayerMask UILayer;

	[Token(Token = "0x17000047")]
	public bool IsInteractingWithUI
	{
		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC5CF00", Offset = "0xC5CF00", VA = "0xC5CF00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xC5C904", Offset = "0xC5C904", VA = "0xC5C904")]
	public void InitPointer()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xC5CE44", Offset = "0xC5CE44", VA = "0xC5CE44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xC5CEF4", Offset = "0xC5CEF4", VA = "0xC5CEF4", Slot = "4")]
	protected virtual void Initialize()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xC5CEF8", Offset = "0xC5CEF8", VA = "0xC5CEF8", Slot = "5")]
	public virtual void OnEnterControl(GameObject control)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xC5CEFC", Offset = "0xC5CEFC", VA = "0xC5CEFC", Slot = "6")]
	public virtual void OnExitControl(GameObject control)
	{
	}

	[Token(Token = "0x600068B")]
	public abstract bool ButtonDown();

	[Token(Token = "0x600068C")]
	public abstract bool ButtonUp();

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xC5CF08", Offset = "0xC5CF08", VA = "0xC5CF08")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xC5CFD4", Offset = "0xC5CFD4", VA = "0xC5CFD4", Slot = "9")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xC5D364", Offset = "0xC5D364", VA = "0xC5D364", Slot = "10")]
	public virtual void LimitLaserDistance(float distance)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xC5D3FC", Offset = "0xC5D3FC", VA = "0xC5D3FC")]
	protected IUILaserPointer()
	{
	}
}
[Token(Token = "0x20000BA")]
public class LaserPointerEventData : PointerEventData
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject current;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public IUILaserPointer controller;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x17554D8", Offset = "0x17554D8", VA = "0x17554D8")]
	public LaserPointerEventData(EventSystem e)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x17554E0", Offset = "0x17554E0", VA = "0x17554E0", Slot = "4")]
	public override void Reset()
	{
	}
}
[Token(Token = "0x20000BB")]
public class LaserPointerInputModule : BaseInputModule
{
	[Token(Token = "0x20005DE")]
	private class ControllerData
	{
		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LaserPointerEventData pointerEvent;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject currentPoint;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject currentPressed;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject currentDragging;

		[Token(Token = "0x6002D84")]
		[Address(RVA = "0x17558CC", Offset = "0x17558CC", VA = "0x17558CC")]
		public ControllerData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7674", Offset = "0x8F7674")]
	private sealed class <>c
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<RaycastResult, float> <>9__18_0;

		[Token(Token = "0x6002D86")]
		[Address(RVA = "0x1756F68", Offset = "0x1756F68", VA = "0x1756F68")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D87")]
		[Address(RVA = "0x1756F70", Offset = "0x1756F70", VA = "0x1756F70")]
		internal float <Process>b__18_0(RaycastResult result)
		{
			return default(float);
		}
	}

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LaserPointerInputModule _instance;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask layerMask;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera UICamera;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhysicsRaycaster raycaster;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HashSet<IUILaserPointer> _controllers;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<IUILaserPointer, ControllerData> _controllerData;

	[Token(Token = "0x17000048")]
	public static LaserPointerInputModule instance
	{
		[Token(Token = "0x6000695")]
		[Address(RVA = "0x17554EC", Offset = "0x17554EC", VA = "0x17554EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x17555B8", Offset = "0x17555B8", VA = "0x17555B8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x17555C0", Offset = "0x17555C0", VA = "0x17555C0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x175573C", Offset = "0x175573C", VA = "0x175573C")]
	private void SceneChangedEvent(string sceneName)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x175583C", Offset = "0x175583C", VA = "0x175583C")]
	public void AddController(IUILaserPointer controller)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x17558D4", Offset = "0x17558D4", VA = "0x17558D4")]
	public void RemoveController(IUILaserPointer controller)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1755944", Offset = "0x1755944", VA = "0x1755944")]
	protected void UpdateCameraPosition(IUILaserPointer controller)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1755A80", Offset = "0x1755A80", VA = "0x1755A80")]
	public void ResetThatShiz()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1755C14", Offset = "0x1755C14", VA = "0x1755C14")]
	public void ClearSelection()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1755CE0", Offset = "0x1755CE0", VA = "0x1755CE0")]
	public void Select(GameObject go)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1755DD4", Offset = "0x1755DD4", VA = "0x1755DD4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1756E94", Offset = "0x1756E94", VA = "0x1756E94")]
	public LaserPointerInputModule()
	{
	}
}
[Token(Token = "0x20000BC")]
public class UILaserPointer : IUILaserPointer
{
	[Token(Token = "0x20005E0")]
	public delegate void UIDetectedStateChanged(bool active);

	[Token(Token = "0x20005E1")]
	public delegate void OnControlEntered(GameObject control);

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UILaserPointer _instance;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public new bool IsActive;

	[Token(Token = "0x17000049")]
	public static UILaserPointer Instance
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xAD3B18", Offset = "0xAD3B18", VA = "0xAD3B18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000021")]
	public event UIDetectedStateChanged OnUIDetectedStateChanged
	{
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xAD3940", Offset = "0xAD3940", VA = "0xAD3940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909210", Offset = "0x909210")]
		add
		{
		}
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xAD3A2C", Offset = "0xAD3A2C", VA = "0xAD3A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909220", Offset = "0x909220")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event OnControlEntered OnControlEnter
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xAD3E04", Offset = "0xAD3E04", VA = "0xAD3E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909230", Offset = "0x909230")]
		add
		{
		}
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xAD3EF0", Offset = "0xAD3EF0", VA = "0xAD3EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909240", Offset = "0x909240")]
		remove
		{
		}
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xAD3BE4", Offset = "0xAD3BE4", VA = "0xAD3BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xAD3BEC", Offset = "0xAD3BEC", VA = "0xAD3BEC", Slot = "4")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xAD3BF4", Offset = "0xAD3BF4", VA = "0xAD3BF4", Slot = "7")]
	public override bool ButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xAD3CFC", Offset = "0xAD3CFC", VA = "0xAD3CFC", Slot = "8")]
	public override bool ButtonUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xAD3FDC", Offset = "0xAD3FDC", VA = "0xAD3FDC", Slot = "5")]
	public override void OnEnterControl(GameObject control)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xAD4C1C", Offset = "0xAD4C1C", VA = "0xAD4C1C", Slot = "6")]
	public override void OnExitControl(GameObject control)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xAD4CD8", Offset = "0xAD4CD8", VA = "0xAD4CD8")]
	public UILaserPointer()
	{
	}
}
[Token(Token = "0x20000BD")]
public class UIToggleHeight : MonoBehaviour
{
	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform RectTransform;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isToggled;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StartHeight;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ExpandedHeight;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xAD7F1C", Offset = "0xAD7F1C", VA = "0xAD7F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xAD7FAC", Offset = "0xAD7FAC", VA = "0xAD7FAC")]
	public void SnapTo(RectTransform target)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xAD81C8", Offset = "0xAD81C8", VA = "0xAD81C8")]
	public void Toggle()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xAD82C0", Offset = "0xAD82C0", VA = "0xAD82C0")]
	public UIToggleHeight()
	{
	}
}
[Token(Token = "0x20000BE")]
public class UIToggleImageButton : MonoBehaviour
{
	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite OffImage;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite OnImage;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xAD82D4", Offset = "0xAD82D4", VA = "0xAD82D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xAD82D8", Offset = "0xAD82D8", VA = "0xAD82D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xAD82DC", Offset = "0xAD82DC", VA = "0xAD82DC")]
	public UIToggleImageButton()
	{
	}
}
[Token(Token = "0x20000BF")]
public class CommunityArtwork : MonoBehaviour
{
	[Token(Token = "0x20005E2")]
	public class Artwork
	{
		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9031BC", Offset = "0x9031BC")]
		private string <Username>k__BackingField;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9031CC", Offset = "0x9031CC")]
		private string <UserID>k__BackingField;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9031DC", Offset = "0x9031DC")]
		private string <Level>k__BackingField;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9031EC", Offset = "0x9031EC")]
		private string <Timestamp>k__BackingField;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9031FC", Offset = "0x9031FC")]
		private string <Category>k__BackingField;

		[Token(Token = "0x17000468")]
		public string Username
		{
			[Token(Token = "0x6002D90")]
			[Address(RVA = "0xEE9808", Offset = "0xEE9808", VA = "0xEE9808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914100", Offset = "0x914100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D91")]
			[Address(RVA = "0xEE9810", Offset = "0xEE9810", VA = "0xEE9810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914110", Offset = "0x914110")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		public string UserID
		{
			[Token(Token = "0x6002D92")]
			[Address(RVA = "0xEE9818", Offset = "0xEE9818", VA = "0xEE9818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914120", Offset = "0x914120")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D93")]
			[Address(RVA = "0xEE9820", Offset = "0xEE9820", VA = "0xEE9820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914130", Offset = "0x914130")]
			set
			{
			}
		}

		[Token(Token = "0x1700046A")]
		public string Level
		{
			[Token(Token = "0x6002D94")]
			[Address(RVA = "0xEE9828", Offset = "0xEE9828", VA = "0xEE9828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914140", Offset = "0x914140")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D95")]
			[Address(RVA = "0xEE9830", Offset = "0xEE9830", VA = "0xEE9830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914150", Offset = "0x914150")]
			set
			{
			}
		}

		[Token(Token = "0x1700046B")]
		public string Timestamp
		{
			[Token(Token = "0x6002D96")]
			[Address(RVA = "0xEE9838", Offset = "0xEE9838", VA = "0xEE9838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914160", Offset = "0x914160")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D97")]
			[Address(RVA = "0xEE9840", Offset = "0xEE9840", VA = "0xEE9840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914170", Offset = "0x914170")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public string Category
		{
			[Token(Token = "0x6002D98")]
			[Address(RVA = "0xEE9848", Offset = "0xEE9848", VA = "0xEE9848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914180", Offset = "0x914180")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D99")]
			[Address(RVA = "0xEE9850", Offset = "0xEE9850", VA = "0xEE9850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x914190", Offset = "0x914190")]
			set
			{
			}
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0xEE9858", Offset = "0xEE9858", VA = "0xEE9858")]
		public Artwork()
		{
		}
	}

	[Token(Token = "0x20005E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7684", Offset = "0x8F7684")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommunityArtwork <>4__this;

		[Token(Token = "0x1700046D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xB56A2C", Offset = "0xB56A2C", VA = "0xB56A2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0xB56A9C", Offset = "0xB56A9C", VA = "0xB56A9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0xB54A14", Offset = "0xB54A14", VA = "0xB54A14")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0xB5645C", Offset = "0xB5645C", VA = "0xB5645C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0xB56460", Offset = "0xB56460", VA = "0xB56460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0xB56A34", Offset = "0xB56A34", VA = "0xB56A34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7694", Offset = "0x8F7694")]
	private sealed class <LikeAsync>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommunityArtwork <>4__this;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, object> <artworkData>5__2;

		[Token(Token = "0x1700046F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DA4")]
			[Address(RVA = "0xB56080", Offset = "0xB56080", VA = "0xB56080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DA6")]
			[Address(RVA = "0xB560F0", Offset = "0xB560F0", VA = "0xB560F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0xB54E78", Offset = "0xB54E78", VA = "0xB54E78")]
		[DebuggerHidden]
		public <LikeAsync>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0xB55998", Offset = "0xB55998", VA = "0xB55998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0xB5599C", Offset = "0xB5599C", VA = "0xB5599C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0xB56088", Offset = "0xB56088", VA = "0xB56088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F76A4", Offset = "0x8F76A4")]
	private sealed class <DeleteArtworkAsync>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommunityArtwork <>4__this;

		[Token(Token = "0x17000471")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0xB55920", Offset = "0xB55920", VA = "0xB55920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DAC")]
			[Address(RVA = "0xB55990", Offset = "0xB55990", VA = "0xB55990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0xB5564C", Offset = "0xB5564C", VA = "0xB5564C")]
		[DebuggerHidden]
		public <DeleteArtworkAsync>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0xB557D4", Offset = "0xB557D4", VA = "0xB557D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0xB557D8", Offset = "0xB557D8", VA = "0xB557D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0xB55928", Offset = "0xB55928", VA = "0xB55928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F76B4", Offset = "0x8F76B4")]
	private sealed class <LoadArtworkItemsAsync>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommunityArtwork <>4__this;

		[Token(Token = "0x17000473")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0xB563E4", Offset = "0xB563E4", VA = "0xB563E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0xB56454", Offset = "0xB56454", VA = "0xB56454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0xB55700", Offset = "0xB55700", VA = "0xB55700")]
		[DebuggerHidden]
		public <LoadArtworkItemsAsync>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0xB560F8", Offset = "0xB560F8", VA = "0xB560F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DAF")]
		[Address(RVA = "0xB560FC", Offset = "0xB560FC", VA = "0xB560FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0xB563EC", Offset = "0xB563EC", VA = "0xB563EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ImageContainer;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CommunityArtworkItem ArtworkItem;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButtonStyle OnBtnStyle;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButtonStyle DefaultBtnStyle;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button NextButton;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button PrevButton;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button DeleteButton;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button LikeButton;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIButton LikeUIButton;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommunityArtwork _instance;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<CommunityArtworkItem> m_ArtworkItems;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIMenu Menu;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject RootUI;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int index;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int NumberOfItemsPerPage;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject ConfirmationDialog;

	[Token(Token = "0x1700004A")]
	public static CommunityArtwork Instance
	{
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xB548D4", Offset = "0xB548D4", VA = "0xB548D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xB549A0", Offset = "0xB549A0", VA = "0xB549A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909250", Offset = "0x909250")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xB54A40", Offset = "0xB54A40", VA = "0xB54A40")]
	public void Play()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xB54D04", Offset = "0xB54D04", VA = "0xB54D04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xB54DD0", Offset = "0xB54DD0", VA = "0xB54DD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xB54E04", Offset = "0xB54E04", VA = "0xB54E04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9092B4", Offset = "0x9092B4")]
	private IEnumerator LikeAsync()
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xB54EA4", Offset = "0xB54EA4", VA = "0xB54EA4")]
	public void DeleteClicked()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xB54F8C", Offset = "0xB54F8C", VA = "0xB54F8C")]
	public void LikeClicked()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xB54FB8", Offset = "0xB54FB8", VA = "0xB54FB8")]
	private bool HasAlreadyLikedArtwork(CommunityArtworkItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xB5522C", Offset = "0xB5522C", VA = "0xB5522C")]
	public void Back()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xB55260", Offset = "0xB55260", VA = "0xB55260")]
	private void KingsprayMongoDB_OnGetArtworkSingleComplete(Dictionary<string, object> artwork)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xB55360", Offset = "0xB55360", VA = "0xB55360")]
	private void KingsprayMongoDB_OnGetArtworkEntriesComplete(List<Dictionary<string, object>> entries)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xB5549C", Offset = "0xB5549C", VA = "0xB5549C")]
	public void NextArtwork()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB55568", Offset = "0xB55568", VA = "0xB55568")]
	public void PrevArtwork()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB54F54", Offset = "0xB54F54", VA = "0xB54F54")]
	public void SetConfirmationDialogVisiblity(bool visible)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB555D8", Offset = "0xB555D8", VA = "0xB555D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909318", Offset = "0x909318")]
	private IEnumerator DeleteArtworkAsync()
	{
		return null;
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB55678", Offset = "0xB55678", VA = "0xB55678")]
	public void DeleteArtwork()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xB554F4", Offset = "0xB554F4", VA = "0xB554F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90937C", Offset = "0x90937C")]
	private IEnumerator LoadArtworkItemsAsync()
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xB5572C", Offset = "0xB5572C", VA = "0xB5572C")]
	public CommunityArtwork()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xB557A4", Offset = "0xB557A4", VA = "0xB557A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9093E0", Offset = "0x9093E0")]
	private void <Start>b__13_0()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xB557D0", Offset = "0xB557D0", VA = "0xB557D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9093F0", Offset = "0x9093F0")]
	private void <Start>b__13_1()
	{
	}
}
[Token(Token = "0x20000C0")]
public class CommunityArtworkItem : MonoBehaviour
{
	[Token(Token = "0x20005E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F76C4", Offset = "0x8F76C4")]
	private sealed class <LoadArtworkSingle>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, object> dict;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CommunityArtworkItem <>4__this;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <url>5__2;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__3;

		[Token(Token = "0x17000475")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0xEEA6A4", Offset = "0xEEA6A4", VA = "0xEEA6A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000476")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0xEEA714", Offset = "0xEEA714", VA = "0xEEA714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0xEE9D10", Offset = "0xEE9D10", VA = "0xEE9D10")]
		[DebuggerHidden]
		public <LoadArtworkSingle>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0xEE9F04", Offset = "0xEE9F04", VA = "0xEE9F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0xEE9FE0", Offset = "0xEE9FE0", VA = "0xEE9FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0xEE9F20", Offset = "0xEE9F20", VA = "0xEE9F20")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0xEEA6AC", Offset = "0xEEA6AC", VA = "0xEEA6AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, object> m_ArtworkData;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text ArtistText;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ThumbnailImage;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text LikeCountText;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text LevelNameText;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator Animator;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isColorLerping;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float colorLerpAmount;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xEE9860", Offset = "0xEE9860", VA = "0xEE9860")]
	public void SetData(Dictionary<string, object> artworkData, bool loadThumbnail = true)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xEE9C78", Offset = "0xEE9C78", VA = "0xEE9C78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909400", Offset = "0x909400")]
	private IEnumerator LoadArtworkSingle(Dictionary<string, object> dict)
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xEE9D3C", Offset = "0xEE9D3C", VA = "0xEE9D3C")]
	public Dictionary<string, object> GetData()
	{
		return null;
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xEE9D44", Offset = "0xEE9D44", VA = "0xEE9D44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xEE9DF0", Offset = "0xEE9DF0", VA = "0xEE9DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xEE9EFC", Offset = "0xEE9EFC", VA = "0xEE9EFC")]
	public CommunityArtworkItem()
	{
	}
}
[Token(Token = "0x20000C1")]
public class KingsprayMongoDB : MonoBehaviour
{
	[Token(Token = "0x20005E8")]
	public delegate void GetRecordsRetrieved(List<Dictionary<string, object>> entries);

	[Token(Token = "0x20005E9")]
	public delegate void GetArtworkEntriesComplete(List<Dictionary<string, object>> entries);

	[Token(Token = "0x20005EA")]
	public delegate void GetArtworkSingleComplete(Dictionary<string, object> artwork);

	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F76D4", Offset = "0x8F76D4")]
	private sealed class <GetSingleArtwork>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string username;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string level;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string timestamp;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KingsprayMongoDB <>4__this;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <www>5__2;

		[Token(Token = "0x17000477")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0xECF158", Offset = "0xECF158", VA = "0xECF158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000478")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0xECF1C8", Offset = "0xECF1C8", VA = "0xECF1C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DC6")]
		[Address(RVA = "0xEC98F0", Offset = "0xEC98F0", VA = "0xEC98F0")]
		[DebuggerHidden]
		public <GetSingleArtwork>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002DC7")]
		[Address(RVA = "0xECE480", Offset = "0xECE480", VA = "0xECE480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0xECE55C", Offset = "0xECE55C", VA = "0xECE55C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC9")]
		[Address(RVA = "0xECE49C", Offset = "0xECE49C", VA = "0xECE49C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0xECF160", Offset = "0xECF160", VA = "0xECF160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F76E4", Offset = "0x8F76E4")]
	private sealed class <MultiplayerRoomRequest>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000479")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DD0")]
			[Address(RVA = "0xECF3C8", Offset = "0xECF3C8", VA = "0xECF3C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0xECF438", Offset = "0xECF438", VA = "0xECF438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0xEC997C", Offset = "0xEC997C", VA = "0xEC997C")]
		[DebuggerHidden]
		public <MultiplayerRoomRequest>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0xECF31C", Offset = "0xECF31C", VA = "0xECF31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0xECF320", Offset = "0xECF320", VA = "0xECF320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0xECF3D0", Offset = "0xECF3D0", VA = "0xECF3D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F76F4", Offset = "0x8F76F4")]
	private sealed class <MultiplayerRoomAccess>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool, bool> callback;

		[Token(Token = "0x1700047B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0xECF2A4", Offset = "0xECF2A4", VA = "0xECF2A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0xECF314", Offset = "0xECF314", VA = "0xECF314", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0xEC9A1C", Offset = "0xEC9A1C", VA = "0xEC9A1C")]
		[DebuggerHidden]
		public <MultiplayerRoomAccess>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002DD4")]
		[Address(RVA = "0xECF1D0", Offset = "0xECF1D0", VA = "0xECF1D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DD5")]
		[Address(RVA = "0xECF1D4", Offset = "0xECF1D4", VA = "0xECF1D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0xECF2AC", Offset = "0xECF2AC", VA = "0xECF2AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7704", Offset = "0x8F7704")]
	private sealed class <DeleteArtwork>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, object> artworkData;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x1700047D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DDD")]
			[Address(RVA = "0xECBD00", Offset = "0xECBD00", VA = "0xECBD00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DDF")]
			[Address(RVA = "0xECBD70", Offset = "0xECBD70", VA = "0xECBD70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0xEC9ABC", Offset = "0xEC9ABC", VA = "0xEC9ABC")]
		[DebuggerHidden]
		public <DeleteArtwork>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0xECB6E0", Offset = "0xECB6E0", VA = "0xECB6E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0xECB7BC", Offset = "0xECB7BC", VA = "0xECB7BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0xECB6FC", Offset = "0xECB6FC", VA = "0xECB6FC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0xECBD08", Offset = "0xECBD08", VA = "0xECBD08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7714", Offset = "0x8F7714")]
	private sealed class <UpdateArtwork>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, object> artworkData;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x1700047F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0xED0AA0", Offset = "0xED0AA0", VA = "0xED0AA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DE6")]
			[Address(RVA = "0xED0B10", Offset = "0xED0B10", VA = "0xED0B10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0xEC9B5C", Offset = "0xEC9B5C", VA = "0xEC9B5C")]
		[DebuggerHidden]
		public <UpdateArtwork>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0xED04F4", Offset = "0xED04F4", VA = "0xED04F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0xED05D0", Offset = "0xED05D0", VA = "0xED05D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0xED0510", Offset = "0xED0510", VA = "0xED0510")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002DE5")]
		[Address(RVA = "0xED0AA8", Offset = "0xED0AA8", VA = "0xED0AA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7724", Offset = "0x8F7724")]
	private sealed class <GetSingle>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string collecion;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, object> filter;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KingsprayMongoDB <>4__this;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x17000481")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DEB")]
			[Address(RVA = "0xECE408", Offset = "0xECE408", VA = "0xECE408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000482")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DED")]
			[Address(RVA = "0xECE478", Offset = "0xECE478", VA = "0xECE478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0xEC9C38", Offset = "0xEC9C38", VA = "0xEC9C38")]
		[DebuggerHidden]
		public <GetSingle>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0xECDFE0", Offset = "0xECDFE0", VA = "0xECDFE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0xECE0CC", Offset = "0xECE0CC", VA = "0xECE0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0xECE00C", Offset = "0xECE00C", VA = "0xECE00C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0xECE410", Offset = "0xECE410", VA = "0xECE410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7734", Offset = "0x8F7734")]
	private sealed class <ReplaceAsync>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string db;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string collection;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, object> filter;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, object> data;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <www>5__2;

		[Token(Token = "0x17000483")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0xECF808", Offset = "0xECF808", VA = "0xECF808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DF4")]
			[Address(RVA = "0xECF878", Offset = "0xECF878", VA = "0xECF878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0xEC9D30", Offset = "0xEC9D30", VA = "0xEC9D30")]
		[DebuggerHidden]
		public <ReplaceAsync>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0xECF440", Offset = "0xECF440", VA = "0xECF440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0xECF51C", Offset = "0xECF51C", VA = "0xECF51C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0xECF45C", Offset = "0xECF45C", VA = "0xECF45C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0xECF810", Offset = "0xECF810", VA = "0xECF810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7744", Offset = "0x8F7744")]
	private sealed class <SetAsync>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string db;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string collection;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, object> data;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x17000485")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0xECFC18", Offset = "0xECFC18", VA = "0xECFC18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0xECFC88", Offset = "0xECFC88", VA = "0xECFC88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0xECA0A0", Offset = "0xECA0A0", VA = "0xECA0A0")]
		[DebuggerHidden]
		public <SetAsync>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002DF6")]
		[Address(RVA = "0xECF880", Offset = "0xECF880", VA = "0xECF880", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0xECF95C", Offset = "0xECF95C", VA = "0xECF95C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0xECF89C", Offset = "0xECF89C", VA = "0xECF89C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0xECFC20", Offset = "0xECFC20", VA = "0xECFC20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7754", Offset = "0x8F7754")]
	private sealed class <GetAsync>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string dbname;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string collectionname;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int limit;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, object> filter;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public KingsprayMongoDB <>4__this;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WWW <www>5__2;

		[Token(Token = "0x17000487")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E00")]
			[Address(RVA = "0xECDF68", Offset = "0xECDF68", VA = "0xECDF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E02")]
			[Address(RVA = "0xECDFD8", Offset = "0xECDFD8", VA = "0xECDFD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0xECA1AC", Offset = "0xECA1AC", VA = "0xECA1AC")]
		[DebuggerHidden]
		public <GetAsync>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0xECDA6C", Offset = "0xECDA6C", VA = "0xECDA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0xECDB58", Offset = "0xECDB58", VA = "0xECDB58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0xECDA98", Offset = "0xECDA98", VA = "0xECDA98")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E01")]
		[Address(RVA = "0xECDF70", Offset = "0xECDF70", VA = "0xECDF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7764", Offset = "0x8F7764")]
	private sealed class <DeleteAsync>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string db;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string collection;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, object> filter;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x17000489")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E07")]
			[Address(RVA = "0xECC110", Offset = "0xECC110", VA = "0xECC110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E09")]
			[Address(RVA = "0xECC180", Offset = "0xECC180", VA = "0xECC180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E03")]
		[Address(RVA = "0xECA470", Offset = "0xECA470", VA = "0xECA470")]
		[DebuggerHidden]
		public <DeleteAsync>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0xECBD78", Offset = "0xECBD78", VA = "0xECBD78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0xECBE54", Offset = "0xECBE54", VA = "0xECBE54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0xECBD94", Offset = "0xECBD94", VA = "0xECBD94")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0xECC118", Offset = "0xECC118", VA = "0xECC118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7774", Offset = "0x8F7774")]
	private sealed class <GetArtworkEntries>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int skip;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int limit;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KingsprayMongoDB <>4__this;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x1700048B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E0E")]
			[Address(RVA = "0xECD9F4", Offset = "0xECD9F4", VA = "0xECD9F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E10")]
			[Address(RVA = "0xECDA64", Offset = "0xECDA64", VA = "0xECDA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0xECA54C", Offset = "0xECA54C", VA = "0xECA54C")]
		[DebuggerHidden]
		public <GetArtworkEntries>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0xECCC70", Offset = "0xECCC70", VA = "0xECCC70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0xECCD4C", Offset = "0xECCD4C", VA = "0xECCD4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0xECCC8C", Offset = "0xECCC8C", VA = "0xECCC8C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0xECD9FC", Offset = "0xECD9FC", VA = "0xECD9FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7784", Offset = "0x8F7784")]
	private sealed class <CreateArtworkEntry>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string username;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string level;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string userid;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string timestamp;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <www>5__2;

		[Token(Token = "0x1700048D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E15")]
			[Address(RVA = "0xECB668", Offset = "0xECB668", VA = "0xECB668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E17")]
			[Address(RVA = "0xECB6D8", Offset = "0xECB6D8", VA = "0xECB6D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0xECA644", Offset = "0xECA644", VA = "0xECA644")]
		[DebuggerHidden]
		public <CreateArtworkEntry>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0xECAFF0", Offset = "0xECAFF0", VA = "0xECAFF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0xECB0CC", Offset = "0xECB0CC", VA = "0xECB0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0xECB00C", Offset = "0xECB00C", VA = "0xECB00C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0xECB670", Offset = "0xECB670", VA = "0xECB670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7794", Offset = "0x8F7794")]
	private sealed class <Upload>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filename;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string bucket;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string objectName;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700048F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0xED0ED0", Offset = "0xED0ED0", VA = "0xED0ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0xED0F40", Offset = "0xED0F40", VA = "0xED0F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0xECA720", Offset = "0xECA720", VA = "0xECA720")]
		[DebuggerHidden]
		public <Upload>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0xED0B18", Offset = "0xED0B18", VA = "0xED0B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0xED0BF4", Offset = "0xED0BF4", VA = "0xED0BF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0xED0B34", Offset = "0xED0B34", VA = "0xED0B34")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0xED0ED8", Offset = "0xED0ED8", VA = "0xED0ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F77A4", Offset = "0x8F77A4")]
	private sealed class <DownloadFile>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isTexture;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string filename;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x17000491")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E23")]
			[Address(RVA = "0xECC554", Offset = "0xECC554", VA = "0xECC554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E25")]
			[Address(RVA = "0xECC5C4", Offset = "0xECC5C4", VA = "0xECC5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0xECAADC", Offset = "0xECAADC", VA = "0xECAADC")]
		[DebuggerHidden]
		public <DownloadFile>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0xECC188", Offset = "0xECC188", VA = "0xECC188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0xECC264", Offset = "0xECC264", VA = "0xECC264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0xECC1A4", Offset = "0xECC1A4", VA = "0xECC1A4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0xECC55C", Offset = "0xECC55C", VA = "0xECC55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F77B4", Offset = "0x8F77B4")]
	private sealed class <DownloadPlayArtworkAsync>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommunityArtwork.Artwork artwork;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KingsprayMongoDB <>4__this;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <saveRootPath>5__2;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <awsPath>5__3;

		[Token(Token = "0x17000493")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E29")]
			[Address(RVA = "0xECCBF8", Offset = "0xECCBF8", VA = "0xECCBF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0xECCC68", Offset = "0xECCC68", VA = "0xECCC68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E26")]
		[Address(RVA = "0xECABCC", Offset = "0xECABCC", VA = "0xECABCC")]
		[DebuggerHidden]
		public <DownloadPlayArtworkAsync>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0xECC5CC", Offset = "0xECC5CC", VA = "0xECC5CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0xECC5D0", Offset = "0xECC5D0", VA = "0xECC5D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0xECCC00", Offset = "0xECCC00", VA = "0xECCC00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F77C4", Offset = "0x8F77C4")]
	private sealed class <ShareAsync>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string username;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string level;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string timestamp;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string filepath;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public KingsprayMongoDB <>4__this;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string userID;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <rootPath>5__2;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string <paintMaskFile>5__3;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string <paintThumbnailFile>5__4;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string <replaydata>5__5;

		[Token(Token = "0x17000495")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0xED047C", Offset = "0xED047C", VA = "0xED047C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xED04EC", Offset = "0xED04EC", VA = "0xED04EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0xECACF8", Offset = "0xECACF8", VA = "0xECACF8")]
		[DebuggerHidden]
		public <ShareAsync>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0xECFC90", Offset = "0xECFC90", VA = "0xECFC90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0xECFC94", Offset = "0xECFC94", VA = "0xECFC94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0xED0484", Offset = "0xED0484", VA = "0xED0484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KingsprayMongoDB _instance;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string CollectionPlatform;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string AWSUrl;

	[Token(Token = "0x1700004B")]
	public static KingsprayMongoDB Instance
	{
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xEC88F0", Offset = "0xEC88F0", VA = "0xEC88F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000023")]
	public static event GetRecordsRetrieved OnGetRecordsRetrieved
	{
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xEC9104", Offset = "0xEC9104", VA = "0xEC9104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909464", Offset = "0x909464")]
		add
		{
		}
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xEC9234", Offset = "0xEC9234", VA = "0xEC9234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909474", Offset = "0x909474")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event GetArtworkEntriesComplete OnGetArtworkEntriesComplete
	{
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xEC9364", Offset = "0xEC9364", VA = "0xEC9364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909484", Offset = "0x909484")]
		add
		{
		}
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xEC9494", Offset = "0xEC9494", VA = "0xEC9494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909494", Offset = "0x909494")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event GetArtworkSingleComplete OnGetArtworkSingleComplete
	{
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xEC95C4", Offset = "0xEC95C4", VA = "0xEC95C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9094A4", Offset = "0x9094A4")]
		add
		{
		}
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xEC96F4", Offset = "0xEC96F4", VA = "0xEC96F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9094B4", Offset = "0x9094B4")]
		remove
		{
		}
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xEC8A10", Offset = "0xEC8A10", VA = "0xEC8A10")]
	private bool IsArtworkAlreadyPosted(string username, string level, string timestamp)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xEC8A18", Offset = "0xEC8A18", VA = "0xEC8A18")]
	public List<Dictionary<string, object>> StringToListDict(string text, string desc)
	{
		return null;
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xEC8F64", Offset = "0xEC8F64", VA = "0xEC8F64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xEC9824", Offset = "0xEC9824", VA = "0xEC9824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9094C4", Offset = "0x9094C4")]
	public IEnumerator GetSingleArtwork(string username, string level, string timestamp)
	{
		return null;
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xEC991C", Offset = "0xEC991C", VA = "0xEC991C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909528", Offset = "0x909528")]
	public IEnumerator MultiplayerRoomRequest(string uniqueID, string roomName)
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xEC99A8", Offset = "0xEC99A8", VA = "0xEC99A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90958C", Offset = "0x90958C")]
	public IEnumerator MultiplayerRoomAccess(string uniqueID, string roomName, [Optional] Func<bool, bool> callback)
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xEC9A48", Offset = "0xEC9A48", VA = "0xEC9A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9095F0", Offset = "0x9095F0")]
	public IEnumerator DeleteArtwork(Dictionary<string, object> artworkData)
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xEC9AE8", Offset = "0xEC9AE8", VA = "0xEC9AE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909654", Offset = "0x909654")]
	public IEnumerator UpdateArtwork(Dictionary<string, object> artworkData)
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xEC9B88", Offset = "0xEC9B88", VA = "0xEC9B88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9096B8", Offset = "0x9096B8")]
	public IEnumerator GetSingle(string collecion, Dictionary<string, object> filter)
	{
		return null;
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xEC9C64", Offset = "0xEC9C64", VA = "0xEC9C64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90971C", Offset = "0x90971C")]
	public IEnumerator ReplaceAsync(string db, string collection, Dictionary<string, object> filter, Dictionary<string, object> data)
	{
		return null;
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xEC9D5C", Offset = "0xEC9D5C", VA = "0xEC9D5C")]
	public void Set(string db, string collection, Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xEC9FF4", Offset = "0xEC9FF4", VA = "0xEC9FF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909780", Offset = "0x909780")]
	public IEnumerator SetAsync(string db, string collection, Dictionary<string, object> data)
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xECA0CC", Offset = "0xECA0CC", VA = "0xECA0CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9097E4", Offset = "0x9097E4")]
	public IEnumerator GetAsync(string dbname, string collectionname, [Optional] Dictionary<string, object> filter, int skip = 0, int limit = 100)
	{
		return null;
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xECA1D8", Offset = "0xECA1D8", VA = "0xECA1D8")]
	public void Delete(string db, string collection, Dictionary<string, object> filter)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xEC9058", Offset = "0xEC9058", VA = "0xEC9058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909848", Offset = "0x909848")]
	public IEnumerator DeleteAsync(string db, string collection, Dictionary<string, object> filter)
	{
		return null;
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xECA49C", Offset = "0xECA49C", VA = "0xECA49C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9098AC", Offset = "0x9098AC")]
	public IEnumerator GetArtworkEntries(int skip = 0, int limit = 10)
	{
		return null;
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xECA578", Offset = "0xECA578", VA = "0xECA578")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909910", Offset = "0x909910")]
	public IEnumerator CreateArtworkEntry(string username, string userid, string level, string timestamp)
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xECA670", Offset = "0xECA670", VA = "0xECA670")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909974", Offset = "0x909974")]
	public IEnumerator Upload(string filename, string objectName, string bucket)
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xECA74C", Offset = "0xECA74C", VA = "0xECA74C")]
	public string GetRootUrl(CommunityArtwork.Artwork artwork)
	{
		return null;
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xECAA28", Offset = "0xECAA28", VA = "0xECAA28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9099D8", Offset = "0x9099D8")]
	public IEnumerator DownloadFile(string url, string filename, bool isTexture = true)
	{
		return null;
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xECAB08", Offset = "0xECAB08", VA = "0xECAB08")]
	public void DownloadPlayArtwork(CommunityArtwork.Artwork artwork)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xECAB34", Offset = "0xECAB34", VA = "0xECAB34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909A3C", Offset = "0x909A3C")]
	private IEnumerator DownloadPlayArtworkAsync(CommunityArtwork.Artwork artwork)
	{
		return null;
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xECABF8", Offset = "0xECABF8", VA = "0xECABF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909AA0", Offset = "0x909AA0")]
	private IEnumerator ShareAsync(string filepath, string username, string userID, string level, string timestamp)
	{
		return null;
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xECAD24", Offset = "0xECAD24", VA = "0xECAD24")]
	public void Share(string path)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xECAF30", Offset = "0xECAF30", VA = "0xECAF30")]
	private void GetSingleUserCallback(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xECAF34", Offset = "0xECAF34", VA = "0xECAF34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xECAF38", Offset = "0xECAF38", VA = "0xECAF38")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xECAF3C", Offset = "0xECAF3C", VA = "0xECAF3C")]
	public KingsprayMongoDB()
	{
	}
}
[Token(Token = "0x20000C2")]
public class MigrateWordpressPosts : MonoBehaviour
{
	[Token(Token = "0x20005FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F77D4", Offset = "0x8F77D4")]
	private sealed class <GetArtwork>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int offset;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MigrateWordpressPosts <>4__this;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <w>5__2;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Dictionary<string, object>>.Enumerator <>7__wrap2;

		[Token(Token = "0x17000497")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E36")]
			[Address(RVA = "0xC0735C", Offset = "0xC0735C", VA = "0xC0735C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E38")]
			[Address(RVA = "0xC073CC", Offset = "0xC073CC", VA = "0xC073CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0xC06834", Offset = "0xC06834", VA = "0xC06834")]
		[DebuggerHidden]
		public <GetArtwork>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0xC06970", Offset = "0xC06970", VA = "0xC06970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0xC069E4", Offset = "0xC069E4", VA = "0xC069E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0xC0698C", Offset = "0xC0698C", VA = "0xC0698C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0xC07364", Offset = "0xC07364", VA = "0xC07364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F77E4", Offset = "0x8F77E4")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MigrateWordpressPosts <>4__this;

		[Token(Token = "0x17000499")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E3C")]
			[Address(RVA = "0xC074E4", Offset = "0xC074E4", VA = "0xC074E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0xC07554", Offset = "0xC07554", VA = "0xC07554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0xC068D4", Offset = "0xC068D4", VA = "0xC068D4")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0xC073D4", Offset = "0xC073D4", VA = "0xC073D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0xC073D8", Offset = "0xC073D8", VA = "0xC073D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0xC074EC", Offset = "0xC074EC", VA = "0xC074EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Dictionary<string, object>> artworkItems;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xC0679C", Offset = "0xC0679C", VA = "0xC0679C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909B04", Offset = "0x909B04")]
	public IEnumerator GetArtwork(int offset = 0)
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xC06860", Offset = "0xC06860", VA = "0xC06860")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909B68", Offset = "0x909B68")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xC06900", Offset = "0xC06900", VA = "0xC06900")]
	public MigrateWordpressPosts()
	{
	}
}
[Token(Token = "0x20000C3")]
public class Flyover : MonoBehaviour
{
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F77F4", Offset = "0x8F77F4")]
	private sealed class <DelayStart>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Flyover <>4__this;

		[Token(Token = "0x1700049B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E42")]
			[Address(RVA = "0x1006D00", Offset = "0x1006D00", VA = "0x1006D00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E44")]
			[Address(RVA = "0x1006D70", Offset = "0x1006D70", VA = "0x1006D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E3F")]
		[Address(RVA = "0x1006A0C", Offset = "0x1006A0C", VA = "0x1006A0C")]
		[DebuggerHidden]
		public <DelayStart>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002E40")]
		[Address(RVA = "0x1006C44", Offset = "0x1006C44", VA = "0x1006C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E41")]
		[Address(RVA = "0x1006C48", Offset = "0x1006C48", VA = "0x1006C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x1006D08", Offset = "0x1006D08", VA = "0x1006D08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Object;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Radius;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isMoving;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float DistanceReached;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 DelayRange;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrailRenderer TrailRenderer;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1006630", Offset = "0x1006630", VA = "0x1006630")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1006724", Offset = "0x1006724", VA = "0x1006724")]
	private void SetupAndPlay()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x100668C", Offset = "0x100668C", VA = "0x100668C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909BCC", Offset = "0x909BCC")]
	private IEnumerator DelayStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1006A38", Offset = "0x1006A38", VA = "0x1006A38")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1006BEC", Offset = "0x1006BEC", VA = "0x1006BEC")]
	public Flyover()
	{
	}
}
[Token(Token = "0x20000C4")]
public class KingsprayCloudUI : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text MessageText;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image CircleProgressSpinner;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xEC88E4", Offset = "0xEC88E4", VA = "0xEC88E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xEC88E8", Offset = "0xEC88E8", VA = "0xEC88E8")]
	public KingsprayCloudUI()
	{
	}
}
[Token(Token = "0x20000C5")]
public class DebugAutoPainter : MonoBehaviour
{
	[Token(Token = "0x20005FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7804", Offset = "0x8F7804")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugAutoPainter <>4__this;

		[Token(Token = "0x1700049D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E48")]
			[Address(RVA = "0xEEDA3C", Offset = "0xEEDA3C", VA = "0xEEDA3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0xEEDAAC", Offset = "0xEEDAAC", VA = "0xEEDAAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0xEED418", Offset = "0xEED418", VA = "0xEED418")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002E46")]
		[Address(RVA = "0xEED984", Offset = "0xEED984", VA = "0xEED984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0xEED988", Offset = "0xEED988", VA = "0xEED988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0xEEDA44", Offset = "0xEEDA44", VA = "0xEEDA44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hitTarget;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoChangeColor;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoChangeCap;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int capIndex;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color color;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isEnabled;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask PaintLayerMask;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xEED3A4", Offset = "0xEED3A4", VA = "0xEED3A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909C30", Offset = "0x909C30")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xEED444", Offset = "0xEED444", VA = "0xEED444")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xEED948", Offset = "0xEED948", VA = "0xEED948")]
	public DebugAutoPainter()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CanMover : MonoBehaviour
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotScale;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float moveScale;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 newRots;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 newMoves;

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xB455AC", Offset = "0xB455AC", VA = "0xB455AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xB45634", Offset = "0xB45634", VA = "0xB45634")]
	private void Update()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB45638", Offset = "0xB45638", VA = "0xB45638")]
	public CanMover()
	{
	}
}
[Token(Token = "0x20000C7")]
public class CaptureChaser : MonoBehaviour
{
	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7814", Offset = "0x8F7814")]
	private sealed class <Calibration>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CaptureChaser <>4__this;

		[Token(Token = "0x1700049F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0xB47C44", Offset = "0xB47C44", VA = "0xB47C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E50")]
			[Address(RVA = "0xB47CB4", Offset = "0xB47CB4", VA = "0xB47CB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E4B")]
		[Address(RVA = "0xB47838", Offset = "0xB47838", VA = "0xB47838")]
		[DebuggerHidden]
		public <Calibration>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002E4C")]
		[Address(RVA = "0xB47AC0", Offset = "0xB47AC0", VA = "0xB47AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E4D")]
		[Address(RVA = "0xB47AC4", Offset = "0xB47AC4", VA = "0xB47AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0xB47C4C", Offset = "0xB47C4C", VA = "0xB47C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7824", Offset = "0x8F7824")]
	private sealed class <ApplyPaint>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CaptureChaser <>4__this;

		[Token(Token = "0x170004A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xB47A48", Offset = "0xB47A48", VA = "0xB47A48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E56")]
			[Address(RVA = "0xB47AB8", Offset = "0xB47AB8", VA = "0xB47AB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0xB47864", Offset = "0xB47864", VA = "0xB47864")]
		[DebuggerHidden]
		public <ApplyPaint>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0xB47898", Offset = "0xB47898", VA = "0xB47898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E53")]
		[Address(RVA = "0xB4789C", Offset = "0xB4789C", VA = "0xB4789C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0xB47A50", Offset = "0xB47A50", VA = "0xB47A50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TargetObject;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Can;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture SourceTexture;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture DestinationTexture;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture DestinationTexture2;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture IntermediateTexture;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material blitMaterial;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material dryMaterial;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material finalMaterial;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material calibrationMaterial;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture baseTexture;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture[] brushTextures;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int currentBrushIndex;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color[] paintColors;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int currentPaintColor;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool isMetallic;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture depthTexture;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isSpraying;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material unwrapMaterial;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera unwrapCamera;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool calibrated;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB46318", Offset = "0xB46318", VA = "0xB46318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xB472C0", Offset = "0xB472C0", VA = "0xB472C0")]
	private void M_colorUIPicker_ColorChanged(Color color)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xB4737C", Offset = "0xB4737C", VA = "0xB4737C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xB468D8", Offset = "0xB468D8", VA = "0xB468D8")]
	private void setBrush()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xB47158", Offset = "0xB47158", VA = "0xB47158")]
	private void setPaint()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xB47238", Offset = "0xB47238", VA = "0xB47238")]
	private void setMetalic()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xB467B0", Offset = "0xB467B0", VA = "0xB467B0")]
	private void clearPaint()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xB46980", Offset = "0xB46980", VA = "0xB46980")]
	private void SetCanPosition()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xB4770C", Offset = "0xB4770C", VA = "0xB4770C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xB477C4", Offset = "0xB477C4", VA = "0xB477C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909C94", Offset = "0x909C94")]
	private IEnumerator Calibration()
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xB47750", Offset = "0xB47750", VA = "0xB47750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909CF8", Offset = "0x909CF8")]
	private IEnumerator ApplyPaint()
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xB4767C", Offset = "0xB4767C", VA = "0xB4767C")]
	private void WatchPaintDry()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xB47568", Offset = "0xB47568", VA = "0xB47568")]
	private void switchColor(bool next = true)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xB475F8", Offset = "0xB475F8", VA = "0xB475F8")]
	private void switchBrush(bool next = true)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xB475EC", Offset = "0xB475EC", VA = "0xB475EC")]
	private void toggleMetallic(bool metallicOn = true)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xB47890", Offset = "0xB47890", VA = "0xB47890")]
	public CaptureChaser()
	{
	}
}
[Token(Token = "0x20000C8")]
public class DepthCameraCode : MonoBehaviour
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xEF9128", Offset = "0xEF9128", VA = "0xEF9128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xEF91AC", Offset = "0xEF91AC", VA = "0xEF91AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xEF91B0", Offset = "0xEF91B0", VA = "0xEF91B0")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xEF9234", Offset = "0xEF9234", VA = "0xEF9234")]
	public DepthCameraCode()
	{
	}
}
[Token(Token = "0x20000C9")]
public class Paintable : MonoBehaviour
{
	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7834", Offset = "0x8F7834")]
	private sealed class <InitializePaintSystem>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Paintable <>4__this;

		[Token(Token = "0x170004A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xA8CFE0", Offset = "0xA8CFE0", VA = "0xA8CFE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0xA8D050", Offset = "0xA8D050", VA = "0xA8D050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E57")]
		[Address(RVA = "0xA8B580", Offset = "0xA8B580", VA = "0xA8B580")]
		[DebuggerHidden]
		public <InitializePaintSystem>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002E58")]
		[Address(RVA = "0xA8CAAC", Offset = "0xA8CAAC", VA = "0xA8CAAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E59")]
		[Address(RVA = "0xA8CAB0", Offset = "0xA8CAB0", VA = "0xA8CAB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0xA8CFE8", Offset = "0xA8CFE8", VA = "0xA8CFE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000602")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7844", Offset = "0x8F7844")]
	private sealed class <Calibration>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Paintable <>4__this;

		[Token(Token = "0x170004A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E60")]
			[Address(RVA = "0xA8CA34", Offset = "0xA8CA34", VA = "0xA8CA34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E62")]
			[Address(RVA = "0xA8CAA4", Offset = "0xA8CAA4", VA = "0xA8CAA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0xA8BDF0", Offset = "0xA8BDF0", VA = "0xA8BDF0")]
		[DebuggerHidden]
		public <Calibration>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0xA8C844", Offset = "0xA8C844", VA = "0xA8C844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0xA8C848", Offset = "0xA8C848", VA = "0xA8C848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0xA8CA3C", Offset = "0xA8CA3C", VA = "0xA8CA3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000603")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7854", Offset = "0x8F7854")]
	private sealed class <ApplyPaint>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Paintable <>4__this;

		[Token(Token = "0x170004A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E66")]
			[Address(RVA = "0xA8C7CC", Offset = "0xA8C7CC", VA = "0xA8C7CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E68")]
			[Address(RVA = "0xA8C83C", Offset = "0xA8C83C", VA = "0xA8C83C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0xA8BE1C", Offset = "0xA8BE1C", VA = "0xA8BE1C")]
		[DebuggerHidden]
		public <ApplyPaint>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0xA8BEE8", Offset = "0xA8BEE8", VA = "0xA8BEE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0xA8BEEC", Offset = "0xA8BEEC", VA = "0xA8BEEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0xA8C7D4", Offset = "0xA8C7D4", VA = "0xA8C7D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int PostProcessingLayerIndex;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PaintableLayerIndex;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader UnwrapperShader;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader FinalShader;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int TextureWidth;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int TextureHeight;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture BaseWallTexture;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture BaseMaskTexture;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material CalibrationMaterial;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material PaintCompositerMaterial;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material PaintDryMaterial;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject debugTexture1;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject debugTexture2;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject debugTexture3;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject UnwrappedTarget;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isOriginal;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material UnwrapperMaterialInstance;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material FinalMaterialInstance;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Camera CaptureCamera;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RenderTexture FlatCaptureTexture;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Paintable unwrappedPaintable;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private RenderTexture IntermediateTexture;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Paintable theOtherGuy;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Painter> Painters;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public RenderTexture WallTexture;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public RenderTexture MaskTexture;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float PaintDryCounter;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float PaintDryRate;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float PaintDryFloor;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int paintSkipCounter;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int paintSkip;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int textureState;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool calibrated;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xA8A170", Offset = "0xA8A170", VA = "0xA8A170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xA8AB6C", Offset = "0xA8AB6C", VA = "0xA8AB6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xA8AC4C", Offset = "0xA8AC4C", VA = "0xA8AC4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xA8AE7C", Offset = "0xA8AE7C", VA = "0xA8AE7C")]
	private void WatchPaintDry()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xA8B2E8", Offset = "0xA8B2E8", VA = "0xA8B2E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xA8B434", Offset = "0xA8B434", VA = "0xA8B434")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xA8A95C", Offset = "0xA8A95C", VA = "0xA8A95C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909D5C", Offset = "0x909D5C")]
	private IEnumerator InitializePaintSystem()
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xA8B5AC", Offset = "0xA8B5AC", VA = "0xA8B5AC")]
	private void clearPaint()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xA8AE34", Offset = "0xA8AE34", VA = "0xA8AE34")]
	public void ProcessPaint(Painter painter)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xA8B6D4", Offset = "0xA8B6D4", VA = "0xA8B6D4")]
	private void SetCanProperties(Painter painter)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xA8A9D0", Offset = "0xA8A9D0", VA = "0xA8A9D0")]
	public void SetTargetProperties()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xA8BCC4", Offset = "0xA8BCC4", VA = "0xA8BCC4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xA8BD7C", Offset = "0xA8BD7C", VA = "0xA8BD7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909DC0", Offset = "0x909DC0")]
	private IEnumerator Calibration()
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xA8BD08", Offset = "0xA8BD08", VA = "0xA8BD08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909E24", Offset = "0x909E24")]
	private IEnumerator ApplyPaint()
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xA8BE48", Offset = "0xA8BE48", VA = "0xA8BE48")]
	public Paintable()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Painter : MonoBehaviour
{
	[Token(Token = "0x2000604")]
	[HideInInspector]
	public enum PaintTechMode
	{
		[Token(Token = "0x40020E3")]
		DualCam,
		[Token(Token = "0x40020E4")]
		SingleCam,
		[Token(Token = "0x40020E5")]
		NormalsOnly
	}

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isPainting;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture CurrentBrush;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float CurrentSprayAngle;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color CurrentColor;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float CurrentMetallic;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SprayOrigin;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MaxSprayDistance;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int PostProcessLayerIndex;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int PaintableLayerIndex;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int IgnorePaintLayerIndex;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int DepthTextureWidth;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int DepthTextureHeight;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 DepthCameraRotation;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material TargetCameraMaterial;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material StencilCameraMaterial;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader DepthCameraShader;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float RotationSpeed;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject targetDepthCameraHolder;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject stencilDepthCameraHolder;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera targetDepthCamera;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Camera stencilDepthCamera;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public RenderTexture targetDepthTexture;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public RenderTexture stencilDepthTexture;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float shaderPaintAngle;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public float shaderHalfAngle;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string DebugTextureName;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PaintTechMode paintTechMode;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BoxCollider paintCollider;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public Vector3 CanUp;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public Vector3 CanFor;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public Vector3 CanRight;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public Vector3 CanPos;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public Vector3 LastCanUp;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[HideInInspector]
	public Vector3 LastCanFor;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Vector3 LastCanRight;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[HideInInspector]
	public Vector3 LastCanPos;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public int NumberOfFillers;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float FillerOverlapPercent;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xA8E3F8", Offset = "0xA8E3F8", VA = "0xA8E3F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xA8F4B0", Offset = "0xA8F4B0", VA = "0xA8F4B0")]
	private void Instance_ColorChanged(Color color)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xA8F4BC", Offset = "0xA8F4BC", VA = "0xA8F4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xA8F188", Offset = "0xA8F188", VA = "0xA8F188")]
	private void SetShaderPaintAngle()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xA8F938", Offset = "0xA8F938", VA = "0xA8F938")]
	public Painter()
	{
	}
}
[Token(Token = "0x20000CB")]
public class KS_ControllerAnimationEvents : MonoBehaviour
{
	[Token(Token = "0x600072B")]
	[Address(RVA = "0xEC8624", Offset = "0xEC8624", VA = "0xEC8624")]
	public void Button1Pressed()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xEC8628", Offset = "0xEC8628", VA = "0xEC8628")]
	public void Button1Released()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xEC862C", Offset = "0xEC862C", VA = "0xEC862C")]
	public void Button2Pressed()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xEC8630", Offset = "0xEC8630", VA = "0xEC8630")]
	public void Button2Released()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xEC8634", Offset = "0xEC8634", VA = "0xEC8634")]
	public KS_ControllerAnimationEvents()
	{
	}
}
[Token(Token = "0x20000CC")]
public class SecurityCam : MonoBehaviour
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform securityCamPitch;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform securityCamSwivel;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform playerTransform;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject TempGameObject;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform TempTransform;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xB63C4C", Offset = "0xB63C4C", VA = "0xB63C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xB63C50", Offset = "0xB63C50", VA = "0xB63C50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xB63EC4", Offset = "0xB63EC4", VA = "0xB63EC4")]
	public void CalculateRotation()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xB64130", Offset = "0xB64130", VA = "0xB64130")]
	public SecurityCam()
	{
	}
}
[Token(Token = "0x20000CD")]
public class EditorRoom : MonoBehaviour
{
	[Token(Token = "0x2000605")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7874", Offset = "0x8F7874")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorRoom <>4__this;

		[Token(Token = "0x170004A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0xCC2288", Offset = "0xCC2288", VA = "0xCC2288", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0xCC22F8", Offset = "0xCC22F8", VA = "0xCC22F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E69")]
		[Address(RVA = "0xCBFEDC", Offset = "0xCBFEDC", VA = "0xCBFEDC")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002E6A")]
		[Address(RVA = "0xCC1F48", Offset = "0xCC1F48", VA = "0xCC1F48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0xCC1F4C", Offset = "0xCC1F4C", VA = "0xCC1F4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6D")]
		[Address(RVA = "0xCC2290", Offset = "0xCC2290", VA = "0xCC2290", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CameraPrefab;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera m_Camera;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text movespeedtext;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text rotspeedtext;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text fovspeedtext;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 TargetPositionWS;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float sliderSpeed;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private KSVR_Controller_Base m_PrimaryController;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private KSVR_Controller_Base m_SecondaryController;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform KeyframeHolder;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject KeyframePrefab;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool useUprightMode;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EditorRoom _instance;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool EditorControlsActive;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public KSVR_KeyframeAnim CameraAnim;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform PlayerPositionTrans;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool playerInRoom;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float MovementSpeed;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float RotationSpeed;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float minFov;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float maxFov;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float fov;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool useLookat;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 LookatOffset;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2 primary;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 secondary;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float primaryTrigger;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float secondaryTrigger;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float primary2Trigger;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float secondary2Trigger;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Slider TimeSlider;

	[Token(Token = "0x1700004C")]
	public static EditorRoom Instance
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0xCBFD18", Offset = "0xCBFD18", VA = "0xCBFD18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xCBFDE4", Offset = "0xCBFDE4", VA = "0xCBFDE4")]
	public void DraggingSlider()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xCBFE64", Offset = "0xCBFE64", VA = "0xCBFE64")]
	public void SliderDragFinished()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xCBFE68", Offset = "0xCBFE68", VA = "0xCBFE68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909E88", Offset = "0x909E88")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xCBFF08", Offset = "0xCBFF08", VA = "0xCBFF08")]
	private void Instance_OnUIDetectedStateChanged(bool active)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xCBFF18", Offset = "0xCBFF18", VA = "0xCBFF18")]
	public void AddKeyframe()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xCC0108", Offset = "0xCC0108", VA = "0xCC0108")]
	public void SetupKeyframes(AnimationCurve curve)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xCC0690", Offset = "0xCC0690", VA = "0xCC0690")]
	private void TimeSliderChanged()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xCC0694", Offset = "0xCC0694", VA = "0xCC0694")]
	public void NextFrame()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xCC0704", Offset = "0xCC0704", VA = "0xCC0704")]
	public void GotoRoom(Transform playerRoot)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xCC0894", Offset = "0xCC0894", VA = "0xCC0894")]
	public void LeaveRoom()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xCC0988", Offset = "0xCC0988", VA = "0xCC0988")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xCC1380", Offset = "0xCC1380", VA = "0xCC1380")]
	private void camUpdatePosition()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xCC1B50", Offset = "0xCC1B50", VA = "0xCC1B50")]
	private void camUpdateRotation()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xCC1C30", Offset = "0xCC1C30", VA = "0xCC1C30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xCC1ED0", Offset = "0xCC1ED0", VA = "0xCC1ED0")]
	public void UpdateSlider(float value)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xCC1F18", Offset = "0xCC1F18", VA = "0xCC1F18")]
	private void UpdateUprightMode()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xCC0D70", Offset = "0xCC0D70", VA = "0xCC0D70")]
	private void UpdateControlThresholds()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xCC1704", Offset = "0xCC1704", VA = "0xCC1704")]
	private void updateLookatDirection()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xCC1DE0", Offset = "0xCC1DE0", VA = "0xCC1DE0")]
	private void updateText()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xCC1F1C", Offset = "0xCC1F1C", VA = "0xCC1F1C")]
	public EditorRoom()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xCC1F44", Offset = "0xCC1F44", VA = "0xCC1F44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909EEC", Offset = "0x909EEC")]
	private void <Start>b__17_0(float <p0>)
	{
	}
}
[Token(Token = "0x20000CE")]
public class EyeLookLock : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7884", Offset = "0x8F7884")]
	private sealed class <>c
	{
		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__4_0;

		[Token(Token = "0x6002E70")]
		[Address(RVA = "0xCCA81C", Offset = "0xCCA81C", VA = "0xCCA81C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E71")]
		[Address(RVA = "0xCCA824", Offset = "0xCCA824", VA = "0xCCA824")]
		internal bool <Start>b__4_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000607")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7894", Offset = "0x8F7894")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EyeLookLock <>4__this;

		[Token(Token = "0x170004AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0xCCAAAC", Offset = "0xCCAAAC", VA = "0xCCAAAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E77")]
			[Address(RVA = "0xCCAB1C", Offset = "0xCCAB1C", VA = "0xCCAB1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0xCCA410", Offset = "0xCCA410", VA = "0xCCA410")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002E73")]
		[Address(RVA = "0xCCA8BC", Offset = "0xCCA8BC", VA = "0xCCA8BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0xCCA8C0", Offset = "0xCCA8C0", VA = "0xCCA8C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0xCCAAB4", Offset = "0xCCAAB4", VA = "0xCCAAB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform EyeTarget;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject TempGameObject;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform TempTransform;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform EyeTransform;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xCCA39C", Offset = "0xCCA39C", VA = "0xCCA39C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909EFC", Offset = "0x909EFC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xCCA43C", Offset = "0xCCA43C", VA = "0xCCA43C")]
	private void Update()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xCCA548", Offset = "0xCCA548", VA = "0xCCA548")]
	public void CalculateRotation()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xCCA7B0", Offset = "0xCCA7B0", VA = "0xCCA7B0")]
	public EyeLookLock()
	{
	}
}
[Token(Token = "0x20000CF")]
public class SmokeBreak : MonoBehaviour
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeLeft;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xB660C0", Offset = "0xB660C0", VA = "0xB660C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xB66120", Offset = "0xB66120", VA = "0xB66120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xB66204", Offset = "0xB66204", VA = "0xB66204")]
	public SmokeBreak()
	{
	}
}
[Token(Token = "0x20000D0")]
public class C_DogAgent_Barker : MonoBehaviour
{
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F78A4", Offset = "0x8F78A4")]
	private sealed class <waitAtLocation>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public C_DogAgent_Barker <>4__this;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x170004AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0xB436E4", Offset = "0xB436E4", VA = "0xB436E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0xB43754", Offset = "0xB43754", VA = "0xB43754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0xB43374", Offset = "0xB43374", VA = "0xB43374")]
		[DebuggerHidden]
		public <waitAtLocation>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0xB433B8", Offset = "0xB433B8", VA = "0xB433B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0xB433BC", Offset = "0xB433BC", VA = "0xB433BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0xB436EC", Offset = "0xB436EC", VA = "0xB436EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent dogAgent;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float wanderDistance;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool bark;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float barkChance;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] barkClips;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NavMeshPath newPath;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource dogBarkAudioSrc;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isWaiting;

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xB42F3C", Offset = "0xB42F3C", VA = "0xB42F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xB43224", Offset = "0xB43224", VA = "0xB43224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xB43038", Offset = "0xB43038", VA = "0xB43038")]
	private Vector3 newRandomDestination()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xB432DC", Offset = "0xB432DC", VA = "0xB432DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909F60", Offset = "0x909F60")]
	private IEnumerator waitAtLocation(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xB433A0", Offset = "0xB433A0", VA = "0xB433A0")]
	public C_DogAgent_Barker()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TestScript : MonoBehaviour
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8F8FC8", Offset = "0x8F8FC8")]
	public SoundFXRef testSound1;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundFXRef testSound2;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xE0CF08", Offset = "0xE0CF08", VA = "0xE0CF08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xE0CF0C", Offset = "0xE0CF0C", VA = "0xE0CF0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xE0D01C", Offset = "0xE0D01C", VA = "0xE0D01C")]
	public TestScript()
	{
	}
}
[Token(Token = "0x20000D2")]
public class AmbienceEmitter : MonoBehaviour
{
	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoundFXRef[] ambientSounds;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoActivate;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9014", Offset = "0x8F9014")]
	public bool autoRetrigger;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8F904C", Offset = "0x8F904C")]
	public Vector2 randomRetriggerDelaySecs;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9070", Offset = "0x8F9070")]
	public Transform[] playPositions;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool activated;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int playingIdx;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float nextPlayTime;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadeTime;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lastPosIdx;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xF28C2C", Offset = "0xF28C2C", VA = "0xF28C2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xF28DA8", Offset = "0xF28DA8", VA = "0xF28DA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xF29030", Offset = "0xF29030", VA = "0xF29030")]
	public void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xF28E08", Offset = "0xF28E08", VA = "0xF28E08")]
	public void Play()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xF29114", Offset = "0xF29114", VA = "0xF29114")]
	public void EnableEmitter(bool enable)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xF292AC", Offset = "0xF292AC", VA = "0xF292AC")]
	public AmbienceEmitter()
	{
	}
}
[Token(Token = "0x20000D3")]
public enum PreloadSounds
{
	[Token(Token = "0x400068A")]
	Default,
	[Token(Token = "0x400068B")]
	Preload,
	[Token(Token = "0x400068C")]
	ManualPreload
}
[Token(Token = "0x20000D4")]
public enum Fade
{
	[Token(Token = "0x400068E")]
	In,
	[Token(Token = "0x400068F")]
	Out
}
[Serializable]
[Token(Token = "0x20000D5")]
public class SoundGroup
{
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoundFX[] soundList;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup mixerGroup;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F90A8", Offset = "0x8F90A8")]
	public int maxPlayingSounds;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public PreloadSounds preloadAudio;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float volumeOverride;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int playingSoundCount;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xB6A4D8", Offset = "0xB6A4D8", VA = "0xB6A4D8")]
	public SoundGroup(string name)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xB6A56C", Offset = "0xB6A56C", VA = "0xB6A56C")]
	public SoundGroup()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xB67D5C", Offset = "0xB67D5C", VA = "0xB67D5C")]
	public void IncrementPlayCount()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xB680B4", Offset = "0xB680B4", VA = "0xB680B4")]
	public void DecrementPlayCount()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xB699DC", Offset = "0xB699DC", VA = "0xB699DC")]
	public bool CanPlaySound()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D6")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x2000609")]
	public enum Fade
	{
		[Token(Token = "0x40020F3")]
		In,
		[Token(Token = "0x40020F4")]
		Out
	}

	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F78B4", Offset = "0x8F78B4")]
	private sealed class <>c__DisplayClass75_0
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundPriority priority;

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0xF42A70", Offset = "0xF42A70", VA = "0xF42A70")]
		public <>c__DisplayClass75_0()
		{
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0xF451B0", Offset = "0xF451B0", VA = "0xF451B0")]
		internal bool <FindFreeEmitter>b__0(SoundEmitter item)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200060B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F78C4", Offset = "0x8F78C4")]
	private sealed class <>c
	{
		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<SoundEmitter> <>9__75_1;

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0xF45114", Offset = "0xF45114", VA = "0xF45114")]
		public <>c()
		{
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0xF4511C", Offset = "0xF4511C", VA = "0xF4511C")]
		internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F90D4", Offset = "0x8F90D4")]
	public bool makePersistent;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F910C", Offset = "0x8F910C")]
	public bool enableSpatializedAudio;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9144", Offset = "0x8F9144")]
	public bool enableSpatializedFastOverride;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F917C", Offset = "0x8F917C")]
	public AudioMixer audioMixer;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F91B4", Offset = "0x8F91B4")]
	public AudioMixerGroup defaultMixerGroup;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F91EC", Offset = "0x8F91EC")]
	public AudioMixerGroup reservedMixerGroup;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9224", Offset = "0x8F9224")]
	public AudioMixerGroup voiceChatMixerGroup;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F925C", Offset = "0x8F925C")]
	public bool verboseLogging;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9294", Offset = "0x8F9294")]
	public int maxSoundEmitters;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F92CC", Offset = "0x8F92CC")]
	public float volumeSoundFX;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9304", Offset = "0x8F9304")]
	public float soundFxFadeSecs;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float audioMinFallOffDistance;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float audioMaxFallOffDistance;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SoundGroup[] soundGroupings;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, SoundFX> soundFXCache;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioManager theAudioManager;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static FastList<string> names;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] defaultSound;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SoundFX nullSound;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool hideWarnings;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float audioMaxFallOffDistanceSqr;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SoundEmitter[] soundEmitters;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FastList<SoundEmitter> playingEmitters;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FastList<SoundEmitter> nextFreeEmitters;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MixerSnapshot currentSnapshot;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static GameObject soundEmitterParent;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Transform staticListenerPosition;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool showPlayingEmitterCount;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private static bool forceShowEmitterCount;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private static bool soundEnabled;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AnimationCurve defaultReverbZoneMix;

	[Token(Token = "0x1700004D")]
	public static bool enableSpatialization
	{
		[Token(Token = "0x6000764")]
		[Address(RVA = "0xF3DFA8", Offset = "0xF3DFA8", VA = "0xF3DFA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004E")]
	public static AudioManager Instance
	{
		[Token(Token = "0x6000765")]
		[Address(RVA = "0xF3E08C", Offset = "0xF3E08C", VA = "0xF3E08C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004F")]
	public static float NearFallOff
	{
		[Token(Token = "0x6000766")]
		[Address(RVA = "0xF3E0F4", Offset = "0xF3E0F4", VA = "0xF3E0F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000050")]
	public static float FarFallOff
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0xF3E16C", Offset = "0xF3E16C", VA = "0xF3E16C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000051")]
	public static AudioMixerGroup EmitterGroup
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0xF3E1E4", Offset = "0xF3E1E4", VA = "0xF3E1E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public static AudioMixerGroup ReservedGroup
	{
		[Token(Token = "0x6000769")]
		[Address(RVA = "0xF3E25C", Offset = "0xF3E25C", VA = "0xF3E25C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public static AudioMixerGroup VoipGroup
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0xF3E2D4", Offset = "0xF3E2D4", VA = "0xF3E2D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public static bool SoundEnabled
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0xF407AC", Offset = "0xF407AC", VA = "0xF407AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xF3E34C", Offset = "0xF3E34C", VA = "0xF3E34C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xF3E584", Offset = "0xF3E584", VA = "0xF3E584")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xF3E350", Offset = "0xF3E350", VA = "0xF3E350")]
	private void Init()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xF3F750", Offset = "0xF3F750", VA = "0xF3F750")]
	private void Update()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xF3E6DC", Offset = "0xF3E6DC", VA = "0xF3E6DC")]
	private void RebuildSoundFXCache()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xF3D870", Offset = "0xF3D870", VA = "0xF3D870")]
	public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xF3FEE4", Offset = "0xF3FEE4", VA = "0xF3FEE4")]
	private static bool FindAudioManager()
	{
		return default(bool);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xF4009C", Offset = "0xF4009C", VA = "0xF4009C")]
	public static GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xF401A4", Offset = "0xF401A4", VA = "0xF401A4")]
	public static string NameMinusGroup(string name)
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xF40268", Offset = "0xF40268", VA = "0xF40268")]
	public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xF3EED4", Offset = "0xF3EED4", VA = "0xF3EED4")]
	private void InitializeSoundSystem()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xF3F754", Offset = "0xF3F754", VA = "0xF3F754")]
	private void UpdateFreeEmitters()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xF4092C", Offset = "0xF4092C", VA = "0xF4092C")]
	private string Fmt(int count)
	{
		return null;
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xF40A28", Offset = "0xF40A28", VA = "0xF40A28")]
	private string FmtFree(int count)
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xF40B28", Offset = "0xF40B28", VA = "0xF40B28")]
	private void OnPreSceneLoad()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xF40814", Offset = "0xF40814", VA = "0xF40814")]
	private void ResetFreeEmitters()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xF40CC0", Offset = "0xF40CC0", VA = "0xF40CC0")]
	public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xF40D9C", Offset = "0xF40D9C", VA = "0xF40D9C")]
	public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xF40F30", Offset = "0xF40F30", VA = "0xF40F30")]
	public static void FadeInSound(int idx, float fadeTime, float volume)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xF29040", Offset = "0xF29040", VA = "0xF29040")]
	public static void FadeInSound(int idx, float fadeTime)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xF291D8", Offset = "0xF291D8", VA = "0xF291D8")]
	public static void FadeOutSound(int idx, float fadeTime)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xF4100C", Offset = "0xF4100C", VA = "0xF4100C")]
	public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xF410F0", Offset = "0xF410F0", VA = "0xF410F0")]
	public void MuteAllSounds(bool mute, bool muteReserved = false)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xF411BC", Offset = "0xF411BC", VA = "0xF411BC")]
	public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xF412E8", Offset = "0xF412E8", VA = "0xF412E8")]
	public static float GetEmitterEndTime(int idx)
	{
		return default(float);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xF413A8", Offset = "0xF413A8", VA = "0xF413A8")]
	public static float SetEmitterTime(int idx, float time)
	{
		return default(float);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xF41484", Offset = "0xF41484", VA = "0xF41484")]
	public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xF42284", Offset = "0xF42284", VA = "0xF42284")]
	private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
	{
		return default(int);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xF42A78", Offset = "0xF42A78", VA = "0xF42A78")]
	public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
	{
		return default(int);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xF42C24", Offset = "0xF42C24", VA = "0xF42C24")]
	public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
	{
		return default(int);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xF43B84", Offset = "0xF43B84", VA = "0xF43B84")]
	public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
	{
		return default(int);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xF41658", Offset = "0xF41658", VA = "0xF41658")]
	public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
	{
		return default(int);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xF43CA8", Offset = "0xF43CA8", VA = "0xF43CA8")]
	public static void SetOnFinished(int emitterIdx, Action onFinished)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xF43DCC", Offset = "0xF43DCC", VA = "0xF43DCC")]
	public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xF43F04", Offset = "0xF43F04", VA = "0xF43F04")]
	public static void AttachSoundToParent(int idx, Transform parent)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xF442A0", Offset = "0xF442A0", VA = "0xF442A0")]
	public static void DetachSoundFromParent(int idx)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xF44410", Offset = "0xF44410", VA = "0xF44410")]
	public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xF44548", Offset = "0xF44548", VA = "0xF44548")]
	public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xF4468C", Offset = "0xF4468C", VA = "0xF4468C")]
	public static MixerSnapshot GetActiveSnapshot()
	{
		return null;
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xF44768", Offset = "0xF44768", VA = "0xF44768")]
	public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF448B8", Offset = "0xF448B8", VA = "0xF448B8")]
	public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xF44D74", Offset = "0xF44D74", VA = "0xF44D74")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x20000D7")]
public enum EmitterChannel
{
	[Token(Token = "0x40006B7")]
	None = -1,
	[Token(Token = "0x40006B8")]
	Reserved,
	[Token(Token = "0x40006B9")]
	Any
}
[Serializable]
[Token(Token = "0x20000D8")]
public class MixerSnapshot
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioMixerSnapshot snapshot;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float transitionTime;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xC0AF24", Offset = "0xC0AF24", VA = "0xC0AF24")]
	public MixerSnapshot()
	{
	}
}
[Token(Token = "0x20000D9")]
public class MinMaxAttribute : PropertyAttribute
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minDefaultVal;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxDefaultVal;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float min;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float max;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xC0755C", Offset = "0xC0755C", VA = "0xC0755C")]
	public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
	{
	}
}
[Token(Token = "0x20000DA")]
public class SoundEmitter : MonoBehaviour
{
	[Token(Token = "0x200060C")]
	public enum FadeState
	{
		[Token(Token = "0x40020F9")]
		Null,
		[Token(Token = "0x40020FA")]
		FadingIn,
		[Token(Token = "0x40020FB")]
		FadingOut,
		[Token(Token = "0x40020FC")]
		Ducking
	}

	[Token(Token = "0x200060D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F78D4", Offset = "0x8F78D4")]
	private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEmitter <>4__this;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundEmitter other;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeTime;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float toVolume;

		[Token(Token = "0x170004AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E86")]
			[Address(RVA = "0xB68B18", Offset = "0xB68B18", VA = "0xB68B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E88")]
			[Address(RVA = "0xB68B88", Offset = "0xB68B88", VA = "0xB68B88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0xB684F4", Offset = "0xB684F4", VA = "0xB684F4")]
		[DebuggerHidden]
		public <DelayedSyncTo>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0xB68A00", Offset = "0xB68A00", VA = "0xB68A00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0xB68A04", Offset = "0xB68A04", VA = "0xB68A04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0xB68B20", Offset = "0xB68B20", VA = "0xB68B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F78E4", Offset = "0x8F78E4")]
	private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEmitter <>4__this;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float toVolume;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeTime;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <start>5__2;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <end>5__3;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__4;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <elapsedTime>5__5;

		[Token(Token = "0x170004B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E8C")]
			[Address(RVA = "0xB69084", Offset = "0xB69084", VA = "0xB69084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0xB690F4", Offset = "0xB690F4", VA = "0xB690F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0xB68990", Offset = "0xB68990", VA = "0xB68990")]
		[DebuggerHidden]
		public <FadeSoundChannelTo>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0xB68EE0", Offset = "0xB68EE0", VA = "0xB68EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0xB68EE4", Offset = "0xB68EE4", VA = "0xB68EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0xB6908C", Offset = "0xB6908C", VA = "0xB6908C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F78F4", Offset = "0x8F78F4")]
	private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySecs;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Fade fadeType;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float defaultVolume;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SoundEmitter <>4__this;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeTime;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <start>5__2;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <end>5__3;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <restartPlay>5__4;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startTime>5__5;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <elapsedTime>5__6;

		[Token(Token = "0x170004B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E92")]
			[Address(RVA = "0xB68E68", Offset = "0xB68E68", VA = "0xB68E68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E94")]
			[Address(RVA = "0xB68ED8", Offset = "0xB68ED8", VA = "0xB68ED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0xB689BC", Offset = "0xB689BC", VA = "0xB689BC")]
		[DebuggerHidden]
		public <FadeSoundChannel>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0xB68B90", Offset = "0xB68B90", VA = "0xB68B90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0xB68B94", Offset = "0xB68B94", VA = "0xB68B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0xB68E70", Offset = "0xB68E70", VA = "0xB68E70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EmitterChannel channel;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool disableSpatialization;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FadeState state;

	[NonSerialized]
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AudioSource audioSource;

	[NonSerialized]
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public SoundPriority priority;

	[NonSerialized]
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public ONSPAudioSource osp;

	[NonSerialized]
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float endPlayTime;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform lastParentTransform;

	[NonSerialized]
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float defaultVolume;

	[NonSerialized]
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform defaultParent;

	[NonSerialized]
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int originalIdx;

	[NonSerialized]
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Action onFinished;

	[NonSerialized]
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Action<object> onFinishedObject;

	[NonSerialized]
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public object onFinishedParam;

	[NonSerialized]
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public SoundGroup playingSoundGroup;

	[Token(Token = "0x17000055")]
	public float volume
	{
		[Token(Token = "0x6000799")]
		[Address(RVA = "0xB677A4", Offset = "0xB677A4", VA = "0xB677A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600079A")]
		[Address(RVA = "0xB677D4", Offset = "0xB677D4", VA = "0xB677D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float pitch
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0xB67814", Offset = "0xB67814", VA = "0xB67814")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600079C")]
		[Address(RVA = "0xB67844", Offset = "0xB67844", VA = "0xB67844")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public AudioClip clip
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0xB67884", Offset = "0xB67884", VA = "0xB67884")]
		get
		{
			return null;
		}
		[Token(Token = "0x600079E")]
		[Address(RVA = "0xB678B4", Offset = "0xB678B4", VA = "0xB678B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float time
	{
		[Token(Token = "0x600079F")]
		[Address(RVA = "0xB678EC", Offset = "0xB678EC", VA = "0xB678EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xB6791C", Offset = "0xB6791C", VA = "0xB6791C")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float length
	{
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xB6795C", Offset = "0xB6795C", VA = "0xB6795C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005A")]
	public bool loop
	{
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xB67A34", Offset = "0xB67A34", VA = "0xB67A34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xB67A64", Offset = "0xB67A64", VA = "0xB67A64")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public bool mute
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xB67A9C", Offset = "0xB67A9C", VA = "0xB67A9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xB67ACC", Offset = "0xB67ACC", VA = "0xB67ACC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public AudioVelocityUpdateMode velocityUpdateMode
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xB67B04", Offset = "0xB67B04", VA = "0xB67B04")]
		get
		{
			return default(AudioVelocityUpdateMode);
		}
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xB67B34", Offset = "0xB67B34", VA = "0xB67B34")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public bool isPlaying
	{
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xB67B6C", Offset = "0xB67B6C", VA = "0xB67B6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xB67B9C", Offset = "0xB67B9C", VA = "0xB67B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xB67D48", Offset = "0xB67D48", VA = "0xB67D48")]
	public void SetPlayingSoundGroup(SoundGroup soundGroup)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xB67DEC", Offset = "0xB67DEC", VA = "0xB67DEC")]
	public void SetOnFinished(Action onFinished)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xB67DF4", Offset = "0xB67DF4", VA = "0xB67DF4")]
	public void SetOnFinished(Action<object> onFinished, object obj)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xB67DFC", Offset = "0xB67DFC", VA = "0xB67DFC")]
	public void SetChannel(int _channel)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xB67E04", Offset = "0xB67E04", VA = "0xB67E04")]
	public void SetDefaultParent(Transform parent)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xB67E0C", Offset = "0xB67E0C", VA = "0xB67E0C")]
	public void SetAudioMixer(AudioMixerGroup _mixer)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xB67EBC", Offset = "0xB67EBC", VA = "0xB67EBC")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xB67F24", Offset = "0xB67F24", VA = "0xB67F24")]
	public void Play()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xB67F8C", Offset = "0xB67F8C", VA = "0xB67F8C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xB67FCC", Offset = "0xB67FCC", VA = "0xB67FCC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xB68144", Offset = "0xB68144", VA = "0xB68144")]
	private int GetSampleTime()
	{
		return default(int);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xB681B8", Offset = "0xB681B8", VA = "0xB681B8")]
	public void ParentTo(Transform parent)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xB682C8", Offset = "0xB682C8", VA = "0xB682C8")]
	public void DetachFromParent()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xB683AC", Offset = "0xB683AC", VA = "0xB683AC")]
	public void ResetParent(Transform parent)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xB683FC", Offset = "0xB683FC", VA = "0xB683FC")]
	public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xB68428", Offset = "0xB68428", VA = "0xB68428")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909FC4", Offset = "0x909FC4")]
	private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xB68520", Offset = "0xB68520", VA = "0xB68520")]
	public void FadeTo(float fadeTime, float toVolume)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xB68644", Offset = "0xB68644", VA = "0xB68644")]
	public void FadeIn(float fadeTime, float defaultVolume)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xB687B4", Offset = "0xB687B4", VA = "0xB687B4")]
	public void FadeIn(float fadeTime)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xB68834", Offset = "0xB68834", VA = "0xB68834")]
	public void FadeOut(float fadeTime)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xB688E0", Offset = "0xB688E0", VA = "0xB688E0")]
	public void FadeOutDelayed(float delayedSecs, float fadeTime)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xB68598", Offset = "0xB68598", VA = "0xB68598")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B028", Offset = "0x90B028")]
	private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
	{
		return null;
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xB686C8", Offset = "0xB686C8", VA = "0xB686C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B08C", Offset = "0x90B08C")]
	private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
	{
		return null;
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xB689E8", Offset = "0xB689E8", VA = "0xB689E8")]
	public SoundEmitter()
	{
	}
}
[Token(Token = "0x20000DB")]
public enum SoundFXNext
{
	[Token(Token = "0x40006D0")]
	Random,
	[Token(Token = "0x40006D1")]
	Sequential
}
[Token(Token = "0x20000DC")]
public enum FreqHint
{
	[Token(Token = "0x40006D3")]
	None,
	[Token(Token = "0x40006D4")]
	Wide,
	[Token(Token = "0x40006D5")]
	Narrow
}
[Token(Token = "0x20000DD")]
public enum SoundPriority
{
	[Token(Token = "0x40006D7")]
	VeryLow = -2,
	[Token(Token = "0x40006D8")]
	Low,
	[Token(Token = "0x40006D9")]
	Default,
	[Token(Token = "0x40006DA")]
	High,
	[Token(Token = "0x40006DB")]
	VeryHigh
}
[Serializable]
[Token(Token = "0x20000DE")]
public class OSPProps
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F93EC", Offset = "0x8F93EC")]
	public bool enableSpatialization;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9424", Offset = "0x8F9424")]
	public bool useFastOverride;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F945C", Offset = "0x8F945C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F945C", Offset = "0x8F945C")]
	public float gain;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F94B0", Offset = "0x8F94B0")]
	public bool enableInvSquare;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F94E8", Offset = "0x8F94E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F94E8", Offset = "0x8F94E8")]
	public float volumetric;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9540", Offset = "0x8F9540")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8F9540", Offset = "0x8F9540")]
	public Vector2 invSquareFalloff;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xC28DE8", Offset = "0xC28DE8", VA = "0xC28DE8")]
	public OSPProps()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DF")]
public class SoundFX
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F95A0", Offset = "0x8F95A0")]
	public string name;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F95D8", Offset = "0x8F95D8")]
	public SoundFXNext playback;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9610", Offset = "0x8F9610")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F9610", Offset = "0x8F9610")]
	public float volume;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9664", Offset = "0x8F9664")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8F9664", Offset = "0x8F9664")]
	public Vector2 pitchVariance;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F96C0", Offset = "0x8F96C0")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8F96C0", Offset = "0x8F96C0")]
	public Vector2 falloffDistance;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9720", Offset = "0x8F9720")]
	public AudioRolloffMode falloffCurve;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9758", Offset = "0x8F9758")]
	public AnimationCurve volumeFalloffCurve;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9790", Offset = "0x8F9790")]
	public AnimationCurve reverbZoneMix;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F97C8", Offset = "0x8F97C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F97C8", Offset = "0x8F97C8")]
	public float spread;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9820", Offset = "0x8F9820")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F9820", Offset = "0x8F9820")]
	public float pctChanceToPlay;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9874", Offset = "0x8F9874")]
	public SoundPriority priority;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F98AC", Offset = "0x8F98AC")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8F98AC", Offset = "0x8F98AC")]
	public Vector2 delay;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9908", Offset = "0x8F9908")]
	public bool looping;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OSPProps ospProps;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9940", Offset = "0x8F9940")]
	public AudioClip[] soundClips;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool visibilityToggle;

	[NonSerialized]
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SoundGroup soundGroup;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int lastIdx;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int playingIdx;

	[Token(Token = "0x1700005E")]
	public int Length
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xB69678", Offset = "0xB69678", VA = "0xB69678")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005F")]
	public bool IsValid
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xB696A4", Offset = "0xB696A4", VA = "0xB696A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000060")]
	public SoundGroup Group
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xB69764", Offset = "0xB69764", VA = "0xB69764")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xB6976C", Offset = "0xB6976C", VA = "0xB6976C")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float MaxFalloffDistSquared
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xB69774", Offset = "0xB69774", VA = "0xB69774")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000062")]
	public float GroupVolumeOverride
	{
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xB69780", Offset = "0xB69780", VA = "0xB69780")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xB690FC", Offset = "0xB690FC", VA = "0xB690FC")]
	public SoundFX()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xB69798", Offset = "0xB69798", VA = "0xB69798")]
	public AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xB69910", Offset = "0xB69910", VA = "0xB69910")]
	public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xB699B4", Offset = "0xB699B4", VA = "0xB699B4")]
	public bool ReachedGroupPlayLimit()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xB699FC", Offset = "0xB699FC", VA = "0xB699FC")]
	public float GetClipLength(int idx)
	{
		return default(float);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB69B4C", Offset = "0xB69B4C", VA = "0xB69B4C")]
	public float GetPitch()
	{
		return default(float);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB69B58", Offset = "0xB69B58", VA = "0xB69B58")]
	public int PlaySound(float delaySecs = 0f)
	{
		return default(int);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB69C38", Offset = "0xB69C38", VA = "0xB69C38")]
	public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
	{
		return default(int);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB69D50", Offset = "0xB69D50", VA = "0xB69D50")]
	public void SetOnFinished(Action onFinished)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xB69DE0", Offset = "0xB69DE0", VA = "0xB69DE0")]
	public void SetOnFinished(Action<object> onFinished, object obj)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xB69E78", Offset = "0xB69E78", VA = "0xB69E78")]
	public bool StopSound()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xB69F08", Offset = "0xB69F08", VA = "0xB69F08")]
	public void AttachToParent(Transform parent)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xB69F98", Offset = "0xB69F98", VA = "0xB69F98")]
	public void DetachFromParent()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E0")]
public class SoundFXRef
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string soundFXName;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SoundFX soundFXCached;

	[Token(Token = "0x17000063")]
	public SoundFX soundFX
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xB6A014", Offset = "0xB6A014", VA = "0xB6A014")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public string name
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xB6A110", Offset = "0xB6A110", VA = "0xB6A110")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xB6A118", Offset = "0xB6A118", VA = "0xB6A118")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public int Length
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xB6A120", Offset = "0xB6A120", VA = "0xB6A120")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000066")]
	public bool IsValid
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xB6A170", Offset = "0xB6A170", VA = "0xB6A170")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xB6A044", Offset = "0xB6A044", VA = "0xB6A044")]
	private void Init()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xB6A1B0", Offset = "0xB6A1B0", VA = "0xB6A1B0")]
	public AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xB6A1F0", Offset = "0xB6A1F0", VA = "0xB6A1F0")]
	public float GetClipLength(int idx)
	{
		return default(float);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xB6A238", Offset = "0xB6A238", VA = "0xB6A238")]
	public int PlaySound(float delaySecs = 0f)
	{
		return default(int);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xB6A288", Offset = "0xB6A288", VA = "0xB6A288")]
	public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
	{
		return default(int);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xB6A310", Offset = "0xB6A310", VA = "0xB6A310")]
	public void SetOnFinished(Action onFinished)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xB6A358", Offset = "0xB6A358", VA = "0xB6A358")]
	public void SetOnFinished(Action<object> onFinished, object obj)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xB6A3B0", Offset = "0xB6A3B0", VA = "0xB6A3B0")]
	public bool StopSound()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xB6A3F0", Offset = "0xB6A3F0", VA = "0xB6A3F0")]
	public void AttachToParent(Transform parent)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xB6A438", Offset = "0xB6A438", VA = "0xB6A438")]
	public void DetachFromParent()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xB6A478", Offset = "0xB6A478", VA = "0xB6A478")]
	public SoundFXRef()
	{
	}
}
[Token(Token = "0x20000E1")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F4938", Offset = "0x8F4938")]
public class FastList<T>
{
	[Token(Token = "0x2000610")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000611")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7904", Offset = "0x8F7904")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170004B5")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6002E9C")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170004B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E9E")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E99")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002E9A")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E9B")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9D")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000067")]
	public int Count
	{
		[Token(Token = "0x60007E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E9")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public T Item
	{
		[Token(Token = "0x60007EA")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60007EB")]
		set
		{
		}
	}

	[Token(Token = "0x60007E6")]
	public FastList()
	{
	}

	[Token(Token = "0x60007E7")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60007EC")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60007ED")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60007EE")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60007EF")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60007F0")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F1")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60007F2")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F3")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60007F4")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F5")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60007F6")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60007F7")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60007F9")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60007FA")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B0F0", Offset = "0x90B0F0")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60007FB")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60007FC")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60007FD")]
	private void Trim()
	{
	}

	[Token(Token = "0x60007FE")]
	public void Clear()
	{
	}

	[Token(Token = "0x60007FF")]
	public void Release()
	{
	}
}
[Token(Token = "0x20000E2")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xC698FC", Offset = "0xC698FC", VA = "0xC698FC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20000E3")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xC698D0", Offset = "0xC698D0", VA = "0xC698D0")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20000E4")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000802")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xCC2300", Offset = "0xCC2300", VA = "0xCC2300")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xCC2438", Offset = "0xCC2438", VA = "0xCC2438")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000E5")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9978", Offset = "0x8F9978")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F99B0", Offset = "0x8F99B0")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F99E8", Offset = "0x8F99E8")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xD31B0C", Offset = "0xD31B0C", VA = "0xD31B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xD31B10", Offset = "0xD31B10", VA = "0xD31B10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xD31B90", Offset = "0xD31B90", VA = "0xD31B90")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xD31E04", Offset = "0xD31E04", VA = "0xD31E04")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000E6")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xD31E2C", Offset = "0xD31E2C", VA = "0xD31E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xD31F70", Offset = "0xD31F70", VA = "0xD31F70")]
	private void Update()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xD32044", Offset = "0xD32044", VA = "0xD32044")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xD32468", Offset = "0xD32468", VA = "0xD32468")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xD324B8", Offset = "0xD324B8", VA = "0xD324B8")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000E7")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000069")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600080E")]
		[Address(RVA = "0xC2D888", Offset = "0xC2D888", VA = "0xC2D888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xC2DB64", Offset = "0xC2DB64", VA = "0xC2DB64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xC2DCA0", Offset = "0xC2DCA0", VA = "0xC2DCA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xC2DBD4", Offset = "0xC2DBD4", VA = "0xC2DBD4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xC2B91C", Offset = "0xC2B91C", VA = "0xC2B91C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xC2DE3C", Offset = "0xC2DE3C", VA = "0xC2DE3C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xC2B8AC", Offset = "0xC2B8AC", VA = "0xC2B8AC")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xC2B9D0", Offset = "0xC2B9D0", VA = "0xC2B9D0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xC2DD38", Offset = "0xC2DD38", VA = "0xC2DD38")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xC2DEE4", Offset = "0xC2DEE4", VA = "0xC2DEE4")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xC2DF28", Offset = "0xC2DF28", VA = "0xC2DF28")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xC2E1A8", Offset = "0xC2E1A8", VA = "0xC2E1A8")]
	private void Prune()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xC2DF38", Offset = "0xC2DF38", VA = "0xC2DF38")]
	private void Display()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xC2E288", Offset = "0xC2E288", VA = "0xC2E288")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000E8")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x19D96B8", Offset = "0x19D96B8", VA = "0x19D96B8")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000E9")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000612")]
	public enum TouchEvent
	{
		[Token(Token = "0x400211D")]
		SingleTap,
		[Token(Token = "0x400211E")]
		DoubleTap,
		[Token(Token = "0x400211F")]
		Left,
		[Token(Token = "0x4002120")]
		Right,
		[Token(Token = "0x4002121")]
		Up,
		[Token(Token = "0x4002122")]
		Down
	}

	[Token(Token = "0x2000613")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x19D96E4", Offset = "0x19D96E4", VA = "0x19D96E4")]
	public static void Create()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x19D96E8", Offset = "0x19D96E8", VA = "0x19D96E8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x19D9A1C", Offset = "0x19D9A1C", VA = "0x19D9A1C")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x19D9858", Offset = "0x19D9858", VA = "0x19D9858")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x19D9A20", Offset = "0x19D9A20", VA = "0x19D9A20")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000EA")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000824")]
	[Address(RVA = "0x19D9C18", Offset = "0x19D9C18", VA = "0x19D9C18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x19D9C94", Offset = "0x19D9C94", VA = "0x19D9C94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x19D9D2C", Offset = "0x19D9D2C", VA = "0x19D9D2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x19D9D88", Offset = "0x19D9D88", VA = "0x19D9D88")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x19D9DEC", Offset = "0x19D9DEC", VA = "0x19D9DEC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x19D9DF0", Offset = "0x19D9DF0", VA = "0x19D9DF0")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000EB")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000614")]
	public enum Result
	{
		[Token(Token = "0x4002124")]
		Success = 0,
		[Token(Token = "0x4002125")]
		Unknown = -2200,
		[Token(Token = "0x4002126")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4002127")]
		InvalidParam = -2202,
		[Token(Token = "0x4002128")]
		BadSampleRate = -2203,
		[Token(Token = "0x4002129")]
		MissingDLL = -2204,
		[Token(Token = "0x400212A")]
		BadVersion = -2205,
		[Token(Token = "0x400212B")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000615")]
	public enum AudioDataType
	{
		[Token(Token = "0x400212D")]
		S16_Mono,
		[Token(Token = "0x400212E")]
		S16_Stereo,
		[Token(Token = "0x400212F")]
		F32_Mono,
		[Token(Token = "0x4002130")]
		F32_Stereo
	}

	[Token(Token = "0x2000616")]
	public enum Viseme
	{
		[Token(Token = "0x4002132")]
		sil,
		[Token(Token = "0x4002133")]
		PP,
		[Token(Token = "0x4002134")]
		FF,
		[Token(Token = "0x4002135")]
		TH,
		[Token(Token = "0x4002136")]
		DD,
		[Token(Token = "0x4002137")]
		kk,
		[Token(Token = "0x4002138")]
		CH,
		[Token(Token = "0x4002139")]
		SS,
		[Token(Token = "0x400213A")]
		nn,
		[Token(Token = "0x400213B")]
		RR,
		[Token(Token = "0x400213C")]
		aa,
		[Token(Token = "0x400213D")]
		E,
		[Token(Token = "0x400213E")]
		ih,
		[Token(Token = "0x400213F")]
		oh,
		[Token(Token = "0x4002140")]
		ou
	}

	[Token(Token = "0x2000617")]
	public enum Signals
	{
		[Token(Token = "0x4002142")]
		VisemeOn,
		[Token(Token = "0x4002143")]
		VisemeOff,
		[Token(Token = "0x4002144")]
		VisemeAmount,
		[Token(Token = "0x4002145")]
		VisemeSmoothing,
		[Token(Token = "0x4002146")]
		LaughterAmount
	}

	[Token(Token = "0x2000618")]
	public enum ContextProviders
	{
		[Token(Token = "0x4002148")]
		Original,
		[Token(Token = "0x4002149")]
		Enhanced,
		[Token(Token = "0x400214A")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000619")]
	public class Frame
	{
		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0xC2B1D8", Offset = "0xC2B1D8", VA = "0xC2B1D8")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0xC2B278", Offset = "0xC2B278", VA = "0xC2B278")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002EA5")]
		[Address(RVA = "0xC2B308", Offset = "0xC2B308", VA = "0xC2B308")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000714")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC29EE4", Offset = "0xC29EE4", VA = "0xC29EE4")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC29F90", Offset = "0xC29F90", VA = "0xC29F90")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC2A01C", Offset = "0xC2A01C", VA = "0xC2A01C")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC2A0CC", Offset = "0xC2A0CC", VA = "0xC2A0CC")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC2A190", Offset = "0xC2A190", VA = "0xC2A190")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC2A22C", Offset = "0xC2A22C", VA = "0xC2A22C")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC2A2C8", Offset = "0xC2A2C8", VA = "0xC2A2C8")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC2A38C", Offset = "0xC2A38C", VA = "0xC2A38C")]
	private static extern int ovrLipSyncDll_ProcessFrame(uint context, float[] audioBuffer, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount);

	[PreserveSig]
	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC2A478", Offset = "0xC2A478", VA = "0xC2A478")]
	private static extern int ovrLipSyncDll_ProcessFrameInterleaved(uint context, float[] audioBuffer, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount);

	[PreserveSig]
	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC2A564", Offset = "0xC2A564", VA = "0xC2A564")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, float[] audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC2A684", Offset = "0xC2A684", VA = "0xC2A684")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC2AA34", Offset = "0xC2AA34", VA = "0xC2AA34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC2A8FC", Offset = "0xC2A8FC", VA = "0xC2A8FC")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC2AB14", Offset = "0xC2AB14", VA = "0xC2AB14")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC2AC28", Offset = "0xC2AC28", VA = "0xC2AC28")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC2A894", Offset = "0xC2A894", VA = "0xC2A894")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC2AC98", Offset = "0xC2AC98", VA = "0xC2AC98")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC2AD7C", Offset = "0xC2AD7C", VA = "0xC2AD7C")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC2AE10", Offset = "0xC2AE10", VA = "0xC2AE10")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC2AEA4", Offset = "0xC2AEA4", VA = "0xC2AEA4")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC2AF68", Offset = "0xC2AF68", VA = "0xC2AF68")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, AudioDataType dataType = AudioDataType.F32_Stereo)
	{
		return default(Result);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC2B0B4", Offset = "0xC2B0B4", VA = "0xC2B0B4")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4970", Offset = "0x8F4970")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9A20", Offset = "0x8F9A20")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9A58", Offset = "0x8F9A58")]
	public bool enableTouchInput;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9A90", Offset = "0x8F9A90")]
	public bool audioLoopback;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9AC8", Offset = "0x8F9AC8")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9B00", Offset = "0x8F9B00")]
	public bool showVisemes;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9B38", Offset = "0x8F9B38")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9B70", Offset = "0x8F9B70")]
	public bool skipAudioSource;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9BA8", Offset = "0x8F9BA8")]
	public float gain;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xC2B390", Offset = "0xC2B390", VA = "0xC2B390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xC2B4C8", Offset = "0xC2B4C8", VA = "0xC2B4C8")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC2BA54", Offset = "0xC2BA54", VA = "0xC2BA54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC2BD68", Offset = "0xC2BD68", VA = "0xC2BD68")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC2BFBC", Offset = "0xC2BFBC", VA = "0xC2BFBC")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC2BAA4", Offset = "0xC2BAA4", VA = "0xC2BAA4")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC2B7D8", Offset = "0xC2B7D8", VA = "0xC2B7D8")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC2BFCC", Offset = "0xC2BFCC", VA = "0xC2BFCC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC2C0F8", Offset = "0xC2C0F8", VA = "0xC2C0F8")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F49D4", Offset = "0x8F49D4")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9BE0", Offset = "0x8F9BE0")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9C18", Offset = "0x8F9C18")]
	public bool enableAcceleration;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700006A")]
	public int Smoothing
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xC2C278", Offset = "0xC2C278", VA = "0xC2C278")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xC2C18C", Offset = "0xC2C18C", VA = "0xC2C18C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public uint Context
	{
		[Token(Token = "0x600084C")]
		[Address(RVA = "0xC2BFB4", Offset = "0xC2BFB4", VA = "0xC2BFB4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700006C")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x600084D")]
		[Address(RVA = "0xC2BA9C", Offset = "0xC2BA9C", VA = "0xC2BA9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xC2C280", Offset = "0xC2C280", VA = "0xC2C280")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xC2C418", Offset = "0xC2C418", VA = "0xC2C418")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC2C53C", Offset = "0xC2C53C", VA = "0xC2C53C")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC2C544", Offset = "0xC2C544", VA = "0xC2C544")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xC2C638", Offset = "0xC2C638", VA = "0xC2C638")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xC2C700", Offset = "0xC2C700", VA = "0xC2C700")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xC2C11C", Offset = "0xC2C11C", VA = "0xC2C11C")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4A38", Offset = "0x8F4A38")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9C50", Offset = "0x8F9C50")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xC2C780", Offset = "0xC2C780", VA = "0xC2C780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xC2C98C", Offset = "0xC2C98C", VA = "0xC2C98C")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000EF")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9C88", Offset = "0x8F9C88")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x8F9CC0", Offset = "0x8F9CC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9CC0", Offset = "0x8F9CC0")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9E3C", Offset = "0x8F9E3C")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9E74", Offset = "0x8F9E74")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9EAC", Offset = "0x8F9EAC")]
	public KeyCode laughterKey;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9EE4", Offset = "0x8F9EE4")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F9F1C", Offset = "0x8F9F1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9F1C", Offset = "0x8F9F1C")]
	public float laughterThreshold;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F9F70", Offset = "0x8F9F70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9F70", Offset = "0x8F9F70")]
	public float laughterMultiplier;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F9FC4", Offset = "0x8F9FC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9FC4", Offset = "0x8F9FC4")]
	public int smoothAmount;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xC2C990", Offset = "0xC2C990", VA = "0xC2C990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xC2CAE0", Offset = "0xC2CAE0", VA = "0xC2CAE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xC2CE5C", Offset = "0xC2CE5C", VA = "0xC2CE5C")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xC2CC14", Offset = "0xC2CC14", VA = "0xC2CC14")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xC2CD58", Offset = "0xC2CD58", VA = "0xC2CD58")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xC2CF40", Offset = "0xC2CF40", VA = "0xC2CF40")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xC2D064", Offset = "0xC2D064", VA = "0xC2D064")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xC2D0E0", Offset = "0xC2D0E0", VA = "0xC2D0E0")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000F0")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA01C", Offset = "0x8FA01C")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x8FA01C", Offset = "0x8FA01C")]
	public Texture[] Textures;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FA198", Offset = "0x8FA198")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA198", Offset = "0x8FA198")]
	public int smoothAmount;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC2D1D8", Offset = "0xC2D1D8", VA = "0xC2D1D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC2D338", Offset = "0xC2D338", VA = "0xC2D338")]
	private void Update()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xC2D5DC", Offset = "0xC2D5DC", VA = "0xC2D5DC")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xC2D7DC", Offset = "0xC2D7DC", VA = "0xC2D7DC")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000F1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4A9C", Offset = "0x8F4A9C")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x200061A")]
	public enum micActivation
	{
		[Token(Token = "0x4002150")]
		HoldToSpeak,
		[Token(Token = "0x4002151")]
		PushToSpeak,
		[Token(Token = "0x4002152")]
		ConstantSpeak
	}

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA1F0", Offset = "0x8FA1F0")]
	public AudioSource audioSource;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA228", Offset = "0x8FA228")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA260", Offset = "0x8FA260")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FA298", Offset = "0x8FA298")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA298", Offset = "0x8FA298")]
	private float micInputVolume;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA300", Offset = "0x8FA300")]
	private int micFrequency;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA34C", Offset = "0x8FA34C")]
	public micActivation micControl;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA384", Offset = "0x8FA384")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA3BC", Offset = "0x8FA3BC")]
	public string selectedDevice;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x1700006D")]
	public float MicFrequency
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0xC2E2FC", Offset = "0xC2E2FC", VA = "0xC2E2FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000864")]
		[Address(RVA = "0xC2E308", Offset = "0xC2E308", VA = "0xC2E308")]
		set
		{
		}
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xC2E394", Offset = "0xC2E394", VA = "0xC2E394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xC2E454", Offset = "0xC2E454", VA = "0xC2E454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xC2E5FC", Offset = "0xC2E5FC", VA = "0xC2E5FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xC2EAA4", Offset = "0xC2EAA4", VA = "0xC2EAA4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xC2EAB8", Offset = "0xC2EAB8", VA = "0xC2EAB8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xC2EAD0", Offset = "0xC2EAD0", VA = "0xC2EAD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xC2EAD4", Offset = "0xC2EAD4", VA = "0xC2EAD4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xC2EB4C", Offset = "0xC2EB4C", VA = "0xC2EB4C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xC2E534", Offset = "0xC2E534", VA = "0xC2E534")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xC2E8DC", Offset = "0xC2E8DC", VA = "0xC2E8DC")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC2E75C", Offset = "0xC2E75C", VA = "0xC2E75C")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC2ED74", Offset = "0xC2ED74", VA = "0xC2ED74")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC2ED7C", Offset = "0xC2ED7C", VA = "0xC2ED7C")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F2")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC2C894", Offset = "0xC2C894", VA = "0xC2C894")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xC2EDAC", Offset = "0xC2EDAC", VA = "0xC2EDAC")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000F3")]
public class BufferedAudioStream
{
	[Token(Token = "0x4000747")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x400074B")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x400074C")]
	private const int sampleRate = 48000;

	[Token(Token = "0x400074D")]
	private const int bufferSize = 12000;

	[Token(Token = "0x400074E")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xB41AFC", Offset = "0xB41AFC", VA = "0xB41AFC")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xB41C34", Offset = "0xB41C34", VA = "0xB41C34")]
	public void Update()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xB41BD0", Offset = "0xB41BD0", VA = "0xB41BD0")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xB41E38", Offset = "0xB41E38", VA = "0xB41E38")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x20000F4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F4B00", Offset = "0x8F4B00")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200061B")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002154")]
		MouseXAndY,
		[Token(Token = "0x4002155")]
		MouseX,
		[Token(Token = "0x4002156")]
		MouseY
	}

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xC0AF34", Offset = "0xC0AF34", VA = "0xC0AF34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xC0B1B8", Offset = "0xC0B1B8", VA = "0xC0B1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xC0B280", Offset = "0xC0B280", VA = "0xC0B280")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000F5")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000F6")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xC285F0", Offset = "0xC285F0", VA = "0xC285F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xC285F4", Offset = "0xC285F4", VA = "0xC285F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xC285F8", Offset = "0xC285F8", VA = "0xC285F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xC28784", Offset = "0xC28784", VA = "0xC28784")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xC2864C", Offset = "0xC2864C", VA = "0xC2864C")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xC286E0", Offset = "0xC286E0", VA = "0xC286E0")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xC287D8", Offset = "0xC287D8", VA = "0xC287D8")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xC28878", Offset = "0xC28878", VA = "0xC28878")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xC28A04", Offset = "0xC28A04", VA = "0xC28A04")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xC28B90", Offset = "0xC28B90", VA = "0xC28B90")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000F7")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200061C")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x400076E")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000774")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xCA835C", Offset = "0xCA835C", VA = "0xCA835C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xCA8394", Offset = "0xCA8394", VA = "0xCA8394")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xCA8564", Offset = "0xCA8564", VA = "0xCA8564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xCA861C", Offset = "0xCA861C", VA = "0xCA861C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xCA872C", Offset = "0xCA872C", VA = "0xCA872C")]
	private void Update()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xCA9364", Offset = "0xCA9364", VA = "0xCA9364")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600088C")]
	[Address(RVA = "0xCA85F8", Offset = "0xCA85F8", VA = "0xCA85F8")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600088D")]
	[Address(RVA = "0xCA8680", Offset = "0xCA8680", VA = "0xCA8680")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600088E")]
	[Address(RVA = "0xCA904C", Offset = "0xCA904C", VA = "0xCA904C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600088F")]
	[Address(RVA = "0xCA90E8", Offset = "0xCA90E8", VA = "0xCA90E8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000890")]
	[Address(RVA = "0xCA9188", Offset = "0xCA9188", VA = "0xCA9188")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000891")]
	[Address(RVA = "0xCA9228", Offset = "0xCA9228", VA = "0xCA9228")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000892")]
	[Address(RVA = "0xCA92C4", Offset = "0xCA92C4", VA = "0xCA92C4")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000893")]
	[Address(RVA = "0xCAA6CC", Offset = "0xCAA6CC", VA = "0xCAA6CC")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000894")]
	[Address(RVA = "0xCAA790", Offset = "0xCAA790", VA = "0xCAA790")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xCAA854", Offset = "0xCAA854", VA = "0xCAA854")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200061D")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4002158")]
		Uninitialized = -1,
		[Token(Token = "0x4002159")]
		NotEnabled,
		[Token(Token = "0x400215A")]
		Success,
		[Token(Token = "0x400215B")]
		StreamError,
		[Token(Token = "0x400215C")]
		ProcessError,
		[Token(Token = "0x400215D")]
		MaxStatValue
	}

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700006E")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000897")]
		[Address(RVA = "0xC27788", Offset = "0xC27788", VA = "0xC27788")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000898")]
		[Address(RVA = "0xC27790", Offset = "0xC27790", VA = "0xC27790")]
		set
		{
		}
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xC2779C", Offset = "0xC2779C", VA = "0xC2779C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xC279EC", Offset = "0xC279EC", VA = "0xC279EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xC27C78", Offset = "0xC27C78", VA = "0xC27C78")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000F9")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x400077A")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700006F")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0xC27DF8", Offset = "0xC27DF8", VA = "0xC27DF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600089F")]
		[Address(RVA = "0xC27E00", Offset = "0xC27E00", VA = "0xC27E00")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public float Gain
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xC27E0C", Offset = "0xC27E0C", VA = "0xC27E0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xC27E14", Offset = "0xC27E14", VA = "0xC27E14")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xC27E98", Offset = "0xC27E98", VA = "0xC27E98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xC27EA0", Offset = "0xC27EA0", VA = "0xC27EA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float Near
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xC27EAC", Offset = "0xC27EAC", VA = "0xC27EAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xC27EB4", Offset = "0xC27EB4", VA = "0xC27EB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public float Far
	{
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xC27F3C", Offset = "0xC27F3C", VA = "0xC27F3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xC27F44", Offset = "0xC27F44", VA = "0xC27F44")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xC27FCC", Offset = "0xC27FCC", VA = "0xC27FCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xC27FD4", Offset = "0xC27FD4", VA = "0xC27FD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool EnableRfl
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xC2805C", Offset = "0xC2805C", VA = "0xC2805C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xC28064", Offset = "0xC28064", VA = "0xC28064")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x600089D")]
	[Address(RVA = "0xC27CFC", Offset = "0xC27CFC", VA = "0xC27CFC")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xC28070", Offset = "0xC28070", VA = "0xC28070")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xC28248", Offset = "0xC28248", VA = "0xC28248")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xC2824C", Offset = "0xC2824C", VA = "0xC2824C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xC280DC", Offset = "0xC280DC", VA = "0xC280DC")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xC28374", Offset = "0xC28374", VA = "0xC28374")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xC28444", Offset = "0xC28444", VA = "0xC28444")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000FA")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000785")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000787")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xC28464", Offset = "0xC28464", VA = "0xC28464")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xC28470", Offset = "0xC28470", VA = "0xC28470")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xC28544", Offset = "0xC28544", VA = "0xC28544")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xC284A8", Offset = "0xC284A8", VA = "0xC284A8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xC285E0", Offset = "0xC285E0", VA = "0xC285E0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000FB")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000788")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xC28C18", Offset = "0xC28C18", VA = "0xC28C18")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xC28CCC", Offset = "0xC28CCC", VA = "0xC28CCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xC28DD8", Offset = "0xC28DD8", VA = "0xC28DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xC28DDC", Offset = "0xC28DDC", VA = "0xC28DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xC28DE0", Offset = "0xC28DE0", VA = "0xC28DE0")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ToggleControllerVisuals : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] theControllersL;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] theControllersR;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int curIndex;

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xAC81A8", Offset = "0xAC81A8", VA = "0xAC81A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xAC81BC", Offset = "0xAC81BC", VA = "0xAC81BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xAC81B4", Offset = "0xAC81B4", VA = "0xAC81B4")]
	public void ChangeIndex(int index)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xAC821C", Offset = "0xAC821C", VA = "0xAC821C")]
	public void ToggleVisuals()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xAC8450", Offset = "0xAC8450", VA = "0xAC8450")]
	public ToggleControllerVisuals()
	{
	}
}
[Token(Token = "0x20000FD")]
public class TriggerVolumeControllers : MonoBehaviour
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent theEvent;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xAC8F60", Offset = "0xAC8F60", VA = "0xAC8F60")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xAC9004", Offset = "0xAC9004", VA = "0xAC9004")]
	public TriggerVolumeControllers()
	{
	}
}
[Token(Token = "0x20000FE")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnableSwitch SwitchTarget;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x11A67C4", Offset = "0x11A67C4", VA = "0x11A67C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x11A6944", Offset = "0x11A6944", VA = "0x11A6944")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x11A6E18", Offset = "0x11A6E18", VA = "0x11A6E18")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x11A6F2C", Offset = "0x11A6F2C", VA = "0x11A6F2C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x11A6C68", Offset = "0x11A6C68", VA = "0x11A6C68")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x11A745C", Offset = "0x11A745C", VA = "0x11A745C")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x20000FF")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000076")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xC292C8", Offset = "0xC292C8", VA = "0xC292C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xC295A4", Offset = "0xC295A4", VA = "0xC295A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xC296E0", Offset = "0xC296E0", VA = "0xC296E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xC29614", Offset = "0xC29614", VA = "0xC29614")]
	public void Init()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xC297E8", Offset = "0xC297E8", VA = "0xC297E8")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xC299A0", Offset = "0xC299A0", VA = "0xC299A0")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xC29778", Offset = "0xC29778", VA = "0xC29778")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xC29A8C", Offset = "0xC29A8C", VA = "0xC29A8C")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xC2989C", Offset = "0xC2989C", VA = "0xC2989C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xC29A48", Offset = "0xC29A48", VA = "0xC29A48")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xC29B10", Offset = "0xC29B10", VA = "0xC29B10")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xC29D90", Offset = "0xC29D90", VA = "0xC29D90")]
	private void Prune()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xC29B20", Offset = "0xC29B20", VA = "0xC29B20")]
	private void Display()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xC29E70", Offset = "0xC29E70", VA = "0xC29E70")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x2000100")]
public delegate void OVRCallback();
[Token(Token = "0x2000101")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x2000102")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x2000103")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x2000104")]
internal static class OVRMessenger
{
	[Token(Token = "0x200061E")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0x19D8ADC", Offset = "0x19D8ADC", VA = "0x19D8ADC")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x200061F")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0x19D8B54", Offset = "0x19D8B54", VA = "0x19D8B54")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xC2EE1C", Offset = "0xC2EE1C", VA = "0xC2EE1C")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xC2EEA8", Offset = "0xC2EEA8", VA = "0xC2EEA8")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xC2F334", Offset = "0xC2F334", VA = "0xC2F334")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xC2F6D8", Offset = "0xC2F6D8", VA = "0xC2F6D8")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xC2F954", Offset = "0xC2F954", VA = "0xC2F954")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xC2FBAC", Offset = "0xC2FBAC", VA = "0xC2FBAC")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xC2FC9C", Offset = "0xC2FC9C", VA = "0xC2FC9C")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xC2FCA0", Offset = "0xC2FCA0", VA = "0xC2FCA0")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xC2FD24", Offset = "0xC2FD24", VA = "0xC2FD24")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x60008F2")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x60008F3")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x60008F4")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xC2FED0", Offset = "0xC2FED0", VA = "0xC2FED0")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x60008F6")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x60008F7")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x60008F8")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xC30084", Offset = "0xC30084", VA = "0xC30084")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x60008FA")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x60008FB")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x60008FC")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x2000105")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xD480F0", Offset = "0xD480F0", VA = "0xD480F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xD4816C", Offset = "0xD4816C", VA = "0xD4816C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xD481CC", Offset = "0xD481CC", VA = "0xD481CC")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x2000106")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4B38", Offset = "0x8F4B38")]
public class OVRMicInput : MonoBehaviour
{
	[Token(Token = "0x2000620")]
	public enum micActivation
	{
		[Token(Token = "0x400215F")]
		HoldToSpeak,
		[Token(Token = "0x4002160")]
		PushToSpeak,
		[Token(Token = "0x4002161")]
		ConstantSpeak
	}

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GuiSelectDevice;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float loudness;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool micSelected;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int minFreq;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxFreq;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool focused;

	[Token(Token = "0x17000077")]
	public float Sensitivity
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0x19D8BCC", Offset = "0x19D8BCC", VA = "0x19D8BCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000902")]
		[Address(RVA = "0x19D8BD4", Offset = "0x19D8BD4", VA = "0x19D8BD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public float SourceVolume
	{
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x19D8C5C", Offset = "0x19D8C5C", VA = "0x19D8C5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x19D8C64", Offset = "0x19D8C64", VA = "0x19D8C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public float MicFrequency
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x19D8CEC", Offset = "0x19D8CEC", VA = "0x19D8CEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x19D8CF8", Offset = "0x19D8CF8", VA = "0x19D8CF8")]
		set
		{
		}
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x19D8D84", Offset = "0x19D8D84", VA = "0x19D8D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x19D8E44", Offset = "0x19D8E44", VA = "0x19D8E44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x19D8FEC", Offset = "0x19D8FEC", VA = "0x19D8FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x19D93C4", Offset = "0x19D93C4", VA = "0x19D93C4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x19D93D8", Offset = "0x19D93D8", VA = "0x19D93D8")]
	private void OnApplicationPause(bool focus)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x19D93EC", Offset = "0x19D93EC", VA = "0x19D93EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x19D93F0", Offset = "0x19D93F0", VA = "0x19D93F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x19D9468", Offset = "0x19D9468", VA = "0x19D9468")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x19D8F24", Offset = "0x19D8F24", VA = "0x19D8F24")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x19D9320", Offset = "0x19D9320", VA = "0x19D9320")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x19D91C0", Offset = "0x19D91C0", VA = "0x19D91C0")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x19D9318", Offset = "0x19D9318", VA = "0x19D9318")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x19D9690", Offset = "0x19D9690", VA = "0x19D9690")]
	public OVRMicInput()
	{
	}
}
[Token(Token = "0x2000107")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x2000621")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x4002163")]
		Unknown = -2250,
		[Token(Token = "0x4002164")]
		CannotCreateContext = -2251,
		[Token(Token = "0x4002165")]
		InvalidParam = -2252,
		[Token(Token = "0x4002166")]
		BadSampleRate = -2253,
		[Token(Token = "0x4002167")]
		MissingDLL = -2254,
		[Token(Token = "0x4002168")]
		BadVersion = -2255,
		[Token(Token = "0x4002169")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x2000622")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x400216B")]
		None
	}

	[Token(Token = "0x40007AA")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x40007AB")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000914")]
	[Address(RVA = "0x19D9DF8", Offset = "0x19D9DF8", VA = "0x19D9DF8")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000915")]
	[Address(RVA = "0x19D9EA4", Offset = "0x19D9EA4", VA = "0x19D9EA4")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000916")]
	[Address(RVA = "0x19D9F30", Offset = "0x19D9F30", VA = "0x19D9F30")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000917")]
	[Address(RVA = "0x19D9FE4", Offset = "0x19D9FE4", VA = "0x19D9FE4")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000918")]
	[Address(RVA = "0x19DA080", Offset = "0x19DA080", VA = "0x19DA080")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x6000919")]
	[Address(RVA = "0x19DA11C", Offset = "0x19DA11C", VA = "0x19DA11C")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x600091A")]
	[Address(RVA = "0x19DA1D0", Offset = "0x19DA1D0", VA = "0x19DA1D0")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600091B")]
	[Address(RVA = "0x19DA28C", Offset = "0x19DA28C", VA = "0x19DA28C")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600091C")]
	[Address(RVA = "0x19DA348", Offset = "0x19DA348", VA = "0x19DA348")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x19DA3F4", Offset = "0x19DA3F4", VA = "0x19DA3F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x19DA690", Offset = "0x19DA690", VA = "0x19DA690")]
	private void Start()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x19DA694", Offset = "0x19DA694", VA = "0x19DA694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x19DA698", Offset = "0x19DA698", VA = "0x19DA698")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x19DA7A4", Offset = "0x19DA7A4", VA = "0x19DA7A4")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x19DA80C", Offset = "0x19DA80C", VA = "0x19DA80C")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x19DA8A0", Offset = "0x19DA8A0", VA = "0x19DA8A0")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x19DA934", Offset = "0x19DA934", VA = "0x19DA934")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x19DA9E4", Offset = "0x19DA9E4", VA = "0x19DA9E4")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x19DAA90", Offset = "0x19DAA90", VA = "0x19DAA90")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x19DAB3C", Offset = "0x19DAB3C", VA = "0x19DAB3C")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x19DABE0", Offset = "0x19DABE0", VA = "0x19DABE0")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x2000108")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4B9C", Offset = "0x8F4B9C")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x2000623")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x400216D")]
		MixInputAudio,
		[Token(Token = "0x400216E")]
		PitchInputAudio,
		[Token(Token = "0x400216F")]
		SetBands,
		[Token(Token = "0x4002170")]
		FormantCorrection,
		[Token(Token = "0x4002171")]
		Carrier1_TrackPitch,
		[Token(Token = "0x4002172")]
		Carrier1_Type,
		[Token(Token = "0x4002173")]
		Carrier1_Gain,
		[Token(Token = "0x4002174")]
		Carrier1_Frequency,
		[Token(Token = "0x4002175")]
		Carrier1_Note,
		[Token(Token = "0x4002176")]
		Carrier1_PulseWidth,
		[Token(Token = "0x4002177")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x4002178")]
		Carrier2_TrackPitch,
		[Token(Token = "0x4002179")]
		Carrier2_Type,
		[Token(Token = "0x400217A")]
		Carrier2_Gain,
		[Token(Token = "0x400217B")]
		Carrier2_Frequency,
		[Token(Token = "0x400217C")]
		Carrier2_Note,
		[Token(Token = "0x400217D")]
		Carrier2_PulseWidth,
		[Token(Token = "0x400217E")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x400217F")]
		Count
	}

	[Token(Token = "0x2000624")]
	public struct VMPreset
	{
		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x19DAC48", Offset = "0x19DAC48", VA = "0x19DAC48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x19DAD08", Offset = "0x19DAD08", VA = "0x19DAD08")]
	private void Start()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x19DB2A4", Offset = "0x19DB2A4", VA = "0x19DB2A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x19DB528", Offset = "0x19DB528", VA = "0x19DB528")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x19DB64C", Offset = "0x19DB64C", VA = "0x19DB64C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x19DB88C", Offset = "0x19DB88C", VA = "0x19DB88C")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x19DB940", Offset = "0x19DB940", VA = "0x19DB940")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x19DBE70", Offset = "0x19DBE70", VA = "0x19DBE70")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x19DBE9C", Offset = "0x19DBE9C", VA = "0x19DBE9C")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x19DBF38", Offset = "0x19DBF38", VA = "0x19DBF38")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x19DBFDC", Offset = "0x19DBFDC", VA = "0x19DBFDC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x19DB480", Offset = "0x19DB480", VA = "0x19DB480")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x19DAEF0", Offset = "0x19DAEF0", VA = "0x19DAEF0")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x19DC0C8", Offset = "0x19DC0C8", VA = "0x19DC0C8")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x2000109")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x6000938")]
	[Address(RVA = "0xF33E98", Offset = "0xF33E98", VA = "0xF33E98")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x200010A")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xB4FE18", Offset = "0xB4FE18", VA = "0xB4FE18")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xB4FEA0", Offset = "0xB4FEA0", VA = "0xB4FEA0", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xB501E4", Offset = "0xB501E4", VA = "0xB501E4")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x200010B")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xB501EC", Offset = "0xB501EC", VA = "0xB501EC")]
	public void Update()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xB50354", Offset = "0xB50354", VA = "0xB50354")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x200010C")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA4A4", Offset = "0x8FA4A4")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x1700007A")]
	public string UserName
	{
		[Token(Token = "0x600093E")]
		[Address(RVA = "0xB509D8", Offset = "0xB509D8", VA = "0xB509D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B164", Offset = "0x90B164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600093F")]
		[Address(RVA = "0xB509E0", Offset = "0xB509E0", VA = "0xB509E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B174", Offset = "0x90B174")]
		set
		{
		}
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xB509E8", Offset = "0xB509E8", VA = "0xB509E8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xB50D1C", Offset = "0xB50D1C", VA = "0xB50D1C")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xB50EE4", Offset = "0xB50EE4", VA = "0xB50EE4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xB50EFC", Offset = "0xB50EFC", VA = "0xB50EFC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xB50F14", Offset = "0xB50F14", VA = "0xB50F14")]
	public void Update()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xB51024", Offset = "0xB51024", VA = "0xB51024")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xB51E60", Offset = "0xB51E60", VA = "0xB51E60")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xB510DC", Offset = "0xB510DC", VA = "0xB510DC")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xB51F30", Offset = "0xB51F30", VA = "0xB51F30")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xB51FF0", Offset = "0xB51FF0", VA = "0xB51FF0", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xB520D8", Offset = "0xB520D8", VA = "0xB520D8", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xB524DC", Offset = "0xB524DC", VA = "0xB524DC", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xB52510", Offset = "0xB52510", VA = "0xB52510", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xB525D4", Offset = "0xB525D4", VA = "0xB525D4", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xB52774", Offset = "0xB52774", VA = "0xB52774")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xB52344", Offset = "0xB52344", VA = "0xB52344")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xB52978", Offset = "0xB52978", VA = "0xB52978", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xB52DF0", Offset = "0xB52DF0", VA = "0xB52DF0", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xB52E54", Offset = "0xB52E54", VA = "0xB52E54", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xB52F6C", Offset = "0xB52F6C", VA = "0xB52F6C", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xB53114", Offset = "0xB53114", VA = "0xB53114", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xB53248", Offset = "0xB53248", VA = "0xB53248", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xB5337C", Offset = "0xB5337C", VA = "0xB5337C")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xB4FF28", Offset = "0xB4FF28", VA = "0xB4FF28")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xB53470", Offset = "0xB53470", VA = "0xB53470")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xB534BC", Offset = "0xB534BC", VA = "0xB534BC")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x200010D")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x1700007B")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1007D88", Offset = "0x1007D88", VA = "0x1007D88")]
		get
		{
			return null;
		}
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1007D48", Offset = "0x1007D48", VA = "0x1007D48")]
		set
		{
		}
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1007DC0", Offset = "0x1007DC0", VA = "0x1007DC0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1007E38", Offset = "0x1007E38", VA = "0x1007E38")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1007F78", Offset = "0x1007F78", VA = "0x1007F78")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x200010E")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000960")]
	[Address(RVA = "0xC6155C", Offset = "0xC6155C", VA = "0xC6155C", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xC61590", Offset = "0xC61590", VA = "0xC61590")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x200010F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4C20", Offset = "0x8F4C20")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xC153D4", Offset = "0xC153D4", VA = "0xC153D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xC15494", Offset = "0xC15494", VA = "0xC15494")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xC154E0", Offset = "0xC154E0", VA = "0xC154E0")]
	public void StartChat()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xC15618", Offset = "0xC15618", VA = "0xC15618")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x2000110")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4C84", Offset = "0x8F4C84")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4C84", Offset = "0x8F4C84")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xB4FAFC", Offset = "0xB4FAFC", VA = "0xB4FAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xB4FC70", Offset = "0xB4FC70", VA = "0xB4FC70")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xB4FD4C", Offset = "0xB4FD4C", VA = "0xB4FD4C")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x2000111")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4D10", Offset = "0x8F4D10")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x6000969")]
	[Address(RVA = "0xB4FD54", Offset = "0xB4FD54", VA = "0xB4FD54")]
	private void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xB4FE10", Offset = "0xB4FE10", VA = "0xB4FE10")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x2000112")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4D74", Offset = "0x8F4D74")]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xAA2300", Offset = "0xAA2300", VA = "0xAA2300")]
	private void Start()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xAA2358", Offset = "0xAA2358", VA = "0xAA2358")]
	private void Update()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xAA23CC", Offset = "0xAA23CC", VA = "0xAA23CC")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xAA2494", Offset = "0xAA2494", VA = "0xAA2494")]
	public PointersController()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4DD8", Offset = "0x8F4DD8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4DD8", Offset = "0x8F4DD8")]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x1700007C")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x600096F")]
		[Address(RVA = "0xAA43F0", Offset = "0xAA43F0", VA = "0xAA43F0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xAA448C", Offset = "0xAA448C", VA = "0xAA448C", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xAA4528", Offset = "0xAA4528", VA = "0xAA4528")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xAA48B8", Offset = "0xAA48B8", VA = "0xAA48B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xAA4AD4", Offset = "0xAA4AD4", VA = "0xAA4AD4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xAA4D3C", Offset = "0xAA4D3C", VA = "0xAA4D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xAA53F8", Offset = "0xAA53F8", VA = "0xAA53F8")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x2000114")]
public class MouseLookHelper
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xC0B2A0", Offset = "0xC0B2A0", VA = "0xC0B2A0")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xC0B30C", Offset = "0xC0B30C", VA = "0xC0B30C")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xC0B64C", Offset = "0xC0B64C", VA = "0xC0B64C")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xC0B714", Offset = "0xC0B714", VA = "0xC0B714")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x2000115")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xB6A5F8", Offset = "0xB6A5F8", VA = "0xB6A5F8", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xB6A70C", Offset = "0xB6A70C", VA = "0xB6A70C", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xB6A820", Offset = "0xB6A820", VA = "0xB6A820")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x2000116")]
public class SecretWallsGame : MonoBehaviour
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KSVR_Player PlayerOne;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetworkDummyCommander PlayerTwo;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool init;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xB63764", Offset = "0xB63764", VA = "0xB63764")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xB63768", Offset = "0xB63768", VA = "0xB63768")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xB6376C", Offset = "0xB6376C", VA = "0xB6376C")]
	public SecretWallsGame()
	{
	}
}
[Token(Token = "0x2000117")]
public class Teleport_Fast : MonoBehaviour
{
	[Token(Token = "0x2000625")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7914", Offset = "0x8F7914")]
	private sealed class <FadeLight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleport_Fast <>4__this;

		[Token(Token = "0x170004B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EAF")]
			[Address(RVA = "0xE0CA24", Offset = "0xE0CA24", VA = "0xE0CA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0xE0CA94", Offset = "0xE0CA94", VA = "0xE0CA94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0xE0C7FC", Offset = "0xE0C7FC", VA = "0xE0C7FC")]
		[DebuggerHidden]
		public <FadeLight>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0xE0C844", Offset = "0xE0C844", VA = "0xE0C844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0xE0C848", Offset = "0xE0C848", VA = "0xE0C848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xE0CA2C", Offset = "0xE0CA2C", VA = "0xE0CA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem TeleportVideoParticles;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light TeleportLight;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource TeleportAudio;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fadeStart;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadeEnd;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fadeTime;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xE0C678", Offset = "0xE0C678", VA = "0xE0C678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xE0C73C", Offset = "0xE0C73C", VA = "0xE0C73C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xE0C788", Offset = "0xE0C788", VA = "0xE0C788")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B194", Offset = "0x90B194")]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xE0C828", Offset = "0xE0C828", VA = "0xE0C828")]
	public Teleport_Fast()
	{
	}
}
[Token(Token = "0x2000118")]
public class Teleport_Slow : MonoBehaviour
{
	[Token(Token = "0x2000626")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7924", Offset = "0x8F7924")]
	private sealed class <FadeLight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleport_Slow <>4__this;

		[Token(Token = "0x170004B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xE0CE90", Offset = "0xE0CE90", VA = "0xE0CE90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xE0CF00", Offset = "0xE0CF00", VA = "0xE0CF00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0xE0CC20", Offset = "0xE0CC20", VA = "0xE0CC20")]
		[DebuggerHidden]
		public <FadeLight>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0xE0CC68", Offset = "0xE0CC68", VA = "0xE0CC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0xE0CC6C", Offset = "0xE0CC6C", VA = "0xE0CC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0xE0CE98", Offset = "0xE0CE98", VA = "0xE0CE98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem TeleportVideoParticles;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light TeleportLight;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource TeleportAudio;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fadeStart;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadeEnd;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fadeTime;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xE0CA9C", Offset = "0xE0CA9C", VA = "0xE0CA9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xE0CB60", Offset = "0xE0CB60", VA = "0xE0CB60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xE0CBAC", Offset = "0xE0CBAC", VA = "0xE0CBAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B1F8", Offset = "0x90B1F8")]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xE0CC4C", Offset = "0xE0CC4C", VA = "0xE0CC4C")]
	public Teleport_Slow()
	{
	}
}
[Token(Token = "0x2000119")]
public class TeleportFX : MonoBehaviour
{
	[Token(Token = "0x2000627")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7934", Offset = "0x8F7934")]
	private sealed class <FadeLight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportFX <>4__this;

		[Token(Token = "0x170004BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0xE0C600", Offset = "0xE0C600", VA = "0xE0C600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xE0C670", Offset = "0xE0C670", VA = "0xE0C670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0xE0C3D8", Offset = "0xE0C3D8", VA = "0xE0C3D8")]
		[DebuggerHidden]
		public <FadeLight>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0xE0C420", Offset = "0xE0C420", VA = "0xE0C420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0xE0C424", Offset = "0xE0C424", VA = "0xE0C424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0xE0C608", Offset = "0xE0C608", VA = "0xE0C608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem TeleportVideoParticles;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem SmokeParticles;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem SparkParticles;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light TeleportLight;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource TeleportAudio;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fadeStart;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadeEnd;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fadeTime;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TeleportFX _instance;

	[Token(Token = "0x1700007D")]
	public static TeleportFX Instance
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0xE0C1C8", Offset = "0xE0C1C8", VA = "0xE0C1C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xE0C294", Offset = "0xE0C294", VA = "0xE0C294")]
	public void PlayEffect(Vector3 position)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xE0C364", Offset = "0xE0C364", VA = "0xE0C364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B25C", Offset = "0x90B25C")]
	private IEnumerator FadeLight()
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xE0C404", Offset = "0xE0C404", VA = "0xE0C404")]
	public TeleportFX()
	{
	}
}
[Token(Token = "0x200011A")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xB5035C", Offset = "0xB5035C", VA = "0xB5035C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xB5041C", Offset = "0xB5041C", VA = "0xB5041C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xB504DC", Offset = "0xB504DC", VA = "0xB504DC")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xB509D0", Offset = "0xB509D0", VA = "0xB509D0")]
	public ChatController()
	{
	}
}
[Token(Token = "0x200011B")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7944", Offset = "0x8F7944")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170004BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0xCC27AC", Offset = "0xCC27AC", VA = "0xCC27AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0xCC281C", Offset = "0xCC281C", VA = "0xCC281C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0xCC2530", Offset = "0xCC2530", VA = "0xCC2530")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0xCC2564", Offset = "0xCC2564", VA = "0xCC2564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0xCC2568", Offset = "0xCC2568", VA = "0xCC2568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC2")]
		[Address(RVA = "0xCC27B4", Offset = "0xCC27B4", VA = "0xCC27B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xCC2440", Offset = "0xCC2440", VA = "0xCC2440")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xCC24BC", Offset = "0xCC24BC", VA = "0xCC24BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B2C0", Offset = "0x90B2C0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xCC255C", Offset = "0xCC255C", VA = "0xCC255C")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F4E64", Offset = "0x8F4E64")]
public class AmplifyColorBase : MonoBehaviour
{
	[Token(Token = "0x4000821")]
	public const int LutSize = 32;

	[Token(Token = "0x4000822")]
	public const int LutWidth = 1024;

	[Token(Token = "0x4000823")]
	public const int LutHeight = 32;

	[Token(Token = "0x4000824")]
	private const int DepthCurveLutRange = 1024;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tonemapping Tonemapper;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Exposure;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LinearWhitePoint;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA4E4", Offset = "0x8FA4E4")]
	public bool ApplyDithering;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quality QualityLevel;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BlendAmount;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture LutTexture;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture LutBlendTexture;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture MaskTexture;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseDepthMask;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DepthMaskCurve;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseVolumes;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float ExitVolumeBlendTime;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform TriggerVolumeProxy;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask VolumeCollisionMask;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera ownerCamera;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Shader shaderBase;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Shader shaderBlend;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shader shaderBlendCache;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Shader shaderMask;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Shader shaderMaskBlend;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Shader shaderDepthMask;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Shader shaderDepthMaskBlend;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Shader shaderProcessOnly;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderTexture blendCacheLut;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Texture2D defaultLut;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D depthCurveLut;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color32[] depthCurveColors;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ColorSpace colorSpace;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quality qualityLevel;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material materialBase;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material materialBlend;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Material materialBlendCache;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Material materialMask;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Material materialMaskBlend;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material materialDepthMask;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material materialDepthMaskBlend;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Material materialProcessOnly;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool blending;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float blendingTime;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float blendingTimeCountdown;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Action onFinishBlend;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AnimationCurve prevDepthMaskCurve;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool volumesBlending;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float volumesBlendingTime;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float volumesBlendingTimeCountdown;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Texture volumesLutBlendTexture;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float volumesBlendAmount;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Texture worldLUT;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AmplifyColorVolumeBase currentVolumeLut;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private RenderTexture midBlendLUT;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool blendingFromMidBlend;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private VolumeEffect worldVolumeEffects;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private VolumeEffect currentVolumeEffects;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private VolumeEffect blendVolumeEffects;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float worldExposure;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float currentExposure;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float blendExposure;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float effectVolumesBlendAdjust;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<AmplifyColorVolumeBase> enteredVolumes;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private AmplifyColorTriggerProxyBase actualTriggerProxy;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public VolumeEffectFlags EffectFlags;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private string sharedInstanceID;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool silentError;

	[Token(Token = "0x1700007E")]
	public Texture2D DefaultLut
	{
		[Token(Token = "0x6000993")]
		[Address(RVA = "0xF2E3A4", Offset = "0xF2E3A4", VA = "0xF2E3A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007F")]
	public bool IsBlending
	{
		[Token(Token = "0x6000994")]
		[Address(RVA = "0xF2E6CC", Offset = "0xF2E6CC", VA = "0xF2E6CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000080")]
	private float effectVolumesBlendAdjusted
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0xF2E6D4", Offset = "0xF2E6D4", VA = "0xF2E6D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000081")]
	public string SharedInstanceID
	{
		[Token(Token = "0x6000996")]
		[Address(RVA = "0xF2D458", Offset = "0xF2D458", VA = "0xF2D458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000082")]
	public bool WillItBlend
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0xF2E774", Offset = "0xF2E774", VA = "0xF2E774")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xF2E838", Offset = "0xF2E838", VA = "0xF2E838")]
	public void NewSharedInstanceID()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xF2E8C0", Offset = "0xF2E8C0", VA = "0xF2E8C0")]
	private void ReportMissingShaders()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xF2E940", Offset = "0xF2E940", VA = "0xF2E940")]
	private void ReportNotSupported()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xF2E9C0", Offset = "0xF2E9C0", VA = "0xF2E9C0")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xF2EA7C", Offset = "0xF2EA7C", VA = "0xF2EA7C")]
	private bool CheckShaders()
	{
		return default(bool);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xF2EAFC", Offset = "0xF2EAFC", VA = "0xF2EAFC")]
	private bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xF2EB38", Offset = "0xF2EB38", VA = "0xF2EB38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xF2EF88", Offset = "0xF2EF88", VA = "0xF2EF88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xF2F1BC", Offset = "0xF2F1BC", VA = "0xF2F1BC")]
	private void VolumesBlendTo(Texture blendTargetLUT, float blendTimeInSec)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xF2F1D8", Offset = "0xF2F1D8", VA = "0xF2F1D8")]
	public void BlendTo(Texture blendTargetLUT, float blendTimeInSec, Action onFinishBlend)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xF2F1F8", Offset = "0xF2F1F8", VA = "0xF2F1F8")]
	private void CheckCamera()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xF2F304", Offset = "0xF2F304", VA = "0xF2F304")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xF2F36C", Offset = "0xF2F36C", VA = "0xF2F36C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xF2FEC4", Offset = "0xF2FEC4", VA = "0xF2FEC4")]
	public void EnterVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xF2FF74", Offset = "0xF2FF74", VA = "0xF2FF74")]
	public void ExitVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xF2F788", Offset = "0xF2F788", VA = "0xF2F788")]
	private void UpdateVolumes()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xF30020", Offset = "0xF30020", VA = "0xF30020")]
	private void SetupShader()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xF2F060", Offset = "0xF2F060", VA = "0xF2F060")]
	private void ReleaseMaterials()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xF2E430", Offset = "0xF2E430", VA = "0xF2E430")]
	private Texture2D CreateDefaultLut()
	{
		return null;
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xF30130", Offset = "0xF30130", VA = "0xF30130")]
	private Texture2D CreateDepthCurveLut()
	{
		return null;
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xF302BC", Offset = "0xF302BC", VA = "0xF302BC")]
	private void UpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xF30454", Offset = "0xF30454", VA = "0xF30454")]
	private void CheckUpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xF30654", Offset = "0xF30654", VA = "0xF30654")]
	private void CreateHelperTextures()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xF308D8", Offset = "0xF308D8", VA = "0xF308D8")]
	private bool CheckMaterialAndShader(Material material, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xF2ED28", Offset = "0xF2ED28", VA = "0xF2ED28")]
	private bool CreateMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xF30A80", Offset = "0xF30A80", VA = "0xF30A80")]
	private void SetMaterialKeyword(string keyword, bool state)
	{
	}

	[Token(Token = "0x60009B2")]
	private void SafeRelease<T>(ref T obj) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xF2F124", Offset = "0xF2F124", VA = "0xF2F124")]
	private void ReleaseTextures()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xF30D14", Offset = "0xF30D14", VA = "0xF30D14")]
	public static bool ValidateLutDimensions(Texture lut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xF30EA8", Offset = "0xF30EA8", VA = "0xF30EA8")]
	private void UpdatePostEffectParams()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xF30F38", Offset = "0xF30F38", VA = "0xF30F38")]
	private int ComputeShaderPass()
	{
		return default(int);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xF30FBC", Offset = "0xF30FBC", VA = "0xF30FBC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xF31B80", Offset = "0xF31B80", VA = "0xF31B80")]
	public AmplifyColorBase()
	{
	}
}
[Token(Token = "0x200011D")]
[ImageEffectAllowedInSceneView]
[ImageEffectTransformsToLDR]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F4E9C", Offset = "0x8F4E9C")]
public sealed class AmplifyColorEffect : AmplifyColorBase
{
	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xF31D88", Offset = "0xF31D88", VA = "0xF31D88")]
	public AmplifyColorEffect()
	{
	}
}
[Token(Token = "0x200011E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4F08", Offset = "0x8F4F08")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4F08", Offset = "0x8F4F08")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F4F08", Offset = "0x8F4F08")]
public class AmplifyColorRenderMask : AmplifyColorRenderMaskBase
{
	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xF31D8C", Offset = "0xF31D8C", VA = "0xF31D8C")]
	public AmplifyColorRenderMask()
	{
	}
}
[Token(Token = "0x200011F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F4FC8", Offset = "0x8F4FC8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F4FC8", Offset = "0x8F4FC8")]
public class AmplifyColorRenderMaskBase : MonoBehaviour
{
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA564", Offset = "0x8FA564")]
	public Color ClearColor;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA59C", Offset = "0x8FA59C")]
	public RenderLayer[] RenderLayers;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA5D4", Offset = "0x8FA5D4")]
	public bool DebugMask;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera referenceCamera;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera maskCamera;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AmplifyColorBase colorEffect;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int width;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int height;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture maskTexture;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Shader colorMaskShader;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool singlePassStereo;

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xF31E00", Offset = "0xF31E00", VA = "0xF31E00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xF3204C", Offset = "0xF3204C", VA = "0xF3204C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xF32070", Offset = "0xF32070", VA = "0xF32070")]
	private void DestroyCamera()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xF3213C", Offset = "0xF3213C", VA = "0xF3213C")]
	private void DestroyRenderTextures()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xF321F4", Offset = "0xF321F4", VA = "0xF321F4")]
	private void UpdateRenderTextures(bool singlePassStereo)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xF32510", Offset = "0xF32510", VA = "0xF32510")]
	private void UpdateCameraProperties()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xF32668", Offset = "0xF32668", VA = "0xF32668")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xF31D90", Offset = "0xF31D90", VA = "0xF31D90")]
	public AmplifyColorRenderMaskBase()
	{
	}
}
[Token(Token = "0x2000120")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5060", Offset = "0x8F5060")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5060", Offset = "0x8F5060")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5060", Offset = "0x8F5060")]
public class AmplifyColorTriggerProxy : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidBody;

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xF32CE4", Offset = "0xF32CE4", VA = "0xF32CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xF32DCC", Offset = "0xF32DCC", VA = "0xF32DCC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xF32EB8", Offset = "0xF32EB8", VA = "0xF32EB8")]
	public AmplifyColorTriggerProxy()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5110", Offset = "0x8F5110")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5110", Offset = "0x8F5110")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5110", Offset = "0x8F5110")]
public class AmplifyColorTriggerProxy2D : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircleCollider2D circleCollider;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody2D rigidBody;

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xF32EC8", Offset = "0xF32EC8", VA = "0xF32EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xF32FB0", Offset = "0xF32FB0", VA = "0xF32FB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xF3309C", Offset = "0xF3309C", VA = "0xF3309C")]
	public AmplifyColorTriggerProxy2D()
	{
	}
}
[Token(Token = "0x2000122")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F51C0", Offset = "0x8F51C0")]
public class AmplifyColorTriggerProxyBase : MonoBehaviour
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Reference;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AmplifyColorBase OwnerEffect;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xF32EC0", Offset = "0xF32EC0", VA = "0xF32EC0")]
	public AmplifyColorTriggerProxyBase()
	{
	}
}
[Token(Token = "0x2000123")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F51F8", Offset = "0x8F51F8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F51F8", Offset = "0x8F51F8")]
public class AmplifyColorVolume : AmplifyColorVolumeBase
{
	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xF330A4", Offset = "0xF330A4", VA = "0xF330A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xF331F0", Offset = "0xF331F0", VA = "0xF331F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xF3333C", Offset = "0xF3333C", VA = "0xF3333C")]
	public AmplifyColorVolume()
	{
	}
}
[Token(Token = "0x2000124")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5280", Offset = "0x8F5280")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5280", Offset = "0x8F5280")]
public class AmplifyColorVolume2D : AmplifyColorVolumeBase
{
	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xF333B4", Offset = "0xF333B4", VA = "0xF333B4")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xF33500", Offset = "0xF33500", VA = "0xF33500")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xF3364C", Offset = "0xF3364C", VA = "0xF3364C")]
	public AmplifyColorVolume2D()
	{
	}
}
[Token(Token = "0x2000125")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5308", Offset = "0x8F5308")]
public class AmplifyColorVolumeBase : MonoBehaviour
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D LutTexture;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Exposure;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float EnterBlendTime;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Priority;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ShowInSceneView;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public VolumeEffectContainer EffectContainer;

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xF33650", Offset = "0xF33650", VA = "0xF33650")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xF338BC", Offset = "0xF338BC", VA = "0xF338BC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xF33340", Offset = "0xF33340", VA = "0xF33340")]
	public AmplifyColorVolumeBase()
	{
	}
}
[Token(Token = "0x2000126")]
public static class AudioStreamDemoSupport
{
	[Token(Token = "0x2000629")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7954", Offset = "0x8F7954")]
	private sealed class <GetFilenameFromStreamingAssets>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filename;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<string> newDestination;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <sourceFilepath>5__2;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AndroidJavaClass <jcEnvironment>5__3;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AndroidJavaObject <joExDir>5__4;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <destinationPath>5__5;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityWebRequest <www>5__6;

		[Token(Token = "0x170004BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0xE77E30", Offset = "0xE77E30", VA = "0xE77E30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ECC")]
			[Address(RVA = "0xE77EA0", Offset = "0xE77EA0", VA = "0xE77EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EC4")]
		[Address(RVA = "0xE77638", Offset = "0xE77638", VA = "0xE77638")]
		[DebuggerHidden]
		public <GetFilenameFromStreamingAssets>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002EC5")]
		[Address(RVA = "0xE77664", Offset = "0xE77664", VA = "0xE77664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0xE77934", Offset = "0xE77934", VA = "0xE77934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0xE77874", Offset = "0xE77874", VA = "0xE77874")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0xE777B4", Offset = "0xE777B4", VA = "0xE777B4")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6002EC9")]
		[Address(RVA = "0xE776F4", Offset = "0xE776F4", VA = "0xE776F4")]
		private void <>m__Finally3()
		{
		}

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0xE77E38", Offset = "0xE77E38", VA = "0xE77E38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xE775A0", Offset = "0xE775A0", VA = "0xE775A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B324", Offset = "0x90B324")]
	public static IEnumerator GetFilenameFromStreamingAssets(string filename, Action<string> newDestination)
	{
		return null;
	}
}
[Token(Token = "0x2000127")]
public class AudioStreamMainScene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200062A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7964", Offset = "0x8F7964")]
	private sealed class <>c
	{
		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, bool> <>9__24_0;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<string, bool> <>9__24_1;

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0xB1EBD4", Offset = "0xB1EBD4", VA = "0xB1EBD4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0xB1EBDC", Offset = "0xB1EBDC", VA = "0xB1EBDC")]
		internal bool <OnGUI>b__24_0(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0xB1EC48", Offset = "0xB1EC48", VA = "0xB1EC48")]
		internal bool <OnGUI>b__24_1(string s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildSettings buildSettings;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> sceneNames;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioStreamMainScene instance;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int dpiMult;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static GUIStyle _guiStyleLabelSmall;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GUIStyle _guiStyleLabelMiddle;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static GUIStyle _guiStyleLabelNormal;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static GUIStyle _guiStyleButtonNormal;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int selectedSceneGroup;

	[Token(Token = "0x17000083")]
	public static GUIStyle guiStyleLabelSmall
	{
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xB1C3F4", Offset = "0xB1C3F4", VA = "0xB1C3F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xB1D860", Offset = "0xB1D860", VA = "0xB1D860")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public static GUIStyle guiStyleLabelMiddle
	{
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xB1C5C8", Offset = "0xB1C5C8", VA = "0xB1C5C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xB1D8CC", Offset = "0xB1D8CC", VA = "0xB1D8CC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public static GUIStyle guiStyleLabelNormal
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xB1C7A0", Offset = "0xB1C7A0", VA = "0xB1C7A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xB1D938", Offset = "0xB1D938", VA = "0xB1D938")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public static GUIStyle guiStyleButtonNormal
	{
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xB1C978", Offset = "0xB1C978", VA = "0xB1C978")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xB1D9A4", Offset = "0xB1D9A4", VA = "0xB1D9A4")]
		protected set
		{
		}
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xB1D4D4", Offset = "0xB1D4D4", VA = "0xB1D4D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xB1D728", Offset = "0xB1D728", VA = "0xB1D728")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xB1D7B8", Offset = "0xB1D7B8", VA = "0xB1D7B8")]
	private static void ResetStyles()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xB1DA10", Offset = "0xB1DA10", VA = "0xB1DA10")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xB1EA3C", Offset = "0xB1EA3C", VA = "0xB1EA3C")]
	public AudioStreamMainScene()
	{
	}
}
[Token(Token = "0x2000128")]
[ExecuteInEditMode]
public class AudioStreamDemo : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStreamBase[] audioStreams;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Dictionary<string, object>> tags;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string latencyChangedMessage;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int startingDspBufferSize;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StringBuilder gauge;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xE73D50", Offset = "0xE73D50", VA = "0xE73D50")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xE73DCC", Offset = "0xE73DCC", VA = "0xE73DCC")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xE73E60", Offset = "0xE73E60", VA = "0xE73E60")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xE73EDC", Offset = "0xE73EDC", VA = "0xE73EDC")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xE742A0", Offset = "0xE742A0", VA = "0xE742A0")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xE74318", Offset = "0xE74318", VA = "0xE74318")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xE744E0", Offset = "0xE744E0", VA = "0xE744E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xE746A4", Offset = "0xE746A4", VA = "0xE746A4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xE774CC", Offset = "0xE774CC", VA = "0xE774CC")]
	public AudioStreamDemo()
	{
	}
}
[Token(Token = "0x2000129")]
public class AudioStreamMinimalStressTest : MonoBehaviour
{
	[Token(Token = "0x200062B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7974", Offset = "0x8F7974")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamMinimalStressTest <>4__this;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <testObjectsCount>5__2;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioStreamMinimal <as>5__4;

		[Token(Token = "0x170004C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0xB26E4C", Offset = "0xB26E4C", VA = "0xB26E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ED6")]
			[Address(RVA = "0xB26EBC", Offset = "0xB26EBC", VA = "0xB26EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0xB257A0", Offset = "0xB257A0", VA = "0xB257A0")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0xB2695C", Offset = "0xB2695C", VA = "0xB2695C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0xB26960", Offset = "0xB26960", VA = "0xB26960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0xB26E54", Offset = "0xB26E54", VA = "0xB26E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AudioStreamMinimal> audioStreams;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool allReady;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xB25338", Offset = "0xB25338", VA = "0xB25338")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xB253B4", Offset = "0xB253B4", VA = "0xB253B4")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xB25448", Offset = "0xB25448", VA = "0xB25448")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xB254C4", Offset = "0xB254C4", VA = "0xB254C4")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xB256B4", Offset = "0xB256B4", VA = "0xB256B4")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xB2572C", Offset = "0xB2572C", VA = "0xB2572C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B388", Offset = "0x90B388")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xB257CC", Offset = "0xB257CC", VA = "0xB257CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xB2689C", Offset = "0xB2689C", VA = "0xB2689C")]
	public AudioStreamMinimalStressTest()
	{
	}
}
[Token(Token = "0x200012A")]
public class AudioStreamStressTest : MonoBehaviour
{
	[Token(Token = "0x200062C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7984", Offset = "0x8F7984")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamStressTest <>4__this;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <testObjectsCount>5__2;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private global::AudioStream.AudioStream <as>5__4;

		[Token(Token = "0x170004C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0xB28FC8", Offset = "0xB28FC8", VA = "0xB28FC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0xB29038", Offset = "0xB29038", VA = "0xB29038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0xB278F4", Offset = "0xB278F4", VA = "0xB278F4")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0xB28AB0", Offset = "0xB28AB0", VA = "0xB28AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0xB28AB4", Offset = "0xB28AB4", VA = "0xB28AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0xB28FD0", Offset = "0xB28FD0", VA = "0xB28FD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<global::AudioStream.AudioStream> audioStreams;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool allReady;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xB2748C", Offset = "0xB2748C", VA = "0xB2748C")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xB27508", Offset = "0xB27508", VA = "0xB27508")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xB2759C", Offset = "0xB2759C", VA = "0xB2759C")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xB27618", Offset = "0xB27618", VA = "0xB27618")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xB27808", Offset = "0xB27808", VA = "0xB27808")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xB27880", Offset = "0xB27880", VA = "0xB27880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B3EC", Offset = "0x90B3EC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xB27920", Offset = "0xB27920", VA = "0xB27920")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xB289F0", Offset = "0xB289F0", VA = "0xB289F0")]
	public AudioStreamStressTest()
	{
	}
}
[Token(Token = "0x200012B")]
[ExecuteInEditMode]
public class AudioStreamDownloadDemo : MonoBehaviour
{
	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStreamDownload asDownload;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource userAudioSource;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool as_isPaused;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool playClipAfterDownload;

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xE77EA8", Offset = "0xE77EA8", VA = "0xE77EA8")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xE77F24", Offset = "0xE77F24", VA = "0xE77F24")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xE77FB8", Offset = "0xE77FB8", VA = "0xE77FB8")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xE7803C", Offset = "0xE7803C", VA = "0xE7803C")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xE7822C", Offset = "0xE7822C", VA = "0xE7822C")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xE782A4", Offset = "0xE782A4", VA = "0xE782A4")]
	public void OnAudioClipCreated(string goName, AudioClip newAudioClip)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xE78390", Offset = "0xE78390", VA = "0xE78390")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xE7A118", Offset = "0xE7A118", VA = "0xE7A118")]
	public AudioStreamDownloadDemo()
	{
	}
}
[Token(Token = "0x200012C")]
public class AudioStreamDownloadStressTest : MonoBehaviour
{
	[Token(Token = "0x200062D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7994", Offset = "0x8F7994")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string goName;

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0xE7A774", Offset = "0xE7A774", VA = "0xE7A774")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0xE7C164", Offset = "0xE7C164", VA = "0xE7C164")]
		internal bool <OnAudioClipCreated>b__0(AudioStreamDownload f)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200062E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F79A4", Offset = "0x8F79A4")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamDownloadStressTest <>4__this;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <testObjectsCount>5__2;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <go>5__4;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioStreamDownload <asd>5__5;

		[Token(Token = "0x170004C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0xE7C79C", Offset = "0xE7C79C", VA = "0xE7C79C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0xE7C80C", Offset = "0xE7C80C", VA = "0xE7C80C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0xE7A7F0", Offset = "0xE7A7F0", VA = "0xE7A7F0")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0xE7C1A4", Offset = "0xE7C1A4", VA = "0xE7C1A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0xE7C1A8", Offset = "0xE7C1A8", VA = "0xE7C1A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0xE7C7A4", Offset = "0xE7C7A4", VA = "0xE7C7A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AudioStreamDownload> audioStreamDownloads;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool playClipAfterDecoding;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool overwriteCache;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool allReady;

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xE7A1B8", Offset = "0xE7A1B8", VA = "0xE7A1B8")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xE7A234", Offset = "0xE7A234", VA = "0xE7A234")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xE7A2C8", Offset = "0xE7A2C8", VA = "0xE7A2C8")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xE7A344", Offset = "0xE7A344", VA = "0xE7A344")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xE7A534", Offset = "0xE7A534", VA = "0xE7A534")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xE7A5AC", Offset = "0xE7A5AC", VA = "0xE7A5AC")]
	public void OnAudioClipCreated(string goName, AudioClip newAudioClip)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xE7A77C", Offset = "0xE7A77C", VA = "0xE7A77C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B450", Offset = "0x90B450")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xE7A81C", Offset = "0xE7A81C", VA = "0xE7A81C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xE7A820", Offset = "0xE7A820", VA = "0xE7A820")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xE7C09C", Offset = "0xE7C09C", VA = "0xE7C09C")]
	public AudioStreamDownloadStressTest()
	{
	}
}
[Token(Token = "0x200012D")]
[ExecuteInEditMode]
public class AudioStreamInput_iOSDemo : MonoBehaviour
{
	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F79B4", Offset = "0x8F79B4")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamInput_iOSDemo <>4__this;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <msg>5__2;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] <inputs>5__3;

		[Token(Token = "0x170004C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EE8")]
			[Address(RVA = "0xB1D45C", Offset = "0xB1D45C", VA = "0xB1D45C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EEA")]
			[Address(RVA = "0xB1D4CC", Offset = "0xB1D4CC", VA = "0xB1D4CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0xB1B0D4", Offset = "0xB1B0D4", VA = "0xB1B0D4")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0xB1CC28", Offset = "0xB1CC28", VA = "0xB1CC28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0xB1CC2C", Offset = "0xB1CC2C", VA = "0xB1CC2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0xB1D464", Offset = "0xB1D464", VA = "0xB1D464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStreamInput_iOS audioStreamInput_iOS;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> availableInputs;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> inputStreamsStatesFromEvents;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selectedInput;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousSelectedInput;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint dspBufferLength_new;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint dspBufferCount_new;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int outputChannels;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] recBuffer;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> signalChannelsEnergies;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RMSPerChannelToTransforms rmsPerChannelToTransforms;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] cubes;

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xB1AE5C", Offset = "0xB1AE5C", VA = "0xB1AE5C")]
	public void OnRecordingStarted(string goName)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xB1AED8", Offset = "0xB1AED8", VA = "0xB1AED8")]
	public void OnRecordingPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xB1AF6C", Offset = "0xB1AF6C", VA = "0xB1AF6C")]
	public void OnRecordingStopped(string goName)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xB1AFE8", Offset = "0xB1AFE8", VA = "0xB1AFE8")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xB1B060", Offset = "0xB1B060", VA = "0xB1B060")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B4B4", Offset = "0x90B4B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xB1B100", Offset = "0xB1B100", VA = "0xB1B100")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xB1B4D4", Offset = "0xB1B4D4", VA = "0xB1B4D4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xB1CB50", Offset = "0xB1CB50", VA = "0xB1CB50")]
	public AudioStreamInput_iOSDemo()
	{
	}
}
[Token(Token = "0x200012E")]
[ExecuteInEditMode]
public class AudioStreamInput2DDemo : MonoBehaviour
{
	[Token(Token = "0x2000630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F79C4", Offset = "0x8F79C4")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamInput2DDemo <>4__this;

		[Token(Token = "0x170004C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0xE7EC74", Offset = "0xE7EC74", VA = "0xE7EC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0xE7ECE4", Offset = "0xE7ECE4", VA = "0xE7ECE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0xE7CA8C", Offset = "0xE7CA8C", VA = "0xE7CA8C")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0xE7E490", Offset = "0xE7E490", VA = "0xE7E490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0xE7E494", Offset = "0xE7E494", VA = "0xE7E494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0xE7EC7C", Offset = "0xE7EC7C", VA = "0xE7EC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStreamInput2D audioStreamInput;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> availableInputs;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> inputStreamsStatesFromEvents;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selectedInput;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousSelectedInput;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint dspBufferLength_new;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint dspBufferCount_new;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int outputChannels;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] recBuffer;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> signalChannelsEnergies;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RMSPerChannelToTransforms rmsPerChannelToTransforms;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] cubes;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xE7C814", Offset = "0xE7C814", VA = "0xE7C814")]
	public void OnRecordingStarted(string goName)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xE7C890", Offset = "0xE7C890", VA = "0xE7C890")]
	public void OnRecordingPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xE7C924", Offset = "0xE7C924", VA = "0xE7C924")]
	public void OnRecordingStopped(string goName)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xE7C9A0", Offset = "0xE7C9A0", VA = "0xE7C9A0")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xE7CA18", Offset = "0xE7CA18", VA = "0xE7CA18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B518", Offset = "0x90B518")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xE7CAB8", Offset = "0xE7CAB8", VA = "0xE7CAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xE7CE10", Offset = "0xE7CE10", VA = "0xE7CE10")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xE7E3B8", Offset = "0xE7E3B8", VA = "0xE7E3B8")]
	public AudioStreamInput2DDemo()
	{
	}
}
[Token(Token = "0x200012F")]
[ExecuteInEditMode]
public class AudioStreamInputDemo : MonoBehaviour
{
	[Token(Token = "0x2000631")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F79D4", Offset = "0x8F79D4")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamInputDemo <>4__this;

		[Token(Token = "0x170004CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EF4")]
			[Address(RVA = "0xE80DB8", Offset = "0xE80DB8", VA = "0xE80DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EF6")]
			[Address(RVA = "0xE80E28", Offset = "0xE80E28", VA = "0xE80E28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0xE7EF64", Offset = "0xE7EF64", VA = "0xE7EF64")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0xE805D4", Offset = "0xE805D4", VA = "0xE805D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0xE805D8", Offset = "0xE805D8", VA = "0xE805D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0xE80DC0", Offset = "0xE80DC0", VA = "0xE80DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStreamInput audioStreamInput;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> availableInputs;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> inputStreamsStatesFromEvents;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selectedInput;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousSelectedInput;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint dspBufferLength_new;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint dspBufferCount_new;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int outputChannels;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] recBuffer;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> signalChannelsEnergies;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RMSPerChannelToTransforms rmsPerChannelToTransforms;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] cubes;

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xE7ECEC", Offset = "0xE7ECEC", VA = "0xE7ECEC")]
	public void OnRecordingStarted(string goName)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xE7ED68", Offset = "0xE7ED68", VA = "0xE7ED68")]
	public void OnRecordingPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xE7EDFC", Offset = "0xE7EDFC", VA = "0xE7EDFC")]
	public void OnRecordingStopped(string goName)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xE7EE78", Offset = "0xE7EE78", VA = "0xE7EE78")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xE7EEF0", Offset = "0xE7EEF0", VA = "0xE7EEF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B57C", Offset = "0x90B57C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xE7EF90", Offset = "0xE7EF90", VA = "0xE7EF90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xE7F2E8", Offset = "0xE7F2E8", VA = "0xE7F2E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xE804FC", Offset = "0xE804FC", VA = "0xE804FC")]
	public AudioStreamInputDemo()
	{
	}
}
[Token(Token = "0x2000130")]
public class RMSPerChannelToTransforms : MonoBehaviour
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int channelCount;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] scale;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion[] rotation;

	[Token(Token = "0x40008C6")]
	private const float zeroOffset = 1.5849E-13f;

	[Token(Token = "0x40008C7")]
	private const float refLevel = 0.70710677f;

	[Token(Token = "0x40008C8")]
	private const float minDB = -60f;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] squareSum;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] sampleCount;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] yRot;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xAA54D8", Offset = "0xAA54D8", VA = "0xAA54D8")]
	public void SetChannels(int value)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xAA5598", Offset = "0xAA5598", VA = "0xAA5598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xAA58FC", Offset = "0xAA58FC", VA = "0xAA58FC")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xAA5A7C", Offset = "0xAA5A7C", VA = "0xAA5A7C")]
	public RMSPerChannelToTransforms()
	{
	}
}
[Token(Token = "0x2000131")]
[ExecuteInEditMode]
public class AudioStreamMemoryDemo : MonoBehaviour
{
	[Token(Token = "0x2000632")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F79E4", Offset = "0x8F79E4")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filepath;

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0xB221F8", Offset = "0xB221F8", VA = "0xB221F8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0xB22200", Offset = "0xB22200", VA = "0xB22200")]
		internal void <Start>b__0(string newDestination)
		{
		}
	}

	[Token(Token = "0x2000633")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F79F4", Offset = "0x8F79F4")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamMemoryDemo <>4__this;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass12_0 <>8__1;

		[Token(Token = "0x170004CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0xB224A0", Offset = "0xB224A0", VA = "0xB224A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0xB22510", Offset = "0xB22510", VA = "0xB22510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0xB20C00", Offset = "0xB20C00", VA = "0xB20C00")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0xB22208", Offset = "0xB22208", VA = "0xB22208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0xB2220C", Offset = "0xB2220C", VA = "0xB2220C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0xB224A8", Offset = "0xB224A8", VA = "0xB224A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStreamMemory asMemory;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource userAudioSource;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private byte[] bytes;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle handle;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool as_isPaused;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool playClipAfterDecoding;

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xB206A4", Offset = "0xB206A4", VA = "0xB206A4")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xB20720", Offset = "0xB20720", VA = "0xB20720")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xB207BC", Offset = "0xB207BC", VA = "0xB207BC")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xB20838", Offset = "0xB20838", VA = "0xB20838")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xB20A28", Offset = "0xB20A28", VA = "0xB20A28")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xB20AA0", Offset = "0xB20AA0", VA = "0xB20AA0")]
	public void OnAudioClipCreated(string goName, AudioClip newAudioClip)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xB20B8C", Offset = "0xB20B8C", VA = "0xB20B8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B5E0", Offset = "0x90B5E0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xB20C2C", Offset = "0xB20C2C", VA = "0xB20C2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xB20C6C", Offset = "0xB20C6C", VA = "0xB20C6C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xB22158", Offset = "0xB22158", VA = "0xB22158")]
	public AudioStreamMemoryDemo()
	{
	}
}
[Token(Token = "0x2000132")]
public class AudioStreamMemoryStressTest : MonoBehaviour
{
	[Token(Token = "0x2000634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A04", Offset = "0x8F7A04")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string goName;

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0xB22AD4", Offset = "0xB22AD4", VA = "0xB22AD4")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0xB245E4", Offset = "0xB245E4", VA = "0xB245E4")]
		internal bool <OnAudioClipCreated>b__0(AudioStreamMemory f)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A14", Offset = "0x8F7A14")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filepath;

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0xB245D4", Offset = "0xB245D4", VA = "0xB245D4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0xB245DC", Offset = "0xB245DC", VA = "0xB245DC")]
		internal void <Start>b__0(string newDestination)
		{
		}
	}

	[Token(Token = "0x2000636")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A24", Offset = "0x8F7A24")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamMemoryStressTest <>4__this;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass11_0 <>8__1;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <testObjectsCount>5__2;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <go>5__4;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioStreamMemory <asm>5__5;

		[Token(Token = "0x170004CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F06")]
			[Address(RVA = "0xB25040", Offset = "0xB25040", VA = "0xB25040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F08")]
			[Address(RVA = "0xB250B0", Offset = "0xB250B0", VA = "0xB250B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0xB22B50", Offset = "0xB22B50", VA = "0xB22B50")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0xB248C0", Offset = "0xB248C0", VA = "0xB248C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0xB248C4", Offset = "0xB248C4", VA = "0xB248C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0xB25048", Offset = "0xB25048", VA = "0xB25048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A34", Offset = "0x8F7A34")]
	private sealed class <PlayAllClips>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamMemoryStressTest <>4__this;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AudioStreamMemory>.Enumerator <>7__wrap1;

		[Token(Token = "0x170004D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F0D")]
			[Address(RVA = "0xB24848", Offset = "0xB24848", VA = "0xB24848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F0F")]
			[Address(RVA = "0xB248B8", Offset = "0xB248B8", VA = "0xB248B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0xB22C30", Offset = "0xB22C30", VA = "0xB22C30")]
		[DebuggerHidden]
		public <PlayAllClips>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0xB24624", Offset = "0xB24624", VA = "0xB24624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0xB24698", Offset = "0xB24698", VA = "0xB24698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0xB24640", Offset = "0xB24640", VA = "0xB24640")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0xB24850", Offset = "0xB24850", VA = "0xB24850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A44", Offset = "0x8F7A44")]
	private sealed class <StopAllClips>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamMemoryStressTest <>4__this;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AudioStreamMemory>.Enumerator <>7__wrap1;

		[Token(Token = "0x170004D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F14")]
			[Address(RVA = "0xB252C0", Offset = "0xB252C0", VA = "0xB252C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F16")]
			[Address(RVA = "0xB25330", Offset = "0xB25330", VA = "0xB25330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0xB22CD0", Offset = "0xB22CD0", VA = "0xB22CD0")]
		[DebuggerHidden]
		public <StopAllClips>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0xB250B8", Offset = "0xB250B8", VA = "0xB250B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0xB2512C", Offset = "0xB2512C", VA = "0xB2512C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0xB250D4", Offset = "0xB250D4", VA = "0xB250D4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0xB252C8", Offset = "0xB252C8", VA = "0xB252C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AudioStreamMemory> audioStreamMemories;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private byte[] bytes;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GCHandle memoryHandle;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool playClipAfterDecoding;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool allReady;

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xB22518", Offset = "0xB22518", VA = "0xB22518")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xB22594", Offset = "0xB22594", VA = "0xB22594")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xB22628", Offset = "0xB22628", VA = "0xB22628")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xB226A4", Offset = "0xB226A4", VA = "0xB226A4")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xB22894", Offset = "0xB22894", VA = "0xB22894")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xB2290C", Offset = "0xB2290C", VA = "0xB2290C")]
	public void OnAudioClipCreated(string goName, AudioClip newAudioClip)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xB22ADC", Offset = "0xB22ADC", VA = "0xB22ADC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B644", Offset = "0x90B644")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xB22B7C", Offset = "0xB22B7C", VA = "0xB22B7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xB22BBC", Offset = "0xB22BBC", VA = "0xB22BBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B6A8", Offset = "0x90B6A8")]
	private IEnumerator PlayAllClips()
	{
		return null;
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xB22C5C", Offset = "0xB22C5C", VA = "0xB22C5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B70C", Offset = "0x90B70C")]
	private IEnumerator StopAllClips()
	{
		return null;
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xB22CFC", Offset = "0xB22CFC", VA = "0xB22CFC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xB2450C", Offset = "0xB2450C", VA = "0xB2450C")]
	public AudioStreamMemoryStressTest()
	{
	}
}
[Token(Token = "0x2000133")]
[ExecuteInEditMode]
public class AudioStreamProxySettingsDemo : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	public const string prefs_prefix = "AudioStreamDemo_";

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xB26EC4", Offset = "0xB26EC4", VA = "0xB26EC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xB26FAC", Offset = "0xB26FAC", VA = "0xB26FAC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xB27484", Offset = "0xB27484", VA = "0xB27484")]
	public AudioStreamProxySettingsDemo()
	{
	}
}
[Token(Token = "0x2000134")]
[ExecuteInEditMode]
public class IcecastSourceDemo : MonoBehaviour
{
	[Token(Token = "0x2000639")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A54", Offset = "0x8F7A54")]
	private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IcecastSourceDemo <>4__this;

		[Token(Token = "0x170004D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F1A")]
			[Address(RVA = "0xC614E4", Offset = "0xC614E4", VA = "0xC614E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F1C")]
			[Address(RVA = "0xC61554", Offset = "0xC61554", VA = "0xC61554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0xC5DDCC", Offset = "0xC5DDCC", VA = "0xC5DDCC")]
		[DebuggerHidden]
		public <Start>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0xC61154", Offset = "0xC61154", VA = "0xC61154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F19")]
		[Address(RVA = "0xC61158", Offset = "0xC61158", VA = "0xC61158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0xC614EC", Offset = "0xC614EC", VA = "0xC614EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public global::AudioStream.AudioStream audioStream;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioStreamInput2D audioStreamInput2D;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IcecastSource icecastSource;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> availableInputs;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int selectedInput;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int previousSelectedInput;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, string> serverStatesFromEvents;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, Dictionary<string, object>> tags;

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xC5D41C", Offset = "0xC5D41C", VA = "0xC5D41C")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xC5D498", Offset = "0xC5D498", VA = "0xC5D498")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xC5D52C", Offset = "0xC5D52C", VA = "0xC5D52C")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xC5D5A8", Offset = "0xC5D5A8", VA = "0xC5D5A8")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xC5D96C", Offset = "0xC5D96C", VA = "0xC5D96C")]
	public void OnError_Audio(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xC5D9E4", Offset = "0xC5D9E4", VA = "0xC5D9E4")]
	public void OnRecordingStarted(string goName)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xC5DA60", Offset = "0xC5DA60", VA = "0xC5DA60")]
	public void OnRecordingPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xC5DAF4", Offset = "0xC5DAF4", VA = "0xC5DAF4")]
	public void OnRecordingStopped(string goName)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xC5DB70", Offset = "0xC5DB70", VA = "0xC5DB70")]
	public void OnError_Input(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xC5DBE8", Offset = "0xC5DBE8", VA = "0xC5DBE8")]
	public void OnServerConnected(string goName)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xC5DC64", Offset = "0xC5DC64", VA = "0xC5DC64")]
	public void OnServerDisconnected(string goName)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xC5DCE0", Offset = "0xC5DCE0", VA = "0xC5DCE0")]
	public void OnError_Network(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xC5DD58", Offset = "0xC5DD58", VA = "0xC5DD58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B770", Offset = "0x90B770")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xC5DDF8", Offset = "0xC5DDF8", VA = "0xC5DDF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xC61074", Offset = "0xC61074", VA = "0xC61074")]
	public IcecastSourceDemo()
	{
	}
}
[Token(Token = "0x2000135")]
[ExecuteInEditMode]
public class MultichannelOutputDemo : MonoBehaviour
{
	[Token(Token = "0x200063A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A64", Offset = "0x8F7A64")]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultichannelOutputDemo <>4__this;

		[Token(Token = "0x170004D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F20")]
			[Address(RVA = "0xC0D0D8", Offset = "0xC0D0D8", VA = "0xC0D0D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F22")]
			[Address(RVA = "0xC0D148", Offset = "0xC0D148", VA = "0xC0D148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0xC0BA7C", Offset = "0xC0BA7C", VA = "0xC0BA7C")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0xC0CC54", Offset = "0xC0CC54", VA = "0xC0CC54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0xC0CC58", Offset = "0xC0CC58", VA = "0xC0CC58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0xC0D0E0", Offset = "0xC0D0E0", VA = "0xC0D0E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200063B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A74", Offset = "0x8F7A74")]
	private sealed class <>c
	{
		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<int, string> <>9__15_0;

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0xC0CBD0", Offset = "0xC0CBD0", VA = "0xC0CBD0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0xC0CBD8", Offset = "0xC0CBD8", VA = "0xC0CBD8")]
		internal string <OnGUI>b__15_0(int s)
		{
			return null;
		}
	}

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> availableOutputs;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> availableOutputsChannels;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSourceOutputDevice audioSourceOutput;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FA61C", Offset = "0x8FA61C")]
	public float outputLevel;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float previousOutputLevel;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, string> redirectionStatesFromEvents;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int selectedOutput;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int previousSelectedOutput;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int selectedOutputChannel;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int previousSelectedOutputChannel;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xC0B740", Offset = "0xC0B740", VA = "0xC0B740")]
	private void SetCustomMixMatrix()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xC0B898", Offset = "0xC0B898", VA = "0xC0B898")]
	public void OnRedirectionStarted(string goName)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xC0B914", Offset = "0xC0B914", VA = "0xC0B914")]
	public void OnRedirectionStopped(string goName)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xC0B990", Offset = "0xC0B990", VA = "0xC0B990")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xC0BA08", Offset = "0xC0BA08", VA = "0xC0BA08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B7D4", Offset = "0x90B7D4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xC0BAA8", Offset = "0xC0BAA8", VA = "0xC0BAA8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xC0CA9C", Offset = "0xC0CA9C", VA = "0xC0CA9C")]
	public MultichannelOutputDemo()
	{
	}
}
[Token(Token = "0x2000136")]
public class OutputDeviceDemo : MonoBehaviour
{
	[Token(Token = "0x200063C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A84", Offset = "0x8F7A84")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OutputDeviceDemo <>4__this;

		[Token(Token = "0x170004D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F29")]
			[Address(RVA = "0xC3A32C", Offset = "0xC3A32C", VA = "0xC3A32C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0xC3A39C", Offset = "0xC3A39C", VA = "0xC3A39C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0xC37E7C", Offset = "0xC37E7C", VA = "0xC37E7C")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0xC39F18", Offset = "0xC39F18", VA = "0xC39F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0xC39F1C", Offset = "0xC39F1C", VA = "0xC39F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0xC3A334", Offset = "0xC3A334", VA = "0xC3A334", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> availableOutputs;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public global::AudioStream.AudioStream audioStream;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioStreamMinimal audioStreamMinimal;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSourceOutputDevice audioSourceOutput;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> redirectionStatesFromEvents;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int selectedOutput;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int previousSelectedOutput;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xC378A4", Offset = "0xC378A4", VA = "0xC378A4")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xC37920", Offset = "0xC37920", VA = "0xC37920")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xC379B4", Offset = "0xC379B4", VA = "0xC379B4")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xC37A30", Offset = "0xC37A30", VA = "0xC37A30")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xC37C20", Offset = "0xC37C20", VA = "0xC37C20")]
	public void OnError_Audio(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xC37C98", Offset = "0xC37C98", VA = "0xC37C98")]
	public void OnRedirectionStarted(string goName)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xC37D14", Offset = "0xC37D14", VA = "0xC37D14")]
	public void OnRedirectionStopped(string goName)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xC37D90", Offset = "0xC37D90", VA = "0xC37D90")]
	public void OnError_Redirection(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xC37E08", Offset = "0xC37E08", VA = "0xC37E08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B838", Offset = "0x90B838")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xC37EA8", Offset = "0xC37EA8", VA = "0xC37EA8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xC39E38", Offset = "0xC39E38", VA = "0xC39E38")]
	public OutputDeviceDemo()
	{
	}
}
[Token(Token = "0x2000137")]
[ExecuteInEditMode]
public class OutputDevicePrefabDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200063D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7A94", Offset = "0x8F7A94")]
	private sealed class <>c
	{
		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<AudioSourceOutputDevice, string> <>9__7_0;

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0xC3AF6C", Offset = "0xC3AF6C", VA = "0xC3AF6C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0xC3AF74", Offset = "0xC3AF74", VA = "0xC3AF74")]
		internal string <OnGUI>b__7_0(AudioSourceOutputDevice i)
		{
			return null;
		}
	}

	[Token(Token = "0x200063E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7AA4", Offset = "0x8F7AA4")]
	private sealed class <InstantiatieAndPlayAudioSourceOutputDevicePrefab>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OutputDevicePrefabDemo <>4__this;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int onOutputDevice;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSourceOutputDevice <asod>5__2;

		[Token(Token = "0x170004DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F32")]
			[Address(RVA = "0xC3B260", Offset = "0xC3B260", VA = "0xC3B260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F34")]
			[Address(RVA = "0xC3B2D0", Offset = "0xC3B2D0", VA = "0xC3B2D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0xC3AE2C", Offset = "0xC3AE2C", VA = "0xC3AE2C")]
		[DebuggerHidden]
		public <InstantiatieAndPlayAudioSourceOutputDevicePrefab>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0xC3B02C", Offset = "0xC3B02C", VA = "0xC3B02C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0xC3B030", Offset = "0xC3B030", VA = "0xC3B030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F33")]
		[Address(RVA = "0xC3B268", Offset = "0xC3B268", VA = "0xC3B268", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> availableOutputs;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSourceOutputDevice AudioSourceOutputDevicePrefab;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AudioSourceOutputDevice> instantiatedOutputs;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selectedInstance;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int selectedOutput;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string fmodVersion;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xC3A3A4", Offset = "0xC3A3A4", VA = "0xC3A3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xC3A74C", Offset = "0xC3A74C", VA = "0xC3A74C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xC3AD94", Offset = "0xC3AD94", VA = "0xC3AD94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B89C", Offset = "0x90B89C")]
	private IEnumerator InstantiatieAndPlayAudioSourceOutputDevicePrefab(AudioSourceOutputDevice prefab, int onOutputDevice)
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xC3AE58", Offset = "0xC3AE58", VA = "0xC3AE58")]
	public OutputDevicePrefabDemo()
	{
	}
}
[Token(Token = "0x2000138")]
[ExecuteInEditMode]
public class OutputDeviceUnityMixerDemo : MonoBehaviour
{
	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xC3B2D8", Offset = "0xC3B2D8", VA = "0xC3B2D8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xC3B518", Offset = "0xC3B518", VA = "0xC3B518")]
	public OutputDeviceUnityMixerDemo()
	{
	}
}
[Token(Token = "0x2000139")]
public class ListenerMover : MonoBehaviour
{
	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPosition;

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xD324C8", Offset = "0xD324C8", VA = "0xD324C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xD3250C", Offset = "0xD3250C", VA = "0xD3250C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xD3269C", Offset = "0xD3269C", VA = "0xD3269C")]
	public ListenerMover()
	{
	}
}
[Token(Token = "0x200013A")]
[ExecuteInEditMode]
public class ResonanceInputDemo : MonoBehaviour
{
	[Token(Token = "0x200063F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7AB4", Offset = "0x8F7AB4")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResonanceInputDemo <>4__this;

		[Token(Token = "0x170004DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F38")]
			[Address(RVA = "0xB5F928", Offset = "0xB5F928", VA = "0xB5F928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F3A")]
			[Address(RVA = "0xB5F998", Offset = "0xB5F998", VA = "0xB5F998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0xB5E460", Offset = "0xB5E460", VA = "0xB5E460")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002F36")]
		[Address(RVA = "0xB5F584", Offset = "0xB5F584", VA = "0xB5F584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0xB5F588", Offset = "0xB5F588", VA = "0xB5F588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0xB5F930", Offset = "0xB5F930", VA = "0xB5F930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ResonanceInput resonanceInput;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> availableInputs;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> inputStreamsStatesFromEvents;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selectedInput;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousSelectedInput;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint dspBufferLength_new;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint dspBufferCount_new;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB5E1E8", Offset = "0xB5E1E8", VA = "0xB5E1E8")]
	public void OnRecordingStarted(string goName)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB5E264", Offset = "0xB5E264", VA = "0xB5E264")]
	public void OnRecordingPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB5E2F8", Offset = "0xB5E2F8", VA = "0xB5E2F8")]
	public void OnRecordingStopped(string goName)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xB5E374", Offset = "0xB5E374", VA = "0xB5E374")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xB5E3EC", Offset = "0xB5E3EC", VA = "0xB5E3EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B900", Offset = "0x90B900")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xB5E48C", Offset = "0xB5E48C", VA = "0xB5E48C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xB5F4EC", Offset = "0xB5F4EC", VA = "0xB5F4EC")]
	public ResonanceInputDemo()
	{
	}
}
[Token(Token = "0x200013B")]
[ExecuteInEditMode]
public class ResonanceSoundfieldDemo : MonoBehaviour
{
	[Token(Token = "0x2000640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7AC4", Offset = "0x8F7AC4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filepath;

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0xB60E20", Offset = "0xB60E20", VA = "0xB60E20")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0xB60E28", Offset = "0xB60E28", VA = "0xB60E28")]
		internal void <Start>b__0(string newDestination)
		{
		}
	}

	[Token(Token = "0x2000641")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7AD4", Offset = "0x8F7AD4")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResonanceSoundfieldDemo <>4__this;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass8_0 <>8__1;

		[Token(Token = "0x170004DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F40")]
			[Address(RVA = "0xB60FFC", Offset = "0xB60FFC", VA = "0xB60FFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F42")]
			[Address(RVA = "0xB6106C", Offset = "0xB6106C", VA = "0xB6106C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0xB5FE08", Offset = "0xB5FE08", VA = "0xB5FE08")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0xB60E30", Offset = "0xB60E30", VA = "0xB60E30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0xB60E34", Offset = "0xB60E34", VA = "0xB60E34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0xB61004", Offset = "0xB61004", VA = "0xB61004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ResonanceSoundfield resonanceSoundfield;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xB5F9A0", Offset = "0xB5F9A0", VA = "0xB5F9A0")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xB5FA1C", Offset = "0xB5FA1C", VA = "0xB5FA1C")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xB5FAB0", Offset = "0xB5FAB0", VA = "0xB5FAB0")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xB5FB2C", Offset = "0xB5FB2C", VA = "0xB5FB2C")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xB5FD1C", Offset = "0xB5FD1C", VA = "0xB5FD1C")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xB5FD94", Offset = "0xB5FD94", VA = "0xB5FD94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B964", Offset = "0x90B964")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xB5FE34", Offset = "0xB5FE34", VA = "0xB5FE34")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xB60D88", Offset = "0xB60D88", VA = "0xB60D88")]
	public ResonanceSoundfieldDemo()
	{
	}
}
[Token(Token = "0x200013C")]
[ExecuteInEditMode]
public class ResonanceSourceDemo : MonoBehaviour
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ResonanceSource resonanceSource;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xB61074", Offset = "0xB61074", VA = "0xB61074")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xB610F0", Offset = "0xB610F0", VA = "0xB610F0")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xB61184", Offset = "0xB61184", VA = "0xB61184")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xB61200", Offset = "0xB61200", VA = "0xB61200")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xB613F0", Offset = "0xB613F0", VA = "0xB613F0")]
	public void OnError(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xB61468", Offset = "0xB61468", VA = "0xB61468")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xB626B8", Offset = "0xB626B8", VA = "0xB626B8")]
	public ResonanceSourceDemo()
	{
	}
}
[Token(Token = "0x200013D")]
public class SmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x2000642")]
	public enum RotationAxes
	{
		[Token(Token = "0x40021FE")]
		MouseXAndY,
		[Token(Token = "0x40021FF")]
		MouseX,
		[Token(Token = "0x4002200")]
		MouseY
	}

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationX;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> rotArrayX;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotAverageX;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> rotArrayY;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotAverageY;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float frameCounter;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion originalRotation;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xB66CF8", Offset = "0xB66CF8", VA = "0xB66CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xB67620", Offset = "0xB67620", VA = "0xB67620")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xB67550", Offset = "0xB67550", VA = "0xB67550")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xB676F4", Offset = "0xB676F4", VA = "0xB676F4")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x200013E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5434", Offset = "0x8F5434")]
public class ThreeDDemoCube : MonoBehaviour
{
	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float radius;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float speed;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource asource;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float signalEnergy;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] aBuffer;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xAC7D58", Offset = "0xAC7D58", VA = "0xAC7D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xAC7E30", Offset = "0xAC7E30", VA = "0xAC7E30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xAC8140", Offset = "0xAC8140", VA = "0xAC8140")]
	public ThreeDDemoCube()
	{
	}
}
[Token(Token = "0x200013F")]
[ExecuteInEditMode]
public class UnitySpatializerDemo : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public global::AudioStream.AudioStream audioStream;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioStreamInput audioStreamInput;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> streamsStatesFromEvents;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, Dictionary<string, string>> tags;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, string> inputStreamsStatesFromEvents;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xADBBC8", Offset = "0xADBBC8", VA = "0xADBBC8")]
	public void OnPlaybackStarted(string goName)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xADBC44", Offset = "0xADBC44", VA = "0xADBC44")]
	public void OnPlaybackPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xADBCD8", Offset = "0xADBCD8", VA = "0xADBCD8")]
	public void OnPlaybackStopped(string goName)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xADBD54", Offset = "0xADBD54", VA = "0xADBD54")]
	public void OnTagChanged(string goName, string _key, object _value)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xADBF44", Offset = "0xADBF44", VA = "0xADBF44")]
	public void OnError_AStream(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xADBFBC", Offset = "0xADBFBC", VA = "0xADBFBC")]
	public void OnRecordingStarted(string goName)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xADC038", Offset = "0xADC038", VA = "0xADC038")]
	public void OnRecordingPaused(string goName, bool paused)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xADC0CC", Offset = "0xADC0CC", VA = "0xADC0CC")]
	public void OnRecordingStopped(string goName)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xADC148", Offset = "0xADC148", VA = "0xADC148")]
	public void OnError_AInput(string goName, string msg)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xADC1C0", Offset = "0xADC1C0", VA = "0xADC1C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xADCA3C", Offset = "0xADCA3C", VA = "0xADCA3C")]
	public UnitySpatializerDemo()
	{
	}
}
[Token(Token = "0x2000140")]
public class AudioStreamMemory : AudioStreamBase
{
	[Token(Token = "0x2000643")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7AE4", Offset = "0x8F7AE4")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioStreamMemory <>4__this;

		[Token(Token = "0x170004E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F46")]
			[Address(RVA = "0xB2062C", Offset = "0xB2062C", VA = "0xB2062C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F48")]
			[Address(RVA = "0xB2069C", Offset = "0xB2069C", VA = "0xB2069C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0xB1ED1C", Offset = "0xB1ED1C", VA = "0xB1ED1C")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0xB20570", Offset = "0xB20570", VA = "0xB20570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0xB20574", Offset = "0xB20574", VA = "0xB20574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0xB20634", Offset = "0xB20634", VA = "0xB20634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public IntPtr memoryLocation;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public uint memoryLength;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FA654", Offset = "0x8FA654")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA654", Offset = "0x8FA654")]
	public string cacheIdentifier;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA6B4", Offset = "0x8FA6B4")]
	public bool readTags;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private uint readlength;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private uint maxTimeout;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public EventWithStringAudioClipParameter OnAudioClipCreated;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Stopwatch stopwatch;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA6EC", Offset = "0x8FA6EC")]
	public long decodingToAudioClipTimeInMs;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private byte[] streamDataBytes;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GCHandle streamDataBytesPinned;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private IntPtr streamDataBytesPtr;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float[] oafrDataArr;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private SOUND_FORMAT stream_sound_format;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int stream_samplerate;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int stream_channels;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private byte stream_bytes_per_sample;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	private bool _decodingStarving;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FA724", Offset = "0x8FA724")]
	public long decoded_bytes;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool decodingLoopRunning;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Thread decodingThread;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private List<float> memorySamples;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA75C", Offset = "0x8FA75C")]
	private int <ntimeout>k__BackingField;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private uint readDataRead;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int flength;

	[Token(Token = "0x17000087")]
	public int ntimeout
	{
		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xB1FE5C", Offset = "0xB1FE5C", VA = "0xB1FE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BA2C", Offset = "0x90BA2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xB1FE64", Offset = "0xB1FE64", VA = "0xB1FE64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BA3C", Offset = "0x90BA3C")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xB1ECA8", Offset = "0xB1ECA8", VA = "0xB1ECA8", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B9C8", Offset = "0x90B9C8")]
	public override IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xB1ED48", Offset = "0xB1ED48", VA = "0xB1ED48", Slot = "12")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xB1ED94", Offset = "0xB1ED94", VA = "0xB1ED94", Slot = "10")]
	public override double PlaybackTimeSeconds()
	{
		return default(double);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xB1EDFC", Offset = "0xB1EDFC", VA = "0xB1EDFC", Slot = "9")]
	public override void SetOutput(int outputDriverId)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xB1EE64", Offset = "0xB1EE64", VA = "0xB1EE64", Slot = "8")]
	protected override void StreamChanged(float samplerate, int channels, SOUND_FORMAT sound_format)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xB1EECC", Offset = "0xB1EECC", VA = "0xB1EECC", Slot = "6")]
	protected override void StreamPausing(bool pause)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xB1EF34", Offset = "0xB1EF34", VA = "0xB1EF34", Slot = "4")]
	protected override void StreamStarting(int samplerate, int channels, SOUND_FORMAT sound_format)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xB1F100", Offset = "0xB1F100", VA = "0xB1F100", Slot = "5")]
	protected override bool StreamStarving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xB1F108", Offset = "0xB1F108", VA = "0xB1F108", Slot = "7")]
	protected override void StreamStopping()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xB1F028", Offset = "0xB1F028", VA = "0xB1F028")]
	private void StartDecoding()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xB1F234", Offset = "0xB1F234", VA = "0xB1F234")]
	public void StopDecodingAndCreateAudioClip(bool forceRetrievalFromCache)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xB1FE6C", Offset = "0xB1FE6C", VA = "0xB1FE6C")]
	private void DecodingLoop()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xB204F8", Offset = "0xB204F8", VA = "0xB204F8")]
	public AudioStreamMemory()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xB20568", Offset = "0xB20568", VA = "0xB20568")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BA4C", Offset = "0x90BA4C")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x2000141")]
public static class iOSSpeaker
{
	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x11AF3B0", Offset = "0x11AF3B0", VA = "0x11AF3B0")]
	public static void RouteForPlayback()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x11AF3B4", Offset = "0x11AF3B4", VA = "0x11AF3B4")]
	public static void RouteForRecording()
	{
	}
}
[Token(Token = "0x2000142")]
public class UnityMainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x2000644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7AF4", Offset = "0x8F7AF4")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityMainThreadDispatcher <>4__this;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator action;

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0xADB674", Offset = "0xADB674", VA = "0xADB674")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0xADBAAC", Offset = "0xADBAAC", VA = "0xADBAAC")]
		internal void <Enqueue>b__0()
		{
		}
	}

	[Token(Token = "0x2000645")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B04", Offset = "0x8F7B04")]
	private sealed class <ActionWrapper>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action a;

		[Token(Token = "0x170004E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0xADBB50", Offset = "0xADBB50", VA = "0xADBB50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F50")]
			[Address(RVA = "0xADBBC0", Offset = "0xADBBC0", VA = "0xADBBC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0xADB718", Offset = "0xADB718", VA = "0xADB718")]
		[DebuggerHidden]
		public <ActionWrapper>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0xADBAE0", Offset = "0xADBAE0", VA = "0xADBAE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0xADBAE4", Offset = "0xADBAE4", VA = "0xADBAE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0xADBB58", Offset = "0xADBB58", VA = "0xADBB58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Queue<Action> _executionQueue;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static UnityMainThreadDispatcher _instance;

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xADB318", Offset = "0xADB318", VA = "0xADB318")]
	public void Update()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xADB4C0", Offset = "0xADB4C0", VA = "0xADB4C0")]
	public void Enqueue(IEnumerator action)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xADB67C", Offset = "0xADB67C", VA = "0xADB67C")]
	public void Enqueue(Action action)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xADB6A4", Offset = "0xADB6A4", VA = "0xADB6A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BA84", Offset = "0x90BA84")]
	private IEnumerator ActionWrapper(Action a)
	{
		return null;
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xADB744", Offset = "0xADB744", VA = "0xADB744")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xADB7DC", Offset = "0xADB7DC", VA = "0xADB7DC")]
	public static UnityMainThreadDispatcher Instance()
	{
		return null;
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xADB8A8", Offset = "0xADB8A8", VA = "0xADB8A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xADB9BC", Offset = "0xADB9BC", VA = "0xADB9BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xADBA24", Offset = "0xADBA24", VA = "0xADBA24")]
	public UnityMainThreadDispatcher()
	{
	}
}
[Token(Token = "0x2000143")]
public class KingsprayMusicPlayer : MonoBehaviour
{
	[Token(Token = "0x2000646")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B14", Offset = "0x8F7B14")]
	private sealed class <Start>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayMusicPlayer <>4__this;

		[Token(Token = "0x170004E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F54")]
			[Address(RVA = "0xED4530", Offset = "0xED4530", VA = "0xED4530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F56")]
			[Address(RVA = "0xED45A0", Offset = "0xED45A0", VA = "0xED45A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0xED1DA4", Offset = "0xED1DA4", VA = "0xED1DA4")]
		[DebuggerHidden]
		public <Start>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0xED42A4", Offset = "0xED42A4", VA = "0xED42A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0xED42A8", Offset = "0xED42A8", VA = "0xED42A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0xED4538", Offset = "0xED4538", VA = "0xED4538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B24", Offset = "0x8F7B24")]
	private sealed class <SetAlbumImage>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayMusicPlayer <>4__this;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Helpers.CoroutineWithData <cwd>5__2;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D <texture>5__3;

		[Token(Token = "0x170004E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F5A")]
			[Address(RVA = "0xED422C", Offset = "0xED422C", VA = "0xED422C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0xED429C", Offset = "0xED429C", VA = "0xED429C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F57")]
		[Address(RVA = "0xED1F44", Offset = "0xED1F44", VA = "0xED1F44")]
		[DebuggerHidden]
		public <SetAlbumImage>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002F58")]
		[Address(RVA = "0xED3D3C", Offset = "0xED3D3C", VA = "0xED3D3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0xED3D40", Offset = "0xED3D40", VA = "0xED3D40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0xED4234", Offset = "0xED4234", VA = "0xED4234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B34", Offset = "0x8F7B34")]
	private sealed class <SetAlbum>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayMusicPlayer <>4__this;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int albumIndex;

		[Token(Token = "0x170004E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F60")]
			[Address(RVA = "0xED3CC4", Offset = "0xED3CC4", VA = "0xED3CC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F62")]
			[Address(RVA = "0xED3D34", Offset = "0xED3D34", VA = "0xED3D34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0xED1F70", Offset = "0xED1F70", VA = "0xED1F70")]
		[DebuggerHidden]
		public <SetAlbum>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0xED3B04", Offset = "0xED3B04", VA = "0xED3B04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0xED3B08", Offset = "0xED3B08", VA = "0xED3B08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0xED3CCC", Offset = "0xED3CCC", VA = "0xED3CCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B44", Offset = "0x8F7B44")]
	private sealed class <DelayPlay>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayMusicPlayer <>4__this;

		[Token(Token = "0x170004EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F66")]
			[Address(RVA = "0xED387C", Offset = "0xED387C", VA = "0xED387C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F68")]
			[Address(RVA = "0xED38EC", Offset = "0xED38EC", VA = "0xED38EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0xED26F8", Offset = "0xED26F8", VA = "0xED26F8")]
		[DebuggerHidden]
		public <DelayPlay>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0xED37A4", Offset = "0xED37A4", VA = "0xED37A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F65")]
		[Address(RVA = "0xED37A8", Offset = "0xED37A8", VA = "0xED37A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F67")]
		[Address(RVA = "0xED3884", Offset = "0xED3884", VA = "0xED3884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B54", Offset = "0x8F7B54")]
	private sealed class <AddAlbum>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayMusicPlayer <>4__this;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, object> album;

		[Token(Token = "0x170004ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F6C")]
			[Address(RVA = "0xED372C", Offset = "0xED372C", VA = "0xED372C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0xED379C", Offset = "0xED379C", VA = "0xED379C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F69")]
		[Address(RVA = "0xED2980", Offset = "0xED2980", VA = "0xED2980")]
		[DebuggerHidden]
		public <AddAlbum>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002F6A")]
		[Address(RVA = "0xED3638", Offset = "0xED3638", VA = "0xED3638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F6B")]
		[Address(RVA = "0xED363C", Offset = "0xED363C", VA = "0xED363C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0xED3734", Offset = "0xED3734", VA = "0xED3734", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B64", Offset = "0x8F7B64")]
	private sealed class <GetMusicAlbums>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayMusicPlayer <>4__this;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <getAlbums>5__2;

		[Token(Token = "0x170004EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F72")]
			[Address(RVA = "0xED3A8C", Offset = "0xED3A8C", VA = "0xED3A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F74")]
			[Address(RVA = "0xED3AFC", Offset = "0xED3AFC", VA = "0xED3AFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0xED3568", Offset = "0xED3568", VA = "0xED3568")]
		[DebuggerHidden]
		public <GetMusicAlbums>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002F70")]
		[Address(RVA = "0xED38F4", Offset = "0xED38F4", VA = "0xED38F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0xED38F8", Offset = "0xED38F8", VA = "0xED38F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0xED3A94", Offset = "0xED3A94", VA = "0xED3A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KingsprayMusicPlayer _instance;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string kingsprayMusicUrl;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material UIMaterial;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material m_AlbumCoverMaterial;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioStreamMinimal m_AudioStream;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image AlbumCover;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text AlbumName;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text ArtistName;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text TrackNumber;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text TrackName;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject LoadingSpinner;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider VolumeSlider;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Dictionary<string, object>> Albums;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int AlbumIndex;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int BrowseAlbumIndex;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int SongIndex;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIMenu Menu;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image AlbumPageImage;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool IsInMusicPlayerMode;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool wasStoppedByUser;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int TrackCount;

	[Token(Token = "0x17000088")]
	public static KingsprayMusicPlayer Instance
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xED173C", Offset = "0xED173C", VA = "0xED173C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xED1808", Offset = "0xED1808", VA = "0xED1808")]
	public void NextAlbum()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xED19C4", Offset = "0xED19C4", VA = "0xED19C4")]
	public void PrevAlbum()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xED1AD4", Offset = "0xED1AD4", VA = "0xED1AD4")]
	public void PlayAlbum()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xED1C28", Offset = "0xED1C28", VA = "0xED1C28")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xED1C70", Offset = "0xED1C70", VA = "0xED1C70")]
	private void VolumeSliderChanged()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xED1D30", Offset = "0xED1D30", VA = "0xED1D30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BAE8", Offset = "0x90BAE8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xED1DD0", Offset = "0xED1DD0", VA = "0xED1DD0")]
	public void SetModeMusic(bool enabled)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xED1DE8", Offset = "0xED1DE8", VA = "0xED1DE8")]
	private void PlaybackStopped()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xED1ECC", Offset = "0xED1ECC", VA = "0xED1ECC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xED192C", Offset = "0xED192C", VA = "0xED192C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BB4C", Offset = "0x90BB4C")]
	private IEnumerator SetAlbumImage(int index)
	{
		return null;
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xED1B84", Offset = "0xED1B84", VA = "0xED1B84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BBB0", Offset = "0x90BBB0")]
	private IEnumerator SetAlbum(int albumIndex)
	{
		return null;
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xED1F9C", Offset = "0xED1F9C", VA = "0xED1F9C")]
	private void PlayAsync()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xED1C1C", Offset = "0xED1C1C", VA = "0xED1C1C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xED267C", Offset = "0xED267C", VA = "0xED267C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xED2384", Offset = "0xED2384", VA = "0xED2384")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xED2684", Offset = "0xED2684", VA = "0xED2684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BC14", Offset = "0x90BC14")]
	private IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xED1E00", Offset = "0xED1E00", VA = "0xED1E00")]
	public void NextTrack()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xED2724", Offset = "0xED2724", VA = "0xED2724")]
	public void PrevTrack()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xED27F0", Offset = "0xED27F0", VA = "0xED27F0")]
	private Dictionary<string, object> CreateTrack(string name, string url)
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xED28E8", Offset = "0xED28E8", VA = "0xED28E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BC78", Offset = "0x90BC78")]
	private IEnumerator AddAlbum(Dictionary<string, object> album)
	{
		return null;
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xED29AC", Offset = "0xED29AC", VA = "0xED29AC")]
	private void AddAnitek()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xED34F4", Offset = "0xED34F4", VA = "0xED34F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BCDC", Offset = "0x90BCDC")]
	private IEnumerator GetMusicAlbums()
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xED3594", Offset = "0xED3594", VA = "0xED3594")]
	public KingsprayMusicPlayer()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xED361C", Offset = "0xED361C", VA = "0xED361C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD40", Offset = "0x90BD40")]
	private void <Start>b__25_0(float <p0>)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xED3620", Offset = "0xED3620", VA = "0xED3620")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD50", Offset = "0x90BD50")]
	private void <Start>b__25_1(string <p0>)
	{
	}
}
[Token(Token = "0x2000144")]
public class KingsprayRadioPlayer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B74", Offset = "0x8F7B74")]
	private sealed class <>c
	{
		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__3_0;

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0xED5864", Offset = "0xED5864", VA = "0xED5864")]
		public <>c()
		{
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0xED586C", Offset = "0xED586C", VA = "0xED586C")]
		internal bool <Start>b__3_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B84", Offset = "0x8F7B84")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayRadioPlayer <>4__this;

		[Token(Token = "0x170004F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F7B")]
			[Address(RVA = "0xED609C", Offset = "0xED609C", VA = "0xED609C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0xED610C", Offset = "0xED610C", VA = "0xED610C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0xED473C", Offset = "0xED473C", VA = "0xED473C")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0xED5D58", Offset = "0xED5D58", VA = "0xED5D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0xED5D5C", Offset = "0xED5D5C", VA = "0xED5D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0xED60A4", Offset = "0xED60A4", VA = "0xED60A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B94", Offset = "0x8F7B94")]
	private sealed class <CheckInternetConnectionAndProceed>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool refreshStations;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KingsprayRadioPlayer <>4__this;

		[Token(Token = "0x170004F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F81")]
			[Address(RVA = "0xED5A5C", Offset = "0xED5A5C", VA = "0xED5A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F83")]
			[Address(RVA = "0xED5ACC", Offset = "0xED5ACC", VA = "0xED5ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0xED4A4C", Offset = "0xED4A4C", VA = "0xED4A4C")]
		[DebuggerHidden]
		public <CheckInternetConnectionAndProceed>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0xED5900", Offset = "0xED5900", VA = "0xED5900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0xED5904", Offset = "0xED5904", VA = "0xED5904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F82")]
		[Address(RVA = "0xED5A64", Offset = "0xED5A64", VA = "0xED5A64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7BA4", Offset = "0x8F7BA4")]
	private sealed class <GetStreamsFromDB>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KingsprayRadioPlayer <>4__this;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Helpers.CoroutineWithData <stations>5__2;

		[Token(Token = "0x170004F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F87")]
			[Address(RVA = "0xED5CE0", Offset = "0xED5CE0", VA = "0xED5CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F89")]
			[Address(RVA = "0xED5D50", Offset = "0xED5D50", VA = "0xED5D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0xED50BC", Offset = "0xED50BC", VA = "0xED50BC")]
		[DebuggerHidden]
		public <GetStreamsFromDB>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0xED5AD4", Offset = "0xED5AD4", VA = "0xED5AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0xED5AD8", Offset = "0xED5AD8", VA = "0xED5AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F88")]
		[Address(RVA = "0xED5CE8", Offset = "0xED5CE8", VA = "0xED5CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KingsprayRadioPlayer _instance;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int m_RadioStreamIndex;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Dictionary<string, object>> m_RadioStreams;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider VolumeSlider;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIMenu BoomboxMenu;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LoadingSpinner;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioStreamMinimal m_AudioStream;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text TitleText;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text GenreText;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text CurrentlyPlayingTitleText;

	[Token(Token = "0x17000089")]
	public static KingsprayRadioPlayer Instance
	{
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xED45A8", Offset = "0xED45A8", VA = "0xED45A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xED50E8", Offset = "0xED50E8", VA = "0xED50E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xED46C8", Offset = "0xED46C8", VA = "0xED46C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BD60", Offset = "0x90BD60")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xED4768", Offset = "0xED4768", VA = "0xED4768")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xED4798", Offset = "0xED4798", VA = "0xED4798")]
	private void OnPlaybackStarted(string param)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xED49B0", Offset = "0xED49B0", VA = "0xED49B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BDC4", Offset = "0x90BDC4")]
	private IEnumerator CheckInternetConnectionAndProceed(bool refreshStations = false)
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xED4A78", Offset = "0xED4A78", VA = "0xED4A78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xED4AFC", Offset = "0xED4AFC", VA = "0xED4AFC")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xED4B44", Offset = "0xED4B44", VA = "0xED4B44")]
	private void VolumeSliderChanged()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xED4C04", Offset = "0xED4C04", VA = "0xED4C04")]
	private void KingsprayMongoDB_OnGetRecordsRetrieved(List<Dictionary<string, object>> entries)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xED4E88", Offset = "0xED4E88", VA = "0xED4E88")]
	public void OnRecordsReceived(List<Dictionary<string, object>> records)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xED5048", Offset = "0xED5048", VA = "0xED5048")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BE28", Offset = "0x90BE28")]
	public IEnumerator GetStreamsFromDB()
	{
		return null;
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xED4CD8", Offset = "0xED4CD8", VA = "0xED4CD8")]
	public void UpdateStreamUI()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xED5184", Offset = "0xED5184", VA = "0xED5184")]
	public void NextStream()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xED52B8", Offset = "0xED52B8", VA = "0xED52B8")]
	public void PrevStream()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xED53EC", Offset = "0xED53EC", VA = "0xED53EC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xED55FC", Offset = "0xED55FC", VA = "0xED55FC")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xED5634", Offset = "0xED5634", VA = "0xED5634")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xED4920", Offset = "0xED4920", VA = "0xED4920")]
	private Dictionary<string, object> GetCurrentStream()
	{
		return null;
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xED5700", Offset = "0xED5700", VA = "0xED5700")]
	public void OnStarted(string name)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xED5704", Offset = "0xED5704", VA = "0xED5704")]
	public void OnStopped(string name)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xED5708", Offset = "0xED5708", VA = "0xED5708")]
	public void OnPaused(string name, bool isPaused)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xED570C", Offset = "0xED570C", VA = "0xED570C")]
	public void OnError(string name, string error)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xED57EC", Offset = "0xED57EC", VA = "0xED57EC")]
	public void OnTagChanged(string param1, string param2, object obj)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xED57F0", Offset = "0xED57F0", VA = "0xED57F0")]
	public KingsprayRadioPlayer()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xED57FC", Offset = "0xED57FC", VA = "0xED57FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BE8C", Offset = "0x90BE8C")]
	private void <Start>b__3_1(float <p0>)
	{
	}
}
[Token(Token = "0x2000145")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F54A8", Offset = "0x8F54A8")]
public class AudioController : SingletonMonoBehaviour<AudioController>
{
	[Token(Token = "0x4000961")]
	public const string AUDIO_TOOLKIT_VERSION = "6.8";

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject AudioObjectPrefab;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Persistent;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool UnloadAudioClipsOnDestroy;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool UsePooledAudioObjects;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool PlayWithZeroVolume;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool EqualPowerCrossfade;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float musicCrossFadeTime;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool specifyCrossFadeInAndOutSeperately;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _musicCrossFadeTime_In;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _musicCrossFadeTime_Out;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCategory[] AudioCategories;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] musicPlaylist;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool loopPlaylist;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool shufflePlaylist;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool crossfadePlaylist;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float delayBetweenPlaylistTracks;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static PoolableReference<AudioObject> _currentMusicReference;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected AudioListener _currentAudioListener;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _musicEnabled;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _soundMuted;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool _categoriesValidated;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[SerializeField]
	private bool _isAdditionalAudioController;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool _audioDisabled;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, AudioItem> _audioItems;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<int> _playlistPlayed;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _isPlaylistPlaying;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float _volume;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static double _systemTime;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static double _lastSystemTime;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static double _systemDeltaTime;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<AudioController> _additionalAudioControllers;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioController_CurrentInspectorSelection _currentInspectorSelection;

	[Token(Token = "0x1700008B")]
	public bool DisableAudio
	{
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xF34B70", Offset = "0xF34B70", VA = "0xF34B70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xF34B50", Offset = "0xF34B50", VA = "0xF34B50")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public bool isAdditionalAudioController
	{
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xF34B78", Offset = "0xF34B78", VA = "0xF34B78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xF34B80", Offset = "0xF34B80", VA = "0xF34B80")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public float Volume
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xF34B8C", Offset = "0xF34B8C", VA = "0xF34B8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xF34B94", Offset = "0xF34B94", VA = "0xF34B94")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public bool musicEnabled
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xF34CCC", Offset = "0xF34CCC", VA = "0xF34CCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xF34CD4", Offset = "0xF34CD4", VA = "0xF34CD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public bool soundMuted
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xF34F14", Offset = "0xF34F14", VA = "0xF34F14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xF34F1C", Offset = "0xF34F1C", VA = "0xF34F1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public float musicCrossFadeTime_In
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xF34F28", Offset = "0xF34F28", VA = "0xF34F28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xF34F44", Offset = "0xF34F44", VA = "0xF34F44")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public float musicCrossFadeTime_Out
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xF34F4C", Offset = "0xF34F4C", VA = "0xF34F4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xF34F68", Offset = "0xF34F68", VA = "0xF34F68")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public static double systemTime
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xF34F70", Offset = "0xF34F70", VA = "0xF34F70")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000093")]
	public static double systemDeltaTime
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xF34FD8", Offset = "0xF34FD8", VA = "0xF34FD8")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000094")]
	private static AudioObject _currentMusic
	{
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xF34E50", Offset = "0xF34E50", VA = "0xF34E50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xF39A30", Offset = "0xF39A30", VA = "0xF39A30")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public override bool isSingletonObject
	{
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xF3BD10", Offset = "0xF3BD10", VA = "0xF3BD10", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xF35040", Offset = "0xF35040", VA = "0xF35040")]
	public static AudioObject PlayMusic(string audioID, float volume, float delay, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xF35310", Offset = "0xF35310", VA = "0xF35310")]
	public static AudioObject PlayMusic(string audioID)
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xF35380", Offset = "0xF35380", VA = "0xF35380")]
	public static AudioObject PlayMusic(string audioID, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xF353FC", Offset = "0xF353FC", VA = "0xF353FC")]
	public static AudioObject PlayMusic(string audioID, Vector3 worldPosition, [Optional] Transform parentObj, float volume = 1f, float delay = 0f, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xF357CC", Offset = "0xF357CC", VA = "0xF357CC")]
	public static AudioObject PlayMusic(string audioID, Transform parentObj, float volume = 1f, float delay = 0f, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xF358D0", Offset = "0xF358D0", VA = "0xF358D0")]
	public static bool StopMusic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xF35A1C", Offset = "0xF35A1C", VA = "0xF35A1C")]
	public static bool StopMusic(float fadeOut)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xF35A80", Offset = "0xF35A80", VA = "0xF35A80")]
	public static bool PauseMusic(float fadeOut = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xF35BCC", Offset = "0xF35BCC", VA = "0xF35BCC")]
	public static bool IsMusicPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xF35CA4", Offset = "0xF35CA4", VA = "0xF35CA4")]
	public static bool UnpauseMusic(float fadeIn = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xF35E30", Offset = "0xF35E30", VA = "0xF35E30")]
	public static int EnqueueMusic(string audioID)
	{
		return default(int);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xF35FA4", Offset = "0xF35FA4", VA = "0xF35FA4")]
	public static string[] GetMusicPlaylist()
	{
		return null;
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xF36084", Offset = "0xF36084", VA = "0xF36084")]
	public static void SetMusicPlaylist(string[] playlist)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xF36128", Offset = "0xF36128", VA = "0xF36128")]
	public static AudioObject PlayMusicPlaylist()
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xF361BC", Offset = "0xF361BC", VA = "0xF361BC")]
	public static AudioObject PlayNextMusicOnPlaylist()
	{
		return null;
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xF36390", Offset = "0xF36390", VA = "0xF36390")]
	public static AudioObject PlayPreviousMusicOnPlaylist()
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xF36264", Offset = "0xF36264", VA = "0xF36264")]
	public static bool IsPlaylistPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xF36474", Offset = "0xF36474", VA = "0xF36474")]
	public static void ClearPlaylist()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xF364D0", Offset = "0xF364D0", VA = "0xF364D0")]
	public static AudioObject Play(string audioID)
	{
		return null;
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xF3699C", Offset = "0xF3699C", VA = "0xF3699C")]
	public static AudioObject Play(string audioID, float volume, float delay = 0f, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xF36BDC", Offset = "0xF36BDC", VA = "0xF36BDC")]
	public static AudioObject Play(string audioID, Transform parentObj)
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xF36C9C", Offset = "0xF36C9C", VA = "0xF36C9C")]
	public static AudioObject Play(string audioID, Transform parentObj, float volume, float delay = 0f, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xF36D70", Offset = "0xF36D70", VA = "0xF36D70")]
	public static AudioObject Play(string audioID, Vector3 worldPosition, [Optional] Transform parentObj)
	{
		return null;
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xF368D0", Offset = "0xF368D0", VA = "0xF368D0")]
	public static AudioObject Play(string audioID, Vector3 worldPosition, Transform parentObj, float volume, float delay = 0f, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xF36E34", Offset = "0xF36E34", VA = "0xF36E34")]
	public static AudioObject PlayScheduled(string audioID, double dspTime, Vector3 worldPosition, [Optional] Transform parentObj, float volume = 1f, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xF36F00", Offset = "0xF36F00", VA = "0xF36F00")]
	public static AudioObject PlayAfter(string audioID, AudioObject playingAudio, double deltaDspTime = 0.0, float volume = 1f, float startTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xF370FC", Offset = "0xF370FC", VA = "0xF370FC")]
	public static bool Stop(string audioID, float fadeOutLength)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xF37528", Offset = "0xF37528", VA = "0xF37528")]
	public static bool Stop(string audioID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xF37590", Offset = "0xF37590", VA = "0xF37590")]
	public static void StopAll(float fadeOutLength)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xF376E4", Offset = "0xF376E4", VA = "0xF376E4")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xF37744", Offset = "0xF37744", VA = "0xF37744")]
	public static void PauseAll(float fadeOutLength = 0f)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xF37930", Offset = "0xF37930", VA = "0xF37930")]
	public static void UnpauseAll(float fadeInLength = 0f)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xF37AFC", Offset = "0xF37AFC", VA = "0xF37AFC")]
	public static void PauseCategory(string categoryName, float fadeOutLength = 0f)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xF37E68", Offset = "0xF37E68", VA = "0xF37E68")]
	public static void UnpauseCategory(string categoryName, float fadeInLength = 0f)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xF38030", Offset = "0xF38030", VA = "0xF38030")]
	public static void StopCategory(string categoryName, float fadeOutLength = 0f)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xF381F4", Offset = "0xF381F4", VA = "0xF381F4")]
	public static bool IsPlaying(string audioID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xF37364", Offset = "0xF37364", VA = "0xF37364")]
	public static List<AudioObject> GetPlayingAudioObjects(string audioID, bool includePausedAudio = false)
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xF37CBC", Offset = "0xF37CBC", VA = "0xF37CBC")]
	public static List<AudioObject> GetPlayingAudioObjectsInCategory(string categoryName, bool includePausedAudio = false)
	{
		return null;
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xF3465C", Offset = "0xF3465C", VA = "0xF3465C")]
	public static List<AudioObject> GetPlayingAudioObjects(bool includePausedAudio = false)
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xF382E8", Offset = "0xF382E8", VA = "0xF382E8")]
	public static int GetPlayingAudioObjectsCount(string audioID, bool includePausedAudio = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xF38430", Offset = "0xF38430", VA = "0xF38430")]
	public static void EnableMusic(bool b)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xF38494", Offset = "0xF38494", VA = "0xF38494")]
	public static void MuteSound(bool b)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xF384F8", Offset = "0xF384F8", VA = "0xF384F8")]
	public static bool IsMusicEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xF38554", Offset = "0xF38554", VA = "0xF38554")]
	public static bool IsSoundMuted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xF366E0", Offset = "0xF366E0", VA = "0xF366E0")]
	public static AudioListener GetCurrentAudioListener()
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xF385B0", Offset = "0xF385B0", VA = "0xF385B0")]
	public static AudioObject GetCurrentMusic()
	{
		return null;
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xF3860C", Offset = "0xF3860C", VA = "0xF3860C")]
	public static AudioCategory GetCategory(string name)
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xF3871C", Offset = "0xF3871C", VA = "0xF3871C")]
	public static void SetCategoryVolume(string name, float volume)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xF388C8", Offset = "0xF388C8", VA = "0xF388C8")]
	public static float GetCategoryVolume(string name)
	{
		return default(float);
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xF3898C", Offset = "0xF3898C", VA = "0xF3898C")]
	public static void SetGlobalVolume(float volume)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xF38A9C", Offset = "0xF38A9C", VA = "0xF38A9C")]
	public static float GetGlobalVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xF38AF8", Offset = "0xF38AF8", VA = "0xF38AF8")]
	public static AudioCategory NewCategory(string categoryName)
	{
		return null;
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xF38D04", Offset = "0xF38D04", VA = "0xF38D04")]
	public static void RemoveCategory(string categoryName)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xF390A8", Offset = "0xF390A8", VA = "0xF390A8")]
	public static void AddToCategory(AudioCategory category, AudioItem audioItem)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xF391E8", Offset = "0xF391E8", VA = "0xF391E8")]
	public static AudioItem AddToCategory(AudioCategory category, AudioClip audioClip, string audioID)
	{
		return null;
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xF393B8", Offset = "0xF393B8", VA = "0xF393B8")]
	public static bool RemoveAudioItem(string audioID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xF39684", Offset = "0xF39684", VA = "0xF39684")]
	public static bool IsValidAudioID(string audioID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xF396F4", Offset = "0xF396F4", VA = "0xF396F4")]
	public static AudioItem GetAudioItem(string audioID)
	{
		return null;
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xF39758", Offset = "0xF39758", VA = "0xF39758")]
	public static void DetachAllAudios(GameObject gameObjectWithAudios)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xF39844", Offset = "0xF39844", VA = "0xF39844")]
	public static float GetAudioItemMaxDistance(string audioID)
	{
		return default(float);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xF39998", Offset = "0xF39998", VA = "0xF39998")]
	public void UnloadAllAudioClips()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xF34BAC", Offset = "0xF34BAC", VA = "0xF34BAC")]
	private void _ApplyVolumeChange()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xF372C4", Offset = "0xF372C4", VA = "0xF372C4")]
	internal AudioItem _GetAudioItem(string audioID)
	{
		return null;
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xF350F8", Offset = "0xF350F8", VA = "0xF350F8")]
	protected AudioObject _PlayMusic(string audioID, float volume, float delay, float startTime)
	{
		return null;
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xF35928", Offset = "0xF35928", VA = "0xF35928")]
	protected bool _StopMusic(float fadeOutLength)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xF35AE4", Offset = "0xF35AE4", VA = "0xF35AE4")]
	protected bool _PauseMusic(float fadeOut)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xF354E4", Offset = "0xF354E4", VA = "0xF354E4")]
	protected AudioObject _PlayMusic(string audioID, Vector3 position, Transform parentObj, float volume, float delay, float startTime)
	{
		return null;
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xF35E94", Offset = "0xF35E94", VA = "0xF35E94")]
	protected int _EnqueueMusic(string audioID)
	{
		return default(int);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xF36184", Offset = "0xF36184", VA = "0xF36184")]
	protected AudioObject _PlayMusicPlaylist()
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xF39C40", Offset = "0xF39C40", VA = "0xF39C40")]
	private AudioObject _PlayMusicTrackWithID(int nextTrack, float delay, bool addToPlayedList)
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xF36354", Offset = "0xF36354", VA = "0xF36354")]
	internal AudioObject _PlayNextMusicOnPlaylist(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xF36438", Offset = "0xF36438", VA = "0xF36438")]
	internal AudioObject _PlayPreviousMusicOnPlaylist(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xF39BBC", Offset = "0xF39BBC", VA = "0xF39BBC")]
	private void _ResetLastPlayedList()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xF39DE4", Offset = "0xF39DE4", VA = "0xF39DE4")]
	protected int _GetNextMusicTrack()
	{
		return default(int);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xF39E1C", Offset = "0xF39E1C", VA = "0xF39E1C")]
	protected int _GetPreviousMusicTrack()
	{
		return default(int);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xF3A2E0", Offset = "0xF3A2E0", VA = "0xF3A2E0")]
	private int _GetPreviousMusicTrackShuffled()
	{
		return default(int);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xF3A550", Offset = "0xF3A550", VA = "0xF3A550")]
	private void _RemoveLastPlayedOnList()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xF39E54", Offset = "0xF39E54", VA = "0xF39E54")]
	private int _GetNextMusicTrackShuffled()
	{
		return default(int);
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xF3A19C", Offset = "0xF3A19C", VA = "0xF3A19C")]
	private int _GetNextMusicTrackInOrder()
	{
		return default(int);
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xF3A404", Offset = "0xF3A404", VA = "0xF3A404")]
	private int _GetPreviousMusicTrackInOrder()
	{
		return default(int);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xF36E28", Offset = "0xF36E28", VA = "0xF36E28")]
	protected AudioObject _PlayAsSound(string audioID, float volume, Vector3 worldPosition, Transform parentObj, float delay, float startTime, bool playWithoutAudioObject, double dspTime = 0.0, [Optional] AudioObject useExistingAudioObject)
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xF39AF4", Offset = "0xF39AF4", VA = "0xF39AF4")]
	protected AudioObject _PlayAsMusic(string audioID, float volume, Vector3 worldPosition, Transform parentObj, float delay, float startTime, bool playWithoutAudioObject, double dspTime = 0.0, [Optional] AudioObject useExistingAudioObject)
	{
		return null;
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xF3A614", Offset = "0xF3A614", VA = "0xF3A614")]
	protected AudioObject _PlayEx(string audioID, float volume, Vector3 worldPosition, Transform parentObj, float delay, float startTime, bool playWithoutAudioObject, double dspTime = 0.0, [Optional] AudioObject useExistingAudioObject, bool playAsMusic = false)
	{
		return null;
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xF3AA88", Offset = "0xF3AA88", VA = "0xF3AA88")]
	public AudioObject PlayAudioItem(AudioItem sndItem, float volume, Vector3 worldPosition, [Optional] Transform parentObj, float delay = 0f, float startTime = 0f, bool playWithoutAudioObject = false, [Optional] AudioObject useExistingAudioObj, double dspTime = 0.0, bool playAsMusic = false)
	{
		return null;
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xF342F8", Offset = "0xF342F8", VA = "0xF342F8")]
	internal AudioCategory _GetCategory(string name)
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xF3B7BC", Offset = "0xF3B7BC", VA = "0xF3B7BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xF3B830", Offset = "0xF3B830", VA = "0xF3B830")]
	private static void _UpdateSystemTime()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xF3B9BC", Offset = "0xF3B9BC", VA = "0xF3B9BC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xF3BBE8", Offset = "0xF3BBE8", VA = "0xF3BBE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xF3BD20", Offset = "0xF3BD20", VA = "0xF3BD20", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xF3BD80", Offset = "0xF3BD80", VA = "0xF3BD80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xF3BA28", Offset = "0xF3BA28", VA = "0xF3BA28")]
	private void AwakeSingleton()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xF39AC0", Offset = "0xF39AC0", VA = "0xF39AC0")]
	protected void _ValidateCategories()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xF38CFC", Offset = "0xF38CFC", VA = "0xF38CFC")]
	protected void _InvalidateCategories()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xF3C1AC", Offset = "0xF3C1AC", VA = "0xF3C1AC")]
	public void InitializeAudioItems()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xF3C2E8", Offset = "0xF3C2E8", VA = "0xF3C2E8")]
	private void _InitializeAudioItems(AudioController audioController)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xF3BC64", Offset = "0xF3BC64", VA = "0xF3BC64")]
	private void _RegisterAdditionalAudioController(AudioController ac)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xF3C438", Offset = "0xF3C438", VA = "0xF3C438")]
	private void _SyncCategoryVolumes(AudioController toSync, AudioController syncWith)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xF3BE40", Offset = "0xF3BE40", VA = "0xF3BE40")]
	private void _UnregisterAdditionalAudioController(AudioController ac)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xF3AD8C", Offset = "0xF3AD8C", VA = "0xF3AD8C")]
	protected static AudioSubItem[] _ChooseSubItems(AudioItem audioItem, AudioObject useExistingAudioObj)
	{
		return null;
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xF3C924", Offset = "0xF3C924", VA = "0xF3C924")]
	internal static AudioSubItem _ChooseSingleSubItem(AudioItem audioItem, AudioPickSubItemMode pickMode, AudioObject useExistingAudioObj)
	{
		return null;
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xF3C510", Offset = "0xF3C510", VA = "0xF3C510")]
	protected static AudioSubItem[] _ChooseSubItems(AudioItem audioItem, AudioPickSubItemMode pickMode, AudioObject useExistingAudioObj)
	{
		return null;
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xF3C9CC", Offset = "0xF3C9CC", VA = "0xF3C9CC")]
	private static int _ChooseRandomSubitem(AudioItem audioItem, bool allowSameElementTwiceInRow, int lastChosen, bool switchOddsEvens = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xF3CC88", Offset = "0xF3CC88", VA = "0xF3CC88")]
	private static bool isOdd(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xF3AE14", Offset = "0xF3AE14", VA = "0xF3AE14")]
	public AudioObject PlayAudioSubItem(AudioSubItem subItem, float volume, Vector3 worldPosition, Transform parentObj, float delay, float startTime, bool playWithoutAudioObject, AudioObject useExistingAudioObj, double dspTime = 0.0, bool playAsMusic = false)
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xF3CC90", Offset = "0xF3CC90", VA = "0xF3CC90")]
	private AudioController _GetAudioController(AudioSubItem subItem)
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xF3CF90", Offset = "0xF3CF90", VA = "0xF3CF90")]
	internal void _NotifyPlaylistTrackCompleteleyPlayed(AudioObject audioObject)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xF3BFF8", Offset = "0xF3BFF8", VA = "0xF3BFF8")]
	private void _ValidateAudioObjectPrefab(GameObject audioPrefab)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xF3D0F4", Offset = "0xF3D0F4", VA = "0xF3D0F4")]
	public AudioController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000146")]
public class AudioController_CurrentInspectorSelection
{
	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int currentCategoryIndex;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int currentItemIndex;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentSubitemIndex;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int currentPlaylistIndex;

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xF3D1C4", Offset = "0xF3D1C4", VA = "0xF3D1C4")]
	public AudioController_CurrentInspectorSelection()
	{
	}
}
[Token(Token = "0x2000147")]
public class AudioFader
{
	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _fadeOutTotalTime;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _fadeOutStartTime;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _fadeInTotalTime;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _fadeInStartTime;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA7BC", Offset = "0x8FA7BC")]
	private double <time>k__BackingField;

	[Token(Token = "0x17000096")]
	public double time
	{
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xF3D260", Offset = "0xF3D260", VA = "0xF3D260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BE9C", Offset = "0x90BE9C")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xF3D268", Offset = "0xF3D268", VA = "0xF3D268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BEAC", Offset = "0x90BEAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public bool isFadingOutComplete
	{
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xF3D270", Offset = "0xF3D270", VA = "0xF3D270")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000098")]
	public bool isFadingOut
	{
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xF3D2C0", Offset = "0xF3D2C0", VA = "0xF3D2C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public bool isFadingOutOrScheduled
	{
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xF3D318", Offset = "0xF3D318", VA = "0xF3D318")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009A")]
	public bool isFadingIn
	{
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xF3D328", Offset = "0xF3D328", VA = "0xF3D328")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xF3D378", Offset = "0xF3D378", VA = "0xF3D378")]
	public void Set0()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xF3D39C", Offset = "0xF3D39C", VA = "0xF3D39C")]
	public void FadeIn(float fadeInTime, bool stopCurrentFadeOut = false)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xF3D3A8", Offset = "0xF3D3A8", VA = "0xF3D3A8")]
	public void FadeIn(float fadeInTime, double startToFadeTime, bool stopCurrentFadeOut = false)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xF3D454", Offset = "0xF3D454", VA = "0xF3D454")]
	public void FadeOut(float fadeOutLength, float startToFadeTime)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xF3D4DC", Offset = "0xF3D4DC", VA = "0xF3D4DC")]
	public float Get(out bool finishedFadeOut)
	{
		return default(float);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xF3D424", Offset = "0xF3D424", VA = "0xF3D424")]
	private float _GetFadeOutValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xF3D5B4", Offset = "0xF3D5B4", VA = "0xF3D5B4")]
	private float _GetFadeInValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xF3D5C8", Offset = "0xF3D5C8", VA = "0xF3D5C8")]
	private float _GetFadeValue(float t, float dt)
	{
		return default(float);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xF3D66C", Offset = "0xF3D66C", VA = "0xF3D66C")]
	public AudioFader()
	{
	}
}
[Serializable]
[Token(Token = "0x2000148")]
public class AudioCategory
{
	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioCategory _parentCategory;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _parentCategoryName;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA7DC", Offset = "0x8FA7DC")]
	private AudioController <audioController>k__BackingField;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject AudioObjectPrefab;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioItem[] AudioItems;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _volume;

	[Token(Token = "0x1700009B")]
	public float Volume
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xF34068", Offset = "0xF34068", VA = "0xF34068")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xF34070", Offset = "0xF34070", VA = "0xF34070")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public float VolumeTotal
	{
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xF34188", Offset = "0xF34188", VA = "0xF34188")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009D")]
	public AudioCategory parentCategory
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xF341D8", Offset = "0xF341D8", VA = "0xF341D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xF342D4", Offset = "0xF342D4", VA = "0xF342D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public AudioController audioController
	{
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xF342F0", Offset = "0xF342F0", VA = "0xF342F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BEBC", Offset = "0x90BEBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xF343B0", Offset = "0xF343B0", VA = "0xF343B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BECC", Offset = "0x90BECC")]
		set
		{
		}
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xF343B8", Offset = "0xF343B8", VA = "0xF343B8")]
	public AudioCategory(AudioController audioController)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xF343EC", Offset = "0xF343EC", VA = "0xF343EC")]
	internal void _AnalyseAudioItems(Dictionary<string, AudioItem> audioItemsDict)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xF345B4", Offset = "0xF345B4", VA = "0xF345B4")]
	internal int _GetIndexOf(AudioItem audioItem)
	{
		return default(int);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xF34078", Offset = "0xF34078", VA = "0xF34078")]
	private void _ApplyVolumeChange()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xF348A0", Offset = "0xF348A0", VA = "0xF348A0")]
	private bool _IsCategoryParentOf(AudioCategory toTest, AudioCategory parent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xF349D0", Offset = "0xF349D0", VA = "0xF349D0")]
	public void UnloadAllAudioClips()
	{
	}
}
[Token(Token = "0x2000149")]
public enum AudioPickSubItemMode
{
	[Token(Token = "0x4000993")]
	Disabled,
	[Token(Token = "0x4000994")]
	Random,
	[Token(Token = "0x4000995")]
	RandomNotSameTwice,
	[Token(Token = "0x4000996")]
	Sequence,
	[Token(Token = "0x4000997")]
	SequenceWithRandomStart,
	[Token(Token = "0x4000998")]
	AllSimultaneously,
	[Token(Token = "0x4000999")]
	TwoSimultaneously,
	[Token(Token = "0x400099A")]
	StartLoopSequenceWithFirst,
	[Token(Token = "0x400099B")]
	RandomNotSameTwiceOddsEvens
}
[Serializable]
[Token(Token = "0x200014A")]
public class AudioItem
{
	[Serializable]
	[Token(Token = "0x2000650")]
	public enum LoopMode
	{
		[Token(Token = "0x400222F")]
		DoNotLoop = 0,
		[Token(Token = "0x4002230")]
		LoopSubitem = 1,
		[Token(Token = "0x4002231")]
		LoopSequence = 2,
		[Token(Token = "0x4002232")]
		PlaySequenceAndLoopLast = 4,
		[Token(Token = "0x4002233")]
		IntroLoopOutroSequence = 5
	}

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoopMode Loop;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int loopSequenceCount;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float loopSequenceOverlap;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float loopSequenceRandomDelay;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float loopSequenceRandomPitch;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float loopSequenceRandomVolume;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool DestroyOnLoad;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Volume;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioPickSubItemMode SubItemPickMode;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MinTimeBetweenPlayCalls;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int MaxInstanceCount;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Delay;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool overrideAudioSourceSettings;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float audioSource_MinDistance;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float audioSource_MaxDistance;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSubItem[] subItems;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal int _lastChosen;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal double _lastPlayedTime;

	[NonSerialized]
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioCategory _category;

	[Token(Token = "0x1700009F")]
	public AudioCategory category
	{
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xF3967C", Offset = "0xF3967C", VA = "0xF3967C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xF3DCC4", Offset = "0xF3DCC4", VA = "0xF3DCC4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xF3DCCC", Offset = "0xF3DCCC", VA = "0xF3DCCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xF345AC", Offset = "0xF345AC", VA = "0xF345AC")]
	internal void _Initialize(AudioCategory categ)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xF3DCEC", Offset = "0xF3DCEC", VA = "0xF3DCEC")]
	private void _NormalizeSubItems()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xF3DEF0", Offset = "0xF3DEF0", VA = "0xF3DEF0")]
	private static bool _IsValidSubItem(AudioSubItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xF34A68", Offset = "0xF34A68", VA = "0xF34A68")]
	public void UnloadAudioClip()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xF39374", Offset = "0xF39374", VA = "0xF39374")]
	public AudioItem()
	{
	}
}
[Token(Token = "0x200014B")]
public enum AudioSubItemType
{
	[Token(Token = "0x40009B1")]
	Clip,
	[Token(Token = "0x40009B2")]
	Item
}
[Serializable]
[Token(Token = "0x200014C")]
public class AudioSubItem
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSubItemType SubItemType;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Probability;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOtherSubitems;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ItemModeAudioID;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip Clip;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Volume;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float PitchShift;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Pan2D;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Delay;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RandomPitch;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float RandomVolume;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RandomDelay;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float ClipStopTime;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ClipStartTime;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float FadeIn;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float FadeOut;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool RandomStartPosition;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _summedProbability;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	internal int _subItemID;

	[NonSerialized]
	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioItem _item;

	[Token(Token = "0x170000A0")]
	internal float _SummedProbability
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xB29040", Offset = "0xB29040", VA = "0xB29040")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xB29048", Offset = "0xB29048", VA = "0xB29048")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public AudioItem item
	{
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xB29058", Offset = "0xB29058", VA = "0xB29058")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xB29050", Offset = "0xB29050", VA = "0xB29050")]
		internal set
		{
		}
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xB29060", Offset = "0xB29060", VA = "0xB29060", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xB290E8", Offset = "0xB290E8", VA = "0xB290E8")]
	public AudioSubItem()
	{
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F54E0", Offset = "0x8F54E0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F54E0", Offset = "0x8F54E0")]
public class AudioObject : RegisteredComponent
{
	[Token(Token = "0x2000651")]
	public delegate void AudioEventDelegate(AudioObject audioObject);

	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7BB4", Offset = "0x8F7BB4")]
	private sealed class <_WaitForSecondsThenStop>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startToFadeTime;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioObject <>4__this;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeOutLength;

		[Token(Token = "0x170004F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F91")]
			[Address(RVA = "0x107F5B4", Offset = "0x107F5B4", VA = "0x107F5B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F93")]
			[Address(RVA = "0x107F624", Offset = "0x107F624", VA = "0x107F624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0x107F4BC", Offset = "0x107F4BC", VA = "0x107F4BC")]
		[DebuggerHidden]
		public <_WaitForSecondsThenStop>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x107F4E8", Offset = "0x107F4E8", VA = "0x107F4E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0x107F4EC", Offset = "0x107F4EC", VA = "0x107F4EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x107F5BC", Offset = "0x107F5BC", VA = "0x107F5BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7BC4", Offset = "0x8F7BC4")]
	private sealed class <_WaitThenPause>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioObject <>4__this;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int counter;

		[Token(Token = "0x170004F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F97")]
			[Address(RVA = "0x107F730", Offset = "0x107F730", VA = "0x107F730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F99")]
			[Address(RVA = "0x107F7A0", Offset = "0x107F7A0", VA = "0x107F7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x107F62C", Offset = "0x107F62C", VA = "0x107F62C")]
		[DebuggerHidden]
		public <_WaitThenPause>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0x107F658", Offset = "0x107F658", VA = "0x107F658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F96")]
		[Address(RVA = "0x107F65C", Offset = "0x107F65C", VA = "0x107F65C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0x107F738", Offset = "0x107F738", VA = "0x107F738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA7FC", Offset = "0x8FA7FC")]
	private string <audioID>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioCategory _category;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA80C", Offset = "0x8FA80C")]
	private bool <isPlayedAsMusic>k__BackingField;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSubItem _subItemPrimary;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSubItem _subItemSecondary;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioEventDelegate _completelyPlayedDelegate;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _pauseCoroutineCounter;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal float _volumeExcludingCategory;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _volumeFromPrimaryFade;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _volumeFromSecondaryFade;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal float _volumeFromScriptCall;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _paused;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _applicationPaused;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioFader _primaryFader;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioFader _secondaryFader;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private double _playTime;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private double _playStartTimeLocal;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private double _playStartTimeSystem;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private double _playScheduledTimeDsp;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private double _audioObjectTime;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _IsInactive;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool _stopRequested;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool _finishSequence;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int _loopSequenceCount;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _stopAfterFadeoutUserSetting;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _pauseWithFadeOutRequested;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private double _dspTimeRemainingAtPause;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioController _audioController;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	internal bool _isCurrentPlaylistTrack;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	internal float _audioSource_MinDistance_Saved;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	internal float _audioSource_MaxDistance_Saved;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	internal int _lastChosenSubItemIndex;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource _audioSource1;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource _audioSource2;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _primaryAudioSourcePaused;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool _secondaryAudioSourcePaused;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA81C", Offset = "0x8FA81C")]
	private AudioLowPassFilter <lowPassFilter>k__BackingField;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA82C", Offset = "0x8FA82C")]
	private AudioHighPassFilter <highPassFilter>k__BackingField;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA83C", Offset = "0x8FA83C")]
	private AudioEchoFilter <echoFilter>k__BackingField;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA84C", Offset = "0x8FA84C")]
	private AudioChorusFilter <chorusFilter>k__BackingField;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA85C", Offset = "0x8FA85C")]
	private AudioDistortionFilter <distortionFilter>k__BackingField;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA86C", Offset = "0x8FA86C")]
	private AudioReverbFilter <reverbFilter>k__BackingField;

	[Token(Token = "0x40009F1")]
	private const float VOLUME_TRANSFORM_POWER = 1.6f;

	[Token(Token = "0x170000A2")]
	public string audioID
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xF38288", Offset = "0xF38288", VA = "0xF38288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BEDC", Offset = "0x90BEDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xF3B7AC", Offset = "0xF3B7AC", VA = "0xF3B7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BEEC", Offset = "0x90BEEC")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public AudioCategory category
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xF34898", Offset = "0xF34898", VA = "0xF34898")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xF3CF24", Offset = "0xF3CF24", VA = "0xF3CF24")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public AudioSubItem subItem
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF4563C", Offset = "0xF4563C", VA = "0xF4563C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF3CDB0", Offset = "0xF3CDB0", VA = "0xF3CDB0")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public bool isPlayedAsMusic
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xF45644", Offset = "0xF45644", VA = "0xF45644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BEFC", Offset = "0x90BEFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF3CF2C", Offset = "0xF3CF2C", VA = "0xF3CF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BF0C", Offset = "0x90BF0C")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public AudioItem audioItem
	{
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF4564C", Offset = "0xF4564C", VA = "0xF4564C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public AudioEventDelegate completelyPlayedDelegate
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xF45668", Offset = "0xF45668", VA = "0xF45668")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xF45660", Offset = "0xF45660", VA = "0xF45660")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float volume
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF45670", Offset = "0xF45670", VA = "0xF45670")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xF456E0", Offset = "0xF456E0", VA = "0xF456E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public float volumeItem
	{
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF45744", Offset = "0xF45744", VA = "0xF45744")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF4575C", Offset = "0xF4575C", VA = "0xF4575C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public float volumeTotal
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF4576C", Offset = "0xF4576C", VA = "0xF4576C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AB")]
	public float volumeTotalWithoutFade
	{
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF45794", Offset = "0xF45794", VA = "0xF45794")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AC")]
	public double playCalledAtTime
	{
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF45888", Offset = "0xF45888", VA = "0xF45888")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000AD")]
	public double startedPlayingAtTime
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xF3AA80", Offset = "0xF3AA80", VA = "0xF3AA80")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000AE")]
	public float timeUntilEnd
	{
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xF370C4", Offset = "0xF370C4", VA = "0xF370C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AF")]
	public double scheduledPlayingAtDspTime
	{
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xF458E0", Offset = "0xF458E0", VA = "0xF458E0")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xF458E8", Offset = "0xF458E8", VA = "0xF458E8")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public float clipLength
	{
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xF3CE28", Offset = "0xF3CE28", VA = "0xF3CE28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B1")]
	public float audioTime
	{
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF45890", Offset = "0xF45890", VA = "0xF45890")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xF4595C", Offset = "0xF4595C", VA = "0xF4595C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public bool isFadingOut
	{
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xF3AA04", Offset = "0xF3AA04", VA = "0xF3AA04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B3")]
	public bool isFadeOutComplete
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xF459B4", Offset = "0xF459B4", VA = "0xF459B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B4")]
	public bool isFadingOutOrScheduled
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xF45A28", Offset = "0xF45A28", VA = "0xF45A28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B5")]
	public bool isFadingIn
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xF45A5C", Offset = "0xF45A5C", VA = "0xF45A5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B6")]
	public float pitch
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xF45AD0", Offset = "0xF45AD0", VA = "0xF45AD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xF45B00", Offset = "0xF45B00", VA = "0xF45B00")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public float pan
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xF45B40", Offset = "0xF45B40", VA = "0xF45B40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xF45B70", Offset = "0xF45B70", VA = "0xF45B70")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public double audioObjectTime
	{
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xF45BB0", Offset = "0xF45BB0", VA = "0xF45BB0")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000B9")]
	public bool stopAfterFadeOut
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xF45BB8", Offset = "0xF45BB8", VA = "0xF45BB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xF45BC0", Offset = "0xF45BC0", VA = "0xF45BC0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public AudioSource primaryAudioSource
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xF39DDC", Offset = "0xF39DDC", VA = "0xF39DDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public AudioSource secondaryAudioSource
	{
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xF3B7B4", Offset = "0xF3B7B4", VA = "0xF3B7B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	internal float _volumeFromCategory
	{
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xF45730", Offset = "0xF45730", VA = "0xF45730")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BD")]
	internal float _volumeWithCategory
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xF456A8", Offset = "0xF456A8", VA = "0xF456A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BE")]
	private float _stopClipAtTime
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xF4592C", Offset = "0xF4592C", VA = "0xF4592C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BF")]
	private float _startClipAtTime
	{
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xF45944", Offset = "0xF45944", VA = "0xF45944")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C0")]
	public AudioLowPassFilter lowPassFilter
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xF46FC0", Offset = "0xF46FC0", VA = "0xF46FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BFE4", Offset = "0x90BFE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xF46FC8", Offset = "0xF46FC8", VA = "0xF46FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BFF4", Offset = "0x90BFF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public AudioHighPassFilter highPassFilter
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xF46FD0", Offset = "0xF46FD0", VA = "0xF46FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C004", Offset = "0x90C004")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xF46FD8", Offset = "0xF46FD8", VA = "0xF46FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C014", Offset = "0x90C014")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public AudioEchoFilter echoFilter
	{
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xF46FE0", Offset = "0xF46FE0", VA = "0xF46FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C024", Offset = "0x90C024")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xF46FE8", Offset = "0xF46FE8", VA = "0xF46FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C034", Offset = "0x90C034")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public AudioChorusFilter chorusFilter
	{
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF46FF0", Offset = "0xF46FF0", VA = "0xF46FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C044", Offset = "0x90C044")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xF46FF8", Offset = "0xF46FF8", VA = "0xF46FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C054", Offset = "0x90C054")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public AudioDistortionFilter distortionFilter
	{
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xF47000", Offset = "0xF47000", VA = "0xF47000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C064", Offset = "0x90C064")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF47008", Offset = "0xF47008", VA = "0xF47008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C074", Offset = "0x90C074")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public AudioReverbFilter reverbFilter
	{
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xF47010", Offset = "0xF47010", VA = "0xF47010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C084", Offset = "0x90C084")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xF47018", Offset = "0xF47018", VA = "0xF47018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C094", Offset = "0x90C094")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	private bool _shouldStopIfPrimaryFadedOut
	{
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xF45D30", Offset = "0xF45D30", VA = "0xF45D30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xF39B00", Offset = "0xF39B00", VA = "0xF39B00")]
	public void FadeIn(float fadeInTime)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xF3CF8C", Offset = "0xF3CF8C", VA = "0xF3CF8C")]
	public void PlayScheduled(double dspTime)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xF45EDC", Offset = "0xF45EDC", VA = "0xF45EDC")]
	public void PlayAfter(string audioID, double deltaDspTime = 0.0, float volume = 1f, float startTime = 0f)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xF45F78", Offset = "0xF45F78", VA = "0xF45F78")]
	public void PlayNow(string audioID, float delay = 0f, float volume = 1f, float startTime = 0f)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xF34EF8", Offset = "0xF34EF8", VA = "0xF34EF8")]
	public void Play(float delay = 0f)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xF37514", Offset = "0xF37514", VA = "0xF37514")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xF37520", Offset = "0xF37520", VA = "0xF37520")]
	public void Stop(float fadeOutLength)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xF462AC", Offset = "0xF462AC", VA = "0xF462AC")]
	public void Stop(float fadeOutLength, float startToFadeTime)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xF467E8", Offset = "0xF467E8", VA = "0xF467E8")]
	public void FinishSequence()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xF463C0", Offset = "0xF463C0", VA = "0xF463C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BF1C", Offset = "0x90BF1C")]
	private IEnumerator _WaitForSecondsThenStop(float startToFadeTime, float fadeOutLength)
	{
		return null;
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xF46868", Offset = "0xF46868", VA = "0xF46868")]
	public void FadeOut(float fadeOutLength)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xF4658C", Offset = "0xF4658C", VA = "0xF4658C")]
	public void FadeOut(float fadeOutLength, float startToFadeTime)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xF34EFC", Offset = "0xF34EFC", VA = "0xF34EFC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xF37894", Offset = "0xF37894", VA = "0xF37894")]
	public void Pause(float fadeOutTime)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xF46928", Offset = "0xF46928", VA = "0xF46928")]
	private void _PauseNow()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xF46ACC", Offset = "0xF46ACC", VA = "0xF46ACC")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xF35DE0", Offset = "0xF35DE0", VA = "0xF35DE0")]
	public void Unpause(float fadeInTime)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xF46AFC", Offset = "0xF46AFC", VA = "0xF46AFC")]
	private void _UnpauseNow()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xF46870", Offset = "0xF46870", VA = "0xF46870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BF80", Offset = "0x90BF80")]
	private IEnumerator _WaitThenPause(float waitTime, int counter)
	{
		return null;
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xF469BC", Offset = "0xF469BC", VA = "0xF469BC")]
	private void _PauseAudioSources()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xF34ED4", Offset = "0xF34ED4", VA = "0xF34ED4")]
	public bool IsPaused(bool returnTrueIfStillFadingOut = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xF3708C", Offset = "0xF3708C", VA = "0xF3708C")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xF46C5C", Offset = "0xF46C5C", VA = "0xF46C5C")]
	public bool IsPrimaryPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xF46650", Offset = "0xF46650", VA = "0xF46650")]
	public bool IsSecondaryPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xF466F0", Offset = "0xF466F0", VA = "0xF466F0")]
	public void SwitchAudioSources()
	{
	}

	[Token(Token = "0x6000BD0")]
	private void _SwitchValues<T>(ref T v1, ref T v2)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xF47020", Offset = "0xF47020", VA = "0xF47020", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xF46C8C", Offset = "0xF46C8C", VA = "0xF46C8C")]
	private void _CreateSecondAudioSource()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xF472BC", Offset = "0xF472BC", VA = "0xF472BC")]
	private void _Set0()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xF47428", Offset = "0xF47428", VA = "0xF47428")]
	private void _SetReferences0()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xF45D50", Offset = "0xF45D50", VA = "0xF45D50")]
	private void _PlayScheduled(double dspTime)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xF46124", Offset = "0xF46124", VA = "0xF46124")]
	private void _PlayDelayed(float delay)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xF47510", Offset = "0xF47510", VA = "0xF47510")]
	private void _OnPlay()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xF46470", Offset = "0xF46470", VA = "0xF46470")]
	private void _Stop()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xF4756C", Offset = "0xF4756C", VA = "0xF4756C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xF47DC4", Offset = "0xF47DC4", VA = "0xF47DC4")]
	private void _StartFadeOutIfNecessary()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xF47A34", Offset = "0xF47A34", VA = "0xF47A34")]
	private bool _IsAudioLoopSequenceMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xF47AB0", Offset = "0xF47AB0", VA = "0xF47AB0")]
	private bool _ScheduleNextInLoopSequence()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xF45BCC", Offset = "0xF45BCC", VA = "0xF45BCC")]
	private void _UpdateFadeVolume()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xF47F60", Offset = "0xF47F60", VA = "0xF47F60")]
	private float _EqualizePowerForCrossfading(float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xF48140", Offset = "0xF48140", VA = "0xF48140")]
	private void OnApplicationPause(bool b)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xF4814C", Offset = "0xF4814C", VA = "0xF4814C")]
	private void SetApplicationPaused(bool isPaused)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xF4798C", Offset = "0xF4798C", VA = "0xF4798C")]
	public void DestroyAudioObject()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xF3CD3C", Offset = "0xF3CD3C", VA = "0xF3CD3C")]
	public static float TransformVolume(float volume)
	{
		return default(float);
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xF480D0", Offset = "0xF480D0", VA = "0xF480D0")]
	public static float InverseTransformVolume(float volume)
	{
		return default(float);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xF3CDB8", Offset = "0xF3CDB8", VA = "0xF3CDB8")]
	public static float TransformPitch(float pitchSemiTones)
	{
		return default(float);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xF48158", Offset = "0xF48158", VA = "0xF48158")]
	public static float InverseTransformPitch(float pitch)
	{
		return default(float);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xF348DC", Offset = "0xF348DC", VA = "0xF348DC")]
	internal void _ApplyVolumeBoth()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xF3CF38", Offset = "0xF3CF38", VA = "0xF3CF38")]
	internal void _ApplyVolumePrimary()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xF48010", Offset = "0xF48010", VA = "0xF48010")]
	internal void _ApplyVolumeSecondary()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xF481DC", Offset = "0xF481DC", VA = "0xF481DC", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xF48228", Offset = "0xF48228", VA = "0xF48228")]
	private void _RestoreAudioSourceSettings()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xF38290", Offset = "0xF38290", VA = "0xF38290")]
	public bool DoesBelongToCategory(string categoryName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xF47EF0", Offset = "0xF47EF0", VA = "0xF47EF0")]
	private float _GetRandomLoopSequenceDelay(AudioItem audioItem)
	{
		return default(float);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xF48344", Offset = "0xF48344", VA = "0xF48344")]
	public AudioObject()
	{
	}
}
[Token(Token = "0x200014E")]
public static class ArrayHelper
{
	[Token(Token = "0x6000BFF")]
	public static T AddArrayElement<T>(ref T[] array) where T : new()
	{
		return (T)null;
	}

	[Token(Token = "0x6000C00")]
	public static T AddArrayElement<T>(ref T[] array, T elToAdd)
	{
		return (T)null;
	}

	[Token(Token = "0x6000C01")]
	public static void DeleteArrayElement<T>(ref T[] array, int index)
	{
	}
}
[Token(Token = "0x200014F")]
public class HashSet_Flash<T> : HashSet<T>
{
	[Token(Token = "0x6000C02")]
	public HashSet_Flash()
	{
	}
}
[Token(Token = "0x2000150")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5568", Offset = "0x8F5568")]
public class PoolableObject : MonoBehaviour
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxPoolSize;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int preloadCount;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doNotDestroyOnLoad;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool sendAwakeStartOnDestroyMessage;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool sendPoolableActivateDeactivateMessages;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	internal bool _isAvailableForPooling;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	internal bool _createdWithPoolController;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	internal bool _destroyMessageFromPoolController;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	internal bool _wasPreloaded;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	internal bool _wasStartCalledByUnity;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal ObjectPoolController.ObjectPool _myPool;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal int _serialNumber;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal int _usageCount;

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xAA36AC", Offset = "0xAA36AC", VA = "0xAA36AC")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xAA36B8", Offset = "0xAA36B8", VA = "0xAA36B8")]
	private static void _InvokeMethodByName(MonoBehaviour behaviour, string methodName)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xAA3754", Offset = "0xAA3754", VA = "0xAA3754")]
	private static void _BroadcastMessageToGameObject(GameObject go, string message)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xAA3920", Offset = "0xAA3920", VA = "0xAA3920")]
	private static void _BroadcastMessageToAllChildren(GameObject go, string message)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xAA3B8C", Offset = "0xAA3B8C", VA = "0xAA3B8C")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xAA3C10", Offset = "0xAA3C10", VA = "0xAA3C10")]
	public int GetSerialNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xAA3C18", Offset = "0xAA3C18", VA = "0xAA3C18")]
	public int GetUsageCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xAA3C20", Offset = "0xAA3C20", VA = "0xAA3C20")]
	public int DeactivateAllPoolableObjectsOfMyKind()
	{
		return default(int);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xAA3C34", Offset = "0xAA3C34", VA = "0xAA3C34")]
	public bool IsDeactivated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xAA3C3C", Offset = "0xAA3C3C", VA = "0xAA3C3C")]
	public PoolableObject[] GetAllPoolableObjectsOfMyKind(bool includeInactiveObjects)
	{
		return null;
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xAA3C54", Offset = "0xAA3C54", VA = "0xAA3C54")]
	public PoolableObject()
	{
	}
}
[Token(Token = "0x2000151")]
public static class ObjectPoolController
{
	[Token(Token = "0x2000654")]
	internal class ObjectPool
	{
		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet_Flash<PoolableObject> _pool;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PoolableObject _prefabPoolObj;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _poolParentDummy;

		[Token(Token = "0x170004FB")]
		internal Transform poolParentDummy
		{
			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0x19DE7A0", Offset = "0x19DE7A0", VA = "0x19DE7A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0x19DE7C4", Offset = "0x19DE7C4", VA = "0x19DE7C4")]
		private void _ValidatePoolParentDummy()
		{
		}

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0x19DE698", Offset = "0x19DE698", VA = "0x19DE698")]
		public ObjectPool(GameObject prefab)
		{
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0x19DE968", Offset = "0x19DE968", VA = "0x19DE968")]
		private void _ValidatePooledObjectDataContainer()
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x19DE9E8", Offset = "0x19DE9E8", VA = "0x19DE9E8")]
		internal void Remove(PoolableObject poolObj)
		{
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0x19DE5CC", Offset = "0x19DE5CC", VA = "0x19DE5CC")]
		internal int GetObjectCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0x19DD574", Offset = "0x19DD574", VA = "0x19DD574")]
		internal GameObject GetPooledInstance(Vector3? position, Quaternion? rotation)
		{
			return null;
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0x19DE62C", Offset = "0x19DE62C", VA = "0x19DE62C")]
		internal PoolableObject PreloadInstance()
		{
			return null;
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0x19DEA58", Offset = "0x19DEA58", VA = "0x19DEA58")]
		private PoolableObject _NewPooledInstance(Vector3? position, Quaternion? rotation)
		{
			return null;
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0x19DEDAC", Offset = "0x19DEDAC", VA = "0x19DEDAC")]
		internal int _SetAllAvailable()
		{
			return default(int);
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0x19DEF30", Offset = "0x19DEF30", VA = "0x19DEF30")]
		internal PoolableObject[] _GetAllObjects(bool includeInactiveObjects)
		{
			return null;
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0x19DE250", Offset = "0x19DE250", VA = "0x19DE250")]
		internal void _SetAvailable(PoolableObject poolObj, bool b)
		{
		}

		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0x19DE930", Offset = "0x19DE930", VA = "0x19DE930")]
		private void _SetActive(GameObject obj, bool active)
		{
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0x19DF58C", Offset = "0x19DF58C", VA = "0x19DF58C")]
		private bool _GetActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0x19DF434", Offset = "0x19DF434", VA = "0x19DF434")]
		private void _SetActiveAndSendMessages(GameObject obj, PoolableObject parentPoolObj)
		{
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x19DF114", Offset = "0x19DF114", VA = "0x19DF114")]
		private void _RecursivelySetInactiveAndSendMessages(GameObject obj, PoolableObject parentPoolObj, bool recursiveCall)
		{
		}
	}

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA87C", Offset = "0x8FA87C")]
	private static bool <isDuringPreload>k__BackingField;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	internal static int _globalSerialNumber;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static bool _isDuringInstantiate;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<GameObject, ObjectPool> _pools;

	[Token(Token = "0x170000C7")]
	public static bool isDuringPreload
	{
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x19DD1D0", Offset = "0x19DD1D0", VA = "0x19DD1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C0A4", Offset = "0x90C0A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x19DD238", Offset = "0x19DD238", VA = "0x19DD238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C0B4", Offset = "0x90C0B4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x19DD2A8", Offset = "0x19DD2A8", VA = "0x19DD2A8")]
	public static GameObject Instantiate(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x19DDA80", Offset = "0x19DDA80", VA = "0x19DDA80")]
	public static GameObject Instantiate(GameObject prefab, Vector3 position, Quaternion quaternion)
	{
		return null;
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x19DD990", Offset = "0x19DD990", VA = "0x19DD990")]
	public static GameObject InstantiateWithoutPool(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x19DDCD0", Offset = "0x19DDCD0", VA = "0x19DDCD0")]
	public static GameObject InstantiateWithoutPool(GameObject prefab, Vector3 position, Quaternion quaternion)
	{
		return null;
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x19DDE78", Offset = "0x19DDE78", VA = "0x19DDE78")]
	public static void Destroy(GameObject obj)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x19DE398", Offset = "0x19DE398", VA = "0x19DE398")]
	public static void Preload(GameObject prefab)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x19DD43C", Offset = "0x19DD43C", VA = "0x19DD43C")]
	internal static ObjectPool _GetPool(PoolableObject prefabPoolComponent)
	{
		return null;
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x19DE05C", Offset = "0x19DE05C", VA = "0x19DE05C")]
	private static void _DetachChildrenAndDestroy(Transform transform)
	{
	}
}
[Token(Token = "0x2000152")]
public class PoolableReference<T> where T : Component
{
	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private PoolableObject _pooledObj;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _initialUsageCount;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T _objComponent;

	[Token(Token = "0x6000C19")]
	public PoolableReference()
	{
	}

	[Token(Token = "0x6000C1A")]
	public PoolableReference(T componentOfPoolableObject)
	{
	}

	[Token(Token = "0x6000C1B")]
	public PoolableReference(PoolableReference<T> poolableReference)
	{
	}

	[Token(Token = "0x6000C1C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C1D")]
	public T Get()
	{
		return null;
	}

	[Token(Token = "0x6000C1E")]
	public void Set(T componentOfPoolableObject)
	{
	}

	[Token(Token = "0x6000C1F")]
	public void Set(T componentOfPoolableObject, bool allowNonePoolable)
	{
	}
}
[Token(Token = "0x2000153")]
public interface IRegisteredComponent
{
	[Token(Token = "0x6000C20")]
	Type GetRegisteredComponentBaseClassType();
}
[Token(Token = "0x2000154")]
public abstract class RegisteredComponent : MonoBehaviour, IRegisteredComponent
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRegistered;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isUnregistered;

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xB5CFC8", Offset = "0xB5CFC8", VA = "0xB5CFC8", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xB5D210", Offset = "0xB5D210", VA = "0xB5D210", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xB5D67C", Offset = "0xB5D67C", VA = "0xB5D67C", Slot = "4")]
	public Type GetRegisteredComponentBaseClassType()
	{
		return null;
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xB5D6EC", Offset = "0xB5D6EC", VA = "0xB5D6EC")]
	protected RegisteredComponent()
	{
	}
}
[Token(Token = "0x2000155")]
public static class RegisteredComponentController
{
	[Token(Token = "0x2000655")]
	public class InstanceContainer : HashSet_Flash<IRegisteredComponent>
	{
		[Token(Token = "0x6002FAA")]
		[Address(RVA = "0xB5DA44", Offset = "0xB5DA44", VA = "0xB5DA44")]
		public InstanceContainer()
		{
		}
	}

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, InstanceContainer> _instanceContainers;

	[Token(Token = "0x6000C25")]
	public static T[] GetAllOfType<T>() where T : IRegisteredComponent
	{
		return null;
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xB5D6F4", Offset = "0xB5D6F4", VA = "0xB5D6F4")]
	public static object[] GetAllOfType(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000C27")]
	public static int InstanceCountOfType<T>() where T : IRegisteredComponent
	{
		return default(int);
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xB5D930", Offset = "0xB5D930", VA = "0xB5D930")]
	private static InstanceContainer _GetInstanceContainer(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xB5DA94", Offset = "0xB5DA94", VA = "0xB5DA94")]
	private static void _RegisterType(IRegisteredComponent component, Type type)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xB5D0A4", Offset = "0xB5D0A4", VA = "0xB5D0A4")]
	internal static void _Register(IRegisteredComponent component)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xB5DB70", Offset = "0xB5DB70", VA = "0xB5DB70")]
	internal static void _UnregisterType(IRegisteredComponent component, Type type)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xB5D510", Offset = "0xB5D510", VA = "0xB5D510")]
	internal static void _Unregister(IRegisteredComponent component)
	{
	}
}
[Token(Token = "0x2000156")]
public static class SystemTime
{
	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static double _timeAtLaunch;

	[Token(Token = "0x170000C8")]
	public static double time
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xDF5CF8", Offset = "0xDF5CF8", VA = "0xDF5CF8")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000C9")]
	public static double timeSinceLaunch
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xDF5D80", Offset = "0xDF5D80", VA = "0xDF5D80")]
		get
		{
			return default(double);
		}
	}
}
[Token(Token = "0x2000157")]
public class UnitySingleton<T> where T : MonoBehaviour
{
	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static Type _myType;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static GameObject _autoCreatePrefab;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _GlobalInstanceCount;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _awakeSingletonCalled;

	[Token(Token = "0x6000C31")]
	public static T GetSingleton(bool throwErrorIfNotFound, bool autoCreate)
	{
		return null;
	}

	[Token(Token = "0x6000C32")]
	private UnitySingleton()
	{
	}

	[Token(Token = "0x6000C33")]
	internal static void _Awake(T instance)
	{
	}

	[Token(Token = "0x6000C34")]
	internal static void _Destroy()
	{
	}

	[Token(Token = "0x6000C35")]
	private static void _AwakeSingleton(T instance)
	{
	}
}
[Token(Token = "0x2000158")]
internal interface ISingletonMonoBehaviour
{
	[Token(Token = "0x170000CA")]
	bool isSingletonObject
	{
		[Token(Token = "0x6000C37")]
		get;
	}
}
[Token(Token = "0x2000159")]
public abstract class SingletonMonoBehaviour<T> : MonoBehaviour, ISingletonMonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x170000CB")]
	public static T Instance
	{
		[Token(Token = "0x6000C38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CC")]
	public virtual bool isSingletonObject
	{
		[Token(Token = "0x6000C3F")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C39")]
	public static T DoesInstanceExist()
	{
		return null;
	}

	[Token(Token = "0x6000C3A")]
	public static void ActivateSingletonInstance()
	{
	}

	[Token(Token = "0x6000C3B")]
	public static void SetSingletonAutoCreate(GameObject autoCreatePrefab)
	{
	}

	[Token(Token = "0x6000C3C")]
	public static void SetSingletonType(Type type)
	{
	}

	[Token(Token = "0x6000C3D")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000C3E")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000C40")]
	protected SingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x200015A")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xAA5A84", Offset = "0xAA5A84", VA = "0xAA5A84")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xAA5A88", Offset = "0xAA5A88", VA = "0xAA5A88")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xAA5B18", Offset = "0xAA5B18", VA = "0xAA5B18")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x200015B")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xAE09F8", Offset = "0xAE09F8", VA = "0xAE09F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xAE0AE8", Offset = "0xAE0AE8", VA = "0xAE0AE8")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xAE0B2C", Offset = "0xAE0B2C", VA = "0xAE0B2C")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xAE0CA4", Offset = "0xAE0CA4", VA = "0xAE0CA4")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xAE0E1C", Offset = "0xAE0E1C", VA = "0xAE0E1C")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x200015C")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera lookAtCamera;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookOnlyOnAwake;

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xD357B4", Offset = "0xD357B4", VA = "0xD357B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xD358B0", Offset = "0xD358B0", VA = "0xD358B0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xD35850", Offset = "0xD35850", VA = "0xD35850")]
	public void LookCam()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xD358C0", Offset = "0xD358C0", VA = "0xD358C0")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F55A0", Offset = "0x8F55A0")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xB6620C", Offset = "0xB6620C", VA = "0xB6620C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xB66660", Offset = "0xB66660", VA = "0xB66660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xB66210", Offset = "0xB66210", VA = "0xB66210")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xB66664", Offset = "0xB66664", VA = "0xB66664")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xB66C0C", Offset = "0xB66C0C", VA = "0xB66C0C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xB66CBC", Offset = "0xB66CBC", VA = "0xB66CBC")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x200015E")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockController _spawner;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 _wayPoint;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool _dived;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _stuckCounter;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float _damping;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool _soar;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool _landing;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float _targetSpeed;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool _move;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float _avoidValue;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float _avoidDistance;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool _avoid;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xCCB7A8", Offset = "0xCCB7A8", VA = "0xCCB7A8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xCCC1A0", Offset = "0xCCC1A0", VA = "0xCCC1A0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xCCCB50", Offset = "0xCCCB50", VA = "0xCCCB50")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xCCCBB0", Offset = "0xCCCBB0", VA = "0xCCCBB0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xCCB958", Offset = "0xCCB958", VA = "0xCCB958")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xCCBDC4", Offset = "0xCCBDC4", VA = "0xCCBDC4")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xCCC0D4", Offset = "0xCCC0D4", VA = "0xCCC0D4")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xCCBB90", Offset = "0xCCBB90", VA = "0xCCBB90")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xCCC220", Offset = "0xCCC220", VA = "0xCCC220")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xCCC2B8", Offset = "0xCCC2B8", VA = "0xCCC2B8")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xCCC41C", Offset = "0xCCC41C", VA = "0xCCC41C")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xCCCDC0", Offset = "0xCCCDC0", VA = "0xCCCDC0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xCCC8B0", Offset = "0xCCC8B0", VA = "0xCCC8B0")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xCCBAAC", Offset = "0xCCBAAC", VA = "0xCCBAAC")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xCCD530", Offset = "0xCCD530", VA = "0xCCD530")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xCCCCBC", Offset = "0xCCCCBC", VA = "0xCCCCBC")]
	public void Flap()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xCCBC28", Offset = "0xCCBC28", VA = "0xCCBC28")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xCCD61C", Offset = "0xCCD61C", VA = "0xCCD61C")]
	public void Soar()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xCCD6E0", Offset = "0xCCD6E0", VA = "0xCCD6E0")]
	public void Dive()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xCCDA9C", Offset = "0xCCDA9C", VA = "0xCCDA9C")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xCCDE20", Offset = "0xCCDE20", VA = "0xCCDE20")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F55D8", Offset = "0x8F55D8")]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1004BF8", Offset = "0x1004BF8", VA = "0x1004BF8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1004CD4", Offset = "0x1004CD4", VA = "0x1004CD4")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x1004FEC", Offset = "0x1004FEC", VA = "0x1004FEC")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x1005154", Offset = "0x1005154", VA = "0x1005154")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x2000160")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x1005178", Offset = "0x1005178", VA = "0x1005178")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x10052D4", Offset = "0x10052D4", VA = "0x10052D4")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x100557C", Offset = "0x100557C", VA = "0x100557C")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x10055E4", Offset = "0x10055E4", VA = "0x10055E4")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x1005758", Offset = "0x1005758", VA = "0x1005758")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x10053D8", Offset = "0x10053D8", VA = "0x10053D8")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x10057C8", Offset = "0x10057C8", VA = "0x10057C8")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x10058A4", Offset = "0x10058A4", VA = "0x10058A4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x1005B9C", Offset = "0x1005B9C", VA = "0x1005B9C")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x1005D64", Offset = "0x1005D64", VA = "0x1005D64")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1005E84", Offset = "0x1005E84", VA = "0x1005E84")]
	public FlockController()
	{
	}
}
[Token(Token = "0x2000161")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x1005F9C", Offset = "0x1005F9C", VA = "0x1005F9C")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x10060B4", Offset = "0x10060B4", VA = "0x10060B4")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x10061A4", Offset = "0x10061A4", VA = "0x10061A4")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1006378", Offset = "0x1006378", VA = "0x1006378")]
	private void Invoker()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1006410", Offset = "0x1006410", VA = "0x1006410")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1006490", Offset = "0x1006490", VA = "0x1006490")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x10064E4", Offset = "0x10064E4", VA = "0x10064E4")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x2000162")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1006500", Offset = "0x1006500", VA = "0x1006500")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x10065EC", Offset = "0x10065EC", VA = "0x10065EC")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1006620", Offset = "0x1006620", VA = "0x1006620")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x2000163")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x1751E08", Offset = "0x1751E08", VA = "0x1751E08")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x1752428", Offset = "0x1752428", VA = "0x1752428")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x2000164")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x2000656")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7BD4", Offset = "0x8F7BD4")]
	private sealed class <GetFlockChild>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x170004FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0x1754A9C", Offset = "0x1754A9C", VA = "0x1754A9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0x1754B0C", Offset = "0x1754B0C", VA = "0x1754B0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FAB")]
		[Address(RVA = "0x17538A8", Offset = "0x17538A8", VA = "0x17538A8")]
		[DebuggerHidden]
		public <GetFlockChild>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002FAC")]
		[Address(RVA = "0x175420C", Offset = "0x175420C", VA = "0x175420C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FAD")]
		[Address(RVA = "0x1754210", Offset = "0x1754210", VA = "0x1754210", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x1754AA4", Offset = "0x1754AA4", VA = "0x1754AA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LandingSpotController _controller;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x1752438", Offset = "0x1752438", VA = "0x1752438")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x1752660", Offset = "0x1752660", VA = "0x1752660")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1752B90", Offset = "0x1752B90", VA = "0x1752B90")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x17537D8", Offset = "0x17537D8", VA = "0x17537D8")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x17535C0", Offset = "0x17535C0", VA = "0x17535C0")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x17525B0", Offset = "0x17525B0", VA = "0x17525B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C0C4", Offset = "0x90C0C4")]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x17538D4", Offset = "0x17538D4", VA = "0x17538D4")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x1753DAC", Offset = "0x1753DAC", VA = "0x1753DAC")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1754204", Offset = "0x1754204", VA = "0x1754204")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x2000165")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x2000657")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7BE4", Offset = "0x8F7BE4")]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x170004FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0x1755460", Offset = "0x1755460", VA = "0x1755460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FB6")]
			[Address(RVA = "0x17554D0", Offset = "0x17554D0", VA = "0x17554D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FB1")]
		[Address(RVA = "0x1754F54", Offset = "0x1754F54", VA = "0x1754F54")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002FB2")]
		[Address(RVA = "0x17552A4", Offset = "0x17552A4", VA = "0x17552A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB3")]
		[Address(RVA = "0x17552A8", Offset = "0x17552A8", VA = "0x17552A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0x1755468", Offset = "0x1755468", VA = "0x1755468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000658")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7BF4", Offset = "0x8F7BF4")]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000500")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0x175522C", Offset = "0x175522C", VA = "0x175522C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000501")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FBC")]
			[Address(RVA = "0x175529C", Offset = "0x175529C", VA = "0x175529C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0x1754F80", Offset = "0x1754F80", VA = "0x1754F80")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002FB8")]
		[Address(RVA = "0x1755070", Offset = "0x1755070", VA = "0x1755070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0x1755074", Offset = "0x1755074", VA = "0x1755074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0x1755234", Offset = "0x1755234", VA = "0x1755234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x1754B14", Offset = "0x1754B14", VA = "0x1754B14")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x1752218", Offset = "0x1752218", VA = "0x1752218")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x1754DC8", Offset = "0x1754DC8", VA = "0x1754DC8")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x1752224", Offset = "0x1752224", VA = "0x1752224")]
	public void LandAll()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x1754D30", Offset = "0x1754D30", VA = "0x1754D30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C128", Offset = "0x90C128")]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x1752390", Offset = "0x1752390", VA = "0x1752390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C18C", Offset = "0x90C18C")]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x1754FAC", Offset = "0x1754FAC", VA = "0x1754FAC")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x2000166")]
public class HapticHelper : MonoBehaviour
{
	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticHelper instance;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelL;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelR;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FA97C", Offset = "0x8FA97C")]
	public AudioClip GoodAudio;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip BadAudio;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] ExtraAudioClips;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVRHapticsClip GoodClip;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRHapticsClip BadClip;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRHapticsClip proceduralClip;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRHapticsClip ExtraClip;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FA9B4", Offset = "0x8FA9B4")]
	public bool AlwaysPreempt;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FA9EC", Offset = "0x8FA9EC")]
	public bool TestMode;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public OVRInput.Controller myController;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRInput.Button ClipButton;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public OVRInput.Button ProceduralButton;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip ClipToTest;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FAA24", Offset = "0x8FAA24")]
	public bool continuous;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FAA5C", Offset = "0x8FAA5C")]
	public int pIntensity;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FAA78", Offset = "0x8FAA78")]
	public int pLength;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool useSin;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SinSpeed;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x10114A8", Offset = "0x10114A8", VA = "0x10114A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x10115BC", Offset = "0x10115BC", VA = "0x10115BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x1011718", Offset = "0x1011718", VA = "0x1011718")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x1011B20", Offset = "0x1011B20", VA = "0x1011B20")]
	public void PlayGoodClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x1011C98", Offset = "0x1011C98", VA = "0x1011C98")]
	public void PlayBadClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x1011D4C", Offset = "0x1011D4C", VA = "0x1011D4C")]
	public void PlayExtraClips(bool isLeft, int index, bool preempt = false)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x1011894", Offset = "0x1011894", VA = "0x1011894")]
	public void PlayHapticAudioClip(bool isLeft, AudioClip aClip, bool preempt = false)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x10119FC", Offset = "0x10119FC", VA = "0x10119FC")]
	public void ProceduralTone(bool Left, int intensity, int length = 25)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x1011938", Offset = "0x1011938", VA = "0x1011938")]
	public void GenerateSinPulse(bool Left, int intensity, float speed, int length = 25)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x1011C1C", Offset = "0x1011C1C", VA = "0x1011C1C")]
	public void ClipPlayer(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x1011BD4", Offset = "0x1011BD4", VA = "0x1011BD4")]
	public void ClipPlayerNow(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x1011E28", Offset = "0x1011E28", VA = "0x1011E28")]
	public HapticHelper()
	{
	}
}
[Token(Token = "0x2000167")]
public class PlayHapticEvent : MonoBehaviour
{
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playGood;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playBad;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool playIndex;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool playProcedrual;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool playClip;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip aClip;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FAA94", Offset = "0x8FAA94")]
	public bool continuous;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FAACC", Offset = "0x8FAACC")]
	public int pIntensity;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FAAE8", Offset = "0x8FAAE8")]
	public int pLength;

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xAA13DC", Offset = "0xAA13DC", VA = "0xAA13DC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xAA17D0", Offset = "0xAA17D0", VA = "0xAA17D0")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xAA1930", Offset = "0xAA1930", VA = "0xAA1930")]
	public PlayHapticEvent()
	{
	}
}
[Token(Token = "0x2000168")]
public class JsonNetSample : MonoBehaviour
{
	[Token(Token = "0x2000659")]
	public class Product
	{
		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime ExpiryDate;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public decimal Price;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Sizes;

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0xFD8868", Offset = "0xFD8868", VA = "0xFD8868", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0xFD89B0", Offset = "0xFD89B0", VA = "0xFD89B0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0xFD8748", Offset = "0xFD8748", VA = "0xFD8748")]
		public Product()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200065A")]
	public class CharacterListItem
	{
		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90320C", Offset = "0x90320C")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90321C", Offset = "0x90321C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90322C", Offset = "0x90322C")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90323C", Offset = "0x90323C")]
		private string <Class>k__BackingField;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90324C", Offset = "0x90324C")]
		private string <Sex>k__BackingField;

		[Token(Token = "0x17000502")]
		public int Id
		{
			[Token(Token = "0x6002FC0")]
			[Address(RVA = "0xFD8738", Offset = "0xFD8738", VA = "0xFD8738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9158C0", Offset = "0x9158C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002FC1")]
			[Address(RVA = "0xFD87BC", Offset = "0xFD87BC", VA = "0xFD87BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9158D0", Offset = "0x9158D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000503")]
		public string Name
		{
			[Token(Token = "0x6002FC2")]
			[Address(RVA = "0xFD8740", Offset = "0xFD8740", VA = "0xFD8740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9158E0", Offset = "0x9158E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FC3")]
			[Address(RVA = "0xFD87C4", Offset = "0xFD87C4", VA = "0xFD87C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9158F0", Offset = "0x9158F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000504")]
		public int Level
		{
			[Token(Token = "0x6002FC4")]
			[Address(RVA = "0xFD87CC", Offset = "0xFD87CC", VA = "0xFD87CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915900", Offset = "0x915900")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002FC5")]
			[Address(RVA = "0xFD87D4", Offset = "0xFD87D4", VA = "0xFD87D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915910", Offset = "0x915910")]
			set
			{
			}
		}

		[Token(Token = "0x17000505")]
		public string Class
		{
			[Token(Token = "0x6002FC6")]
			[Address(RVA = "0xFD87DC", Offset = "0xFD87DC", VA = "0xFD87DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915920", Offset = "0x915920")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FC7")]
			[Address(RVA = "0xFD87E4", Offset = "0xFD87E4", VA = "0xFD87E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915930", Offset = "0x915930")]
			set
			{
			}
		}

		[Token(Token = "0x17000506")]
		public string Sex
		{
			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0xFD87EC", Offset = "0xFD87EC", VA = "0xFD87EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915940", Offset = "0x915940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0xFD87F4", Offset = "0xFD87F4", VA = "0xFD87F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915950", Offset = "0x915950")]
			set
			{
			}
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0xFD87FC", Offset = "0xFD87FC", VA = "0xFD87FC")]
		public CharacterListItem()
		{
		}
	}

	[Token(Token = "0x200065B")]
	public class Movie
	{
		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90325C", Offset = "0x90325C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90326C", Offset = "0x90326C")]
		private string <Description>k__BackingField;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90327C", Offset = "0x90327C")]
		private string <Classification>k__BackingField;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90328C", Offset = "0x90328C")]
		private string <Studio>k__BackingField;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90329C", Offset = "0x90329C")]
		private DateTime? <ReleaseDate>k__BackingField;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9032AC", Offset = "0x9032AC")]
		private List<string> <ReleaseCountries>k__BackingField;

		[Token(Token = "0x17000507")]
		public string Name
		{
			[Token(Token = "0x6002FCB")]
			[Address(RVA = "0xFD87AC", Offset = "0xFD87AC", VA = "0xFD87AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915960", Offset = "0x915960")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0xFD8804", Offset = "0xFD8804", VA = "0xFD8804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915970", Offset = "0x915970")]
			set
			{
			}
		}

		[Token(Token = "0x17000508")]
		public string Description
		{
			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0xFD880C", Offset = "0xFD880C", VA = "0xFD880C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915980", Offset = "0x915980")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FCE")]
			[Address(RVA = "0xFD8814", Offset = "0xFD8814", VA = "0xFD8814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915990", Offset = "0x915990")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public string Classification
		{
			[Token(Token = "0x6002FCF")]
			[Address(RVA = "0xFD881C", Offset = "0xFD881C", VA = "0xFD881C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9159A0", Offset = "0x9159A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0xFD8824", Offset = "0xFD8824", VA = "0xFD8824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9159B0", Offset = "0x9159B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		public string Studio
		{
			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0xFD882C", Offset = "0xFD882C", VA = "0xFD882C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9159C0", Offset = "0x9159C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0xFD8834", Offset = "0xFD8834", VA = "0xFD8834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9159D0", Offset = "0x9159D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		public DateTime? ReleaseDate
		{
			[Token(Token = "0x6002FD3")]
			[Address(RVA = "0xFD883C", Offset = "0xFD883C", VA = "0xFD883C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9159E0", Offset = "0x9159E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FD4")]
			[Address(RVA = "0xFD8848", Offset = "0xFD8848", VA = "0xFD8848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9159F0", Offset = "0x9159F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700050C")]
		public List<string> ReleaseCountries
		{
			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0xFD8850", Offset = "0xFD8850", VA = "0xFD8850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915A00", Offset = "0x915A00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FD6")]
			[Address(RVA = "0xFD8858", Offset = "0xFD8858", VA = "0xFD8858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915A10", Offset = "0x915A10")]
			set
			{
			}
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0xFD8860", Offset = "0xFD8860", VA = "0xFD8860")]
		public Movie()
		{
		}
	}

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Output;

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xFD7DEC", Offset = "0xFD7DEC", VA = "0xFD7DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xFD868C", Offset = "0xFD868C", VA = "0xFD868C")]
	private void WriteLine(string msg)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xFD7E94", Offset = "0xFD7E94", VA = "0xFD7E94")]
	private void TestJson()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xFD7F8C", Offset = "0xFD7F8C", VA = "0xFD7F8C")]
	private void SerailizeJson()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xFD8100", Offset = "0xFD8100", VA = "0xFD8100")]
	private void DeserializeJson()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xFD81A4", Offset = "0xFD81A4", VA = "0xFD81A4")]
	private void LinqToJson()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xFD8340", Offset = "0xFD8340", VA = "0xFD8340")]
	private void JsonPath()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xFD87B4", Offset = "0xFD87B4", VA = "0xFD87B4")]
	public JsonNetSample()
	{
	}
}
[Token(Token = "0x2000169")]
public class OldGUIExamplesCS : MonoBehaviour
{
	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D grumpy;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D beauty;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float w;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float h;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTRect buttonRect1;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTRect buttonRect2;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LTRect buttonRect3;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTRect buttonRect4;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTRect grumpyRect;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LTRect beautyTileRect;

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xCAB0CC", Offset = "0xCAB0CC", VA = "0xCAB0CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xCAB420", Offset = "0xCAB420", VA = "0xCAB420")]
	public void catMoved()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xCAB48C", Offset = "0xCAB48C", VA = "0xCAB48C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xCAC0D4", Offset = "0xCAC0D4", VA = "0xCAC0D4")]
	public OldGUIExamplesCS()
	{
	}
}
[Token(Token = "0x200016A")]
public class TestingPunch : MonoBehaviour
{
	[Token(Token = "0x200065C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C04", Offset = "0x8F7C04")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Light lt;

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0xE0E794", Offset = "0xE0E794", VA = "0xE0E794")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0xE0F4A4", Offset = "0xE0F4A4", VA = "0xE0F4A4")]
		internal void <Update>b__2(float val)
		{
		}
	}

	[Token(Token = "0x200065D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C14", Offset = "0x8F7C14")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float start;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestingPunch <>4__this;

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0xE0E8E0", Offset = "0xE0E8E0", VA = "0xE0E8E0")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0xE0F4E4", Offset = "0xE0F4E4", VA = "0xE0F4E4")]
		internal void <Update>b__6()
		{
		}
	}

	[Token(Token = "0x200065E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C24", Offset = "0x8F7C24")]
	private sealed class <>c__DisplayClass4_2
	{
		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject l;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestingPunch <>4__this;

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0xE0E8E8", Offset = "0xE0E8E8", VA = "0xE0E8E8")]
		public <>c__DisplayClass4_2()
		{
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0xE0F8C4", Offset = "0xE0F8C4", VA = "0xE0F8C4")]
		internal void <Update>b__8(Vector2 val)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200065F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C34", Offset = "0x8F7C34")]
	private sealed class <>c
	{
		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__4_1;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<float> <>9__4_4;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__4_5;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<float> <>9__5_0;

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0xE0F308", Offset = "0xE0F308", VA = "0xE0F308")]
		public <>c()
		{
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0xE0F310", Offset = "0xE0F310", VA = "0xE0F310")]
		internal void <Update>b__4_1()
		{
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0xE0F37C", Offset = "0xE0F37C", VA = "0xE0F37C")]
		internal void <Update>b__4_4(float v)
		{
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0xE0F380", Offset = "0xE0F380", VA = "0xE0F380")]
		internal void <Update>b__4_5()
		{
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0xE0F3EC", Offset = "0xE0F3EC", VA = "0xE0F3EC")]
		internal void <tweenStatically>b__5_0(float val)
		{
		}
	}

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve exportCurve;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float overShootValue;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LTDescr descr;

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xE0D024", Offset = "0xE0D024", VA = "0xE0D024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xE0D478", Offset = "0xE0D478", VA = "0xE0D478")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xE0E79C", Offset = "0xE0E79C", VA = "0xE0E79C")]
	private static void tweenStatically(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xE0E8F0", Offset = "0xE0E8F0", VA = "0xE0E8F0")]
	private void enterMiniGameStart(object val)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xE0EB0C", Offset = "0xE0EB0C", VA = "0xE0EB0C")]
	private void updateColor(Color c)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xE0EBD8", Offset = "0xE0EBD8", VA = "0xE0EBD8")]
	private void delayedMethod(object myVal)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xE0EDF4", Offset = "0xE0EDF4", VA = "0xE0EDF4")]
	private void destroyOnComp(object p)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xE0D0B8", Offset = "0xE0D0B8", VA = "0xE0D0B8")]
	private string curveToString(AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xE0EED4", Offset = "0xE0EED4", VA = "0xE0EED4")]
	public TestingPunch()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xE0EEE4", Offset = "0xE0EEE4", VA = "0xE0EEE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C1F0", Offset = "0x90C1F0")]
	private void <Update>b__4_0()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xE0F018", Offset = "0xE0F018", VA = "0xE0F018")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C200", Offset = "0x90C200")]
	private void <Update>b__4_3()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xE0F1D8", Offset = "0xE0F1D8", VA = "0xE0F1D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C210", Offset = "0x90C210")]
	private void <Update>b__4_7(Vector2 val)
	{
	}
}
[Token(Token = "0x200016B")]
public class TestingRigidbodyCS : MonoBehaviour
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ball1;

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xE0FA14", Offset = "0xE0FA14", VA = "0xE0FA14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xE0FB78", Offset = "0xE0FB78", VA = "0xE0FB78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xE0FB7C", Offset = "0xE0FB7C", VA = "0xE0FB7C")]
	public TestingRigidbodyCS()
	{
	}
}
[Token(Token = "0x200016C")]
public class Following : MonoBehaviour
{
	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform planet;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform followArrow;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dude1;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform dude2;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform dude3;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform dude4;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform dude5;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dude1Title;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform dude2Title;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform dude3Title;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform dude4Title;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform dude5Title;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color dude1ColorVelocity;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 velocityPos;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float fromY;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float velocityY;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fromVec3;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 velocityVec3;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color fromColor;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Color velocityColor;

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x10070CC", Offset = "0x10070CC", VA = "0x10070CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x1007720", Offset = "0x1007720", VA = "0x1007720")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x1007B90", Offset = "0x1007B90", VA = "0x1007B90")]
	private void moveArrow()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x1007D40", Offset = "0x1007D40", VA = "0x1007D40")]
	public Following()
	{
	}
}
[Token(Token = "0x200016D")]
public class GeneralAdvancedTechniques : MonoBehaviour
{
	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatarRecursive;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject avatar2dRecursive;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform wingPersonPanel;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform textField;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject avatarMove;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] movePts;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] avatarSpeed;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] avatarSpeed2;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] circleSm;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] circleLrg;

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x1008EFC", Offset = "0x1008EFC", VA = "0x1008EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x1009438", Offset = "0x1009438", VA = "0x1009438")]
	public GeneralAdvancedTechniques()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x100AA4C", Offset = "0x100AA4C", VA = "0x100AA4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C220", Offset = "0x90C220")]
	private void <Start>b__10_0(float val)
	{
	}
}
[Token(Token = "0x200016E")]
public class GeneralBasic : MonoBehaviour
{
	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C44", Offset = "0x8F7C44")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0x100B924", Offset = "0x100B924", VA = "0x100B924")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x100B92C", Offset = "0x100B92C", VA = "0x100B92C")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0x100B9F4", Offset = "0x100B9F4", VA = "0x100B9F4")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabAvatar;

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x100ACE8", Offset = "0x100ACE8", VA = "0x100ACE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x100B100", Offset = "0x100B100", VA = "0x100B100")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x100B1F0", Offset = "0x100B1F0", VA = "0x100B1F0")]
	public GeneralBasic()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x100B1F8", Offset = "0x100B1F8", VA = "0x100B1F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C230", Offset = "0x90C230")]
	private void <advancedExamples>b__2_0()
	{
	}
}
[Token(Token = "0x200016F")]
public class GeneralBasics2d : MonoBehaviour
{
	[Token(Token = "0x2000661")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C54", Offset = "0x8F7C54")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x100CAB4", Offset = "0x100CAB4", VA = "0x100CAB4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x100CABC", Offset = "0x100CABC", VA = "0x100CABC")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x100CB84", Offset = "0x100CB84", VA = "0x100CB84")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D dudeTexture;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabParticles;

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x100BA60", Offset = "0x100BA60", VA = "0x100BA60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x100BF20", Offset = "0x100BF20", VA = "0x100BF20")]
	private GameObject createSpriteDude(string name, Vector3 pos, bool hasParticles = true)
	{
		return null;
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x100C2D0", Offset = "0x100C2D0", VA = "0x100C2D0")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x100C3C0", Offset = "0x100C3C0", VA = "0x100C3C0")]
	public GeneralBasics2d()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x100C3C8", Offset = "0x100C3C8", VA = "0x100C3C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C240", Offset = "0x90C240")]
	private void <advancedExamples>b__4_0()
	{
	}
}
[Token(Token = "0x2000170")]
public class GeneralCameraShake : MonoBehaviour
{
	[Token(Token = "0x2000662")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C64", Offset = "0x8F7C64")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralCameraShake <>4__this;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float height;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0x100D1D4", Offset = "0x100D1D4", VA = "0x100D1D4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x100D1EC", Offset = "0x100D1EC", VA = "0x100D1EC")]
		internal void <bigGuyJump>b__0()
		{
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x100D2F8", Offset = "0x100D2F8", VA = "0x100D2F8")]
		internal void <bigGuyJump>b__1()
		{
		}
	}

	[Token(Token = "0x2000663")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C74", Offset = "0x8F7C74")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr shakeTween;

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x100D8C0", Offset = "0x100D8C0", VA = "0x100D8C0")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x100D8C8", Offset = "0x100D8C8", VA = "0x100D8C8")]
		internal void <bigGuyJump>b__2(float val)
		{
		}
	}

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject avatarBig;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float jumpIter;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip boomAudioClip;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x100CBF0", Offset = "0x100CBF0", VA = "0x100CBF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x100D050", Offset = "0x100D050", VA = "0x100D050")]
	private void bigGuyJump()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x100D1DC", Offset = "0x100D1DC", VA = "0x100D1DC")]
	public GeneralCameraShake()
	{
	}
}
[Token(Token = "0x2000171")]
public class GeneralEasingTypes : MonoBehaviour
{
	[Token(Token = "0x2000664")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C84", Offset = "0x8F7C84")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform obj1;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float obj1val;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeneralEasingTypes <>4__this;

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x100DDA4", Offset = "0x100DDA4", VA = "0x100DDA4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002FF0")]
		[Address(RVA = "0x100EAE0", Offset = "0x100EAE0", VA = "0x100EAE0")]
		internal void <demoEaseTypes>b__0(float val)
		{
		}
	}

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineDrawScale;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] easeTypes;

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x100D980", Offset = "0x100D980", VA = "0x100D980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x100D984", Offset = "0x100D984", VA = "0x100D984")]
	private void demoEaseTypes()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x100DDAC", Offset = "0x100DDAC", VA = "0x100DDAC")]
	private void resetLines()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x100DEEC", Offset = "0x100DEEC", VA = "0x100DEEC")]
	public GeneralEasingTypes()
	{
	}
}
[Token(Token = "0x2000172")]
public class GeneralEventsListeners : MonoBehaviour
{
	[Token(Token = "0x2000665")]
	public enum MyEvents
	{
		[Token(Token = "0x4002271")]
		CHANGE_COLOR,
		[Token(Token = "0x4002272")]
		JUMP,
		[Token(Token = "0x4002273")]
		LENGTH
	}

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 towardsRotation;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float turnForLength;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turnForIter;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color fromColor;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x100EBBC", Offset = "0x100EBBC", VA = "0x100EBBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x100EC84", Offset = "0x100EC84", VA = "0x100EC84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x100ED98", Offset = "0x100ED98", VA = "0x100ED98")]
	private void jumpUp(LTEvent e)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x100EE68", Offset = "0x100EE68", VA = "0x100EE68")]
	private void changeColor(LTEvent e)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x100F1D4", Offset = "0x100F1D4", VA = "0x100F1D4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x100F274", Offset = "0x100F274", VA = "0x100F274")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x100F2E4", Offset = "0x100F2E4", VA = "0x100F2E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x100F520", Offset = "0x100F520", VA = "0x100F520")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x100F5E4", Offset = "0x100F5E4", VA = "0x100F5E4")]
	public GeneralEventsListeners()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x100F5F4", Offset = "0x100F5F4", VA = "0x100F5F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C250", Offset = "0x90C250")]
	private void <changeColor>b__8_0(Color col)
	{
	}
}
[Token(Token = "0x2000173")]
public class GeneralSequencer : MonoBehaviour
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatar1;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject star;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dustCloudPrefab;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedScale;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x100F6A4", Offset = "0x100F6A4", VA = "0x100F6A4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x100F9A0", Offset = "0x100F9A0", VA = "0x100F9A0")]
	public GeneralSequencer()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x100F9B0", Offset = "0x100F9B0", VA = "0x100F9B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C260", Offset = "0x90C260")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x2000174")]
public class GeneralSimpleUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000666")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7C94", Offset = "0x8F7C94")]
	private sealed class <>c
	{
		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__1_1;

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x1010720", Offset = "0x1010720", VA = "0x1010720")]
		public <>c()
		{
		}

		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x1010728", Offset = "0x1010728", VA = "0x1010728")]
		internal void <Start>b__1_1(float volume)
		{
		}
	}

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform button;

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x100FD3C", Offset = "0x100FD3C", VA = "0x100FD3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1010400", Offset = "0x1010400", VA = "0x1010400")]
	public GeneralSimpleUI()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x1010408", Offset = "0x1010408", VA = "0x1010408")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C270", Offset = "0x90C270")]
	private void <Start>b__1_0(Vector2 val)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1010450", Offset = "0x1010450", VA = "0x1010450")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C280", Offset = "0x90C280")]
	private void <Start>b__1_2(Vector3 val)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x10104C4", Offset = "0x10104C4", VA = "0x10104C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C290", Offset = "0x90C290")]
	private void <Start>b__1_3(Color val)
	{
	}
}
[Token(Token = "0x2000175")]
public class GeneralUISpace : MonoBehaviour
{
	[Token(Token = "0x2000667")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7CA4", Offset = "0x8F7CA4")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralUISpace <>4__this;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string origText;

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0x10113B0", Offset = "0x10113B0", VA = "0x10113B0")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x10113C0", Offset = "0x10113C0", VA = "0x10113C0")]
		internal void <Start>b__0(float val)
		{
		}
	}

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform mainWindow;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform mainParagraphText;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform mainTitleText;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform mainButton1;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform mainButton2;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform pauseRing1;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform pauseRing2;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform pauseWindow;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform chatWindow;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform chatRect;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] chatSprites;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform chatBar1;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform chatBar2;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text chatText;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform rawImageRect;

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x10107E0", Offset = "0x10107E0", VA = "0x10107E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x10113B8", Offset = "0x10113B8", VA = "0x10113B8")]
	public GeneralUISpace()
	{
	}
}
[Token(Token = "0x2000176")]
public class LogoCinematic : MonoBehaviour
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lean;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tween;

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xD34A88", Offset = "0xD34A88", VA = "0xD34A88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xD34A8C", Offset = "0xD34A8C", VA = "0xD34A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xD34F7C", Offset = "0xD34F7C", VA = "0xD34F7C")]
	private void playBoom()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xD35744", Offset = "0xD35744", VA = "0xD35744")]
	public LogoCinematic()
	{
	}
}
[Token(Token = "0x2000177")]
public class PathBezier2d : MonoBehaviour
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTBezierPath visualizePath;

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xA900E4", Offset = "0xA900E4", VA = "0xA900E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xA903DC", Offset = "0xA903DC", VA = "0xA903DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xA90424", Offset = "0xA90424", VA = "0xA90424")]
	public PathBezier2d()
	{
	}
}
[Token(Token = "0x2000178")]
public class ExampleSpline : MonoBehaviour
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline spline;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject ltLogo;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ltLogo2;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float iter;

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xCC2824", Offset = "0xCC2824", VA = "0xCC2824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xCC2DB4", Offset = "0xCC2DB4", VA = "0xCC2DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xCC2E8C", Offset = "0xCC2E8C", VA = "0xCC2E8C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xCC2EA4", Offset = "0xCC2EA4", VA = "0xCC2EA4")]
	public ExampleSpline()
	{
	}
}
[Token(Token = "0x2000179")]
public class PathSpline2d : MonoBehaviour
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTSpline visualizePath;

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xA9042C", Offset = "0xA9042C", VA = "0xA9042C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xA907D4", Offset = "0xA907D4", VA = "0xA907D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xA9081C", Offset = "0xA9081C", VA = "0xA9081C")]
	public PathSpline2d()
	{
	}
}
[Token(Token = "0x200017A")]
public class PathSplineEndless : MonoBehaviour
{
	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] cubes;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cubesIter;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] trees;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int treesIter;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float randomIterWidth;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTSpline track;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> trackPts;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int zIter;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float carIter;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float carAdd;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int trackMaxItems;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int trackIter;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pushTrackAhead;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomIter;

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xA90824", Offset = "0xA90824", VA = "0xA90824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xA90D78", Offset = "0xA90D78", VA = "0xA90D78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xA914D0", Offset = "0xA914D0", VA = "0xA914D0")]
	private GameObject objectQueue(GameObject[] arr, ref int lastIter)
	{
		return null;
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xA9092C", Offset = "0xA9092C", VA = "0xA9092C")]
	private void addRandomTrackPoint()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xA90C44", Offset = "0xA90C44", VA = "0xA90C44")]
	private void refreshSpline()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xA90FFC", Offset = "0xA90FFC", VA = "0xA90FFC")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xA916D0", Offset = "0xA916D0", VA = "0xA916D0")]
	public PathSplineEndless()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xA91758", Offset = "0xA91758", VA = "0xA91758")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C2A0", Offset = "0x90C2A0")]
	private void <Start>b__17_0(float val)
	{
	}
}
[Token(Token = "0x200017B")]
public class PathSplinePerformance : MonoBehaviour
{
	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float circleLength;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float randomRange;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int trackNodes;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float carSpeed;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tracerSpeed;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTSpline track;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int trackIter;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float carAdd;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float trackPosition;

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xA91760", Offset = "0xA91760", VA = "0xA91760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xA91BB0", Offset = "0xA91BB0", VA = "0xA91BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xA92210", Offset = "0xA92210", VA = "0xA92210")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xA91D3C", Offset = "0xA91D3C", VA = "0xA91D3C")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xA9224C", Offset = "0xA9224C", VA = "0xA9224C")]
	public PathSplinePerformance()
	{
	}
}
[Token(Token = "0x200017C")]
public class PathSplines : MonoBehaviour
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline cr;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject avatar1;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float iter;

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xA92DF0", Offset = "0xA92DF0", VA = "0xA92DF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xA930E0", Offset = "0xA930E0", VA = "0xA930E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xA9321C", Offset = "0xA9321C", VA = "0xA9321C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xA93270", Offset = "0xA93270", VA = "0xA93270")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xA932C8", Offset = "0xA932C8", VA = "0xA932C8")]
	public PathSplines()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xA932D0", Offset = "0xA932D0", VA = "0xA932D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C2B0", Offset = "0x90C2B0")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x200017D")]
public class PathSplineTrack : MonoBehaviour
{
	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject car;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject carInternal;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] trackOnePoints;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTSpline track;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int trackIter;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float trackPosition;

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xA92278", Offset = "0xA92278", VA = "0xA92278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xA926C4", Offset = "0xA926C4", VA = "0xA926C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xA92D3C", Offset = "0xA92D3C", VA = "0xA92D3C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xA92868", Offset = "0xA92868", VA = "0xA92868")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xA92DE0", Offset = "0xA92DE0", VA = "0xA92DE0")]
	public PathSplineTrack()
	{
	}
}
[Token(Token = "0x200017E")]
public class TestingZLegacy : MonoBehaviour
{
	[Token(Token = "0x2000668")]
	public delegate void NextFunc();

	[Token(Token = "0x2000669")]
	public enum TimingType
	{
		[Token(Token = "0x4002279")]
		SteadyNormalTime,
		[Token(Token = "0x400227A")]
		IgnoreTimeScale,
		[Token(Token = "0x400227B")]
		HalfTimeScale,
		[Token(Token = "0x400227C")]
		VariableTimeScale,
		[Token(Token = "0x400227D")]
		Length
	}

	[Serializable]
	[Token(Token = "0x200066A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7CB4", Offset = "0x8F7CB4")]
	private sealed class <>c
	{
		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0xE12738", Offset = "0xE12738", VA = "0xE12738")]
		public <>c()
		{
		}

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0xE12740", Offset = "0xE12740", VA = "0xE12740")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject ltLogo;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xE0FB84", Offset = "0xE0FB84", VA = "0xE0FB84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xE0FB88", Offset = "0xE0FB88", VA = "0xE0FB88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xE0FC78", Offset = "0xE0FC78", VA = "0xE0FC78")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xE0FCF0", Offset = "0xE0FCF0", VA = "0xE0FCF0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xE0FE3C", Offset = "0xE0FE3C", VA = "0xE0FE3C")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xE0FEA8", Offset = "0xE0FEA8", VA = "0xE0FEA8")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xE10270", Offset = "0xE10270", VA = "0xE10270")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xE104D4", Offset = "0xE104D4", VA = "0xE104D4")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xE104D8", Offset = "0xE104D8", VA = "0xE104D8")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xE10548", Offset = "0xE10548", VA = "0xE10548")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xE10720", Offset = "0xE10720", VA = "0xE10720")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xE108E0", Offset = "0xE108E0", VA = "0xE108E0")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xE10A0C", Offset = "0xE10A0C", VA = "0xE10A0C")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xE10DB4", Offset = "0xE10DB4", VA = "0xE10DB4")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xE110FC", Offset = "0xE110FC", VA = "0xE110FC")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xE11258", Offset = "0xE11258", VA = "0xE11258")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xE114B4", Offset = "0xE114B4", VA = "0xE114B4")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xE114B8", Offset = "0xE114B8", VA = "0xE114B8")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xE115A4", Offset = "0xE115A4", VA = "0xE115A4")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xE116F8", Offset = "0xE116F8", VA = "0xE116F8")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xE118F0", Offset = "0xE118F0", VA = "0xE118F0")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xE11998", Offset = "0xE11998", VA = "0xE11998")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xE11A88", Offset = "0xE11A88", VA = "0xE11A88")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xE11BDC", Offset = "0xE11BDC", VA = "0xE11BDC")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xE11D1C", Offset = "0xE11D1C", VA = "0xE11D1C")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xE11ED8", Offset = "0xE11ED8", VA = "0xE11ED8")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xE12010", Offset = "0xE12010", VA = "0xE12010")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xE12090", Offset = "0xE12090", VA = "0xE12090")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xE12110", Offset = "0xE12110", VA = "0xE12110")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xE121C4", Offset = "0xE121C4", VA = "0xE121C4")]
	public TestingZLegacy()
	{
	}
}
[Token(Token = "0x200017F")]
public class TestingZLegacyExt : MonoBehaviour
{
	[Token(Token = "0x200066B")]
	public delegate void NextFunc();

	[Token(Token = "0x200066C")]
	public enum TimingType
	{
		[Token(Token = "0x4002281")]
		SteadyNormalTime,
		[Token(Token = "0x4002282")]
		IgnoreTimeScale,
		[Token(Token = "0x4002283")]
		HalfTimeScale,
		[Token(Token = "0x4002284")]
		VariableTimeScale,
		[Token(Token = "0x4002285")]
		Length
	}

	[Serializable]
	[Token(Token = "0x200066D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7CC4", Offset = "0x8F7CC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x6003002")]
		[Address(RVA = "0xE153E4", Offset = "0xE153E4", VA = "0xE153E4")]
		public <>c()
		{
		}

		[Token(Token = "0x6003003")]
		[Address(RVA = "0xE153EC", Offset = "0xE153EC", VA = "0xE153EC")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform ltLogo;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xE12B98", Offset = "0xE12B98", VA = "0xE12B98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xE12B9C", Offset = "0xE12B9C", VA = "0xE12B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xE12C8C", Offset = "0xE12C8C", VA = "0xE12C8C")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xE12D04", Offset = "0xE12D04", VA = "0xE12D04")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xE12E50", Offset = "0xE12E50", VA = "0xE12E50")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xE12EBC", Offset = "0xE12EBC", VA = "0xE12EBC")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xE13238", Offset = "0xE13238", VA = "0xE13238")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xE1347C", Offset = "0xE1347C", VA = "0xE1347C")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xE13480", Offset = "0xE13480", VA = "0xE13480")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xE134F0", Offset = "0xE134F0", VA = "0xE134F0")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xE136A0", Offset = "0xE136A0", VA = "0xE136A0")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xE13838", Offset = "0xE13838", VA = "0xE13838")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xE13950", Offset = "0xE13950", VA = "0xE13950")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xE13CD4", Offset = "0xE13CD4", VA = "0xE13CD4")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xE13FE0", Offset = "0xE13FE0", VA = "0xE13FE0")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xE1411C", Offset = "0xE1411C", VA = "0xE1411C")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xE14358", Offset = "0xE14358", VA = "0xE14358")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xE1435C", Offset = "0xE1435C", VA = "0xE1435C")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xE14448", Offset = "0xE14448", VA = "0xE14448")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xE14564", Offset = "0xE14564", VA = "0xE14564")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xE1471C", Offset = "0xE1471C", VA = "0xE1471C")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xE147AC", Offset = "0xE147AC", VA = "0xE147AC")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xE1489C", Offset = "0xE1489C", VA = "0xE1489C")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xE149B8", Offset = "0xE149B8", VA = "0xE149B8")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xE14AD0", Offset = "0xE14AD0", VA = "0xE14AD0")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xE14C6C", Offset = "0xE14C6C", VA = "0xE14C6C")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xE14D5C", Offset = "0xE14D5C", VA = "0xE14D5C")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xE14DB0", Offset = "0xE14DB0", VA = "0xE14DB0")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xE14E04", Offset = "0xE14E04", VA = "0xE14E04")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xE14E70", Offset = "0xE14E70", VA = "0xE14E70")]
	public TestingZLegacyExt()
	{
	}
}
[Token(Token = "0x2000180")]
public class LeanAudioStream
{
	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int position;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] audioArr;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1757F1C", Offset = "0x1757F1C", VA = "0x1757F1C")]
	public LeanAudioStream(float[] audioArr)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x1758820", Offset = "0x1758820", VA = "0x1758820")]
	public void OnAudioRead(float[] data)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x17588E0", Offset = "0x17588E0", VA = "0x17588E0")]
	public void OnAudioSetPosition(int newPosition)
	{
	}
}
[Token(Token = "0x2000181")]
public class LeanAudio
{
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_FREQEUNCY_PERIOD;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PROCESSING_ITERATIONS_MAX;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] generatedWaveDistances;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int generatedWaveDistancesCount;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] longList;

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x1756F78", Offset = "0x1756F78", VA = "0x1756F78")]
	public static LeanAudioOptions options()
	{
		return null;
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x175709C", Offset = "0x175709C", VA = "0x175709C")]
	public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1757E5C", Offset = "0x1757E5C", VA = "0x1757E5C")]
	public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x1757174", Offset = "0x1757174", VA = "0x1757174")]
	private static int createAudioWave(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options)
	{
		return default(int);
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x17576F0", Offset = "0x17576F0", VA = "0x17576F0")]
	private static AudioClip createAudioFromWave(int waveLength, LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x1757F48", Offset = "0x1757F48", VA = "0x1757F48")]
	private static void OnAudioSetPosition(int newPosition)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x1757F4C", Offset = "0x1757F4C", VA = "0x1757F4C")]
	public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100)
	{
		return null;
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x17580FC", Offset = "0x17580FC", VA = "0x17580FC")]
	public static AudioSource play(AudioClip audio, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1758348", Offset = "0x1758348", VA = "0x1758348")]
	public static AudioSource play(AudioClip audio)
	{
		return null;
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x17583FC", Offset = "0x17583FC", VA = "0x17583FC")]
	public static AudioSource play(AudioClip audio, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x1758488", Offset = "0x1758488", VA = "0x1758488")]
	public static AudioSource play(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x17581D8", Offset = "0x17581D8", VA = "0x17581D8")]
	public static AudioSource playClipAt(AudioClip clip, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1758568", Offset = "0x1758568", VA = "0x1758568")]
	public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1f)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x1758750", Offset = "0x1758750", VA = "0x1758750")]
	public LeanAudio()
	{
	}
}
[Token(Token = "0x2000182")]
public class LeanAudioOptions
{
	[Token(Token = "0x200066E")]
	public enum LeanAudioWaveStyle
	{
		[Token(Token = "0x4002289")]
		Sine,
		[Token(Token = "0x400228A")]
		Square,
		[Token(Token = "0x400228B")]
		Sawtooth,
		[Token(Token = "0x400228C")]
		Noise
	}

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeanAudioWaveStyle waveStyle;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vibrato;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] modulation;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frequencyRate;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveNoiseScale;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waveNoiseInfluence;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useSetData;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeanAudioStream stream;

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x1757078", Offset = "0x1757078", VA = "0x1757078")]
	public LeanAudioOptions()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x17587CC", Offset = "0x17587CC", VA = "0x17587CC")]
	public LeanAudioOptions setFrequency(int frequencyRate)
	{
		return null;
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x17587D4", Offset = "0x17587D4", VA = "0x17587D4")]
	public LeanAudioOptions setVibrato(Vector3[] vibrato)
	{
		return null;
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x17587DC", Offset = "0x17587DC", VA = "0x17587DC")]
	public LeanAudioOptions setWaveSine()
	{
		return null;
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x17587E4", Offset = "0x17587E4", VA = "0x17587E4")]
	public LeanAudioOptions setWaveSquare()
	{
		return null;
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x17587F0", Offset = "0x17587F0", VA = "0x17587F0")]
	public LeanAudioOptions setWaveSawtooth()
	{
		return null;
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x17587FC", Offset = "0x17587FC", VA = "0x17587FC")]
	public LeanAudioOptions setWaveNoise()
	{
		return null;
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x1758808", Offset = "0x1758808", VA = "0x1758808")]
	public LeanAudioOptions setWaveStyle(LeanAudioWaveStyle style)
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1758810", Offset = "0x1758810", VA = "0x1758810")]
	public LeanAudioOptions setWaveNoiseScale(float waveScale)
	{
		return null;
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1758818", Offset = "0x1758818", VA = "0x1758818")]
	public LeanAudioOptions setWaveNoiseInfluence(float influence)
	{
		return null;
	}
}
[Token(Token = "0x2000183")]
public class LeanSmooth
{
	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x17588E8", Offset = "0x17588E8", VA = "0x17588E8")]
	public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x1758A84", Offset = "0x1758A84", VA = "0x1758A84")]
	public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x1758B60", Offset = "0x1758B60", VA = "0x1758B60")]
	public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x1758C5C", Offset = "0x1758C5C", VA = "0x1758C5C")]
	public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x1758D80", Offset = "0x1758D80", VA = "0x1758D80")]
	public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x1758E7C", Offset = "0x1758E7C", VA = "0x1758E7C")]
	public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1758FA4", Offset = "0x1758FA4", VA = "0x1758FA4")]
	public static float linear(float current, float target, float moveSpeed, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x175901C", Offset = "0x175901C", VA = "0x175901C")]
	public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x1759174", Offset = "0x1759174", VA = "0x1759174")]
	public static Color linear(Color current, Color target, float moveSpeed)
	{
		return default(Color);
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x17592EC", Offset = "0x17592EC", VA = "0x17592EC")]
	public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x1759448", Offset = "0x1759448", VA = "0x1759448")]
	public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x175954C", Offset = "0x175954C", VA = "0x175954C")]
	public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x1759684", Offset = "0x1759684", VA = "0x1759684")]
	public LeanSmooth()
	{
	}
}
[Token(Token = "0x2000184")]
public class LeanTester : MonoBehaviour
{
	[Token(Token = "0x200066F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7CD4", Offset = "0x8F7CD4")]
	private sealed class <timeoutCheck>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTester <>4__this;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x1700050D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003007")]
			[Address(RVA = "0x175A8C8", Offset = "0x175A8C8", VA = "0x175A8C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003009")]
			[Address(RVA = "0x175A938", Offset = "0x175A938", VA = "0x175A938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003004")]
		[Address(RVA = "0x175A720", Offset = "0x175A720", VA = "0x175A720")]
		[DebuggerHidden]
		public <timeoutCheck>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0x175A75C", Offset = "0x175A75C", VA = "0x175A75C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003006")]
		[Address(RVA = "0x175A760", Offset = "0x175A760", VA = "0x175A760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003008")]
		[Address(RVA = "0x175A8D0", Offset = "0x175A8D0", VA = "0x175A8D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeout;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x175A680", Offset = "0x175A680", VA = "0x175A680")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x175A6AC", Offset = "0x175A6AC", VA = "0x175A6AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C2C0", Offset = "0x90C2C0")]
	private IEnumerator timeoutCheck()
	{
		return null;
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x175A74C", Offset = "0x175A74C", VA = "0x175A74C")]
	public LeanTester()
	{
	}
}
[Token(Token = "0x2000185")]
public class LeanTest
{
	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int expected;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int tests;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int passes;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float timeout;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool timeoutStarted;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool testsFinished;

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x175968C", Offset = "0x175968C", VA = "0x175968C")]
	public static void debug(string name, bool didPass, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x1759708", Offset = "0x1759708", VA = "0x1759708")]
	public static void expect(bool didPass, string definition, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x175A50C", Offset = "0x175A50C", VA = "0x175A50C")]
	public static string padRight(int len)
	{
		return null;
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x1759DA8", Offset = "0x1759DA8", VA = "0x1759DA8")]
	public static float printOutLength(string str)
	{
		return default(float);
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x175A57C", Offset = "0x175A57C", VA = "0x175A57C")]
	public static string formatBC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x1759F04", Offset = "0x1759F04", VA = "0x1759F04")]
	public static string formatB(string str)
	{
		return null;
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x1759F64", Offset = "0x1759F64", VA = "0x1759F64")]
	public static string formatC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x175A160", Offset = "0x175A160", VA = "0x175A160")]
	public static void overview()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x175A5F4", Offset = "0x175A5F4", VA = "0x175A5F4")]
	public LeanTest()
	{
	}
}
[Token(Token = "0x2000186")]
public enum TweenAction
{
	[Token(Token = "0x4000B81")]
	MOVE_X,
	[Token(Token = "0x4000B82")]
	MOVE_Y,
	[Token(Token = "0x4000B83")]
	MOVE_Z,
	[Token(Token = "0x4000B84")]
	MOVE_LOCAL_X,
	[Token(Token = "0x4000B85")]
	MOVE_LOCAL_Y,
	[Token(Token = "0x4000B86")]
	MOVE_LOCAL_Z,
	[Token(Token = "0x4000B87")]
	MOVE_CURVED,
	[Token(Token = "0x4000B88")]
	MOVE_CURVED_LOCAL,
	[Token(Token = "0x4000B89")]
	MOVE_SPLINE,
	[Token(Token = "0x4000B8A")]
	MOVE_SPLINE_LOCAL,
	[Token(Token = "0x4000B8B")]
	SCALE_X,
	[Token(Token = "0x4000B8C")]
	SCALE_Y,
	[Token(Token = "0x4000B8D")]
	SCALE_Z,
	[Token(Token = "0x4000B8E")]
	ROTATE_X,
	[Token(Token = "0x4000B8F")]
	ROTATE_Y,
	[Token(Token = "0x4000B90")]
	ROTATE_Z,
	[Token(Token = "0x4000B91")]
	ROTATE_AROUND,
	[Token(Token = "0x4000B92")]
	ROTATE_AROUND_LOCAL,
	[Token(Token = "0x4000B93")]
	CANVAS_ROTATEAROUND,
	[Token(Token = "0x4000B94")]
	CANVAS_ROTATEAROUND_LOCAL,
	[Token(Token = "0x4000B95")]
	CANVAS_PLAYSPRITE,
	[Token(Token = "0x4000B96")]
	ALPHA,
	[Token(Token = "0x4000B97")]
	TEXT_ALPHA,
	[Token(Token = "0x4000B98")]
	CANVAS_ALPHA,
	[Token(Token = "0x4000B99")]
	CANVASGROUP_ALPHA,
	[Token(Token = "0x4000B9A")]
	ALPHA_VERTEX,
	[Token(Token = "0x4000B9B")]
	COLOR,
	[Token(Token = "0x4000B9C")]
	CALLBACK_COLOR,
	[Token(Token = "0x4000B9D")]
	TEXT_COLOR,
	[Token(Token = "0x4000B9E")]
	CANVAS_COLOR,
	[Token(Token = "0x4000B9F")]
	CANVAS_MOVE_X,
	[Token(Token = "0x4000BA0")]
	CANVAS_MOVE_Y,
	[Token(Token = "0x4000BA1")]
	CANVAS_MOVE_Z,
	[Token(Token = "0x4000BA2")]
	CALLBACK,
	[Token(Token = "0x4000BA3")]
	MOVE,
	[Token(Token = "0x4000BA4")]
	MOVE_LOCAL,
	[Token(Token = "0x4000BA5")]
	MOVE_TO_TRANSFORM,
	[Token(Token = "0x4000BA6")]
	ROTATE,
	[Token(Token = "0x4000BA7")]
	ROTATE_LOCAL,
	[Token(Token = "0x4000BA8")]
	SCALE,
	[Token(Token = "0x4000BA9")]
	VALUE3,
	[Token(Token = "0x4000BAA")]
	GUI_MOVE,
	[Token(Token = "0x4000BAB")]
	GUI_MOVE_MARGIN,
	[Token(Token = "0x4000BAC")]
	GUI_SCALE,
	[Token(Token = "0x4000BAD")]
	GUI_ALPHA,
	[Token(Token = "0x4000BAE")]
	GUI_ROTATE,
	[Token(Token = "0x4000BAF")]
	DELAYED_SOUND,
	[Token(Token = "0x4000BB0")]
	CANVAS_MOVE,
	[Token(Token = "0x4000BB1")]
	CANVAS_SCALE,
	[Token(Token = "0x4000BB2")]
	CANVAS_SIZEDELTA,
	[Token(Token = "0x4000BB3")]
	FOLLOW
}
[Token(Token = "0x2000187")]
public enum LeanTweenType
{
	[Token(Token = "0x4000BB5")]
	notUsed,
	[Token(Token = "0x4000BB6")]
	linear,
	[Token(Token = "0x4000BB7")]
	easeOutQuad,
	[Token(Token = "0x4000BB8")]
	easeInQuad,
	[Token(Token = "0x4000BB9")]
	easeInOutQuad,
	[Token(Token = "0x4000BBA")]
	easeInCubic,
	[Token(Token = "0x4000BBB")]
	easeOutCubic,
	[Token(Token = "0x4000BBC")]
	easeInOutCubic,
	[Token(Token = "0x4000BBD")]
	easeInQuart,
	[Token(Token = "0x4000BBE")]
	easeOutQuart,
	[Token(Token = "0x4000BBF")]
	easeInOutQuart,
	[Token(Token = "0x4000BC0")]
	easeInQuint,
	[Token(Token = "0x4000BC1")]
	easeOutQuint,
	[Token(Token = "0x4000BC2")]
	easeInOutQuint,
	[Token(Token = "0x4000BC3")]
	easeInSine,
	[Token(Token = "0x4000BC4")]
	easeOutSine,
	[Token(Token = "0x4000BC5")]
	easeInOutSine,
	[Token(Token = "0x4000BC6")]
	easeInExpo,
	[Token(Token = "0x4000BC7")]
	easeOutExpo,
	[Token(Token = "0x4000BC8")]
	easeInOutExpo,
	[Token(Token = "0x4000BC9")]
	easeInCirc,
	[Token(Token = "0x4000BCA")]
	easeOutCirc,
	[Token(Token = "0x4000BCB")]
	easeInOutCirc,
	[Token(Token = "0x4000BCC")]
	easeInBounce,
	[Token(Token = "0x4000BCD")]
	easeOutBounce,
	[Token(Token = "0x4000BCE")]
	easeInOutBounce,
	[Token(Token = "0x4000BCF")]
	easeInBack,
	[Token(Token = "0x4000BD0")]
	easeOutBack,
	[Token(Token = "0x4000BD1")]
	easeInOutBack,
	[Token(Token = "0x4000BD2")]
	easeInElastic,
	[Token(Token = "0x4000BD3")]
	easeOutElastic,
	[Token(Token = "0x4000BD4")]
	easeInOutElastic,
	[Token(Token = "0x4000BD5")]
	easeSpring,
	[Token(Token = "0x4000BD6")]
	easeShake,
	[Token(Token = "0x4000BD7")]
	punch,
	[Token(Token = "0x4000BD8")]
	once,
	[Token(Token = "0x4000BD9")]
	clamp,
	[Token(Token = "0x4000BDA")]
	pingPong,
	[Token(Token = "0x4000BDB")]
	animationCurve
}
[Token(Token = "0x2000188")]
public enum LeanProp
{
	[Token(Token = "0x4000BDD")]
	position,
	[Token(Token = "0x4000BDE")]
	localPosition,
	[Token(Token = "0x4000BDF")]
	x,
	[Token(Token = "0x4000BE0")]
	y,
	[Token(Token = "0x4000BE1")]
	z,
	[Token(Token = "0x4000BE2")]
	localX,
	[Token(Token = "0x4000BE3")]
	localY,
	[Token(Token = "0x4000BE4")]
	localZ,
	[Token(Token = "0x4000BE5")]
	scale,
	[Token(Token = "0x4000BE6")]
	color
}
[Token(Token = "0x2000189")]
public class LeanTween : MonoBehaviour
{
	[Token(Token = "0x2000670")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7CE4", Offset = "0x8F7CE4")]
	private sealed class <>c__DisplayClass193_0
	{
		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x600300A")]
		[Address(RVA = "0xD2A7C8", Offset = "0xD2A7C8", VA = "0xD2A7C8")]
		public <>c__DisplayClass193_0()
		{
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0xD2A7D0", Offset = "0xD2A7D0", VA = "0xD2A7D0")]
		internal void <followDamp>b__0()
		{
		}

		[Token(Token = "0x600300C")]
		[Address(RVA = "0xD2AA4C", Offset = "0xD2AA4C", VA = "0xD2AA4C")]
		internal void <followDamp>b__1()
		{
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0xD2ACC8", Offset = "0xD2ACC8", VA = "0xD2ACC8")]
		internal void <followDamp>b__2()
		{
		}

		[Token(Token = "0x600300E")]
		[Address(RVA = "0xD2AE6C", Offset = "0xD2AE6C", VA = "0xD2AE6C")]
		internal void <followDamp>b__3()
		{
		}

		[Token(Token = "0x600300F")]
		[Address(RVA = "0xD2B010", Offset = "0xD2B010", VA = "0xD2B010")]
		internal void <followDamp>b__4()
		{
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0xD2B1B4", Offset = "0xD2B1B4", VA = "0xD2B1B4")]
		internal void <followDamp>b__5()
		{
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0xD2B358", Offset = "0xD2B358", VA = "0xD2B358")]
		internal void <followDamp>b__6()
		{
		}

		[Token(Token = "0x6003012")]
		[Address(RVA = "0xD2B4FC", Offset = "0xD2B4FC", VA = "0xD2B4FC")]
		internal void <followDamp>b__7()
		{
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0xD2B6A0", Offset = "0xD2B6A0", VA = "0xD2B6A0")]
		internal void <followDamp>b__8()
		{
		}

		[Token(Token = "0x6003014")]
		[Address(RVA = "0xD2B7F8", Offset = "0xD2B7F8", VA = "0xD2B7F8")]
		internal void <followDamp>b__9()
		{
		}
	}

	[Token(Token = "0x2000671")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7CF4", Offset = "0x8F7CF4")]
	private sealed class <>c__DisplayClass194_0
	{
		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x6003015")]
		[Address(RVA = "0xD2BA2C", Offset = "0xD2BA2C", VA = "0xD2BA2C")]
		public <>c__DisplayClass194_0()
		{
		}

		[Token(Token = "0x6003016")]
		[Address(RVA = "0xD2BA34", Offset = "0xD2BA34", VA = "0xD2BA34")]
		internal void <followSpring>b__0()
		{
		}

		[Token(Token = "0x6003017")]
		[Address(RVA = "0xD2BCBC", Offset = "0xD2BCBC", VA = "0xD2BCBC")]
		internal void <followSpring>b__1()
		{
		}

		[Token(Token = "0x6003018")]
		[Address(RVA = "0xD2BE18", Offset = "0xD2BE18", VA = "0xD2BE18")]
		internal void <followSpring>b__2()
		{
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0xD2BF14", Offset = "0xD2BF14", VA = "0xD2BF14")]
		internal void <followSpring>b__3()
		{
		}

		[Token(Token = "0x600301A")]
		[Address(RVA = "0xD2C010", Offset = "0xD2C010", VA = "0xD2C010")]
		internal void <followSpring>b__4()
		{
		}

		[Token(Token = "0x600301B")]
		[Address(RVA = "0xD2C10C", Offset = "0xD2C10C", VA = "0xD2C10C")]
		internal void <followSpring>b__5()
		{
		}

		[Token(Token = "0x600301C")]
		[Address(RVA = "0xD2C208", Offset = "0xD2C208", VA = "0xD2C208")]
		internal void <followSpring>b__6()
		{
		}

		[Token(Token = "0x600301D")]
		[Address(RVA = "0xD2C304", Offset = "0xD2C304", VA = "0xD2C304")]
		internal void <followSpring>b__7()
		{
		}

		[Token(Token = "0x600301E")]
		[Address(RVA = "0xD2C400", Offset = "0xD2C400", VA = "0xD2C400")]
		internal void <followSpring>b__8()
		{
		}

		[Token(Token = "0x600301F")]
		[Address(RVA = "0xD2C564", Offset = "0xD2C564", VA = "0xD2C564")]
		internal void <followSpring>b__9()
		{
		}
	}

	[Token(Token = "0x2000672")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D04", Offset = "0x8F7D04")]
	private sealed class <>c__DisplayClass195_0
	{
		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hitDamping;

		[Token(Token = "0x6003020")]
		[Address(RVA = "0xD2C718", Offset = "0xD2C718", VA = "0xD2C718")]
		public <>c__DisplayClass195_0()
		{
		}

		[Token(Token = "0x6003021")]
		[Address(RVA = "0xD2C720", Offset = "0xD2C720", VA = "0xD2C720")]
		internal void <followBounceOut>b__0()
		{
		}

		[Token(Token = "0x6003022")]
		[Address(RVA = "0xD2C9B0", Offset = "0xD2C9B0", VA = "0xD2C9B0")]
		internal void <followBounceOut>b__1()
		{
		}

		[Token(Token = "0x6003023")]
		[Address(RVA = "0xD2CC40", Offset = "0xD2CC40", VA = "0xD2CC40")]
		internal void <followBounceOut>b__2()
		{
		}

		[Token(Token = "0x6003024")]
		[Address(RVA = "0xD2CD40", Offset = "0xD2CD40", VA = "0xD2CD40")]
		internal void <followBounceOut>b__3()
		{
		}

		[Token(Token = "0x6003025")]
		[Address(RVA = "0xD2CE40", Offset = "0xD2CE40", VA = "0xD2CE40")]
		internal void <followBounceOut>b__4()
		{
		}

		[Token(Token = "0x6003026")]
		[Address(RVA = "0xD2CF40", Offset = "0xD2CF40", VA = "0xD2CF40")]
		internal void <followBounceOut>b__5()
		{
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0xD2D040", Offset = "0xD2D040", VA = "0xD2D040")]
		internal void <followBounceOut>b__6()
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0xD2D140", Offset = "0xD2D140", VA = "0xD2D140")]
		internal void <followBounceOut>b__7()
		{
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0xD2D240", Offset = "0xD2D240", VA = "0xD2D240")]
		internal void <followBounceOut>b__8()
		{
		}

		[Token(Token = "0x600302A")]
		[Address(RVA = "0xD2D3AC", Offset = "0xD2D3AC", VA = "0xD2D3AC")]
		internal void <followBounceOut>b__9()
		{
		}
	}

	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D14", Offset = "0x8F7D14")]
	private sealed class <>c__DisplayClass196_0
	{
		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveSpeed;

		[Token(Token = "0x600302B")]
		[Address(RVA = "0xD2D568", Offset = "0xD2D568", VA = "0xD2D568")]
		public <>c__DisplayClass196_0()
		{
		}

		[Token(Token = "0x600302C")]
		[Address(RVA = "0xD2D570", Offset = "0xD2D570", VA = "0xD2D570")]
		internal void <followLinear>b__0()
		{
		}

		[Token(Token = "0x600302D")]
		[Address(RVA = "0xD2D7A8", Offset = "0xD2D7A8", VA = "0xD2D7A8")]
		internal void <followLinear>b__1()
		{
		}

		[Token(Token = "0x600302E")]
		[Address(RVA = "0xD2D8B4", Offset = "0xD2D8B4", VA = "0xD2D8B4")]
		internal void <followLinear>b__2()
		{
		}

		[Token(Token = "0x600302F")]
		[Address(RVA = "0xD2D978", Offset = "0xD2D978", VA = "0xD2D978")]
		internal void <followLinear>b__3()
		{
		}

		[Token(Token = "0x6003030")]
		[Address(RVA = "0xD2DA38", Offset = "0xD2DA38", VA = "0xD2DA38")]
		internal void <followLinear>b__4()
		{
		}

		[Token(Token = "0x6003031")]
		[Address(RVA = "0xD2DB00", Offset = "0xD2DB00", VA = "0xD2DB00")]
		internal void <followLinear>b__5()
		{
		}

		[Token(Token = "0x6003032")]
		[Address(RVA = "0xD2DBC4", Offset = "0xD2DBC4", VA = "0xD2DBC4")]
		internal void <followLinear>b__6()
		{
		}

		[Token(Token = "0x6003033")]
		[Address(RVA = "0xD2DC84", Offset = "0xD2DC84", VA = "0xD2DC84")]
		internal void <followLinear>b__7()
		{
		}

		[Token(Token = "0x6003034")]
		[Address(RVA = "0xD2DD4C", Offset = "0xD2DD4C", VA = "0xD2DD4C")]
		internal void <followLinear>b__8()
		{
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0xD2DE58", Offset = "0xD2DE58", VA = "0xD2DE58")]
		internal void <followLinear>b__9()
		{
		}
	}

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool throwErrors;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float tau;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI_DIV2;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTSeq[] sequences;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LTDescr[] tweens;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] tweensFinished;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] tweensFinishedIds;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static LTDescr tween;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int tweenMaxSearch;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int maxTweens;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxSequences;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int frameRendered;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static GameObject _tweenEmpty;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dtEstimated;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dtManual;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float dtActual;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static uint global_counter;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int i;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int j;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int finishedCnt;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static AnimationCurve punch;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static AnimationCurve shake;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int maxTweenReached;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int startSearch;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static LTDescr d;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Action<LTEvent>[] eventListeners;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static GameObject[] goListeners;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int eventsMaxSearch;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int EVENTS_MAX;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int LISTENERS_MAX;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static int INIT_LISTENERS_MAX;

	[Token(Token = "0x170000CD")]
	public static int maxSearch
	{
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x175AA18", Offset = "0x175AA18", VA = "0x175AA18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CE")]
	public static int maxSimulataneousTweens
	{
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x175AA80", Offset = "0x175AA80", VA = "0x175AA80")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CF")]
	public static int tweensRunning
	{
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x175AAE8", Offset = "0x175AAE8", VA = "0x175AAE8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D0")]
	public static GameObject tweenEmpty
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x175F77C", Offset = "0x175F77C", VA = "0x175F77C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x175A940", Offset = "0x175A940", VA = "0x175A940")]
	public static void init()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x175A9A8", Offset = "0x175A9A8", VA = "0x175A9A8")]
	public static void init(int maxSimultaneousTweens)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x175ABE4", Offset = "0x175ABE4", VA = "0x175ABE4")]
	public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x175B054", Offset = "0x175B054", VA = "0x175B054")]
	public static void reset()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x175B210", Offset = "0x175B210", VA = "0x175B210")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x175B838", Offset = "0x175B838", VA = "0x175B838")]
	private static void onLevelWasLoaded54(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x175B8A8", Offset = "0x175B8A8", VA = "0x175B8A8")]
	private static void internalOnLevelWasLoaded(int lvl)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x175B26C", Offset = "0x175B26C", VA = "0x175B26C")]
	public static void update()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x175BE44", Offset = "0x175BE44", VA = "0x175BE44")]
	public static void removeTween(int i, int uniqueId)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x175B904", Offset = "0x175B904", VA = "0x175B904")]
	public static void removeTween(int i)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x175BF48", Offset = "0x175BF48", VA = "0x175BF48")]
	public static Vector3[] add(Vector3[] a, Vector3 b)
	{
		return null;
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x175C134", Offset = "0x175C134", VA = "0x175C134")]
	public static float closestRot(float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x175C1F8", Offset = "0x175C1F8", VA = "0x175C1F8")]
	public static void cancelAll()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x175C258", Offset = "0x175C258", VA = "0x175C258")]
	public static void cancelAll(bool callComplete)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x175C4D4", Offset = "0x175C4D4", VA = "0x175C4D4")]
	public static void cancel(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x175C53C", Offset = "0x175C53C", VA = "0x175C53C")]
	public static void cancel(GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x175C720", Offset = "0x175C720", VA = "0x175C720")]
	public static void cancel(RectTransform rect)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x175C7A8", Offset = "0x175C7A8", VA = "0x175C7A8")]
	public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x175CB20", Offset = "0x175CB20", VA = "0x175CB20")]
	public static void cancel(LTRect ltRect, int uniqueId)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x175CCA4", Offset = "0x175CCA4", VA = "0x175CCA4")]
	public static void cancel(int uniqueId)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x175CD0C", Offset = "0x175CD0C", VA = "0x175CD0C")]
	public static void cancel(int uniqueId, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x175D0C0", Offset = "0x175D0C0", VA = "0x175D0C0")]
	public static LTDescr descr(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x175D428", Offset = "0x175D428", VA = "0x175D428")]
	public static LTDescr description(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x175D48C", Offset = "0x175D48C", VA = "0x175D48C")]
	public static LTDescr[] descriptions([Optional] GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x175D730", Offset = "0x175D730", VA = "0x175D730")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90C324", Offset = "0x90C324")]
	public static void pause(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x175D794", Offset = "0x175D794", VA = "0x175D794")]
	public static void pause(int uniqueId)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x175D8D0", Offset = "0x175D8D0", VA = "0x175D8D0")]
	public static void pause(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x175DA80", Offset = "0x175DA80", VA = "0x175DA80")]
	public static void pauseAll()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x175DB8C", Offset = "0x175DB8C", VA = "0x175DB8C")]
	public static void resumeAll()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x175DC98", Offset = "0x175DC98", VA = "0x175DC98")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90C35C", Offset = "0x90C35C")]
	public static void resume(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x175DCFC", Offset = "0x175DCFC", VA = "0x175DCFC")]
	public static void resume(int uniqueId)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x175DE38", Offset = "0x175DE38", VA = "0x175DE38")]
	public static void resume(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x175DFE8", Offset = "0x175DFE8", VA = "0x175DFE8")]
	public static bool isPaused([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x175E2F4", Offset = "0x175E2F4", VA = "0x175E2F4")]
	public static bool isPaused(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x175E604", Offset = "0x175E604", VA = "0x175E604")]
	public static bool isPaused(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x175E378", Offset = "0x175E378", VA = "0x175E378")]
	public static bool isTweening([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x175E7AC", Offset = "0x175E7AC", VA = "0x175E7AC")]
	public static bool isTweening(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x175E830", Offset = "0x175E830", VA = "0x175E830")]
	public static bool isTweening(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x175E990", Offset = "0x175E990", VA = "0x175E990")]
	public static bool isTweening(LTRect ltRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x175EB10", Offset = "0x175EB10", VA = "0x175EB10")]
	public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0f, [Optional] Transform arrowTransform)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x1750224", Offset = "0x1750224", VA = "0x1750224")]
	public static object logError(string error)
	{
		return null;
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x175F288", Offset = "0x175F288", VA = "0x175F288")]
	public static LTDescr options(LTDescr seed)
	{
		return null;
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x175F2FC", Offset = "0x175F2FC", VA = "0x175F2FC")]
	public static LTDescr options()
	{
		return null;
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x175F7F4", Offset = "0x175F7F4", VA = "0x175F7F4")]
	private static LTDescr pushNewTween(GameObject gameObject, Vector3 to, float time, LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x175F920", Offset = "0x175F920", VA = "0x175F920")]
	public static LTDescr play(RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x174F0B0", Offset = "0x174F0B0", VA = "0x174F0B0")]
	public static LTSeq sequence(bool initSequence = true)
	{
		return null;
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x175FA6C", Offset = "0x175FA6C", VA = "0x175FA6C")]
	public static LTDescr alpha(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x175FB74", Offset = "0x175FB74", VA = "0x175FB74")]
	public static LTDescr alpha(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x175FC80", Offset = "0x175FC80", VA = "0x175FC80")]
	public static LTDescr textAlpha(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x175FD68", Offset = "0x175FD68", VA = "0x175FD68")]
	public static LTDescr alphaText(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x175FE50", Offset = "0x175FE50", VA = "0x175FE50")]
	public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x175FF38", Offset = "0x175FF38", VA = "0x175FF38")]
	public static LTDescr alphaVertex(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x1760004", Offset = "0x1760004", VA = "0x1760004")]
	public static LTDescr color(GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x176016C", Offset = "0x176016C", VA = "0x176016C")]
	public static LTDescr textColor(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x17602B4", Offset = "0x17602B4", VA = "0x17602B4")]
	public static LTDescr colorText(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x174F548", Offset = "0x174F548", VA = "0x174F548")]
	public static LTDescr delayedCall(float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x174F794", Offset = "0x174F794", VA = "0x174F794")]
	public static LTDescr delayedCall(float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x174F930", Offset = "0x174F930", VA = "0x174F930")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x174FAEC", Offset = "0x174FAEC", VA = "0x174FAEC")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x17603FC", Offset = "0x17603FC", VA = "0x17603FC")]
	public static LTDescr destroyAfter(LTRect rect, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x1760524", Offset = "0x1760524", VA = "0x1760524")]
	public static LTDescr move(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x17605D8", Offset = "0x17605D8", VA = "0x17605D8")]
	public static LTDescr move(GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x17606DC", Offset = "0x17606DC", VA = "0x17606DC")]
	public static LTDescr move(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x17608F0", Offset = "0x17608F0", VA = "0x17608F0")]
	public static LTDescr move(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x1760A08", Offset = "0x1760A08", VA = "0x1760A08")]
	public static LTDescr move(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1760B20", Offset = "0x1760B20", VA = "0x1760B20")]
	public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1760C7C", Offset = "0x1760C7C", VA = "0x1760C7C")]
	public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x1760D94", Offset = "0x1760D94", VA = "0x1760D94")]
	public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x1760EF0", Offset = "0x1760EF0", VA = "0x1760EF0")]
	public static LTDescr move(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x176100C", Offset = "0x176100C", VA = "0x176100C")]
	public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x1761128", Offset = "0x1761128", VA = "0x1761128")]
	public static LTDescr moveX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x17611F4", Offset = "0x17611F4", VA = "0x17611F4")]
	public static LTDescr moveY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x17612C0", Offset = "0x17612C0", VA = "0x17612C0")]
	public static LTDescr moveZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x176138C", Offset = "0x176138C", VA = "0x176138C")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x1761440", Offset = "0x1761440", VA = "0x1761440")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x1761654", Offset = "0x1761654", VA = "0x1761654")]
	public static LTDescr moveLocalX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x1761720", Offset = "0x1761720", VA = "0x1761720")]
	public static LTDescr moveLocalY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x17617EC", Offset = "0x17617EC", VA = "0x17617EC")]
	public static LTDescr moveLocalZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x17618B8", Offset = "0x17618B8", VA = "0x17618B8")]
	public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x17619D0", Offset = "0x17619D0", VA = "0x17619D0")]
	public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x1761AE8", Offset = "0x1761AE8", VA = "0x1761AE8")]
	public static LTDescr move(GameObject gameObject, Transform to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x1761BEC", Offset = "0x1761BEC", VA = "0x1761BEC")]
	public static LTDescr rotate(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x1761CA0", Offset = "0x1761CA0", VA = "0x1761CA0")]
	public static LTDescr rotate(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x1761D98", Offset = "0x1761D98", VA = "0x1761D98")]
	public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x1761E4C", Offset = "0x1761E4C", VA = "0x1761E4C")]
	public static LTDescr rotateX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x1761F18", Offset = "0x1761F18", VA = "0x1761F18")]
	public static LTDescr rotateY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1761FE4", Offset = "0x1761FE4", VA = "0x1761FE4")]
	public static LTDescr rotateZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x17620B0", Offset = "0x17620B0", VA = "0x17620B0")]
	public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x17621BC", Offset = "0x17621BC", VA = "0x17621BC")]
	public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x17622C8", Offset = "0x17622C8", VA = "0x17622C8")]
	public static LTDescr scale(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x176237C", Offset = "0x176237C", VA = "0x176237C")]
	public static LTDescr scale(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x1762498", Offset = "0x1762498", VA = "0x1762498")]
	public static LTDescr scaleX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x1762564", Offset = "0x1762564", VA = "0x1762564")]
	public static LTDescr scaleY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x1762630", Offset = "0x1762630", VA = "0x1762630")]
	public static LTDescr scaleZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x17626FC", Offset = "0x17626FC", VA = "0x17626FC")]
	public static LTDescr value(GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x1762818", Offset = "0x1762818", VA = "0x1762818")]
	public static LTDescr value(float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x1762938", Offset = "0x1762938", VA = "0x1762938")]
	public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x1762AA8", Offset = "0x1762AA8", VA = "0x1762AA8")]
	public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x1762B9C", Offset = "0x1762B9C", VA = "0x1762B9C")]
	public static LTDescr value(GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x1762D60", Offset = "0x1762D60", VA = "0x1762D60")]
	public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x1762EE8", Offset = "0x1762EE8", VA = "0x1762EE8")]
	public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x1763070", Offset = "0x1763070", VA = "0x1763070")]
	public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x1763280", Offset = "0x1763280", VA = "0x1763280")]
	public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x1763490", Offset = "0x1763490", VA = "0x1763490")]
	public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x1763628", Offset = "0x1763628", VA = "0x1763628")]
	public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x1763768", Offset = "0x1763768", VA = "0x1763768")]
	public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x17638F4", Offset = "0x17638F4", VA = "0x17638F4")]
	public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x1763A48", Offset = "0x1763A48", VA = "0x1763A48")]
	public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x1763B98", Offset = "0x1763B98", VA = "0x1763B98")]
	public static LTDescr move(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x1763C90", Offset = "0x1763C90", VA = "0x1763C90")]
	public static LTDescr moveX(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x1763D9C", Offset = "0x1763D9C", VA = "0x1763D9C")]
	public static LTDescr moveY(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x1763EA8", Offset = "0x1763EA8", VA = "0x1763EA8")]
	public static LTDescr moveZ(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x1763FB4", Offset = "0x1763FB4", VA = "0x1763FB4")]
	public static LTDescr rotate(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x1764128", Offset = "0x1764128", VA = "0x1764128")]
	public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x1764290", Offset = "0x1764290", VA = "0x1764290")]
	public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x17643DC", Offset = "0x17643DC", VA = "0x17643DC")]
	public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x1764528", Offset = "0x1764528", VA = "0x1764528")]
	public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x1764620", Offset = "0x1764620", VA = "0x1764620")]
	public static LTDescr size(RectTransform rectTrans, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x1764750", Offset = "0x1764750", VA = "0x1764750")]
	public static LTDescr alpha(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x176485C", Offset = "0x176485C", VA = "0x176485C")]
	public static LTDescr color(RectTransform rectTrans, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x17649C8", Offset = "0x17649C8", VA = "0x17649C8")]
	public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x1764A80", Offset = "0x1764A80", VA = "0x1764A80")]
	public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x1764C90", Offset = "0x1764C90", VA = "0x1764C90")]
	public static float easeOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x1764CA8", Offset = "0x1764CA8", VA = "0x1764CA8")]
	public static float easeInQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x1764CB8", Offset = "0x1764CB8", VA = "0x1764CB8")]
	public static float easeInOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x1764D08", Offset = "0x1764D08", VA = "0x1764D08")]
	public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x1764E44", Offset = "0x1764E44", VA = "0x1764E44")]
	public static float linear(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x1764ECC", Offset = "0x1764ECC", VA = "0x1764ECC")]
	public static float clerp(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x1764F98", Offset = "0x1764F98", VA = "0x1764F98")]
	public static float spring(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x176509C", Offset = "0x176509C", VA = "0x176509C")]
	public static float easeInQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x17650B0", Offset = "0x17650B0", VA = "0x17650B0")]
	public static float easeOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x17650CC", Offset = "0x17650CC", VA = "0x17650CC")]
	public static float easeInOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x1765120", Offset = "0x1765120", VA = "0x1765120")]
	public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x1765154", Offset = "0x1765154", VA = "0x1765154")]
	public static float easeInCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x176516C", Offset = "0x176516C", VA = "0x176516C")]
	public static float easeOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x1765194", Offset = "0x1765194", VA = "0x1765194")]
	public static float easeInOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x17651EC", Offset = "0x17651EC", VA = "0x17651EC")]
	public static float easeInQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x1765208", Offset = "0x1765208", VA = "0x1765208")]
	public static float easeOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x1765230", Offset = "0x1765230", VA = "0x1765230")]
	public static float easeInOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x176528C", Offset = "0x176528C", VA = "0x176528C")]
	public static float easeInQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x17652AC", Offset = "0x17652AC", VA = "0x17652AC")]
	public static float easeOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x17652DC", Offset = "0x17652DC", VA = "0x17652DC")]
	public static float easeInOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x1765344", Offset = "0x1765344", VA = "0x1765344")]
	public static float easeInSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x17653DC", Offset = "0x17653DC", VA = "0x17653DC")]
	public static float easeOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x1765470", Offset = "0x1765470", VA = "0x1765470")]
	public static float easeInOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1765514", Offset = "0x1765514", VA = "0x1765514")]
	public static float easeInExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x17655AC", Offset = "0x17655AC", VA = "0x17655AC")]
	public static float easeOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1765644", Offset = "0x1765644", VA = "0x1765644")]
	public static float easeInOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1765734", Offset = "0x1765734", VA = "0x1765734")]
	public static float easeInCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x17657E0", Offset = "0x17657E0", VA = "0x17657E0")]
	public static float easeOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x176588C", Offset = "0x176588C", VA = "0x176588C")]
	public static float easeInOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1765984", Offset = "0x1765984", VA = "0x1765984")]
	public static float easeInBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1765A1C", Offset = "0x1765A1C", VA = "0x1765A1C")]
	public static float easeOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1765AEC", Offset = "0x1765AEC", VA = "0x1765AEC")]
	public static float easeInOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1765BC4", Offset = "0x1765BC4", VA = "0x1765BC4")]
	public static float easeInBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x1765BF8", Offset = "0x1765BF8", VA = "0x1765BF8")]
	public static float easeOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1765C38", Offset = "0x1765C38", VA = "0x1765C38")]
	public static float easeInOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1765CD0", Offset = "0x1765CD0", VA = "0x1765CD0")]
	public static float easeInElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1765E04", Offset = "0x1765E04", VA = "0x1765E04")]
	public static float easeOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1765F28", Offset = "0x1765F28", VA = "0x1765F28")]
	public static float easeInOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x17660E8", Offset = "0x17660E8", VA = "0x17660E8")]
	public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1766478", Offset = "0x1766478", VA = "0x1766478")]
	public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1766830", Offset = "0x1766830", VA = "0x1766830")]
	public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x1766BCC", Offset = "0x1766BCC", VA = "0x1766BCC")]
	public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x1766F0C", Offset = "0x1766F0C", VA = "0x1766F0C")]
	public static void addListener(int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1766F84", Offset = "0x1766F84", VA = "0x1766F84")]
	public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x17674A4", Offset = "0x17674A4", VA = "0x17674A4")]
	public static bool removeListener(int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1767798", Offset = "0x1767798", VA = "0x1767798")]
	public static bool removeListener(int eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x176751C", Offset = "0x176751C", VA = "0x176751C")]
	public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x176788C", Offset = "0x176788C", VA = "0x176788C")]
	public static void dispatchEvent(int eventId)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x17678F4", Offset = "0x17678F4", VA = "0x17678F4")]
	public static void dispatchEvent(int eventId, object data)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1767B70", Offset = "0x1767B70", VA = "0x1767B70")]
	public LeanTween()
	{
	}
}
[Token(Token = "0x200018A")]
public class LTUtility
{
	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x1751C78", Offset = "0x1751C78", VA = "0x1751C78")]
	public static Vector3[] reverse(Vector3[] arr)
	{
		return null;
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x1751E00", Offset = "0x1751E00", VA = "0x1751E00")]
	public LTUtility()
	{
	}
}
[Token(Token = "0x200018B")]
public class LTBezier
{
	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 a;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 aa;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bb;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 cc;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float len;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] arcLengths;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xED6114", Offset = "0xED6114", VA = "0xED6114")]
	public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xED658C", Offset = "0xED658C", VA = "0xED658C")]
	private float map(float u)
	{
		return default(float);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xED64B4", Offset = "0xED64B4", VA = "0xED64B4")]
	private Vector3 bezierPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xED67AC", Offset = "0xED67AC", VA = "0xED67AC")]
	public Vector3 point(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200018C")]
public class LTBezierPath
{
	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] pts;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orientToPath;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool orientToPath2d;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTBezier[] beziers;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] lengthRatio;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBezier;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousBezier;

	[Token(Token = "0x170000D1")]
	public float distance
	{
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xED6C60", Offset = "0xED6C60", VA = "0xED6C60")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xED67D0", Offset = "0xED67D0", VA = "0xED67D0")]
	public LTBezierPath()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xED67D8", Offset = "0xED67D8", VA = "0xED67D8")]
	public LTBezierPath(Vector3[] pts_)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xED6808", Offset = "0xED6808", VA = "0xED6808")]
	public void setPoints(Vector3[] pts_)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xED6C68", Offset = "0xED6C68", VA = "0xED6C68")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xED6E40", Offset = "0xED6E40", VA = "0xED6E40")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xED6FF8", Offset = "0xED6FF8", VA = "0xED6FF8")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xED71B0", Offset = "0xED71B0", VA = "0xED71B0")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xED7254", Offset = "0xED7254", VA = "0xED7254")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xED734C", Offset = "0xED734C", VA = "0xED734C")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xED73F0", Offset = "0xED73F0", VA = "0xED73F0")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xED75A8", Offset = "0xED75A8", VA = "0xED75A8")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xED7684", Offset = "0xED7684", VA = "0xED7684")]
	public float ratioAtPoint(Vector3 pt, float precision = 0.01f)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x200018D")]
public class LTSpline
{
	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DISTANCE_COUNT;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SUBLINE_COUNT;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool constantSpeed;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[NonSerialized]
	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] ptsAdj;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ptsAdjLength;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool orientToPath;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool orientToPath2d;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numSections;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currPt;

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x174FD8C", Offset = "0x174FD8C", VA = "0x174FD8C")]
	public LTSpline(Vector3[] pts)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x17501D8", Offset = "0x17501D8", VA = "0x17501D8")]
	public LTSpline(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x174FDC8", Offset = "0x174FDC8", VA = "0x174FDC8")]
	private void init(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x17507B0", Offset = "0x17507B0", VA = "0x17507B0")]
	public Vector3 map(float u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x17502E4", Offset = "0x17502E4", VA = "0x17502E4")]
	public Vector3 interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x17509C4", Offset = "0x17509C4", VA = "0x17509C4")]
	public float ratioAtPoint(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x1750B1C", Offset = "0x1750B1C", VA = "0x1750B1C")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x1750B34", Offset = "0x1750B34", VA = "0x1750B34")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x1750CEC", Offset = "0x1750CEC", VA = "0x1750CEC")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x1750F24", Offset = "0x1750F24", VA = "0x1750F24")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x1750FC8", Offset = "0x1750FC8", VA = "0x1750FC8")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x17510C0", Offset = "0x17510C0", VA = "0x17510C0")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x1751164", Offset = "0x1751164", VA = "0x1751164")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x17512B8", Offset = "0x17512B8", VA = "0x17512B8")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x17513B4", Offset = "0x17513B4", VA = "0x17513B4")]
	public void drawGizmo(Color color)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x1751544", Offset = "0x1751544", VA = "0x1751544")]
	public static void drawGizmo(Transform[] arr, Color color)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x1751808", Offset = "0x1751808", VA = "0x1751808")]
	public static void drawLine(Transform[] arr, float width, Color color)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1751814", Offset = "0x1751814", VA = "0x1751814")]
	public void drawLinesGLLines(Material outlineMaterial, Color color, float width)
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x1751A80", Offset = "0x1751A80", VA = "0x1751A80")]
	public Vector3[] generateVectors()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200018E")]
public class LTRect
{
	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect _rect;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pivot;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 margin;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect relativeRect;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool rotateEnabled;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool rotateFinished;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool alphaEnabled;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelStr;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LTGUI.Element_Type type;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIStyle style;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useColor;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fontScaleToFit;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useSimpleScale;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool sizeByHeight;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture texture;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _id;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int counter;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colorTouched;

	[Token(Token = "0x170000D2")]
	public bool hasInitiliazed
	{
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x174D2D4", Offset = "0x174D2D4", VA = "0x174D2D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D3")]
	public int id
	{
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x174DBD8", Offset = "0x174DBD8", VA = "0x174DBD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D4")]
	public float x
	{
		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x174EAC4", Offset = "0x174EAC4", VA = "0x174EAC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x174EAD0", Offset = "0x174EAD0", VA = "0x174EAD0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public float y
	{
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x174EADC", Offset = "0x174EADC", VA = "0x174EADC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x174EAE8", Offset = "0x174EAE8", VA = "0x174EAE8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public float width
	{
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x174EAF4", Offset = "0x174EAF4", VA = "0x174EAF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x174EB00", Offset = "0x174EB00", VA = "0x174EB00")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public float height
	{
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x174EB0C", Offset = "0x174EB0C", VA = "0x174EB0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x174EB18", Offset = "0x174EB18", VA = "0x174EB18")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public Rect rect
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x174CDEC", Offset = "0x174CDEC", VA = "0x174CDEC")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x174EB24", Offset = "0x174EB24", VA = "0x174EB24")]
		set
		{
		}
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x174E3BC", Offset = "0x174E3BC", VA = "0x174E3BC")]
	public LTRect()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x174D4B4", Offset = "0x174D4B4", VA = "0x174D4B4")]
	public LTRect(Rect rect)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x174E518", Offset = "0x174E518", VA = "0x174E518")]
	public LTRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x174E608", Offset = "0x174E608", VA = "0x174E608")]
	public LTRect(float x, float y, float width, float height, float alpha)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x174E708", Offset = "0x174E708", VA = "0x174E708")]
	public LTRect(float x, float y, float width, float height, float alpha, float rotation)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x174DBE4", Offset = "0x174DBE4", VA = "0x174DBE4")]
	public void setId(int id, int counter)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x174E494", Offset = "0x174E494", VA = "0x174E494")]
	public void reset()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x174E820", Offset = "0x174E820", VA = "0x174E820")]
	public void resetForRotation()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x174EB30", Offset = "0x174EB30", VA = "0x174EB30")]
	public LTRect setStyle(GUIStyle style)
	{
		return null;
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x174EB38", Offset = "0x174EB38", VA = "0x174EB38")]
	public LTRect setFontScaleToFit(bool fontScaleToFit)
	{
		return null;
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x174EB44", Offset = "0x174EB44", VA = "0x174EB44")]
	public LTRect setColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x174EB58", Offset = "0x174EB58", VA = "0x174EB58")]
	public LTRect setAlpha(float alpha)
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x174EB60", Offset = "0x174EB60", VA = "0x174EB60")]
	public LTRect setLabel(string str)
	{
		return null;
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x174EB68", Offset = "0x174EB68", VA = "0x174EB68")]
	public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect)
	{
		return null;
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x174EB7C", Offset = "0x174EB7C", VA = "0x174EB7C")]
	public LTRect setUseSimpleScale(bool useSimpleScale)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x174EBF8", Offset = "0x174EBF8", VA = "0x174EBF8")]
	public LTRect setSizeByHeight(bool sizeByHeight)
	{
		return null;
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x174EC04", Offset = "0x174EC04", VA = "0x174EC04", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200018F")]
public class LTEvent
{
	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object data;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x174BABC", Offset = "0x174BABC", VA = "0x174BABC")]
	public LTEvent(int id, object data)
	{
	}
}
[Token(Token = "0x2000190")]
public class LTGUI
{
	[Token(Token = "0x2000674")]
	public enum Element_Type
	{
		[Token(Token = "0x40022A2")]
		Texture,
		[Token(Token = "0x40022A3")]
		Label
	}

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RECT_LEVELS;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RECTS_PER_LEVEL;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BUTTONS_MAX;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTRect[] levels;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] levelDepths;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rect[] buttons;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] buttonLevels;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] buttonLastFrame;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LTRect r;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Color color;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isGUIEnabled;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int global_counter;

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x174BAF8", Offset = "0x174BAF8", VA = "0x174BAF8")]
	public static void init()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x174BBC8", Offset = "0x174BBC8", VA = "0x174BBC8")]
	public static void initRectCheck()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x174BD68", Offset = "0x174BD68", VA = "0x174BD68")]
	public static void reset()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x174BF3C", Offset = "0x174BF3C", VA = "0x174BF3C")]
	public static void update(int updateLevel)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x174D014", Offset = "0x174D014", VA = "0x174D014")]
	public static bool checkOnScreen(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x174D0F4", Offset = "0x174D0F4", VA = "0x174D0F4")]
	public static void destroy(int id)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x174D2E4", Offset = "0x174D2E4", VA = "0x174D2E4")]
	public static void destroyAll(int depth)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x174D3F4", Offset = "0x174D3F4", VA = "0x174D3F4")]
	public static LTRect label(Rect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x174D570", Offset = "0x174D570", VA = "0x174D570")]
	public static LTRect label(LTRect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x174DA78", Offset = "0x174DA78", VA = "0x174DA78")]
	public static LTRect texture(Rect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x174DB38", Offset = "0x174DB38", VA = "0x174DB38")]
	public static LTRect texture(LTRect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x174D618", Offset = "0x174D618", VA = "0x174D618")]
	public static LTRect element(LTRect rect, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x174DBEC", Offset = "0x174DBEC", VA = "0x174DBEC")]
	public static bool hasNoOverlap(Rect rect, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x174E000", Offset = "0x174E000", VA = "0x174E000")]
	public static bool pressedWithinRect(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x174E244", Offset = "0x174E244", VA = "0x174E244")]
	public static bool checkWithinRect(Vector2 vec2, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x174E124", Offset = "0x174E124", VA = "0x174E124")]
	public static Vector2 firstTouch()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x174E318", Offset = "0x174E318", VA = "0x174E318")]
	public LTGUI()
	{
	}
}
[Token(Token = "0x2000191")]
public static class LeanTweenExt
{
	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xD2DFA8", Offset = "0xD2DFA8", VA = "0xD2DFA8")]
	public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xD2E028", Offset = "0xD2E028", VA = "0xD2E028")]
	public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xD2E0A8", Offset = "0xD2E0A8", VA = "0xD2E0A8")]
	public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xD2E128", Offset = "0xD2E128", VA = "0xD2E128")]
	public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xD2E1A8", Offset = "0xD2E1A8", VA = "0xD2E1A8")]
	public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xD2E228", Offset = "0xD2E228", VA = "0xD2E228")]
	public static void LeanCancel(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xD2E290", Offset = "0xD2E290", VA = "0xD2E290")]
	public static void LeanCancel(this GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xD2E308", Offset = "0xD2E308", VA = "0xD2E308")]
	public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xD2E388", Offset = "0xD2E388", VA = "0xD2E388")]
	public static void LeanCancel(this RectTransform rectTransform)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xD2E3F0", Offset = "0xD2E3F0", VA = "0xD2E3F0")]
	public static LTDescr LeanColor(this GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xD2E498", Offset = "0xD2E498", VA = "0xD2E498")]
	public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xD2E540", Offset = "0xD2E540", VA = "0xD2E540")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xD2E5C8", Offset = "0xD2E5C8", VA = "0xD2E5C8")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xD2E650", Offset = "0xD2E650", VA = "0xD2E650")]
	public static bool LeanIsPaused(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xD2E6B8", Offset = "0xD2E6B8", VA = "0xD2E6B8")]
	public static bool LeanIsPaused(this RectTransform rectTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xD2E720", Offset = "0xD2E720", VA = "0xD2E720")]
	public static bool LeanIsTweening(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xD2E788", Offset = "0xD2E788", VA = "0xD2E788")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xD2E820", Offset = "0xD2E820", VA = "0xD2E820")]
	public static LTDescr LeanMove(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xD2E8D8", Offset = "0xD2E8D8", VA = "0xD2E8D8")]
	public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xD2E970", Offset = "0xD2E970", VA = "0xD2E970")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xD2EA00", Offset = "0xD2EA00", VA = "0xD2EA00")]
	public static LTDescr LeanMove(this Transform transform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xD2EAB0", Offset = "0xD2EAB0", VA = "0xD2EAB0")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xD2EB38", Offset = "0xD2EB38", VA = "0xD2EB38")]
	public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xD2EBC0", Offset = "0xD2EBC0", VA = "0xD2EBC0")]
	public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xD2EC48", Offset = "0xD2EC48", VA = "0xD2EC48")]
	public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xD2ECF0", Offset = "0xD2ECF0", VA = "0xD2ECF0")]
	public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xD2ED98", Offset = "0xD2ED98", VA = "0xD2ED98")]
	public static LTDescr LeanMove(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xD2EE40", Offset = "0xD2EE40", VA = "0xD2EE40")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xD2EED8", Offset = "0xD2EED8", VA = "0xD2EED8")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xD2EF60", Offset = "0xD2EF60", VA = "0xD2EF60")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xD2EFE8", Offset = "0xD2EFE8", VA = "0xD2EFE8")]
	public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xD2F0A0", Offset = "0xD2F0A0", VA = "0xD2F0A0")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xD2F148", Offset = "0xD2F148", VA = "0xD2F148")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xD2F1F0", Offset = "0xD2F1F0", VA = "0xD2F1F0")]
	public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xD2F270", Offset = "0xD2F270", VA = "0xD2F270")]
	public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xD2F2F0", Offset = "0xD2F2F0", VA = "0xD2F2F0")]
	public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xD2F370", Offset = "0xD2F370", VA = "0xD2F370")]
	public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xD2F410", Offset = "0xD2F410", VA = "0xD2F410")]
	public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xD2F4B0", Offset = "0xD2F4B0", VA = "0xD2F4B0")]
	public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xD2F550", Offset = "0xD2F550", VA = "0xD2F550")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xD2F5D8", Offset = "0xD2F5D8", VA = "0xD2F5D8")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xD2F660", Offset = "0xD2F660", VA = "0xD2F660")]
	public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xD2F708", Offset = "0xD2F708", VA = "0xD2F708")]
	public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xD2F7B0", Offset = "0xD2F7B0", VA = "0xD2F7B0")]
	public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xD2F838", Offset = "0xD2F838", VA = "0xD2F838")]
	public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xD2F8E0", Offset = "0xD2F8E0", VA = "0xD2F8E0")]
	public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xD2F960", Offset = "0xD2F960", VA = "0xD2F960")]
	public static LTDescr LeanMoveX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xD2FA00", Offset = "0xD2FA00", VA = "0xD2FA00")]
	public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xD2FA80", Offset = "0xD2FA80", VA = "0xD2FA80")]
	public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xD2FB00", Offset = "0xD2FB00", VA = "0xD2FB00")]
	public static LTDescr LeanMoveY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xD2FBA0", Offset = "0xD2FBA0", VA = "0xD2FBA0")]
	public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xD2FC20", Offset = "0xD2FC20", VA = "0xD2FC20")]
	public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xD2FCA0", Offset = "0xD2FCA0", VA = "0xD2FCA0")]
	public static LTDescr LeanMoveZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xD2FD40", Offset = "0xD2FD40", VA = "0xD2FD40")]
	public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xD2FDC0", Offset = "0xD2FDC0", VA = "0xD2FDC0")]
	public static void LeanPause(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xD2FE28", Offset = "0xD2FE28", VA = "0xD2FE28")]
	public static LTDescr LeanPlay(this RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xD2FEA0", Offset = "0xD2FEA0", VA = "0xD2FEA0")]
	public static void LeanResume(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xD2FF08", Offset = "0xD2FF08", VA = "0xD2FF08")]
	public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xD2FFA0", Offset = "0xD2FFA0", VA = "0xD2FFA0")]
	public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xD30058", Offset = "0xD30058", VA = "0xD30058")]
	public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xD300F0", Offset = "0xD300F0", VA = "0xD300F0")]
	public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xD30198", Offset = "0xD30198", VA = "0xD30198")]
	public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xD30260", Offset = "0xD30260", VA = "0xD30260")]
	public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xD30308", Offset = "0xD30308", VA = "0xD30308")]
	public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xD303B0", Offset = "0xD303B0", VA = "0xD303B0")]
	public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xD30478", Offset = "0xD30478", VA = "0xD30478")]
	public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xD30520", Offset = "0xD30520", VA = "0xD30520")]
	public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xD305A0", Offset = "0xD305A0", VA = "0xD305A0")]
	public static LTDescr LeanRotateX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xD30640", Offset = "0xD30640", VA = "0xD30640")]
	public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xD306C0", Offset = "0xD306C0", VA = "0xD306C0")]
	public static LTDescr LeanRotateY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xD30760", Offset = "0xD30760", VA = "0xD30760")]
	public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xD307E0", Offset = "0xD307E0", VA = "0xD307E0")]
	public static LTDescr LeanRotateZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xD30880", Offset = "0xD30880", VA = "0xD30880")]
	public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xD30918", Offset = "0xD30918", VA = "0xD30918")]
	public static LTDescr LeanScale(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xD309D0", Offset = "0xD309D0", VA = "0xD309D0")]
	public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xD30A68", Offset = "0xD30A68", VA = "0xD30A68")]
	public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xD30AE8", Offset = "0xD30AE8", VA = "0xD30AE8")]
	public static LTDescr LeanScaleX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xD30B88", Offset = "0xD30B88", VA = "0xD30B88")]
	public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xD30C08", Offset = "0xD30C08", VA = "0xD30C08")]
	public static LTDescr LeanScaleY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xD30CA8", Offset = "0xD30CA8", VA = "0xD30CA8")]
	public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xD30D28", Offset = "0xD30D28", VA = "0xD30D28")]
	public static LTDescr LeanScaleZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xD30DC8", Offset = "0xD30DC8", VA = "0xD30DC8")]
	public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xD30E58", Offset = "0xD30E58", VA = "0xD30E58")]
	public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xD30F80", Offset = "0xD30F80", VA = "0xD30F80")]
	public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xD31010", Offset = "0xD31010", VA = "0xD31010")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD310B8", Offset = "0xD310B8", VA = "0xD310B8")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xD31178", Offset = "0xD31178", VA = "0xD31178")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xD31218", Offset = "0xD31218", VA = "0xD31218")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xD312B8", Offset = "0xD312B8", VA = "0xD312B8")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xD31358", Offset = "0xD31358", VA = "0xD31358")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD31488", Offset = "0xD31488", VA = "0xD31488")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xD31540", Offset = "0xD31540", VA = "0xD31540")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xD2B2AC", Offset = "0xD2B2AC", VA = "0xD2B2AC")]
	public static void LeanSetPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xD2B450", Offset = "0xD2B450", VA = "0xD2B450")]
	public static void LeanSetPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xD2B5F4", Offset = "0xD2B5F4", VA = "0xD2B5F4")]
	public static void LeanSetPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xD2ADC0", Offset = "0xD2ADC0", VA = "0xD2ADC0")]
	public static void LeanSetLocalPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xD2AF64", Offset = "0xD2AF64", VA = "0xD2AF64")]
	public static void LeanSetLocalPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xD2B108", Offset = "0xD2B108", VA = "0xD2B108")]
	public static void LeanSetLocalPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xD2B9A0", Offset = "0xD2B9A0", VA = "0xD2B9A0")]
	public static Color LeanColor(this Transform transform)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000192")]
public class LTDescr
{
	[Token(Token = "0x2000675")]
	public delegate Vector3 EaseTypeDelegate();

	[Token(Token = "0x2000676")]
	public delegate void ActionMethodDelegate();

	[Serializable]
	[Token(Token = "0x2000677")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D24", Offset = "0x8F7D24")]
	private sealed class <>c
	{
		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ActionMethodDelegate <>9__113_0;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ActionMethodDelegate <>9__114_0;

		[Token(Token = "0x600303F")]
		[Address(RVA = "0x174AE04", Offset = "0x174AE04", VA = "0x174AE04")]
		public <>c()
		{
		}

		[Token(Token = "0x6003040")]
		[Address(RVA = "0x174AE0C", Offset = "0x174AE0C", VA = "0x174AE0C")]
		internal void <setCallback>b__113_0()
		{
		}

		[Token(Token = "0x6003041")]
		[Address(RVA = "0x174AE10", Offset = "0x174AE10", VA = "0x174AE10")]
		internal void <setValue3>b__114_0()
		{
		}
	}

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool toggle;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useEstimatedTime;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useFrames;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useManualTime;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool usesNormalDt;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool hasInitiliazed;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool hasExtraOnCompletes;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool hasPhysics;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onCompleteOnRepeat;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onCompleteOnStart;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useRecursion;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratioPassed;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float passed;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastVal;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint _id;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCount;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint counter;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float direction;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionLast;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float overshoot;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float period;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool destroyOnComplete;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trans;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal Vector3 fromInternal;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal Vector3 toInternal;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Vector3 diff;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal Vector3 diffDiv2;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TweenAction type;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private LeanTweenType easeType;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeanTweenType loopType;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool hasUpdateCallback;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EaseTypeDelegate easeMethod;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB24", Offset = "0x8FAB24")]
	private ActionMethodDelegate <easeInternal>k__BackingField;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB34", Offset = "0x8FAB34")]
	private ActionMethodDelegate <initInternal>k__BackingField;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer spriteRen;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text uiText;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image uiImage;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RawImage rawImage;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] sprites;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LTDescrOptional _optional;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float val;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float dt;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 newVect;

	[Token(Token = "0x170000D9")]
	public Vector3 from
	{
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xED77D8", Offset = "0xED77D8", VA = "0xED77D8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xED77E4", Offset = "0xED77E4", VA = "0xED77E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public Vector3 to
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xED77F0", Offset = "0xED77F0", VA = "0xED77F0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xED77FC", Offset = "0xED77FC", VA = "0xED77FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public ActionMethodDelegate easeInternal
	{
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xED7808", Offset = "0xED7808", VA = "0xED7808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C9C4", Offset = "0x90C9C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xED7810", Offset = "0xED7810", VA = "0xED7810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C9D4", Offset = "0x90C9D4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public ActionMethodDelegate initInternal
	{
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xED7818", Offset = "0xED7818", VA = "0xED7818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C9E4", Offset = "0x90C9E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xED7820", Offset = "0xED7820", VA = "0xED7820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C9F4", Offset = "0x90C9F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public Transform toTrans
	{
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xED7828", Offset = "0xED7828", VA = "0xED7828")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DE")]
	public int uniqueId
	{
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xED8480", Offset = "0xED8480", VA = "0xED8480")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DF")]
	public int id
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xED831C", Offset = "0xED831C", VA = "0xED831C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E0")]
	public LTDescrOptional optional
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xED7858", Offset = "0xED7858", VA = "0xED7858")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xED8490", Offset = "0xED8490", VA = "0xED8490")]
		set
		{
		}
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xED7860", Offset = "0xED7860", VA = "0xED7860", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xED832C", Offset = "0xED832C", VA = "0xED832C")]
	public LTDescr()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xED839C", Offset = "0xED839C", VA = "0xED839C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90CA04", Offset = "0x90CA04")]
	public LTDescr cancel(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xED8498", Offset = "0xED8498", VA = "0xED8498")]
	public void reset()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xED85A8", Offset = "0xED85A8", VA = "0xED85A8")]
	public LTDescr setFollow()
	{
		return null;
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xED85B4", Offset = "0xED85B4", VA = "0xED85B4")]
	public LTDescr setMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xED865C", Offset = "0xED865C", VA = "0xED865C")]
	public LTDescr setMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xED8708", Offset = "0xED8708", VA = "0xED8708")]
	public LTDescr setMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xED87B4", Offset = "0xED87B4", VA = "0xED87B4")]
	public LTDescr setMoveLocalX()
	{
		return null;
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xED8860", Offset = "0xED8860", VA = "0xED8860")]
	public LTDescr setMoveLocalY()
	{
		return null;
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xED890C", Offset = "0xED890C", VA = "0xED890C")]
	public LTDescr setMoveLocalZ()
	{
		return null;
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xED89B8", Offset = "0xED89B8", VA = "0xED89B8")]
	private void initFromInternal()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xED89C0", Offset = "0xED89C0", VA = "0xED89C0")]
	public LTDescr setOffset(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xED89CC", Offset = "0xED89CC", VA = "0xED89CC")]
	public LTDescr setMoveCurved()
	{
		return null;
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xED8A78", Offset = "0xED8A78", VA = "0xED8A78")]
	public LTDescr setMoveCurvedLocal()
	{
		return null;
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xED8B24", Offset = "0xED8B24", VA = "0xED8B24")]
	public LTDescr setMoveSpline()
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xED8BD0", Offset = "0xED8BD0", VA = "0xED8BD0")]
	public LTDescr setMoveSplineLocal()
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xED8C7C", Offset = "0xED8C7C", VA = "0xED8C7C")]
	public LTDescr setScaleX()
	{
		return null;
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xED8D28", Offset = "0xED8D28", VA = "0xED8D28")]
	public LTDescr setScaleY()
	{
		return null;
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xED8DD4", Offset = "0xED8DD4", VA = "0xED8DD4")]
	public LTDescr setScaleZ()
	{
		return null;
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xED8E80", Offset = "0xED8E80", VA = "0xED8E80")]
	public LTDescr setRotateX()
	{
		return null;
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xED8F2C", Offset = "0xED8F2C", VA = "0xED8F2C")]
	public LTDescr setRotateY()
	{
		return null;
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xED8FD8", Offset = "0xED8FD8", VA = "0xED8FD8")]
	public LTDescr setRotateZ()
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xED9084", Offset = "0xED9084", VA = "0xED9084")]
	public LTDescr setRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xED9130", Offset = "0xED9130", VA = "0xED9130")]
	public LTDescr setRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xED91DC", Offset = "0xED91DC", VA = "0xED91DC")]
	public LTDescr setAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xED9288", Offset = "0xED9288", VA = "0xED9288")]
	public LTDescr setTextAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xED9334", Offset = "0xED9334", VA = "0xED9334")]
	public LTDescr setAlphaVertex()
	{
		return null;
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xED93E0", Offset = "0xED93E0", VA = "0xED93E0")]
	public LTDescr setColor()
	{
		return null;
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xED948C", Offset = "0xED948C", VA = "0xED948C")]
	public LTDescr setCallbackColor()
	{
		return null;
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xED9538", Offset = "0xED9538", VA = "0xED9538")]
	public LTDescr setTextColor()
	{
		return null;
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xED95E4", Offset = "0xED95E4", VA = "0xED95E4")]
	public LTDescr setCanvasAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xED9690", Offset = "0xED9690", VA = "0xED9690")]
	public LTDescr setCanvasGroupAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xED973C", Offset = "0xED973C", VA = "0xED973C")]
	public LTDescr setCanvasColor()
	{
		return null;
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xED97E8", Offset = "0xED97E8", VA = "0xED97E8")]
	public LTDescr setCanvasMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xED9894", Offset = "0xED9894", VA = "0xED9894")]
	public LTDescr setCanvasMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xED9940", Offset = "0xED9940", VA = "0xED9940")]
	public LTDescr setCanvasMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xED99EC", Offset = "0xED99EC", VA = "0xED99EC")]
	private void initCanvasRotateAround()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xED9A70", Offset = "0xED9A70", VA = "0xED9A70")]
	public LTDescr setCanvasRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xED9B1C", Offset = "0xED9B1C", VA = "0xED9B1C")]
	public LTDescr setCanvasRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xED9BC8", Offset = "0xED9BC8", VA = "0xED9BC8")]
	public LTDescr setCanvasPlaySprite()
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xED9C74", Offset = "0xED9C74", VA = "0xED9C74")]
	public LTDescr setCanvasMove()
	{
		return null;
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xED9D20", Offset = "0xED9D20", VA = "0xED9D20")]
	public LTDescr setCanvasScale()
	{
		return null;
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xED9DCC", Offset = "0xED9DCC", VA = "0xED9DCC")]
	public LTDescr setCanvasSizeDelta()
	{
		return null;
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xED9E78", Offset = "0xED9E78", VA = "0xED9E78")]
	private void callback()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xED9EF8", Offset = "0xED9EF8", VA = "0xED9EF8")]
	public LTDescr setCallback()
	{
		return null;
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xEDA008", Offset = "0xEDA008", VA = "0xEDA008")]
	public LTDescr setValue3()
	{
		return null;
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xEDA118", Offset = "0xEDA118", VA = "0xEDA118")]
	public LTDescr setMove()
	{
		return null;
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xEDA1C4", Offset = "0xEDA1C4", VA = "0xEDA1C4")]
	public LTDescr setMoveLocal()
	{
		return null;
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xEDA270", Offset = "0xEDA270", VA = "0xEDA270")]
	public LTDescr setMoveToTransform()
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xEDA31C", Offset = "0xEDA31C", VA = "0xEDA31C")]
	public LTDescr setRotate()
	{
		return null;
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xEDA3C8", Offset = "0xEDA3C8", VA = "0xEDA3C8")]
	public LTDescr setRotateLocal()
	{
		return null;
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xEDA474", Offset = "0xEDA474", VA = "0xEDA474")]
	public LTDescr setScale()
	{
		return null;
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xEDA520", Offset = "0xEDA520", VA = "0xEDA520")]
	public LTDescr setGUIMove()
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xEDA5CC", Offset = "0xEDA5CC", VA = "0xEDA5CC")]
	public LTDescr setGUIMoveMargin()
	{
		return null;
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xEDA678", Offset = "0xEDA678", VA = "0xEDA678")]
	public LTDescr setGUIScale()
	{
		return null;
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xEDA724", Offset = "0xEDA724", VA = "0xEDA724")]
	public LTDescr setGUIAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xEDA7D0", Offset = "0xEDA7D0", VA = "0xEDA7D0")]
	public LTDescr setGUIRotate()
	{
		return null;
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xEDA87C", Offset = "0xEDA87C", VA = "0xEDA87C")]
	public LTDescr setDelayedSound()
	{
		return null;
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xEDA928", Offset = "0xEDA928", VA = "0xEDA928")]
	public LTDescr setTarget(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xEDA974", Offset = "0xEDA974", VA = "0xEDA974")]
	private void init()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xEDAD84", Offset = "0xEDAD84", VA = "0xEDAD84")]
	private void initSpeed()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xEDAED4", Offset = "0xEDAED4", VA = "0xEDAED4")]
	public LTDescr updateNow()
	{
		return null;
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xEDAEF8", Offset = "0xEDAEF8", VA = "0xEDAEF8")]
	public bool updateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xEDAB6C", Offset = "0xEDAB6C", VA = "0xEDAB6C")]
	public void callOnCompletes()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xEDB284", Offset = "0xEDB284", VA = "0xEDB284")]
	public LTDescr setFromColor(Color col)
	{
		return null;
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xEDB36C", Offset = "0xEDB36C", VA = "0xEDB36C")]
	private static void alphaRecursive(Transform transform, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xEDB8C4", Offset = "0xEDB8C4", VA = "0xEDB8C4")]
	private static void colorRecursive(Transform transform, Color toColor, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xEDBCD0", Offset = "0xEDBCD0", VA = "0xEDBCD0")]
	private static void alphaRecursive(RectTransform rectTransform, float val, int recursiveLevel = 0)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xEDC108", Offset = "0xEDC108", VA = "0xEDC108")]
	private static void alphaRecursiveSprite(Transform transform, float val)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xEDC50C", Offset = "0xEDC50C", VA = "0xEDC50C")]
	private static void colorRecursiveSprite(Transform transform, Color toColor)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xEDC964", Offset = "0xEDC964", VA = "0xEDC964")]
	private static void colorRecursive(RectTransform rectTransform, Color toColor)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xEDCDA0", Offset = "0xEDCDA0", VA = "0xEDCDA0")]
	private static void textAlphaChildrenRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xEDD14C", Offset = "0xEDD14C", VA = "0xEDD14C")]
	private static void textAlphaRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xEDD4F8", Offset = "0xEDD4F8", VA = "0xEDD4F8")]
	private static void textColorRecursive(Transform trans, Color toColor)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xEDD8A4", Offset = "0xEDD8A4", VA = "0xEDD8A4")]
	private static Color tweenColor(LTDescr tween, float val)
	{
		return default(Color);
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xEDDA5C", Offset = "0xEDDA5C", VA = "0xEDDA5C")]
	public LTDescr pause()
	{
		return null;
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xEDDA74", Offset = "0xEDDA74", VA = "0xEDDA74")]
	public LTDescr resume()
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xEDDA80", Offset = "0xEDDA80", VA = "0xEDDA80")]
	public LTDescr setAxis(Vector3 axis)
	{
		return null;
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xEDDAE4", Offset = "0xEDDAE4", VA = "0xEDDAE4")]
	public LTDescr setDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xEDDAEC", Offset = "0xEDDAEC", VA = "0xEDDAEC")]
	public LTDescr setEase(LeanTweenType easeType)
	{
		return null;
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xEDDC28", Offset = "0xEDDC28", VA = "0xEDDC28")]
	public LTDescr setEaseLinear()
	{
		return null;
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xEDECC4", Offset = "0xEDECC4", VA = "0xEDECC4")]
	public LTDescr setEaseSpring()
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xEDDD20", Offset = "0xEDDD20", VA = "0xEDDD20")]
	public LTDescr setEaseInQuad()
	{
		return null;
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xEDDCA4", Offset = "0xEDDCA4", VA = "0xEDDCA4")]
	public LTDescr setEaseOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xEDDD9C", Offset = "0xEDDD9C", VA = "0xEDDD9C")]
	public LTDescr setEaseInOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xEDDE18", Offset = "0xEDDE18", VA = "0xEDDE18")]
	public LTDescr setEaseInCubic()
	{
		return null;
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xEDDE94", Offset = "0xEDDE94", VA = "0xEDDE94")]
	public LTDescr setEaseOutCubic()
	{
		return null;
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xEDDF10", Offset = "0xEDDF10", VA = "0xEDDF10")]
	public LTDescr setEaseInOutCubic()
	{
		return null;
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xEDDF8C", Offset = "0xEDDF8C", VA = "0xEDDF8C")]
	public LTDescr setEaseInQuart()
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xEDE008", Offset = "0xEDE008", VA = "0xEDE008")]
	public LTDescr setEaseOutQuart()
	{
		return null;
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xEDE084", Offset = "0xEDE084", VA = "0xEDE084")]
	public LTDescr setEaseInOutQuart()
	{
		return null;
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xEDE100", Offset = "0xEDE100", VA = "0xEDE100")]
	public LTDescr setEaseInQuint()
	{
		return null;
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xEDE17C", Offset = "0xEDE17C", VA = "0xEDE17C")]
	public LTDescr setEaseOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xEDE1F8", Offset = "0xEDE1F8", VA = "0xEDE1F8")]
	public LTDescr setEaseInOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xEDE274", Offset = "0xEDE274", VA = "0xEDE274")]
	public LTDescr setEaseInSine()
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xEDE2F0", Offset = "0xEDE2F0", VA = "0xEDE2F0")]
	public LTDescr setEaseOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xEDE36C", Offset = "0xEDE36C", VA = "0xEDE36C")]
	public LTDescr setEaseInOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xEDE3E8", Offset = "0xEDE3E8", VA = "0xEDE3E8")]
	public LTDescr setEaseInExpo()
	{
		return null;
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xEDE464", Offset = "0xEDE464", VA = "0xEDE464")]
	public LTDescr setEaseOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xEDE4E0", Offset = "0xEDE4E0", VA = "0xEDE4E0")]
	public LTDescr setEaseInOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xEDE55C", Offset = "0xEDE55C", VA = "0xEDE55C")]
	public LTDescr setEaseInCirc()
	{
		return null;
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xEDE5D8", Offset = "0xEDE5D8", VA = "0xEDE5D8")]
	public LTDescr setEaseOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xEDE654", Offset = "0xEDE654", VA = "0xEDE654")]
	public LTDescr setEaseInOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xEDE6D0", Offset = "0xEDE6D0", VA = "0xEDE6D0")]
	public LTDescr setEaseInBounce()
	{
		return null;
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xEDE74C", Offset = "0xEDE74C", VA = "0xEDE74C")]
	public LTDescr setEaseOutBounce()
	{
		return null;
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xEDE7C8", Offset = "0xEDE7C8", VA = "0xEDE7C8")]
	public LTDescr setEaseInOutBounce()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xEDE844", Offset = "0xEDE844", VA = "0xEDE844")]
	public LTDescr setEaseInBack()
	{
		return null;
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xEDE8C0", Offset = "0xEDE8C0", VA = "0xEDE8C0")]
	public LTDescr setEaseOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xEDE93C", Offset = "0xEDE93C", VA = "0xEDE93C")]
	public LTDescr setEaseInOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xEDE9B8", Offset = "0xEDE9B8", VA = "0xEDE9B8")]
	public LTDescr setEaseInElastic()
	{
		return null;
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xEDEA34", Offset = "0xEDEA34", VA = "0xEDEA34")]
	public LTDescr setEaseOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xEDEAB0", Offset = "0xEDEAB0", VA = "0xEDEAB0")]
	public LTDescr setEaseInOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xEDEB2C", Offset = "0xEDEB2C", VA = "0xEDEB2C")]
	public LTDescr setEasePunch()
	{
		return null;
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xEDEBF8", Offset = "0xEDEBF8", VA = "0xEDEBF8")]
	public LTDescr setEaseShake()
	{
		return null;
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xEDED40", Offset = "0xEDED40", VA = "0xEDED40")]
	private Vector3 tweenOnCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xEDEE7C", Offset = "0xEDEE7C", VA = "0xEDEE7C")]
	private Vector3 easeInOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xEDEF68", Offset = "0xEDEF68", VA = "0xEDEF68")]
	private Vector3 easeInQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xEDF01C", Offset = "0xEDF01C", VA = "0xEDF01C")]
	private Vector3 easeOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xEDF0F8", Offset = "0xEDF0F8", VA = "0xEDF0F8")]
	private Vector3 easeLinear()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xEDF1A8", Offset = "0xEDF1A8", VA = "0xEDF1A8")]
	private Vector3 easeSpring()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xEDF34C", Offset = "0xEDF34C", VA = "0xEDF34C")]
	private Vector3 easeInCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xEDF404", Offset = "0xEDF404", VA = "0xEDF404")]
	private Vector3 easeOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xEDF4DC", Offset = "0xEDF4DC", VA = "0xEDF4DC")]
	private Vector3 easeInOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xEDF5E0", Offset = "0xEDF5E0", VA = "0xEDF5E0")]
	private Vector3 easeInQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xEDF6AC", Offset = "0xEDF6AC", VA = "0xEDF6AC")]
	private Vector3 easeOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xEDF788", Offset = "0xEDF788", VA = "0xEDF788")]
	private Vector3 easeInOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xEDF8FC", Offset = "0xEDF8FC", VA = "0xEDF8FC")]
	private Vector3 easeInQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xEDF9CC", Offset = "0xEDF9CC", VA = "0xEDF9CC")]
	private Vector3 easeOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xEDFAAC", Offset = "0xEDFAAC", VA = "0xEDFAAC")]
	private Vector3 easeInOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xEDFBC0", Offset = "0xEDFBC0", VA = "0xEDFBC0")]
	private Vector3 easeInSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xEDFCE0", Offset = "0xEDFCE0", VA = "0xEDFCE0")]
	private Vector3 easeOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xEDFDF0", Offset = "0xEDFDF0", VA = "0xEDFDF0")]
	private Vector3 easeInOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xEDFEE4", Offset = "0xEDFEE4", VA = "0xEDFEE4")]
	private Vector3 easeInExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xEDFFD0", Offset = "0xEDFFD0", VA = "0xEDFFD0")]
	private Vector3 easeOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xEE00BC", Offset = "0xEE00BC", VA = "0xEE00BC")]
	private Vector3 easeInOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xEE0240", Offset = "0xEE0240", VA = "0xEE0240")]
	private Vector3 easeInCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xEE0344", Offset = "0xEE0344", VA = "0xEE0344")]
	private Vector3 easeOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xEE045C", Offset = "0xEE045C", VA = "0xEE045C")]
	private Vector3 easeInOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xEE05E4", Offset = "0xEE05E4", VA = "0xEE05E4")]
	private Vector3 easeInBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xEE074C", Offset = "0xEE074C", VA = "0xEE074C")]
	private Vector3 easeOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xEE0948", Offset = "0xEE0948", VA = "0xEE0948")]
	private Vector3 easeInOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xEE0B78", Offset = "0xEE0B78", VA = "0xEE0B78")]
	private Vector3 easeInBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xEE0C88", Offset = "0xEE0C88", VA = "0xEE0C88")]
	private Vector3 easeOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xEE0D8C", Offset = "0xEE0D8C", VA = "0xEE0D8C")]
	private Vector3 easeInOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xEE0F20", Offset = "0xEE0F20", VA = "0xEE0F20")]
	private Vector3 easeInElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xEE1034", Offset = "0xEE1034", VA = "0xEE1034")]
	private Vector3 easeOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xEE1148", Offset = "0xEE1148", VA = "0xEE1148")]
	private Vector3 easeInOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xEE125C", Offset = "0xEE125C", VA = "0xEE125C")]
	public LTDescr setOvershoot(float overshoot)
	{
		return null;
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xEE1264", Offset = "0xEE1264", VA = "0xEE1264")]
	public LTDescr setPeriod(float period)
	{
		return null;
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xEE126C", Offset = "0xEE126C", VA = "0xEE126C")]
	public LTDescr setScale(float scale)
	{
		return null;
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xEE1274", Offset = "0xEE1274", VA = "0xEE1274")]
	public LTDescr setEase(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xEE1310", Offset = "0xEE1310", VA = "0xEE1310")]
	public LTDescr setTo(Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xEE13D8", Offset = "0xEE13D8", VA = "0xEE13D8")]
	public LTDescr setTo(Transform to)
	{
		return null;
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xEE1424", Offset = "0xEE1424", VA = "0xEE1424")]
	public LTDescr setFrom(Vector3 from)
	{
		return null;
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xEE1534", Offset = "0xEE1534", VA = "0xEE1534")]
	public LTDescr setFrom(float from)
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xEE1584", Offset = "0xEE1584", VA = "0xEE1584")]
	public LTDescr setDiff(Vector3 diff)
	{
		return null;
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xEE1590", Offset = "0xEE1590", VA = "0xEE1590")]
	public LTDescr setHasInitialized(bool has)
	{
		return null;
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xEE159C", Offset = "0xEE159C", VA = "0xEE159C")]
	public LTDescr setId(uint id, uint global_counter)
	{
		return null;
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xEE15A8", Offset = "0xEE15A8", VA = "0xEE15A8")]
	public LTDescr setPassed(float passed)
	{
		return null;
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xEE15B0", Offset = "0xEE15B0", VA = "0xEE15B0")]
	public LTDescr setTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xEE15CC", Offset = "0xEE15CC", VA = "0xEE15CC")]
	public LTDescr setSpeed(float speed)
	{
		return null;
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xEE1600", Offset = "0xEE1600", VA = "0xEE1600")]
	public LTDescr setRepeat(int repeat)
	{
		return null;
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xEE1654", Offset = "0xEE1654", VA = "0xEE1654")]
	public LTDescr setLoopType(LeanTweenType loopType)
	{
		return null;
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xEE165C", Offset = "0xEE165C", VA = "0xEE165C")]
	public LTDescr setUseEstimatedTime(bool useEstimatedTime)
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xEE166C", Offset = "0xEE166C", VA = "0xEE166C")]
	public LTDescr setIgnoreTimeScale(bool useUnScaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xEE167C", Offset = "0xEE167C", VA = "0xEE167C")]
	public LTDescr setUseFrames(bool useFrames)
	{
		return null;
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xEE168C", Offset = "0xEE168C", VA = "0xEE168C")]
	public LTDescr setUseManualTime(bool useManualTime)
	{
		return null;
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xEE169C", Offset = "0xEE169C", VA = "0xEE169C")]
	public LTDescr setLoopCount(int loopCount)
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xEE16AC", Offset = "0xEE16AC", VA = "0xEE16AC")]
	public LTDescr setLoopOnce()
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xEE16B8", Offset = "0xEE16B8", VA = "0xEE16B8")]
	public LTDescr setLoopClamp()
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xEE16D8", Offset = "0xEE16D8", VA = "0xEE16D8")]
	public LTDescr setLoopClamp(int loops)
	{
		return null;
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xEE16E0", Offset = "0xEE16E0", VA = "0xEE16E0")]
	public LTDescr setLoopPingPong()
	{
		return null;
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xEE1700", Offset = "0xEE1700", VA = "0xEE1700")]
	public LTDescr setLoopPingPong(int loops)
	{
		return null;
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xEE1740", Offset = "0xEE1740", VA = "0xEE1740")]
	public LTDescr setOnComplete(Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xEE1794", Offset = "0xEE1794", VA = "0xEE1794")]
	public LTDescr setOnComplete(Action<object> onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xEE17E8", Offset = "0xEE17E8", VA = "0xEE17E8")]
	public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xEE1864", Offset = "0xEE1864", VA = "0xEE1864")]
	public LTDescr setOnCompleteParam(object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xEE18B8", Offset = "0xEE18B8", VA = "0xEE18B8")]
	public LTDescr setOnUpdate(Action<float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xEE190C", Offset = "0xEE190C", VA = "0xEE190C")]
	public LTDescr setOnUpdateRatio(Action<float, float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xEE1960", Offset = "0xEE1960", VA = "0xEE1960")]
	public LTDescr setOnUpdateObject(Action<float, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xEE19B4", Offset = "0xEE19B4", VA = "0xEE19B4")]
	public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xEE1A08", Offset = "0xEE1A08", VA = "0xEE1A08")]
	public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xEE1A5C", Offset = "0xEE1A5C", VA = "0xEE1A5C")]
	public LTDescr setOnUpdateColor(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xEE1AB0", Offset = "0xEE1AB0", VA = "0xEE1AB0")]
	public LTDescr setOnUpdateColor(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xEE1B04", Offset = "0xEE1B04", VA = "0xEE1B04")]
	public LTDescr setOnUpdate(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xEE1B58", Offset = "0xEE1B58", VA = "0xEE1B58")]
	public LTDescr setOnUpdate(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xEE1BAC", Offset = "0xEE1BAC", VA = "0xEE1BAC")]
	public LTDescr setOnUpdate(Action<float, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xEE1C28", Offset = "0xEE1C28", VA = "0xEE1C28")]
	public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xEE1CA4", Offset = "0xEE1CA4", VA = "0xEE1CA4")]
	public LTDescr setOnUpdate(Action<Vector2> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xEE1D20", Offset = "0xEE1D20", VA = "0xEE1D20")]
	public LTDescr setOnUpdate(Action<Vector3> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xEE1D9C", Offset = "0xEE1D9C", VA = "0xEE1D9C")]
	public LTDescr setOnUpdateParam(object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xEE1DE8", Offset = "0xEE1DE8", VA = "0xEE1DE8")]
	public LTDescr setOrientToPath(bool doesOrient)
	{
		return null;
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xEE1F04", Offset = "0xEE1F04", VA = "0xEE1F04")]
	public LTDescr setOrientToPath2d(bool doesOrient2d)
	{
		return null;
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xEE1FA8", Offset = "0xEE1FA8", VA = "0xEE1FA8")]
	public LTDescr setRect(LTRect rect)
	{
		return null;
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xEE1FF4", Offset = "0xEE1FF4", VA = "0xEE1FF4")]
	public LTDescr setRect(Rect rect)
	{
		return null;
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xEE20AC", Offset = "0xEE20AC", VA = "0xEE20AC")]
	public LTDescr setPath(LTBezierPath path)
	{
		return null;
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xEE20F8", Offset = "0xEE20F8", VA = "0xEE20F8")]
	public LTDescr setPoint(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xEE215C", Offset = "0xEE215C", VA = "0xEE215C")]
	public LTDescr setDestroyOnComplete(bool doesDestroy)
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xEE2168", Offset = "0xEE2168", VA = "0xEE2168")]
	public LTDescr setAudio(object audio)
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xEE1648", Offset = "0xEE1648", VA = "0xEE1648")]
	public LTDescr setOnCompleteOnRepeat(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xEE21B4", Offset = "0xEE21B4", VA = "0xEE21B4")]
	public LTDescr setOnCompleteOnStart(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xEE21C0", Offset = "0xEE21C0", VA = "0xEE21C0")]
	public LTDescr setRect(RectTransform rect)
	{
		return null;
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xEE21C8", Offset = "0xEE21C8", VA = "0xEE21C8")]
	public LTDescr setSprites(Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xEE21D0", Offset = "0xEE21D0", VA = "0xEE21D0")]
	public LTDescr setFrameRate(float frameRate)
	{
		return null;
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xEE221C", Offset = "0xEE221C", VA = "0xEE221C")]
	public LTDescr setOnStart(Action onStart)
	{
		return null;
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xEE2268", Offset = "0xEE2268", VA = "0xEE2268")]
	public LTDescr setDirection(float direction)
	{
		return null;
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xEE24A4", Offset = "0xEE24A4", VA = "0xEE24A4")]
	public LTDescr setRecursive(bool useRecursion)
	{
		return null;
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xEE24B0", Offset = "0xEE24B0", VA = "0xEE24B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA3C", Offset = "0x90CA3C")]
	private void <setMoveX>b__73_0()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xEE24EC", Offset = "0xEE24EC", VA = "0xEE24EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA4C", Offset = "0x90CA4C")]
	private void <setMoveX>b__73_1()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xEE25BC", Offset = "0xEE25BC", VA = "0xEE25BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA5C", Offset = "0x90CA5C")]
	private void <setMoveY>b__74_0()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xEE25F8", Offset = "0xEE25F8", VA = "0xEE25F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA6C", Offset = "0x90CA6C")]
	private void <setMoveY>b__74_1()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xEE26C4", Offset = "0xEE26C4", VA = "0xEE26C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA7C", Offset = "0x90CA7C")]
	private void <setMoveZ>b__75_0()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xEE2700", Offset = "0xEE2700", VA = "0xEE2700")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA8C", Offset = "0x90CA8C")]
	private void <setMoveZ>b__75_1()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xEE27D0", Offset = "0xEE27D0", VA = "0xEE27D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA9C", Offset = "0x90CA9C")]
	private void <setMoveLocalX>b__76_0()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xEE280C", Offset = "0xEE280C", VA = "0xEE280C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CAAC", Offset = "0x90CAAC")]
	private void <setMoveLocalX>b__76_1()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xEE28DC", Offset = "0xEE28DC", VA = "0xEE28DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CABC", Offset = "0x90CABC")]
	private void <setMoveLocalY>b__77_0()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xEE2918", Offset = "0xEE2918", VA = "0xEE2918")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CACC", Offset = "0x90CACC")]
	private void <setMoveLocalY>b__77_1()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xEE29E4", Offset = "0xEE29E4", VA = "0xEE29E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CADC", Offset = "0x90CADC")]
	private void <setMoveLocalZ>b__78_0()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xEE2A20", Offset = "0xEE2A20", VA = "0xEE2A20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CAEC", Offset = "0x90CAEC")]
	private void <setMoveLocalZ>b__78_1()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xEE2AF0", Offset = "0xEE2AF0", VA = "0xEE2AF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CAFC", Offset = "0x90CAFC")]
	private void <setMoveCurved>b__81_0()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xEE2CDC", Offset = "0xEE2CDC", VA = "0xEE2CDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB0C", Offset = "0x90CB0C")]
	private void <setMoveCurvedLocal>b__82_0()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xEE2EC8", Offset = "0xEE2EC8", VA = "0xEE2EC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB1C", Offset = "0x90CB1C")]
	private void <setMoveSpline>b__83_0()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xEE30C0", Offset = "0xEE30C0", VA = "0xEE30C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB2C", Offset = "0x90CB2C")]
	private void <setMoveSplineLocal>b__84_0()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xEE32B8", Offset = "0xEE32B8", VA = "0xEE32B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB3C", Offset = "0x90CB3C")]
	private void <setScaleX>b__85_0()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xEE32F4", Offset = "0xEE32F4", VA = "0xEE32F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB4C", Offset = "0x90CB4C")]
	private void <setScaleX>b__85_1()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xEE33C4", Offset = "0xEE33C4", VA = "0xEE33C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB5C", Offset = "0x90CB5C")]
	private void <setScaleY>b__86_0()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xEE3400", Offset = "0xEE3400", VA = "0xEE3400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB6C", Offset = "0x90CB6C")]
	private void <setScaleY>b__86_1()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xEE34CC", Offset = "0xEE34CC", VA = "0xEE34CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB7C", Offset = "0x90CB7C")]
	private void <setScaleZ>b__87_0()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xEE3508", Offset = "0xEE3508", VA = "0xEE3508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB8C", Offset = "0x90CB8C")]
	private void <setScaleZ>b__87_1()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xEE35D8", Offset = "0xEE35D8", VA = "0xEE35D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB9C", Offset = "0x90CB9C")]
	private void <setRotateX>b__88_0()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xEE367C", Offset = "0xEE367C", VA = "0xEE367C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CBAC", Offset = "0x90CBAC")]
	private void <setRotateX>b__88_1()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xEE374C", Offset = "0xEE374C", VA = "0xEE374C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CBBC", Offset = "0x90CBBC")]
	private void <setRotateY>b__89_0()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xEE37F0", Offset = "0xEE37F0", VA = "0xEE37F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CBCC", Offset = "0x90CBCC")]
	private void <setRotateY>b__89_1()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xEE38BC", Offset = "0xEE38BC", VA = "0xEE38BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CBDC", Offset = "0x90CBDC")]
	private void <setRotateZ>b__90_0()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xEE3960", Offset = "0xEE3960", VA = "0xEE3960")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CBEC", Offset = "0x90CBEC")]
	private void <setRotateZ>b__90_1()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xEE3A30", Offset = "0xEE3A30", VA = "0xEE3A30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CBFC", Offset = "0x90CBFC")]
	private void <setRotateAround>b__91_0()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xEE3AB0", Offset = "0xEE3AB0", VA = "0xEE3AB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC0C", Offset = "0x90CC0C")]
	private void <setRotateAround>b__91_1()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xEE3E68", Offset = "0xEE3E68", VA = "0xEE3E68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC1C", Offset = "0x90CC1C")]
	private void <setRotateAroundLocal>b__92_0()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xEE3EE8", Offset = "0xEE3EE8", VA = "0xEE3EE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC2C", Offset = "0x90CC2C")]
	private void <setRotateAroundLocal>b__92_1()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xEE4300", Offset = "0xEE4300", VA = "0xEE4300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC3C", Offset = "0x90CC3C")]
	private void <setAlpha>b__93_0()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xEE49D8", Offset = "0xEE49D8", VA = "0xEE49D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC4C", Offset = "0x90CC4C")]
	private void <setAlpha>b__93_2()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xEE4B78", Offset = "0xEE4B78", VA = "0xEE4B78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC5C", Offset = "0x90CC5C")]
	private void <setAlpha>b__93_1()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xEE4D28", Offset = "0xEE4D28", VA = "0xEE4D28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC6C", Offset = "0x90CC6C")]
	private void <setTextAlpha>b__94_0()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xEE4DF8", Offset = "0xEE4DF8", VA = "0xEE4DF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC7C", Offset = "0x90CC7C")]
	private void <setTextAlpha>b__94_1()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xEE4E44", Offset = "0xEE4E44", VA = "0xEE4E44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC8C", Offset = "0x90CC8C")]
	private void <setAlphaVertex>b__95_0()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xEE4F08", Offset = "0xEE4F08", VA = "0xEE4F08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CC9C", Offset = "0x90CC9C")]
	private void <setAlphaVertex>b__95_1()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xEE51E4", Offset = "0xEE51E4", VA = "0xEE51E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CCAC", Offset = "0x90CCAC")]
	private void <setColor>b__96_0()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xEE58A8", Offset = "0xEE58A8", VA = "0xEE58A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CCBC", Offset = "0x90CCBC")]
	private void <setColor>b__96_1()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xEE5B60", Offset = "0xEE5B60", VA = "0xEE5B60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CCCC", Offset = "0x90CCCC")]
	private void <setCallbackColor>b__97_0()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xEE5BB4", Offset = "0xEE5BB4", VA = "0xEE5BB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CCDC", Offset = "0x90CCDC")]
	private void <setCallbackColor>b__97_1()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xEE5E6C", Offset = "0xEE5E6C", VA = "0xEE5E6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CCEC", Offset = "0x90CCEC")]
	private void <setTextColor>b__98_0()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xEE5F40", Offset = "0xEE5F40", VA = "0xEE5F40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CCFC", Offset = "0x90CCFC")]
	private void <setTextColor>b__98_1()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xEE6108", Offset = "0xEE6108", VA = "0xEE6108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD0C", Offset = "0x90CD0C")]
	private void <setCanvasAlpha>b__99_0()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xEE6244", Offset = "0xEE6244", VA = "0xEE6244")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD1C", Offset = "0x90CD1C")]
	private void <setCanvasAlpha>b__99_1()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xEE6430", Offset = "0xEE6430", VA = "0xEE6430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD2C", Offset = "0x90CD2C")]
	private void <setCanvasGroupAlpha>b__100_0()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xEE64B0", Offset = "0xEE64B0", VA = "0xEE64B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD3C", Offset = "0x90CD3C")]
	private void <setCanvasGroupAlpha>b__100_1()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xEE6558", Offset = "0xEE6558", VA = "0xEE6558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD4C", Offset = "0x90CD4C")]
	private void <setCanvasColor>b__101_0()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xEE6698", Offset = "0xEE6698", VA = "0xEE6698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD5C", Offset = "0x90CD5C")]
	private void <setCanvasColor>b__101_1()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xEE68B4", Offset = "0xEE68B4", VA = "0xEE68B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD6C", Offset = "0x90CD6C")]
	private void <setCanvasMoveX>b__102_0()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xEE68F0", Offset = "0xEE68F0", VA = "0xEE68F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD7C", Offset = "0x90CD7C")]
	private void <setCanvasMoveX>b__102_1()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xEE699C", Offset = "0xEE699C", VA = "0xEE699C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD8C", Offset = "0x90CD8C")]
	private void <setCanvasMoveY>b__103_0()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xEE69D8", Offset = "0xEE69D8", VA = "0xEE69D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD9C", Offset = "0x90CD9C")]
	private void <setCanvasMoveY>b__103_1()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xEE6A88", Offset = "0xEE6A88", VA = "0xEE6A88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDAC", Offset = "0x90CDAC")]
	private void <setCanvasMoveZ>b__104_0()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xEE6AC4", Offset = "0xEE6AC4", VA = "0xEE6AC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDBC", Offset = "0x90CDBC")]
	private void <setCanvasMoveZ>b__104_1()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xEE6B74", Offset = "0xEE6B74", VA = "0xEE6B74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDCC", Offset = "0x90CDCC")]
	private void <setCanvasRotateAround>b__106_0()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xEE6EF8", Offset = "0xEE6EF8", VA = "0xEE6EF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDDC", Offset = "0x90CDDC")]
	private void <setCanvasRotateAroundLocal>b__107_0()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xEE72DC", Offset = "0xEE72DC", VA = "0xEE72DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDEC", Offset = "0x90CDEC")]
	private void <setCanvasPlaySprite>b__108_0()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xEE7348", Offset = "0xEE7348", VA = "0xEE7348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDFC", Offset = "0x90CDFC")]
	private void <setCanvasPlaySprite>b__108_1()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xEE74D8", Offset = "0xEE74D8", VA = "0xEE74D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE0C", Offset = "0x90CE0C")]
	private void <setCanvasMove>b__109_0()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xEE7518", Offset = "0xEE7518", VA = "0xEE7518")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE1C", Offset = "0x90CE1C")]
	private void <setCanvasMove>b__109_1()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xEE758C", Offset = "0xEE758C", VA = "0xEE758C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE2C", Offset = "0x90CE2C")]
	private void <setCanvasScale>b__110_0()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xEE75CC", Offset = "0xEE75CC", VA = "0xEE75CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE3C", Offset = "0x90CE3C")]
	private void <setCanvasScale>b__110_1()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xEE7640", Offset = "0xEE7640", VA = "0xEE7640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE4C", Offset = "0x90CE4C")]
	private void <setCanvasSizeDelta>b__111_0()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xEE76E4", Offset = "0xEE76E4", VA = "0xEE76E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE5C", Offset = "0x90CE5C")]
	private void <setCanvasSizeDelta>b__111_1()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xEE77B8", Offset = "0xEE77B8", VA = "0xEE77B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE6C", Offset = "0x90CE6C")]
	private void <setMove>b__115_0()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xEE77F8", Offset = "0xEE77F8", VA = "0xEE77F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE7C", Offset = "0x90CE7C")]
	private void <setMove>b__115_1()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xEE78AC", Offset = "0xEE78AC", VA = "0xEE78AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE8C", Offset = "0x90CE8C")]
	private void <setMoveLocal>b__116_0()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xEE78EC", Offset = "0xEE78EC", VA = "0xEE78EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE9C", Offset = "0x90CE9C")]
	private void <setMoveLocal>b__116_1()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xEE79A0", Offset = "0xEE79A0", VA = "0xEE79A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CEAC", Offset = "0x90CEAC")]
	private void <setMoveToTransform>b__117_0()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xEE79E0", Offset = "0xEE79E0", VA = "0xEE79E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CEBC", Offset = "0x90CEBC")]
	private void <setMoveToTransform>b__117_1()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xEE7B48", Offset = "0xEE7B48", VA = "0xEE7B48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CECC", Offset = "0x90CECC")]
	private void <setRotate>b__118_0()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xEE7C54", Offset = "0xEE7C54", VA = "0xEE7C54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CEDC", Offset = "0x90CEDC")]
	private void <setRotate>b__118_1()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xEE7D08", Offset = "0xEE7D08", VA = "0xEE7D08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CEEC", Offset = "0x90CEEC")]
	private void <setRotateLocal>b__119_0()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xEE7E14", Offset = "0xEE7E14", VA = "0xEE7E14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CEFC", Offset = "0x90CEFC")]
	private void <setRotateLocal>b__119_1()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xEE7EC8", Offset = "0xEE7EC8", VA = "0xEE7EC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF0C", Offset = "0x90CF0C")]
	private void <setScale>b__120_0()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xEE7F08", Offset = "0xEE7F08", VA = "0xEE7F08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF1C", Offset = "0x90CF1C")]
	private void <setScale>b__120_1()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xEE7FBC", Offset = "0xEE7FBC", VA = "0xEE7FBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF2C", Offset = "0x90CF2C")]
	private void <setGUIMove>b__121_0()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xEE80B0", Offset = "0xEE80B0", VA = "0xEE80B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF3C", Offset = "0x90CF3C")]
	private void <setGUIMove>b__121_1()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xEE8208", Offset = "0xEE8208", VA = "0xEE8208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF4C", Offset = "0x90CF4C")]
	private void <setGUIMoveMargin>b__122_0()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xEE8300", Offset = "0xEE8300", VA = "0xEE8300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF5C", Offset = "0x90CF5C")]
	private void <setGUIMoveMargin>b__122_1()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xEE839C", Offset = "0xEE839C", VA = "0xEE839C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF6C", Offset = "0x90CF6C")]
	private void <setGUIScale>b__123_0()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xEE8490", Offset = "0xEE8490", VA = "0xEE8490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF7C", Offset = "0x90CF7C")]
	private void <setGUIScale>b__123_1()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xEE85E8", Offset = "0xEE85E8", VA = "0xEE85E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF8C", Offset = "0x90CF8C")]
	private void <setGUIAlpha>b__124_0()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xEE8634", Offset = "0xEE8634", VA = "0xEE8634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF9C", Offset = "0x90CF9C")]
	private void <setGUIAlpha>b__124_1()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xEE86A8", Offset = "0xEE86A8", VA = "0xEE86A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CFAC", Offset = "0x90CFAC")]
	private void <setGUIRotate>b__125_0()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xEE8788", Offset = "0xEE8788", VA = "0xEE8788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CFBC", Offset = "0x90CFBC")]
	private void <setGUIRotate>b__125_1()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xEE87FC", Offset = "0xEE87FC", VA = "0xEE87FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CFCC", Offset = "0x90CFCC")]
	private void <setDelayedSound>b__126_0()
	{
	}
}
[Token(Token = "0x2000193")]
public class LTDescrOptional
{
	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB44", Offset = "0x8FAB44")]
	private Transform <toTrans>k__BackingField;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB54", Offset = "0x8FAB54")]
	private Vector3 <point>k__BackingField;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB64", Offset = "0x8FAB64")]
	private Vector3 <axis>k__BackingField;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB74", Offset = "0x8FAB74")]
	private float <lastVal>k__BackingField;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB84", Offset = "0x8FAB84")]
	private Quaternion <origRotation>k__BackingField;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAB94", Offset = "0x8FAB94")]
	private LTBezierPath <path>k__BackingField;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FABA4", Offset = "0x8FABA4")]
	private LTSpline <spline>k__BackingField;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int initFrameCount;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FABB4", Offset = "0x8FABB4")]
	private LTRect <ltRect>k__BackingField;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FABC4", Offset = "0x8FABC4")]
	private Action<float> <onUpdateFloat>k__BackingField;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FABD4", Offset = "0x8FABD4")]
	private Action<float, float> <onUpdateFloatRatio>k__BackingField;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FABE4", Offset = "0x8FABE4")]
	private Action<float, object> <onUpdateFloatObject>k__BackingField;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FABF4", Offset = "0x8FABF4")]
	private Action<Vector2> <onUpdateVector2>k__BackingField;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC04", Offset = "0x8FAC04")]
	private Action<Vector3> <onUpdateVector3>k__BackingField;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC14", Offset = "0x8FAC14")]
	private Action<Vector3, object> <onUpdateVector3Object>k__BackingField;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC24", Offset = "0x8FAC24")]
	private Action<Color> <onUpdateColor>k__BackingField;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC34", Offset = "0x8FAC34")]
	private Action<Color, object> <onUpdateColorObject>k__BackingField;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC44", Offset = "0x8FAC44")]
	private Action <onComplete>k__BackingField;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC54", Offset = "0x8FAC54")]
	private Action<object> <onCompleteObject>k__BackingField;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC64", Offset = "0x8FAC64")]
	private object <onCompleteParam>k__BackingField;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC74", Offset = "0x8FAC74")]
	private object <onUpdateParam>k__BackingField;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAC84", Offset = "0x8FAC84")]
	private Action <onStart>k__BackingField;

	[Token(Token = "0x170000E1")]
	public Transform toTrans
	{
		[Token(Token = "0x6001023")]
		[Address(RVA = "0x174B71C", Offset = "0x174B71C", VA = "0x174B71C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CFDC", Offset = "0x90CFDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x174B724", Offset = "0x174B724", VA = "0x174B724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CFEC", Offset = "0x90CFEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public Vector3 point
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x174B72C", Offset = "0x174B72C", VA = "0x174B72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CFFC", Offset = "0x90CFFC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x174B738", Offset = "0x174B738", VA = "0x174B738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D00C", Offset = "0x90D00C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public Vector3 axis
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x174B744", Offset = "0x174B744", VA = "0x174B744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D01C", Offset = "0x90D01C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001028")]
		[Address(RVA = "0x174B750", Offset = "0x174B750", VA = "0x174B750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D02C", Offset = "0x90D02C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public float lastVal
	{
		[Token(Token = "0x6001029")]
		[Address(RVA = "0x174B75C", Offset = "0x174B75C", VA = "0x174B75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D03C", Offset = "0x90D03C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600102A")]
		[Address(RVA = "0x174B764", Offset = "0x174B764", VA = "0x174B764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D04C", Offset = "0x90D04C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public Quaternion origRotation
	{
		[Token(Token = "0x600102B")]
		[Address(RVA = "0x174B76C", Offset = "0x174B76C", VA = "0x174B76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D05C", Offset = "0x90D05C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600102C")]
		[Address(RVA = "0x174B778", Offset = "0x174B778", VA = "0x174B778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D06C", Offset = "0x90D06C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public LTBezierPath path
	{
		[Token(Token = "0x600102D")]
		[Address(RVA = "0x174B784", Offset = "0x174B784", VA = "0x174B784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D07C", Offset = "0x90D07C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600102E")]
		[Address(RVA = "0x174B78C", Offset = "0x174B78C", VA = "0x174B78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D08C", Offset = "0x90D08C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public LTSpline spline
	{
		[Token(Token = "0x600102F")]
		[Address(RVA = "0x174B794", Offset = "0x174B794", VA = "0x174B794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D09C", Offset = "0x90D09C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001030")]
		[Address(RVA = "0x174B79C", Offset = "0x174B79C", VA = "0x174B79C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D0AC", Offset = "0x90D0AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public LTRect ltRect
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x174B7A4", Offset = "0x174B7A4", VA = "0x174B7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D0BC", Offset = "0x90D0BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001032")]
		[Address(RVA = "0x174B7AC", Offset = "0x174B7AC", VA = "0x174B7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D0CC", Offset = "0x90D0CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public Action<float> onUpdateFloat
	{
		[Token(Token = "0x6001033")]
		[Address(RVA = "0x174B7B4", Offset = "0x174B7B4", VA = "0x174B7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D0DC", Offset = "0x90D0DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001034")]
		[Address(RVA = "0x174B7BC", Offset = "0x174B7BC", VA = "0x174B7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D0EC", Offset = "0x90D0EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public Action<float, float> onUpdateFloatRatio
	{
		[Token(Token = "0x6001035")]
		[Address(RVA = "0x174B7C4", Offset = "0x174B7C4", VA = "0x174B7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D0FC", Offset = "0x90D0FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001036")]
		[Address(RVA = "0x174B7CC", Offset = "0x174B7CC", VA = "0x174B7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D10C", Offset = "0x90D10C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public Action<float, object> onUpdateFloatObject
	{
		[Token(Token = "0x6001037")]
		[Address(RVA = "0x174B7D4", Offset = "0x174B7D4", VA = "0x174B7D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D11C", Offset = "0x90D11C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001038")]
		[Address(RVA = "0x174B7DC", Offset = "0x174B7DC", VA = "0x174B7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D12C", Offset = "0x90D12C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public Action<Vector2> onUpdateVector2
	{
		[Token(Token = "0x6001039")]
		[Address(RVA = "0x174B7E4", Offset = "0x174B7E4", VA = "0x174B7E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D13C", Offset = "0x90D13C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600103A")]
		[Address(RVA = "0x174B7EC", Offset = "0x174B7EC", VA = "0x174B7EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D14C", Offset = "0x90D14C")]
		set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public Action<Vector3> onUpdateVector3
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0x174B7F4", Offset = "0x174B7F4", VA = "0x174B7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D15C", Offset = "0x90D15C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600103C")]
		[Address(RVA = "0x174B7FC", Offset = "0x174B7FC", VA = "0x174B7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D16C", Offset = "0x90D16C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public Action<Vector3, object> onUpdateVector3Object
	{
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x174B804", Offset = "0x174B804", VA = "0x174B804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D17C", Offset = "0x90D17C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600103E")]
		[Address(RVA = "0x174B80C", Offset = "0x174B80C", VA = "0x174B80C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D18C", Offset = "0x90D18C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public Action<Color> onUpdateColor
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x174B814", Offset = "0x174B814", VA = "0x174B814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D19C", Offset = "0x90D19C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001040")]
		[Address(RVA = "0x174B81C", Offset = "0x174B81C", VA = "0x174B81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D1AC", Offset = "0x90D1AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public Action<Color, object> onUpdateColorObject
	{
		[Token(Token = "0x6001041")]
		[Address(RVA = "0x174B824", Offset = "0x174B824", VA = "0x174B824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D1BC", Offset = "0x90D1BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001042")]
		[Address(RVA = "0x174B82C", Offset = "0x174B82C", VA = "0x174B82C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D1CC", Offset = "0x90D1CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public Action onComplete
	{
		[Token(Token = "0x6001043")]
		[Address(RVA = "0x174B834", Offset = "0x174B834", VA = "0x174B834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D1DC", Offset = "0x90D1DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001044")]
		[Address(RVA = "0x174B83C", Offset = "0x174B83C", VA = "0x174B83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D1EC", Offset = "0x90D1EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public Action<object> onCompleteObject
	{
		[Token(Token = "0x6001045")]
		[Address(RVA = "0x174B844", Offset = "0x174B844", VA = "0x174B844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D1FC", Offset = "0x90D1FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001046")]
		[Address(RVA = "0x174B84C", Offset = "0x174B84C", VA = "0x174B84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D20C", Offset = "0x90D20C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public object onCompleteParam
	{
		[Token(Token = "0x6001047")]
		[Address(RVA = "0x174B854", Offset = "0x174B854", VA = "0x174B854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D21C", Offset = "0x90D21C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001048")]
		[Address(RVA = "0x174B85C", Offset = "0x174B85C", VA = "0x174B85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D22C", Offset = "0x90D22C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public object onUpdateParam
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0x174B864", Offset = "0x174B864", VA = "0x174B864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D23C", Offset = "0x90D23C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600104A")]
		[Address(RVA = "0x174B86C", Offset = "0x174B86C", VA = "0x174B86C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D24C", Offset = "0x90D24C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public Action onStart
	{
		[Token(Token = "0x600104B")]
		[Address(RVA = "0x174B874", Offset = "0x174B874", VA = "0x174B874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D25C", Offset = "0x90D25C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600104C")]
		[Address(RVA = "0x174B87C", Offset = "0x174B87C", VA = "0x174B87C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D26C", Offset = "0x90D26C")]
		set
		{
		}
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x174B884", Offset = "0x174B884", VA = "0x174B884")]
	public void reset()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x174B918", Offset = "0x174B918", VA = "0x174B918")]
	public void callOnUpdate(float val, float ratioPassed)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x174BAB4", Offset = "0x174BAB4", VA = "0x174BAB4")]
	public LTDescrOptional()
	{
	}
}
[Token(Token = "0x2000194")]
public class LTSeq
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LTSeq previous;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LTSeq current;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LTDescr tween;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float totalDelay;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeScale;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int debugIter;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public uint counter;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool toggle;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint _id;

	[Token(Token = "0x170000F6")]
	public int id
	{
		[Token(Token = "0x6001050")]
		[Address(RVA = "0x174EF78", Offset = "0x174EF78", VA = "0x174EF78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x174EF88", Offset = "0x174EF88", VA = "0x174EF88")]
	public void reset()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x174EF98", Offset = "0x174EF98", VA = "0x174EF98")]
	public void init(uint id, uint global_counter)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x174EFB0", Offset = "0x174EFB0", VA = "0x174EFB0")]
	private LTSeq addOn()
	{
		return null;
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x174F3EC", Offset = "0x174F3EC", VA = "0x174F3EC")]
	private float addPreviousDelays()
	{
		return default(float);
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x174F46C", Offset = "0x174F46C", VA = "0x174F46C")]
	public LTSeq append(float delay)
	{
		return null;
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x174F4C8", Offset = "0x174F4C8", VA = "0x174F4C8")]
	public LTSeq append(Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x174F6EC", Offset = "0x174F6EC", VA = "0x174F6EC")]
	public LTSeq append(Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x174F8A0", Offset = "0x174F8A0", VA = "0x174F8A0")]
	public LTSeq append(GameObject gameObject, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x174FA34", Offset = "0x174FA34", VA = "0x174FA34")]
	public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x174F654", Offset = "0x174F654", VA = "0x174F654")]
	public LTSeq append(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x174FBF0", Offset = "0x174FBF0", VA = "0x174FBF0")]
	public LTSeq insert(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x174FC60", Offset = "0x174FC60", VA = "0x174FC60")]
	public LTSeq setScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x174FC8C", Offset = "0x174FC8C", VA = "0x174FC8C")]
	private void setScaleRecursive(LTSeq seq, float timeScale, int count)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x174FD80", Offset = "0x174FD80", VA = "0x174FD80")]
	public LTSeq reverse()
	{
		return null;
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x174FD84", Offset = "0x174FD84", VA = "0x174FD84")]
	public LTSeq()
	{
	}
}
[Token(Token = "0x2000195")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F564C", Offset = "0x8F564C")]
public class bl_LoadingEffect : MonoBehaviour
{
	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FAC94", Offset = "0x8FAC94")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool Loading;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeSpeed;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FACF0", Offset = "0x8FACF0")]
	[SerializeField]
	private LoadingUIInfo[] LoadingUI;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool ShowList;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CanvasGroup m_CanvasGroup;

	[Token(Token = "0x170000F7")]
	public bool isLoading
	{
		[Token(Token = "0x6001065")]
		[Address(RVA = "0x11AF390", Offset = "0x11AF390", VA = "0x11AF390")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001066")]
		[Address(RVA = "0x11ADE68", Offset = "0x11ADE68", VA = "0x11ADE68")]
		set
		{
		}
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x11ADEAC", Offset = "0x11ADEAC", VA = "0x11ADEAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x11ADFBC", Offset = "0x11ADFBC", VA = "0x11ADFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x11AE058", Offset = "0x11AE058", VA = "0x11AE058")]
	private void Update()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x11AE07C", Offset = "0x11AE07C", VA = "0x11AE07C")]
	private void OnLoading()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x11AF288", Offset = "0x11AF288", VA = "0x11AF288")]
	private void OnUnLoading()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x11AF398", Offset = "0x11AF398", VA = "0x11AF398")]
	public bl_LoadingEffect()
	{
	}
}
[Token(Token = "0x2000196")]
public enum LoadingEffectType
{
	[Token(Token = "0x4000C9B")]
	Rotate,
	[Token(Token = "0x4000C9C")]
	Filled
}
[Serializable]
[Token(Token = "0x2000197")]
public class LoadingUIInfo
{
	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RectTransform UI;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoadingEffectType m_Type;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FAD4C", Offset = "0x8FAD4C")]
	public float Speed;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Axis;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool PingPong;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve Curve;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Delay;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float Value;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool Forward;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float NextDelay;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image m_image;

	[Token(Token = "0x170000F8")]
	public Image Image
	{
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xD33350", Offset = "0xD33350", VA = "0xD33350")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xD333F8", Offset = "0xD333F8", VA = "0xD333F8")]
	public void Init()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xD33458", Offset = "0xD33458", VA = "0xD33458")]
	public LoadingUIInfo()
	{
	}
}
[Token(Token = "0x2000198")]
public static class bl_LoadingUtils
{
	[Token(Token = "0x600106B")]
	[Address(RVA = "0x11ADD14", Offset = "0x11ADD14", VA = "0x11ADD14")]
	public static bl_LoadingEffect GetLoading(int id)
	{
		return null;
	}
}
[Token(Token = "0x2000199")]
public class bl_LEExampleManager : MonoBehaviour
{
	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> AllPrefabs;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Panel;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CurrentObj;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int current;

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x11ADA0C", Offset = "0x11ADA0C", VA = "0x11ADA0C")]
	public void Change(bool forward)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x11ADC70", Offset = "0x11ADC70", VA = "0x11ADC70")]
	public bl_LEExampleManager()
	{
	}
}
[Token(Token = "0x200019A")]
public class bl_LEExampleUsage : MonoBehaviour
{
	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ID;

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x11ADCE0", Offset = "0x11ADCE0", VA = "0x11ADCE0")]
	public void Show()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x11ADE74", Offset = "0x11ADE74", VA = "0x11ADE74")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x11ADEA4", Offset = "0x11ADEA4", VA = "0x11ADEA4")]
	public bl_LEExampleUsage()
	{
	}
}
[Token(Token = "0x200019B")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureBaker.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xB2BDD8", Offset = "0xB2BDD8", VA = "0xB2BDD8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xB2C278", Offset = "0xB2C278", VA = "0xB2C278")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xB2C4A4", Offset = "0xB2C4A4", VA = "0xB2C4A4")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200019C")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6001074")]
	[Address(RVA = "0xD43E5C", Offset = "0xD43E5C", VA = "0xD43E5C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xD43EC0", Offset = "0xD43EC0", VA = "0xD43EC0")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200019D")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xD46098", Offset = "0xD46098", VA = "0xD46098")]
	private void Start()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xD4625C", Offset = "0xD4625C", VA = "0xD4625C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xD46348", Offset = "0xD46348", VA = "0xD46348")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xD468AC", Offset = "0xD468AC", VA = "0xD468AC")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x200019E")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600107A")]
	[Address(RVA = "0xD44D3C", Offset = "0xD44D3C", VA = "0xD44D3C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xD44DA0", Offset = "0xD44DA0", VA = "0xD44DA0")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200019F")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x2000678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D34", Offset = "0x8F7D34")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x1700050F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003045")]
			[Address(RVA = "0xD447EC", Offset = "0xD447EC", VA = "0xD447EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000510")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003047")]
			[Address(RVA = "0xD4485C", Offset = "0xD4485C", VA = "0xD4485C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003042")]
		[Address(RVA = "0xD44510", Offset = "0xD44510", VA = "0xD44510")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6003043")]
		[Address(RVA = "0xD44610", Offset = "0xD44610", VA = "0xD44610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003044")]
		[Address(RVA = "0xD44614", Offset = "0xD44614", VA = "0xD44614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003046")]
		[Address(RVA = "0xD447F4", Offset = "0xD447F4", VA = "0xD447F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xD43EC8", Offset = "0xD43EC8", VA = "0xD43EC8")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xD43FAC", Offset = "0xD43FAC", VA = "0xD43FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xD4449C", Offset = "0xD4449C", VA = "0xD4449C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D27C", Offset = "0x90D27C")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xD4453C", Offset = "0xD4453C", VA = "0xD4453C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xD445A0", Offset = "0xD445A0", VA = "0xD445A0")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x20001A0")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xD44864", Offset = "0xD44864", VA = "0xD44864")]
	private void Start()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xD448D8", Offset = "0xD448D8", VA = "0xD448D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xD449A8", Offset = "0xD449A8", VA = "0xD449A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xD44A0C", Offset = "0xD44A0C", VA = "0xD44A0C")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x20001A1")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xD44A14", Offset = "0xD44A14", VA = "0xD44A14")]
	private void Update()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xD44B24", Offset = "0xD44B24", VA = "0xD44B24")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x20001A2")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x6001087")]
	[Address(RVA = "0xD44B2C", Offset = "0xD44B2C", VA = "0xD44B2C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xD44B90", Offset = "0xD44B90", VA = "0xD44B90")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x20001A3")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xD44DA8", Offset = "0xD44DA8", VA = "0xD44DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xD4502C", Offset = "0xD4502C", VA = "0xD4502C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xD45F5C", Offset = "0xD45F5C", VA = "0xD45F5C")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xD46090", Offset = "0xD46090", VA = "0xD46090")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x20001A4")]
public class MB2_TestShowHide : MonoBehaviour
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker mb;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objs;

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xD358C8", Offset = "0xD358C8", VA = "0xD358C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xD35A44", Offset = "0xD35A44", VA = "0xD35A44")]
	public MB2_TestShowHide()
	{
	}
}
[Token(Token = "0x20001A5")]
public class MB2_TestUpdate : MonoBehaviour
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_MultiMeshBaker multiMeshBaker;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objsToMove;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objWithChangingUVs;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uvs;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh m;

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xD35A4C", Offset = "0xD35A4C", VA = "0xD35A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xD35D24", Offset = "0xD35D24", VA = "0xD35D24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xD362B0", Offset = "0xD362B0", VA = "0xD362B0")]
	public MB2_TestUpdate()
	{
	}
}
[Token(Token = "0x20001A6")]
public class MB3_TestAddingRemovingSkinnedMeshes : MonoBehaviour
{
	[Token(Token = "0x2000679")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D44", Offset = "0x8F7D44")]
	private sealed class <TestScript>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3_TestAddingRemovingSkinnedMeshes <>4__this;

		[Token(Token = "0x17000511")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600304B")]
			[Address(RVA = "0xD3F5F4", Offset = "0xD3F5F4", VA = "0xD3F5F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000512")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600304D")]
			[Address(RVA = "0xD3F664", Offset = "0xD3F664", VA = "0xD3F664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003048")]
		[Address(RVA = "0xD3E880", Offset = "0xD3E880", VA = "0xD3E880")]
		[DebuggerHidden]
		public <TestScript>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6003049")]
		[Address(RVA = "0xD3E8B4", Offset = "0xD3E8B4", VA = "0xD3E8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0xD3E8B8", Offset = "0xD3E8B8", VA = "0xD3E8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600304C")]
		[Address(RVA = "0xD3F5FC", Offset = "0xD3F5FC", VA = "0xD3F5FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] g;

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xD3E7E0", Offset = "0xD3E7E0", VA = "0xD3E7E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xD3E80C", Offset = "0xD3E80C", VA = "0xD3E80C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D2E0", Offset = "0x90D2E0")]
	private IEnumerator TestScript()
	{
		return null;
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xD3E8AC", Offset = "0xD3E8AC", VA = "0xD3E8AC")]
	public MB3_TestAddingRemovingSkinnedMeshes()
	{
	}
}
[Token(Token = "0x20001A7")]
public class MB3_TestBakeAllWithSameMaterial : MonoBehaviour
{
	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] listOfObjsToCombineGood;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] listOfObjsToCombineBad;

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xD3F66C", Offset = "0xD3F66C", VA = "0xD3F66C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xD3F670", Offset = "0xD3F670", VA = "0xD3F670")]
	private void testCombine()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xD3FB98", Offset = "0xD3FB98", VA = "0xD3FB98")]
	public MB3_TestBakeAllWithSameMaterial()
	{
	}
}
[Token(Token = "0x20001A8")]
public class MB3_TestRenderTextureTestHarness : MonoBehaviour
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doColor;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color32 color;

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xD3FBA0", Offset = "0xD3FBA0", VA = "0xD3FBA0")]
	public Texture2D Create3x3Tex()
	{
		return null;
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xD3FD08", Offset = "0xD3FD08", VA = "0xD3FD08")]
	public Texture2D Create3x3Clone()
	{
		return null;
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xD4004C", Offset = "0xD4004C", VA = "0xD4004C")]
	public static void TestRender(Texture2D input, Texture2D output)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xD40AA8", Offset = "0xD40AA8", VA = "0xD40AA8")]
	public MB3_TestRenderTextureTestHarness()
	{
	}
}
[Token(Token = "0x20001A9")]
public class MB3_KMeansClustering
{
	[Token(Token = "0x200067A")]
	private class DataPoint
	{
		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Cluster;

		[Token(Token = "0x600304E")]
		[Address(RVA = "0xD3AF20", Offset = "0xD3AF20", VA = "0xD3AF20")]
		public DataPoint(GameObject go)
		{
		}
	}

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<DataPoint> _normalizedDataToCluster;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] _clusters;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _numberOfClusters;

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xD3AC14", Offset = "0xD3AC14", VA = "0xD3AC14")]
	public MB3_KMeansClustering(List<GameObject> gos, int numClusters)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xD3B068", Offset = "0xD3B068", VA = "0xD3B068")]
	private void InitializeCentroids()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xD3B194", Offset = "0xD3B194", VA = "0xD3B194")]
	private bool UpdateDataPointMeans(bool force)
	{
		return default(bool);
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xD3B4D4", Offset = "0xD3B4D4", VA = "0xD3B4D4")]
	private bool AnyAreEmpty(List<DataPoint> data)
	{
		return default(bool);
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xD3B638", Offset = "0xD3B638", VA = "0xD3B638")]
	private bool UpdateClusterMembership()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xD3B838", Offset = "0xD3B838", VA = "0xD3B838")]
	private float ElucidanDistance(DataPoint dataPoint, Vector3 mean)
	{
		return default(float);
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xD3B8EC", Offset = "0xD3B8EC", VA = "0xD3B8EC")]
	private int MinIndex(float[] distances)
	{
		return default(int);
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xD3B9CC", Offset = "0xD3B9CC", VA = "0xD3B9CC")]
	public List<Renderer> GetCluster(int idx, out Vector3 mean, out float size)
	{
		return null;
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xD3BD54", Offset = "0xD3BD54", VA = "0xD3BD54")]
	public void Cluster()
	{
	}
}
[Token(Token = "0x20001AA")]
public class MB_TextureCombinerRenderTexture
{
	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture _destinationTexture;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera myCamera;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _padding;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _isNormalMap;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool _fixOutOfBoundsUVs;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool _doRenderAtlas;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rect[] rs;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MB_TexSet> textureSets;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int indexOfTexSetToRender;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ShaderTextureProperty _texPropertyName;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MB3_TextureCombinerNonTextureProperties _resultMaterialTextureBlender;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D targTex;

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xD390D8", Offset = "0xD390D8", VA = "0xD390D8")]
	public Texture2D DoRenderAtlas(GameObject gameObject, int width, int height, int padding, Rect[] rss, List<MB_TexSet> textureSetss, int indexOfTexSetToRenders, ShaderTextureProperty texPropertyname, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender, bool isNormalMap, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, MB3_TextureCombiner texCombiner, MB2_LogLevel LOG_LEV)
	{
		return null;
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xD39814", Offset = "0xD39814", VA = "0xD39814")]
	public void OnRenderObject()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xD47D7C", Offset = "0xD47D7C", VA = "0xD47D7C")]
	private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
	{
		return default(Color32);
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xD47E94", Offset = "0xD47E94", VA = "0xD47E94")]
	private bool IsOpenGL()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xD468B4", Offset = "0xD468B4", VA = "0xD468B4")]
	private void CopyScaledAndTiledToAtlas(MB_TexSet texSet, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, Rect rec, ShaderTextureProperty texturePropertyName, MB3_TextureCombinerNonTextureProperties resultMatTexBlender)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xD47A54", Offset = "0xD47A54", VA = "0xD47A54")]
	private void _printTexture(Texture2D t)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xD390C8", Offset = "0xD390C8", VA = "0xD390C8")]
	public MB_TextureCombinerRenderTexture()
	{
	}
}
[Token(Token = "0x20001AB")]
[ExecuteInEditMode]
public class MB3_AtlasPackerRenderTexture : MonoBehaviour
{
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MB_TextureCombinerRenderTexture fastRenderer;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _doRenderAtlas;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int width;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int height;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int padding;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isNormalMap;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool considerNonTextureProperties;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rect[] rects;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D tex1;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MB_TexSet> textureSets;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int indexOfTexSetToRender;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ShaderTextureProperty texPropertyName;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D testTex;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material testMat;

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xD38FA4", Offset = "0xD38FA4", VA = "0xD38FA4")]
	public Texture2D OnRenderAtlas(MB3_TextureCombiner combiner)
	{
		return null;
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xD397D4", Offset = "0xD397D4", VA = "0xD397D4")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xD3A818", Offset = "0xD3A818", VA = "0xD3A818")]
	public MB3_AtlasPackerRenderTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AC")]
public class MB_AtlasesAndRects
{
	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D[] atlases;

	[NonSerialized]
	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MB_MaterialAndUVRect> mat2rect_map;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] texPropertyNames;

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xD4353C", Offset = "0xD4353C", VA = "0xD4353C")]
	public MB_AtlasesAndRects()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AD")]
public class MB_MultiMaterial
{
	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material combinedMaterial;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool considerMeshUVs;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> sourceMaterials;

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xD36D50", Offset = "0xD36D50", VA = "0xD36D50")]
	public MB_MultiMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AE")]
public class MB_MaterialAndUVRect
{
	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material material;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect atlasRect;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string srcObjName;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool allPropsUseSameTiling;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FAD98", Offset = "0x8FAD98")]
	public Rect allPropsUseSameTiling_sourceMaterialTiling;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FADD0", Offset = "0x8FADD0")]
	public Rect allPropsUseSameTiling_samplingEncapsulatinRect;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Rect propsUseDifferntTiling_srcUVsamplingRect;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public MB_TextureTilingTreatment tilingTreatment;

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xD36C2C", Offset = "0xD36C2C", VA = "0xD36C2C")]
	public MB_MaterialAndUVRect(Material mat, Rect destRect, bool allPropsUseSameTiling, Rect sourceMaterialTiling, Rect samplingEncapsulatingRect, Rect srcUVsamplingRect, MB_TextureTilingTreatment treatment, string objName)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xD44B98", Offset = "0xD44B98", VA = "0xD44B98", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xD44C00", Offset = "0xD44C00", VA = "0xD44C00", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xD38950", Offset = "0xD38950", VA = "0xD38950")]
	public Rect GetEncapsulatingRect()
	{
		return default(Rect);
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xD38990", Offset = "0xD38990", VA = "0xD38990")]
	public Rect GetMaterialTilingRect()
	{
		return default(Rect);
	}
}
[Token(Token = "0x20001AF")]
public class MB2_TextureBakeResults : ScriptableObject
{
	[Token(Token = "0x200067B")]
	public class Material2AtlasRectangleMapper
	{
		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB2_TextureBakeResults tbr;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] numTimesMatAppearsInAtlas;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MB_MaterialAndUVRect[] matsAndSrcUVRect;

		[Token(Token = "0x600304F")]
		[Address(RVA = "0xD37964", Offset = "0xD37964", VA = "0xD37964")]
		public Material2AtlasRectangleMapper(MB2_TextureBakeResults res)
		{
		}

		[Token(Token = "0x6003050")]
		[Address(RVA = "0xD37CC0", Offset = "0xD37CC0", VA = "0xD37CC0")]
		public bool TryMapMaterialToUVRect(Material mat, Mesh m, int submeshIdx, int idxInResultMats, MB3_MeshCombinerSingle.MeshChannelsCache meshChannelCache, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisCache, out MB_TextureTilingTreatment tilingTreatment, out Rect rectInAtlas, out Rect encapsulatingRectOut, out Rect sourceMaterialTilingOut, ref string errorMsg, MB2_LogLevel logLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6003051")]
		[Address(RVA = "0xD38898", Offset = "0xD38898", VA = "0xD38898")]
		private void UpgradeToCurrentVersion(MB2_TextureBakeResults tbr)
		{
		}
	}

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int version;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB_MaterialAndUVRect[] materialsAndUVRects;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool doMultiMaterial;

	[Token(Token = "0x170000F9")]
	public static int VERSION
	{
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xD362B8", Offset = "0xD362B8", VA = "0xD362B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xD362C0", Offset = "0xD362C0", VA = "0xD362C0")]
	public MB2_TextureBakeResults()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xD362EC", Offset = "0xD362EC", VA = "0xD362EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xD363A0", Offset = "0xD363A0", VA = "0xD363A0")]
	public static MB2_TextureBakeResults CreateForMaterialsOnRenderer(GameObject[] gos, List<Material> matsOnTargetRenderer)
	{
		return null;
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xD36DC0", Offset = "0xD36DC0", VA = "0xD36DC0")]
	public bool DoAnyResultMatsUseConsiderMeshUVs()
	{
		return default(bool);
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xD36E6C", Offset = "0xD36E6C", VA = "0xD36E6C")]
	public bool ContainsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xD36F6C", Offset = "0xD36F6C", VA = "0xD36F6C")]
	public string GetDescription()
	{
		return null;
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xD37458", Offset = "0xD37458", VA = "0xD37458")]
	public static bool IsMeshAndMaterialRectEnclosedByAtlasRect(MB_TextureTilingTreatment tilingTreatment, Rect uvR, Rect sourceMaterialTiling, Rect samplingEncapsulatinRect, MB2_LogLevel logLevel)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001B0")]
public class MB2_UpdateSkinnedMeshBoundsFromBones : MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] bones;

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xD389FC", Offset = "0xD389FC", VA = "0xD389FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xD38B50", Offset = "0xD38B50", VA = "0xD38B50")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xD38BDC", Offset = "0xD38BDC", VA = "0xD38BDC")]
	public MB2_UpdateSkinnedMeshBoundsFromBones()
	{
	}
}
[Token(Token = "0x20001B1")]
public class MB2_UpdateSkinnedMeshBoundsFromBounds : MonoBehaviour
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> objects;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xD38BE4", Offset = "0xD38BE4", VA = "0xD38BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xD38F08", Offset = "0xD38F08", VA = "0xD38F08")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xD38F9C", Offset = "0xD38F9C", VA = "0xD38F9C")]
	public MB2_UpdateSkinnedMeshBoundsFromBounds()
	{
	}
}
[Token(Token = "0x20001B2")]
public class MB3_BatchPrefabBaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200067C")]
	public class MB3_PrefabBakerRow
	{
		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject sourcePrefab;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject resultPrefab;

		[Token(Token = "0x6003052")]
		[Address(RVA = "0xD3A838", Offset = "0xD3A838", VA = "0xD3A838")]
		public MB3_PrefabBakerRow()
		{
		}
	}

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_PrefabBakerRow[] prefabRows;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string outputPrefabFolder;

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xD3A828", Offset = "0xD3A828", VA = "0xD3A828")]
	public MB3_BatchPrefabBaker()
	{
	}
}
[Token(Token = "0x20001B3")]
public class MB3_BoneWeightCopier : MonoBehaviour
{
	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inputGameObject;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject outputPrefab;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer seamMesh;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string outputFolder;

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xD3A840", Offset = "0xD3A840", VA = "0xD3A840")]
	public MB3_BoneWeightCopier()
	{
	}
}
[Token(Token = "0x20001B4")]
public class MB3_DisableHiddenAnimations : MonoBehaviour
{
	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Animation> animationsToCull;

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xD3A854", Offset = "0xD3A854", VA = "0xD3A854")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xD3A954", Offset = "0xD3A954", VA = "0xD3A954")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xD3AA7C", Offset = "0xD3AA7C", VA = "0xD3AA7C")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xD3ABA4", Offset = "0xD3ABA4", VA = "0xD3ABA4")]
	public MB3_DisableHiddenAnimations()
	{
	}
}
[Token(Token = "0x20001B5")]
public class MB3_MeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MeshCombinerSingle _meshCombiner;

	[Token(Token = "0x170000FA")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xD3BE08", Offset = "0xD3BE08", VA = "0xD3BE08", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xD3BE10", Offset = "0xD3BE10", VA = "0xD3BE10")]
	public void BuildSceneMeshObject()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xD3BE48", Offset = "0xD3BE48", VA = "0xD3BE48", Slot = "23")]
	public virtual bool ShowHide(GameObject[] gos, GameObject[] deleteGOs)
	{
		return default(bool);
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xD3BE90", Offset = "0xD3BE90", VA = "0xD3BE90", Slot = "24")]
	public virtual void ApplyShowHide()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xD3BEC8", Offset = "0xD3BEC8", VA = "0xD3BEC8", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xD3BF94", Offset = "0xD3BF94", VA = "0xD3BF94", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xD3C060", Offset = "0xD3C060", VA = "0xD3C060")]
	public MB3_MeshBaker()
	{
	}
}
[Token(Token = "0x20001B6")]
public abstract class MB3_MeshBakerCommon : MB3_MeshBakerRoot
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useObjsToMeshFromTexBaker;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool clearBuffersAfterBake;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bakeAssetsInPlaceFolderPath;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject resultPrefab;

	[Token(Token = "0x170000FB")]
	public abstract MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x60010D1")]
		get;
	}

	[Token(Token = "0x170000FC")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD3C134", Offset = "0xD3C134", VA = "0xD3C134", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xD3C170", Offset = "0xD3C170", VA = "0xD3C170", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xD3C1B8", Offset = "0xD3C1B8", VA = "0xD3C1B8", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xD3C3B4", Offset = "0xD3C3B4", VA = "0xD3C3B4")]
	public void EnableDisableSourceObjectRenderers(bool show)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xD3C708", Offset = "0xD3C708", VA = "0xD3C708", Slot = "8")]
	public virtual void ClearMesh()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xD3C748", Offset = "0xD3C748", VA = "0xD3C748", Slot = "9")]
	public virtual void DestroyMesh()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xD3C788", Offset = "0xD3C788", VA = "0xD3C788", Slot = "10")]
	public virtual void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xD3C7D4", Offset = "0xD3C7D4", VA = "0xD3C7D4", Slot = "11")]
	public virtual int GetNumObjectsInCombined()
	{
		return default(int);
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xD3C814", Offset = "0xD3C814", VA = "0xD3C814", Slot = "12")]
	public virtual int GetNumVerticesFor(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xD3C860", Offset = "0xD3C860", VA = "0xD3C860")]
	public MB3_TextureBaker GetTextureBaker()
	{
		return null;
	}

	[Token(Token = "0x60010DC")]
	public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

	[Token(Token = "0x60010DD")]
	public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true);

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xD3C998", Offset = "0xD3C998", VA = "0xD3C998", Slot = "15")]
	public virtual void Apply([Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xD3CA68", Offset = "0xD3CA68", VA = "0xD3CA68", Slot = "16")]
	public virtual void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xD3CBD0", Offset = "0xD3CBD0", VA = "0xD3CBD0", Slot = "17")]
	public virtual bool CombinedMeshContains(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xD3CC1C", Offset = "0xD3CC1C", VA = "0xD3CC1C", Slot = "18")]
	public virtual void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV1 = false, bool updateUV2 = false, bool updateColors = false, bool updateSkinningInfo = false)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xD3CD70", Offset = "0xD3CD70", VA = "0xD3CD70", Slot = "19")]
	public virtual void UpdateSkinnedMeshApproximateBounds()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xD3CDD8", Offset = "0xD3CDD8", VA = "0xD3CDD8", Slot = "20")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBones()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xD3CE40", Offset = "0xD3CE40", VA = "0xD3CE40", Slot = "21")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBounds()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xD3CEA8", Offset = "0xD3CEA8", VA = "0xD3CEA8", Slot = "22")]
	protected virtual bool _ValidateForUpdateSkinnedMeshBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xD3C0C4", Offset = "0xD3C0C4", VA = "0xD3C0C4")]
	protected MB3_MeshBakerCommon()
	{
	}
}
[Token(Token = "0x20001B7")]
public class MB3_MeshBakerGrouper : MonoBehaviour
{
	[Token(Token = "0x200067D")]
	public enum ClusterType
	{
		[Token(Token = "0x40022B6")]
		none,
		[Token(Token = "0x40022B7")]
		grid,
		[Token(Token = "0x40022B8")]
		pie,
		[Token(Token = "0x40022B9")]
		agglomerative
	}

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBakerGrouperCore grouper;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClusterType clusterType;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrouperData data;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Bounds sourceObjectBounds;

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xD3D0B0", Offset = "0xD3D0B0", VA = "0xD3D0B0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xD3D168", Offset = "0xD3D168", VA = "0xD3D168")]
	public MB3_MeshBakerGrouperCore CreateGrouper(ClusterType t, GrouperData data)
	{
		return null;
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xD3D310", Offset = "0xD3D310", VA = "0xD3D310")]
	public MB3_MeshBakerGrouper()
	{
	}
}
[Token(Token = "0x20001B8")]
public abstract class MB3_MeshBakerRoot : MonoBehaviour
{
	[Token(Token = "0x200067E")]
	public class ZSortObjects
	{
		[Token(Token = "0x20007BD")]
		public class Item
		{
			[Token(Token = "0x4002802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4002803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 point;

			[Token(Token = "0x6003433")]
			[Address(RVA = "0xD3E350", Offset = "0xD3E350", VA = "0xD3E350")]
			public Item()
			{
			}
		}

		[Token(Token = "0x20007BE")]
		public class ItemComparer : IComparer<Item>
		{
			[Token(Token = "0x6003434")]
			[Address(RVA = "0xD3E368", Offset = "0xD3E368", VA = "0xD3E368", Slot = "4")]
			public int Compare(Item a, Item b)
			{
				return default(int);
			}

			[Token(Token = "0x6003435")]
			[Address(RVA = "0xD3E358", Offset = "0xD3E358", VA = "0xD3E358")]
			public ItemComparer()
			{
			}
		}

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 sortAxis;

		[Token(Token = "0x6003053")]
		[Address(RVA = "0xD3DE74", Offset = "0xD3DE74", VA = "0xD3DE74")]
		public void SortByDistanceAlongAxis(List<GameObject> gos)
		{
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0xD3E360", Offset = "0xD3E360", VA = "0xD3E360")]
		public ZSortObjects()
		{
		}
	}

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DO_INTEGRITY_CHECKS;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 sortAxis;

	[Token(Token = "0x170000FD")]
	[HideInInspector]
	public abstract MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x60010EA")]
		get;
		[Token(Token = "0x60010EB")]
		set;
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xD3D40C", Offset = "0xD3D40C", VA = "0xD3D40C", Slot = "6")]
	public virtual List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xD3D414", Offset = "0xD3D414", VA = "0xD3D414")]
	public static bool DoCombinedValidate(MB3_MeshBakerRoot mom, MB_ObjsToCombineTypes objToCombineType, MB2_EditorMethodsInterface editorMethods, MB2_ValidationLevel validationLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xD3D0A8", Offset = "0xD3D0A8", VA = "0xD3D0A8")]
	protected MB3_MeshBakerRoot()
	{
	}
}
[Token(Token = "0x20001B9")]
public class MB3_MultiMeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MultiMeshCombiner _meshCombiner;

	[Token(Token = "0x170000FE")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xD3E40C", Offset = "0xD3E40C", VA = "0xD3E40C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xD3E414", Offset = "0xD3E414", VA = "0xD3E414", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xD3E5C8", Offset = "0xD3E5C8", VA = "0xD3E5C8", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xD3E77C", Offset = "0xD3E77C", VA = "0xD3E77C")]
	public MB3_MultiMeshBaker()
	{
	}
}
[Token(Token = "0x20001BA")]
public class MB3_TextureBaker : MB3_MeshBakerRoot
{
	[Token(Token = "0x200067F")]
	public delegate void OnCombinedTexturesCoroutineSuccess();

	[Token(Token = "0x2000680")]
	public delegate void OnCombinedTexturesCoroutineFail();

	[Token(Token = "0x2000681")]
	public class CreateAtlasesCoroutineResult
	{
		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isFinished;

		[Token(Token = "0x600305D")]
		[Address(RVA = "0xD411E0", Offset = "0xD411E0", VA = "0xD411E0")]
		public CreateAtlasesCoroutineResult()
		{
		}
	}

	[Token(Token = "0x2000682")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D54", Offset = "0x8F7D54")]
	private sealed class <CreateAtlasesCoroutine>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreateAtlasesCoroutineResult coroutineResult;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MB3_TextureBaker <>4__this;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxTimePerFrame;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool saveAtlasesAsAssets;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ProgressUpdateDelegate progressInfo;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MB2_EditorMethodsInterface editorMethods;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MB3_TextureCombiner <combiner>5__2;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__3;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__4;

		[Token(Token = "0x17000513")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003061")]
			[Address(RVA = "0xD43D44", Offset = "0xD43D44", VA = "0xD43D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000514")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003063")]
			[Address(RVA = "0xD43DB4", Offset = "0xD43DB4", VA = "0xD43DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600305E")]
		[Address(RVA = "0xD411B4", Offset = "0xD411B4", VA = "0xD411B4")]
		[DebuggerHidden]
		public <CreateAtlasesCoroutine>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x600305F")]
		[Address(RVA = "0xD426E8", Offset = "0xD426E8", VA = "0xD426E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003060")]
		[Address(RVA = "0xD426EC", Offset = "0xD426EC", VA = "0xD426EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003062")]
		[Address(RVA = "0xD43D4C", Offset = "0xD43D4C", VA = "0xD43D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MB2_TextureBakeResults _textureBakeResults;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int _atlasPadding;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected int _maxAtlasSize;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool _useMaxAtlasWidthOverride;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected int _maxAtlasWidthOverride;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected bool _useMaxAtlasHeightOverride;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected int _maxAtlasHeightOverride;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected bool _resizePowerOfTwoTextures;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	protected bool _fixOutOfBoundsUVs;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected int _maxTilingBakeSize;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected MB2_PackingAlgorithmEnum _packingAlgorithm;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	protected bool _meshBakerTexturePackerForcePowerOfTwo;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected List<ShaderTextureProperty> _customShaderProperties;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected List<string> _customShaderPropNames_Depricated;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected bool _doMultiMaterial;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfTooBig;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfOBUVs;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected Material _resultMaterial;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected bool _considerNonTextureProperties;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	protected bool _doSuggestTreatment;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CreateAtlasesCoroutineResult _coroutineResult;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public OnCombinedTexturesCoroutineFail onBuiltAtlasesFail;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects;

	[Token(Token = "0x170000FF")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xD40AB0", Offset = "0xD40AB0", VA = "0xD40AB0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xD40AB8", Offset = "0xD40AB8", VA = "0xD40AB8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public virtual int atlasPadding
	{
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xD40AC0", Offset = "0xD40AC0", VA = "0xD40AC0", Slot = "7")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xD40AC8", Offset = "0xD40AC8", VA = "0xD40AC8", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public virtual int maxAtlasSize
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xD40AD0", Offset = "0xD40AD0", VA = "0xD40AD0", Slot = "9")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xD40AD8", Offset = "0xD40AD8", VA = "0xD40AD8", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public virtual bool useMaxAtlasWidthOverride
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xD40AE0", Offset = "0xD40AE0", VA = "0xD40AE0", Slot = "11")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xD40AE8", Offset = "0xD40AE8", VA = "0xD40AE8", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public virtual int maxAtlasWidthOverride
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xD40AF4", Offset = "0xD40AF4", VA = "0xD40AF4", Slot = "13")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xD40AFC", Offset = "0xD40AFC", VA = "0xD40AFC", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public virtual bool useMaxAtlasHeightOverride
	{
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xD40B04", Offset = "0xD40B04", VA = "0xD40B04", Slot = "15")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xD40B0C", Offset = "0xD40B0C", VA = "0xD40B0C", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public virtual int maxAtlasHeightOverride
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0xD40B18", Offset = "0xD40B18", VA = "0xD40B18", Slot = "17")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001101")]
		[Address(RVA = "0xD40B20", Offset = "0xD40B20", VA = "0xD40B20", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public virtual bool resizePowerOfTwoTextures
	{
		[Token(Token = "0x6001102")]
		[Address(RVA = "0xD40B28", Offset = "0xD40B28", VA = "0xD40B28", Slot = "19")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001103")]
		[Address(RVA = "0xD40B30", Offset = "0xD40B30", VA = "0xD40B30", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public virtual bool fixOutOfBoundsUVs
	{
		[Token(Token = "0x6001104")]
		[Address(RVA = "0xD40B3C", Offset = "0xD40B3C", VA = "0xD40B3C", Slot = "21")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001105")]
		[Address(RVA = "0xD40B44", Offset = "0xD40B44", VA = "0xD40B44", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public virtual int maxTilingBakeSize
	{
		[Token(Token = "0x6001106")]
		[Address(RVA = "0xD40B50", Offset = "0xD40B50", VA = "0xD40B50", Slot = "23")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001107")]
		[Address(RVA = "0xD40B58", Offset = "0xD40B58", VA = "0xD40B58", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public virtual MB2_PackingAlgorithmEnum packingAlgorithm
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0xD40B60", Offset = "0xD40B60", VA = "0xD40B60", Slot = "25")]
		get
		{
			return default(MB2_PackingAlgorithmEnum);
		}
		[Token(Token = "0x6001109")]
		[Address(RVA = "0xD40B68", Offset = "0xD40B68", VA = "0xD40B68", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public bool meshBakerTexturePackerForcePowerOfTwo
	{
		[Token(Token = "0x600110A")]
		[Address(RVA = "0xD40B70", Offset = "0xD40B70", VA = "0xD40B70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600110B")]
		[Address(RVA = "0xD40B78", Offset = "0xD40B78", VA = "0xD40B78")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public virtual List<ShaderTextureProperty> customShaderProperties
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0xD40B84", Offset = "0xD40B84", VA = "0xD40B84", Slot = "27")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110D")]
		[Address(RVA = "0xD40B8C", Offset = "0xD40B8C", VA = "0xD40B8C", Slot = "28")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public virtual List<string> customShaderPropNames
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0xD40B94", Offset = "0xD40B94", VA = "0xD40B94", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110F")]
		[Address(RVA = "0xD40B9C", Offset = "0xD40B9C", VA = "0xD40B9C", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public virtual bool doMultiMaterial
	{
		[Token(Token = "0x6001110")]
		[Address(RVA = "0xD40BA4", Offset = "0xD40BA4", VA = "0xD40BA4", Slot = "31")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001111")]
		[Address(RVA = "0xD40BAC", Offset = "0xD40BAC", VA = "0xD40BAC", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public virtual bool doMultiMaterialSplitAtlasesIfTooBig
	{
		[Token(Token = "0x6001112")]
		[Address(RVA = "0xD40BB8", Offset = "0xD40BB8", VA = "0xD40BB8", Slot = "33")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001113")]
		[Address(RVA = "0xD40BC0", Offset = "0xD40BC0", VA = "0xD40BC0", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public virtual bool doMultiMaterialSplitAtlasesIfOBUVs
	{
		[Token(Token = "0x6001114")]
		[Address(RVA = "0xD40BCC", Offset = "0xD40BCC", VA = "0xD40BCC", Slot = "35")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001115")]
		[Address(RVA = "0xD40BD4", Offset = "0xD40BD4", VA = "0xD40BD4", Slot = "36")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public virtual Material resultMaterial
	{
		[Token(Token = "0x6001116")]
		[Address(RVA = "0xD40BE0", Offset = "0xD40BE0", VA = "0xD40BE0", Slot = "37")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001117")]
		[Address(RVA = "0xD40BE8", Offset = "0xD40BE8", VA = "0xD40BE8", Slot = "38")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public bool considerNonTextureProperties
	{
		[Token(Token = "0x6001118")]
		[Address(RVA = "0xD40BF0", Offset = "0xD40BF0", VA = "0xD40BF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001119")]
		[Address(RVA = "0xD40BF8", Offset = "0xD40BF8", VA = "0xD40BF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public bool doSuggestTreatment
	{
		[Token(Token = "0x600111A")]
		[Address(RVA = "0xD40C04", Offset = "0xD40C04", VA = "0xD40C04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600111B")]
		[Address(RVA = "0xD40C0C", Offset = "0xD40C0C", VA = "0xD40C0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public CreateAtlasesCoroutineResult CoroutineResult
	{
		[Token(Token = "0x600111C")]
		[Address(RVA = "0xD40C18", Offset = "0xD40C18", VA = "0xD40C18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xD40C20", Offset = "0xD40C20", VA = "0xD40C20", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xD40C94", Offset = "0xD40C94", VA = "0xD40C94")]
	public MB_AtlasesAndRects[] CreateAtlases()
	{
		return null;
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xD410B0", Offset = "0xD410B0", VA = "0xD410B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D344", Offset = "0x90D344")]
	public IEnumerator CreateAtlasesCoroutine(ProgressUpdateDelegate progressInfo, CreateAtlasesCoroutineResult coroutineResult, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods, float maxTimePerFrame = 0.01f)
	{
		return null;
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xD40CA4", Offset = "0xD40CA4", VA = "0xD40CA4")]
	public MB_AtlasesAndRects[] CreateAtlases(ProgressUpdateDelegate progressInfo, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods)
	{
		return null;
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xD411F0", Offset = "0xD411F0", VA = "0xD411F0")]
	private void unpackMat2RectMap(MB2_TextureBakeResults tbr)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xD414A4", Offset = "0xD414A4", VA = "0xD414A4")]
	public MB3_TextureCombiner CreateAndConfigureTextureCombiner()
	{
		return null;
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xD41730", Offset = "0xD41730", VA = "0xD41730")]
	public static void ConfigureNewMaterialToMatchOld(Material newMat, Material original)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xD41B84", Offset = "0xD41B84", VA = "0xD41B84")]
	private string PrintSet(HashSet<Material> s)
	{
		return null;
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xD41D08", Offset = "0xD41D08", VA = "0xD41D08")]
	private bool _ValidateResultMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xD425DC", Offset = "0xD425DC", VA = "0xD425DC")]
	public MB3_TextureBaker()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SerializableDictionaryExample : MonoBehaviour
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StringStringDictionary m_stringStringDictionary;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectColorDictionary m_objectColorDictionary;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringColorArrayDictionary m_objectColorArrayDictionary;

	[Token(Token = "0x17000114")]
	public IDictionary<string, string> StringStringDictionary
	{
		[Token(Token = "0x6001127")]
		[Address(RVA = "0xB65068", Offset = "0xB65068", VA = "0xB65068")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001128")]
		[Address(RVA = "0xB65070", Offset = "0xB65070", VA = "0xB65070")]
		set
		{
		}
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xB650E0", Offset = "0xB650E0", VA = "0xB650E0")]
	private void Reset()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xB652F4", Offset = "0xB652F4", VA = "0xB652F4")]
	public SerializableDictionaryExample()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BC")]
public class StringStringDictionary : SerializableDictionary<string, string>
{
	[Token(Token = "0x600112B")]
	[Address(RVA = "0xDF5CA8", Offset = "0xDF5CA8", VA = "0xDF5CA8")]
	public StringStringDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BD")]
public class ObjectColorDictionary : SerializableDictionary<UnityEngine.Object, Color>
{
	[Token(Token = "0x600112C")]
	[Address(RVA = "0x19DD180", Offset = "0x19DD180", VA = "0x19DD180")]
	public ObjectColorDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BE")]
public class ColorArrayStorage : SerializableDictionary.Storage<Color[]>
{
	[Token(Token = "0x600112D")]
	[Address(RVA = "0xB53A48", Offset = "0xB53A48", VA = "0xB53A48")]
	public ColorArrayStorage()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BF")]
public class StringColorArrayDictionary : SerializableDictionary<string, Color[], ColorArrayStorage>
{
	[Token(Token = "0x600112E")]
	[Address(RVA = "0xDF5C58", Offset = "0xDF5C58", VA = "0xDF5C58")]
	public StringColorArrayDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C0")]
public class MyClass
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int i;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string str;

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xC153CC", Offset = "0xC153CC", VA = "0xC153CC")]
	public MyClass()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
public class QuaternionMyClassDictionary : SerializableDictionary<Quaternion, MyClass>
{
	[Token(Token = "0x6001130")]
	[Address(RVA = "0xAA5488", Offset = "0xAA5488", VA = "0xAA5488")]
	public QuaternionMyClassDictionary()
	{
	}
}
[Token(Token = "0x20001C2")]
public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TKey[] m_keys;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TValueStorage[] m_values;

	[Token(Token = "0x6001131")]
	public SerializableDictionaryBase()
	{
	}

	[Token(Token = "0x6001132")]
	public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6001133")]
	protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6001134")]
	protected abstract void SetValue(TValueStorage[] storage, int i, TValue value);

	[Token(Token = "0x6001135")]
	protected abstract TValue GetValue(TValueStorage[] storage, int i);

	[Token(Token = "0x6001136")]
	public void CopyFrom(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6001137")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001138")]
	public void OnBeforeSerialize()
	{
	}
}
[Token(Token = "0x20001C3")]
public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>
{
	[Token(Token = "0x6001139")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x600113A")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600113B")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600113C")]
	protected override TValue GetValue(TValue[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x600113D")]
	protected override void SetValue(TValue[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x20001C4")]
public static class SerializableDictionary
{
	[Token(Token = "0x2000683")]
	public class Storage<T>
	{
		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x6003064")]
		public Storage()
		{
		}
	}
}
[Token(Token = "0x20001C5")]
public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage> where TValueStorage : SerializableDictionary.Storage<TValue>, new()
{
	[Token(Token = "0x600113E")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x600113F")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6001140")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6001141")]
	protected override TValue GetValue(TValueStorage[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x6001142")]
	protected override void SetValue(TValueStorage[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x20001C6")]
public class ReferenceSampleComponent1 : MonoBehaviour
{
	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject go;

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xB5CFB0", Offset = "0xB5CFB0", VA = "0xB5CFB0")]
	public ReferenceSampleComponent1()
	{
	}
}
[Token(Token = "0x20001C7")]
public class ReferenceSampleComponent2 : MonoBehaviour
{
	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject go;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ReferenceSampleComponent1 ref1;

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xB5CFB8", Offset = "0xB5CFB8", VA = "0xB5CFB8")]
	public ReferenceSampleComponent2()
	{
	}
}
[Token(Token = "0x20001C8")]
public class ReferenceSampleTansform : MonoBehaviour
{
	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform t;

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xB5CFC0", Offset = "0xB5CFC0", VA = "0xB5CFC0")]
	public ReferenceSampleTansform()
	{
	}
}
[Token(Token = "0x20001C9")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Collections.Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xC0932C", Offset = "0xC0932C", VA = "0xC0932C")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xC0AA78", Offset = "0xC0AA78", VA = "0xC0AA78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xC0A190", Offset = "0xC0A190", VA = "0xC0A190")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xC09A88", Offset = "0xC09A88", VA = "0xC09A88")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xC0AE70", Offset = "0xC0AE70", VA = "0xC0AE70")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xC0A890", Offset = "0xC0A890", VA = "0xC0A890")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xC0A5EC", Offset = "0xC0A5EC", VA = "0xC0A5EC")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xC0AE90", Offset = "0xC0AE90", VA = "0xC0AE90")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x20001CA")]
[ExecuteInEditMode]
public class PaintingData : MonoBehaviour
{
	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Color[] _colors;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh meshStream;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool enforcedColorChannels;

	[Token(Token = "0x17000115")]
	public Color[] colors
	{
		[Token(Token = "0x600114F")]
		[Address(RVA = "0xA8FA14", Offset = "0xA8FA14", VA = "0xA8FA14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001150")]
		[Address(RVA = "0xA8FA1C", Offset = "0xA8FA1C", VA = "0xA8FA1C")]
		set
		{
		}
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xA8FEA0", Offset = "0xA8FEA0", VA = "0xA8FEA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xA8FEA8", Offset = "0xA8FEA8", VA = "0xA8FEA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xA8FA54", Offset = "0xA8FA54", VA = "0xA8FA54")]
	public Mesh Apply(bool markNoLongerReadable = true)
	{
		return null;
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xA8FF68", Offset = "0xA8FF68", VA = "0xA8FF68")]
	private void EnforceOriginalMeshHasColors(Mesh stream)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xA900DC", Offset = "0xA900DC", VA = "0xA900DC")]
	public PaintingData()
	{
	}
}
[Token(Token = "0x20001CB")]
public class C_ConeTracer : MonoBehaviour
{
	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int maxConeSegments;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxConeDistance;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float segmentLength;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float radiusdivider;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float maxRadius;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit lastOverlapped;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject grabCandidate;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int tracestoCandidate;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 p1;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 p2;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float distanceToObstacle;

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xB42850", Offset = "0xB42850", VA = "0xB42850")]
	private void Start()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xB4286C", Offset = "0xB4286C", VA = "0xB4286C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xB42870", Offset = "0xB42870", VA = "0xB42870")]
	private void PerformConeTrace()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xB42A38", Offset = "0xB42A38", VA = "0xB42A38")]
	public void DoSegmentTrace(Vector3 start, Vector3 end, float radiusDivisor, int indexRadMult)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xB42C48", Offset = "0xB42C48", VA = "0xB42C48")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xB42F20", Offset = "0xB42F20", VA = "0xB42F20")]
	public C_ConeTracer()
	{
	}
}
[Token(Token = "0x20001CC")]
public class ViveGrip_Grabber : MonoBehaviour
{
	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D64", Offset = "0x8F7D64")]
	private sealed class <NetworkGripStopRPCCaller>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody desiredBody;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ViveGrip_GripPoint gripPoint;

		[Token(Token = "0x17000515")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003068")]
			[Address(RVA = "0x11A3460", Offset = "0x11A3460", VA = "0x11A3460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000516")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600306A")]
			[Address(RVA = "0x11A34D0", Offset = "0x11A34D0", VA = "0x11A34D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003065")]
		[Address(RVA = "0x11A208C", Offset = "0x11A208C", VA = "0x11A208C")]
		[DebuggerHidden]
		public <NetworkGripStopRPCCaller>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6003066")]
		[Address(RVA = "0x11A29B0", Offset = "0x11A29B0", VA = "0x11A29B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003067")]
		[Address(RVA = "0x11A29B4", Offset = "0x11A29B4", VA = "0x11A29B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003069")]
		[Address(RVA = "0x11A3468", Offset = "0x11A3468", VA = "0x11A3468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D74", Offset = "0x8F7D74")]
	private sealed class <DropTheShit>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody desiredBody;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 velocity;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 angularVelocity;

		[Token(Token = "0x17000517")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600306E")]
			[Address(RVA = "0x11A2938", Offset = "0x11A2938", VA = "0x11A2938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000518")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003070")]
			[Address(RVA = "0x11A29A8", Offset = "0x11A29A8", VA = "0x11A29A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x11A2528", Offset = "0x11A2528", VA = "0x11A2528")]
		[DebuggerHidden]
		public <DropTheShit>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x11A27E8", Offset = "0x11A27E8", VA = "0x11A27E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0x11A27EC", Offset = "0x11A27EC", VA = "0x11A27EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600306F")]
		[Address(RVA = "0x11A2940", Offset = "0x11A2940", VA = "0x11A2940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject jointObject;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigurableJoint joint;

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x119FB68", Offset = "0x119FB68", VA = "0x119FB68")]
	private void Start()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x119FB6C", Offset = "0x119FB6C", VA = "0x119FB6C")]
	private void ViveGripGrabStart(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x11A0DE0", Offset = "0x11A0DE0", VA = "0x11A0DE0")]
	public void NetworkViveGripGrabStart(string rigidBodyName, Vector3 position, Quaternion rotation, Vector3 transformPos, Quaternion transformRot, Vector3 desiredPos, Quaternion desiredRot)
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x11A13F8", Offset = "0x11A13F8", VA = "0x11A13F8")]
	private void ViveGripGrabStop(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x11A1FF4", Offset = "0x11A1FF4", VA = "0x11A1FF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D3A8", Offset = "0x90D3A8")]
	private IEnumerator NetworkGripStopRPCCaller(ViveGrip_GripPoint gripPoint, Rigidbody desiredBody)
	{
		return null;
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x11A20B8", Offset = "0x11A20B8", VA = "0x11A20B8")]
	public void NetworkViveGripGrabStop()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x11A2158", Offset = "0x11A2158", VA = "0x11A2158")]
	public void NetworkViveGripGrabStop(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x11A23F0", Offset = "0x11A23F0", VA = "0x11A23F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D40C", Offset = "0x90D40C")]
	private IEnumerator DropTheShit(Rigidbody desiredBody, Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity)
	{
		return null;
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x119FEA0", Offset = "0x119FEA0", VA = "0x119FEA0")]
	private void GrabWith(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x119FC20", Offset = "0x119FC20", VA = "0x119FC20")]
	private GameObject InstantiateJointParent()
	{
		return null;
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x11A25F0", Offset = "0x11A25F0", VA = "0x11A25F0")]
	public GameObject ConnectedGameObject()
	{
		return null;
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x11A2704", Offset = "0x11A2704", VA = "0x11A2704")]
	public bool HoldingSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x11A2774", Offset = "0x11A2774", VA = "0x11A2774")]
	public void RebuildJoint()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x11A27E0", Offset = "0x11A27E0", VA = "0x11A27E0")]
	public ViveGrip_Grabber()
	{
	}
}
[Token(Token = "0x20001CD")]
public interface ViveGrip_HighlightEffect
{
	[Token(Token = "0x600116A")]
	void Start(GameObject gameObject);

	[Token(Token = "0x600116B")]
	void Stop(GameObject gameObject);
}
[Token(Token = "0x20001CE")]
public class ViveGrip_Highlighter : MonoBehaviour
{
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ViveGrip_HighlightEffect effect;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool highlighted;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<ViveGrip_GripPoint> grips;

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x11A4CA0", Offset = "0x11A4CA0", VA = "0x11A4CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x11A4A10", Offset = "0x11A4A10", VA = "0x11A4A10")]
	public void RemoveHighlight()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x11A4BB0", Offset = "0x11A4BB0", VA = "0x11A4BB0")]
	public void Highlight()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x11A4D58", Offset = "0x11A4D58", VA = "0x11A4D58")]
	public ViveGrip_HighlightEffect UpdateEffect(Type effectType)
	{
		return null;
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x11A5058", Offset = "0x11A5058", VA = "0x11A5058")]
	public ViveGrip_HighlightEffect CurrentEffect()
	{
		return null;
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x11A4F28", Offset = "0x11A4F28", VA = "0x11A4F28")]
	private void AssignEffect(Type effectType)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x11A5060", Offset = "0x11A5060", VA = "0x11A5060")]
	private void ViveGripHighlightStart(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x11A50F0", Offset = "0x11A50F0", VA = "0x11A50F0")]
	private void ViveGripHighlightStop(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x11A5180", Offset = "0x11A5180", VA = "0x11A5180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x11A5184", Offset = "0x11A5184", VA = "0x11A5184")]
	public ViveGrip_Highlighter()
	{
	}
}
[Token(Token = "0x20001CF")]
public class ViveGrip_TintEffect : ViveGrip_HighlightEffect
{
	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color tintColor;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<Color> oldColors;

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x11A5DA8", Offset = "0x11A5DA8", VA = "0x11A5DA8", Slot = "4")]
	public void Start(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x11A5E50", Offset = "0x11A5E50", VA = "0x11A5E50", Slot = "5")]
	public void Stop(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x11A5F6C", Offset = "0x11A5F6C", VA = "0x11A5F6C")]
	private void StashColor(Material material)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x11A6080", Offset = "0x11A6080", VA = "0x11A6080")]
	private void PopColor(Material material)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x11A6134", Offset = "0x11A6134", VA = "0x11A6134", Slot = "6")]
	public virtual Renderer[] RenderersIn(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x11A6250", Offset = "0x11A6250", VA = "0x11A6250", Slot = "7")]
	public virtual Material[] MaterialsFrom(Renderer[] renderers)
	{
		return null;
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x11A5CF0", Offset = "0x11A5CF0", VA = "0x11A5CF0")]
	public ViveGrip_TintEffect()
	{
	}
}
[Token(Token = "0x20001D0")]
public class ViveGrip_TintChildrenEffect : ViveGrip_TintEffect
{
	[Token(Token = "0x600117D")]
	[Address(RVA = "0x11A5B78", Offset = "0x11A5B78", VA = "0x11A5B78", Slot = "6")]
	public override Renderer[] RenderersIn(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x11A5BD4", Offset = "0x11A5BD4", VA = "0x11A5BD4", Slot = "7")]
	public override Material[] MaterialsFrom(Renderer[] renderers)
	{
		return null;
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x11A5CEC", Offset = "0x11A5CEC", VA = "0x11A5CEC")]
	public ViveGrip_TintChildrenEffect()
	{
	}
}
[Token(Token = "0x20001D1")]
public static class ViveGrip_JointFactory
{
	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float LINEAR_DRIVE_MULTIPLIER;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float ANGULAR_DRIVE_MULTIPLIER;

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x11A1178", Offset = "0x11A1178", VA = "0x11A1178")]
	public static ConfigurableJoint JointToConnect(GameObject jointObject, Rigidbody desiredObject, Quaternion controllerRotation)
	{
		return null;
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x11A55B0", Offset = "0x11A55B0", VA = "0x11A55B0")]
	private static void SetTargetRotation(ConfigurableJoint joint, Rigidbody desiredObject, Vector3 desiredOrientation, Quaternion controllerRotation)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x11A5368", Offset = "0x11A5368", VA = "0x11A5368")]
	private static void SetAnchor(ConfigurableJoint joint, Rigidbody desiredObject, Vector3 anchor)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x11A5810", Offset = "0x11A5810", VA = "0x11A5810")]
	private static JointDrive LinearJointDrive(float strength, float damper, float maxForce)
	{
		return default(JointDrive);
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x11A5874", Offset = "0x11A5874", VA = "0x11A5874")]
	private static JointDrive AngularJointDrive(JointDrive baseJointDrive, float strength, float damper)
	{
		return default(JointDrive);
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x11A51F4", Offset = "0x11A51F4", VA = "0x11A51F4")]
	private static void SetLinearDrive(ConfigurableJoint joint, float mass)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x11A5424", Offset = "0x11A5424", VA = "0x11A5424")]
	private static void SetAngularDrive(ConfigurableJoint joint, float mass)
	{
	}
}
[Token(Token = "0x20001D2")]
public class ViveGrip_Object : MonoBehaviour
{
	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ClassImplementsAttribute", RVA = "0x8FB090", Offset = "0x8FB090")]
	public ClassTypeReference highlightEffect;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ViveGrip_Highlighter highlighter;

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x11A5928", Offset = "0x11A5928", VA = "0x11A5928")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x11A5A28", Offset = "0x11A5A28", VA = "0x11A5A28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x11A5AC0", Offset = "0x11A5AC0", VA = "0x11A5AC0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x119F9E4", Offset = "0x119F9E4", VA = "0x119F9E4")]
	public ViveGrip_Object()
	{
	}
}
[Token(Token = "0x20001D3")]
public class ViveGrip_TouchDetection : MonoBehaviour
{
	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ViveGrip_Object> collidingObjects;

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x11A62EC", Offset = "0x11A62EC", VA = "0x11A62EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x11A6358", Offset = "0x11A6358", VA = "0x11A6358")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x11A657C", Offset = "0x11A657C", VA = "0x11A657C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x11A45C8", Offset = "0x11A45C8", VA = "0x11A45C8")]
	public GameObject NearestObject()
	{
		return null;
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x11A6438", Offset = "0x11A6438", VA = "0x11A6438")]
	private ViveGrip_Object ActiveComponent(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x11A665C", Offset = "0x11A665C", VA = "0x11A665C")]
	private ViveGrip_Object ValidComponent(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x11A6754", Offset = "0x11A6754", VA = "0x11A6754")]
	public ViveGrip_TouchDetection()
	{
	}
}
[Token(Token = "0x20001D4")]
[DisallowMultipleComponent]
public class ViveGrip_GripPoint : MonoBehaviour
{
	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB0F4", Offset = "0x8FB0F4")]
	public float touchRadius;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB12C", Offset = "0x8FB12C")]
	public float holdRadius;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB164", Offset = "0x8FB164")]
	public bool visible;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB19C", Offset = "0x8FB19C")]
	public bool inputIsToggle;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB1D4", Offset = "0x8FB1D4")]
	public bool isRightHandGripPoint;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB20C", Offset = "0x8FB20C")]
	public bool isNetworkGripPoint;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public ViveGrip_Grabber grabber;

	[Token(Token = "0x4000D70")]
	public const string GRIP_SPHERE_NAME = "ViveGrip Touch Sphere";

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ViveGrip_TouchDetection touch;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool firmlyGrabbed;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool externalGrabTriggered;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject lastTouchedObject;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject lastInteractedObject;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x119ECDC", Offset = "0x119ECDC", VA = "0x119ECDC")]
	public KSVR_Controller_Base GetController()
	{
		return null;
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x11A34D8", Offset = "0x11A34D8", VA = "0x11A34D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x11A3A14", Offset = "0x11A3A14", VA = "0x11A3A14")]
	private void Update()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x11A3BBC", Offset = "0x11A3BBC", VA = "0x11A3BBC")]
	private void HandleGrabbing(GameObject givenObject)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x11A3F7C", Offset = "0x11A3F7C", VA = "0x11A3F7C")]
	private bool GrabTriggered()
	{
		return default(bool);
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x11A40E0", Offset = "0x11A40E0", VA = "0x11A40E0")]
	private void DestroyConnection()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x11A3F1C", Offset = "0x11A3F1C", VA = "0x11A3F1C")]
	private void HandleFumbling()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x11A4248", Offset = "0x11A4248", VA = "0x11A4248")]
	private float CalculateGrabDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x11A3D58", Offset = "0x11A3D58", VA = "0x11A3D58")]
	private void HandleInteraction(GameObject givenObject)
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x11A3A74", Offset = "0x11A3A74", VA = "0x11A3A74")]
	private void HandleTouching(GameObject givenObject)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x11A43FC", Offset = "0x11A43FC", VA = "0x11A43FC")]
	private bool GameObjectsEqual(GameObject first, GameObject second)
	{
		return default(bool);
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x11A35C4", Offset = "0x11A35C4", VA = "0x11A35C4")]
	private GameObject InstantiateTouchSphere()
	{
		return null;
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x11A454C", Offset = "0x11A454C", VA = "0x11A454C")]
	public bool TouchingSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x11A2554", Offset = "0x11A2554", VA = "0x11A2554")]
	public GameObject TouchedObject()
	{
		return null;
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x11A4850", Offset = "0x11A4850", VA = "0x11A4850")]
	public bool HoldingSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x11A4190", Offset = "0x11A4190", VA = "0x11A4190")]
	public GameObject HeldObject()
	{
		return null;
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x11A48EC", Offset = "0x11A48EC", VA = "0x11A48EC")]
	public void ToggleGrab()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x11A48F8", Offset = "0x11A48F8", VA = "0x11A48F8")]
	public GameObject TrackedObject()
	{
		return null;
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x11A3930", Offset = "0x11A3930", VA = "0x11A3930")]
	public void UpdateRadius(float touch, float hold)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x11A4000", Offset = "0x11A4000", VA = "0x11A4000")]
	private void Message(string name, GameObject objectToMessage)
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x11A4944", Offset = "0x11A4944", VA = "0x11A4944")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x11A4AE4", Offset = "0x11A4AE4", VA = "0x11A4AE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x11A4C84", Offset = "0x11A4C84", VA = "0x11A4C84")]
	public ViveGrip_GripPoint()
	{
	}
}
[Token(Token = "0x20001D5")]
public class ViveGrip_Climbable : ViveGrip_Interactable
{
	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_IsGrabbing;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool m_IsHandOverClimbable;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private KSVR_Controller_Base m_Controller;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 base_start_position;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 hand_local_position;

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x119EC2C", Offset = "0x119EC2C", VA = "0x119EC2C")]
	private void ViveGripHighlightStart(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x119ECE4", Offset = "0x119ECE4", VA = "0x119ECE4")]
	private void ViveGripHighlightStop(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x119ED6C", Offset = "0x119ED6C", VA = "0x119ED6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x119F11C", Offset = "0x119F11C", VA = "0x119F11C")]
	public ViveGrip_Climbable()
	{
	}
}
[Token(Token = "0x20001D6")]
public class ViveGrip_EventBridge : MonoBehaviour
{
	[Token(Token = "0x2000686")]
	public enum ViveGripEvent
	{
		[Token(Token = "0x40022D5")]
		InteractionStart,
		[Token(Token = "0x40022D6")]
		InteractionStop,
		[Token(Token = "0x40022D7")]
		GrabStart,
		[Token(Token = "0x40022D8")]
		GrabStop,
		[Token(Token = "0x40022D9")]
		HighlightStart,
		[Token(Token = "0x40022DA")]
		HighlightStop,
		[Token(Token = "0x40022DB")]
		TouchStart,
		[Token(Token = "0x40022DC")]
		TouchStop
	}

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ViveGripEvent viveGripEvent;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent attachedFunction;

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x119F124", Offset = "0x119F124", VA = "0x119F124")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x119F128", Offset = "0x119F128", VA = "0x119F128")]
	private void InvokeIf(ViveGripEvent thisEvent)
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x119F14C", Offset = "0x119F14C", VA = "0x119F14C")]
	private void ViveGripInteractionStart()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x119F16C", Offset = "0x119F16C", VA = "0x119F16C")]
	private void ViveGripInteractionStop()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x119F190", Offset = "0x119F190", VA = "0x119F190")]
	private void ViveGripGrabStart()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x119F1B4", Offset = "0x119F1B4", VA = "0x119F1B4")]
	private void ViveGripGrabStop()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x119F1D8", Offset = "0x119F1D8", VA = "0x119F1D8")]
	private void ViveGripHighlightStart()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x119F1FC", Offset = "0x119F1FC", VA = "0x119F1FC")]
	private void ViveGripHighlightStop()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x119F220", Offset = "0x119F220", VA = "0x119F220")]
	private void ViveGripTouchStart()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x119F244", Offset = "0x119F244", VA = "0x119F244")]
	private void ViveGripTouchStop()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x119F268", Offset = "0x119F268", VA = "0x119F268")]
	public ViveGrip_EventBridge()
	{
	}
}
[Token(Token = "0x20001D7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F56F0", Offset = "0x8F56F0")]
[DisallowMultipleComponent]
public class ViveGrip_Grabbable : ViveGrip_Object
{
	[Token(Token = "0x2000687")]
	public enum RotationMode
	{
		[Token(Token = "0x40022DE")]
		Disabled,
		[Token(Token = "0x40022DF")]
		ApplyGrip,
		[Token(Token = "0x40022E0")]
		ApplyGripAndOrientation
	}

	[Serializable]
	[Token(Token = "0x2000688")]
	public class Position
	{
		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9032BC", Offset = "0x9032BC")]
		public bool enabled;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9032F4", Offset = "0x9032F4")]
		public Vector3 localPosition;

		[Token(Token = "0x6003071")]
		[Address(RVA = "0x119FA70", Offset = "0x119FA70", VA = "0x119FA70")]
		public Position()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000689")]
	public class Rotation
	{
		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x90332C", Offset = "0x90332C")]
		public RotationMode mode;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x903364", Offset = "0x903364")]
		public Vector3 localOrientation;

		[Token(Token = "0x6003072")]
		[Address(RVA = "0x119FAE8", Offset = "0x119FAE8", VA = "0x119FAE8")]
		public Rotation()
		{
		}
	}

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isTeleportable;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool SleepOnStart;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Position anchor;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rotation rotation;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 grabCentre;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HashSet<ViveGrip_GripPoint> attachedGripPoints;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool SleepObjectOnStart;

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x119F270", Offset = "0x119F270", VA = "0x119F270")]
	private new void Awake()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x119F2EC", Offset = "0x119F2EC", VA = "0x119F2EC")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x119F404", Offset = "0x119F404", VA = "0x119F404")]
	public Vector3 RotatedAnchor()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x119F4F0", Offset = "0x119F4F0", VA = "0x119F4F0")]
	public void GrabFrom(Vector3 jointLocation)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x119F600", Offset = "0x119F600", VA = "0x119F600")]
	public Vector3 WorldAnchorPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x119F758", Offset = "0x119F758", VA = "0x119F758")]
	public bool ApplyGripRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x119F78C", Offset = "0x119F78C", VA = "0x119F78C")]
	public bool SnapToOrientation()
	{
		return default(bool);
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x119F7C0", Offset = "0x119F7C0", VA = "0x119F7C0")]
	private void ViveGripGrabStart(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x119F8BC", Offset = "0x119F8BC", VA = "0x119F8BC")]
	private void ViveGripGrabStop(ViveGrip_GripPoint gripPoint)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x119F960", Offset = "0x119F960", VA = "0x119F960")]
	public HashSet<ViveGrip_GripPoint> AttachedGripPoints()
	{
		return null;
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x119F968", Offset = "0x119F968", VA = "0x119F968")]
	public ViveGrip_Grabbable()
	{
	}
}
[Token(Token = "0x20001D8")]
[DisallowMultipleComponent]
public class ViveGrip_Interactable : ViveGrip_Object
{
	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x119F120", Offset = "0x119F120", VA = "0x119F120")]
	public ViveGrip_Interactable()
	{
	}
}
[Token(Token = "0x20001D9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5774", Offset = "0x8F5774")]
public class RunTime_Terrain_Convertion : MonoBehaviour
{
	[Token(Token = "0x200068A")]
	public enum RENDER_PIPELINE
	{
		[Token(Token = "0x40022E6")]
		Standard,
		[Token(Token = "0x40022E7")]
		Lightweight
	}

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Terrain sourceTerrain;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TerrainConvertInfo convertInfo;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool generateBasemap;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool attachMeshCollider;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8FB254", Offset = "0x8FB254")]
	public RENDER_PIPELINE renderPipeline;

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xB62750", Offset = "0xB62750", VA = "0xB62750")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xB62CC0", Offset = "0xB62CC0", VA = "0xB62CC0")]
	private Material GenerateMaterial_Basemap()
	{
		return null;
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xB62EE0", Offset = "0xB62EE0", VA = "0xB62EE0")]
	private Material GenerateMaterial_Splatmap()
	{
		return null;
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xB6375C", Offset = "0xB6375C", VA = "0xB6375C")]
	public RunTime_Terrain_Convertion()
	{
	}
}
[Token(Token = "0x20001DA")]
public class testWebGL : MonoBehaviour
{
	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x11B1680", Offset = "0x11B1680", VA = "0x11B1680")]
	private void Start()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x11B16EC", Offset = "0x11B16EC", VA = "0x11B16EC")]
	public testWebGL()
	{
	}
}
[Token(Token = "0x20001DB")]
public class testZip : MonoBehaviour
{
	[Token(Token = "0x200068B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D84", Offset = "0x8F7D84")]
	private sealed class <DownloadZipFile>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public testZip <>4__this;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000519")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003077")]
			[Address(RVA = "0x11B6284", Offset = "0x11B6284", VA = "0x11B6284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003079")]
			[Address(RVA = "0x11B62F4", Offset = "0x11B62F4", VA = "0x11B62F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x11B5D20", Offset = "0x11B5D20", VA = "0x11B5D20")]
		[DebuggerHidden]
		public <DownloadZipFile>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0x11B5E0C", Offset = "0x11B5E0C", VA = "0x11B5E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x11B5EE8", Offset = "0x11B5EE8", VA = "0x11B5EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x11B5E28", Offset = "0x11B5E28", VA = "0x11B5E28")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6003078")]
		[Address(RVA = "0x11B628C", Offset = "0x11B628C", VA = "0x11B628C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int zres;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string myFile;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string log;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string ppath;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool compressionStarted;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool pass;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool downloadDone;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] reusableBuffer;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private byte[] reusableBuffer2;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private byte[] reusableBuffer3;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte[] fixedInBuffer;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte[] fixedOutBuffer;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private byte[] fixedBuffer;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] progress;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ulong[] progress2;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ulong[] byteProgress;

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x11B16F4", Offset = "0x11B16F4", VA = "0x11B16F4")]
	private void plog(string t)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x11B1760", Offset = "0x11B1760", VA = "0x11B1760")]
	private void Start()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x11B18C8", Offset = "0x11B18C8", VA = "0x11B18C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x11B18F4", Offset = "0x11B18F4", VA = "0x11B18F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x11B1EE8", Offset = "0x11B1EE8", VA = "0x11B1EE8")]
	private void DoDecompression()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x11B5BF8", Offset = "0x11B5BF8", VA = "0x11B5BF8")]
	private void decompressFunc()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x11B4534", Offset = "0x11B4534", VA = "0x11B4534")]
	private void DoDecompression_FileBuffer()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x11B4D4C", Offset = "0x11B4D4C", VA = "0x11B4D4C")]
	private void DoDecompression_Merged()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x11B1854", Offset = "0x11B1854", VA = "0x11B1854")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D470", Offset = "0x90D470")]
	private IEnumerator DownloadZipFile()
	{
		return null;
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x11B5D4C", Offset = "0x11B5D4C", VA = "0x11B5D4C")]
	public testZip()
	{
	}
}
namespace VertPaint
{
	[Token(Token = "0x20001DC")]
	public class PaintStrokeEventArgs : EventArgs
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB268", Offset = "0x8FB268")]
		private RaycastHit <BrushRaycastHit>k__BackingField;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB278", Offset = "0x8FB278")]
		private DateTime <PaintTime>k__BackingField;

		[Token(Token = "0x17000116")]
		public RaycastHit BrushRaycastHit
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0xAE39C4", Offset = "0xAE39C4", VA = "0xAE39C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D4D4", Offset = "0x90D4D4")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0xAE39E0", Offset = "0xAE39E0", VA = "0xAE39E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D4E4", Offset = "0x90D4E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public DateTime PaintTime
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xAE39FC", Offset = "0xAE39FC", VA = "0xAE39FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D4F4", Offset = "0x90D4F4")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xAE3A04", Offset = "0xAE3A04", VA = "0xAE3A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D504", Offset = "0x90D504")]
			protected set
			{
			}
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xAE3A0C", Offset = "0xAE3A0C", VA = "0xAE3A0C")]
		public PaintStrokeEventArgs(RaycastHit brushRaycastHit, DateTime paintTime)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class PreviewStateChangedEventArgs : EventArgs
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB288", Offset = "0x8FB288")]
		private bool <Previewing>k__BackingField;

		[Token(Token = "0x17000118")]
		public bool Previewing
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xAE3AA4", Offset = "0xAE3AA4", VA = "0xAE3AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D514", Offset = "0x90D514")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xAE3AAC", Offset = "0xAE3AAC", VA = "0xAE3AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D524", Offset = "0x90D524")]
			protected set
			{
			}
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xAE3AB8", Offset = "0xAE3AB8", VA = "0xAE3AB8")]
		public PreviewStateChangedEventArgs(bool nowPreviewing)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class ShaderPrepEventArgs : EventArgs
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB298", Offset = "0x8FB298")]
		private Texture2D <RepackedTexture>k__BackingField;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB2A8", Offset = "0x8FB2A8")]
		private byte[] <RepackedTextureBytes>k__BackingField;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB2B8", Offset = "0x8FB2B8")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x17000119")]
		public Texture2D RepackedTexture
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0xAE3B38", Offset = "0xAE3B38", VA = "0xAE3B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D534", Offset = "0x90D534")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xAE3B40", Offset = "0xAE3B40", VA = "0xAE3B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D544", Offset = "0x90D544")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public byte[] RepackedTextureBytes
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xAE3B48", Offset = "0xAE3B48", VA = "0xAE3B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D554", Offset = "0x90D554")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xAE3B50", Offset = "0xAE3B50", VA = "0xAE3B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D564", Offset = "0x90D564")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public string FilePath
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0xAE3B58", Offset = "0xAE3B58", VA = "0xAE3B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D574", Offset = "0x90D574")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0xAE3B60", Offset = "0xAE3B60", VA = "0xAE3B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D584", Offset = "0x90D584")]
			private set
			{
			}
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xAE3B68", Offset = "0xAE3B68", VA = "0xAE3B68")]
		public ShaderPrepEventArgs(Texture2D repackedTexture, byte[] repackedTextureBytes, string filePath)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class TemplateSavedEventArgs : EventArgs
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB2C8", Offset = "0x8FB2C8")]
		private DateTime <SaveTime>k__BackingField;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB2D8", Offset = "0x8FB2D8")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB2E8", Offset = "0x8FB2E8")]
		private bool <Autosave>k__BackingField;

		[Token(Token = "0x1700011C")]
		public DateTime SaveTime
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xAE3BF8", Offset = "0xAE3BF8", VA = "0xAE3BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D594", Offset = "0x90D594")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xAE3C00", Offset = "0xAE3C00", VA = "0xAE3C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D5A4", Offset = "0x90D5A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public string FilePath
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xAE3C08", Offset = "0xAE3C08", VA = "0xAE3C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D5B4", Offset = "0x90D5B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xAE3C10", Offset = "0xAE3C10", VA = "0xAE3C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D5C4", Offset = "0x90D5C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public bool Autosave
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xAE3C18", Offset = "0xAE3C18", VA = "0xAE3C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D5D4", Offset = "0x90D5D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xAE3C20", Offset = "0xAE3C20", VA = "0xAE3C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D5E4", Offset = "0x90D5E4")]
			private set
			{
			}
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xAE3C2C", Offset = "0xAE3C2C", VA = "0xAE3C2C")]
		public TemplateSavedEventArgs(DateTime saveTime, string filePath, bool autosave)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public enum BrushStyle
	{
		[Token(Token = "0x4000DA4")]
		None,
		[Token(Token = "0x4000DA5")]
		Circle,
		[Token(Token = "0x4000DA6")]
		Disc,
		[Token(Token = "0x4000DA7")]
		Sphere
	}
	[Token(Token = "0x20001E1")]
	public enum ColorComponent
	{
		[Token(Token = "0x4000DA9")]
		R,
		[Token(Token = "0x4000DAA")]
		G,
		[Token(Token = "0x4000DAB")]
		B,
		[Token(Token = "0x4000DAC")]
		A
	}
	[Token(Token = "0x20001E2")]
	public enum PostRepackAction
	{
		[Token(Token = "0x4000DAE")]
		Nothing,
		[Token(Token = "0x4000DAF")]
		Close,
		[Token(Token = "0x4000DB0")]
		ResetInputTextures,
		[Token(Token = "0x4000DB1")]
		ResetAll
	}
}
namespace WireBuilder
{
	[Token(Token = "0x20001E3")]
	[ExecuteInEditMode]
	public class Wire : MonoBehaviour
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WireType wireType;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WireConnector startConnection;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WireConnector endConnection;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] points;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 startPos;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 endPos;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB2F8", Offset = "0x8FB2F8")]
		public float sagOffset;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float length;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sagDepth;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float tension;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float weight;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Gradient windData;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Mesh mesh;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x11A7E38", Offset = "0x11A7E38", VA = "0x11A7E38")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x11A7E70", Offset = "0x11A7E70", VA = "0x11A7E70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x11A7FC4", Offset = "0x11A7FC4", VA = "0x11A7FC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x11A8118", Offset = "0x11A8118", VA = "0x11A8118")]
		public void UpdateWire(bool updateWind)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x11A88C4", Offset = "0x11A88C4", VA = "0x11A88C4")]
		public void UpdateVegetationMask(WireType wireType)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x11A88C8", Offset = "0x11A88C8", VA = "0x11A88C8")]
		public Wire()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F57BC", Offset = "0x8F57BC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8F57BC", Offset = "0x8F57BC")]
	public class WireConnector : MonoBehaviour
	{
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB310", Offset = "0x8FB310")]
		public WireConnectorGroup group;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB348", Offset = "0x8FB348")]
		public WireType wireType;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB380", Offset = "0x8FB380")]
		public List<Wire> wires;

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x11A88D0", Offset = "0x11A88D0", VA = "0x11A88D0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x11A8A24", Offset = "0x11A8A24", VA = "0x11A8A24")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x11A8B78", Offset = "0x11A8B78", VA = "0x11A8B78")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x11A8B7C", Offset = "0x11A8B7C", VA = "0x11A8B7C")]
		public WireConnector()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F582C", Offset = "0x8F582C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8F582C", Offset = "0x8F582C")]
	public class WireConnectorGroup : MonoBehaviour
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float handleSize;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<WireConnector> _connectors;

		[Token(Token = "0x1700011F")]
		public List<WireConnector> connectors
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x11A8BEC", Offset = "0x11A8BEC", VA = "0x11A8BEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x11A8BF4", Offset = "0x11A8BF4", VA = "0x11A8BF4")]
			set
			{
			}
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x11A8BFC", Offset = "0x11A8BFC", VA = "0x11A8BFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x90D5F4", Offset = "0x90D5F4")]
		private void UpdateConnectors()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x11A8D1C", Offset = "0x11A8D1C", VA = "0x11A8D1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x11A8E70", Offset = "0x11A8E70", VA = "0x11A8E70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x11A8FC4", Offset = "0x11A8FC4", VA = "0x11A8FC4")]
		private float TryGetMinBoundsSize()
		{
			return default(float);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x11A9130", Offset = "0x11A9130", VA = "0x11A9130")]
		public WireConnectorGroup()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class WireGenerator
	{
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x11A91A8", Offset = "0x11A91A8", VA = "0x11A91A8")]
		public static Wire New(WireType wireType)
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x11A92AC", Offset = "0x11A92AC", VA = "0x11A92AC")]
		public static float CalculateWireSag(float gravity, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x11A8128", Offset = "0x11A8128", VA = "0x11A8128")]
		public static void Update(Wire wire, WireType type, bool updateWind = false)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x11A960C", Offset = "0x11A960C", VA = "0x11A960C")]
		private static void ValidateComponents(Wire wire)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x11A98E0", Offset = "0x11A98E0", VA = "0x11A98E0")]
		private static void UpdateLineRenderer(Wire wire, bool updateWind)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x11A9B6C", Offset = "0x11A9B6C", VA = "0x11A9B6C")]
		private static void UpdateMesh(Wire wire, bool updateWind)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x11A932C", Offset = "0x11A932C", VA = "0x11A932C")]
		private static Gradient NewWindData(Wire wire)
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x11A9C0C", Offset = "0x11A9C0C", VA = "0x11A9C0C")]
		private static Mesh GenerateMesh(Wire wire, bool updateWind)
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x11A9FD8", Offset = "0x11A9FD8", VA = "0x11A9FD8")]
		private static int[] GenerateIndices(Wire wire)
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x11AA340", Offset = "0x11AA340", VA = "0x11AA340")]
		private static Vector2[] GenerateUVs(Wire wire)
		{
			return null;
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x11AA51C", Offset = "0x11AA51C", VA = "0x11AA51C")]
		private static Color[] GenerateColors(Wire wire)
		{
			return null;
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x11AA6C8", Offset = "0x11AA6C8", VA = "0x11AA6C8")]
		private static Vector3[] VertexRing(int index, Wire wire)
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x11AAD3C", Offset = "0x11AAD3C", VA = "0x11AAD3C")]
		public WireGenerator()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	[ExecuteInEditMode]
	public static class WireManager
	{
		[Serializable]
		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D94", Offset = "0x8F7D94")]
		private sealed class <>c
		{
			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<WireConnectorGroup> <>9__22_0;

			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<WireConnector> <>9__22_1;

			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<Wire> <>9__22_2;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<WireConnectorGroup> <>9__23_0;

			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<WireConnector> <>9__24_0;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<Wire> <>9__25_0;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Predicate<Wire> <>9__27_0;

			[Token(Token = "0x600307B")]
			[Address(RVA = "0x11AD670", Offset = "0x11AD670", VA = "0x11AD670")]
			public <>c()
			{
			}

			[Token(Token = "0x600307C")]
			[Address(RVA = "0x11AD678", Offset = "0x11AD678", VA = "0x11AD678")]
			internal bool <ValidateAll>b__22_0(WireConnectorGroup WireConnectorgroup)
			{
				return default(bool);
			}

			[Token(Token = "0x600307D")]
			[Address(RVA = "0x11AD6E4", Offset = "0x11AD6E4", VA = "0x11AD6E4")]
			internal bool <ValidateAll>b__22_1(WireConnector WireConnector)
			{
				return default(bool);
			}

			[Token(Token = "0x600307E")]
			[Address(RVA = "0x11AD750", Offset = "0x11AD750", VA = "0x11AD750")]
			internal bool <ValidateAll>b__22_2(Wire Wire)
			{
				return default(bool);
			}

			[Token(Token = "0x600307F")]
			[Address(RVA = "0x11AD7BC", Offset = "0x11AD7BC", VA = "0x11AD7BC")]
			internal bool <ValidateAllGroups>b__23_0(WireConnectorGroup WireConnectorgroup)
			{
				return default(bool);
			}

			[Token(Token = "0x6003080")]
			[Address(RVA = "0x11AD828", Offset = "0x11AD828", VA = "0x11AD828")]
			internal bool <ValidateGroup>b__24_0(WireConnector WireConnector)
			{
				return default(bool);
			}

			[Token(Token = "0x6003081")]
			[Address(RVA = "0x11AD894", Offset = "0x11AD894", VA = "0x11AD894")]
			internal bool <ValidateAllWires>b__25_0(Wire Wire)
			{
				return default(bool);
			}

			[Token(Token = "0x6003082")]
			[Address(RVA = "0x11AD900", Offset = "0x11AD900", VA = "0x11AD900")]
			internal bool <ValidateConnector>b__27_0(Wire Wire)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB3C8", Offset = "0x8FB3C8")]
		public static bool debug;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB400", Offset = "0x8FB400")]
		public static List<WireConnectorGroup> Groups;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB438", Offset = "0x8FB438")]
		public static List<WireConnector> Connectors;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB470", Offset = "0x8FB470")]
		public static List<Wire> Wires;

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x11AAD44", Offset = "0x11AAD44", VA = "0x11AAD44")]
		public static WireConnectorGroup CreateGroupObject(GameObject sourceObject)
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x11A8D80", Offset = "0x11A8D80", VA = "0x11A8D80")]
		public static void AddConnectorGroup(WireConnectorGroup group)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x11A8ED4", Offset = "0x11A8ED4", VA = "0x11A8ED4")]
		public static void RemoveConnectorGroup(WireConnectorGroup group)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x11AAF84", Offset = "0x11AAF84", VA = "0x11AAF84")]
		public static void UpdateConnectorGroup(WireConnectorGroup group)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x11AB378", Offset = "0x11AB378", VA = "0x11AB378")]
		public static void DestroyConnectorGroup(WireConnectorGroup group)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x11AB7D0", Offset = "0x11AB7D0", VA = "0x11AB7D0")]
		public static WireConnector CreateConnectorObject()
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x11A8934", Offset = "0x11A8934", VA = "0x11A8934")]
		public static void AddConnector(WireConnector connector)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x11A8A88", Offset = "0x11A8A88", VA = "0x11A8A88")]
		public static void RemoveConnector(WireConnector connector)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x11AB880", Offset = "0x11AB880", VA = "0x11AB880")]
		public static void UpdateConnector(WireConnector connector)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x11AB9CC", Offset = "0x11AB9CC", VA = "0x11AB9CC")]
		public static Wire CreateWireObject(WireConnector connector)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x11ABB58", Offset = "0x11ABB58", VA = "0x11ABB58")]
		public static Wire CreateWireObject(WireType type)
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x11ABB5C", Offset = "0x11ABB5C", VA = "0x11ABB5C")]
		public static Wire CreateWireObject(WireConnector start, WireConnector end, WireType type)
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x11A7ED4", Offset = "0x11A7ED4", VA = "0x11A7ED4")]
		public static void AddWire(Wire wire)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x11A8028", Offset = "0x11A8028", VA = "0x11A8028")]
		public static void RemoveWire(Wire wire)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x11AB2DC", Offset = "0x11AB2DC", VA = "0x11AB2DC")]
		public static void UpdateWire(Wire wire, WireType type, bool updateWind = false)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x11AB670", Offset = "0x11AB670", VA = "0x11AB670")]
		public static void DestroyWire(Wire wire)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x11ABBD4", Offset = "0x11ABBD4", VA = "0x11ABBD4")]
		public static void UpdateAllWires(bool updateWind = false)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x11ABF30", Offset = "0x11ABF30", VA = "0x11ABF30")]
		public static void UpdateWireWind()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x11ABF90", Offset = "0x11ABF90", VA = "0x11ABF90")]
		public static void ValidateAll()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x11ACFAC", Offset = "0x11ACFAC", VA = "0x11ACFAC")]
		public static void ValidateAllGroups()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x11AC69C", Offset = "0x11AC69C", VA = "0x11AC69C")]
		private static void ValidateGroup(WireConnectorGroup group)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x11ACD6C", Offset = "0x11ACD6C", VA = "0x11ACD6C")]
		private static void ValidateAllWires()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x11ACB38", Offset = "0x11ACB38", VA = "0x11ACB38")]
		private static void ValidateWire(Wire wire)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x11AC8A8", Offset = "0x11AC8A8", VA = "0x11AC8A8")]
		private static void ValidateConnector(WireConnector connector)
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8F58AC", Offset = "0x8F58AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8F58AC", Offset = "0x8F58AC")]
	public class WireType : ScriptableObject
	{
		[Token(Token = "0x200068D")]
		public enum GeometryType
		{
			[Token(Token = "0x40022F5")]
			Line,
			[Token(Token = "0x40022F6")]
			Mesh
		}

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB4A8", Offset = "0x8FB4A8")]
		public GeometryType geometryType;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB4E0", Offset = "0x8FB4E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB4E0", Offset = "0x8FB4E0")]
		public float pointsPerMeter;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB538", Offset = "0x8FB538")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB538", Offset = "0x8FB538")]
		public int radialSegments;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB58C", Offset = "0x8FB58C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB58C", Offset = "0x8FB58C")]
		public float weight;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB5E4", Offset = "0x8FB5E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB5E4", Offset = "0x8FB5E4")]
		public float diameter;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LineTextureMode textureMode;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB63C", Offset = "0x8FB63C")]
		public float tiling;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask layer;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string tag;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB674", Offset = "0x8FB674")]
		public bool enableTreeMask;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB6AC", Offset = "0x8FB6AC")]
		public float treeMaskWidth;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB6C8", Offset = "0x8FB6C8")]
		public bool enableLargeObjectMask;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB700", Offset = "0x8FB700")]
		public float largeObjectMaskWidth;

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x11AD96C", Offset = "0x11AD96C", VA = "0x11AD96C")]
		public WireType()
		{
		}
	}
}
namespace VRConsole
{
	[Token(Token = "0x20001E9")]
	public class VRConsoleConsoleMessage : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image messageIcon_Image;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text messageText_Text;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button showStackTrace_Button;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite infoSprite;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite warningSprite;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite errorSprite;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color infoColor;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color warningColor;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color errorColor;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LogType messageLogType;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string thisMessageStackTrace;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string wholeMessage;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool hovering;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeHovered;

		[Token(Token = "0x4000DE7")]
		private const float hoverTimeRequiredToShowWholeMessage = 0.5f;

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xAE1204", Offset = "0xAE1204", VA = "0xAE1204")]
		private void Update()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xAE13E8", Offset = "0xAE13E8", VA = "0xAE13E8")]
		public void SetMessage(string message, string stackTrace, LogType messageType)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xAE1634", Offset = "0xAE1634", VA = "0xAE1634")]
		private void ShowStackTraceOnConsole()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xAE1704", Offset = "0xAE1704", VA = "0xAE1704", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xAE1710", Offset = "0xAE1710", VA = "0xAE1710", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xAE17C8", Offset = "0xAE17C8", VA = "0xAE17C8")]
		public VRConsoleConsoleMessage()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class VRConsoleExampleSceneErrorProducer : MonoBehaviour
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LogType logType;

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xAE17D0", Offset = "0xAE17D0", VA = "0xAE17D0")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xAE18DC", Offset = "0xAE18DC", VA = "0xAE18DC")]
		public VRConsoleExampleSceneErrorProducer()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	[ExecuteInEditMode]
	public class VRConsoleMessageUIResizer : MonoBehaviour
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform RootCanvasRectTransform;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridLayoutGroup LayoutGroup;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoxCollider ConsoleMessageBoxCollider;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform StackTraceTextRectTransform;

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xAE18E4", Offset = "0xAE18E4", VA = "0xAE18E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xAE1AD4", Offset = "0xAE1AD4", VA = "0xAE1AD4")]
		public VRConsoleMessageUIResizer()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class VRConsoleRuntimeConsole : MonoBehaviour
	{
		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7DA4", Offset = "0x8F7DA4")]
		private sealed class <SetStackTraceContentSizeDeltaAfterOneFrame>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleRuntimeConsole <>4__this;

			[Token(Token = "0x1700051B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003086")]
				[Address(RVA = "0xAE2FF4", Offset = "0xAE2FF4", VA = "0xAE2FF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003088")]
				[Address(RVA = "0xAE3064", Offset = "0xAE3064", VA = "0xAE3064", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003083")]
			[Address(RVA = "0xAE2A30", Offset = "0xAE2A30", VA = "0xAE2A30")]
			[DebuggerHidden]
			public <SetStackTraceContentSizeDeltaAfterOneFrame>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6003084")]
			[Address(RVA = "0xAE2E98", Offset = "0xAE2E98", VA = "0xAE2E98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003085")]
			[Address(RVA = "0xAE2E9C", Offset = "0xAE2E9C", VA = "0xAE2E9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003087")]
			[Address(RVA = "0xAE2FFC", Offset = "0xAE2FFC", VA = "0xAE2FFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7DB4", Offset = "0x8F7DB4")]
		private sealed class <SetWholeMessageBackgroundSizeDeltaAfterOneFrame>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleRuntimeConsole <>4__this;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600308C")]
				[Address(RVA = "0xAE3230", Offset = "0xAE3230", VA = "0xAE3230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600308E")]
				[Address(RVA = "0xAE32A0", Offset = "0xAE32A0", VA = "0xAE32A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003089")]
			[Address(RVA = "0xAE2A5C", Offset = "0xAE2A5C", VA = "0xAE2A5C")]
			[DebuggerHidden]
			public <SetWholeMessageBackgroundSizeDeltaAfterOneFrame>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x600308A")]
			[Address(RVA = "0xAE306C", Offset = "0xAE306C", VA = "0xAE306C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600308B")]
			[Address(RVA = "0xAE3070", Offset = "0xAE3070", VA = "0xAE3070", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600308D")]
			[Address(RVA = "0xAE3238", Offset = "0xAE3238", VA = "0xAE3238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FB71C", Offset = "0x8FB71C")]
		public bool JumpToNewestLog;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8FB754", Offset = "0x8FB754")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FB754", Offset = "0x8FB754")]
		public bool ShowInfos;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ShowWarnings;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool ShowErrors;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform scrollViewContent;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GameObject consoleMessagePrefab;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public RectTransform messagesContent_RectTransform;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Scrollbar MessagesScrollBar;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RectTransform stackTraceContent_RectTransform;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public RectTransform stackTraceText_RectTransform;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Text stackTrace_Text;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Toggle showInfoMessagesToggle;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Toggle showWarningMessagesToggle;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Toggle showErrorMessagesToggle;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Text infoMessagesAmount_Text;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Text warningMessagesAmount_Text;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Text errorMessagesAmount_Text;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Image infoToggleEnabledOverlay_Image;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Image warningToggleEnabledOverlay_Image;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Image errorToggleEnabledOverlay_Image;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Button messagesUp_Button;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Button messagesDown_Button;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Button stackTraceUp_Button;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Button stackTraceDown_Button;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Scrollbar messages_ScrollBar;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Scrollbar stackTrace_ScrollBar;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Image WholeMessageBackgroundImage;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Text WholeMessageText;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<string> consoleMessages;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<string> messageStackTraces;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<LogType> consoleMessageTypes;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<GameObject> instantiatedMessageObjects;

		[Token(Token = "0x4000E0D")]
		private const float messagesScrollBarIncrement = 0.02f;

		[Token(Token = "0x4000E0E")]
		private const float scrollViewHeight = 90f;

		[Token(Token = "0x4000E0F")]
		private const float wholeMessageBackGroundExpandConstant = 5f;

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xAE1ADC", Offset = "0xAE1ADC", VA = "0xAE1ADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xAE1ED0", Offset = "0xAE1ED0", VA = "0xAE1ED0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xAE1F44", Offset = "0xAE1F44", VA = "0xAE1F44")]
		private void HandleLogMessage(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xAE2020", Offset = "0xAE2020", VA = "0xAE2020")]
		private void InstantiateNewMessageToConsole(string message, string messageTrace, LogType logtype)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xAE1BD8", Offset = "0xAE1BD8", VA = "0xAE1BD8")]
		private void BindListeners()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xAE261C", Offset = "0xAE261C", VA = "0xAE261C")]
		public void ClearWholeLog()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xAE279C", Offset = "0xAE279C", VA = "0xAE279C")]
		public void UpdateWholeLog()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xAE2418", Offset = "0xAE2418", VA = "0xAE2418")]
		private void UpdateConsoleMessageColliders()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xAE2230", Offset = "0xAE2230", VA = "0xAE2230")]
		public void UpdateLogTextFieldAmounts()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xAE16A0", Offset = "0xAE16A0", VA = "0xAE16A0")]
		public void SetStackTraceText(string stackTrace)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xAE177C", Offset = "0xAE177C", VA = "0xAE177C")]
		public void HideWholeMessageTextAndBG()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xAE12FC", Offset = "0xAE12FC", VA = "0xAE12FC")]
		public void SetAndShowWholeDebugMessage(string wholeMessage, Vector3 messageLocation)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xAE2948", Offset = "0xAE2948", VA = "0xAE2948")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D62C", Offset = "0x90D62C")]
		private IEnumerator SetStackTraceContentSizeDeltaAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xAE29BC", Offset = "0xAE29BC", VA = "0xAE29BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D690", Offset = "0x90D690")]
		private IEnumerator SetWholeMessageBackgroundSizeDeltaAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xAE2A88", Offset = "0xAE2A88", VA = "0xAE2A88")]
		public void ShowErrorMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xAE2AF0", Offset = "0xAE2AF0", VA = "0xAE2AF0")]
		public void ShowWarningMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xAE2B58", Offset = "0xAE2B58", VA = "0xAE2B58")]
		public void ShowInfoMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xAE2BC0", Offset = "0xAE2BC0", VA = "0xAE2BC0")]
		public void MoveMessagesUpButtonPressed()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xAE2C3C", Offset = "0xAE2C3C", VA = "0xAE2C3C")]
		public void MoveMessagesDownButtonPressed()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xAE2CB8", Offset = "0xAE2CB8", VA = "0xAE2CB8")]
		public void StackTraceUpButtonPressed()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xAE2D34", Offset = "0xAE2D34", VA = "0xAE2D34")]
		public void StackTraceDownButtonPressed()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xAE2DB0", Offset = "0xAE2DB0", VA = "0xAE2DB0")]
		public VRConsoleRuntimeConsole()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class VRConsoleUICollisionInteractor : MonoBehaviour
	{
		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7DC4", Offset = "0x8F7DC4")]
		private sealed class <TickSubmit>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleUICollisionInteractor <>4__this;

			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PointerEventData <pointData>5__2;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003092")]
				[Address(RVA = "0xAE394C", Offset = "0xAE394C", VA = "0xAE394C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003094")]
				[Address(RVA = "0xAE39BC", Offset = "0xAE39BC", VA = "0xAE39BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600308F")]
			[Address(RVA = "0xAE3740", Offset = "0xAE3740", VA = "0xAE3740")]
			[DebuggerHidden]
			public <TickSubmit>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003090")]
			[Address(RVA = "0xAE377C", Offset = "0xAE377C", VA = "0xAE377C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003091")]
			[Address(RVA = "0xAE3780", Offset = "0xAE3780", VA = "0xAE3780", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003093")]
			[Address(RVA = "0xAE3954", Offset = "0xAE3954", VA = "0xAE3954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float submitTickRate;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool tickIfTriggered;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float submitDelaytime;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xAE32A8", Offset = "0xAE32A8", VA = "0xAE32A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xAE32BC", Offset = "0xAE32BC", VA = "0xAE32BC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xAE355C", Offset = "0xAE355C", VA = "0xAE355C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xAE34E8", Offset = "0xAE34E8", VA = "0xAE34E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D6F4", Offset = "0x90D6F4")]
		private IEnumerator TickSubmit()
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xAE376C", Offset = "0xAE376C", VA = "0xAE376C")]
		public VRConsoleUICollisionInteractor()
		{
		}
	}
}
namespace ViveGrip.TypeReferences
{
	[Token(Token = "0x20001EE")]
	public enum ClassGrouping
	{
		[Token(Token = "0x4000E14")]
		None,
		[Token(Token = "0x4000E15")]
		ByNamespace,
		[Token(Token = "0x4000E16")]
		ByNamespaceFlat,
		[Token(Token = "0x4000E17")]
		ByAddComponentMenu
	}
	[Token(Token = "0x20001EF")]
	public abstract class ClassTypeConstraintAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ClassGrouping _grouping;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _allowAbstract;

		[Token(Token = "0x17000120")]
		public ClassGrouping Grouping
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xAE4034", Offset = "0xAE4034", VA = "0xAE4034")]
			get
			{
				return default(ClassGrouping);
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xAE403C", Offset = "0xAE403C", VA = "0xAE403C")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public bool AllowAbstract
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xAE4044", Offset = "0xAE4044", VA = "0xAE4044")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xAE404C", Offset = "0xAE404C", VA = "0xAE404C")]
			set
			{
			}
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xAE3E84", Offset = "0xAE3E84", VA = "0xAE3E84", Slot = "7")]
		public virtual bool IsConstraintSatisfied(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xAE3D64", Offset = "0xAE3D64", VA = "0xAE3D64")]
		protected ClassTypeConstraintAttribute()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8F5928", Offset = "0x8F5928")]
	public sealed class ClassExtendsAttribute : ClassTypeConstraintAttribute
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB924", Offset = "0x8FB924")]
		private Type <BaseType>k__BackingField;

		[Token(Token = "0x17000122")]
		public Type BaseType
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xAE3DB0", Offset = "0xAE3DB0", VA = "0xAE3DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D758", Offset = "0x90D758")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xAE3DA8", Offset = "0xAE3DA8", VA = "0xAE3DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D768", Offset = "0x90D768")]
			private set
			{
			}
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xAE3D54", Offset = "0xAE3D54", VA = "0xAE3D54")]
		public ClassExtendsAttribute()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xAE3D74", Offset = "0xAE3D74", VA = "0xAE3D74")]
		public ClassExtendsAttribute(Type baseType)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xAE3DB8", Offset = "0xAE3DB8", VA = "0xAE3DB8", Slot = "7")]
		public override bool IsConstraintSatisfied(Type type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8F5964", Offset = "0x8F5964")]
	public sealed class ClassImplementsAttribute : ClassTypeConstraintAttribute
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB934", Offset = "0x8FB934")]
		private Type <InterfaceType>k__BackingField;

		[Token(Token = "0x17000123")]
		public Type InterfaceType
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xAE3F1C", Offset = "0xAE3F1C", VA = "0xAE3F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D778", Offset = "0x90D778")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xAE3F14", Offset = "0xAE3F14", VA = "0xAE3F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D788", Offset = "0x90D788")]
			private set
			{
			}
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xAE3ED0", Offset = "0xAE3ED0", VA = "0xAE3ED0")]
		public ClassImplementsAttribute()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xAE3EE0", Offset = "0xAE3EE0", VA = "0xAE3EE0")]
		public ClassImplementsAttribute(Type interfaceType)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xAE3F24", Offset = "0xAE3F24", VA = "0xAE3F24", Slot = "7")]
		public override bool IsConstraintSatisfied(Type type)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20001F2")]
	public sealed class ClassTypeReference : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _classRef;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type _type;

		[Token(Token = "0x17000124")]
		public Type Type
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0xAE44D0", Offset = "0xAE44D0", VA = "0xAE44D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xAE4258", Offset = "0xAE4258", VA = "0xAE4258")]
			set
			{
			}
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xAE4058", Offset = "0xAE4058", VA = "0xAE4058")]
		public static string GetClassRef(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xAE4178", Offset = "0xAE4178", VA = "0xAE4178")]
		public ClassTypeReference()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xAE4180", Offset = "0xAE4180", VA = "0xAE4180")]
		public ClassTypeReference(string assemblyQualifiedClassName)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xAE4390", Offset = "0xAE4390", VA = "0xAE4390")]
		public ClassTypeReference(Type type)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xAE43C0", Offset = "0xAE43C0", VA = "0xAE43C0", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xAE44CC", Offset = "0xAE44CC", VA = "0xAE44CC", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xAE44D8", Offset = "0xAE44D8", VA = "0xAE44D8")]
		public static implicit operator string(ClassTypeReference typeReference)
		{
			return null;
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xAE4500", Offset = "0xAE4500", VA = "0xAE4500")]
		public static implicit operator Type(ClassTypeReference typeReference)
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xAE4528", Offset = "0xAE4528", VA = "0xAE4528")]
		public static implicit operator ClassTypeReference(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xAE4594", Offset = "0xAE4594", VA = "0xAE4594", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace DigitalRuby.RainMaker
{
	[Token(Token = "0x20001F3")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x2000691")]
		private enum RotationAxes
		{
			[Token(Token = "0x4002302")]
			MouseXAndY,
			[Token(Token = "0x4002303")]
			MouseX,
			[Token(Token = "0x4002304")]
			MouseY
		}

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RainScript RainScript;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle MouseLookToggle;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle FlashlightToggle;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider RainSlider;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light Flashlight;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Sun;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RotationAxes axes;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float sensitivityX;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float sensitivityY;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float minimumX;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float maximumX;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float minimumY;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float maximumY;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float rotationX;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float rotationY;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion originalRotation;

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xCBAE08", Offset = "0xCBAE08", VA = "0xCBAE08")]
		private void UpdateRain()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xCBAF28", Offset = "0xCBAF28", VA = "0xCBAF28")]
		private void UpdateMovement()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xCBB110", Offset = "0xCBB110", VA = "0xCBB110")]
		private void UpdateMouseLook()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xCBB624", Offset = "0xCBB624", VA = "0xCBB624")]
		public void RainSliderChanged(float val)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xCBB65C", Offset = "0xCBB65C", VA = "0xCBB65C")]
		public void MouseLookChanged(bool val)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xCBB694", Offset = "0xCBB694", VA = "0xCBB694")]
		public void FlashlightChanged(bool val)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xCBB6FC", Offset = "0xCBB6FC", VA = "0xCBB6FC")]
		public void DawnDuskSliderChanged(float val)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xCBB7DC", Offset = "0xCBB7DC", VA = "0xCBB7DC")]
		public void FollowCameraChanged(bool val)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xCBB810", Offset = "0xCBB810", VA = "0xCBB810")]
		private void Start()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xCBB8B4", Offset = "0xCBB8B4", VA = "0xCBB8B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xCBB574", Offset = "0xCBB574", VA = "0xCBB574")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xCBB8E0", Offset = "0xCBB8E0", VA = "0xCBB8E0")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class DemoScript2D : MonoBehaviour
	{
		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider RainSlider;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RainScript2D RainScript;

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xCBB900", Offset = "0xCBB900", VA = "0xCBB900")]
		private void Start()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xCBB978", Offset = "0xCBB978", VA = "0xCBB978")]
		private void Update()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xCBBB50", Offset = "0xCBBB50", VA = "0xCBBB50")]
		public void RainSliderChanged(float val)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xCBBB88", Offset = "0xCBBB88", VA = "0xCBBB88")]
		public void CollisionToggleChanged(bool val)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xCBBBC4", Offset = "0xCBBBC4", VA = "0xCBBBC4")]
		public DemoScript2D()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class DemoScriptStartRainOnSpaceBar : MonoBehaviour
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseRainScript RainScript;

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xCBBBCC", Offset = "0xCBBBCC", VA = "0xCBBBCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xCBBC58", Offset = "0xCBBC58", VA = "0xCBBC58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xCBBD60", Offset = "0xCBBD60", VA = "0xCBBD60")]
		public DemoScriptStartRainOnSpaceBar()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class BaseRainScript : MonoBehaviour
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB954", Offset = "0x8FB954")]
		public Camera Camera;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB98C", Offset = "0x8FB98C")]
		public bool FollowCamera;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB9C4", Offset = "0x8FB9C4")]
		public AudioClip RainSoundLight;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB9FC", Offset = "0x8FB9FC")]
		public AudioClip RainSoundMedium;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBA34", Offset = "0x8FBA34")]
		public AudioClip RainSoundHeavy;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBA6C", Offset = "0x8FBA6C")]
		public AudioMixerGroup RainSoundAudioMixer;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBAA4", Offset = "0x8FBAA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FBAA4", Offset = "0x8FBAA4")]
		public float RainIntensity;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBAF8", Offset = "0x8FBAF8")]
		public ParticleSystem RainFallParticleSystem;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBB30", Offset = "0x8FBB30")]
		public ParticleSystem RainExplosionParticleSystem;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBB68", Offset = "0x8FBB68")]
		public ParticleSystem RainMistParticleSystem;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBBA0", Offset = "0x8FBBA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FBBA0", Offset = "0x8FBBA0")]
		public float RainMistThreshold;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBBF4", Offset = "0x8FBBF4")]
		public AudioClip WindSound;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBC2C", Offset = "0x8FBC2C")]
		public float WindSoundVolumeModifier;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBC64", Offset = "0x8FBC64")]
		public WindZone WindZone;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBC9C", Offset = "0x8FBC9C")]
		public Vector3 WindSpeedRange;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBCD4", Offset = "0x8FBCD4")]
		public Vector2 WindChangeInterval;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBD0C", Offset = "0x8FBD0C")]
		public bool EnableWind;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected LoopingAudioSource audioSourceRainLight;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected LoopingAudioSource audioSourceRainMedium;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected LoopingAudioSource audioSourceRainHeavy;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected LoopingAudioSource audioSourceRainCurrent;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected LoopingAudioSource audioSourceWind;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Material rainMaterial;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Material rainExplosionMaterial;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Material rainMistMaterial;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float lastRainIntensityValue;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float nextWindTime;

		[Token(Token = "0x17000125")]
		protected virtual bool UseRainMistSoftParticles
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xCBAD58", Offset = "0xCBAD58", VA = "0xCBAD58", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xCB9988", Offset = "0xCB9988", VA = "0xCB9988")]
		private void UpdateWind()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xCBA01C", Offset = "0xCBA01C", VA = "0xCBA01C")]
		private void CheckForRainChange()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xCBA4E4", Offset = "0xCBA4E4", VA = "0xCBA4E4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xCBAB70", Offset = "0xCBAB70", VA = "0xCBAB70", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xCBABDC", Offset = "0xCBABDC", VA = "0xCBABDC", Slot = "6")]
		protected virtual float RainFallEmissionRate()
		{
			return default(float);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xCBAC98", Offset = "0xCBAC98", VA = "0xCBAC98", Slot = "7")]
		protected virtual float MistEmissionRate()
		{
			return default(float);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xCBAD60", Offset = "0xCBAD60", VA = "0xCBAD60")]
		public BaseRainScript()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class LoopingAudioSource
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBD44", Offset = "0x8FBD44")]
		private AudioSource <AudioSource>k__BackingField;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBD54", Offset = "0x8FBD54")]
		private float <TargetVolume>k__BackingField;

		[Token(Token = "0x17000126")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0xCBBD68", Offset = "0xCBBD68", VA = "0xCBBD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D798", Offset = "0x90D798")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001281")]
			[Address(RVA = "0xCBBD70", Offset = "0xCBBD70", VA = "0xCBBD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D7A8", Offset = "0x90D7A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public float TargetVolume
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0xCBBD78", Offset = "0xCBBD78", VA = "0xCBBD78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D7B8", Offset = "0x90D7B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0xCBBD80", Offset = "0xCBBD80", VA = "0xCBBD80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D7C8", Offset = "0x90D7C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xCBA9D4", Offset = "0xCBA9D4", VA = "0xCBA9D4")]
		public LoopingAudioSource(MonoBehaviour script, AudioClip clip, AudioMixerGroup mixer)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xCB9E64", Offset = "0xCB9E64", VA = "0xCB9E64")]
		public void Play(float targetVolume)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xCB9EEC", Offset = "0xCB9EEC", VA = "0xCB9EEC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xCB9EF4", Offset = "0xCB9EF4", VA = "0xCB9EF4")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class RainCollision : MonoBehaviour
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color32 color;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem RainExplosion;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem RainParticleSystem;

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xCBBD88", Offset = "0xCBBD88", VA = "0xCBBD88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xCBBD8C", Offset = "0xCBBD8C", VA = "0xCBBD8C")]
		private void Update()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xCBBD90", Offset = "0xCBBD90", VA = "0xCBBD90")]
		private void Emit(ParticleSystem p, ref Vector3 pos)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xCBBF98", Offset = "0xCBBF98", VA = "0xCBBF98")]
		private void OnParticleCollision(GameObject obj)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xCBC100", Offset = "0xCBC100", VA = "0xCBC100")]
		public RainCollision()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class RainScript : BaseRainScript
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBD64", Offset = "0x8FBD64")]
		public float RainHeight;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBD9C", Offset = "0x8FBD9C")]
		public float RainForwardOffset;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBDD4", Offset = "0x8FBDD4")]
		public float RainMistHeight;

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xCBC1E4", Offset = "0xCBC1E4", VA = "0xCBC1E4")]
		private void UpdateRain()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xCBC620", Offset = "0xCBC620", VA = "0xCBC620", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xCBC624", Offset = "0xCBC624", VA = "0xCBC624", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xCBC648", Offset = "0xCBC648", VA = "0xCBC648")]
		public RainScript()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class RainScript2D : BaseRainScript
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color32 explosionColor;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float cameraMultiplier;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Bounds visibleBounds;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float yOffset;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float visibleWorldWidth;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float initialEmissionRain;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector2 initialStartSpeedRain;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector2 initialStartSizeRain;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector2 initialStartSpeedMist;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector2 initialStartSizeMist;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector2 initialStartSpeedExplosion;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector2 initialStartSizeExplosion;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBE0C", Offset = "0x8FBE0C")]
		public float RainHeightMultiplier;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBE44", Offset = "0x8FBE44")]
		public float RainWidthMultiplier;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBE7C", Offset = "0x8FBE7C")]
		public LayerMask CollisionMask;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBEB4", Offset = "0x8FBEB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FBEB4", Offset = "0x8FBEB4")]
		public float CollisionLifeTimeRain;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBF08", Offset = "0x8FBF08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FBF08", Offset = "0x8FBF08")]
		public float RainMistCollisionMultiplier;

		[Token(Token = "0x17000128")]
		protected override bool UseRainMistSoftParticles
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xCBDEA8", Offset = "0xCBDEA8", VA = "0xCBDEA8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xCBC660", Offset = "0xCBC660", VA = "0xCBC660")]
		private void EmitExplosion(ref Vector3 pos)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xCBC87C", Offset = "0xCBC87C", VA = "0xCBC87C")]
		private void TransformParticleSystem(ParticleSystem p, Vector2 initialStartSpeed, Vector2 initialStartSize)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xCBCB6C", Offset = "0xCBCB6C", VA = "0xCBCB6C")]
		private void CheckForCollisionsRainParticles()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xCBD2E0", Offset = "0xCBD2E0", VA = "0xCBD2E0")]
		private void CheckForCollisionsMistParticles()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xCBD738", Offset = "0xCBD738", VA = "0xCBD738", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xCBDCA8", Offset = "0xCBDCA8", VA = "0xCBDCA8", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xCBDE98", Offset = "0xCBDE98", VA = "0xCBDE98", Slot = "6")]
		protected override float RainFallEmissionRate()
		{
			return default(float);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xCBDEB0", Offset = "0xCBDEB0", VA = "0xCBDEB0")]
		public RainScript2D()
		{
		}
	}
}
namespace PhysSound
{
	[Token(Token = "0x20001FB")]
	public abstract class PhysSoundBase : MonoBehaviour
	{
		[Token(Token = "0x600129C")]
		public abstract PhysSoundMaterial GetPhysSoundMaterial(Vector3 contactPoint);

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xA9A79C", Offset = "0xA9A79C", VA = "0xA9A79C")]
		protected PhysSoundBase()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class PhysSoundMaterial : ScriptableObject
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MaterialTypeKey;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int FallbackTypeIndex;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int FallbackTypeKey;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Range RelativeVelocityThreshold;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float PitchRandomness;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float SlidePitchMod;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float SlideVolMultiplier;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ImpactNormalBias;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ScaleMod;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask CollisionMask;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseCollisionVelocity;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool ScaleImpactVolume;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<PhysSoundAudioSet> AudioSets;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, PhysSoundAudioSet> audioSetDic;

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xA9A804", Offset = "0xA9A804", VA = "0xA9A804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xA9AD90", Offset = "0xA9AD90", VA = "0xA9AD90")]
		public AudioClip GetImpactAudio(GameObject otherObject, Vector3 relativeVel, Vector3 norm, Vector3 contact, int layer = -1)
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xA9A144", Offset = "0xA9A144", VA = "0xA9A144")]
		public float GetSlideVolume(Vector3 relativeVel, Vector3 norm)
		{
			return default(float);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xA9B098", Offset = "0xA9B098", VA = "0xA9B098")]
		public float GetImpactVolume(Vector3 relativeVel, Vector3 norm)
		{
			return default(float);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xA9A32C", Offset = "0xA9A32C", VA = "0xA9A32C")]
		public float GetRandomPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xA9A2C8", Offset = "0xA9A2C8", VA = "0xA9A2C8")]
		public float GetScaleModPitch(Vector3 scale)
		{
			return default(float);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xA9B29C", Offset = "0xA9B29C", VA = "0xA9B29C")]
		public float GetScaleModVolume(Vector3 scale)
		{
			return default(float);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xA9B300", Offset = "0xA9B300", VA = "0xA9B300")]
		public bool HasAudioSet(int keyIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xA99D00", Offset = "0xA99D00", VA = "0xA99D00")]
		public PhysSoundAudioSet GetAudioSet(int keyIndex)
		{
			return null;
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xA9B43C", Offset = "0xA9B43C", VA = "0xA9B43C")]
		public string[] GetFallbackAudioSets()
		{
			return null;
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xA9A0E8", Offset = "0xA9A0E8", VA = "0xA9A0E8")]
		public bool CollideWith(GameObject g)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xA9B618", Offset = "0xA9B618", VA = "0xA9B618")]
		public PhysSoundMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class PhysSoundAudioSet
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Key;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioClip> Impacts;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Slide;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xA9A5F0", Offset = "0xA9A5F0", VA = "0xA9A5F0")]
		public AudioClip GetImpact(float vel, bool random)
		{
			return null;
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xA9A71C", Offset = "0xA9A71C", VA = "0xA9A71C")]
		public bool CompareKeyIndex(int k)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xA9A72C", Offset = "0xA9A72C", VA = "0xA9A72C")]
		public PhysSoundAudioSet()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F59A0", Offset = "0x8F59A0")]
	public class PhysSoundObject : PhysSoundBase
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysSoundMaterial SoundMaterial;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AutoCreateSources;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool PlayClipAtPoint;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool HitsTriggers;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource ImpactAudio;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<PhysSoundAudioContainer> AudioContainers;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float baseImpactVol;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float baseImpactPitch;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, PhysSoundAudioContainer> _audioContainersDic;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevVelocity;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _setPrevVelocity;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _prevPosition;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _kinematicVelocity;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion _prevRotation;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _kinematicAngularVelocity;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _lastFrame;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody _r;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Rigidbody2D _r2D;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int frames;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 contactNormal;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 contactPoint;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 relativeVelocity;

		[Token(Token = "0x17000129")]
		private Vector3 TotalKinematicVelocity
		{
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xA9C648", Offset = "0xA9C648", VA = "0xA9C648")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xA9B6B8", Offset = "0xA9B6B8", VA = "0xA9B6B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xA9BE2C", Offset = "0xA9BE2C", VA = "0xA9BE2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xA9B740", Offset = "0xA9B740", VA = "0xA9B740")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xA9C0D4", Offset = "0xA9C0D4", VA = "0xA9C0D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xA9C430", Offset = "0xA9C430", VA = "0xA9C430")]
		public void SetEnabled(bool enable)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xA9C640", Offset = "0xA9C640", VA = "0xA9C640", Slot = "4")]
		public override PhysSoundMaterial GetPhysSoundMaterial(Vector3 contactPoint)
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xA9C6F0", Offset = "0xA9C6F0", VA = "0xA9C6F0")]
		private void playImpactSound(GameObject otherObject, Vector3 relativeVelocity, Vector3 normal, Vector3 contactPoint)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xA9CD6C", Offset = "0xA9CD6C", VA = "0xA9CD6C")]
		private void setSlideTargetVolumes(GameObject otherObject, Vector3 relativeVelocity, Vector3 normal, Vector3 contactPoint, bool exit)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xA9D5D4", Offset = "0xA9D5D4", VA = "0xA9D5D4")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xA9D840", Offset = "0xA9D840", VA = "0xA9D840")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xA9DBF8", Offset = "0xA9DBF8", VA = "0xA9DBF8")]
		private void OnCollisionExit()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xA9DD84", Offset = "0xA9DD84", VA = "0xA9DD84")]
		private void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xA9DF38", Offset = "0xA9DF38", VA = "0xA9DF38")]
		private void OnTriggerStay(Collider c)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xA9E0F8", Offset = "0xA9E0F8", VA = "0xA9E0F8")]
		private void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xA9E2B8", Offset = "0xA9E2B8", VA = "0xA9E2B8")]
		private void OnCollisionEnter2D(Collision2D c)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xA9E514", Offset = "0xA9E514", VA = "0xA9E514")]
		private void OnCollisionStay2D(Collision2D c)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xA9E970", Offset = "0xA9E970", VA = "0xA9E970")]
		private void OnCollisionExit2D(Collision2D c)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xA9EB84", Offset = "0xA9EB84", VA = "0xA9EB84")]
		private void OnTriggerEnter2D(Collider2D c)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xA9ED30", Offset = "0xA9ED30", VA = "0xA9ED30")]
		private void OnTriggerStay2D(Collider2D c)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xA9EEE8", Offset = "0xA9EEE8", VA = "0xA9EEE8")]
		private void OnTriggerExit2D(Collider2D c)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xA9F0A0", Offset = "0xA9F0A0", VA = "0xA9F0A0")]
		public bool HasAudioContainer(int keyIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xA9F1DC", Offset = "0xA9F1DC", VA = "0xA9F1DC")]
		public void AddAudioContainer(int keyIndex)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xA9F26C", Offset = "0xA9F26C", VA = "0xA9F26C")]
		public void RemoveAudioContainer(int keyIndex)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xA9F370", Offset = "0xA9F370", VA = "0xA9F370")]
		public PhysSoundObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FF")]
	public class PhysSoundAudioContainer
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int KeyIndex;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource SlideAudio;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhysSoundMaterial _mat;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _targetVolume;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _baseVol;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _basePitch;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _basePitchRand;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _lastFrame;

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xA99B74", Offset = "0xA99B74", VA = "0xA99B74")]
		public PhysSoundAudioContainer(int k)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xA99BA0", Offset = "0xA99BA0", VA = "0xA99BA0")]
		public void Initialize(PhysSoundMaterial m)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xA99E38", Offset = "0xA99E38", VA = "0xA99E38")]
		public void SetTargetVolumeAndPitch(GameObject parentObject, GameObject otherObject, Vector3 relativeVelocity, Vector3 normal, bool exit, float mod = 1f)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xA9A33C", Offset = "0xA9A33C", VA = "0xA9A33C")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xA9A48C", Offset = "0xA9A48C", VA = "0xA9A48C")]
		public bool CompareKeyIndex(int k)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xA9A49C", Offset = "0xA9A49C", VA = "0xA9A49C")]
		public void Disable()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xA9A554", Offset = "0xA9A554", VA = "0xA9A554")]
		public void Enable()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class PhysSoundTempAudio : MonoBehaviour
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xA9F3E8", Offset = "0xA9F3E8", VA = "0xA9F3E8")]
		public void Initialize(PhysSoundTempAudioPool pool)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xA9F4D0", Offset = "0xA9F4D0", VA = "0xA9F4D0")]
		public void PlayClip(AudioClip clip, Vector3 point, AudioSource template, float volume, float pitch)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xA9FB7C", Offset = "0xA9FB7C", VA = "0xA9FB7C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xA9FC90", Offset = "0xA9FC90", VA = "0xA9FC90")]
		public PhysSoundTempAudio()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class PhysSoundTempAudioPool : MonoBehaviour
	{
		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int TempAudioPoolSize;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static PhysSoundTempAudioPool Instance;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhysSoundTempAudio[] audioSources;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastAvailable;

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xA9BFD0", Offset = "0xA9BFD0", VA = "0xA9BFD0")]
		public static void Create()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xA9BEFC", Offset = "0xA9BEFC", VA = "0xA9BEFC")]
		public static AudioSource GetAudioSourceCopy(AudioSource template, GameObject g)
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xA9F64C", Offset = "0xA9F64C", VA = "0xA9F64C")]
		public static void GetAudioSourceCopy(AudioSource template, AudioSource target)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xA9FC98", Offset = "0xA9FC98", VA = "0xA9FC98")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xA9CBC8", Offset = "0xA9CBC8", VA = "0xA9CBC8")]
		public void PlayClip(AudioClip clip, Vector3 point, AudioSource template, float volume, float pitch)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xA9FE40", Offset = "0xA9FE40", VA = "0xA9FE40")]
		public PhysSoundTempAudioPool()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F59D8", Offset = "0x8F59D8")]
	public class PhysSoundTerrain : PhysSoundBase
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain Terrain;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PhysSoundMaterial> SoundMaterials;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, PhysSoundComposition> compDic;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TerrainData terrainData;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 terrainPos;

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xA9FE9C", Offset = "0xA9FE9C", VA = "0xA9FE9C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xAA00BC", Offset = "0xAA00BC", VA = "0xAA00BC", Slot = "4")]
		public override PhysSoundMaterial GetPhysSoundMaterial(Vector3 contactPoint)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xA9D2D4", Offset = "0xA9D2D4", VA = "0xA9D2D4")]
		public Dictionary<int, PhysSoundComposition> GetComposition(Vector3 contactPoint)
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xAA02B0", Offset = "0xAA02B0", VA = "0xAA02B0")]
		private float[] getTextureMix(Vector3 worldPos)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xAA01F8", Offset = "0xAA01F8", VA = "0xAA01F8")]
		private int getDominantTexture(Vector3 worldPos)
		{
			return default(int);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xAA04E0", Offset = "0xAA04E0", VA = "0xAA04E0")]
		public PhysSoundTerrain()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class PhysSoundComposition
	{
		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int KeyIndex;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Value;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Count;

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xA9A7A4", Offset = "0xA9A7A4", VA = "0xA9A7A4")]
		public PhysSoundComposition(int key)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xA9A7D0", Offset = "0xA9A7D0", VA = "0xA9A7D0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xA9A7D8", Offset = "0xA9A7D8", VA = "0xA9A7D8")]
		public void Add(float val)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xA9A7F4", Offset = "0xA9A7F4", VA = "0xA9A7F4")]
		public float GetAverage()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000204")]
	public class PhysSoundTypeList
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] PhysSoundTypes;

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xA9AC9C", Offset = "0xA9AC9C", VA = "0xA9AC9C")]
		public static string GetKey(int index)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xAA0578", Offset = "0xAA0578", VA = "0xAA0578")]
		public static bool HasKey(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xAA0608", Offset = "0xAA0608", VA = "0xAA0608")]
		public PhysSoundTypeList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F5A10", Offset = "0x8F5A10")]
	public class FoldoutList
	{
		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<bool> foldouts;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool mainFoldout;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public Vector2 scrollPos;

		[Token(Token = "0x1700012A")]
		public bool Item
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xA99658", Offset = "0xA99658", VA = "0xA99658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xA996C8", Offset = "0xA996C8", VA = "0xA996C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public int Count
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xA99740", Offset = "0xA99740", VA = "0xA99740")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xA997A0", Offset = "0xA997A0", VA = "0xA997A0")]
		public void Add(bool value)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xA99810", Offset = "0xA99810", VA = "0xA99810")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xA99880", Offset = "0xA99880", VA = "0xA99880")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xA99934", Offset = "0xA99934", VA = "0xA99934")]
		public void Update(int count, bool defaultValue)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xA99A34", Offset = "0xA99A34", VA = "0xA99A34")]
		public void Isolate(int index)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xA99B04", Offset = "0xA99B04", VA = "0xA99B04")]
		public FoldoutList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public struct Range
	{
		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Min;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Max;

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x9A34DC", Offset = "0x9A34DC", VA = "0x9A34DC")]
		public Range(float min, float max)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x9A34E4", Offset = "0x9A34E4", VA = "0x9A34E4")]
		public bool isWithinRange(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x9A3508", Offset = "0x9A3508", VA = "0x9A3508")]
		public float Clamp(float f)
		{
			return default(float);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x9A3510", Offset = "0x9A3510", VA = "0x9A3510")]
		public float RandomInRange()
		{
			return default(float);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x9A351C", Offset = "0x9A351C", VA = "0x9A351C")]
		public int RandomInRangeInteger()
		{
			return default(int);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x9A3544", Offset = "0x9A3544", VA = "0x9A3544")]
		public float Lerp(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x9A3558", Offset = "0x9A3558", VA = "0x9A3558")]
		public float Normalize(float val)
		{
			return default(float);
		}
	}
}
namespace kleberswf.tools.util
{
	[Token(Token = "0x2000207")]
	public class Graphic
	{
		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Color32[] _background;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color32[] _data;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Texture2D _texture;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _width;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly int _size;

		[Token(Token = "0x1700012C")]
		public Texture2D Texture
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x11AFEDC", Offset = "0x11AFEDC", VA = "0x11AFEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x11AFD4C", Offset = "0x11AFD4C", VA = "0x11AFD4C")]
		public Graphic(int width, int height, Color32 color)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x11B1250", Offset = "0x11B1250", VA = "0x11B1250")]
		private static bool Color32Equal(Color32 a, Color32 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x11AF66C", Offset = "0x11AF66C", VA = "0x11AF66C")]
		public void Clear(Color32 color, bool apply)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x11B05F0", Offset = "0x11B05F0", VA = "0x11B05F0")]
		public void DrawRect(int x, int y, int with, int height, Color32 color, int average, Color32 averageColor)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x11B1294", Offset = "0x11B1294", VA = "0x11B1294")]
		public void SetBackgroundColor(Color32 color)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x11B0240", Offset = "0x11B0240", VA = "0x11B0240")]
		public void Apply()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x11B1024", Offset = "0x11B1024", VA = "0x11B1024")]
		public void Destroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class KeyboardShortcut : MonoBehaviour
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Control;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Alt;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool Shift;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode Key;

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x11B131C", Offset = "0x11B131C", VA = "0x11B131C")]
		public bool Pressed(Event currentEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x11B1424", Offset = "0x11B1424", VA = "0x11B1424")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x11B14A0", Offset = "0x11B14A0", VA = "0x11B14A0")]
		public KeyboardShortcut()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public static class Texture2DUtil
	{
		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color32[] _background;

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x11B14A8", Offset = "0x11B14A8", VA = "0x11B14A8")]
		public static void Clear(Texture2D texture, Color32 color)
		{
		}
	}
}
namespace kleberswf.tools.miniprofiler
{
	[Token(Token = "0x200020A")]
	public class MiniProfiler : LayoutElement, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000EB3")]
		private const int Count = 40;

		[Token(Token = "0x4000EB4")]
		private const int BlockSize = 5;

		[Token(Token = "0x4000EB5")]
		private const int TextureWidth = 200;

		[Token(Token = "0x4000EB6")]
		private const int TextureHeight = 64;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2 DefaultSize;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AbstractValueProvider _valueProvider;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] _history;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _minValue;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _maxValue;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _avgValue;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _nextValue;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _nextMaxValue;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _nextMinValue;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _total;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _samples;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image Image;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text Text;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private kleberswf.tools.util.Graphic _graphic;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _elapsed;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _textHeight;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RectTransform _imageRectTransform;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBF90", Offset = "0x8FBF90")]
		public float ReadInterval;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBFC8", Offset = "0x8FBFC8")]
		private bool _collapsed;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC014", Offset = "0x8FC014")]
		public bool TouchToggleCollapsed;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _expandedHeight;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC05C", Offset = "0x8FC05C")]
		private bool _showText;

		[Token(Token = "0x4000ECD")]
		private const string ColorizedStringFormat = "{0} <color=#{1}>▼{4}</color> <color=#{2}>■{5}</color> <color=#{3}>▲{6}</color>";

		[Token(Token = "0x4000ECE")]
		private const string StringFormat = "{0} ▼{1} ■{2} ▲{3}";

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string _textLineFormat;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _colorDirty;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC0A8", Offset = "0x8FC0A8")]
		private bool _colorizeText;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC0F4", Offset = "0x8FC0F4")]
		public Color32 BackgroundColor;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC12C", Offset = "0x8FC12C")]
		private Color32 _titleColor;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC178", Offset = "0x8FC178")]
		private Color32 _minValueColor;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC1C4", Offset = "0x8FC1C4")]
		private Color32 _averageValueColor;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC210", Offset = "0x8FC210")]
		private Color32 _maxValueColor;

		[Token(Token = "0x1700012D")]
		public bool Collapsed
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x11AF520", Offset = "0x11AF520", VA = "0x11AF520")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x11AF528", Offset = "0x11AF528", VA = "0x11AF528")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public bool ShowText
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x11AF740", Offset = "0x11AF740", VA = "0x11AF740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x11AF748", Offset = "0x11AF748", VA = "0x11AF748")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public bool ColorizeText
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x11B0CAC", Offset = "0x11B0CAC", VA = "0x11B0CAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x11B0CB4", Offset = "0x11B0CB4", VA = "0x11B0CB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public Color32 TitleColor
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x11AFEE4", Offset = "0x11AFEE4", VA = "0x11AFEE4")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x11B0CC8", Offset = "0x11B0CC8", VA = "0x11B0CC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public Color32 MinValueColor
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x11B0DC4", Offset = "0x11B0DC4", VA = "0x11B0DC4")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6001313")]
			[Address(RVA = "0x11B0DCC", Offset = "0x11B0DCC", VA = "0x11B0DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public Color32 AverageValueColor
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x11B0DDC", Offset = "0x11B0DDC", VA = "0x11B0DDC")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6001315")]
			[Address(RVA = "0x11B0DE4", Offset = "0x11B0DE4", VA = "0x11B0DE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public Color32 MaxValueColor
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0x11B0DF4", Offset = "0x11B0DF4", VA = "0x11B0DF4")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x6001317")]
			[Address(RVA = "0x11B0DFC", Offset = "0x11B0DFC", VA = "0x11B0DFC")]
			set
			{
			}
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x11AF730", Offset = "0x11AF730", VA = "0x11AF730")]
		public void ToggleCollapsed()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x11AF850", Offset = "0x11AF850", VA = "0x11AF850", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x11AFEEC", Offset = "0x11AFEEC", VA = "0x11AFEEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x11B029C", Offset = "0x11B029C", VA = "0x11B029C")]
		private void AddToHistory(int index, float value)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x11B0180", Offset = "0x11B0180", VA = "0x11B0180")]
		private void SetValue(int index, float value, float ratio, int m, int textHeight)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x11B0340", Offset = "0x11B0340", VA = "0x11B0340")]
		public void UpdateTextLine()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x11B0A8C", Offset = "0x11B0A8C", VA = "0x11B0A8C")]
		public void SetColorDirty()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x11B06E8", Offset = "0x11B06E8", VA = "0x11B06E8")]
		private void UpdateColors()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x11B0A98", Offset = "0x11B0A98", VA = "0x11B0A98")]
		private static string ColorToString(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x11B0E0C", Offset = "0x11B0E0C", VA = "0x11B0E0C", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x11B0FD0", Offset = "0x11B0FD0", VA = "0x11B0FD0", Slot = "45")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x11B0FEC", Offset = "0x11B0FEC", VA = "0x11B0FEC", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x11B1090", Offset = "0x11B1090", VA = "0x11B1090")]
		public MiniProfiler()
		{
		}
	}
	[Token(Token = "0x200020B")]
	[DisallowMultipleComponent]
	public abstract class AbstractValueProvider : MonoBehaviour
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Title;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string NumberFormat;

		[Token(Token = "0x17000134")]
		public abstract float Value
		{
			[Token(Token = "0x600131E")]
			get;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x11AF3B8", Offset = "0x11AF3B8", VA = "0x11AF3B8", Slot = "5")]
		public virtual void Refresh(float readInterval)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x11AF3BC", Offset = "0x11AF3BC", VA = "0x11AF3BC")]
		protected AbstractValueProvider()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class FramerateValueProvider : AbstractValueProvider
	{
		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _frameCount;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _dt;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _fps;

		[Token(Token = "0x17000135")]
		public override float Value
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x11AF4A4", Offset = "0x11AF4A4", VA = "0x11AF4A4", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x11AF414", Offset = "0x11AF414", VA = "0x11AF414", Slot = "5")]
		public override void Refresh(float readInterval)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x11AF4AC", Offset = "0x11AF4AC", VA = "0x11AF4AC")]
		public FramerateValueProvider()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class MemoryValueProvider : AbstractValueProvider
	{
		[Token(Token = "0x17000136")]
		public override float Value
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0x11AF4B0", Offset = "0x11AF4B0", VA = "0x11AF4B0", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x11AF51C", Offset = "0x11AF51C", VA = "0x11AF51C")]
		public MemoryValueProvider()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class PaintTextureValueProvider : AbstractValueProvider
	{
		[Token(Token = "0x17000137")]
		public override float Value
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x11B1244", Offset = "0x11B1244", VA = "0x11B1244", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x11B124C", Offset = "0x11B124C", VA = "0x11B124C")]
		public PaintTextureValueProvider()
		{
		}
	}
}
namespace DigitalOpus.MB.Core
{
	[Token(Token = "0x200020F")]
	public static class MB_TGAWriter
	{
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x160FC9C", Offset = "0x160FC9C", VA = "0x160FC9C")]
		public static void Write(Color[] pixels, int width, int height, string path)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x160FD04", Offset = "0x160FD04", VA = "0x160FD04")]
		public static void Write(Color[] pixels, int width, int height, Stream output)
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class MB_Utility
	{
		[Token(Token = "0x2000692")]
		public struct MeshAnalysisResult
		{
			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect uvRect;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasOutOfBoundsUVs;

			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool hasOverlappingSubmeshVerts;

			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool hasOverlappingSubmeshTris;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool hasUVs;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float submeshArea;
		}

		[Token(Token = "0x2000693")]
		private class MB_Triangle
		{
			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int submeshIdx;

			[Token(Token = "0x400230C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int[] vs;

			[Token(Token = "0x6003095")]
			[Address(RVA = "0xCB0770", Offset = "0xCB0770", VA = "0xCB0770")]
			public bool isSame(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6003096")]
			[Address(RVA = "0xCB099C", Offset = "0xCB099C", VA = "0xCB099C")]
			public bool sharesVerts(MB_Triangle obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6003097")]
			[Address(RVA = "0xCB05E8", Offset = "0xCB05E8", VA = "0xCB05E8")]
			public void Initialize(int[] ts, int idx, int sIdx)
			{
			}

			[Token(Token = "0x6003098")]
			[Address(RVA = "0xCB0588", Offset = "0xCB0588", VA = "0xCB0588")]
			public MB_Triangle()
			{
			}
		}

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DO_INTEGRITY_CHECKS;

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xCAE944", Offset = "0xCAE944", VA = "0xCAE944")]
		public static Texture2D createTextureCopy(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xCAEA38", Offset = "0xCAEA38", VA = "0xCAEA38")]
		public static bool ArrayBIsSubsetOfA(object[] a, object[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xCAEB0C", Offset = "0xCAEB0C", VA = "0xCAEB0C")]
		public static Material[] GetGOMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xCAF1CC", Offset = "0xCAF1CC", VA = "0xCAF1CC")]
		public static Mesh GetMesh(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xCAF33C", Offset = "0xCAF33C", VA = "0xCAF33C")]
		public static void SetMesh(GameObject go, Mesh m)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xCAF4B4", Offset = "0xCAF4B4", VA = "0xCAF4B4")]
		public static Renderer GetRenderer(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xCAF5E8", Offset = "0xCAF5E8", VA = "0xCAF5E8")]
		public static void DisableRendererInSource(GameObject go)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xCAF748", Offset = "0xCAF748", VA = "0xCAF748")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref Rect uvBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xCAF7E4", Offset = "0xCAF7E4", VA = "0xCAF7E4")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1, int uvChannel = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xCAF944", Offset = "0xCAF944", VA = "0xCAF944")]
		public static bool hasOutOfBoundsUVs(Vector2[] uvs, Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xCAFE58", Offset = "0xCAFE58", VA = "0xCAFE58")]
		public static void setSolidColor(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xCAFF40", Offset = "0xCAFF40", VA = "0xCAFF40")]
		public static Texture2D resampleTexture(Texture2D source, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xCB0118", Offset = "0xCB0118", VA = "0xCB0118")]
		public static bool AreAllSharedMaterialsDistinct(Material[] sharedMaterials)
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xCB0240", Offset = "0xCB0240", VA = "0xCB0240")]
		public static int doSubmeshesShareVertsOrTris(Mesh m, ref MeshAnalysisResult mar)
		{
			return default(int);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xCB0D9C", Offset = "0xCB0D9C", VA = "0xCB0D9C")]
		public static bool GetBounds(GameObject go, out Bounds b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xCB1018", Offset = "0xCB1018", VA = "0xCB1018")]
		public static void Destroy(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xCB10BC", Offset = "0xCB10BC", VA = "0xCB10BC")]
		public MB_Utility()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public delegate void ProgressUpdateDelegate(string msg, float progress);
	[Token(Token = "0x2000212")]
	public delegate bool ProgressUpdateCancelableDelegate(string msg, float progress);
	[Token(Token = "0x2000213")]
	public enum MB_ObjsToCombineTypes
	{
		[Token(Token = "0x4000EDE")]
		prefabOnly,
		[Token(Token = "0x4000EDF")]
		sceneObjOnly,
		[Token(Token = "0x4000EE0")]
		dontCare
	}
	[Token(Token = "0x2000214")]
	public enum MB_OutputOptions
	{
		[Token(Token = "0x4000EE2")]
		bakeIntoPrefab,
		[Token(Token = "0x4000EE3")]
		bakeMeshsInPlace,
		[Token(Token = "0x4000EE4")]
		bakeTextureAtlasesOnly,
		[Token(Token = "0x4000EE5")]
		bakeIntoSceneObject
	}
	[Token(Token = "0x2000215")]
	public enum MB_RenderType
	{
		[Token(Token = "0x4000EE7")]
		meshRenderer,
		[Token(Token = "0x4000EE8")]
		skinnedMeshRenderer
	}
	[Token(Token = "0x2000216")]
	public enum MB2_OutputOptions
	{
		[Token(Token = "0x4000EEA")]
		bakeIntoSceneObject,
		[Token(Token = "0x4000EEB")]
		bakeMeshAssetsInPlace,
		[Token(Token = "0x4000EEC")]
		bakeIntoPrefab
	}
	[Token(Token = "0x2000217")]
	public enum MB2_LightmapOptions
	{
		[Token(Token = "0x4000EEE")]
		preserve_current_lightmapping,
		[Token(Token = "0x4000EEF")]
		ignore_UV2,
		[Token(Token = "0x4000EF0")]
		copy_UV2_unchanged,
		[Token(Token = "0x4000EF1")]
		generate_new_UV2_layout,
		[Token(Token = "0x4000EF2")]
		copy_UV2_unchanged_to_separate_rects
	}
	[Token(Token = "0x2000218")]
	public enum MB2_PackingAlgorithmEnum
	{
		[Token(Token = "0x4000EF4")]
		UnitysPackTextures,
		[Token(Token = "0x4000EF5")]
		MeshBakerTexturePacker,
		[Token(Token = "0x4000EF6")]
		MeshBakerTexturePacker_Fast,
		[Token(Token = "0x4000EF7")]
		MeshBakerTexturePacker_Horizontal,
		[Token(Token = "0x4000EF8")]
		MeshBakerTexturePacker_Vertical
	}
	[Token(Token = "0x2000219")]
	public enum MB_TextureTilingTreatment
	{
		[Token(Token = "0x4000EFA")]
		none,
		[Token(Token = "0x4000EFB")]
		considerUVs,
		[Token(Token = "0x4000EFC")]
		edgeToEdgeX,
		[Token(Token = "0x4000EFD")]
		edgeToEdgeY,
		[Token(Token = "0x4000EFE")]
		edgeToEdgeXY,
		[Token(Token = "0x4000EFF")]
		unknown
	}
	[Token(Token = "0x200021A")]
	public enum MB2_ValidationLevel
	{
		[Token(Token = "0x4000F01")]
		none,
		[Token(Token = "0x4000F02")]
		quick,
		[Token(Token = "0x4000F03")]
		robust
	}
	[Token(Token = "0x200021B")]
	public interface MB2_EditorMethodsInterface
	{
		[Token(Token = "0x6001344")]
		void Clear();

		[Token(Token = "0x6001345")]
		void RestoreReadFlagsAndFormats(ProgressUpdateDelegate progressInfo);

		[Token(Token = "0x6001346")]
		void SetReadWriteFlag(Texture2D tx, bool isReadable, bool addToList);

		[Token(Token = "0x6001347")]
		void AddTextureFormat(Texture2D tx, bool isNormalMap);

		[Token(Token = "0x6001348")]
		void SaveAtlasToAssetDatabase(Texture2D atlas, ShaderTextureProperty texPropertyName, int atlasNum, Material resMat);

		[Token(Token = "0x6001349")]
		bool IsNormalMap(Texture2D tx);

		[Token(Token = "0x600134A")]
		string GetPlatformString();

		[Token(Token = "0x600134B")]
		void SetTextureSize(Texture2D tx, int size);

		[Token(Token = "0x600134C")]
		bool IsCompressed(Texture2D tx);

		[Token(Token = "0x600134D")]
		void CheckBuildSettings(long estimatedAtlasSize);

		[Token(Token = "0x600134E")]
		bool CheckPrefabTypes(MB_ObjsToCombineTypes prefabType, List<GameObject> gos);

		[Token(Token = "0x600134F")]
		bool ValidateSkinnedMeshes(List<GameObject> mom);

		[Token(Token = "0x6001350")]
		void CommitChangesToAssets();

		[Token(Token = "0x6001351")]
		void OnPreTextureBake();

		[Token(Token = "0x6001352")]
		void OnPostTextureBake();

		[Token(Token = "0x6001353")]
		void Destroy(UnityEngine.Object o);
	}
	[Token(Token = "0x200021C")]
	public enum MB2_LogLevel
	{
		[Token(Token = "0x4000F05")]
		none,
		[Token(Token = "0x4000F06")]
		error,
		[Token(Token = "0x4000F07")]
		warn,
		[Token(Token = "0x4000F08")]
		info,
		[Token(Token = "0x4000F09")]
		debug,
		[Token(Token = "0x4000F0A")]
		trace
	}
	[Token(Token = "0x200021D")]
	public class MB2_Log
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0xEFA3EC", Offset = "0xEFA3EC", VA = "0xEFA3EC")]
		public static void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xEFA5FC", Offset = "0xEFA5FC", VA = "0xEFA5FC")]
		public static string Error(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xEFA6D8", Offset = "0xEFA6D8", VA = "0xEFA6D8")]
		public static string Warn(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xEFA7B4", Offset = "0xEFA7B4", VA = "0xEFA7B4")]
		public static string Info(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xEFA890", Offset = "0xEFA890", VA = "0xEFA890")]
		public static string LogDebug(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xEFA96C", Offset = "0xEFA96C", VA = "0xEFA96C")]
		public static string Trace(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xEFAA48", Offset = "0xEFAA48", VA = "0xEFAA48")]
		public MB2_Log()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class ObjectLog
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int pos;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] logMessages;

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xCB1C2C", Offset = "0xCB1C2C", VA = "0xCB1C2C")]
		private void _CacheLogMessage(string msg)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xCB1CF8", Offset = "0xCB1CF8", VA = "0xCB1CF8")]
		public ObjectLog(short bufferSize)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xCB1D6C", Offset = "0xCB1D6C", VA = "0xCB1D6C")]
		public void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xCB1DA8", Offset = "0xCB1DA8", VA = "0xCB1DA8")]
		public void Error(string msg, params object[] args)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xCB1DDC", Offset = "0xCB1DDC", VA = "0xCB1DDC")]
		public void Warn(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xCB1E10", Offset = "0xCB1E10", VA = "0xCB1E10")]
		public void Info(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xCB1E44", Offset = "0xCB1E44", VA = "0xCB1E44")]
		public void LogDebug(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xCB1E78", Offset = "0xCB1E78", VA = "0xCB1E78")]
		public void Trace(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xCB1EAC", Offset = "0xCB1EAC", VA = "0xCB1EAC")]
		public string Dump()
		{
			return null;
		}
	}
	[Token(Token = "0x200021F")]
	public interface MBVersionInterface
	{
		[Token(Token = "0x6001364")]
		string version();

		[Token(Token = "0x6001365")]
		int GetMajorVersion();

		[Token(Token = "0x6001366")]
		int GetMinorVersion();

		[Token(Token = "0x6001367")]
		bool GetActive(GameObject go);

		[Token(Token = "0x6001368")]
		void SetActive(GameObject go, bool isActive);

		[Token(Token = "0x6001369")]
		void SetActiveRecursively(GameObject go, bool isActive);

		[Token(Token = "0x600136A")]
		UnityEngine.Object[] FindSceneObjectsOfType(Type t);

		[Token(Token = "0x600136B")]
		bool IsRunningAndMeshNotReadWriteable(Mesh m);

		[Token(Token = "0x600136C")]
		Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x600136D")]
		void MeshClear(Mesh m, bool t);

		[Token(Token = "0x600136E")]
		void MeshAssignUV3(Mesh m, Vector2[] uv3s);

		[Token(Token = "0x600136F")]
		void MeshAssignUV4(Mesh m, Vector2[] uv4s);

		[Token(Token = "0x6001370")]
		Vector4 GetLightmapTilingOffset(Renderer r);

		[Token(Token = "0x6001371")]
		Transform[] GetBones(Renderer r);

		[Token(Token = "0x6001372")]
		void OptimizeMesh(Mesh m);

		[Token(Token = "0x6001373")]
		int GetBlendShapeFrameCount(Mesh m, int shapeIndex);

		[Token(Token = "0x6001374")]
		float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex);

		[Token(Token = "0x6001375")]
		void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x6001376")]
		void ClearBlendShapes(Mesh m);

		[Token(Token = "0x6001377")]
		void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x6001378")]
		int MaxMeshVertexCount();

		[Token(Token = "0x6001379")]
		void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles);
	}
	[Token(Token = "0x2000220")]
	public class MBVersion
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MBVersionInterface _MBVersion;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x160D9B4", Offset = "0x160D9B4", VA = "0x160D9B4")]
		private static MBVersionInterface _CreateMBVersionConcrete()
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x160DAAC", Offset = "0x160DAAC", VA = "0x160DAAC")]
		public static string version()
		{
			return null;
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x15F1440", Offset = "0x15F1440", VA = "0x15F1440")]
		public static int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x15F152C", Offset = "0x15F152C", VA = "0x15F152C")]
		public static int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x160DB94", Offset = "0x160DB94", VA = "0x160DB94")]
		public static bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x160DC90", Offset = "0x160DC90", VA = "0x160DC90")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x160DD94", Offset = "0x160DD94", VA = "0x160DD94")]
		public static void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x160DE98", Offset = "0x160DE98", VA = "0x160DE98")]
		public static UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x160DF94", Offset = "0x160DF94", VA = "0x160DF94")]
		public static bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x160E090", Offset = "0x160E090", VA = "0x160E090")]
		public static Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x160E1A4", Offset = "0x160E1A4", VA = "0x160E1A4")]
		public static void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x160E2A8", Offset = "0x160E2A8", VA = "0x160E2A8")]
		public static void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x160E3AC", Offset = "0x160E3AC", VA = "0x160E3AC")]
		public static void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x160E4B0", Offset = "0x160E4B0", VA = "0x160E4B0")]
		public static Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x160E5AC", Offset = "0x160E5AC", VA = "0x160E5AC")]
		public static Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x160E6A8", Offset = "0x160E6A8", VA = "0x160E6A8")]
		public static void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x160E7A4", Offset = "0x160E7A4", VA = "0x160E7A4")]
		public static int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x160E8A8", Offset = "0x160E8A8", VA = "0x160E8A8")]
		public static float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x160E9BC", Offset = "0x160E9BC", VA = "0x160E9BC")]
		public static void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x160EAF0", Offset = "0x160EAF0", VA = "0x160EAF0")]
		public static void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x160EBEC", Offset = "0x160EBEC", VA = "0x160EBEC")]
		public static void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x160ED28", Offset = "0x160ED28", VA = "0x160ED28")]
		public static int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x160EE14", Offset = "0x160EE14", VA = "0x160EE14")]
		public static void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x160EF30", Offset = "0x160EF30", VA = "0x160EF30")]
		public MBVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public class MB3_AgglomerativeClustering
	{
		[Serializable]
		[Token(Token = "0x2000694")]
		public class ClusterNode
		{
			[Token(Token = "0x400230D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public item_s leaf;

			[Token(Token = "0x400230E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode cha;

			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClusterNode chb;

			[Token(Token = "0x4002310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int height;

			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float distToMergedCentroid;

			[Token(Token = "0x4002312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 centroid;

			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int[] leafs;

			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int idx;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isUnclustered;

			[Token(Token = "0x6003099")]
			[Address(RVA = "0xF05938", Offset = "0xF05938", VA = "0xF05938")]
			public ClusterNode(item_s ii, int index)
			{
			}

			[Token(Token = "0x600309A")]
			[Address(RVA = "0xF05F24", Offset = "0xF05F24", VA = "0xF05F24")]
			public ClusterNode(ClusterNode a, ClusterNode b, int index, int h, float dist, ClusterNode[] clusters)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000695")]
		public class item_s
		{
			[Token(Token = "0x4002316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4002317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 coord;

			[Token(Token = "0x600309B")]
			[Address(RVA = "0xF06418", Offset = "0xF06418", VA = "0xF06418")]
			public item_s()
			{
			}
		}

		[Token(Token = "0x2000696")]
		public class ClusterDistance
		{
			[Token(Token = "0x4002318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ClusterNode a;

			[Token(Token = "0x4002319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode b;

			[Token(Token = "0x600309C")]
			[Address(RVA = "0xF0621C", Offset = "0xF0621C", VA = "0xF0621C")]
			public ClusterDistance(ClusterNode aa, ClusterNode bb)
			{
			}
		}

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<item_s> items;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClusterNode[] clusters;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool wasCanceled;

		[Token(Token = "0x4000F11")]
		private const int MAX_PRIORITY_Q_SIZE = 2048;

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xF04118", Offset = "0xF04118", VA = "0xF04118")]
		private float euclidean_distance(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xF041C0", Offset = "0xF041C0", VA = "0xF041C0")]
		public bool agglomerate(ProgressUpdateCancelableDelegate progFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xF05A04", Offset = "0xF05A04", VA = "0xF05A04")]
		private float _RefillPriorityQWithSome(PriorityQueue<float, ClusterDistance> pq, List<ClusterNode> unclustered, ClusterNode[] clusters, ProgressUpdateCancelableDelegate progFunc)
		{
			return default(float);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xF06254", Offset = "0xF06254", VA = "0xF06254")]
		public int TestRun(List<GameObject> gos)
		{
			return default(int);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xF06420", Offset = "0xF06420", VA = "0xF06420")]
		public static void Main()
		{
		}

		[Token(Token = "0x6001397")]
		public static T NthSmallestElement<T>(List<T> array, int n) where T : IComparable<T>
		{
			return (T)null;
		}

		[Token(Token = "0x6001398")]
		private static List<T> QuickSelectSmallest<T>(List<T> input, int n) where T : IComparable<T>
		{
			return null;
		}

		[Token(Token = "0x6001399")]
		private static int QuickSelectPartition<T>(List<T> array, int startIndex, int endIndex, int pivotIndex) where T : IComparable<T>
		{
			return default(int);
		}

		[Token(Token = "0x600139A")]
		private static void Swap<T>(List<T> array, int index1, int index2)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xF06544", Offset = "0xF06544", VA = "0xF06544")]
		public MB3_AgglomerativeClustering()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class MB3_CopyBoneWeights
	{
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xF065B4", Offset = "0xF065B4", VA = "0xF065B4")]
		public static void CopyBoneWeightsFromSeamMeshToOtherMeshes(float radius, Mesh seamMesh, Mesh[] targetMeshes)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xF07240", Offset = "0xF07240", VA = "0xF07240")]
		public MB3_CopyBoneWeights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public abstract class MB3_MeshCombiner
	{
		[Token(Token = "0x2000697")]
		public delegate void GenerateUV2Delegate(Mesh m, float hardAngle, float packMargin);

		[Token(Token = "0x2000698")]
		public class MBBlendShapeKey
		{
			[Token(Token = "0x400231A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjecID;

			[Token(Token = "0x400231B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int blendShapeIndexInSrc;

			[Token(Token = "0x60030A1")]
			[Address(RVA = "0x149A650", Offset = "0x149A650", VA = "0x149A650")]
			public MBBlendShapeKey(int srcSkinnedMeshRenderGameObjectID, int blendShapeIndexInSource)
			{
			}

			[Token(Token = "0x60030A2")]
			[Address(RVA = "0x149A688", Offset = "0x149A688", VA = "0x149A688", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x149A734", Offset = "0x149A734", VA = "0x149A734", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000699")]
		public class MBBlendShapeValue
		{
			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject combinedMeshGameObject;

			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeIndex;

			[Token(Token = "0x60030A4")]
			[Address(RVA = "0x149A750", Offset = "0x149A750", VA = "0x149A750")]
			public MBBlendShapeValue()
			{
			}
		}

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected MB2_LogLevel _LOG_LEVEL;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected MB2_ValidationLevel _validationLevel;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject _resultSceneObject;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Renderer _targetRenderer;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MB_RenderType _renderType;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected MB2_OutputOptions _outputOption;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected MB2_LightmapOptions _lightmapOption;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected bool _doNorm;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		protected bool _doTan;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		protected bool _doCol;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[SerializeField]
		protected bool _doUV;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _doUV3;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _doUV4;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		protected bool _doBlendShapes;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[SerializeField]
		protected bool _recenterVertsToBoundsCenter;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public bool _optimizeAfterBake;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float uv2UnwrappingParamsHardAngle;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float uv2UnwrappingParamsPackMargin;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool _usingTemporaryTextureBakeResult;

		[Token(Token = "0x17000138")]
		public static bool EVAL_VERSION
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x149949C", Offset = "0x149949C", VA = "0x149949C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000139")]
		public virtual MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x14994A4", Offset = "0x14994A4", VA = "0x14994A4", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x14994AC", Offset = "0x14994AC", VA = "0x14994AC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public virtual MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x14994B4", Offset = "0x14994B4", VA = "0x14994B4", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x14994BC", Offset = "0x14994BC", VA = "0x14994BC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public string name
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x14994C4", Offset = "0x14994C4", VA = "0x14994C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x14994CC", Offset = "0x14994CC", VA = "0x14994CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public virtual MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x14994D4", Offset = "0x14994D4", VA = "0x14994D4", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x14994DC", Offset = "0x14994DC", VA = "0x14994DC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public virtual GameObject resultSceneObject
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x14994E4", Offset = "0x14994E4", VA = "0x14994E4", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x14994EC", Offset = "0x14994EC", VA = "0x14994EC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public virtual Renderer targetRenderer
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x14994F4", Offset = "0x14994F4", VA = "0x14994F4", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x14994FC", Offset = "0x14994FC", VA = "0x14994FC", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public virtual MB_RenderType renderType
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x14995E8", Offset = "0x14995E8", VA = "0x14995E8", Slot = "14")]
			get
			{
				return default(MB_RenderType);
			}
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x14995F0", Offset = "0x14995F0", VA = "0x14995F0", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public virtual MB2_OutputOptions outputOption
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x14995F8", Offset = "0x14995F8", VA = "0x14995F8", Slot = "16")]
			get
			{
				return default(MB2_OutputOptions);
			}
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x1499600", Offset = "0x1499600", VA = "0x1499600", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public virtual MB2_LightmapOptions lightmapOption
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x1499608", Offset = "0x1499608", VA = "0x1499608", Slot = "18")]
			get
			{
				return default(MB2_LightmapOptions);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x1499610", Offset = "0x1499610", VA = "0x1499610", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public virtual bool doNorm
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x1499618", Offset = "0x1499618", VA = "0x1499618", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x1499620", Offset = "0x1499620", VA = "0x1499620", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public virtual bool doTan
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x149962C", Offset = "0x149962C", VA = "0x149962C", Slot = "22")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x1499634", Offset = "0x1499634", VA = "0x1499634", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public virtual bool doCol
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x1499640", Offset = "0x1499640", VA = "0x1499640", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x1499648", Offset = "0x1499648", VA = "0x1499648", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public virtual bool doUV
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x1499654", Offset = "0x1499654", VA = "0x1499654", Slot = "26")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x149965C", Offset = "0x149965C", VA = "0x149965C", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public virtual bool doUV1
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x1499668", Offset = "0x1499668", VA = "0x1499668", Slot = "28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x1499670", Offset = "0x1499670", VA = "0x1499670", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public virtual bool doUV3
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x1499698", Offset = "0x1499698", VA = "0x1499698", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x14996A0", Offset = "0x14996A0", VA = "0x14996A0", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public virtual bool doUV4
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x14996AC", Offset = "0x14996AC", VA = "0x14996AC", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x14996B4", Offset = "0x14996B4", VA = "0x14996B4", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public virtual bool doBlendShapes
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x14996C0", Offset = "0x14996C0", VA = "0x14996C0", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x14996C8", Offset = "0x14996C8", VA = "0x14996C8", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public virtual bool recenterVertsToBoundsCenter
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x14996D4", Offset = "0x14996D4", VA = "0x14996D4", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x14996DC", Offset = "0x14996DC", VA = "0x14996DC", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool optimizeAfterBake
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x14996E8", Offset = "0x14996E8", VA = "0x14996E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x14996F0", Offset = "0x14996F0", VA = "0x14996F0")]
			set
			{
			}
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x1499674", Offset = "0x1499674", VA = "0x1499674", Slot = "30")]
		public virtual bool doUV2()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C6")]
		public abstract int GetLightmapIndex();

		[Token(Token = "0x60013C7")]
		public abstract void ClearBuffers();

		[Token(Token = "0x60013C8")]
		public abstract void ClearMesh();

		[Token(Token = "0x60013C9")]
		public abstract void DestroyMesh();

		[Token(Token = "0x60013CA")]
		public abstract void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods);

		[Token(Token = "0x60013CB")]
		public abstract List<GameObject> GetObjectsInCombined();

		[Token(Token = "0x60013CC")]
		public abstract int GetNumObjectsInCombined();

		[Token(Token = "0x60013CD")]
		public abstract int GetNumVerticesFor(GameObject go);

		[Token(Token = "0x60013CE")]
		public abstract int GetNumVerticesFor(int instanceID);

		[Token(Token = "0x60013CF")]
		public abstract Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap();

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x14996FC", Offset = "0x14996FC", VA = "0x14996FC", Slot = "49")]
		public virtual void Apply()
		{
		}

		[Token(Token = "0x60013D1")]
		public abstract void Apply(GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x60013D2")]
		public abstract void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapeFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x60013D3")]
		public abstract void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false);

		[Token(Token = "0x60013D4")]
		public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

		[Token(Token = "0x60013D5")]
		public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource);

		[Token(Token = "0x60013D6")]
		public abstract bool CombinedMeshContains(GameObject go);

		[Token(Token = "0x60013D7")]
		public abstract void UpdateSkinnedMeshApproximateBounds();

		[Token(Token = "0x60013D8")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBones();

		[Token(Token = "0x60013D9")]
		public abstract void CheckIntegrity();

		[Token(Token = "0x60013DA")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBounds();

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x1499710", Offset = "0x1499710", VA = "0x1499710")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(Transform[] bs, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x1499AC0", Offset = "0x1499AC0", VA = "0x1499AC0")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(List<GameObject> objectsInCombined, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x1499CC0", Offset = "0x1499CC0", VA = "0x1499CC0", Slot = "60")]
		protected virtual bool _CreateTemporaryTextrueBakeResult(GameObject[] gos, List<Material> matsOnTargetRenderer)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DE")]
		public abstract List<Material> GetMaterialsOnTargetRenderer();

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x1499D88", Offset = "0x1499D88", VA = "0x1499D88")]
		protected MB3_MeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public class MB3_MeshCombinerSingle : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x200069A")]
		public class SerializableIntArray
		{
			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] data;

			[Token(Token = "0x60030A5")]
			[Address(RVA = "0x149C428", Offset = "0x149C428", VA = "0x149C428")]
			public SerializableIntArray()
			{
			}

			[Token(Token = "0x60030A6")]
			[Address(RVA = "0x149BA30", Offset = "0x149BA30", VA = "0x149BA30")]
			public SerializableIntArray(int len)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200069B")]
		public class MB_DynamicGameObject : IComparable<MB_DynamicGameObject>
		{
			[Token(Token = "0x400231F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int instanceID;

			[Token(Token = "0x4002320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int vertIdx;

			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int blendShapeIdx;

			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numVerts;

			[Token(Token = "0x4002324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int numBlendShapes;

			[Token(Token = "0x4002325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] indexesOfBonesUsed;

			[Token(Token = "0x4002326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int lightmapIndex;

			[Token(Token = "0x4002327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector4 lightmapTilingOffset;

			[Token(Token = "0x4002328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 meshSize;

			[Token(Token = "0x4002329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool show;

			[Token(Token = "0x400232A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool invertTriangles;

			[Token(Token = "0x400232B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int[] submeshTriIdxs;

			[Token(Token = "0x400232C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] submeshNumTris;

			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int[] targetSubmeshIdxs;

			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Rect[] uvRects;

			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Rect[] encapsulatingRect;

			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Rect[] sourceMaterialTiling;

			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Rect[] obUVRects;

			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public bool _beingDeleted;

			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public int _triangleIdxAdjustment;

			[NonSerialized]
			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public SerializableIntArray[] _tmpSubmeshTris;

			[NonSerialized]
			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Transform[] _tmpCachedBones;

			[NonSerialized]
			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Matrix4x4[] _tmpCachedBindposes;

			[NonSerialized]
			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public BoneWeight[] _tmpCachedBoneWeights;

			[NonSerialized]
			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public int[] _tmpIndexesOfSourceBonesUsed;

			[Token(Token = "0x60030A7")]
			[Address(RVA = "0x14AF654", Offset = "0x14AF654", VA = "0x14AF654", Slot = "4")]
			public int CompareTo(MB_DynamicGameObject b)
			{
				return default(int);
			}

			[Token(Token = "0x60030A8")]
			[Address(RVA = "0x14A356C", Offset = "0x14A356C", VA = "0x14A356C")]
			public MB_DynamicGameObject()
			{
			}
		}

		[Token(Token = "0x200069C")]
		public class MeshChannels
		{
			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv0raw;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv0modified;

			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv2;

			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv3;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector2[] uv4;

			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color[] colors;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public BoneWeight[] boneWeights;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Matrix4x4[] bindPoses;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] triangles;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MBBlendShape[] blendShapes;

			[Token(Token = "0x60030A9")]
			[Address(RVA = "0x14AF688", Offset = "0x14AF688", VA = "0x14AF688")]
			public MeshChannels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200069D")]
		public class MBBlendShapeFrame
		{
			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float frameWeight;

			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] vertices;

			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] normals;

			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] tangents;

			[Token(Token = "0x60030AA")]
			[Address(RVA = "0x14AF64C", Offset = "0x14AF64C", VA = "0x14AF64C")]
			public MBBlendShapeFrame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200069E")]
		public class MBBlendShape
		{
			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjectID;

			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int indexInSource;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MBBlendShapeFrame[] frames;

			[Token(Token = "0x60030AB")]
			[Address(RVA = "0x14AF644", Offset = "0x14AF644", VA = "0x14AF644")]
			public MBBlendShape()
			{
			}
		}

		[Token(Token = "0x200069F")]
		public class MeshChannelsCache
		{
			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_MeshCombinerSingle mc;

			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected Dictionary<int, MeshChannels> meshID2MeshChannels;

			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector2 _HALF_UV;

			[Token(Token = "0x60030AC")]
			[Address(RVA = "0x14A34C0", Offset = "0x14A34C0", VA = "0x14A34C0")]
			public MeshChannelsCache(MB3_MeshCombinerSingle mcs)
			{
			}

			[Token(Token = "0x60030AD")]
			[Address(RVA = "0x14A45FC", Offset = "0x14A45FC", VA = "0x14A45FC")]
			internal Vector3[] GetVertices(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030AE")]
			[Address(RVA = "0x14A4768", Offset = "0x14A4768", VA = "0x14A4768")]
			internal Vector3[] GetNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030AF")]
			[Address(RVA = "0x14A48C8", Offset = "0x14A48C8", VA = "0x14A48C8")]
			internal Vector4[] GetTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B0")]
			[Address(RVA = "0x149C8E8", Offset = "0x149C8E8", VA = "0x149C8E8")]
			internal Vector2[] GetUv0Raw(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B1")]
			[Address(RVA = "0x14AFCE4", Offset = "0x14AFCE4", VA = "0x14AFCE4")]
			internal Vector2[] GetUv0Modified(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B2")]
			[Address(RVA = "0x14A6FC4", Offset = "0x14A6FC4", VA = "0x14A6FC4")]
			internal Vector2[] GetUv2(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B3")]
			[Address(RVA = "0x14A5484", Offset = "0x14A5484", VA = "0x14A5484")]
			internal Vector2[] GetUv3(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B4")]
			[Address(RVA = "0x14A560C", Offset = "0x14A560C", VA = "0x14A560C")]
			internal Vector2[] GetUv4(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B5")]
			[Address(RVA = "0x14A5794", Offset = "0x14A5794", VA = "0x14A5794")]
			internal Color[] GetColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B6")]
			[Address(RVA = "0x14AEEC8", Offset = "0x14AEEC8", VA = "0x14AEEC8")]
			internal Matrix4x4[] GetBindposes(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x60030B7")]
			[Address(RVA = "0x14ABE3C", Offset = "0x14ABE3C", VA = "0x14ABE3C")]
			internal BoneWeight[] GetBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x60030B8")]
			[Address(RVA = "0x14B06C4", Offset = "0x14B06C4", VA = "0x14B06C4")]
			internal int[] GetTriangles(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030B9")]
			[Address(RVA = "0x14A58F4", Offset = "0x14A58F4", VA = "0x14A58F4")]
			internal MBBlendShape[] GetBlendShapes(Mesh m, int gameObjectID)
			{
				return null;
			}

			[Token(Token = "0x60030BA")]
			[Address(RVA = "0x14B00A0", Offset = "0x14B00A0", VA = "0x14B00A0")]
			private Color[] _getMeshColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030BB")]
			[Address(RVA = "0x14AF690", Offset = "0x14AF690", VA = "0x14AF690")]
			private Vector3[] _getMeshNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030BC")]
			[Address(RVA = "0x14AF8A4", Offset = "0x14AF8A4", VA = "0x14AF8A4")]
			private Vector4[] _getMeshTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030BD")]
			[Address(RVA = "0x14AFAEC", Offset = "0x14AFAEC", VA = "0x14AFAEC")]
			private Vector2[] _getMeshUVs(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030BE")]
			[Address(RVA = "0x14AFE34", Offset = "0x14AFE34", VA = "0x14AFE34")]
			private Vector2[] _getMeshUV2s(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x60030BF")]
			[Address(RVA = "0x14B02BC", Offset = "0x14B02BC", VA = "0x14B02BC")]
			public static Matrix4x4[] _getBindPoses(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x60030C0")]
			[Address(RVA = "0x14B049C", Offset = "0x14B049C", VA = "0x14B049C")]
			public static BoneWeight[] _getBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x60030C1")]
			[Address(RVA = "0x14B0830", Offset = "0x14B0830", VA = "0x14B0830")]
			private void _generateTangents(int[] triangles, Vector3[] verts, Vector2[] uvs, Vector3[] normals, Vector4[] outTangents)
			{
			}
		}

		[Token(Token = "0x20006A0")]
		public struct BoneAndBindpose
		{
			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform bone;

			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Matrix4x4 bindPose;

			[Token(Token = "0x60030C2")]
			[Address(RVA = "0x9B73E8", Offset = "0x9B73E8", VA = "0x9B73E8")]
			public BoneAndBindpose(Transform t, Matrix4x4 bp)
			{
			}

			[Token(Token = "0x60030C3")]
			[Address(RVA = "0x9B7434", Offset = "0x9B7434", VA = "0x9B7434", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60030C4")]
			[Address(RVA = "0x9B743C", Offset = "0x9B743C", VA = "0x9B743C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7DD4", Offset = "0x8F7DD4")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] _goToAdd;

			[Token(Token = "0x60030C5")]
			[Address(RVA = "0x14A2EEC", Offset = "0x14A2EEC", VA = "0x14A2EEC")]
			public <>c__DisplayClass56_0()
			{
			}
		}

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7DE4", Offset = "0x8F7DE4")]
		private sealed class <>c__DisplayClass56_1
		{
			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass56_0 CS$<>8__locals1;

			[Token(Token = "0x60030C6")]
			[Address(RVA = "0x14A3564", Offset = "0x14A3564", VA = "0x14A3564")]
			public <>c__DisplayClass56_1()
			{
			}

			[Token(Token = "0x60030C7")]
			[Address(RVA = "0x14AF3D0", Offset = "0x14AF3D0", VA = "0x14AF3D0")]
			internal bool <_addToCombined>b__0(int o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected List<GameObject> objectsInCombinedMesh;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int lightmapIndex;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<MB_DynamicGameObject> mbDynamicObjectsInCombinedMesh;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, MB_DynamicGameObject> _instance2combined_map;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3[] verts;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3[] normals;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector4[] tangents;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector2[] uvs;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector2[] uv2s;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector2[] uv3s;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Vector2[] uv4s;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform[] bones;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		internal MBBlendShape[] blendShapes;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		internal MBBlendShape[] blendShapesInCombined;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SerializableIntArray[] submeshTris;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private BoneWeight[] boneWeights;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject[] empty;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int[] emptyIDs;

		[Token(Token = "0x1700014C")]
		public override MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x149A758", Offset = "0x149A758", VA = "0x149A758", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public override MB_RenderType renderType
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x149A888", Offset = "0x149A888", VA = "0x149A888", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public override GameObject resultSceneObject
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x149A94C", Offset = "0x149A94C", VA = "0x149A94C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x149AA48", Offset = "0x149AA48", VA = "0x149AA48")]
		private MB_DynamicGameObject instance2Combined_MapGet(int gameObjectID)
		{
			return null;
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x149AAB8", Offset = "0x149AAB8", VA = "0x149AAB8")]
		private void instance2Combined_MapAdd(int gameObjectID, MB_DynamicGameObject dgo)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x149AB30", Offset = "0x149AB30", VA = "0x149AB30")]
		private void instance2Combined_MapRemove(int gameObjectID)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x149ABA0", Offset = "0x149ABA0", VA = "0x149ABA0")]
		private bool instance2Combined_MapTryGetValue(int gameObjectID, out MB_DynamicGameObject dgo)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x149AC18", Offset = "0x149AC18", VA = "0x149AC18")]
		private int instance2Combined_MapCount()
		{
			return default(int);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x149AC78", Offset = "0x149AC78", VA = "0x149AC78")]
		private void instance2Combined_MapClear()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x149ACD8", Offset = "0x149ACD8", VA = "0x149ACD8")]
		private bool instance2Combined_MapContainsKey(int gameObjectID)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x149AD48", Offset = "0x149AD48", VA = "0x149AD48", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x149ADA8", Offset = "0x149ADA8", VA = "0x149ADA8", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x149AE38", Offset = "0x149AE38", VA = "0x149AE38")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x149AEDC", Offset = "0x149AEDC", VA = "0x149AEDC")]
		public void SetMesh(Mesh m)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x149AEE4", Offset = "0x149AEE4", VA = "0x149AEE4")]
		public Transform[] GetBones()
		{
			return null;
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x149AEEC", Offset = "0x149AEEC", VA = "0x149AEEC", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x149AF44", Offset = "0x149AF44", VA = "0x149AF44", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x149AF90", Offset = "0x149AF90", VA = "0x149AF90", Slot = "47")]
		public override int GetNumVerticesFor(int instanceID)
		{
			return default(int);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x149AFD4", Offset = "0x149AFD4", VA = "0x149AFD4", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x149B1BC", Offset = "0x149B1BC", VA = "0x149B1BC")]
		private void _initialize(int numResultMats)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x149BAA0", Offset = "0x149BAA0", VA = "0x149BAA0")]
		private bool _collectMaterialTriangles(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x149C430", Offset = "0x149C430", VA = "0x149C430")]
		private bool _collectOutOfBoundsUVRects2(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisResults, MeshChannelsCache meshChannelCache)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x149CA48", Offset = "0x149CA48", VA = "0x149CA48")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x149CBD8", Offset = "0x149CBD8", VA = "0x149CBD8")]
		private bool _validateMeshFlags()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x149CE24", Offset = "0x149CE24", VA = "0x149CE24")]
		private bool _showHide(GameObject[] goToShow, GameObject[] goToHide)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x149D1BC", Offset = "0x149D1BC", VA = "0x149D1BC")]
		private bool _addToCombined(GameObject[] goToAdd, int[] goToDelete, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x14A4A28", Offset = "0x14A4A28", VA = "0x14A4A28")]
		private void _copyAndAdjustUVsFromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x14A51A4", Offset = "0x14A51A4", VA = "0x14A51A4")]
		private void _copyAndAdjustUV2FromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x14A7124", Offset = "0x14A7124", VA = "0x14A7124", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x14A7134", Offset = "0x14A7134", VA = "0x14A7134", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x14A7454", Offset = "0x14A7454", VA = "0x14A7454", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x14A779C", Offset = "0x14A779C", VA = "0x14A779C")]
		private int _getNumBones(Renderer r)
		{
			return default(int);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x14A78C8", Offset = "0x14A78C8", VA = "0x14A78C8")]
		private Transform[] _getBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x14A78D4", Offset = "0x14A78D4", VA = "0x14A78D4", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x14A79DC", Offset = "0x14A79DC", VA = "0x14A79DC", Slot = "62")]
		public virtual void ApplyShowHide()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x14A8964", Offset = "0x14A8964", VA = "0x14A8964", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x14A8684", Offset = "0x14A8684", VA = "0x14A8684")]
		private int _numNonZeroLengthSubmeshTris(SerializableIntArray[] subTris)
		{
			return default(int);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x14A8720", Offset = "0x14A8720", VA = "0x14A8720")]
		private void _updateMaterialsOnTargetRenderer(SerializableIntArray[] subTris, int numNonZeroLengthSubmeshTris)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x14A80A8", Offset = "0x14A80A8", VA = "0x14A80A8")]
		public SerializableIntArray[] GetSubmeshTrisWithShowHideApplied()
		{
			return null;
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x14AAD68", Offset = "0x14AAD68", VA = "0x14AAD68", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x14AADB4", Offset = "0x14AADB4", VA = "0x14AADB4")]
		private void _updateGameObjects(GameObject[] gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x14AB0CC", Offset = "0x14AB0CC", VA = "0x14AB0CC")]
		private void _updateGameObject(GameObject go, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x14ABFF4", Offset = "0x14ABFF4", VA = "0x14ABFF4")]
		public bool ShowHideGameObjects(GameObject[] toShow, GameObject[] toHide)
		{
			return default(bool);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x14AC0E4", Offset = "0x14AC0E4", VA = "0x14AC0E4", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x14AC314", Offset = "0x14AC314", VA = "0x14AC314", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x14ACA80", Offset = "0x14ACA80", VA = "0x14ACA80", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x14ACAF0", Offset = "0x14ACAF0", VA = "0x14ACAF0", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x14ACDE0", Offset = "0x14ACDE0", VA = "0x14ACDE0", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x14ACE9C", Offset = "0x14ACE9C", VA = "0x14ACE9C", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x14ACFB8", Offset = "0x14ACFB8", VA = "0x14ACFB8", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x14A2EF4", Offset = "0x14A2EF4", VA = "0x14A2EF4")]
		public bool ValidateTargRendererAndMeshAndResultSceneObj()
		{
			return default(bool);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x14AD130", Offset = "0x14AD130", VA = "0x14AD130")]
		internal static Renderer BuildSceneHierarchPreBake(MB3_MeshCombinerSingle mom, GameObject root, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
			return null;
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x14ADFB8", Offset = "0x14ADFB8", VA = "0x14ADFB8")]
		public static void BuildPrefabHierarchy(MB3_MeshCombinerSingle mom, GameObject instantiatedPrefabRoot, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x14ADB80", Offset = "0x14ADB80", VA = "0x14ADB80")]
		private static void _ConfigureSceneHierarch(MB3_MeshCombinerSingle mom, GameObject root, MeshRenderer mr, MeshFilter mf, SkinnedMeshRenderer smr, Mesh m, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x14AC980", Offset = "0x14AC980", VA = "0x14AC980")]
		public void BuildSceneMeshObject([Optional] GameObject[] gos, bool createNewChild = false)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x14A3CF0", Offset = "0x14A3CF0", VA = "0x14A3CF0")]
		private bool IsMirrored(Matrix4x4 tm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x14AE770", Offset = "0x14AE770", VA = "0x14AE770", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x14AAC70", Offset = "0x14AAC70", VA = "0x14AAC70")]
		private void _ZeroArray(Vector3[] arr, int idx, int length)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x14A3278", Offset = "0x14A3278", VA = "0x14A3278")]
		private List<MB_DynamicGameObject>[] _buildBoneIdx2dgoMap()
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x14A3650", Offset = "0x14A3650", VA = "0x14A3650")]
		private void _CollectBonesToAddForDGO(MB_DynamicGameObject dgo, Dictionary<Transform, int> bone2idx, HashSet<int> boneIdxsToDelete, HashSet<BoneAndBindpose> bonesToAdd, Renderer r, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x14A3E94", Offset = "0x14A3E94", VA = "0x14A3E94")]
		private void _CopyBonesWeAreKeepingToNewBonesArrayAndAdjustBWIndexes(HashSet<int> boneIdxsToDeleteHS, HashSet<BoneAndBindpose> bonesToAdd, Transform[] nbones, Matrix4x4[] nbindPoses, BoneWeight[] nboneWeights, int totalDeleteVerts)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x14A6034", Offset = "0x14A6034", VA = "0x14A6034")]
		private void _AddBonesToNewBonesArrayAndAdjustBWIndexes(MB_DynamicGameObject dgo, Renderer r, int vertsIdx, Transform[] nbones, BoneWeight[] nboneWeights, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x14A6844", Offset = "0x14A6844", VA = "0x14A6844")]
		private void _copyUV2unchangedToSeparateRects()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x14AF090", Offset = "0x14AF090", VA = "0x14AF090", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x14AF17C", Offset = "0x14AF17C", VA = "0x14AF17C")]
		public MB3_MeshCombinerSingle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public class MB3_MultiMeshCombiner : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x20006A3")]
		public class CombinedMesh
		{
			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_MeshCombinerSingle combinedMesh;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int extraSpace;

			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numVertsInListToDelete;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numVertsInListToAdd;

			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameObject> gosToAdd;

			[Token(Token = "0x400235B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> gosToDelete;

			[Token(Token = "0x400235C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<GameObject> gosToUpdate;

			[Token(Token = "0x400235D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isDirty;

			[Token(Token = "0x60030C8")]
			[Address(RVA = "0x14B5194", Offset = "0x14B5194", VA = "0x14B5194")]
			public CombinedMesh(int maxNumVertsInMesh, GameObject resultSceneObject, MB2_LogLevel ll)
			{
			}

			[Token(Token = "0x60030C9")]
			[Address(RVA = "0x14B62B4", Offset = "0x14B62B4", VA = "0x14B62B4")]
			public bool isEmpty()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject[] empty;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] emptyIDs;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<int, CombinedMesh> obj2MeshCombinerMap;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<CombinedMesh> meshCombiners;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int _maxVertsInMesh;

		[Token(Token = "0x1700014F")]
		public override MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x14B1054", Offset = "0x14B1054", VA = "0x14B1054", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x14B105C", Offset = "0x14B105C", VA = "0x14B105C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public override MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0x14B1230", Offset = "0x14B1230", VA = "0x14B1230", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x6001423")]
			[Address(RVA = "0x14B1144", Offset = "0x14B1144", VA = "0x14B1144", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public int maxVertsInMesh
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0x14B1238", Offset = "0x14B1238", VA = "0x14B1238")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001426")]
			[Address(RVA = "0x14B1240", Offset = "0x14B1240", VA = "0x14B1240")]
			set
			{
			}
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x14B139C", Offset = "0x14B139C", VA = "0x14B139C", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x14B13FC", Offset = "0x14B13FC", VA = "0x14B13FC", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x14B14D8", Offset = "0x14B14D8", VA = "0x14B14D8", Slot = "47")]
		public override int GetNumVerticesFor(int gameObjectID)
		{
			return default(int);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x14B1598", Offset = "0x14B1598", VA = "0x14B1598", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x14B16D0", Offset = "0x14B16D0", VA = "0x14B16D0", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x14B17A0", Offset = "0x14B17A0", VA = "0x14B17A0", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x14B182C", Offset = "0x14B182C", VA = "0x14B182C")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x14B19BC", Offset = "0x14B19BC", VA = "0x14B19BC", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x14B1B08", Offset = "0x14B1B08", VA = "0x14B1B08", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x14B1D2C", Offset = "0x14B1D2C", VA = "0x14B1D2C", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x14B1E0C", Offset = "0x14B1E0C", VA = "0x14B1E0C", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x14B1EEC", Offset = "0x14B1EEC", VA = "0x14B1EEC", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x14B1FCC", Offset = "0x14B1FCC", VA = "0x14B1FCC", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x14B24B0", Offset = "0x14B24B0", VA = "0x14B24B0", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x14B26E0", Offset = "0x14B26E0", VA = "0x14B26E0", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x14B2C78", Offset = "0x14B2C78", VA = "0x14B2C78")]
		private bool _validate(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x14B33FC", Offset = "0x14B33FC", VA = "0x14B33FC")]
		private void _distributeAmongBakers(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x14B3F7C", Offset = "0x14B3F7C", VA = "0x14B3F7C")]
		private bool _bakeStep1(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x14B5638", Offset = "0x14B5638", VA = "0x14B5638", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x14B58F4", Offset = "0x14B58F4", VA = "0x14B58F4", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x14B59F4", Offset = "0x14B59F4", VA = "0x14B59F4", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x14B5A04", Offset = "0x14B5A04", VA = "0x14B5A04", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x14B5C50", Offset = "0x14B5C50", VA = "0x14B5C50", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x14B52D4", Offset = "0x14B52D4", VA = "0x14B52D4")]
		private void _setMBValues(MB3_MeshCombinerSingle targ)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x14B5EEC", Offset = "0x14B5EEC", VA = "0x14B5EEC", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x14B604C", Offset = "0x14B604C", VA = "0x14B604C", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x14B615C", Offset = "0x14B615C", VA = "0x14B615C")]
		public MB3_MultiMeshCombiner()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class PriorityQueue<TPriority, TValue> : ICollection<KeyValuePair<TPriority, TValue>>, IEnumerable<KeyValuePair<TPriority, TValue>>, IEnumerable
	{
		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<KeyValuePair<TPriority, TValue>> _baseHeap;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IComparer<TPriority> _comparer;

		[Token(Token = "0x17000152")]
		public bool IsEmpty
		{
			[Token(Token = "0x6001450")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public int Count
		{
			[Token(Token = "0x600145A")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000154")]
		public bool IsReadOnly
		{
			[Token(Token = "0x600145C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001443")]
		public PriorityQueue()
		{
		}

		[Token(Token = "0x6001444")]
		public PriorityQueue(int capacity)
		{
		}

		[Token(Token = "0x6001445")]
		public PriorityQueue(int capacity, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x6001446")]
		public PriorityQueue(IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x6001447")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data)
		{
		}

		[Token(Token = "0x6001448")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x6001449")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2)
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2, IComparer<TPriority> comparer)
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		public void Enqueue(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x600144C")]
		public KeyValuePair<TPriority, TValue> Dequeue()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x600144D")]
		public TValue DequeueValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x600144E")]
		public KeyValuePair<TPriority, TValue> Peek()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x600144F")]
		public TValue PeekValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x6001451")]
		private void ExchangeElements(int pos1, int pos2)
		{
		}

		[Token(Token = "0x6001452")]
		private void Insert(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x6001453")]
		private int HeapifyFromEndToBeginning(int pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001454")]
		private void DeleteRoot()
		{
		}

		[Token(Token = "0x6001455")]
		private void HeapifyFromBeginningToEnd(int pos)
		{
		}

		[Token(Token = "0x6001456")]
		public void Add(KeyValuePair<TPriority, TValue> item)
		{
		}

		[Token(Token = "0x6001457")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001458")]
		public bool Contains(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001459")]
		public bool TryFindValue(TPriority item, out TValue foundVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x600145B")]
		public void CopyTo(KeyValuePair<TPriority, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600145D")]
		public bool Remove(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		public IEnumerator<KeyValuePair<TPriority, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000227")]
	public struct DVector2
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double epsilon;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xEF9F40", Offset = "0xEF9F40", VA = "0xEF9F40")]
		public static DVector2 Subtract(DVector2 a, DVector2 b)
		{
			return default(DVector2);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x9AB608", Offset = "0x9AB608", VA = "0x9AB608")]
		public DVector2(double xx, double yy)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x9AB610", Offset = "0x9AB610", VA = "0x9AB610")]
		public DVector2(DVector2 r)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x9AB618", Offset = "0x9AB618", VA = "0x9AB618")]
		public Vector2 GetVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x9AB650", Offset = "0x9AB650", VA = "0x9AB650")]
		public bool IsContainedIn(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x9AB690", Offset = "0x9AB690", VA = "0x9AB690")]
		public bool IsContainedInWithMargin(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x9AB698", Offset = "0x9AB698", VA = "0x9AB698", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x9AB6A0", Offset = "0x9AB6A0", VA = "0x9AB6A0")]
		public string ToString(string formatS)
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xEFA244", Offset = "0xEFA244", VA = "0xEFA244")]
		public static double Distance(DVector2 a, DVector2 b)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000228")]
	public struct DRect
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double width;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double height;

		[Token(Token = "0x17000155")]
		public DVector2 minD
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0x9AB504", Offset = "0x9AB504", VA = "0x9AB504")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x17000156")]
		public DVector2 maxD
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x9AB50C", Offset = "0x9AB50C", VA = "0x9AB50C")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x17000157")]
		public Vector2 min
		{
			[Token(Token = "0x6001472")]
			[Address(RVA = "0x9AB520", Offset = "0x9AB520", VA = "0x9AB520")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000158")]
		public Vector2 max
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0x9AB558", Offset = "0x9AB558", VA = "0x9AB558")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000159")]
		public Vector2 size
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x9AB560", Offset = "0x9AB560", VA = "0x9AB560")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700015A")]
		public DVector2 center
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0x9AB598", Offset = "0x9AB598", VA = "0x9AB598")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x9AB4A4", Offset = "0x9AB4A4", VA = "0x9AB4A4")]
		public DRect(Rect r)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x9AB4AC", Offset = "0x9AB4AC", VA = "0x9AB4AC")]
		public DRect(Vector2 o, Vector2 s)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x9AB4C8", Offset = "0x9AB4C8", VA = "0x9AB4C8")]
		public DRect(DRect r)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x9AB4D4", Offset = "0x9AB4D4", VA = "0x9AB4D4")]
		public DRect(float xx, float yy, float w, float h)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x9AB4F0", Offset = "0x9AB4F0", VA = "0x9AB4F0")]
		public DRect(double xx, double yy, double w, double h)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x9AB4FC", Offset = "0x9AB4FC", VA = "0x9AB4FC")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x9AB5B8", Offset = "0x9AB5B8", VA = "0x9AB5B8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xEF9B00", Offset = "0xEF9B00", VA = "0xEF9B00")]
		public static bool operator ==(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xEF9B9C", Offset = "0xEF9B9C", VA = "0xEF9B9C")]
		public static bool operator !=(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x9AB5C0", Offset = "0x9AB5C0", VA = "0x9AB5C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x9AB5C8", Offset = "0x9AB5C8", VA = "0x9AB5C8")]
		public void Expand(float amt)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x9AB5F8", Offset = "0x9AB5F8", VA = "0x9AB5F8")]
		public bool Encloses(DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x9AB600", Offset = "0x9AB600", VA = "0x9AB600", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000229")]
	public class MB3_UVTransformUtility
	{
		[Token(Token = "0x600147D")]
		[Address(RVA = "0x160CE74", Offset = "0x160CE74", VA = "0x160CE74")]
		public static void Test()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x160D1C4", Offset = "0x160D1C4", VA = "0x160D1C4")]
		public static float TransformX(DRect r, double x)
		{
			return default(float);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x15F5A38", Offset = "0x15F5A38", VA = "0x15F5A38")]
		public static DRect CombineTransforms(ref DRect r1, ref DRect r2)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x160D1D4", Offset = "0x160D1D4", VA = "0x160D1D4")]
		public static Rect CombineTransforms(ref Rect r1, ref Rect r2)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x15F5A10", Offset = "0x15F5A10", VA = "0x15F5A10")]
		public static DRect InverseTransform(ref DRect t)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x15F5A94", Offset = "0x15F5A94", VA = "0x15F5A94")]
		public static DRect GetShiftTransformToFitBinA(ref DRect A, ref DRect B)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x15F7EB4", Offset = "0x15F7EB4", VA = "0x15F7EB4")]
		public static DRect GetEncapsulatingRectShifted(ref DRect uvRect1, ref DRect willBeIn)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x160D2EC", Offset = "0x160D2EC", VA = "0x160D2EC")]
		public static DRect GetEncapsulatingRect(ref DRect uvRect1, ref DRect uvRect2)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x160D388", Offset = "0x160D388", VA = "0x160D388")]
		public static bool RectContainsShifted(ref DRect bucket, ref DRect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x160D4D4", Offset = "0x160D4D4", VA = "0x160D4D4")]
		public static bool RectContainsShifted(ref Rect bucket, ref Rect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x160D7D0", Offset = "0x160D7D0", VA = "0x160D7D0")]
		public static bool LineSegmentContainsShifted(float bucketOffset, float bucketLength, float tryFitOffset, float tryFitLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x160D8C8", Offset = "0x160D8C8", VA = "0x160D8C8")]
		public static bool RectContains(ref DRect bigRect, ref DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x160D640", Offset = "0x160D640", VA = "0x160D640")]
		public static bool RectContains(ref Rect bigRect, ref Rect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x160D170", Offset = "0x160D170", VA = "0x160D170")]
		public static Vector2 TransformPoint(ref DRect r, Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x160D968", Offset = "0x160D968", VA = "0x160D968")]
		public static DVector2 TransformPoint(ref DRect r, DVector2 p)
		{
			return default(DVector2);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x160D9AC", Offset = "0x160D9AC", VA = "0x160D9AC")]
		public MB3_UVTransformUtility()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022A")]
	public struct AtlasPadding
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int topBottom;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int leftRight;

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x9AB494", Offset = "0x9AB494", VA = "0x9AB494")]
		public AtlasPadding(int p)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x9AB49C", Offset = "0x9AB49C", VA = "0x9AB49C")]
		public AtlasPadding(int px, int py)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022B")]
	public class AtlasPackingResult
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int atlasX;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int atlasY;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int usedW;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int usedH;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rect[] rects;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AtlasPadding[] padding;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] srcImgIdxs;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object data;

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xEF923C", Offset = "0xEF923C", VA = "0xEF923C")]
		public AtlasPackingResult(AtlasPadding[] pds)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xEF9268", Offset = "0xEF9268", VA = "0xEF9268")]
		public void CalcUsedWidthAndHeight()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xEF954C", Offset = "0xEF954C", VA = "0xEF954C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022C")]
	public abstract class MB2_TexturePacker
	{
		[Token(Token = "0x20006A4")]
		internal enum NodeType
		{
			[Token(Token = "0x400235F")]
			Container,
			[Token(Token = "0x4002360")]
			maxDim,
			[Token(Token = "0x4002361")]
			regular
		}

		[Token(Token = "0x20006A5")]
		internal class PixRect
		{
			[Token(Token = "0x4002362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x4002363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int w;

			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int h;

			[Token(Token = "0x60030CA")]
			[Address(RVA = "0xEFB69C", Offset = "0xEFB69C", VA = "0xEFB69C")]
			public PixRect()
			{
			}

			[Token(Token = "0x60030CB")]
			[Address(RVA = "0xEFB6A4", Offset = "0xEFB6A4", VA = "0xEFB6A4")]
			public PixRect(int xx, int yy, int ww, int hh)
			{
			}

			[Token(Token = "0x60030CC")]
			[Address(RVA = "0xEFB6F0", Offset = "0xEFB6F0", VA = "0xEFB6F0", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x20006A6")]
		internal class Image
		{
			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int imgId;

			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int w;

			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int h;

			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int x;

			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int y;

			[Token(Token = "0x60030CD")]
			[Address(RVA = "0xEFB33C", Offset = "0xEFB33C", VA = "0xEFB33C")]
			public Image(int id, int tw, int th, AtlasPadding padding, int minImageSizeX, int minImageSizeY)
			{
			}

			[Token(Token = "0x60030CE")]
			[Address(RVA = "0xEFB40C", Offset = "0xEFB40C", VA = "0xEFB40C")]
			public Image(Image im)
			{
			}
		}

		[Token(Token = "0x20006A7")]
		internal class ImgIDComparer : IComparer<Image>
		{
			[Token(Token = "0x60030CF")]
			[Address(RVA = "0xEFB630", Offset = "0xEFB630", VA = "0xEFB630", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x60030D0")]
			[Address(RVA = "0xEFB694", Offset = "0xEFB694", VA = "0xEFB694")]
			public ImgIDComparer()
			{
			}
		}

		[Token(Token = "0x20006A8")]
		internal class ImageHeightComparer : IComparer<Image>
		{
			[Token(Token = "0x60030D1")]
			[Address(RVA = "0xEFB558", Offset = "0xEFB558", VA = "0xEFB558", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x60030D2")]
			[Address(RVA = "0xEFB5BC", Offset = "0xEFB5BC", VA = "0xEFB5BC")]
			public ImageHeightComparer()
			{
			}
		}

		[Token(Token = "0x20006A9")]
		internal class ImageWidthComparer : IComparer<Image>
		{
			[Token(Token = "0x60030D3")]
			[Address(RVA = "0xEFB5C4", Offset = "0xEFB5C4", VA = "0xEFB5C4", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x60030D4")]
			[Address(RVA = "0xEFB628", Offset = "0xEFB628", VA = "0xEFB628")]
			public ImageWidthComparer()
			{
			}
		}

		[Token(Token = "0x20006AA")]
		internal class ImageAreaComparer : IComparer<Image>
		{
			[Token(Token = "0x60030D5")]
			[Address(RVA = "0xEFB4BC", Offset = "0xEFB4BC", VA = "0xEFB4BC", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x60030D6")]
			[Address(RVA = "0xEFB550", Offset = "0xEFB550", VA = "0xEFB550")]
			public ImageAreaComparer()
			{
			}
		}

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool atlasMustBePowerOfTwo;

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xEFAA50", Offset = "0xEFAA50", VA = "0xEFAA50")]
		public static int RoundToNearestPositivePowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xEFAAE4", Offset = "0xEFAAE4", VA = "0xEFAAE4")]
		public static int CeilToNearestPowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001494")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding);

		[Token(Token = "0x6001495")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas);

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xEFAB70", Offset = "0xEFAB70", VA = "0xEFAB70")]
		internal bool ScaleAtlasToFitMaxDim(Vector2 rootWH, List<Image> images, int maxDimensionX, int maxDimensionY, AtlasPadding padding, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, ref int outW, ref int outH, out float padX, out float padY, out int newMinSizeX, out int newMinSizeY)
		{
			return default(bool);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xEFB05C", Offset = "0xEFB05C", VA = "0xEFB05C")]
		public void normalizeRects(AtlasPackingResult rr, AtlasPadding padding)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xEFB324", Offset = "0xEFB324", VA = "0xEFB324")]
		protected MB2_TexturePacker()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class MB2_TexturePackerRegular : MB2_TexturePacker
	{
		[Token(Token = "0x20006AB")]
		private class ProbeResult
		{
			[Token(Token = "0x400236B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int w;

			[Token(Token = "0x400236C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int h;

			[Token(Token = "0x400236D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int outW;

			[Token(Token = "0x400236E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int outH;

			[Token(Token = "0x400236F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Node root;

			[Token(Token = "0x4002370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool largerOrEqualToMaxDim;

			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float efficiency;

			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float squareness;

			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float totalAtlasArea;

			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int numAtlases;

			[Token(Token = "0x60030D7")]
			[Address(RVA = "0xF00018", Offset = "0xF00018", VA = "0xF00018")]
			public void Set(int ww, int hh, int outw, int outh, Node r, bool fits, float e, float sq)
			{
			}

			[Token(Token = "0x60030D8")]
			[Address(RVA = "0xF03FEC", Offset = "0xF03FEC", VA = "0xF03FEC")]
			public float GetScore(bool doPowerOfTwoScore)
			{
				return default(float);
			}

			[Token(Token = "0x60030D9")]
			[Address(RVA = "0xF040C8", Offset = "0xF040C8", VA = "0xF040C8")]
			public void PrintTree()
			{
			}

			[Token(Token = "0x60030DA")]
			[Address(RVA = "0xF03FE4", Offset = "0xF03FE4", VA = "0xF03FE4")]
			public ProbeResult()
			{
			}
		}

		[Token(Token = "0x20006AC")]
		internal class Node
		{
			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NodeType isFullAtlas;

			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Node[] child;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal PixRect r;

			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Image img;

			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ProbeResult bestRoot;

			[Token(Token = "0x60030DB")]
			[Address(RVA = "0xEFF7C4", Offset = "0xEFF7C4", VA = "0xEFF7C4")]
			internal Node(NodeType rootType)
			{
			}

			[Token(Token = "0x60030DC")]
			[Address(RVA = "0xF0403C", Offset = "0xF0403C", VA = "0xF0403C")]
			private bool isLeaf()
			{
				return default(bool);
			}

			[Token(Token = "0x60030DD")]
			[Address(RVA = "0xEFF838", Offset = "0xEFF838", VA = "0xEFF838")]
			internal Node Insert(Image im, bool handed)
			{
				return null;
			}
		}

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ProbeResult bestRoot;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int atlasY;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xEFE690", Offset = "0xEFE690", VA = "0xEFE690")]
		private static void printTree(Node r, string spc)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xEFEA04", Offset = "0xEFEA04", VA = "0xEFEA04")]
		private static void flattenTree(Node r, List<Image> putHere)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xEFEBA8", Offset = "0xEFEBA8", VA = "0xEFEBA8")]
		private static void drawGizmosNode(Node r)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xEFEEB0", Offset = "0xEFEEB0", VA = "0xEFEEB0")]
		private static Texture2D createFilledTex(Color c, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xEFEFC4", Offset = "0xEFEFC4", VA = "0xEFEFC4")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xEFF098", Offset = "0xEFF098", VA = "0xEFF098")]
		private bool ProbeSingleAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xF00034", Offset = "0xF00034", VA = "0xF00034")]
		private bool ProbeMultiAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xEFFE28", Offset = "0xEFFE28", VA = "0xEFFE28")]
		internal void GetExtent(Node r, ref int x, ref int y)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xF005D8", Offset = "0xF005D8", VA = "0xF005D8")]
		private int StepWidthHeight(int oldVal, int step, int maxDim)
		{
			return default(int);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xF00608", Offset = "0xF00608", VA = "0xF00608", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int atPadding)
		{
			return null;
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xF0071C", Offset = "0xF0071C", VA = "0xF0071C", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xF01F10", Offset = "0xF01F10", VA = "0xF01F10")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xF00928", Offset = "0xF00928", VA = "0xF00928")]
		private AtlasPackingResult[] _GetRectsMultiAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xF04024", Offset = "0xF04024", VA = "0xF04024")]
		public MB2_TexturePackerRegular()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class MB2_TexturePackerHorizontalVert : MB2_TexturePacker
	{
		[Token(Token = "0x20006AD")]
		public enum TexturePackingOrientation
		{
			[Token(Token = "0x400237B")]
			horizontal,
			[Token(Token = "0x400237C")]
			vertical
		}

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TexturePackingOrientation packingOrientation;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool stretchImagesToEdges;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xEFB908", Offset = "0xEFB908", VA = "0xEFB908", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding)
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xEFBA2C", Offset = "0xEFBA2C", VA = "0xEFBA2C", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xEFD3C4", Offset = "0xEFD3C4", VA = "0xEFD3C4")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xEFBC70", Offset = "0xEFBC70", VA = "0xEFBC70")]
		private AtlasPackingResult[] _GetRectsMultiAtlasVertical(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xEFC828", Offset = "0xEFC828", VA = "0xEFC828")]
		private AtlasPackingResult[] _GetRectsMultiAtlasHorizontal(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xEFE46C", Offset = "0xEFE46C", VA = "0xEFE46C")]
		private Image PopLargestThatFits(List<Image> images, int spaceRemaining, int maxDim, bool emptyAtlas)
		{
			return null;
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xEFE674", Offset = "0xEFE674", VA = "0xEFE674")]
		public MB2_TexturePackerHorizontalVert()
		{
		}
	}
	[Token(Token = "0x200022F")]
	internal interface MB_ITextureCombinerPacker
	{
		[Token(Token = "0x60014AE")]
		IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x60014AF")]
		AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x60014B0")]
		IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);
	}
	[Token(Token = "0x2000230")]
	internal abstract class MB3_TextureCombinerPackerRoot : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7DF4", Offset = "0x8F7DF4")]
		private sealed class <ConvertTexturesToReadableFormats>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030E1")]
				[Address(RVA = "0x1603CFC", Offset = "0x1603CFC", VA = "0x1603CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030E3")]
				[Address(RVA = "0x1603D6C", Offset = "0x1603D6C", VA = "0x1603D6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030DE")]
			[Address(RVA = "0x1603988", Offset = "0x1603988", VA = "0x1603988")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60030DF")]
			[Address(RVA = "0x16039C0", Offset = "0x16039C0", VA = "0x16039C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030E0")]
			[Address(RVA = "0x16039C4", Offset = "0x16039C4", VA = "0x16039C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030E2")]
			[Address(RVA = "0x1603D04", Offset = "0x1603D04", VA = "0x1603D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x15FEA1C", Offset = "0x15FEA1C", VA = "0x15FEA1C")]
		internal static void CreateTemporaryTexturesForAtlas(List<MB_TexSet> distinctMaterialTextures, MB3_TextureCombiner combiner, int propIdx, MB3_TextureCombinerPipeline.TexturePipelineData data)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x15FEDD8", Offset = "0x15FEDD8", VA = "0x15FEDD8")]
		public static AtlasPackingResult[] CalculateAtlasRectanglesStatic(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x160386C", Offset = "0x160386C", VA = "0x160386C")]
		public static void MakeProceduralTexturesReadable(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x16038D8", Offset = "0x16038D8", VA = "0x16038D8", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D7D8", Offset = "0x90D7D8")]
		public virtual IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x16039B4", Offset = "0x16039B4", VA = "0x16039B4", Slot = "8")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		public abstract IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x15FC2C8", Offset = "0x15FC2C8", VA = "0x15FC2C8")]
		protected MB3_TextureCombinerPackerRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000231")]
	public class ShaderTextureProperty
	{
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isNormalMap;

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xCB3134", Offset = "0xCB3134", VA = "0xCB3134")]
		public ShaderTextureProperty(string n, bool norm)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xCB3174", Offset = "0xCB3174", VA = "0xCB3174", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xCB3248", Offset = "0xCB3248", VA = "0xCB3248", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xCB3250", Offset = "0xCB3250", VA = "0xCB3250")]
		public static string[] GetNames(List<ShaderTextureProperty> props)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000232")]
	public class MB3_TextureCombiner
	{
		[Token(Token = "0x20006AF")]
		private class TemporaryTexture
		{
			[Token(Token = "0x4002382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string property;

			[Token(Token = "0x4002383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Texture2D texture;

			[Token(Token = "0x60030E4")]
			[Address(RVA = "0x15F57EC", Offset = "0x15F57EC", VA = "0x15F57EC")]
			public TemporaryTexture(string prop, Texture2D tex)
			{
			}
		}

		[Token(Token = "0x20006B0")]
		public class CombineTexturesIntoAtlasesCoroutineResult
		{
			[Token(Token = "0x4002384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool success;

			[Token(Token = "0x4002385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool isFinished;

			[Token(Token = "0x60030E5")]
			[Address(RVA = "0x15F57DC", Offset = "0x15F57DC", VA = "0x15F57DC")]
			public CombineTexturesIntoAtlasesCoroutineResult()
			{
			}
		}

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E04", Offset = "0x8F7E04")]
		private sealed class <CombineTexturesIntoAtlasesCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombineTexturesIntoAtlasesCoroutineResult coroutineResult;

			[Token(Token = "0x4002389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxTimePerFrame;

			[Token(Token = "0x400238A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x400238C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<AtlasPackingResult> packingResults;

			[Token(Token = "0x4002392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool onlyPackRects;

			[Token(Token = "0x17000523")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030E9")]
				[Address(RVA = "0x15F1618", Offset = "0x15F1618", VA = "0x15F1618", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000524")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030EB")]
				[Address(RVA = "0x15F1688", Offset = "0x15F1688", VA = "0x15F1688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030E6")]
			[Address(RVA = "0x15F11B8", Offset = "0x15F11B8", VA = "0x15F11B8")]
			[DebuggerHidden]
			public <CombineTexturesIntoAtlasesCoroutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x60030E7")]
			[Address(RVA = "0x15F11E4", Offset = "0x15F11E4", VA = "0x15F11E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030E8")]
			[Address(RVA = "0x15F11E8", Offset = "0x15F11E8", VA = "0x15F11E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030EA")]
			[Address(RVA = "0x15F1620", Offset = "0x15F1620", VA = "0x15F1620", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E14", Offset = "0x8F7E14")]
		private sealed class <_CombineTexturesIntoAtlases>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4002398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4002399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x400239A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x400239B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x400239C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool onlyPackRects;

			[Token(Token = "0x400239D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<AtlasPackingResult> atlasPackingResult;

			[Token(Token = "0x400239E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x400239F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x17000525")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030F0")]
				[Address(RVA = "0x15F2E2C", Offset = "0x15F2E2C", VA = "0x15F2E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000526")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030F2")]
				[Address(RVA = "0x15F2E9C", Offset = "0x15F2E9C", VA = "0x15F2E9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030EC")]
			[Address(RVA = "0x15F1690", Offset = "0x15F1690", VA = "0x15F1690")]
			[DebuggerHidden]
			public <_CombineTexturesIntoAtlases>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x60030ED")]
			[Address(RVA = "0x15F16BC", Offset = "0x15F16BC", VA = "0x15F16BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030EE")]
			[Address(RVA = "0x15F1A54", Offset = "0x15F1A54", VA = "0x15F1A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030EF")]
			[Address(RVA = "0x15F16E8", Offset = "0x15F16E8", VA = "0x15F16E8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60030F1")]
			[Address(RVA = "0x15F2E34", Offset = "0x15F2E34", VA = "0x15F2E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E24", Offset = "0x8F7E24")]
		private sealed class <__CombineTexturesIntoAtlases>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x40023A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40023A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40023A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x40023A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40023A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x40023A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private StringBuilder <report>5__2;

			[Token(Token = "0x40023A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private MB_ITextureCombinerPacker <texturePaker>5__3;

			[Token(Token = "0x17000527")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030F6")]
				[Address(RVA = "0x15F4E48", Offset = "0x15F4E48", VA = "0x15F4E48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000528")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030F8")]
				[Address(RVA = "0x15F4EB8", Offset = "0x15F4EB8", VA = "0x15F4EB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030F3")]
			[Address(RVA = "0x15F2EA4", Offset = "0x15F2EA4", VA = "0x15F2EA4")]
			[DebuggerHidden]
			public <__CombineTexturesIntoAtlases>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x60030F4")]
			[Address(RVA = "0x15F2ED0", Offset = "0x15F2ED0", VA = "0x15F2ED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030F5")]
			[Address(RVA = "0x15F2ED4", Offset = "0x15F2ED4", VA = "0x15F2ED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030F7")]
			[Address(RVA = "0x15F4E50", Offset = "0x15F4E50", VA = "0x15F4E50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E34", Offset = "0x8F7E34")]
		private sealed class <__RunTexturePacker>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x40023AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40023AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x40023AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40023B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<AtlasPackingResult> packingResult;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030FC")]
				[Address(RVA = "0x15F5764", Offset = "0x15F5764", VA = "0x15F5764", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030FE")]
				[Address(RVA = "0x15F57D4", Offset = "0x15F57D4", VA = "0x15F57D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030F9")]
			[Address(RVA = "0x15F4EC0", Offset = "0x15F4EC0", VA = "0x15F4EC0")]
			[DebuggerHidden]
			public <__RunTexturePacker>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x60030FA")]
			[Address(RVA = "0x15F4EEC", Offset = "0x15F4EEC", VA = "0x15F4EEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030FB")]
			[Address(RVA = "0x15F4EF0", Offset = "0x15F4EF0", VA = "0x15F4EF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030FD")]
			[Address(RVA = "0x15F576C", Offset = "0x15F576C", VA = "0x15F576C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int _atlasPadding;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int _maxAtlasSize;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected int _maxAtlasWidthOverride;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int _maxAtlasHeightOverride;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _useMaxAtlasWidthOverride;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		protected bool _useMaxAtlasHeightOverride;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		protected bool _resizePowerOfTwoTextures;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		protected bool _fixOutOfBoundsUVs;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected int _maxTilingBakeSize;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool _saveAtlasesAsAssets;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected MB2_PackingAlgorithmEnum _packingAlgorithm;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected bool _meshBakerTexturePackerForcePowerOfTwo;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected List<ShaderTextureProperty> _customShaderPropNames;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected bool _normalizeTexelDensity;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		protected bool _considerNonTextureProperties;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<TemporaryTexture> _temporaryTextures;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _RunCorutineWithoutPauseIsRunning;

		[Token(Token = "0x1700015B")]
		public MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x14B64A4", Offset = "0x14B64A4", VA = "0x14B64A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x14B64AC", Offset = "0x14B64AC", VA = "0x14B64AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public int atlasPadding
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x14B64B4", Offset = "0x14B64B4", VA = "0x14B64B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x14B64BC", Offset = "0x14B64BC", VA = "0x14B64BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public int maxAtlasSize
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x14B64C4", Offset = "0x14B64C4", VA = "0x14B64C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x14B64CC", Offset = "0x14B64CC", VA = "0x14B64CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public virtual int maxAtlasWidthOverride
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x14B64D4", Offset = "0x14B64D4", VA = "0x14B64D4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x14B64DC", Offset = "0x14B64DC", VA = "0x14B64DC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public virtual int maxAtlasHeightOverride
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x14B64E4", Offset = "0x14B64E4", VA = "0x14B64E4", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x14B64EC", Offset = "0x14B64EC", VA = "0x14B64EC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public virtual bool useMaxAtlasWidthOverride
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x14B64F4", Offset = "0x14B64F4", VA = "0x14B64F4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x14B64FC", Offset = "0x14B64FC", VA = "0x14B64FC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public virtual bool useMaxAtlasHeightOverride
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x14B6508", Offset = "0x14B6508", VA = "0x14B6508", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x14B6510", Offset = "0x14B6510", VA = "0x14B6510", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public bool resizePowerOfTwoTextures
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x14B651C", Offset = "0x14B651C", VA = "0x14B651C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x14B6524", Offset = "0x14B6524", VA = "0x14B6524")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public bool fixOutOfBoundsUVs
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x14B6530", Offset = "0x14B6530", VA = "0x14B6530")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x14B6538", Offset = "0x14B6538", VA = "0x14B6538")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public int maxTilingBakeSize
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x14B6544", Offset = "0x14B6544", VA = "0x14B6544")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x14B654C", Offset = "0x14B654C", VA = "0x14B654C")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public bool saveAtlasesAsAssets
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x14B6554", Offset = "0x14B6554", VA = "0x14B6554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x14B655C", Offset = "0x14B655C", VA = "0x14B655C")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public MB2_PackingAlgorithmEnum packingAlgorithm
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x14B6568", Offset = "0x14B6568", VA = "0x14B6568")]
			get
			{
				return default(MB2_PackingAlgorithmEnum);
			}
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x14B6570", Offset = "0x14B6570", VA = "0x14B6570")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public bool meshBakerTexturePackerForcePowerOfTwo
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x14B6578", Offset = "0x14B6578", VA = "0x14B6578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x14B6580", Offset = "0x14B6580", VA = "0x14B6580")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public List<ShaderTextureProperty> customShaderPropNames
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x14B658C", Offset = "0x14B658C", VA = "0x14B658C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x14B6594", Offset = "0x14B6594", VA = "0x14B6594")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public bool considerNonTextureProperties
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x14B659C", Offset = "0x14B659C", VA = "0x14B659C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x14B65A4", Offset = "0x14B65A4", VA = "0x14B65A4")]
			set
			{
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x14B65B0", Offset = "0x14B65B0", VA = "0x14B65B0")]
		public static void RunCorutineWithoutPause(IEnumerator cor, int recursionDepth)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x14B6908", Offset = "0x14B6908", VA = "0x14B6908")]
		public bool CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x14B6B98", Offset = "0x14B6B98", VA = "0x14B6B98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D83C", Offset = "0x90D83C")]
		public IEnumerator CombineTexturesIntoAtlasesCoroutine(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] CombineTexturesIntoAtlasesCoroutineResult coroutineResult, float maxTimePerFrame = 0.01f, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false)
		{
			return null;
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x14B6A20", Offset = "0x14B6A20", VA = "0x14B6A20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D8A0", Offset = "0x90D8A0")]
		private IEnumerator _CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> atlasPackingResult, bool onlyPackRects)
		{
			return null;
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x14B6D24", Offset = "0x14B6D24", VA = "0x14B6D24")]
		private MB3_TextureCombinerPipeline.TexturePipelineData LoadPipelineData(Material resultMaterial, List<ShaderTextureProperty> texPropertyNames, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, List<MB_TexSet> distinctMaterialTextures)
		{
			return null;
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x14B6EC8", Offset = "0x14B6EC8", VA = "0x14B6EC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D904", Offset = "0x90D904")]
		private IEnumerator __CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, MB3_TextureCombinerPipeline.TexturePipelineData data, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x14B6FC8", Offset = "0x14B6FC8", VA = "0x14B6FC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90D968", Offset = "0x90D968")]
		private IEnumerator __RunTexturePacker(CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> packingResult)
		{
			return null;
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x14B70A8", Offset = "0x14B70A8", VA = "0x14B70A8")]
		internal int _getNumTemporaryTextures()
		{
			return default(int);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x14B7108", Offset = "0x14B7108", VA = "0x14B7108")]
		public Texture2D _createTemporaryTexture(string propertyName, int w, int h, TextureFormat texFormat, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x14B7308", Offset = "0x14B7308", VA = "0x14B7308")]
		internal Texture2D _createTextureCopy(string propertyName, Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x14B74D4", Offset = "0x14B74D4", VA = "0x14B74D4")]
		internal Texture2D _resizeTexture(string propertyName, Texture2D t, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x14B7678", Offset = "0x14B7678", VA = "0x14B7678")]
		internal void _destroyAllTemporaryTextures()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x14B782C", Offset = "0x14B782C", VA = "0x14B782C")]
		internal void _destroyTemporaryTextures(string propertyName)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x14B7C34", Offset = "0x14B7C34", VA = "0x14B7C34")]
		public void _restoreProceduralMaterials()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x14B7C38", Offset = "0x14B7C38", VA = "0x14B7C38")]
		public void SuggestTreatment(List<GameObject> objsToMesh, Material[] resultMaterials, List<ShaderTextureProperty> _customShaderPropNames)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x14B93D4", Offset = "0x14B93D4", VA = "0x14B93D4")]
		private string PrintList(List<GameObject> gos)
		{
			return null;
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x14B94EC", Offset = "0x14B94EC", VA = "0x14B94EC")]
		public MB3_TextureCombiner()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class MeshBakerMaterialTexture
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Texture2D _t;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float texelDensity;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool readyToBuildAtlases;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DRect encapsulatingSamplingRect;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC5CC", Offset = "0x8FC5CC")]
		private DRect <matTilingRect>k__BackingField;

		[Token(Token = "0x1700016A")]
		public Texture2D t
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0xCB1558", Offset = "0xCB1558", VA = "0xCB1558")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public DRect matTilingRect
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0xCAE938", Offset = "0xCAE938", VA = "0xCAE938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D9CC", Offset = "0x90D9CC")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xCB1560", Offset = "0xCB1560", VA = "0xCB1560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D9DC", Offset = "0x90D9DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public bool isNull
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xCB18D4", Offset = "0xCB18D4", VA = "0xCB18D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016D")]
		public int width
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xCB1944", Offset = "0xCB1944", VA = "0xCB1944")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016E")]
		public int height
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0xCB1A1C", Offset = "0xCB1A1C", VA = "0xCB1A1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xCB156C", Offset = "0xCB156C", VA = "0xCB156C")]
		public MeshBakerMaterialTexture()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xCB1574", Offset = "0xCB1574", VA = "0xCB1574")]
		public MeshBakerMaterialTexture(Texture tx)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xCB1678", Offset = "0xCB1678", VA = "0xCB1678")]
		public MeshBakerMaterialTexture(Texture tx, Vector2 matTilingOffset, Vector2 matTilingScale, float texelDens)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xCAE174", Offset = "0xCAE174", VA = "0xCAE174")]
		public DRect GetEncapsulatingSamplingRect()
		{
			return default(DRect);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xCAE180", Offset = "0xCAE180", VA = "0xCAE180")]
		public void SetEncapsulatingSamplingRect(MB_TexSet ts, DRect r)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xCB17E8", Offset = "0xCB17E8", VA = "0xCB17E8")]
		public Texture2D GetTexture2D()
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xCB1AF4", Offset = "0xCB1AF4", VA = "0xCB1AF4")]
		public string GetTexName()
		{
			return null;
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xCB1B9C", Offset = "0xCB1B9C", VA = "0xCB1B9C")]
		public bool AreTexturesEqual(MeshBakerMaterialTexture b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000234")]
	public class MatAndTransformToMerged
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC5DC", Offset = "0x8FC5DC")]
		private DRect <obUVRectIfTilingSame>k__BackingField;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC5EC", Offset = "0x8FC5EC")]
		private DRect <samplingRectMatAndUVTiling>k__BackingField;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC5FC", Offset = "0x8FC5FC")]
		private DRect <materialTiling>k__BackingField;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string objName;

		[Token(Token = "0x1700016F")]
		public DRect obUVRectIfTilingSame
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xCB10C8", Offset = "0xCB10C8", VA = "0xCB10C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D9EC", Offset = "0x90D9EC")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xCB10D4", Offset = "0xCB10D4", VA = "0xCB10D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90D9FC", Offset = "0x90D9FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public DRect samplingRectMatAndUVTiling
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xCB10E0", Offset = "0xCB10E0", VA = "0xCB10E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA0C", Offset = "0x90DA0C")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0xCB10EC", Offset = "0xCB10EC", VA = "0xCB10EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA1C", Offset = "0x90DA1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public DRect materialTiling
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0xCAE258", Offset = "0xCAE258", VA = "0xCAE258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA2C", Offset = "0x90DA2C")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6001500")]
			[Address(RVA = "0xCB10F8", Offset = "0xCB10F8", VA = "0xCB10F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA3C", Offset = "0x90DA3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xCB1104", Offset = "0xCB1104", VA = "0xCB1104")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xCB11E0", Offset = "0xCB11E0", VA = "0xCB11E0")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xCB1168", Offset = "0xCB1168", VA = "0xCB1168")]
		private void _init(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xCB1250", Offset = "0xCB1250", VA = "0xCB1250", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xCB1338", Offset = "0xCB1338", VA = "0xCB1338", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xCB13D4", Offset = "0xCB13D4", VA = "0xCB13D4")]
		public string GetMaterialName()
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xCB14A0", Offset = "0xCB14A0", VA = "0xCB14A0")]
		public void AssignInitialValuesForMaterialTilingAndSamplingRectMatAndUVTiling(bool allTexturesUseSameMatTiling, DRect matTiling)
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class MatsAndGOs
	{
		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MatAndTransformToMerged> mats;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> gos;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xCB1550", Offset = "0xCB1550", VA = "0xCB1550")]
		public MatsAndGOs()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class MB_TexSet
	{
		[Token(Token = "0x20006B5")]
		private interface PipelineVariation
		{
			[Token(Token = "0x60030FF")]
			void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect);

			[Token(Token = "0x6003100")]
			void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment);

			[Token(Token = "0x6003101")]
			Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex);

			[Token(Token = "0x6003102")]
			void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props);
		}

		[Token(Token = "0x20006B6")]
		private class PipelineVariationAllTexturesUseSameMatTiling : PipelineVariation
		{
			[Token(Token = "0x40023B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB_TexSet texSet;

			[Token(Token = "0x6003103")]
			[Address(RVA = "0xCADDB4", Offset = "0xCADDB4", VA = "0xCADDB4")]
			public PipelineVariationAllTexturesUseSameMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x6003104")]
			[Address(RVA = "0xCADDE0", Offset = "0xCADDE0", VA = "0xCADDE0", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x6003105")]
			[Address(RVA = "0xCADF3C", Offset = "0xCADF3C", VA = "0xCADF3C", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x6003106")]
			[Address(RVA = "0xCAE18C", Offset = "0xCAE18C", VA = "0xCAE18C", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x6003107")]
			[Address(RVA = "0xCAE264", Offset = "0xCAE264", VA = "0xCAE264", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x20006B7")]
		private class PipelineVariationSomeTexturesUseDifferentMatTiling : PipelineVariation
		{
			[Token(Token = "0x40023B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB_TexSet texSet;

			[Token(Token = "0x6003108")]
			[Address(RVA = "0xCAE268", Offset = "0xCAE268", VA = "0xCAE268")]
			public PipelineVariationSomeTexturesUseDifferentMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x6003109")]
			[Address(RVA = "0xCAE294", Offset = "0xCAE294", VA = "0xCAE294", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x600310A")]
			[Address(RVA = "0xCAE40C", Offset = "0xCAE40C", VA = "0xCAE40C", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x600310B")]
			[Address(RVA = "0xCAE644", Offset = "0xCAE644", VA = "0xCAE644", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x600310C")]
			[Address(RVA = "0xCAE684", Offset = "0xCAE684", VA = "0xCAE684", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshBakerMaterialTexture[] ts;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MatsAndGOs matsAndGOs;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC60C", Offset = "0x8FC60C")]
		private bool <allTexturesUseSameMatTiling>k__BackingField;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC61C", Offset = "0x8FC61C")]
		private bool <thisIsOnlyTexSetInAtlas>k__BackingField;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC62C", Offset = "0x8FC62C")]
		private MB_TextureTilingTreatment <tilingTreatment>k__BackingField;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC63C", Offset = "0x8FC63C")]
		private Vector2 <obUVoffset>k__BackingField;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC64C", Offset = "0x8FC64C")]
		private Vector2 <obUVscale>k__BackingField;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int idealWidth;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int idealHeight;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PipelineVariation pipelineVariation;

		[Token(Token = "0x17000172")]
		public bool allTexturesUseSameMatTiling
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x15F8B14", Offset = "0x15F8B14", VA = "0x15F8B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA4C", Offset = "0x90DA4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x1610174", Offset = "0x1610174", VA = "0x1610174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA5C", Offset = "0x90DA5C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public bool thisIsOnlyTexSetInAtlas
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x160CDE0", Offset = "0x160CDE0", VA = "0x160CDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA6C", Offset = "0x90DA6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x1610180", Offset = "0x1610180", VA = "0x1610180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA7C", Offset = "0x90DA7C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public MB_TextureTilingTreatment tilingTreatment
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x15F8B1C", Offset = "0x15F8B1C", VA = "0x15F8B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA8C", Offset = "0x90DA8C")]
			get
			{
				return default(MB_TextureTilingTreatment);
			}
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x161018C", Offset = "0x161018C", VA = "0x161018C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DA9C", Offset = "0x90DA9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public Vector2 obUVoffset
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x16063A0", Offset = "0x16063A0", VA = "0x16063A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DAAC", Offset = "0x90DAAC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x1610194", Offset = "0x1610194", VA = "0x1610194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DABC", Offset = "0x90DABC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public Vector2 obUVscale
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x16063A8", Offset = "0x16063A8", VA = "0x16063A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DACC", Offset = "0x90DACC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x161019C", Offset = "0x161019C", VA = "0x161019C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90DADC", Offset = "0x90DADC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		internal DRect obUVrect
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x16101A4", Offset = "0x16101A4", VA = "0x16101A4")]
			get
			{
				return default(DRect);
			}
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x160B9BC", Offset = "0x160B9BC", VA = "0x160B9BC")]
		public MB_TexSet(MeshBakerMaterialTexture[] tss, Vector2 uvOffset, Vector2 uvScale, MB_TextureTilingTreatment treatment)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1607BBC", Offset = "0x1607BBC", VA = "0x1607BBC")]
		internal bool IsEqual(object obj, bool fixOutOfBoundsUVs, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x16101E0", Offset = "0x16101E0", VA = "0x16101E0")]
		private Rect GetEncapsulatingSamplingRectIfTilingSame()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x15F806C", Offset = "0x15F806C", VA = "0x15F806C")]
		public void SetEncapsulatingSamplingRectWhenMergingTexSets(DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x16102B0", Offset = "0x16102B0", VA = "0x16102B0")]
		public void SetEncapsulatingSamplingRectForTesting(int propIdx, DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x16096B0", Offset = "0x16096B0", VA = "0x16096B0")]
		public void SetEncapsulatingRect(int propIdx, bool considerMeshUVs)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1603704", Offset = "0x1603704", VA = "0x1603704")]
		public void CreateColoredTexToReplaceNull(string propName, int propIdx, bool considerMeshUVs, MB3_TextureCombiner combiner, Color col)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x16096A4", Offset = "0x16096A4", VA = "0x16096A4")]
		public void SetThisIsOnlyTexSetInAtlasTrue()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x15F7588", Offset = "0x15F7588", VA = "0x15F7588")]
		public void SetAllTexturesUseSameMatTilingTrue()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x160CA44", Offset = "0x160CA44", VA = "0x160CA44")]
		public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1601A10", Offset = "0x1601A10", VA = "0x1601A10")]
		public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x160CB14", Offset = "0x160CB14", VA = "0x160CB14")]
		internal void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x160CBE0", Offset = "0x160CBE0", VA = "0x160CBE0")]
		internal Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x15F75F4", Offset = "0x15F75F4", VA = "0x15F75F4")]
		internal void CalcInitialFullSamplingRects(bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x15F7940", Offset = "0x15F7940", VA = "0x15F7940")]
		internal void CalcMatAndUVSamplingRects()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x15F7B64", Offset = "0x15F7B64", VA = "0x15F7B64")]
		public bool AllTexturesAreSameForMerge(MB_TexSet other, bool considerNonTextureProperties, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1610358", Offset = "0x1610358", VA = "0x1610358")]
		internal void DrawRectsToMergeGizmos(Color encC, Color innerC)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x15F72D0", Offset = "0x15F72D0", VA = "0x15F72D0")]
		internal string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1610688", Offset = "0x1610688", VA = "0x1610688")]
		internal string GetMatSubrectDescriptions()
		{
			return null;
		}
	}
	[Token(Token = "0x2000237")]
	public class MB3_TextureCombinerMerging
	{
		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool fixOutOfBoundsUVs;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS;

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x15F5824", Offset = "0x15F5824", VA = "0x15F5824")]
		public static Rect BuildTransformMeshUV2AtlasRect(bool considerMeshUVs, Rect _atlasRect, Rect _obUVRect, Rect _sourceMaterialTiling, Rect _encapsulatingRect)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x15F5BC8", Offset = "0x15F5BC8", VA = "0x15F5BC8")]
		public MB3_TextureCombinerMerging(bool considerNonTextureProps, MB3_TextureCombinerNonTextureProperties resultMaterialTexBlender, bool fixObUVs, MB2_LogLevel logLevel)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x15F5C34", Offset = "0x15F5C34", VA = "0x15F5C34")]
		public void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(List<MB_TexSet> distinctMaterialTextures)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x15F813C", Offset = "0x15F813C", VA = "0x15F813C")]
		public void DoIntegrityCheckMergedEncapsulatingSamplingRects(List<MB_TexSet> distinctMaterialTextures)
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class MB3_TextureCombinerNonTextureProperties
	{
		[Token(Token = "0x20006B8")]
		public interface MaterialProperty
		{
			[Token(Token = "0x1700052B")]
			string PropertyName
			{
				[Token(Token = "0x600310D")]
				get;
				[Token(Token = "0x600310E")]
				set;
			}

			[Token(Token = "0x600310F")]
			MaterialPropertyValueAveraged GetAverageCalculator();

			[Token(Token = "0x6003110")]
			object GetDefaultValue();
		}

		[Token(Token = "0x20006B9")]
		public class MaterialPropertyFloat : MaterialProperty
		{
			[Token(Token = "0x40023B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90339C", Offset = "0x90339C")]
			private string <PropertyName>k__BackingField;

			[Token(Token = "0x40023B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MaterialPropertyValueAveragedFloat _averageCalc;

			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float _defaultValue;

			[Token(Token = "0x1700052C")]
			public string PropertyName
			{
				[Token(Token = "0x6003111")]
				[Address(RVA = "0x15FA580", Offset = "0x15FA580", VA = "0x15FA580", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915ED0", Offset = "0x915ED0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003112")]
				[Address(RVA = "0x15FA588", Offset = "0x15FA588", VA = "0x15FA588", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915EE0", Offset = "0x915EE0")]
				set
				{
				}
			}

			[Token(Token = "0x6003113")]
			[Address(RVA = "0x15F93E0", Offset = "0x15F93E0", VA = "0x15F93E0")]
			public MaterialPropertyFloat(string name, float defValue)
			{
			}

			[Token(Token = "0x6003114")]
			[Address(RVA = "0x15FA598", Offset = "0x15FA598", VA = "0x15FA598", Slot = "6")]
			public MaterialPropertyValueAveraged GetAverageCalculator()
			{
				return null;
			}

			[Token(Token = "0x6003115")]
			[Address(RVA = "0x15FA5A0", Offset = "0x15FA5A0", VA = "0x15FA5A0", Slot = "7")]
			public object GetDefaultValue()
			{
				return null;
			}
		}

		[Token(Token = "0x20006BA")]
		public class MaterialPropertyColor : MaterialProperty
		{
			[Token(Token = "0x40023B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9033AC", Offset = "0x9033AC")]
			private string <PropertyName>k__BackingField;

			[Token(Token = "0x40023B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MaterialPropertyValueAveragedColor _averageCalc;

			[Token(Token = "0x40023B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Color _defaultValue;

			[Token(Token = "0x1700052D")]
			public string PropertyName
			{
				[Token(Token = "0x6003116")]
				[Address(RVA = "0x15FA4FC", Offset = "0x15FA4FC", VA = "0x15FA4FC", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915EF0", Offset = "0x915EF0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003117")]
				[Address(RVA = "0x15FA504", Offset = "0x15FA504", VA = "0x15FA504", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x915F00", Offset = "0x915F00")]
				set
				{
				}
			}

			[Token(Token = "0x6003118")]
			[Address(RVA = "0x15F9340", Offset = "0x15F9340", VA = "0x15F9340")]
			public MaterialPropertyColor(string name, Color defaultVal)
			{
			}

			[Token(Token = "0x6003119")]
			[Address(RVA = "0x15FA514", Offset = "0x15FA514", VA = "0x15FA514", Slot = "6")]
			public MaterialPropertyValueAveraged GetAverageCalculator()
			{
				return null;
			}

			[Token(Token = "0x600311A")]
			[Address(RVA = "0x15FA51C", Offset = "0x15FA51C", VA = "0x15FA51C", Slot = "7")]
			public object GetDefaultValue()
			{
				return null;
			}
		}

		[Token(Token = "0x20006BB")]
		public interface MaterialPropertyValueAveraged
		{
			[Token(Token = "0x600311B")]
			void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property);

			[Token(Token = "0x600311C")]
			object GetAverage();

			[Token(Token = "0x600311D")]
			int NumValues();

			[Token(Token = "0x600311E")]
			void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property);
		}

		[Token(Token = "0x20006BC")]
		public class MaterialPropertyValueAveragedFloat : MaterialPropertyValueAveraged
		{
			[Token(Token = "0x40023B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float averageVal;

			[Token(Token = "0x40023BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int numValues;

			[Token(Token = "0x600311F")]
			[Address(RVA = "0x15FAB8C", Offset = "0x15FAB8C", VA = "0x15FAB8C", Slot = "4")]
			public void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6003120")]
			[Address(RVA = "0x15FAD34", Offset = "0x15FAD34", VA = "0x15FAD34", Slot = "5")]
			public object GetAverage()
			{
				return null;
			}

			[Token(Token = "0x6003121")]
			[Address(RVA = "0x15FAD98", Offset = "0x15FAD98", VA = "0x15FAD98", Slot = "6")]
			public int NumValues()
			{
				return default(int);
			}

			[Token(Token = "0x6003122")]
			[Address(RVA = "0x15FADA0", Offset = "0x15FADA0", VA = "0x15FADA0", Slot = "7")]
			public void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6003123")]
			[Address(RVA = "0x15FA590", Offset = "0x15FA590", VA = "0x15FA590")]
			public MaterialPropertyValueAveragedFloat()
			{
			}
		}

		[Token(Token = "0x20006BD")]
		public class MaterialPropertyValueAveragedColor : MaterialPropertyValueAveraged
		{
			[Token(Token = "0x40023BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color averageVal;

			[Token(Token = "0x40023BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numValues;

			[Token(Token = "0x6003124")]
			[Address(RVA = "0x15FA604", Offset = "0x15FA604", VA = "0x15FA604", Slot = "4")]
			public void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6003125")]
			[Address(RVA = "0x15FA84C", Offset = "0x15FA84C", VA = "0x15FA84C", Slot = "5")]
			public object GetAverage()
			{
				return null;
			}

			[Token(Token = "0x6003126")]
			[Address(RVA = "0x15FA8B0", Offset = "0x15FA8B0", VA = "0x15FA8B0", Slot = "6")]
			public int NumValues()
			{
				return default(int);
			}

			[Token(Token = "0x6003127")]
			[Address(RVA = "0x15FA8B8", Offset = "0x15FA8B8", VA = "0x15FA8B8", Slot = "7")]
			public void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6003128")]
			[Address(RVA = "0x15FA50C", Offset = "0x15FA50C", VA = "0x15FA50C")]
			public MaterialPropertyValueAveragedColor()
			{
			}
		}

		[Token(Token = "0x20006BE")]
		public struct TexPropertyNameColorPair
		{
			[Token(Token = "0x40023BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x40023BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color color;

			[Token(Token = "0x6003129")]
			[Address(RVA = "0x9B89C4", Offset = "0x9B89C4", VA = "0x9B89C4")]
			public TexPropertyNameColorPair(string nm, Color col)
			{
			}
		}

		[Token(Token = "0x20006BF")]
		private interface NonTextureProperties
		{
			[Token(Token = "0x600312A")]
			bool NonTexturePropertiesAreEqual(Material a, Material b);

			[Token(Token = "0x600312B")]
			Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName);

			[Token(Token = "0x600312C")]
			void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods);

			[Token(Token = "0x600312D")]
			Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty);

			[Token(Token = "0x600312E")]
			Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty);
		}

		[Token(Token = "0x20006C0")]
		private class NonTexturePropertiesDontBlendProps : NonTextureProperties
		{
			[Token(Token = "0x40023BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_TextureCombinerNonTextureProperties _textureProperties;

			[Token(Token = "0x600312F")]
			[Address(RVA = "0x15F9468", Offset = "0x15F9468", VA = "0x15F9468")]
			public NonTexturePropertiesDontBlendProps(MB3_TextureCombinerNonTextureProperties textureProperties)
			{
			}

			[Token(Token = "0x6003130")]
			[Address(RVA = "0x15FBA60", Offset = "0x15FBA60", VA = "0x15FBA60", Slot = "4")]
			public bool NonTexturePropertiesAreEqual(Material a, Material b)
			{
				return default(bool);
			}

			[Token(Token = "0x6003131")]
			[Address(RVA = "0x15FBA68", Offset = "0x15FBA68", VA = "0x15FBA68", Slot = "5")]
			public Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
			{
				return null;
			}

			[Token(Token = "0x6003132")]
			[Address(RVA = "0x15FBAE0", Offset = "0x15FBAE0", VA = "0x15FBAE0", Slot = "6")]
			public void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
			{
			}

			[Token(Token = "0x6003133")]
			[Address(RVA = "0x15FBE08", Offset = "0x15FBE08", VA = "0x15FBE08", Slot = "8")]
			public Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}

			[Token(Token = "0x6003134")]
			[Address(RVA = "0x15FBE10", Offset = "0x15FBE10", VA = "0x15FBE10", Slot = "7")]
			public Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x20006C1")]
		private class NonTexturePropertiesBlendProps : NonTextureProperties
		{
			[Token(Token = "0x40023C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_TextureCombinerNonTextureProperties _textureProperties;

			[Token(Token = "0x40023C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TextureBlender resultMaterialTextureBlender;

			[Token(Token = "0x6003135")]
			[Address(RVA = "0x15F9FCC", Offset = "0x15F9FCC", VA = "0x15F9FCC")]
			public NonTexturePropertiesBlendProps(MB3_TextureCombinerNonTextureProperties textureProperties, TextureBlender resultMats)
			{
			}

			[Token(Token = "0x6003136")]
			[Address(RVA = "0x15FB060", Offset = "0x15FB060", VA = "0x15FB060", Slot = "4")]
			public bool NonTexturePropertiesAreEqual(Material a, Material b)
			{
				return default(bool);
			}

			[Token(Token = "0x6003137")]
			[Address(RVA = "0x15FB130", Offset = "0x15FB130", VA = "0x15FB130", Slot = "5")]
			public Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
			{
				return null;
			}

			[Token(Token = "0x6003138")]
			[Address(RVA = "0x15FB5B0", Offset = "0x15FB5B0", VA = "0x15FB5B0", Slot = "6")]
			public void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
			{
			}

			[Token(Token = "0x6003139")]
			[Address(RVA = "0x15FB7E0", Offset = "0x15FB7E0", VA = "0x15FB7E0", Slot = "8")]
			public Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}

			[Token(Token = "0x600313A")]
			[Address(RVA = "0x15FB990", Offset = "0x15FB990", VA = "0x15FB990", Slot = "7")]
			public Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color NEUTRAL_NORMAL_MAP_COLOR;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TexPropertyNameColorPair[] defaultTextureProperty2DefaultColorMap;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MaterialProperty[] _nonTextureProperties;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextureBlender resultMaterialTextureBlender;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextureBlender[] textureBlenders;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, Color> textureProperty2DefaultColorMap;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NonTextureProperties _nonTexturePropertiesBlender;

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x15F8B28", Offset = "0x15F8B28", VA = "0x15F8B28")]
		public MB3_TextureCombinerNonTextureProperties(MB2_LogLevel ll, bool considerNonTextureProps)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x15F9494", Offset = "0x15F9494", VA = "0x15F9494")]
		internal void CollectAverageValuesOfNonTextureProperties(Material resultMaterial, Material mat)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x15F2DE8", Offset = "0x15F2DE8", VA = "0x15F2DE8")]
		internal void LoadTextureBlendersIfNeeded(Material resultMaterial)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x15F9DFC", Offset = "0x15F9DFC", VA = "0x15F9DFC")]
		private static bool InterfaceFilter(Type typeObj, object criteriaObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x15F9C88", Offset = "0x15F9C88", VA = "0x15F9C88")]
		private void FindBestTextureBlender(Material resultMaterial)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x15F96D8", Offset = "0x15F96D8", VA = "0x15F96D8")]
		private void LoadTextureBlenders()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x15FA004", Offset = "0x15FA004", VA = "0x15FA004")]
		internal bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x15FA0D0", Offset = "0x15FA0D0", VA = "0x15FA0D0")]
		internal Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
		{
			return null;
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x15FA1B0", Offset = "0x15FA1B0", VA = "0x15FA1B0")]
		internal void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x15FA2E4", Offset = "0x15FA2E4", VA = "0x15FA2E4")]
		internal Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x15FA3B4", Offset = "0x15FA3B4", VA = "0x15FA3B4")]
		internal Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x15F9E60", Offset = "0x15F9E60", VA = "0x15F9E60")]
		private TextureBlender FindMatchingTextureBlender(string shaderName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000239")]
	internal class MB3_TextureCombinerPackerMeshBaker : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E44", Offset = "0x8F7E44")]
		private sealed class <CreateAtlases>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x40023C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40023C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40023C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x40023C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40023C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40023CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D[] atlases;

			[Token(Token = "0x40023CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Rect[] <uvRects>5__2;

			[Token(Token = "0x40023CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <atlasSizeX>5__3;

			[Token(Token = "0x40023CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <atlasSizeY>5__4;

			[Token(Token = "0x40023CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <propIdx>5__5;

			[Token(Token = "0x40023CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ShaderTextureProperty <property>5__6;

			[Token(Token = "0x40023D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color[][] <atlasPixels>5__7;

			[Token(Token = "0x40023D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <isNormalMap>5__8;

			[Token(Token = "0x40023D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private int <texSetIdx>5__9;

			[Token(Token = "0x1700052E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600313E")]
				[Address(RVA = "0x15FECC8", Offset = "0x15FECC8", VA = "0x15FECC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003140")]
				[Address(RVA = "0x15FED38", Offset = "0x15FED38", VA = "0x15FED38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600313B")]
			[Address(RVA = "0x15FC08C", Offset = "0x15FC08C", VA = "0x15FC08C")]
			[DebuggerHidden]
			public <CreateAtlases>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600313C")]
			[Address(RVA = "0x15FD360", Offset = "0x15FD360", VA = "0x15FD360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600313D")]
			[Address(RVA = "0x15FD364", Offset = "0x15FD364", VA = "0x15FD364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600313F")]
			[Address(RVA = "0x15FECD0", Offset = "0x15FECD0", VA = "0x15FECD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E54", Offset = "0x8F7E54")]
		private sealed class <CopyScaledAndTiledToAtlas>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshBakerMaterialTexture source;

			[Token(Token = "0x40023D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40023D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int targX;

			[Token(Token = "0x40023D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int targY;

			[Token(Token = "0x40023D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int targW;

			[Token(Token = "0x40023DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int targH;

			[Token(Token = "0x40023DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public AtlasPadding padding;

			[Token(Token = "0x40023DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public DRect srcSamplingRect;

			[Token(Token = "0x40023DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40023DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x40023DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public ShaderTextureProperty shaderPropertyName;

			[Token(Token = "0x40023E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public MB_TexSet sourceMaterial;

			[Token(Token = "0x40023E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40023E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Color[][] atlasPixels;

			[Token(Token = "0x40023E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int <w>5__2;

			[Token(Token = "0x40023E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private int <h>5__3;

			[Token(Token = "0x40023E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private int <i>5__4;

			[Token(Token = "0x40023E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private int <j>5__5;

			[Token(Token = "0x17000530")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003144")]
				[Address(RVA = "0x15FD2E8", Offset = "0x15FD2E8", VA = "0x15FD2E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000531")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003146")]
				[Address(RVA = "0x15FD358", Offset = "0x15FD358", VA = "0x15FD358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003141")]
			[Address(RVA = "0x15FC294", Offset = "0x15FC294", VA = "0x15FC294")]
			[DebuggerHidden]
			public <CopyScaledAndTiledToAtlas>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6003142")]
			[Address(RVA = "0x15FC2D0", Offset = "0x15FC2D0", VA = "0x15FC2D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003143")]
			[Address(RVA = "0x15FC2D4", Offset = "0x15FC2D4", VA = "0x15FC2D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003145")]
			[Address(RVA = "0x15FD2F0", Offset = "0x15FD2F0", VA = "0x15FD2F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x15FBF74", Offset = "0x15FBF74", VA = "0x15FBF74", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DAEC", Offset = "0x90DAEC")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x15FC0B8", Offset = "0x15FC0B8", VA = "0x15FC0B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DB50", Offset = "0x90DB50")]
		internal static IEnumerator CopyScaledAndTiledToAtlas(MeshBakerMaterialTexture source, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName, DRect srcSamplingRect, int targX, int targY, int targW, int targH, AtlasPadding padding, Color[][] atlasPixels, bool isNormalMap, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, [Optional] ProgressUpdateDelegate progressInfo, MB2_LogLevel LOG_LEVEL = MB2_LogLevel.info)
		{
			return null;
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x15FC2C0", Offset = "0x15FC2C0", VA = "0x15FC2C0")]
		public MB3_TextureCombinerPackerMeshBaker()
		{
		}
	}
	[Token(Token = "0x200023A")]
	internal class MB3_TextureCombinerPackerMeshBakerFast : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E64", Offset = "0x8F7E64")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000532")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600314A")]
				[Address(RVA = "0x15FF1D8", Offset = "0x15FF1D8", VA = "0x15FF1D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000533")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600314C")]
				[Address(RVA = "0x15FF248", Offset = "0x15FF248", VA = "0x15FF248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003147")]
			[Address(RVA = "0x15FEDA0", Offset = "0x15FEDA0", VA = "0x15FEDA0")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6003148")]
			[Address(RVA = "0x15FF1BC", Offset = "0x15FF1BC", VA = "0x15FF1BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003149")]
			[Address(RVA = "0x15FF1C0", Offset = "0x15FF1C0", VA = "0x15FF1C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600314B")]
			[Address(RVA = "0x15FF1E0", Offset = "0x15FF1E0", VA = "0x15FF1E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E74", Offset = "0x8F7E74")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x40023EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40023F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Texture2D[] atlases;

			[Token(Token = "0x40023F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x17000534")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003150")]
				[Address(RVA = "0x1600688", Offset = "0x1600688", VA = "0x1600688", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000535")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003152")]
				[Address(RVA = "0x16006F8", Offset = "0x16006F8", VA = "0x16006F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600314D")]
			[Address(RVA = "0x15FF188", Offset = "0x15FF188", VA = "0x15FF188")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600314E")]
			[Address(RVA = "0x15FF250", Offset = "0x15FF250", VA = "0x15FF250", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600314F")]
			[Address(RVA = "0x15FF254", Offset = "0x15FF254", VA = "0x15FF254", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003151")]
			[Address(RVA = "0x1600690", Offset = "0x1600690", VA = "0x1600690", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x15FED40", Offset = "0x15FED40", VA = "0x15FED40", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DBB4", Offset = "0x90DBB4")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x15FEDCC", Offset = "0x15FEDCC", VA = "0x15FEDCC", Slot = "7")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x15FF070", Offset = "0x15FF070", VA = "0x15FF070", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DC18", Offset = "0x90DC18")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x15FF1B4", Offset = "0x15FF1B4", VA = "0x15FF1B4")]
		public MB3_TextureCombinerPackerMeshBakerFast()
		{
		}
	}
	[Token(Token = "0x200023B")]
	internal class MB3_TextureCombinerPackerMeshBakerHorizontalVertical : MB3_TextureCombinerPackerMeshBaker
	{
		[Token(Token = "0x20006C6")]
		private interface IPipeline
		{
			[Token(Token = "0x6003153")]
			MB2_PackingAlgorithmEnum GetPackingAlg();

			[Token(Token = "0x6003154")]
			void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight);

			[Token(Token = "0x6003155")]
			MB_TextureTilingTreatment GetEdge2EdgeTreatment();

			[Token(Token = "0x6003156")]
			void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue);

			[Token(Token = "0x6003157")]
			void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY);

			[Token(Token = "0x6003158")]
			void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight);
		}

		[Token(Token = "0x20006C7")]
		private class VerticalPipeline : IPipeline
		{
			[Token(Token = "0x6003159")]
			[Address(RVA = "0x1602864", Offset = "0x1602864", VA = "0x1602864", Slot = "4")]
			public MB2_PackingAlgorithmEnum GetPackingAlg()
			{
				return default(MB2_PackingAlgorithmEnum);
			}

			[Token(Token = "0x600315A")]
			[Address(RVA = "0x160286C", Offset = "0x160286C", VA = "0x160286C", Slot = "5")]
			public void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight)
			{
			}

			[Token(Token = "0x600315B")]
			[Address(RVA = "0x160296C", Offset = "0x160296C", VA = "0x160296C", Slot = "6")]
			public MB_TextureTilingTreatment GetEdge2EdgeTreatment()
			{
				return default(MB_TextureTilingTreatment);
			}

			[Token(Token = "0x600315C")]
			[Address(RVA = "0x1602974", Offset = "0x1602974", VA = "0x1602974", Slot = "7")]
			public void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue)
			{
			}

			[Token(Token = "0x600315D")]
			[Address(RVA = "0x160297C", Offset = "0x160297C", VA = "0x160297C", Slot = "8")]
			public void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY)
			{
			}

			[Token(Token = "0x600315E")]
			[Address(RVA = "0x1602BC4", Offset = "0x1602BC4", VA = "0x1602BC4", Slot = "9")]
			public void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight)
			{
			}

			[Token(Token = "0x600315F")]
			[Address(RVA = "0x1601A08", Offset = "0x1601A08", VA = "0x1601A08")]
			public VerticalPipeline()
			{
			}
		}

		[Token(Token = "0x20006C8")]
		private class HorizontalPipeline : IPipeline
		{
			[Token(Token = "0x6003160")]
			[Address(RVA = "0x16024F8", Offset = "0x16024F8", VA = "0x16024F8", Slot = "4")]
			public MB2_PackingAlgorithmEnum GetPackingAlg()
			{
				return default(MB2_PackingAlgorithmEnum);
			}

			[Token(Token = "0x6003161")]
			[Address(RVA = "0x1602500", Offset = "0x1602500", VA = "0x1602500", Slot = "5")]
			public void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight)
			{
			}

			[Token(Token = "0x6003162")]
			[Address(RVA = "0x1602600", Offset = "0x1602600", VA = "0x1602600", Slot = "6")]
			public MB_TextureTilingTreatment GetEdge2EdgeTreatment()
			{
				return default(MB_TextureTilingTreatment);
			}

			[Token(Token = "0x6003163")]
			[Address(RVA = "0x1602608", Offset = "0x1602608", VA = "0x1602608", Slot = "7")]
			public void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue)
			{
			}

			[Token(Token = "0x6003164")]
			[Address(RVA = "0x1602610", Offset = "0x1602610", VA = "0x1602610", Slot = "8")]
			public void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY)
			{
			}

			[Token(Token = "0x6003165")]
			[Address(RVA = "0x1602854", Offset = "0x1602854", VA = "0x1602854", Slot = "9")]
			public void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight)
			{
			}

			[Token(Token = "0x6003166")]
			[Address(RVA = "0x1601A00", Offset = "0x1601A00", VA = "0x1601A00")]
			public HorizontalPipeline()
			{
			}
		}

		[Token(Token = "0x20006C9")]
		public enum AtlasDirection
		{
			[Token(Token = "0x40023F3")]
			horizontal,
			[Token(Token = "0x40023F4")]
			vertical
		}

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AtlasDirection _atlasDirection;

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1600700", Offset = "0x1600700", VA = "0x1600700")]
		public MB3_TextureCombinerPackerMeshBakerHorizontalVertical(AtlasDirection ad)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x160072C", Offset = "0x160072C", VA = "0x160072C", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x16023D0", Offset = "0x16023D0", VA = "0x16023D0")]
		public static AtlasPackingResult TestStackRectanglesHorizontal(AtlasPackingResult a, AtlasPackingResult b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth)
		{
			return null;
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1602464", Offset = "0x1602464", VA = "0x1602464")]
		public static AtlasPackingResult TestStackRectanglesVertical(AtlasPackingResult a, AtlasPackingResult b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth)
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1601BFC", Offset = "0x1601BFC", VA = "0x1601BFC")]
		private static AtlasPackingResult MergeAtlasPackingResultStackBonA(AtlasPackingResult a, AtlasPackingResult b, int maxWidthDim, int maxHeightDim, bool stretchBToAtlasWidth, IPipeline pipeline)
		{
			return null;
		}
	}
	[Token(Token = "0x200023C")]
	internal class MB3_TextureCombinerPackerOneTextureInAtlas : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E84", Offset = "0x8F7E84")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000536")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600316A")]
				[Address(RVA = "0x1603250", Offset = "0x1603250", VA = "0x1603250", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000537")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600316C")]
				[Address(RVA = "0x16032C0", Offset = "0x16032C0", VA = "0x16032C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003167")]
			[Address(RVA = "0x1602C34", Offset = "0x1602C34", VA = "0x1602C34")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6003168")]
			[Address(RVA = "0x1603234", Offset = "0x1603234", VA = "0x1603234", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003169")]
			[Address(RVA = "0x1603238", Offset = "0x1603238", VA = "0x1603238", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600316B")]
			[Address(RVA = "0x1603258", Offset = "0x1603258", VA = "0x1603258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7E94", Offset = "0x8F7E94")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40023FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40023FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D[] atlases;

			[Token(Token = "0x17000538")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003170")]
				[Address(RVA = "0x160368C", Offset = "0x160368C", VA = "0x160368C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000539")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003172")]
				[Address(RVA = "0x16036FC", Offset = "0x16036FC", VA = "0x16036FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600316D")]
			[Address(RVA = "0x1603200", Offset = "0x1603200", VA = "0x1603200")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600316E")]
			[Address(RVA = "0x16032C8", Offset = "0x16032C8", VA = "0x16032C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600316F")]
			[Address(RVA = "0x16032CC", Offset = "0x16032CC", VA = "0x16032CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003171")]
			[Address(RVA = "0x1603694", Offset = "0x1603694", VA = "0x1603694", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1602BD4", Offset = "0x1602BD4", VA = "0x1602BD4", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DC7C", Offset = "0x90DC7C")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1602C60", Offset = "0x1602C60", VA = "0x1602C60", Slot = "5")]
		public AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1603154", Offset = "0x1603154", VA = "0x1603154", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DCE0", Offset = "0x90DCE0")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x160322C", Offset = "0x160322C", VA = "0x160322C")]
		public MB3_TextureCombinerPackerOneTextureInAtlas()
		{
		}
	}
	[Token(Token = "0x200023D")]
	internal class MB3_TextureCombinerPackerUnity : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7EA4", Offset = "0x8F7EA4")]
		private sealed class <CreateAtlases>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x40023FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4002400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4002401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4002402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D[] atlases;

			[Token(Token = "0x1700053A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003176")]
				[Address(RVA = "0x16063B0", Offset = "0x16063B0", VA = "0x16063B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003178")]
				[Address(RVA = "0x1606420", Offset = "0x1606420", VA = "0x1606420", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003173")]
			[Address(RVA = "0x1603F80", Offset = "0x1603F80", VA = "0x1603F80")]
			[DebuggerHidden]
			public <CreateAtlases>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6003174")]
			[Address(RVA = "0x1604E78", Offset = "0x1604E78", VA = "0x1604E78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003175")]
			[Address(RVA = "0x1604E7C", Offset = "0x1604E7C", VA = "0x1604E7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003177")]
			[Address(RVA = "0x16063B8", Offset = "0x16063B8", VA = "0x16063B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1603D74", Offset = "0x1603D74", VA = "0x1603D74", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1603E6C", Offset = "0x1603E6C", VA = "0x1603E6C", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DD44", Offset = "0x90DD44")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1603FAC", Offset = "0x1603FAC", VA = "0x1603FAC")]
		internal static Texture2D _copyTexturesIntoAtlas(Texture2D[] texToPack, int padding, Rect[] rs, int w, int h, MB3_TextureCombiner combiner)
		{
			return null;
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1604310", Offset = "0x1604310", VA = "0x1604310")]
		internal static Texture2D GetAdjustedForScaleAndOffset2(string propertyName, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1604E70", Offset = "0x1604E70", VA = "0x1604E70")]
		public MB3_TextureCombinerPackerUnity()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class MB3_TextureCombinerPipeline
	{
		[Token(Token = "0x20006CD")]
		public struct CreateAtlasForProperty
		{
			[Token(Token = "0x4002405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool allTexturesAreNull;

			[Token(Token = "0x4002406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool allTexturesAreSame;

			[Token(Token = "0x4002407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool allNonTexturePropsAreSame;

			[Token(Token = "0x6003179")]
			[Address(RVA = "0x9B8A28", Offset = "0x9B8A28", VA = "0x9B8A28", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x20006CE")]
		internal class TexturePipelineData
		{
			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal MB2_TextureBakeResults _textureBakeResults;

			[Token(Token = "0x4002409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int _atlasPadding;

			[Token(Token = "0x400240A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int _maxAtlasWidth;

			[Token(Token = "0x400240B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int _maxAtlasHeight;

			[Token(Token = "0x400240C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal bool _useMaxAtlasHeightOverride;

			[Token(Token = "0x400240D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			internal bool _useMaxAtlasWidthOverride;

			[Token(Token = "0x400240E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			internal bool _resizePowerOfTwoTextures;

			[Token(Token = "0x400240F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			internal bool _fixOutOfBoundsUVs;

			[Token(Token = "0x4002410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal int _maxTilingBakeSize;

			[Token(Token = "0x4002411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal bool _saveAtlasesAsAssets;

			[Token(Token = "0x4002412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal MB2_PackingAlgorithmEnum _packingAlgorithm;

			[Token(Token = "0x4002413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal bool _meshBakerTexturePackerForcePowerOfTwo;

			[Token(Token = "0x4002414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal List<ShaderTextureProperty> _customShaderPropNames;

			[Token(Token = "0x4002415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool _normalizeTexelDensity;

			[Token(Token = "0x4002416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			internal bool _considerNonTextureProperties;

			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal MB3_TextureCombinerNonTextureProperties nonTexturePropertyBlender;

			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal List<GameObject> allObjsToMesh;

			[Token(Token = "0x400241A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal List<Material> allowedMaterialsFilter;

			[Token(Token = "0x400241B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal CreateAtlasForProperty[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x400241D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal Material resultMaterial;

			[Token(Token = "0x1700053C")]
			internal int numAtlases
			{
				[Token(Token = "0x600317A")]
				[Address(RVA = "0x15FEC68", Offset = "0x15FEC68", VA = "0x15FEC68")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600317B")]
			[Address(RVA = "0x15F4AE4", Offset = "0x15F4AE4", VA = "0x15F4AE4")]
			internal bool OnlyOneTextureInAtlasReuseTextures()
			{
				return default(bool);
			}

			[Token(Token = "0x600317C")]
			[Address(RVA = "0x160CDE8", Offset = "0x160CDE8", VA = "0x160CDE8")]
			public TexturePipelineData()
			{
			}
		}

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7EB4", Offset = "0x8F7EB4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x600317D")]
			[Address(RVA = "0x1606428", Offset = "0x1606428", VA = "0x1606428")]
			public <>c__DisplayClass5_0()
			{
			}
		}

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7EC4", Offset = "0x8F7EC4")]
		private sealed class <>c__DisplayClass5_1
		{
			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass5_0 CS$<>8__locals1;

			[Token(Token = "0x600317E")]
			[Address(RVA = "0x1606430", Offset = "0x1606430", VA = "0x1606430")]
			public <>c__DisplayClass5_1()
			{
			}

			[Token(Token = "0x600317F")]
			[Address(RVA = "0x1607A4C", Offset = "0x1607A4C", VA = "0x1607A4C")]
			internal bool <_CollectPropertyNames>b__0(ShaderTextureProperty x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7ED4", Offset = "0x8F7ED4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x6003180")]
			[Address(RVA = "0x1607B1C", Offset = "0x1607B1C", VA = "0x1607B1C")]
			public <>c__DisplayClass8_0()
			{
			}
		}

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7EE4", Offset = "0x8F7EE4")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB_TexSet setOfTexs;

			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x6003181")]
			[Address(RVA = "0x1607B24", Offset = "0x1607B24", VA = "0x1607B24")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6003182")]
			[Address(RVA = "0x1607B2C", Offset = "0x1607B2C", VA = "0x1607B2C")]
			internal bool <__Step1_CollectDistinctMatTexturesAndUsedObjects>b__0(MB_TexSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7EF4", Offset = "0x8F7EF4")]
		private sealed class <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x400242A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x400242B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<GameObject> usedObjsToMesh;

			[Token(Token = "0x1700053D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003186")]
				[Address(RVA = "0x160BAFC", Offset = "0x160BAFC", VA = "0x160BAFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003188")]
				[Address(RVA = "0x160BB6C", Offset = "0x160BB6C", VA = "0x160BB6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003183")]
			[Address(RVA = "0x1606618", Offset = "0x1606618", VA = "0x1606618")]
			[DebuggerHidden]
			public <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003184")]
			[Address(RVA = "0x160984C", Offset = "0x160984C", VA = "0x160984C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003185")]
			[Address(RVA = "0x1609850", Offset = "0x1609850", VA = "0x1609850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003187")]
			[Address(RVA = "0x160BB04", Offset = "0x160BB04", VA = "0x160BB04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F04", Offset = "0x8F7F04")]
		private sealed class <CalculateIdealSizesForTexturesInAtlasAndPadding>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400242C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400242D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400242E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x400242F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x1700053F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600318C")]
				[Address(RVA = "0x16097D4", Offset = "0x16097D4", VA = "0x16097D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000540")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600318E")]
				[Address(RVA = "0x1609844", Offset = "0x1609844", VA = "0x1609844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003189")]
			[Address(RVA = "0x1606D28", Offset = "0x1606D28", VA = "0x1606D28")]
			[DebuggerHidden]
			public <CalculateIdealSizesForTexturesInAtlasAndPadding>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600318A")]
			[Address(RVA = "0x1607F28", Offset = "0x1607F28", VA = "0x1607F28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600318B")]
			[Address(RVA = "0x1607F2C", Offset = "0x1607F2C", VA = "0x1607F2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600318D")]
			[Address(RVA = "0x16097DC", Offset = "0x16097DC", VA = "0x16097DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F14", Offset = "0x8F7F14")]
		private sealed class <__Step3_BuildAndSaveAtlasesAndStoreResults>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TexturePipelineData data;

			[Token(Token = "0x4002433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4002434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB_ITextureCombinerPacker packer;

			[Token(Token = "0x4002435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4002437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AtlasPackingResult atlasPackingResult;

			[Token(Token = "0x4002438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public StringBuilder report;

			[Token(Token = "0x400243A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x400243B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x400243C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Texture2D[] <atlases>5__3;

			[Token(Token = "0x17000541")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003192")]
				[Address(RVA = "0x160CCA8", Offset = "0x160CCA8", VA = "0x160CCA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000542")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003194")]
				[Address(RVA = "0x160CD18", Offset = "0x160CD18", VA = "0x160CD18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600318F")]
			[Address(RVA = "0x1606D54", Offset = "0x1606D54", VA = "0x1606D54")]
			[DebuggerHidden]
			public <__Step3_BuildAndSaveAtlasesAndStoreResults>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003190")]
			[Address(RVA = "0x160BB74", Offset = "0x160BB74", VA = "0x160BB74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003191")]
			[Address(RVA = "0x160BB78", Offset = "0x160BB78", VA = "0x160BB78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003193")]
			[Address(RVA = "0x160CCB0", Offset = "0x160CCB0", VA = "0x160CCB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool USE_EXPERIMENTAL_HOIZONTALVERTICAL;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ShaderTextureProperty[] shaderTexPropertyNames;

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x15FE990", Offset = "0x15FE990", VA = "0x15FE990")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, bool considerNonTextureProperties, CreateAtlasForProperty[] allTexturesAreNullAndSameColor)
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x15F2290", Offset = "0x15F2290", VA = "0x15F2290")]
		internal static bool _CollectPropertyNames(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1606438", Offset = "0x1606438", VA = "0x1606438")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, CreateAtlasForProperty[] allTexturesAreNullAndSameColor, TexturePipelineData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x16064D4", Offset = "0x16064D4", VA = "0x16064D4")]
		public static Texture GetTextureConsideringStandardShaderKeywords(string shaderName, Material mat, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x15F3A94", Offset = "0x15F3A94", VA = "0x15F3A94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DDA8", Offset = "0x90DDA8")]
		internal static IEnumerator __Step1_CollectDistinctMatTexturesAndUsedObjects(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, List<GameObject> usedObjsToMesh, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1606644", Offset = "0x1606644", VA = "0x1606644")]
		private static CreateAtlasForProperty[] CalculateAllTexturesAreNullAndSameColor(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x15F3B94", Offset = "0x15F3B94", VA = "0x15F3B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DE0C", Offset = "0x90DE0C")]
		internal static IEnumerator CalculateIdealSizesForTexturesInAtlasAndPadding(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x15F54D0", Offset = "0x15F54D0", VA = "0x15F54D0")]
		internal static AtlasPackingResult[] __Step3_RunTexturePacker(TexturePipelineData data, MB_ITextureCombinerPacker texturePacker, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x15F4B9C", Offset = "0x15F4B9C", VA = "0x15F4B9C")]
		internal static MB_ITextureCombinerPacker CreatePacker(bool onlyOneTextureInAtlasReuseTextures, MB2_PackingAlgorithmEnum packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x15F4CFC", Offset = "0x15F4CFC", VA = "0x15F4CFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DE70", Offset = "0x90DE70")]
		internal static IEnumerator __Step3_BuildAndSaveAtlasesAndStoreResults(MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, ProgressUpdateDelegate progressInfo, TexturePipelineData data, MB3_TextureCombiner combiner, MB_ITextureCombinerPacker packer, AtlasPackingResult atlasPackingResult, MB2_EditorMethodsInterface textureEditorMethods, MB_AtlasesAndRects resultAtlasesAndRects, StringBuilder report, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x15F3C2C", Offset = "0x15F3C2C", VA = "0x15F3C2C")]
		internal static StringBuilder GenerateReport(TexturePipelineData data)
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1601ADC", Offset = "0x1601ADC", VA = "0x1601ADC")]
		internal static MB2_TexturePacker CreateTexturePacker(MB2_PackingAlgorithmEnum _packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1604978", Offset = "0x1604978", VA = "0x1604978")]
		internal static Vector2 GetAdjustedForScaleAndOffset2Dimensions(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1606D80", Offset = "0x1606D80", VA = "0x1606D80")]
		internal static Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1606E98", Offset = "0x1606E98", VA = "0x1606E98")]
		internal static float GetSubmeshArea(Mesh m, int submeshIdx)
		{
			return default(float);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1607198", Offset = "0x1607198", VA = "0x1607198")]
		internal static bool IsPowerOfTwo(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x16071A8", Offset = "0x16071A8", VA = "0x16071A8")]
		public MB3_TextureCombinerPipeline()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class MBVersionConcrete : MBVersionInterface
	{
		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _HALF_UV;

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x160EF38", Offset = "0x160EF38", VA = "0x160EF38", Slot = "4")]
		public string version()
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x160EF80", Offset = "0x160EF80", VA = "0x160EF80", Slot = "5")]
		public int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x160F054", Offset = "0x160F054", VA = "0x160F054", Slot = "6")]
		public int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x160F12C", Offset = "0x160F12C", VA = "0x160F12C", Slot = "7")]
		public bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x160F15C", Offset = "0x160F15C", VA = "0x160F15C", Slot = "8")]
		public void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x160F194", Offset = "0x160F194", VA = "0x160F194", Slot = "9")]
		public void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x160F1CC", Offset = "0x160F1CC", VA = "0x160F1CC", Slot = "10")]
		public UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x160F234", Offset = "0x160F234", VA = "0x160F234", Slot = "18")]
		public void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x160F238", Offset = "0x160F238", VA = "0x160F238", Slot = "11")]
		public bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x160F288", Offset = "0x160F288", VA = "0x160F288")]
		public Vector2[] GetMeshUV1s(Mesh m, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x160F478", Offset = "0x160F478", VA = "0x160F478", Slot = "12")]
		public Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x160F7A4", Offset = "0x160F7A4", VA = "0x160F7A4", Slot = "13")]
		public void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x160F7DC", Offset = "0x160F7DC", VA = "0x160F7DC", Slot = "14")]
		public void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x160F814", Offset = "0x160F814", VA = "0x160F814", Slot = "15")]
		public void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x160F84C", Offset = "0x160F84C", VA = "0x160F84C", Slot = "16")]
		public Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x160F87C", Offset = "0x160F87C", VA = "0x160F87C", Slot = "17")]
		public Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x160F9EC", Offset = "0x160F9EC", VA = "0x160F9EC", Slot = "19")]
		public int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x160FA24", Offset = "0x160FA24", VA = "0x160FA24", Slot = "20")]
		public float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x160FA6C", Offset = "0x160FA6C", VA = "0x160FA6C", Slot = "21")]
		public void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x160FAD4", Offset = "0x160FAD4", VA = "0x160FAD4", Slot = "22")]
		public void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x160FB04", Offset = "0x160FB04", VA = "0x160FB04", Slot = "23")]
		public void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x160FB74", Offset = "0x160FB74", VA = "0x160FB74", Slot = "24")]
		public int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x160FB7C", Offset = "0x160FB7C", VA = "0x160FB7C", Slot = "25")]
		public void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x160FC54", Offset = "0x160FC54", VA = "0x160FC54")]
		public MBVersionConcrete()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000240")]
	public class GrouperData
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool clusterOnLMIndex;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool clusterByLODLevel;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 origin;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 cellSize;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int pieNumSegments;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pieAxis;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int height;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxDistBetweenClusters;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool includeCellsWithOnlyOneRenderer;

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xEFA358", Offset = "0xEFA358", VA = "0xEFA358")]
		public GrouperData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000241")]
	public abstract class MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F24", Offset = "0x8F7F24")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400243D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer r;

			[Token(Token = "0x400243E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<Renderer> <>9__0;

			[Token(Token = "0x6003195")]
			[Address(RVA = "0x1497218", Offset = "0x1497218", VA = "0x1497218")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6003196")]
			[Address(RVA = "0x1497220", Offset = "0x1497220", VA = "0x1497220")]
			internal bool <DoClustering>b__0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrouperData d;

		[Token(Token = "0x6001579")]
		public abstract Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection);

		[Token(Token = "0x600157A")]
		public abstract void DrawGizmos(Bounds sourceObjectBounds);

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xF084A8", Offset = "0xF084A8", VA = "0xF084A8")]
		public void DoClustering(MB3_TextureBaker tb, MB3_MeshBakerGrouper grouper)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xF0942C", Offset = "0xF0942C", VA = "0xF0942C")]
		private Dictionary<int, List<Renderer>> GroupByLightmapIndex(List<Renderer> gaws)
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xF09680", Offset = "0xF09680", VA = "0xF09680")]
		private void AddMeshBaker(MB3_TextureBaker tb, string key, List<Renderer> gaws)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xF072DC", Offset = "0xF072DC", VA = "0xF072DC")]
		protected MB3_MeshBakerGrouperCore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000242")]
	public class MB3_MeshBakerGrouperNone : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x600157F")]
		[Address(RVA = "0x14984C0", Offset = "0x14984C0", VA = "0x14984C0")]
		public MB3_MeshBakerGrouperNone(GrouperData d)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x14984EC", Offset = "0x14984EC", VA = "0x14984EC", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x14986F4", Offset = "0x14986F4", VA = "0x14986F4", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class MB3_MeshBakerGrouperGrid : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6001582")]
		[Address(RVA = "0x149729C", Offset = "0x149729C", VA = "0x149729C")]
		public MB3_MeshBakerGrouperGrid(GrouperData d)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x14972C8", Offset = "0x14972C8", VA = "0x14972C8", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x14978AC", Offset = "0x14978AC", VA = "0x14978AC", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000244")]
	public class MB3_MeshBakerGrouperPie : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6001585")]
		[Address(RVA = "0x14986F8", Offset = "0x14986F8", VA = "0x14986F8")]
		public MB3_MeshBakerGrouperPie(GrouperData data)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1498724", Offset = "0x1498724", VA = "0x1498724", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x1498EAC", Offset = "0x1498EAC", VA = "0x1498EAC", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1499258", Offset = "0x1499258", VA = "0x1499258")]
		public static void DrawCircle(Vector3 axis, Vector3 center, float radius, int subdiv)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	public class MB3_MeshBakerGrouperKMeans : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numClusters;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] clusterCenters;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] clusterSizes;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1497ECC", Offset = "0x1497ECC", VA = "0x1497ECC")]
		public MB3_MeshBakerGrouperKMeans(GrouperData data)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1497F60", Offset = "0x1497F60", VA = "0x1497F60", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x14983B4", Offset = "0x14983B4", VA = "0x14983B4", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000246")]
	public class MB3_MeshBakerGrouperCluster : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F34", Offset = "0x8F7F34")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400243F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> gos;

			[Token(Token = "0x6003197")]
			[Address(RVA = "0xF07B1C", Offset = "0xF07B1C", VA = "0xF07B1C")]
			public <>c__DisplayClass8_0()
			{
			}
		}

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F44", Offset = "0x8F7F44")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4002440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x6003198")]
			[Address(RVA = "0xF07B24", Offset = "0xF07B24", VA = "0xF07B24")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6003199")]
			[Address(RVA = "0xF083DC", Offset = "0xF083DC", VA = "0xF083DC")]
			internal bool <BuildClusters>b__0(MB3_AgglomerativeClustering.item_s x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3_AgglomerativeClustering cluster;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _lastMaxDistBetweenClusters;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _ObjsExtents;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _minDistBetweenClusters;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MB3_AgglomerativeClustering.ClusterNode> _clustersToDraw;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] _radii;

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xF07248", Offset = "0xF07248", VA = "0xF07248")]
		public MB3_MeshBakerGrouperCluster(GrouperData data, List<GameObject> gos)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xF072E4", Offset = "0xF072E4", VA = "0xF072E4", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xF075EC", Offset = "0xF075EC", VA = "0xF075EC")]
		public void BuildClusters(List<GameObject> gos, ProgressUpdateCancelableDelegate progFunc)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xF07B2C", Offset = "0xF07B2C", VA = "0xF07B2C")]
		private void _BuildListOfClustersToDraw(ProgressUpdateCancelableDelegate progFunc, out float smallest, out float largest)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xF0824C", Offset = "0xF0824C", VA = "0xF0824C", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Token(Token = "0x2000247")]
	public interface TextureBlender
	{
		[Token(Token = "0x6001591")]
		bool DoesShaderNameMatch(string shaderName);

		[Token(Token = "0x6001592")]
		void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName);

		[Token(Token = "0x6001593")]
		Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor);

		[Token(Token = "0x6001594")]
		bool NonTexturePropertiesAreEqual(Material a, Material b);

		[Token(Token = "0x6001595")]
		void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial);

		[Token(Token = "0x6001596")]
		Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName);
	}
	[Token(Token = "0x2000248")]
	public class TextureBlenderFallback : TextureBlender
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_doTintColor;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultColor;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xCB3388", Offset = "0xCB3388", VA = "0xCB3388", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xCB3390", Offset = "0xCB3390", VA = "0xCB3390", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xCB34C8", Offset = "0xCB34C8", VA = "0xCB34C8", Slot = "6")]
		public Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xCB3524", Offset = "0xCB3524", VA = "0xCB3524", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xCB371C", Offset = "0xCB371C", VA = "0xCB371C", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xCB3810", Offset = "0xCB3810", VA = "0xCB3810", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xCB35EC", Offset = "0xCB35EC", VA = "0xCB35EC")]
		public static bool _compareColor(Material a, Material b, Color defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xCB4318", Offset = "0xCB4318", VA = "0xCB4318")]
		public static bool _compareFloat(Material a, Material b, float defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xCB43D8", Offset = "0xCB43D8", VA = "0xCB43D8")]
		public TextureBlenderFallback()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class TextureBlenderLegacyBumpDiffuse : TextureBlender
	{
		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xCB440C", Offset = "0xCB440C", VA = "0xCB440C", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xCB44A4", Offset = "0xCB44A4", VA = "0xCB44A4", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xCB4558", Offset = "0xCB4558", VA = "0xCB4558", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xCB45B4", Offset = "0xCB45B4", VA = "0xCB45B4", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xCB4620", Offset = "0xCB4620", VA = "0xCB4620", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xCB46B8", Offset = "0xCB46B8", VA = "0xCB46B8", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xCB48A8", Offset = "0xCB48A8", VA = "0xCB48A8")]
		public TextureBlenderLegacyBumpDiffuse()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class TextureBlenderLegacyDiffuse : TextureBlender
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xCB48DC", Offset = "0xCB48DC", VA = "0xCB48DC", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xCB4974", Offset = "0xCB4974", VA = "0xCB4974", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xCB4A28", Offset = "0xCB4A28", VA = "0xCB4A28", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xCB4A84", Offset = "0xCB4A84", VA = "0xCB4A84", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xCB4AF0", Offset = "0xCB4AF0", VA = "0xCB4AF0", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xCB4B88", Offset = "0xCB4B88", VA = "0xCB4B88", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xCB4D2C", Offset = "0xCB4D2C", VA = "0xCB4D2C")]
		public TextureBlenderLegacyDiffuse()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class TextureBlenderMaterialPropertyCacheHelper
	{
		[Token(Token = "0x20006D9")]
		private struct MaterialPropertyPair
		{
			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string property;

			[Token(Token = "0x600319A")]
			[Address(RVA = "0x9A5558", Offset = "0x9A5558", VA = "0x9A5558")]
			public MaterialPropertyPair(Material m, string prop)
			{
			}

			[Token(Token = "0x600319B")]
			[Address(RVA = "0x9A5560", Offset = "0x9A5560", VA = "0x9A5560", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600319C")]
			[Address(RVA = "0x9A5568", Offset = "0x9A5568", VA = "0x9A5568", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MaterialPropertyPair, object> nonTexturePropertyValuesForSourceMaterials;

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xCB4D60", Offset = "0xCB4D60", VA = "0xCB4D60")]
		private bool AllNonTexturePropertyValuesAreEqual(string prop)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xCB4F88", Offset = "0xCB4F88", VA = "0xCB4F88")]
		public void CacheMaterialProperty(Material m, string property, object value)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xCB5018", Offset = "0xCB5018", VA = "0xCB5018")]
		public object GetValueIfAllSourceAreTheSameOrDefault(string property, object defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xCB51D0", Offset = "0xCB51D0", VA = "0xCB51D0")]
		public TextureBlenderMaterialPropertyCacheHelper()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class TextureBlenderStandardMetallic : TextureBlender
	{
		[Token(Token = "0x20006DA")]
		private enum Prop
		{
			[Token(Token = "0x4002445")]
			doColor,
			[Token(Token = "0x4002446")]
			doMetallic,
			[Token(Token = "0x4002447")]
			doEmission,
			[Token(Token = "0x4002448")]
			doBump,
			[Token(Token = "0x4002449")]
			doNone
		}

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_glossiness;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_glossMapScale;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_metallic;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_bumpScale;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_emissionColor;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Prop propertyToDo;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_generatingTintedAtlasGlossiness;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_generatingTintedAtlasGlossMapScale;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xCB5378", Offset = "0xCB5378", VA = "0xCB5378", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xCB53D8", Offset = "0xCB53D8", VA = "0xCB53D8", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xCB57DC", Offset = "0xCB57DC", VA = "0xCB57DC", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xCB5968", Offset = "0xCB5968", VA = "0xCB5968", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xCB5BEC", Offset = "0xCB5BEC", VA = "0xCB5BEC", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xCB6100", Offset = "0xCB6100", VA = "0xCB6100", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xCB6860", Offset = "0xCB6860", VA = "0xCB6860")]
		public TextureBlenderStandardMetallic()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class TextureBlenderStandardMetallicRoughness : TextureBlender
	{
		[Token(Token = "0x20006DB")]
		private enum Prop
		{
			[Token(Token = "0x400244B")]
			doColor,
			[Token(Token = "0x400244C")]
			doMetallic,
			[Token(Token = "0x400244D")]
			doRoughness,
			[Token(Token = "0x400244E")]
			doEmission,
			[Token(Token = "0x400244F")]
			doBump,
			[Token(Token = "0x4002450")]
			doNone
		}

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_roughness;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_metallic;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_bumpScale;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color m_emissionColor;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Prop propertyToDo;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_generatingTintedAtlasRoughness;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xCB699C", Offset = "0xCB699C", VA = "0xCB699C", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xCB69FC", Offset = "0xCB69FC", VA = "0xCB69FC", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xCB6E50", Offset = "0xCB6E50", VA = "0xCB6E50", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xCB6FD4", Offset = "0xCB6FD4", VA = "0xCB6FD4", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xCB7390", Offset = "0xCB7390", VA = "0xCB7390", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xCB78D4", Offset = "0xCB78D4", VA = "0xCB78D4", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xCB8138", Offset = "0xCB8138", VA = "0xCB8138")]
		public TextureBlenderStandardMetallicRoughness()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class TextureBlenderStandardSpecular : TextureBlender
	{
		[Token(Token = "0x20006DC")]
		private enum Prop
		{
			[Token(Token = "0x4002452")]
			doColor,
			[Token(Token = "0x4002453")]
			doSpecular,
			[Token(Token = "0x4002454")]
			doEmission,
			[Token(Token = "0x4002455")]
			doBump,
			[Token(Token = "0x4002456")]
			doNone
		}

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_tintColor;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_glossiness;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_SpecGlossMapScale;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color m_specColor;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_bumpScale;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_emissionColor;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Prop propertyToDo;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color m_generatingTintedAtlaColor;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color m_generatingTintedAtlaSpecular;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_generatingTintedAtlaGlossiness;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_generatingTintedAtlaSpecGlossMapScale;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_generatingTintedAtlaBumpScale;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color m_generatingTintedAtlaEmission;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Color m_notGeneratingAtlasDefaultSpecularColor;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xCB8270", Offset = "0xCB8270", VA = "0xCB8270", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xCB82D0", Offset = "0xCB82D0", VA = "0xCB82D0", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xCB871C", Offset = "0xCB871C", VA = "0xCB871C", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xCB88A4", Offset = "0xCB88A4", VA = "0xCB88A4", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xCB8B4C", Offset = "0xCB8B4C", VA = "0xCB8B4C", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xCB90A4", Offset = "0xCB90A4", VA = "0xCB90A4", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xCB97FC", Offset = "0xCB97FC", VA = "0xCB97FC")]
		public TextureBlenderStandardSpecular()
		{
		}
	}
}
namespace DentedPixel
{
	[Token(Token = "0x200024F")]
	public class LeanDummy
	{
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xEF9120", Offset = "0xEF9120", VA = "0xEF9120")]
		public LeanDummy()
		{
		}
	}
}
namespace DentedPixel.LTExamples
{
	[Token(Token = "0x2000250")]
	public class PathBezier : MonoBehaviour
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] trans;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LTBezierPath cr;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject avatar1;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float iter;

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xEEDAB4", Offset = "0xEEDAB4", VA = "0xEEDAB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xEEDF0C", Offset = "0xEEDF0C", VA = "0xEEDF0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xEEE0E4", Offset = "0xEEE0E4", VA = "0xEEE0E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xEEE138", Offset = "0xEEE138", VA = "0xEEE138")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xEEE190", Offset = "0xEEE190", VA = "0xEEE190")]
		public PathBezier()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class TestingUnitTests : MonoBehaviour
	{
		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F54", Offset = "0x8F7F54")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] cubes;

			[Token(Token = "0x4002459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] tweenIds;

			[Token(Token = "0x400245A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int onCompleteCount;

			[Token(Token = "0x400245B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject cubeToTrans;

			[Token(Token = "0x400245C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 cubeDestEnd;

			[Token(Token = "0x400245D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSpline;

			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int jumpTimeId;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameObject jumpCube;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject zeroCube;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GameObject cubeScale;

			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public GameObject cubeRotate;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GameObject cubeRotateA;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public GameObject cubeRotateB;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float onStartTime;

			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector3 beforePos;

			[Token(Token = "0x4002467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector3 beforePos2;

			[Token(Token = "0x4002468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public int totalEasingCheck;

			[Token(Token = "0x4002469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public int totalEasingCheckSuccess;

			[Token(Token = "0x400246A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public bool value2UpdateCalled;

			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Action <>9__21;

			[Token(Token = "0x600319D")]
			[Address(RVA = "0xEF0094", Offset = "0xEF0094", VA = "0xEF0094")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600319E")]
			[Address(RVA = "0xEF08B4", Offset = "0xEF08B4", VA = "0xEF08B4")]
			internal void <Start>b__0()
			{
			}

			[Token(Token = "0x600319F")]
			[Address(RVA = "0xEF0984", Offset = "0xEF0984", VA = "0xEF0984")]
			internal void <Start>b__1()
			{
			}

			[Token(Token = "0x60031A0")]
			[Address(RVA = "0xEF0BC0", Offset = "0xEF0BC0", VA = "0xEF0BC0")]
			internal void <Start>b__21()
			{
			}

			[Token(Token = "0x60031A1")]
			[Address(RVA = "0xEF0C58", Offset = "0xEF0C58", VA = "0xEF0C58")]
			internal void <Start>b__2()
			{
			}

			[Token(Token = "0x60031A2")]
			[Address(RVA = "0xEF0D78", Offset = "0xEF0D78", VA = "0xEF0D78")]
			internal void <Start>b__4()
			{
			}

			[Token(Token = "0x60031A3")]
			[Address(RVA = "0xEF0EB8", Offset = "0xEF0EB8", VA = "0xEF0EB8")]
			internal void <Start>b__5()
			{
			}

			[Token(Token = "0x60031A4")]
			[Address(RVA = "0xEF10C0", Offset = "0xEF10C0", VA = "0xEF10C0")]
			internal void <Start>b__6()
			{
			}

			[Token(Token = "0x60031A5")]
			[Address(RVA = "0xEF11F4", Offset = "0xEF11F4", VA = "0xEF11F4")]
			internal void <Start>b__8()
			{
			}

			[Token(Token = "0x60031A6")]
			[Address(RVA = "0xEF1490", Offset = "0xEF1490", VA = "0xEF1490")]
			internal void <Start>b__9()
			{
			}

			[Token(Token = "0x60031A7")]
			[Address(RVA = "0xEF1730", Offset = "0xEF1730", VA = "0xEF1730")]
			internal void <Start>b__10()
			{
			}

			[Token(Token = "0x60031A8")]
			[Address(RVA = "0xEF19D0", Offset = "0xEF19D0", VA = "0xEF19D0")]
			internal void <Start>b__11()
			{
			}

			[Token(Token = "0x60031A9")]
			[Address(RVA = "0xEF1D18", Offset = "0xEF1D18", VA = "0xEF1D18")]
			internal void <Start>b__13(object completeObj)
			{
			}

			[Token(Token = "0x60031AA")]
			[Address(RVA = "0xEF1EAC", Offset = "0xEF1EAC", VA = "0xEF1EAC")]
			internal void <Start>b__14()
			{
			}

			[Token(Token = "0x60031AB")]
			[Address(RVA = "0xEF21F0", Offset = "0xEF21F0", VA = "0xEF21F0")]
			internal void <Start>b__15()
			{
			}

			[Token(Token = "0x60031AC")]
			[Address(RVA = "0xEF2218", Offset = "0xEF2218", VA = "0xEF2218")]
			internal void <Start>b__16()
			{
			}

			[Token(Token = "0x60031AD")]
			[Address(RVA = "0xEF2338", Offset = "0xEF2338", VA = "0xEF2338")]
			internal void <Start>b__17()
			{
			}

			[Token(Token = "0x60031AE")]
			[Address(RVA = "0xEF27FC", Offset = "0xEF27FC", VA = "0xEF27FC")]
			internal void <Start>b__19(Vector2 value)
			{
			}

			[Token(Token = "0x60031AF")]
			[Address(RVA = "0xEF2808", Offset = "0xEF2808", VA = "0xEF2808")]
			internal void <Start>b__20()
			{
			}
		}

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F64", Offset = "0x8F7F64")]
		private sealed class <>c__DisplayClass22_1
		{
			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float beforeX;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass22_0 CS$<>8__locals1;

			[Token(Token = "0x60031B0")]
			[Address(RVA = "0xEF10B8", Offset = "0xEF10B8", VA = "0xEF10B8")]
			public <>c__DisplayClass22_1()
			{
			}

			[Token(Token = "0x60031B1")]
			[Address(RVA = "0xEF2888", Offset = "0xEF2888", VA = "0xEF2888")]
			internal void <Start>b__23()
			{
			}
		}

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F74", Offset = "0x8F7F74")]
		private sealed class <>c__DisplayClass22_2
		{
			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalTweenTypeLength;

			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass22_0 CS$<>8__locals2;

			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<object> <>9__24;

			[Token(Token = "0x60031B2")]
			[Address(RVA = "0xEF0140", Offset = "0xEF0140", VA = "0xEF0140")]
			public <>c__DisplayClass22_2()
			{
			}

			[Token(Token = "0x60031B3")]
			[Address(RVA = "0xEF2D54", Offset = "0xEF2D54", VA = "0xEF2D54")]
			internal void <Start>b__24(object obj)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F84", Offset = "0x8F7F84")]
		private sealed class <>c
		{
			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__22_3;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__22_22;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__22_7;

			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<float> <>9__22_12;

			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__22_18;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action <>9__26_0;

			[Token(Token = "0x60031B5")]
			[Address(RVA = "0xEF06A4", Offset = "0xEF06A4", VA = "0xEF06A4")]
			public <>c()
			{
			}

			[Token(Token = "0x60031B6")]
			[Address(RVA = "0xEF06AC", Offset = "0xEF06AC", VA = "0xEF06AC")]
			internal void <Start>b__22_3()
			{
			}

			[Token(Token = "0x60031B7")]
			[Address(RVA = "0xEF0720", Offset = "0xEF0720", VA = "0xEF0720")]
			internal void <Start>b__22_22()
			{
			}

			[Token(Token = "0x60031B8")]
			[Address(RVA = "0xEF0724", Offset = "0xEF0724", VA = "0xEF0724")]
			internal void <Start>b__22_7()
			{
			}

			[Token(Token = "0x60031B9")]
			[Address(RVA = "0xEF0798", Offset = "0xEF0798", VA = "0xEF0798")]
			internal void <Start>b__22_12(float val)
			{
			}

			[Token(Token = "0x60031BA")]
			[Address(RVA = "0xEF081C", Offset = "0xEF081C", VA = "0xEF081C")]
			internal void <Start>b__22_18()
			{
			}

			[Token(Token = "0x60031BB")]
			[Address(RVA = "0xEF08A8", Offset = "0xEF08A8", VA = "0xEF08A8")]
			internal void <pauseTimeNow>b__26_0()
			{
			}
		}

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F94", Offset = "0x8F7F94")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pauseCount;

			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject cubeRound;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 onStartPos;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 onStartPosSpline;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject cubeSpline;

			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSeq;

			[Token(Token = "0x400247F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject cubeBounds;

			[Token(Token = "0x4002480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool didPassBounds;

			[Token(Token = "0x4002481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 failPoint;

			[Token(Token = "0x4002482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int setOnStartNum;

			[Token(Token = "0x4002483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool setPosOnUpdate;

			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int setPosNum;

			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool hasGroupTweensCheckStarted;

			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float previousXlt4;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool onUpdateWasCalled;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float start;

			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float expectedTime;

			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public bool didGetCorrectOnUpdate;

			[Token(Token = "0x400248B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action <>9__13;

			[Token(Token = "0x400248C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Action<Vector3> <>9__14;

			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Action <>9__16;

			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Action<object> <>9__15;

			[Token(Token = "0x60031BC")]
			[Address(RVA = "0xEF2EF8", Offset = "0xEF2EF8", VA = "0xEF2EF8")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60031BD")]
			[Address(RVA = "0xEF2F00", Offset = "0xEF2F00", VA = "0xEF2F00")]
			internal void <timeBasedTesting>b__0()
			{
			}

			[Token(Token = "0x60031BE")]
			[Address(RVA = "0xEF2F40", Offset = "0xEF2F40", VA = "0xEF2F40")]
			internal void <timeBasedTesting>b__1()
			{
			}

			[Token(Token = "0x60031BF")]
			[Address(RVA = "0xEF2F80", Offset = "0xEF2F80", VA = "0xEF2F80")]
			internal void <timeBasedTesting>b__2(float val)
			{
			}

			[Token(Token = "0x60031C0")]
			[Address(RVA = "0xEF2F90", Offset = "0xEF2F90", VA = "0xEF2F90")]
			internal void <timeBasedTesting>b__3()
			{
			}

			[Token(Token = "0x60031C1")]
			[Address(RVA = "0xEF32A0", Offset = "0xEF32A0", VA = "0xEF32A0")]
			internal void <timeBasedTesting>b__4()
			{
			}

			[Token(Token = "0x60031C2")]
			[Address(RVA = "0xEF36C4", Offset = "0xEF36C4", VA = "0xEF36C4")]
			internal void <timeBasedTesting>b__5()
			{
			}

			[Token(Token = "0x60031C3")]
			[Address(RVA = "0xEF38C8", Offset = "0xEF38C8", VA = "0xEF38C8")]
			internal void <timeBasedTesting>b__6(float val)
			{
			}

			[Token(Token = "0x60031C4")]
			[Address(RVA = "0xEF3A98", Offset = "0xEF3A98", VA = "0xEF3A98")]
			internal void <timeBasedTesting>b__7()
			{
			}

			[Token(Token = "0x60031C5")]
			[Address(RVA = "0xEF3D88", Offset = "0xEF3D88", VA = "0xEF3D88")]
			internal void <timeBasedTesting>b__13()
			{
			}

			[Token(Token = "0x60031C6")]
			[Address(RVA = "0xEF3D98", Offset = "0xEF3D98", VA = "0xEF3D98")]
			internal void <timeBasedTesting>b__14(Vector3 newPosition)
			{
			}

			[Token(Token = "0x60031C7")]
			[Address(RVA = "0xEF3E00", Offset = "0xEF3E00", VA = "0xEF3E00")]
			internal void <timeBasedTesting>b__15(object param)
			{
			}

			[Token(Token = "0x60031C8")]
			[Address(RVA = "0xEF4114", Offset = "0xEF4114", VA = "0xEF4114")]
			internal void <timeBasedTesting>b__16()
			{
			}

			[Token(Token = "0x60031C9")]
			[Address(RVA = "0xEF47B4", Offset = "0xEF47B4", VA = "0xEF47B4")]
			internal void <timeBasedTesting>b__8()
			{
			}

			[Token(Token = "0x60031CA")]
			[Address(RVA = "0xEF4BC0", Offset = "0xEF4BC0", VA = "0xEF4BC0")]
			internal void <timeBasedTesting>b__9(float val)
			{
			}

			[Token(Token = "0x60031CB")]
			[Address(RVA = "0xEF4BCC", Offset = "0xEF4BCC", VA = "0xEF4BCC")]
			internal void <timeBasedTesting>b__10()
			{
			}

			[Token(Token = "0x60031CC")]
			[Address(RVA = "0xEF4F48", Offset = "0xEF4F48", VA = "0xEF4F48")]
			internal void <timeBasedTesting>b__11(Vector3 val)
			{
			}

			[Token(Token = "0x60031CD")]
			[Address(RVA = "0xEF4F94", Offset = "0xEF4F94", VA = "0xEF4F94")]
			internal void <timeBasedTesting>b__12()
			{
			}
		}

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7FA4", Offset = "0x8F7FA4")]
		private sealed class <timeBasedTesting>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass24_0 <>8__1;

			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <descriptionMatchCount>5__2;

			[Token(Token = "0x17000543")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031D1")]
				[Address(RVA = "0xEF90A8", Offset = "0xEF90A8", VA = "0xEF90A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000544")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D3")]
				[Address(RVA = "0xEF9118", Offset = "0xEF9118", VA = "0xEF9118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031CE")]
			[Address(RVA = "0xEF01BC", Offset = "0xEF01BC", VA = "0xEF01BC")]
			[DebuggerHidden]
			public <timeBasedTesting>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60031CF")]
			[Address(RVA = "0xEF6238", Offset = "0xEF6238", VA = "0xEF6238", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031D0")]
			[Address(RVA = "0xEF623C", Offset = "0xEF623C", VA = "0xEF623C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031D2")]
			[Address(RVA = "0xEF90B0", Offset = "0xEF90B0", VA = "0xEF90B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7FB4", Offset = "0x8F7FB4")]
		private sealed class <lotsOfCancels>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <cubeCount>5__2;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <tweensA>5__3;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject[] <aGOs>5__4;

			[Token(Token = "0x400249A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int[] <tweensB>5__5;

			[Token(Token = "0x400249B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GameObject[] <bGOs>5__6;

			[Token(Token = "0x17000545")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031D7")]
				[Address(RVA = "0xEF5F6C", Offset = "0xEF5F6C", VA = "0xEF5F6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000546")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D9")]
				[Address(RVA = "0xEF5FDC", Offset = "0xEF5FDC", VA = "0xEF5FDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031D4")]
			[Address(RVA = "0xEF025C", Offset = "0xEF025C", VA = "0xEF025C")]
			[DebuggerHidden]
			public <lotsOfCancels>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60031D5")]
			[Address(RVA = "0xEF5014", Offset = "0xEF5014", VA = "0xEF5014", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031D6")]
			[Address(RVA = "0xEF5018", Offset = "0xEF5018", VA = "0xEF5018", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031D8")]
			[Address(RVA = "0xEF5F74", Offset = "0xEF5F74", VA = "0xEF5F74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7FC4", Offset = "0x8F7FC4")]
		private sealed class <pauseTimeNow>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400249D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400249E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x17000547")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031DD")]
				[Address(RVA = "0xEF61C0", Offset = "0xEF61C0", VA = "0xEF61C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000548")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031DF")]
				[Address(RVA = "0xEF6230", Offset = "0xEF6230", VA = "0xEF6230", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031DA")]
			[Address(RVA = "0xEF02FC", Offset = "0xEF02FC", VA = "0xEF02FC")]
			[DebuggerHidden]
			public <pauseTimeNow>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60031DB")]
			[Address(RVA = "0xEF5FE4", Offset = "0xEF5FE4", VA = "0xEF5FE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031DC")]
			[Address(RVA = "0xEF5FE8", Offset = "0xEF5FE8", VA = "0xEF5FE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031DE")]
			[Address(RVA = "0xEF61C8", Offset = "0xEF61C8", VA = "0xEF61C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cube1;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cube2;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject cube3;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cube4;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject cubeAlpha1;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject cubeAlpha2;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool eventGameObjectWasCalled;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool eventGeneralWasCalled;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lt1Id;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LTDescr lt2;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LTDescr lt3;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LTDescr lt4;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LTDescr[] groupTweens;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] groupGOs;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int groupTweensCnt;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int rotateRepeat;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int rotateRepeatAngle;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject boxNoCollider;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float timeElapsedNormalTimeScale;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeElapsedIgnoreTimeScale;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool pauseTweenDidFinish;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xEEE198", Offset = "0xEEE198", VA = "0xEEE198")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xEEE274", Offset = "0xEEE274", VA = "0xEEE274")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xEF009C", Offset = "0xEF009C", VA = "0xEF009C")]
		private GameObject cubeNamed(string name)
		{
			return null;
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xEF0148", Offset = "0xEF0148", VA = "0xEF0148")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DED4", Offset = "0x90DED4")]
		private IEnumerator timeBasedTesting()
		{
			return null;
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xEF01E8", Offset = "0xEF01E8", VA = "0xEF01E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DF38", Offset = "0x90DF38")]
		private IEnumerator lotsOfCancels()
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xEF0288", Offset = "0xEF0288", VA = "0xEF0288")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90DF9C", Offset = "0x90DF9C")]
		private IEnumerator pauseTimeNow()
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xEF0328", Offset = "0xEF0328", VA = "0xEF0328")]
		private void rotateRepeatFinished()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xEF03F4", Offset = "0xEF03F4", VA = "0xEF03F4")]
		private void rotateRepeatAllFinished()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xEF0594", Offset = "0xEF0594", VA = "0xEF0594")]
		private void eventGameObjectCalled(LTEvent e)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xEF05A0", Offset = "0xEF05A0", VA = "0xEF05A0")]
		private void eventGeneralCalled(LTEvent e)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xEF05AC", Offset = "0xEF05AC", VA = "0xEF05AC")]
		public TestingUnitTests()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xEF05B4", Offset = "0xEF05B4", VA = "0xEF05B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E000", Offset = "0x90E000")]
		private void <lotsOfCancels>b__25_0()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xEF05C0", Offset = "0xEF05C0", VA = "0xEF05C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E010", Offset = "0x90E010")]
		private void <pauseTimeNow>b__26_1()
		{
		}
	}
}
namespace Ionic.Zlib
{
	[Token(Token = "0x2000252")]
	internal enum BlockState
	{
		[Token(Token = "0x400100C")]
		NeedMore,
		[Token(Token = "0x400100D")]
		BlockDone,
		[Token(Token = "0x400100E")]
		FinishStarted,
		[Token(Token = "0x400100F")]
		FinishDone
	}
	[Token(Token = "0x2000253")]
	internal enum DeflateFlavor
	{
		[Token(Token = "0x4001011")]
		Store,
		[Token(Token = "0x4001012")]
		Fast,
		[Token(Token = "0x4001013")]
		Slow
	}
	[Token(Token = "0x2000254")]
	internal sealed class DeflateManager
	{
		[Token(Token = "0x20006E5")]
		internal delegate BlockState CompressFunc(FlushType flush);

		[Token(Token = "0x20006E6")]
		internal class Config
		{
			[Token(Token = "0x400249F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int GoodLength;

			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int MaxLazy;

			[Token(Token = "0x40024A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int NiceLength;

			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int MaxChainLength;

			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal DeflateFlavor Flavor;

			[Token(Token = "0x40024A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Config[] Table;

			[Token(Token = "0x60031E4")]
			[Address(RVA = "0xFC5F7C", Offset = "0xFC5F7C", VA = "0xFC5F7C")]
			private Config(int goodLength, int maxLazy, int niceLength, int maxChainLength, DeflateFlavor flavor)
			{
			}

			[Token(Token = "0x60031E5")]
			[Address(RVA = "0xFC5FD0", Offset = "0xFC5FD0", VA = "0xFC5FD0")]
			public static Config Lookup(CompressionLevel level)
			{
				return null;
			}

			[Token(Token = "0x60031E6")]
			[Address(RVA = "0xFC6070", Offset = "0xFC6070", VA = "0xFC6070")]
			static Config()
			{
			}
		}

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MEM_LEVEL_MAX;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int MEM_LEVEL_DEFAULT;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CompressFunc DeflateFunction;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] _ErrorMessage;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int PRESET_DICT;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int INIT_STATE;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int BUSY_STATE;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int FINISH_STATE;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int Z_DEFLATED;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int STORED_BLOCK;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int STATIC_TREES;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly int DYN_TREES;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly int Z_BINARY;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly int Z_ASCII;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly int Z_UNKNOWN;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly int Buf_size;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly int MIN_MATCH;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static readonly int MAX_MATCH;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int MIN_LOOKAHEAD;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static readonly int HEAP_SIZE;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int END_BLOCK;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ZlibCodec _codec;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int status;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal byte[] pending;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int nextPending;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int pendingCount;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal sbyte data_type;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int last_flush;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal int w_size;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal int w_bits;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int w_mask;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal byte[] window;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal int window_size;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal short[] prev;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal short[] head;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int ins_h;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int hash_size;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int hash_bits;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal int hash_mask;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int hash_shift;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal int block_start;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Config config;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal int match_length;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		internal int prev_match;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal int match_available;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		internal int strstart;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal int match_start;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		internal int lookahead;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal int prev_length;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		internal CompressionLevel compressionLevel;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal CompressionStrategy compressionStrategy;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal short[] dyn_ltree;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal short[] dyn_dtree;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal short[] bl_tree;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal ZTree treeLiterals;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal ZTree treeDistances;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal ZTree treeBitLengths;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal short[] bl_count;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal int[] heap;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal int heap_len;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		internal int heap_max;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal sbyte[] depth;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal int _lengthOffset;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		internal int lit_bufsize;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal int last_lit;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		internal int _distanceOffset;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal int opt_len;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		internal int static_len;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal int matches;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		internal int last_eob_len;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal short bi_buf;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		internal int bi_valid;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool Rfc1950BytesEmitted;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool _WantRfc1950HeaderBytes;

		[Token(Token = "0x17000178")]
		internal bool WantRfc1950HeaderBytes
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xC6FA34", Offset = "0xC6FA34", VA = "0xC6FA34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xC6FA3C", Offset = "0xC6FA3C", VA = "0xC6FA3C")]
			set
			{
			}
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xC6B334", Offset = "0xC6B334", VA = "0xC6B334")]
		internal DeflateManager()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xC6B4F4", Offset = "0xC6B4F4", VA = "0xC6B4F4")]
		private void _InitializeLazyMatch()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xC6B6AC", Offset = "0xC6B6AC", VA = "0xC6B6AC")]
		private void _InitializeTreeData()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xC6B7D0", Offset = "0xC6B7D0", VA = "0xC6B7D0")]
		internal void _InitializeBlocks()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xC6BA08", Offset = "0xC6BA08", VA = "0xC6BA08")]
		internal void pqdownheap(short[] tree, int k)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xC6BC98", Offset = "0xC6BC98", VA = "0xC6BC98")]
		internal static bool _IsSmaller(short[] tree, int n, int m, sbyte[] depth)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xC6BDB0", Offset = "0xC6BDB0", VA = "0xC6BDB0")]
		internal void scan_tree(short[] tree, int max_code)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xC6C11C", Offset = "0xC6C11C", VA = "0xC6C11C")]
		internal int build_bl_tree()
		{
			return default(int);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xC6C2E0", Offset = "0xC6C2E0", VA = "0xC6C2E0")]
		internal void send_all_trees(int lcodes, int dcodes, int blcodes)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xC6C5F0", Offset = "0xC6C5F0", VA = "0xC6C5F0")]
		internal void send_tree(short[] tree, int max_code)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xC6C93C", Offset = "0xC6C93C", VA = "0xC6C93C")]
		private void put_bytes(byte[] p, int start, int len)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xC6C8A8", Offset = "0xC6C8A8", VA = "0xC6C8A8")]
		internal void send_code(int c, short[] tree)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xC6C458", Offset = "0xC6C458", VA = "0xC6C458")]
		internal void send_bits(int value, int length)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xC6C988", Offset = "0xC6C988", VA = "0xC6C988")]
		internal void _tr_align()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xC6CC1C", Offset = "0xC6CC1C", VA = "0xC6CC1C")]
		internal bool _tr_tally(int dist, int lc)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xC6D020", Offset = "0xC6D020", VA = "0xC6D020")]
		internal void send_compressed_block(short[] ltree, short[] dtree)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xC6D44C", Offset = "0xC6D44C", VA = "0xC6D44C")]
		internal void set_data_type()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xC6CAF0", Offset = "0xC6CAF0", VA = "0xC6CAF0")]
		internal void bi_flush()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xC6D620", Offset = "0xC6D620", VA = "0xC6D620")]
		internal void bi_windup()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xC6D72C", Offset = "0xC6D72C", VA = "0xC6D72C")]
		internal void copy_block(int buf, int len, bool header)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xC6D8A8", Offset = "0xC6D8A8", VA = "0xC6D8A8")]
		internal void flush_block_only(bool eof)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xC6DB88", Offset = "0xC6DB88", VA = "0xC6DB88")]
		internal BlockState DeflateNone(FlushType flush)
		{
			return default(BlockState);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xC6E0F8", Offset = "0xC6E0F8", VA = "0xC6E0F8")]
		internal void _tr_stored_block(int buf, int stored_len, bool eof)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xC6D924", Offset = "0xC6D924", VA = "0xC6D924")]
		internal void _tr_flush_block(int buf, int stored_len, bool eof)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xC6DD58", Offset = "0xC6DD58", VA = "0xC6DD58")]
		private void _fillWindow()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xC6E1B4", Offset = "0xC6E1B4", VA = "0xC6E1B4")]
		internal BlockState DeflateFast(FlushType flush)
		{
			return default(BlockState);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xC6F24C", Offset = "0xC6F24C", VA = "0xC6F24C")]
		internal BlockState DeflateSlow(FlushType flush)
		{
			return default(BlockState);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xC6E8A8", Offset = "0xC6E8A8", VA = "0xC6E8A8")]
		internal int longest_match(int cur_match)
		{
			return default(int);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xC6FA48", Offset = "0xC6FA48", VA = "0xC6FA48")]
		internal int Initialize(ZlibCodec codec, CompressionLevel level)
		{
			return default(int);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xC6FA64", Offset = "0xC6FA64", VA = "0xC6FA64")]
		internal int Initialize(ZlibCodec codec, CompressionLevel level, int bits)
		{
			return default(int);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xC6FD98", Offset = "0xC6FD98", VA = "0xC6FD98")]
		internal int Initialize(ZlibCodec codec, CompressionLevel level, int bits, CompressionStrategy compressionStrategy)
		{
			return default(int);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xC6FB08", Offset = "0xC6FB08", VA = "0xC6FB08")]
		internal int Initialize(ZlibCodec codec, CompressionLevel level, int windowBits, int memLevel, CompressionStrategy strategy)
		{
			return default(int);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xC6FE40", Offset = "0xC6FE40", VA = "0xC6FE40")]
		internal void Reset()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xC6FF98", Offset = "0xC6FF98", VA = "0xC6FF98")]
		internal int End()
		{
			return default(int);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xC6B5DC", Offset = "0xC6B5DC", VA = "0xC6B5DC")]
		private void SetDeflater()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xC700B4", Offset = "0xC700B4", VA = "0xC700B4")]
		internal int SetParams(CompressionLevel level, CompressionStrategy strategy)
		{
			return default(int);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xC701D4", Offset = "0xC701D4", VA = "0xC701D4")]
		internal int SetDictionary(byte[] dictionary)
		{
			return default(int);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xC705B0", Offset = "0xC705B0", VA = "0xC705B0")]
		internal int Deflate(FlushType flush)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000255")]
	public class DeflateStream : Stream
	{
		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal ZlibBaseStream _baseStream;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Stream _innerStream;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _disposed;

		[Token(Token = "0x17000179")]
		public virtual FlushType FlushMode
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xFC6724", Offset = "0xFC6724", VA = "0xFC6724", Slot = "31")]
			get
			{
				return default(FlushType);
			}
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xFC6750", Offset = "0xFC6750", VA = "0xFC6750", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public int BufferSize
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xFC67FC", Offset = "0xFC67FC", VA = "0xFC67FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xFC6828", Offset = "0xFC6828", VA = "0xFC6828")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public CompressionStrategy Strategy
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xFC6A18", Offset = "0xFC6A18", VA = "0xFC6A18")]
			get
			{
				return default(CompressionStrategy);
			}
			[Token(Token = "0x600160F")]
			[Address(RVA = "0xFC6A44", Offset = "0xFC6A44", VA = "0xFC6A44")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public virtual long TotalIn
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0xFC6AF0", Offset = "0xFC6AF0", VA = "0xFC6AF0", Slot = "33")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700017D")]
		public virtual long TotalOut
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xFC6B2C", Offset = "0xFC6B2C", VA = "0xFC6B2C", Slot = "34")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700017E")]
		public override bool CanRead
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xFC6C10", Offset = "0xFC6C10", VA = "0xFC6C10", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017F")]
		public override bool CanSeek
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xFC6CC8", Offset = "0xFC6CC8", VA = "0xFC6CC8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public override bool CanWrite
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xFC6CD0", Offset = "0xFC6CD0", VA = "0xFC6CD0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000181")]
		public override long Length
		{
			[Token(Token = "0x6001617")]
			[Address(RVA = "0xFC6E34", Offset = "0xFC6E34", VA = "0xFC6E34", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000182")]
		public override long Position
		{
			[Token(Token = "0x6001618")]
			[Address(RVA = "0xFC6E9C", Offset = "0xFC6E9C", VA = "0xFC6E9C", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001619")]
			[Address(RVA = "0xFC6F40", Offset = "0xFC6F40", VA = "0xFC6F40", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xFC6548", Offset = "0xFC6548", VA = "0xFC6548")]
		public DeflateStream(Stream stream, CompressionMode mode)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xFC6614", Offset = "0xFC6614", VA = "0xFC6614")]
		public DeflateStream(Stream stream, CompressionMode mode, CompressionLevel level)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xFC661C", Offset = "0xFC661C", VA = "0xFC661C")]
		public DeflateStream(Stream stream, CompressionMode mode, bool leaveOpen)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xFC6554", Offset = "0xFC6554", VA = "0xFC6554")]
		public DeflateStream(Stream stream, CompressionMode mode, CompressionLevel level, bool leaveOpen)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xFC6B68", Offset = "0xFC6B68", VA = "0xFC6B68", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xFC6D88", Offset = "0xFC6D88", VA = "0xFC6D88", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xFC6FA8", Offset = "0xFC6FA8", VA = "0xFC6FA8", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xFC707C", Offset = "0xFC707C", VA = "0xFC707C", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xFC70E4", Offset = "0xFC70E4", VA = "0xFC70E4", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xFC714C", Offset = "0xFC714C", VA = "0xFC714C", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xFC7220", Offset = "0xFC7220", VA = "0xFC7220")]
		public static byte[] CompressString(string s)
		{
			return null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xFC7510", Offset = "0xFC7510", VA = "0xFC7510")]
		public static byte[] CompressBuffer(byte[] b)
		{
			return null;
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xFC77D4", Offset = "0xFC77D4", VA = "0xFC77D4")]
		public static string UncompressString(byte[] compressed)
		{
			return null;
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xFC7C74", Offset = "0xFC7C74", VA = "0xFC7C74")]
		public static byte[] UncompressBuffer(byte[] compressed)
		{
			return null;
		}
	}
	[Token(Token = "0x2000256")]
	public class GZipStream : Stream
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime? LastModified;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _headerByteCount;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal ZlibBaseStream _baseStream;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _disposed;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _firstReadDone;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _FileName;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _Comment;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _Crc32;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly DateTime _unixEpoch;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly System.Text.Encoding iso8859dash1;

		[Token(Token = "0x17000183")]
		public string Comment
		{
			[Token(Token = "0x6001622")]
			[Address(RVA = "0xFC80B4", Offset = "0xFC80B4", VA = "0xFC80B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xFC80BC", Offset = "0xFC80BC", VA = "0xFC80BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public string FileName
		{
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xFC8158", Offset = "0xFC8158", VA = "0xFC8158")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xFC8160", Offset = "0xFC8160", VA = "0xFC8160")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public int Crc32
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xFC8304", Offset = "0xFC8304", VA = "0xFC8304")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000186")]
		public virtual FlushType FlushMode
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xFC83E8", Offset = "0xFC83E8", VA = "0xFC83E8", Slot = "31")]
			get
			{
				return default(FlushType);
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0xFC8414", Offset = "0xFC8414", VA = "0xFC8414", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public int BufferSize
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0xFC84C0", Offset = "0xFC84C0", VA = "0xFC84C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600162E")]
			[Address(RVA = "0xFC84EC", Offset = "0xFC84EC", VA = "0xFC84EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public virtual long TotalIn
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xFC8664", Offset = "0xFC8664", VA = "0xFC8664", Slot = "33")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000189")]
		public virtual long TotalOut
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xFC86A0", Offset = "0xFC86A0", VA = "0xFC86A0", Slot = "34")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700018A")]
		public override bool CanRead
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xFC87D0", Offset = "0xFC87D0", VA = "0xFC87D0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018B")]
		public override bool CanSeek
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0xFC8888", Offset = "0xFC8888", VA = "0xFC8888", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public override bool CanWrite
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0xFC8890", Offset = "0xFC8890", VA = "0xFC8890", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018D")]
		public override long Length
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0xFC89F4", Offset = "0xFC89F4", VA = "0xFC89F4", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700018E")]
		public override long Position
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xFC8A5C", Offset = "0xFC8A5C", VA = "0xFC8A5C", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xFC8B1C", Offset = "0xFC8B1C", VA = "0xFC8B1C", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xFC830C", Offset = "0xFC830C", VA = "0xFC830C")]
		public GZipStream(Stream stream, CompressionMode mode)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xFC83D4", Offset = "0xFC83D4", VA = "0xFC83D4")]
		public GZipStream(Stream stream, CompressionMode mode, CompressionLevel level)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xFC83DC", Offset = "0xFC83DC", VA = "0xFC83DC")]
		public GZipStream(Stream stream, CompressionMode mode, bool leaveOpen)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xFC8318", Offset = "0xFC8318", VA = "0xFC8318")]
		public GZipStream(Stream stream, CompressionMode mode, CompressionLevel level, bool leaveOpen)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xFC86DC", Offset = "0xFC86DC", VA = "0xFC86DC", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xFC8948", Offset = "0xFC8948", VA = "0xFC8948", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xFC8B84", Offset = "0xFC8B84", VA = "0xFC8B84", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xFC8CAC", Offset = "0xFC8CAC", VA = "0xFC8CAC", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xFC8D14", Offset = "0xFC8D14", VA = "0xFC8D14", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xFC8D7C", Offset = "0xFC8D7C", VA = "0xFC8D7C", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xFC8EC0", Offset = "0xFC8EC0", VA = "0xFC8EC0")]
		private int EmitHeader()
		{
			return default(int);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xFC9370", Offset = "0xFC9370", VA = "0xFC9370")]
		public static byte[] CompressString(string s)
		{
			return null;
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xFC94F4", Offset = "0xFC94F4", VA = "0xFC94F4")]
		public static byte[] CompressBuffer(byte[] b)
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xFC9678", Offset = "0xFC9678", VA = "0xFC9678")]
		public static string UncompressString(byte[] compressed)
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xFC97DC", Offset = "0xFC97DC", VA = "0xFC97DC")]
		public static byte[] UncompressBuffer(byte[] compressed)
		{
			return null;
		}
	}
	[Token(Token = "0x2000257")]
	internal sealed class InflateBlocks
	{
		[Token(Token = "0x20006E7")]
		private enum InflateBlockMode
		{
			[Token(Token = "0x40024A6")]
			TYPE,
			[Token(Token = "0x40024A7")]
			LENS,
			[Token(Token = "0x40024A8")]
			STORED,
			[Token(Token = "0x40024A9")]
			TABLE,
			[Token(Token = "0x40024AA")]
			BTREE,
			[Token(Token = "0x40024AB")]
			DTREE,
			[Token(Token = "0x40024AC")]
			CODES,
			[Token(Token = "0x40024AD")]
			DRY,
			[Token(Token = "0x40024AE")]
			DONE,
			[Token(Token = "0x40024AF")]
			BAD
		}

		[Token(Token = "0x400106B")]
		private const int MANY = 1440;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int[] border;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InflateBlockMode mode;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int left;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int table;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int index;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int[] blens;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int[] bb;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int[] tb;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal InflateCodes codes;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal int last;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal ZlibCodec _codec;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int bitk;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal int bitb;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal int[] hufts;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal byte[] window;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal int end;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal int readAt;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int writeAt;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal object checkfn;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal uint check;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal InfTree inftree;

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xFCB0D8", Offset = "0xFCB0D8", VA = "0xFCB0D8")]
		internal InflateBlocks(ZlibCodec codec, object checkfn, int w)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xFCB1EC", Offset = "0xFCB1EC", VA = "0xFCB1EC")]
		internal uint Reset()
		{
			return default(uint);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xFCB2A4", Offset = "0xFCB2A4", VA = "0xFCB2A4")]
		internal int Process(int r)
		{
			return default(int);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xFCDEC8", Offset = "0xFCDEC8", VA = "0xFCDEC8")]
		internal void Free()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xFCDEEC", Offset = "0xFCDEEC", VA = "0xFCDEEC")]
		internal void SetDictionary(byte[] d, int start, int n)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xFCDF30", Offset = "0xFCDF30", VA = "0xFCDF30")]
		internal int SyncPoint()
		{
			return default(int);
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xFCC8D8", Offset = "0xFCC8D8", VA = "0xFCC8D8")]
		internal int Flush(int r)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000258")]
	internal static class InternalInflateConstants
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int[] InflateMask;
	}
	[Token(Token = "0x2000259")]
	internal sealed class InflateCodes
	{
		[Token(Token = "0x4001082")]
		private const int START = 0;

		[Token(Token = "0x4001083")]
		private const int LEN = 1;

		[Token(Token = "0x4001084")]
		private const int LENEXT = 2;

		[Token(Token = "0x4001085")]
		private const int DIST = 3;

		[Token(Token = "0x4001086")]
		private const int DISTEXT = 4;

		[Token(Token = "0x4001087")]
		private const int COPY = 5;

		[Token(Token = "0x4001088")]
		private const int LIT = 6;

		[Token(Token = "0x4001089")]
		private const int WASH = 7;

		[Token(Token = "0x400108A")]
		private const int END = 8;

		[Token(Token = "0x400108B")]
		private const int BADCODE = 9;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int mode;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int len;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int[] tree;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int tree_index;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int need;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int lit;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int bitsToGet;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int dist;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal byte lbits;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		internal byte dbits;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int[] ltree;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal int ltree_index;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int[] dtree;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int dtree_index;

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xFCB1E4", Offset = "0xFCB1E4", VA = "0xFCB1E4")]
		internal InflateCodes()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xFCCB60", Offset = "0xFCCB60", VA = "0xFCCB60")]
		internal void Init(int bl, int bd, int[] tl, int tl_index, int[] td, int td_index)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xFCCB84", Offset = "0xFCCB84", VA = "0xFCCB84")]
		internal int Process(InflateBlocks blocks, int r)
		{
			return default(int);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xFCDFBC", Offset = "0xFCDFBC", VA = "0xFCDFBC")]
		internal int InflateFast(int bl, int bd, int[] tl, int tl_index, int[] td, int td_index, InflateBlocks s, ZlibCodec z)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200025A")]
	internal sealed class InflateManager
	{
		[Token(Token = "0x20006E8")]
		private enum InflateManagerMode
		{
			[Token(Token = "0x40024B1")]
			METHOD,
			[Token(Token = "0x40024B2")]
			FLAG,
			[Token(Token = "0x40024B3")]
			DICT4,
			[Token(Token = "0x40024B4")]
			DICT3,
			[Token(Token = "0x40024B5")]
			DICT2,
			[Token(Token = "0x40024B6")]
			DICT1,
			[Token(Token = "0x40024B7")]
			DICT0,
			[Token(Token = "0x40024B8")]
			BLOCKS,
			[Token(Token = "0x40024B9")]
			CHECK4,
			[Token(Token = "0x40024BA")]
			CHECK3,
			[Token(Token = "0x40024BB")]
			CHECK2,
			[Token(Token = "0x40024BC")]
			CHECK1,
			[Token(Token = "0x40024BD")]
			DONE,
			[Token(Token = "0x40024BE")]
			BAD
		}

		[Token(Token = "0x400109A")]
		private const int PRESET_DICT = 32;

		[Token(Token = "0x400109B")]
		private const int Z_DEFLATED = 8;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InflateManagerMode mode;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ZlibCodec _codec;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int method;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal uint computedCheck;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal uint expectedCheck;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int marker;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _handleRfc1950HeaderBytes;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int wbits;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal InflateBlocks blocks;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] mark;

		[Token(Token = "0x1700018F")]
		internal bool HandleRfc1950HeaderBytes
		{
			[Token(Token = "0x6001650")]
			[Address(RVA = "0xFCF14C", Offset = "0xFCF14C", VA = "0xFCF14C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001651")]
			[Address(RVA = "0xFCF154", Offset = "0xFCF154", VA = "0xFCF154")]
			set
			{
			}
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xFCF160", Offset = "0xFCF160", VA = "0xFCF160")]
		public InflateManager()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xFCF170", Offset = "0xFCF170", VA = "0xFCF170")]
		public InflateManager(bool expectRfc1950HeaderBytes)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xFCF1A8", Offset = "0xFCF1A8", VA = "0xFCF1A8")]
		internal int Reset()
		{
			return default(int);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xFCF234", Offset = "0xFCF234", VA = "0xFCF234")]
		internal int End()
		{
			return default(int);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xFCF26C", Offset = "0xFCF26C", VA = "0xFCF26C")]
		internal int Initialize(ZlibCodec codec, int w)
		{
			return default(int);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xFCF37C", Offset = "0xFCF37C", VA = "0xFCF37C")]
		internal int Inflate(FlushType flush)
		{
			return default(int);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xFD01D0", Offset = "0xFD01D0", VA = "0xFD01D0")]
		internal int SetDictionary(byte[] dictionary)
		{
			return default(int);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xFD039C", Offset = "0xFD039C", VA = "0xFD039C")]
		internal int Sync()
		{
			return default(int);
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xFD0674", Offset = "0xFD0674", VA = "0xFD0674")]
		internal int SyncPoint(ZlibCodec z)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200025B")]
	internal sealed class InfTree
	{
		[Token(Token = "0x40010A6")]
		private const int MANY = 1440;

		[Token(Token = "0x40010A7")]
		private const int Z_OK = 0;

		[Token(Token = "0x40010A8")]
		private const int Z_STREAM_END = 1;

		[Token(Token = "0x40010A9")]
		private const int Z_NEED_DICT = 2;

		[Token(Token = "0x40010AA")]
		private const int Z_ERRNO = -1;

		[Token(Token = "0x40010AB")]
		private const int Z_STREAM_ERROR = -2;

		[Token(Token = "0x40010AC")]
		private const int Z_DATA_ERROR = -3;

		[Token(Token = "0x40010AD")]
		private const int Z_MEM_ERROR = -4;

		[Token(Token = "0x40010AE")]
		private const int Z_BUF_ERROR = -5;

		[Token(Token = "0x40010AF")]
		private const int Z_VERSION_ERROR = -6;

		[Token(Token = "0x40010B0")]
		internal const int fixed_bl = 9;

		[Token(Token = "0x40010B1")]
		internal const int fixed_bd = 5;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int[] fixed_tl;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly int[] fixed_td;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly int[] cplens;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly int[] cplext;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly int[] cpdist;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal static readonly int[] cpdext;

		[Token(Token = "0x40010B8")]
		internal const int BMAX = 15;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int[] hn;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int[] v;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int[] c;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int[] r;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int[] u;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int[] x;

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xFC99E8", Offset = "0xFC99E8", VA = "0xFC99E8")]
		private int huft_build(int[] b, int bindex, int n, int s, int[] d, int[] e, int[] t, int[] m, int[] hp, int[] hn, int[] v)
		{
			return default(int);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xFCA7FC", Offset = "0xFCA7FC", VA = "0xFCA7FC")]
		internal int inflate_trees_bits(int[] c, int[] bb, int[] tb, int[] hp, ZlibCodec z)
		{
			return default(int);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xFCAB30", Offset = "0xFCAB30", VA = "0xFCAB30")]
		internal int inflate_trees_dynamic(int nl, int nd, int[] c, int[] bl, int[] bd, int[] tl, int[] td, int[] hp, ZlibCodec z)
		{
			return default(int);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xFCADBC", Offset = "0xFCADBC", VA = "0xFCADBC")]
		internal static int inflate_trees_fixed(int[] bl, int[] bd, int[][] tl, int[][] td, ZlibCodec z)
		{
			return default(int);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xFCA954", Offset = "0xFCA954", VA = "0xFCA954")]
		private void initWorkArea(int vsize)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xFCAF5C", Offset = "0xFCAF5C", VA = "0xFCAF5C")]
		public InfTree()
		{
		}
	}
	[Token(Token = "0x200025C")]
	internal class WorkItem
	{
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] buffer;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] compressed;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int crc;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int index;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ordinal;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int inputBytesAvailable;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int compressedBytesAvailable;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ZlibCodec compressor;

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xFD0DE0", Offset = "0xFD0DE0", VA = "0xFD0DE0")]
		public WorkItem(int size, CompressionLevel compressLevel, CompressionStrategy strategy, int ix)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class ParallelDeflateOutputStream : Stream
	{
		[Token(Token = "0x20006E9")]
		[Flags]
		private enum TraceBits : uint
		{
			[Token(Token = "0x40024C0")]
			None = 0u,
			[Token(Token = "0x40024C1")]
			NotUsed1 = 1u,
			[Token(Token = "0x40024C2")]
			EmitLock = 2u,
			[Token(Token = "0x40024C3")]
			EmitEnter = 4u,
			[Token(Token = "0x40024C4")]
			EmitBegin = 8u,
			[Token(Token = "0x40024C5")]
			EmitDone = 0x10u,
			[Token(Token = "0x40024C6")]
			EmitSkip = 0x20u,
			[Token(Token = "0x40024C7")]
			EmitAll = 0x3Au,
			[Token(Token = "0x40024C8")]
			Flush = 0x40u,
			[Token(Token = "0x40024C9")]
			Lifecycle = 0x80u,
			[Token(Token = "0x40024CA")]
			Session = 0x100u,
			[Token(Token = "0x40024CB")]
			Synch = 0x200u,
			[Token(Token = "0x40024CC")]
			Instance = 0x400u,
			[Token(Token = "0x40024CD")]
			Compress = 0x800u,
			[Token(Token = "0x40024CE")]
			Write = 0x1000u,
			[Token(Token = "0x40024CF")]
			WriteEnter = 0x2000u,
			[Token(Token = "0x40024D0")]
			WriteTake = 0x4000u,
			[Token(Token = "0x40024D1")]
			All = uint.MaxValue
		}

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int IO_BUFFER_SIZE_DEFAULT;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BufferPairsPerCore;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<WorkItem> _pool;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _leaveOpen;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool emitting;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stream _outStream;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _maxBufferPairs;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _bufferSize;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AutoResetEvent _newlyCompressedBlob;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private object _outputLock;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isClosed;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _firstWriteDone;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentlyFilling;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _lastFilled;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _lastWritten;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _latestCompressed;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _Crc32;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CRC32 _runningCrc;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private object _latestLock;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Queue<int> _toWrite;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Queue<int> _toFill;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private long _totalBytesProcessed;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CompressionLevel _compressLevel;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Exception _pendingException;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _handlingException;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object _eLock;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private TraceBits _DesiredTrace;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC65C", Offset = "0x8FC65C")]
		private CompressionStrategy <Strategy>k__BackingField;

		[Token(Token = "0x17000190")]
		public CompressionStrategy Strategy
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xFD0AF0", Offset = "0xFD0AF0", VA = "0xFD0AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E020", Offset = "0x90E020")]
			get
			{
				return default(CompressionStrategy);
			}
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xFD0A40", Offset = "0xFD0A40", VA = "0xFD0A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E030", Offset = "0x90E030")]
			private set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public int MaxBufferPairs
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xFD0AF8", Offset = "0xFD0AF8", VA = "0xFD0AF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xFD0A48", Offset = "0xFD0A48", VA = "0xFD0A48")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public int BufferSize
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xFD0B00", Offset = "0xFD0B00", VA = "0xFD0B00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xFD0B08", Offset = "0xFD0B08", VA = "0xFD0B08")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public int Crc32
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xFD0BB0", Offset = "0xFD0BB0", VA = "0xFD0BB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000194")]
		public long BytesProcessed
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xFD0BB8", Offset = "0xFD0BB8", VA = "0xFD0BB8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000195")]
		public override bool CanSeek
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xFD25C4", Offset = "0xFD25C4", VA = "0xFD25C4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000196")]
		public override bool CanRead
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xFD25CC", Offset = "0xFD25CC", VA = "0xFD25CC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public override bool CanWrite
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0xFD25D4", Offset = "0xFD25D4", VA = "0xFD25D4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		public override long Length
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xFD2608", Offset = "0xFD2608", VA = "0xFD2608", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000199")]
		public override long Position
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xFD2670", Offset = "0xFD2670", VA = "0xFD2670", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xFD26A4", Offset = "0xFD26A4", VA = "0xFD26A4", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xFD08A8", Offset = "0xFD08A8", VA = "0xFD08A8")]
		public ParallelDeflateOutputStream(Stream stream)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xFD0A14", Offset = "0xFD0A14", VA = "0xFD0A14")]
		public ParallelDeflateOutputStream(Stream stream, CompressionLevel level)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xFD0A20", Offset = "0xFD0A20", VA = "0xFD0A20")]
		public ParallelDeflateOutputStream(Stream stream, bool leaveOpen)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xFD0A30", Offset = "0xFD0A30", VA = "0xFD0A30")]
		public ParallelDeflateOutputStream(Stream stream, CompressionLevel level, bool leaveOpen)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xFD08B8", Offset = "0xFD08B8", VA = "0xFD08B8")]
		public ParallelDeflateOutputStream(Stream stream, CompressionLevel level, CompressionStrategy strategy, bool leaveOpen)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xFD0BC0", Offset = "0xFD0BC0", VA = "0xFD0BC0")]
		private void _InitializePoolOfWorkItems()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xFD0F08", Offset = "0xFD0F08", VA = "0xFD0F08", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xFD15F0", Offset = "0xFD15F0", VA = "0xFD15F0")]
		private void _FlushFinish()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xFD1958", Offset = "0xFD1958", VA = "0xFD1958")]
		private void _Flush(bool lastInput)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xFD1EE4", Offset = "0xFD1EE4", VA = "0xFD1EE4", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xFD1F80", Offset = "0xFD1F80", VA = "0xFD1F80", Slot = "15")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xFD2058", Offset = "0xFD2058", VA = "0xFD2058")]
		public new void Dispose()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xFD209C", Offset = "0xFD209C", VA = "0xFD209C", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xFD20A8", Offset = "0xFD20A8", VA = "0xFD20A8")]
		public void Reset(Stream stream)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xFD11D4", Offset = "0xFD11D4", VA = "0xFD11D4")]
		private void EmitPendingBuffers(bool doAll, bool mustWait)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xFD1A74", Offset = "0xFD1A74", VA = "0xFD1A74")]
		private void _DeflateOne(object wi)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xFD229C", Offset = "0xFD229C", VA = "0xFD229C")]
		private bool DeflateOneSegment(WorkItem workitem)
		{
			return default(bool);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xFD2448", Offset = "0xFD2448", VA = "0xFD2448")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x90E040", Offset = "0x90E040")]
		private void TraceOutput(TraceBits bits, string format, params object[] varParams)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xFD270C", Offset = "0xFD270C", VA = "0xFD270C", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xFD2774", Offset = "0xFD2774", VA = "0xFD2774", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xFD27DC", Offset = "0xFD27DC", VA = "0xFD27DC", Slot = "26")]
		public override void SetLength(long value)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public enum FlushType
	{
		[Token(Token = "0x40010E4")]
		None,
		[Token(Token = "0x40010E5")]
		Partial,
		[Token(Token = "0x40010E6")]
		Sync,
		[Token(Token = "0x40010E7")]
		Full,
		[Token(Token = "0x40010E8")]
		Finish
	}
	[Token(Token = "0x200025F")]
	public enum CompressionLevel
	{
		[Token(Token = "0x40010EA")]
		None = 0,
		[Token(Token = "0x40010EB")]
		Level0 = 0,
		[Token(Token = "0x40010EC")]
		BestSpeed = 1,
		[Token(Token = "0x40010ED")]
		Level1 = 1,
		[Token(Token = "0x40010EE")]
		Level2 = 2,
		[Token(Token = "0x40010EF")]
		Level3 = 3,
		[Token(Token = "0x40010F0")]
		Level4 = 4,
		[Token(Token = "0x40010F1")]
		Level5 = 5,
		[Token(Token = "0x40010F2")]
		Default = 6,
		[Token(Token = "0x40010F3")]
		Level6 = 6,
		[Token(Token = "0x40010F4")]
		Level7 = 7,
		[Token(Token = "0x40010F5")]
		Level8 = 8,
		[Token(Token = "0x40010F6")]
		BestCompression = 9,
		[Token(Token = "0x40010F7")]
		Level9 = 9
	}
	[Token(Token = "0x2000260")]
	public enum CompressionStrategy
	{
		[Token(Token = "0x40010F9")]
		Default,
		[Token(Token = "0x40010FA")]
		Filtered,
		[Token(Token = "0x40010FB")]
		HuffmanOnly
	}
	[Token(Token = "0x2000261")]
	public enum CompressionMode
	{
		[Token(Token = "0x40010FD")]
		Compress,
		[Token(Token = "0x40010FE")]
		Decompress
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "GuidAttribute", RVA = "0x8F5A58", Offset = "0x8F5A58")]
	public class ZlibException : Exception
	{
		[Token(Token = "0x6001688")]
		[Address(RVA = "0xFD66C0", Offset = "0xFD66C0", VA = "0xFD66C0")]
		public ZlibException()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xFC69A0", Offset = "0xFC69A0", VA = "0xFC69A0")]
		public ZlibException(string s)
		{
		}
	}
	[Token(Token = "0x2000263")]
	internal class SharedUtils
	{
		[Token(Token = "0x600168A")]
		[Address(RVA = "0xFCA7F0", Offset = "0xFCA7F0", VA = "0xFCA7F0")]
		public static int URShift(int number, int bits)
		{
			return default(int);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xFD28A8", Offset = "0xFD28A8", VA = "0xFD28A8")]
		public static int ReadInput(TextReader sourceTextReader, byte[] target, int start, int count)
		{
			return default(int);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xFD29FC", Offset = "0xFD29FC", VA = "0xFD29FC")]
		internal static byte[] ToByteArray(string sourceString)
		{
			return null;
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xFD2A40", Offset = "0xFD2A40", VA = "0xFD2A40")]
		internal static char[] ToCharArray(byte[] byteArray)
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xFD2A84", Offset = "0xFD2A84", VA = "0xFD2A84")]
		public SharedUtils()
		{
		}
	}
	[Token(Token = "0x2000264")]
	internal static class InternalConstants
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int MAX_BITS;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal static readonly int BL_CODES;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly int D_CODES;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal static readonly int LITERALS;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly int LENGTH_CODES;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal static readonly int L_CODES;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly int MAX_BL_BITS;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal static readonly int REP_3_6;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly int REPZ_3_10;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal static readonly int REPZ_11_138;
	}
	[Token(Token = "0x2000265")]
	internal sealed class StaticTree
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly short[] lengthAndLiteralsTreeCodes;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly short[] distTreeCodes;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly StaticTree Literals;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly StaticTree Distances;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly StaticTree BitLengths;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal short[] treeCodes;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int[] extraBits;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int extraBase;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int elems;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int maxLength;

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xFD2A8C", Offset = "0xFD2A8C", VA = "0xFD2A8C")]
		private StaticTree(short[] treeCodes, int[] extraBits, int extraBase, int elems, int maxLength)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xFD2AE0", Offset = "0xFD2AE0", VA = "0xFD2AE0")]
		static StaticTree()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public sealed class Adler
	{
		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint BASE;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int NMAX;

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xC6AD58", Offset = "0xC6AD58", VA = "0xC6AD58")]
		public static uint Adler32(uint adler, byte[] buf, int index, int len)
		{
			return default(uint);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xC6B2C8", Offset = "0xC6B2C8", VA = "0xC6B2C8")]
		public Adler()
		{
		}
	}
	[Token(Token = "0x2000267")]
	internal enum ZlibStreamFlavor
	{
		[Token(Token = "0x4001116")]
		ZLIB = 1950,
		[Token(Token = "0x4001117")]
		DEFLATE,
		[Token(Token = "0x4001118")]
		GZIP
	}
	[Token(Token = "0x2000268")]
	internal class ZlibBaseStream : Stream
	{
		[Token(Token = "0x20006EA")]
		internal enum StreamMode
		{
			[Token(Token = "0x40024D3")]
			Writer,
			[Token(Token = "0x40024D4")]
			Reader,
			[Token(Token = "0x40024D5")]
			Undefined
		}

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected internal ZlibCodec _z;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected internal StreamMode _streamMode;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected internal FlushType _flushMode;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected internal ZlibStreamFlavor _flavor;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected internal CompressionMode _compressionMode;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected internal CompressionLevel _level;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected internal bool _leaveOpen;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected internal byte[] _workingBuffer;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected internal int _bufferSize;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected internal byte[] _buf1;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected internal Stream _stream;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected internal CompressionStrategy Strategy;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CRC32 crc;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected internal string _GzipFileName;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected internal string _GzipComment;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected internal DateTime _GzipMtime;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected internal int _gzipHeaderByteCount;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool nomoreinput;

		[Token(Token = "0x1700019A")]
		internal int Crc32
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0xFC87BC", Offset = "0xFC87BC", VA = "0xFC87BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019B")]
		protected internal bool _wantCompress
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xFC8EB0", Offset = "0xFC8EB0", VA = "0xFC8EB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019C")]
		private ZlibCodec z
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xFD4188", Offset = "0xFD4188", VA = "0xFD4188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private byte[] workingBuffer
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0xFD429C", Offset = "0xFD429C", VA = "0xFD429C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public override bool CanRead
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xFD5BC4", Offset = "0xFD5BC4", VA = "0xFD5BC4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019F")]
		public override bool CanSeek
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xFD5BF8", Offset = "0xFD5BF8", VA = "0xFD5BF8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public override bool CanWrite
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xFD5C2C", Offset = "0xFD5C2C", VA = "0xFD5C2C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public override long Length
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0xFD5C60", Offset = "0xFD5C60", VA = "0xFD5C60", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001A2")]
		public override long Position
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0xFD5C94", Offset = "0xFD5C94", VA = "0xFD5C94", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xFD5CFC", Offset = "0xFD5CFC", VA = "0xFD5CFC", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xFC6628", Offset = "0xFC6628", VA = "0xFC6628")]
		public ZlibBaseStream(Stream stream, CompressionMode compressionMode, CompressionLevel level, ZlibStreamFlavor flavor, bool leaveOpen)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xFD42FC", Offset = "0xFD42FC", VA = "0xFD42FC", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xFD469C", Offset = "0xFD469C", VA = "0xFD469C")]
		private void finish()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xFD4DE4", Offset = "0xFD4DE4", VA = "0xFD4DE4")]
		private void end()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xFD4EF4", Offset = "0xFD4EF4", VA = "0xFD4EF4", Slot = "15")]
		public override void Close()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xFD4FB0", Offset = "0xFD4FB0", VA = "0xFD4FB0", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xFD4FE8", Offset = "0xFD4FE8", VA = "0xFD4FE8", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xFD5050", Offset = "0xFD5050", VA = "0xFD5050", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xFD5090", Offset = "0xFD5090", VA = "0xFD5090")]
		private string ReadZeroTerminatedString()
		{
			return null;
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xFD5290", Offset = "0xFD5290", VA = "0xFD5290")]
		private int _ReadAndValidateGzipHeader()
		{
			return default(int);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xFD5668", Offset = "0xFD5668", VA = "0xFD5668", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xFC73A4", Offset = "0xFC73A4", VA = "0xFC73A4")]
		public static void CompressString(string s, Stream compressor)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xFC7694", Offset = "0xFC7694", VA = "0xFC7694")]
		public static void CompressBuffer(byte[] b, Stream compressor)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xFC7938", Offset = "0xFC7938", VA = "0xFC7938")]
		public static string UncompressString(byte[] compressed, Stream decompressor)
		{
			return null;
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xFC7DD8", Offset = "0xFC7DD8", VA = "0xFC7DD8")]
		public static byte[] UncompressBuffer(byte[] compressed, Stream decompressor)
		{
			return null;
		}
	}
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "GuidAttribute", RVA = "0x8F5A90", Offset = "0x8F5A90")]
	[AttributeAttribute(Name = "ComVisibleAttribute", RVA = "0x8F5A90", Offset = "0x8F5A90")]
	[AttributeAttribute(Name = "ClassInterfaceAttribute", RVA = "0x8F5A90", Offset = "0x8F5A90")]
	public sealed class ZlibCodec
	{
		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] InputBuffer;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NextIn;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int AvailableBytesIn;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long TotalBytesIn;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] OutputBuffer;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int NextOut;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int AvailableBytesOut;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long TotalBytesOut;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Message;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal DeflateManager dstate;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal InflateManager istate;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal uint _Adler32;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public CompressionLevel CompressLevel;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int WindowBits;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public CompressionStrategy Strategy;

		[Token(Token = "0x170001A3")]
		public int Adler32
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xFD5D64", Offset = "0xFD5D64", VA = "0xFD5D64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xFD1808", Offset = "0xFD1808", VA = "0xFD1808")]
		public ZlibCodec()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xFD5D6C", Offset = "0xFD5D6C", VA = "0xFD5D6C")]
		public ZlibCodec(CompressionMode mode)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xFD5E6C", Offset = "0xFD5E6C", VA = "0xFD5E6C")]
		public int InitializeInflate()
		{
			return default(int);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xFD4278", Offset = "0xFD4278", VA = "0xFD4278")]
		public int InitializeInflate(bool expectRfc1950Header)
		{
			return default(int);
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xFD5E8C", Offset = "0xFD5E8C", VA = "0xFD5E8C")]
		public int InitializeInflate(int windowBits)
		{
			return default(int);
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xFD5EAC", Offset = "0xFD5EAC", VA = "0xFD5EAC")]
		public int InitializeInflate(int windowBits, bool expectRfc1950Header)
		{
			return default(int);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xFD4614", Offset = "0xFD4614", VA = "0xFD4614")]
		public int Inflate(FlushType flush)
		{
			return default(int);
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xFD4E44", Offset = "0xFD4E44", VA = "0xFD4E44")]
		public int EndInflate()
		{
			return default(int);
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xFD5F98", Offset = "0xFD5F98", VA = "0xFD5F98")]
		public int SyncInflate()
		{
			return default(int);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xFD5E64", Offset = "0xFD5E64", VA = "0xFD5E64")]
		public int InitializeDeflate()
		{
			return default(int);
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xFD6128", Offset = "0xFD6128", VA = "0xFD6128")]
		public int InitializeDeflate(CompressionLevel level)
		{
			return default(int);
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xFD181C", Offset = "0xFD181C", VA = "0xFD181C")]
		public int InitializeDeflate(CompressionLevel level, bool wantRfc1950Header)
		{
			return default(int);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xFD6138", Offset = "0xFD6138", VA = "0xFD6138")]
		public int InitializeDeflate(CompressionLevel level, int bits)
		{
			return default(int);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xFD6148", Offset = "0xFD6148", VA = "0xFD6148")]
		public int InitializeDeflate(CompressionLevel level, int bits, bool wantRfc1950Header)
		{
			return default(int);
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xFD6020", Offset = "0xFD6020", VA = "0xFD6020")]
		private int _InternalInitializeDeflate(bool wantRfc1950Header)
		{
			return default(int);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xFD182C", Offset = "0xFD182C", VA = "0xFD182C")]
		public int Deflate(FlushType flush)
		{
			return default(int);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xFD18C8", Offset = "0xFD18C8", VA = "0xFD18C8")]
		public int EndDeflate()
		{
			return default(int);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xFD23BC", Offset = "0xFD23BC", VA = "0xFD23BC")]
		public void ResetDeflate()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xFD6158", Offset = "0xFD6158", VA = "0xFD6158")]
		public int SetDeflateParams(CompressionLevel level, CompressionStrategy strategy)
		{
			return default(int);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xFD61FC", Offset = "0xFD61FC", VA = "0xFD61FC")]
		public int SetDictionary(byte[] dictionary)
		{
			return default(int);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xFD62B4", Offset = "0xFD62B4", VA = "0xFD62B4")]
		internal void flush_pending()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xFD65A4", Offset = "0xFD65A4", VA = "0xFD65A4")]
		internal int read_buf(byte[] buf, int start, int size)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200026A")]
	public static class ZlibConstants
	{
		[Token(Token = "0x400113A")]
		public const int WindowBitsMax = 15;

		[Token(Token = "0x400113B")]
		public const int WindowBitsDefault = 15;

		[Token(Token = "0x400113C")]
		public const int Z_OK = 0;

		[Token(Token = "0x400113D")]
		public const int Z_STREAM_END = 1;

		[Token(Token = "0x400113E")]
		public const int Z_NEED_DICT = 2;

		[Token(Token = "0x400113F")]
		public const int Z_STREAM_ERROR = -2;

		[Token(Token = "0x4001140")]
		public const int Z_DATA_ERROR = -3;

		[Token(Token = "0x4001141")]
		public const int Z_BUF_ERROR = -5;

		[Token(Token = "0x4001142")]
		public const int WorkingBufferSizeDefault = 16384;

		[Token(Token = "0x4001143")]
		public const int WorkingBufferSizeMin = 1024;
	}
	[Token(Token = "0x200026B")]
	public class ZlibStream : Stream
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal ZlibBaseStream _baseStream;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _disposed;

		[Token(Token = "0x170001A4")]
		public virtual FlushType FlushMode
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xFD6804", Offset = "0xFD6804", VA = "0xFD6804", Slot = "31")]
			get
			{
				return default(FlushType);
			}
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xFD6830", Offset = "0xFD6830", VA = "0xFD6830", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public int BufferSize
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xFD68DC", Offset = "0xFD68DC", VA = "0xFD68DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xFD6908", Offset = "0xFD6908", VA = "0xFD6908")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public virtual long TotalIn
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xFD6A80", Offset = "0xFD6A80", VA = "0xFD6A80", Slot = "33")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001A7")]
		public virtual long TotalOut
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xFD6ABC", Offset = "0xFD6ABC", VA = "0xFD6ABC", Slot = "34")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001A8")]
		public override bool CanRead
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xFD6BA0", Offset = "0xFD6BA0", VA = "0xFD6BA0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public override bool CanSeek
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xFD6C58", Offset = "0xFD6C58", VA = "0xFD6C58", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		public override bool CanWrite
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xFD6C60", Offset = "0xFD6C60", VA = "0xFD6C60", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AB")]
		public override long Length
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xFD6DC4", Offset = "0xFD6DC4", VA = "0xFD6DC4", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001AC")]
		public override long Position
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xFD6E2C", Offset = "0xFD6E2C", VA = "0xFD6E2C", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xFD6ED0", Offset = "0xFD6ED0", VA = "0xFD6ED0", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xFD6728", Offset = "0xFD6728", VA = "0xFD6728")]
		public ZlibStream(Stream stream, CompressionMode mode)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xFD67F0", Offset = "0xFD67F0", VA = "0xFD67F0")]
		public ZlibStream(Stream stream, CompressionMode mode, CompressionLevel level)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xFD67F8", Offset = "0xFD67F8", VA = "0xFD67F8")]
		public ZlibStream(Stream stream, CompressionMode mode, bool leaveOpen)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xFD6734", Offset = "0xFD6734", VA = "0xFD6734")]
		public ZlibStream(Stream stream, CompressionMode mode, CompressionLevel level, bool leaveOpen)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xFD6AF8", Offset = "0xFD6AF8", VA = "0xFD6AF8", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xFD6D18", Offset = "0xFD6D18", VA = "0xFD6D18", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xFD6F38", Offset = "0xFD6F38", VA = "0xFD6F38", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xFD700C", Offset = "0xFD700C", VA = "0xFD700C", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xFD7074", Offset = "0xFD7074", VA = "0xFD7074", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xFD70DC", Offset = "0xFD70DC", VA = "0xFD70DC", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xFD71B0", Offset = "0xFD71B0", VA = "0xFD71B0")]
		public static byte[] CompressString(string s)
		{
			return null;
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xFD7334", Offset = "0xFD7334", VA = "0xFD7334")]
		public static byte[] CompressBuffer(byte[] b)
		{
			return null;
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xFD74B8", Offset = "0xFD74B8", VA = "0xFD74B8")]
		public static string UncompressString(byte[] compressed)
		{
			return null;
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xFD761C", Offset = "0xFD761C", VA = "0xFD761C")]
		public static byte[] UncompressBuffer(byte[] compressed)
		{
			return null;
		}
	}
	[Token(Token = "0x200026C")]
	internal sealed class ZTree
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int HEAP_SIZE;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly int[] ExtraLengthBits;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly int[] ExtraDistanceBits;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly int[] extra_blbits;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly sbyte[] bl_order;

		[Token(Token = "0x400114B")]
		internal const int Buf_size = 16;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly sbyte[] _dist_code;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal static readonly sbyte[] LengthCode;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal static readonly int[] LengthBase;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal static readonly int[] DistanceBase;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal short[] dyn_tree;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int max_code;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal StaticTree staticTree;

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xFD2CD8", Offset = "0xFD2CD8", VA = "0xFD2CD8")]
		internal static int DistanceCode(int dist)
		{
			return default(int);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xFD2DB4", Offset = "0xFD2DB4", VA = "0xFD2DB4")]
		internal void gen_bitlen(DeflateManager s)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xFD34A4", Offset = "0xFD34A4", VA = "0xFD34A4")]
		internal void build_tree(DeflateManager s)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xFD3CCC", Offset = "0xFD3CCC", VA = "0xFD3CCC")]
		internal static void gen_codes(short[] tree, int max_code, short[] bl_count)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xFD3F3C", Offset = "0xFD3F3C", VA = "0xFD3F3C")]
		internal static int bi_reverse(int code, int len)
		{
			return default(int);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xFD3F64", Offset = "0xFD3F64", VA = "0xFD3F64")]
		public ZTree()
		{
		}
	}
}
namespace Ionic.Crc
{
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "GuidAttribute", RVA = "0x8F5AF4", Offset = "0x8F5AF4")]
	[AttributeAttribute(Name = "ComVisibleAttribute", RVA = "0x8F5AF4", Offset = "0x8F5AF4")]
	[AttributeAttribute(Name = "ClassInterfaceAttribute", RVA = "0x8F5AF4", Offset = "0x8F5AF4")]
	public class CRC32
	{
		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint dwPolynomial;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long _TotalBytesRead;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool reverseBits;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint[] crc32Table;

		[Token(Token = "0x4001157")]
		private const int BUFFER_SIZE = 8192;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint _register;

		[Token(Token = "0x170001AD")]
		public long TotalBytesRead
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xC69934", Offset = "0xC69934", VA = "0xC69934")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001AE")]
		public int Crc32Result
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xC6993C", Offset = "0xC6993C", VA = "0xC6993C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xC69948", Offset = "0xC69948", VA = "0xC69948")]
		public int GetCrc32(Stream input)
		{
			return default(int);
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xC69950", Offset = "0xC69950", VA = "0xC69950")]
		public int GetCrc32AndCopy(Stream input, Stream output)
		{
			return default(int);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xC69C1C", Offset = "0xC69C1C", VA = "0xC69C1C")]
		public int ComputeCrc32(int W, byte B)
		{
			return default(int);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xC69C20", Offset = "0xC69C20", VA = "0xC69C20")]
		internal int _InternalComputeCrc32(uint W, byte B)
		{
			return default(int);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xC69A94", Offset = "0xC69A94", VA = "0xC69A94")]
		public void SlurpBlock(byte[] block, int offset, int count)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xC69C88", Offset = "0xC69C88", VA = "0xC69C88")]
		public void UpdateCRC(byte b)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xC69D40", Offset = "0xC69D40", VA = "0xC69D40")]
		public void UpdateCRC(byte b, int n)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xC69E28", Offset = "0xC69E28", VA = "0xC69E28")]
		private static uint ReverseBits(uint data)
		{
			return default(uint);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xC69E30", Offset = "0xC69E30", VA = "0xC69E30")]
		private static byte ReverseBits(byte data)
		{
			return default(byte);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xC69E7C", Offset = "0xC69E7C", VA = "0xC69E7C")]
		private void GenerateLookupTable()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xC69FE8", Offset = "0xC69FE8", VA = "0xC69FE8")]
		private uint gf2_matrix_times(uint[] matrix, uint vec)
		{
			return default(uint);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xC6A074", Offset = "0xC6A074", VA = "0xC6A074")]
		private void gf2_matrix_square(uint[] square, uint[] mat)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xC6A120", Offset = "0xC6A120", VA = "0xC6A120")]
		public void Combine(int crc, int length)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xC6A29C", Offset = "0xC6A29C", VA = "0xC6A29C")]
		public CRC32()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xC6A2DC", Offset = "0xC6A2DC", VA = "0xC6A2DC")]
		public CRC32(bool reverseBits)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xC6A324", Offset = "0xC6A324", VA = "0xC6A324")]
		public CRC32(int polynomial, bool reverseBits)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xC6A370", Offset = "0xC6A370", VA = "0xC6A370")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class CrcCalculatorStream : Stream, IDisposable
	{
		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly long UnsetLengthLimit;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Stream _innerStream;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CRC32 _Crc32;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _lengthLimit;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _leaveOpen;

		[Token(Token = "0x170001AF")]
		public long TotalBytesSlurped
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xC6A7A0", Offset = "0xC6A7A0", VA = "0xC6A7A0")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001B0")]
		public int Crc
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xC6A7CC", Offset = "0xC6A7CC", VA = "0xC6A7CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B1")]
		public bool LeaveOpen
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0xC6A7FC", Offset = "0xC6A7FC", VA = "0xC6A7FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xC6A804", Offset = "0xC6A804", VA = "0xC6A804")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public override bool CanRead
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0xC6A9E0", Offset = "0xC6A9E0", VA = "0xC6A9E0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B3")]
		public override bool CanSeek
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xC6AA14", Offset = "0xC6AA14", VA = "0xC6AA14", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B4")]
		public override bool CanWrite
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xC6AA1C", Offset = "0xC6AA1C", VA = "0xC6AA1C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B5")]
		public override long Length
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0xC6AA88", Offset = "0xC6AA88", VA = "0xC6AA88", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001B6")]
		public override long Position
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0xC6AB38", Offset = "0xC6AB38", VA = "0xC6AB38", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xC6AB64", Offset = "0xC6AB64", VA = "0xC6AB64", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xC6A37C", Offset = "0xC6A37C", VA = "0xC6A37C")]
		public CrcCalculatorStream(Stream stream)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xC6A4E8", Offset = "0xC6A4E8", VA = "0xC6A4E8")]
		public CrcCalculatorStream(Stream stream, bool leaveOpen)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xC6A574", Offset = "0xC6A574", VA = "0xC6A574")]
		public CrcCalculatorStream(Stream stream, long length)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xC6A624", Offset = "0xC6A624", VA = "0xC6A624")]
		public CrcCalculatorStream(Stream stream, long length, bool leaveOpen)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xC6A6E0", Offset = "0xC6A6E0", VA = "0xC6A6E0")]
		public CrcCalculatorStream(Stream stream, long length, bool leaveOpen, CRC32 crc32)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xC6A404", Offset = "0xC6A404", VA = "0xC6A404")]
		private CrcCalculatorStream(bool leaveOpen, long length, Stream stream, CRC32 crc32)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xC6A810", Offset = "0xC6A810", VA = "0xC6A810", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xC6A950", Offset = "0xC6A950", VA = "0xC6A950", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xC6AA50", Offset = "0xC6AA50", VA = "0xC6AA50", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xC6ABCC", Offset = "0xC6ABCC", VA = "0xC6ABCC", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xC6AC34", Offset = "0xC6AC34", VA = "0xC6AC34", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xC6AC9C", Offset = "0xC6AC9C", VA = "0xC6AC9C", Slot = "6")]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xC6ACAC", Offset = "0xC6ACAC", VA = "0xC6ACAC", Slot = "15")]
		public override void Close()
		{
		}
	}
}
namespace EZCameraShake
{
	[Token(Token = "0x200026F")]
	public enum CameraShakeState
	{
		[Token(Token = "0x400115F")]
		FadingIn,
		[Token(Token = "0x4001160")]
		FadingOut,
		[Token(Token = "0x4001161")]
		Sustained,
		[Token(Token = "0x4001162")]
		Inactive
	}
	[Token(Token = "0x2000270")]
	public class CameraShakeInstance
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Magnitude;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Roughness;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 PositionInfluence;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 RotationInfluence;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DeleteOnInactive;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float roughMod;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float magnMod;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeOutDuration;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float fadeInDuration;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool sustain;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentFadeTime;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float tick;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 amt;

		[Token(Token = "0x170001B7")]
		public float ScaleRoughness
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xCBE7AC", Offset = "0xCBE7AC", VA = "0xCBE7AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xCBE7B4", Offset = "0xCBE7B4", VA = "0xCBE7B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public float ScaleMagnitude
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xCBE7BC", Offset = "0xCBE7BC", VA = "0xCBE7BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xCBE7C4", Offset = "0xCBE7C4", VA = "0xCBE7C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float NormalizedFadeTime
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xCBE7CC", Offset = "0xCBE7CC", VA = "0xCBE7CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BA")]
		private bool IsShaking
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xCBE7D4", Offset = "0xCBE7D4", VA = "0xCBE7D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		private bool IsFadingOut
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xCBE7F8", Offset = "0xCBE7F8", VA = "0xCBE7F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		private bool IsFadingIn
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xCBE818", Offset = "0xCBE818", VA = "0xCBE818")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public CameraShakeState CurrentState
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xCBE848", Offset = "0xCBE848", VA = "0xCBE848")]
			get
			{
				return default(CameraShakeState);
			}
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xCBE4A8", Offset = "0xCBE4A8", VA = "0xCBE4A8")]
		public CameraShakeInstance(float magnitude, float roughness, float fadeInTime, float fadeOutTime)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xCBE538", Offset = "0xCBE538", VA = "0xCBE538")]
		public CameraShakeInstance(float magnitude, float roughness)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xCBE59C", Offset = "0xCBE59C", VA = "0xCBE59C")]
		public Vector3 UpdateShake()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xCBE76C", Offset = "0xCBE76C", VA = "0xCBE76C")]
		public void StartFadeOut(float fadeOutTime)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xCBE788", Offset = "0xCBE788", VA = "0xCBE788")]
		public void StartFadeIn(float fadeInTime)
		{
		}
	}
	[Token(Token = "0x2000271")]
	public static class CameraShakePresets
	{
		[Token(Token = "0x170001BE")]
		public static CameraShakeInstance Bump
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0xCBE8B4", Offset = "0xCBE8B4", VA = "0xCBE8B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public static CameraShakeInstance Explosion
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0xCBE9B0", Offset = "0xCBE9B0", VA = "0xCBE9B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public static CameraShakeInstance Earthquake
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xCBEAC0", Offset = "0xCBEAC0", VA = "0xCBEAC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public static CameraShakeInstance BadTrip
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xCBEBD4", Offset = "0xCBEBD4", VA = "0xCBEBD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		public static CameraShakeInstance HandheldCamera
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0xCBECCC", Offset = "0xCBECCC", VA = "0xCBECCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public static CameraShakeInstance Vibration
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xCBEDD0", Offset = "0xCBEDD0", VA = "0xCBEDD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public static CameraShakeInstance RoughDriving
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xCBEEC0", Offset = "0xCBEEC0", VA = "0xCBEEC0")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5B58", Offset = "0x8F5B58")]
	public class CameraShaker : MonoBehaviour
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CameraShaker Instance;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, CameraShaker> instanceList;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 DefaultPosInfluence;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 DefaultRotInfluence;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 posAddShake;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 rotAddShake;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<CameraShakeInstance> cameraShakeInstances;

		[Token(Token = "0x170001C5")]
		public List<CameraShakeInstance> ShakeInstances
		{
			[Token(Token = "0x600172E")]
			[Address(RVA = "0xCBF9A0", Offset = "0xCBF9A0", VA = "0xCBF9A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xCBEFA8", Offset = "0xCBEFA8", VA = "0xCBEFA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xCBF1B8", Offset = "0xCBF1B8", VA = "0xCBF1B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xCBF4B4", Offset = "0xCBF4B4", VA = "0xCBF4B4")]
		public static CameraShaker GetInstance(string name)
		{
			return null;
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xCBF5BC", Offset = "0xCBF5BC", VA = "0xCBF5BC")]
		public CameraShakeInstance Shake(CameraShakeInstance shake)
		{
			return null;
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xCBF634", Offset = "0xCBF634", VA = "0xCBF634")]
		public CameraShakeInstance ShakeOnce(float magnitude, float roughness, float fadeInTime, float fadeOutTime)
		{
			return null;
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xCBF730", Offset = "0xCBF730", VA = "0xCBF730")]
		public CameraShakeInstance ShakeOnce(float magnitude, float roughness, float fadeInTime, float fadeOutTime, Vector3 posInfluence, Vector3 rotInfluence)
		{
			return null;
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xCBF08C", Offset = "0xCBF08C", VA = "0xCBF08C")]
		public CameraShakeInstance StartShake(float magnitude, float roughness, float fadeInTime)
		{
			return null;
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xCBF85C", Offset = "0xCBF85C", VA = "0xCBF85C")]
		public CameraShakeInstance StartShake(float magnitude, float roughness, float fadeInTime, Vector3 posInfluence, Vector3 rotInfluence)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xCBFA10", Offset = "0xCBFA10", VA = "0xCBFA10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xCBFAC4", Offset = "0xCBFAC4", VA = "0xCBFAC4")]
		public CameraShaker()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class CameraUtilities
	{
		[Token(Token = "0x6001732")]
		[Address(RVA = "0xCBFC18", Offset = "0xCBFC18", VA = "0xCBFC18")]
		public static Vector3 SmoothDampEuler(Vector3 current, Vector3 target, ref Vector3 velocity, float smoothTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xCBF4A4", Offset = "0xCBF4A4", VA = "0xCBF4A4")]
		public static Vector3 MultiplyVectors(Vector3 v, Vector3 w)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xCBFD10", Offset = "0xCBFD10", VA = "0xCBFD10")]
		public CameraUtilities()
		{
		}
	}
}
namespace CustomInspectorGeneration
{
	[Token(Token = "0x2000274")]
	public class TemplateMarker : ScriptableObject
	{
		[Token(Token = "0x6001735")]
		[Address(RVA = "0xEEB738", Offset = "0xEEB738", VA = "0xEEB738")]
		public TemplateMarker()
		{
		}
	}
}
namespace Assets.CGF.Samples.Scripts
{
	[Serializable]
	[Token(Token = "0x2000275")]
	public class CardinalPoints
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int north;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float south;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool east;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject west;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xF33F88", Offset = "0xF33F88", VA = "0xF33F88")]
		public CardinalPoints()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class EditorUtilitiesSampleScript : MonoBehaviour
	{
		[Token(Token = "0x20006EB")]
		public enum Enumeration
		{
			[Token(Token = "0x40024D7")]
			None,
			[Token(Token = "0x40024D8")]
			Int,
			[Token(Token = "0x40024D9")]
			Float,
			[Token(Token = "0x40024DA")]
			Bool,
			[Token(Token = "0x40024DB")]
			Vector2,
			[Token(Token = "0x40024DC")]
			Vector3,
			[Token(Token = "0x40024DD")]
			Color,
			[Token(Token = "0x40024DE")]
			String,
			[Token(Token = "0x40024DF")]
			AnimationCurve,
			[Token(Token = "0x40024E0")]
			Object,
			[Token(Token = "0x40024E1")]
			FoldOut,
			[Token(Token = "0x40024E2")]
			List,
			[Token(Token = "0x40024E3")]
			Utilities,
			[Token(Token = "0x40024E4")]
			All
		}

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int integer;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int positiveInt;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int negativeInt;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int sliderInt;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minRangeFloat;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxRangeFloat;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _float;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float positiveFloat;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float negativeFloat;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ceilFloat;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float floorFloat;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float roundedFloat;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float sliderFloat;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool _bool;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 _vector2;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 _positiveVector2;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 _negativeVector2;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 _vector3;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 _positiveVector3;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 _negativeVector3;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color _color;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string _text;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AnimationCurve _animationCurve;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject _gameObject;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Sprite _gameObjectSprite;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MeshFilter _meshFilter;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public CardinalPoints _foldOutClass;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<CardinalPoints> cardinalPointsList;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<int> intList;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string scenes;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string _tag;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int layer;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string sortingLayer;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask layerMask;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Enumeration _enum;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string inputList;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xF33F90", Offset = "0xF33F90", VA = "0xF33F90")]
		public EditorUtilitiesSampleScript()
		{
		}
	}
}
namespace BigGustave
{
	[Token(Token = "0x2000277")]
	internal static class Adam7
	{
		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IReadOnlyDictionary<int, int[]> PassToScanlineGridIndex;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IReadOnlyDictionary<int, int[]> PassToScanlineColumnIndex;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xB3AD88", Offset = "0xB3AD88", VA = "0xB3AD88")]
		public static int GetNumberOfScanlinesInPass(ImageHeader header, int pass)
		{
			return default(int);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xB3AF60", Offset = "0xB3AF60", VA = "0xB3AF60")]
		public static int GetPixelsPerScanlineInPass(ImageHeader header, int pass)
		{
			return default(int);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xB3B138", Offset = "0xB3B138", VA = "0xB3B138")]
		public static (int, int) GetPixelIndexForScanlineInPass(ImageHeader header, int pass, int scanlineIndex, int indexInScanline)
		{
			return default((int, int));
		}
	}
	[Token(Token = "0x2000278")]
	public static class Adler32Checksum
	{
		[Token(Token = "0x40011A1")]
		private const int AdlerModulus = 65521;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xB3B898", Offset = "0xB3B898", VA = "0xB3B898")]
		public static int Calculate(IEnumerable<byte> data)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000279")]
	public readonly struct ChunkHeader
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC66C", Offset = "0x8FC66C")]
		private readonly long <Position>k__BackingField;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC67C", Offset = "0x8FC67C")]
		private readonly int <Length>k__BackingField;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC68C", Offset = "0x8FC68C")]
		private readonly string <Name>k__BackingField;

		[Token(Token = "0x170001C6")]
		public long Position
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x9A3E98", Offset = "0x9A3E98", VA = "0x9A3E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E078", Offset = "0x90E078")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001C7")]
		public int Length
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x9A3EA0", Offset = "0x9A3EA0", VA = "0x9A3EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E088", Offset = "0x90E088")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C8")]
		public string Name
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0x9A3EA8", Offset = "0x9A3EA8", VA = "0x9A3EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E098", Offset = "0x90E098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public bool IsCritical
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x9A3EB0", Offset = "0x9A3EB0", VA = "0x9A3EB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CA")]
		public bool IsPublic
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0x9A3EB8", Offset = "0x9A3EB8", VA = "0x9A3EB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CB")]
		public bool IsSafeToCopy
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x9A3EC0", Offset = "0x9A3EC0", VA = "0x9A3EC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x9A3EC8", Offset = "0x9A3EC8", VA = "0x9A3EC8")]
		public ChunkHeader(long position, int length, string name)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x9A3ED0", Offset = "0x9A3ED0", VA = "0x9A3ED0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200027A")]
	[Flags]
	public enum ColorType : byte
	{
		[Token(Token = "0x40011A6")]
		None = 0,
		[Token(Token = "0x40011A7")]
		PaletteUsed = 1,
		[Token(Token = "0x40011A8")]
		ColorUsed = 2,
		[Token(Token = "0x40011A9")]
		AlphaChannelUsed = 4
	}
	[Token(Token = "0x200027B")]
	public enum CompressionMethod : byte
	{
		[Token(Token = "0x40011AB")]
		DeflateWithSlidingWindow
	}
	[Token(Token = "0x200027C")]
	public static class Crc32
	{
		[Token(Token = "0x40011AC")]
		private const uint Polynomial = 3988292384u;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint[] Lookup;

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xB3BEE8", Offset = "0xB3BEE8", VA = "0xB3BEE8")]
		static Crc32()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xB3BFD0", Offset = "0xB3BFD0", VA = "0xB3BFD0")]
		public static uint Calculate(byte[] data)
		{
			return default(uint);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xB3C0D8", Offset = "0xB3C0D8", VA = "0xB3C0D8")]
		public static uint Calculate(List<byte> data)
		{
			return default(uint);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xB3C1FC", Offset = "0xB3C1FC", VA = "0xB3C1FC")]
		public static uint Calculate(byte[] data, byte[] data2)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200027D")]
	internal static class Decoder
	{
		[StructLayout(3)]
		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7FE4", Offset = "0x8F7FE4")]
		private struct <>c__DisplayClass4_0
		{
			[Token(Token = "0x40024E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int rowByteIndex;

			[Token(Token = "0x40024E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bytesPerPixel;

			[Token(Token = "0x40024E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte[] data;

			[Token(Token = "0x40024E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int rowStartByteAbsolute;

			[Token(Token = "0x40024E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int previousRowStartByteAbsolute;
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xB3C3B8", Offset = "0xB3C3B8", VA = "0xB3C3B8")]
		public static (byte, byte) GetBytesAndSamplesPerPixel(ImageHeader header)
		{
			return default((byte, byte));
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xB3C494", Offset = "0xB3C494", VA = "0xB3C494")]
		public static byte[] Decode(byte[] decompressedData, ImageHeader header, byte bytesPerPixel, byte samplesPerPixel)
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xB3C464", Offset = "0xB3C464", VA = "0xB3C464")]
		private static byte SamplesPerPixel(ImageHeader header)
		{
			return default(byte);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xB3C8F4", Offset = "0xB3C8F4", VA = "0xB3C8F4")]
		private static int BytesPerScanline(ImageHeader header, byte samplesPerPixel)
		{
			return default(int);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xB3C984", Offset = "0xB3C984", VA = "0xB3C984")]
		private static void ReverseFilter(byte[] data, FilterType type, int previousRowStartByteAbsolute, int rowStartByteAbsolute, int byteAbsolute, int rowByteIndex, int bytesPerPixel)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xB3CD9C", Offset = "0xB3CD9C", VA = "0xB3CD9C")]
		private static byte GetPaethValue(byte a, byte b, byte c)
		{
			return default(byte);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xB3CC4C", Offset = "0xB3CC4C", VA = "0xB3CC4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E0A8", Offset = "0x90E0A8")]
		internal static byte <ReverseFilter>g__GetLeftByteValue|4_0(ref <>c__DisplayClass4_0 P_0)
		{
			return default(byte);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xB3CCC0", Offset = "0xB3CCC0", VA = "0xB3CCC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E0B8", Offset = "0x90E0B8")]
		internal static byte <ReverseFilter>g__GetAboveByteValue|4_1(ref <>c__DisplayClass4_0 P_0)
		{
			return default(byte);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xB3CD28", Offset = "0xB3CD28", VA = "0xB3CD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E0C8", Offset = "0x90E0C8")]
		internal static byte <ReverseFilter>g__GetAboveLeftByteValue|4_2(ref <>c__DisplayClass4_0 P_0)
		{
			return default(byte);
		}
	}
	[Token(Token = "0x200027E")]
	public enum FilterMethod
	{
		[Token(Token = "0x40011AF")]
		AdaptiveFiltering
	}
	[Token(Token = "0x200027F")]
	internal enum FilterType
	{
		[Token(Token = "0x40011B1")]
		None,
		[Token(Token = "0x40011B2")]
		Sub,
		[Token(Token = "0x40011B3")]
		Up,
		[Token(Token = "0x40011B4")]
		Average,
		[Token(Token = "0x40011B5")]
		Paeth
	}
	[Token(Token = "0x2000280")]
	internal readonly struct HeaderValidationResult
	{
		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly byte[] ExpectedHeader;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC69C", Offset = "0x8FC69C")]
		private readonly int <Byte1>k__BackingField;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC6AC", Offset = "0x8FC6AC")]
		private readonly int <Byte2>k__BackingField;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC6BC", Offset = "0x8FC6BC")]
		private readonly int <Byte3>k__BackingField;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC6CC", Offset = "0x8FC6CC")]
		private readonly int <Byte4>k__BackingField;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC6DC", Offset = "0x8FC6DC")]
		private readonly int <Byte5>k__BackingField;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC6EC", Offset = "0x8FC6EC")]
		private readonly int <Byte6>k__BackingField;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC6FC", Offset = "0x8FC6FC")]
		private readonly int <Byte7>k__BackingField;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC70C", Offset = "0x8FC70C")]
		private readonly int <Byte8>k__BackingField;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC71C", Offset = "0x8FC71C")]
		private readonly bool <IsValid>k__BackingField;

		[Token(Token = "0x170001CC")]
		public int Byte1
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0x9A3F7C", Offset = "0x9A3F7C", VA = "0x9A3F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E0D8", Offset = "0x90E0D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CD")]
		public int Byte2
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0x9A3F84", Offset = "0x9A3F84", VA = "0x9A3F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E0E8", Offset = "0x90E0E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CE")]
		public int Byte3
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0x9A3F8C", Offset = "0x9A3F8C", VA = "0x9A3F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E0F8", Offset = "0x90E0F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CF")]
		public int Byte4
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x9A3F94", Offset = "0x9A3F94", VA = "0x9A3F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E108", Offset = "0x90E108")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D0")]
		public int Byte5
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x9A3F9C", Offset = "0x9A3F9C", VA = "0x9A3F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E118", Offset = "0x90E118")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D1")]
		public int Byte6
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x9A3FA4", Offset = "0x9A3FA4", VA = "0x9A3FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E128", Offset = "0x90E128")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D2")]
		public int Byte7
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x9A3FAC", Offset = "0x9A3FAC", VA = "0x9A3FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E138", Offset = "0x90E138")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D3")]
		public int Byte8
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x9A3FB4", Offset = "0x9A3FB4", VA = "0x9A3FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E148", Offset = "0x90E148")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D4")]
		public bool IsValid
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x9A3FBC", Offset = "0x9A3FBC", VA = "0x9A3FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E158", Offset = "0x90E158")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x9A3FC4", Offset = "0x9A3FC4", VA = "0x9A3FC4")]
		public HeaderValidationResult(int byte1, int byte2, int byte3, int byte4, int byte5, int byte6, int byte7, int byte8)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x9A3FD4", Offset = "0x9A3FD4", VA = "0x9A3FD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000281")]
	public interface IChunkVisitor
	{
		[Token(Token = "0x600175E")]
		void Visit(Stream stream, ImageHeader header, ChunkHeader chunkHeader, byte[] data, byte[] crc);
	}
	[Token(Token = "0x2000282")]
	public readonly struct ImageHeader
	{
		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly byte[] HeaderBytes;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IReadOnlyDictionary<ColorType, HashSet<byte>> PermittedBitDepths;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC72C", Offset = "0x8FC72C")]
		private readonly int <Width>k__BackingField;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC73C", Offset = "0x8FC73C")]
		private readonly int <Height>k__BackingField;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC74C", Offset = "0x8FC74C")]
		private readonly byte <BitDepth>k__BackingField;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC75C", Offset = "0x8FC75C")]
		private readonly ColorType <ColorType>k__BackingField;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC76C", Offset = "0x8FC76C")]
		private readonly CompressionMethod <CompressionMethod>k__BackingField;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC77C", Offset = "0x8FC77C")]
		private readonly FilterMethod <FilterMethod>k__BackingField;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC78C", Offset = "0x8FC78C")]
		private readonly InterlaceMethod <InterlaceMethod>k__BackingField;

		[Token(Token = "0x170001D5")]
		public int Width
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x9A3FDC", Offset = "0x9A3FDC", VA = "0x9A3FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E168", Offset = "0x90E168")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D6")]
		public int Height
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0x9A3FE4", Offset = "0x9A3FE4", VA = "0x9A3FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E178", Offset = "0x90E178")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D7")]
		public byte BitDepth
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x9A3FEC", Offset = "0x9A3FEC", VA = "0x9A3FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E188", Offset = "0x90E188")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170001D8")]
		public ColorType ColorType
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0x9A3FF4", Offset = "0x9A3FF4", VA = "0x9A3FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E198", Offset = "0x90E198")]
			get
			{
				return default(ColorType);
			}
		}

		[Token(Token = "0x170001D9")]
		public CompressionMethod CompressionMethod
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0x9A3FFC", Offset = "0x9A3FFC", VA = "0x9A3FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E1A8", Offset = "0x90E1A8")]
			get
			{
				return default(CompressionMethod);
			}
		}

		[Token(Token = "0x170001DA")]
		public FilterMethod FilterMethod
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0x9A4004", Offset = "0x9A4004", VA = "0x9A4004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E1B8", Offset = "0x90E1B8")]
			get
			{
				return default(FilterMethod);
			}
		}

		[Token(Token = "0x170001DB")]
		public InterlaceMethod InterlaceMethod
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x9A400C", Offset = "0x9A400C", VA = "0x9A400C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E1C8", Offset = "0x90E1C8")]
			get
			{
				return default(InterlaceMethod);
			}
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x9A4014", Offset = "0x9A4014", VA = "0x9A4014")]
		public ImageHeader(int width, int height, byte bitDepth, ColorType colorType, CompressionMethod compressionMethod, FilterMethod filterMethod, InterlaceMethod interlaceMethod)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x9A401C", Offset = "0x9A401C", VA = "0x9A401C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000283")]
	public enum InterlaceMethod : byte
	{
		[Token(Token = "0x40011CA")]
		None,
		[Token(Token = "0x40011CB")]
		Adam7
	}
	[Token(Token = "0x2000284")]
	internal class Palette
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC79C", Offset = "0x8FC79C")]
		private readonly byte[] <Data>k__BackingField;

		[Token(Token = "0x170001DC")]
		public byte[] Data
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xB3DFBC", Offset = "0xB3DFBC", VA = "0xB3DFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E1D8", Offset = "0x90E1D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xB3DFC4", Offset = "0xB3DFC4", VA = "0xB3DFC4")]
		public Palette(byte[] data)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xB3DFF0", Offset = "0xB3DFF0", VA = "0xB3DFF0")]
		public Pixel GetPixel(int index)
		{
			return default(Pixel);
		}
	}
	[Token(Token = "0x2000285")]
	public readonly struct Pixel
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC7AC", Offset = "0x8FC7AC")]
		private readonly byte <R>k__BackingField;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC7BC", Offset = "0x8FC7BC")]
		private readonly byte <G>k__BackingField;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC7CC", Offset = "0x8FC7CC")]
		private readonly byte <B>k__BackingField;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC7DC", Offset = "0x8FC7DC")]
		private readonly byte <A>k__BackingField;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC7EC", Offset = "0x8FC7EC")]
		private readonly bool <IsGrayscale>k__BackingField;

		[Token(Token = "0x170001DD")]
		public byte R
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x9A4088", Offset = "0x9A4088", VA = "0x9A4088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E1E8", Offset = "0x90E1E8")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170001DE")]
		public byte G
		{
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x9A4090", Offset = "0x9A4090", VA = "0x9A4090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E1F8", Offset = "0x90E1F8")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170001DF")]
		public byte B
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x9A4098", Offset = "0x9A4098", VA = "0x9A4098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E208", Offset = "0x90E208")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170001E0")]
		public byte A
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x9A40A0", Offset = "0x9A40A0", VA = "0x9A40A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E218", Offset = "0x90E218")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170001E1")]
		public bool IsGrayscale
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x9A40A8", Offset = "0x9A40A8", VA = "0x9A40A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E228", Offset = "0x90E228")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x9A40B0", Offset = "0x9A40B0", VA = "0x9A40B0")]
		public Pixel(byte r, byte g, byte b, byte a, bool isGrayscale)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x9A40CC", Offset = "0x9A40CC", VA = "0x9A40CC")]
		public Pixel(byte r, byte g, byte b)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x9A40E4", Offset = "0x9A40E4", VA = "0x9A40E4")]
		public Pixel(byte grayscale)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x9A40FC", Offset = "0x9A40FC", VA = "0x9A40FC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x9A4104", Offset = "0x9A4104", VA = "0x9A4104")]
		public bool Equals(Pixel other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x9A4110", Offset = "0x9A4110", VA = "0x9A4110", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x9A4118", Offset = "0x9A4118", VA = "0x9A4118", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000286")]
	public class Png
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly RawPngData data;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC7FC", Offset = "0x8FC7FC")]
		private readonly ImageHeader <Header>k__BackingField;

		[Token(Token = "0x170001E2")]
		public ImageHeader Header
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xB3E56C", Offset = "0xB3E56C", VA = "0xB3E56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E238", Offset = "0x90E238")]
			get
			{
				return default(ImageHeader);
			}
		}

		[Token(Token = "0x170001E3")]
		public int Width
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xB3E580", Offset = "0xB3E580", VA = "0xB3E580")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E4")]
		public int Height
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0xB3E588", Offset = "0xB3E588", VA = "0xB3E588")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E5")]
		public bool HasAlphaChannel
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0xB3E590", Offset = "0xB3E590", VA = "0xB3E590")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xB3E59C", Offset = "0xB3E59C", VA = "0xB3E59C")]
		internal Png(ImageHeader header, RawPngData data)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xB3E668", Offset = "0xB3E668", VA = "0xB3E668")]
		public Pixel GetPixel(int x, int y)
		{
			return default(Pixel);
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xB3EB38", Offset = "0xB3EB38", VA = "0xB3EB38")]
		public static Png Open(Stream stream, [Optional] IChunkVisitor chunkVisitor)
		{
			return null;
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xB3FB34", Offset = "0xB3FB34", VA = "0xB3FB34")]
		public static Png Open(byte[] bytes, [Optional] IChunkVisitor chunkVisitor)
		{
			return null;
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xB3FC6C", Offset = "0xB3FC6C", VA = "0xB3FC6C")]
		public static Png Open(string filePath, [Optional] IChunkVisitor chunkVisitor)
		{
			return null;
		}
	}
	[Token(Token = "0x2000287")]
	public class PngBuilder
	{
		[Token(Token = "0x40011D4")]
		private const byte Deflate32KbWindow = 120;

		[Token(Token = "0x40011D5")]
		private const byte ChecksumBits = 1;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly byte[] rawData;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly bool hasAlphaChannel;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int width;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int height;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int bytesPerPixel;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xB3FD90", Offset = "0xB3FD90", VA = "0xB3FD90")]
		public static PngBuilder Create(int width, int height, bool hasAlphaChannel)
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xB3FE48", Offset = "0xB3FE48", VA = "0xB3FE48")]
		private PngBuilder(byte[] rawData, bool hasAlphaChannel, int width, int height, int bytesPerPixel)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xB3FEA4", Offset = "0xB3FEA4", VA = "0xB3FEA4")]
		public PngBuilder SetPixel(byte r, byte g, byte b, int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xB3FEC8", Offset = "0xB3FEC8", VA = "0xB3FEC8")]
		public PngBuilder SetPixel(Pixel pixel, int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xB40018", Offset = "0xB40018", VA = "0xB40018")]
		public byte[] Save()
		{
			return null;
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xB40168", Offset = "0xB40168", VA = "0xB40168")]
		public void Save(Stream outputStream)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xB406E0", Offset = "0xB406E0", VA = "0xB406E0")]
		private static byte[] Compress(byte[] data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000288")]
	internal static class PngOpener
	{
		[Token(Token = "0x6001788")]
		[Address(RVA = "0xB3EB3C", Offset = "0xB3EB3C", VA = "0xB3EB3C")]
		public static Png Open(Stream stream, [Optional] IChunkVisitor chunkVisitor)
		{
			return null;
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xB40B7C", Offset = "0xB40B7C", VA = "0xB40B7C")]
		private static HeaderValidationResult HasValidHeader(Stream stream)
		{
			return default(HeaderValidationResult);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xB410A8", Offset = "0xB410A8", VA = "0xB410A8")]
		private static bool TryReadChunkHeader(Stream stream, out ChunkHeader chunkHeader)
		{
			return default(bool);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xB40D10", Offset = "0xB40D10", VA = "0xB40D10")]
		private static ImageHeader ReadImageHeader(Stream stream, byte[] crc)
		{
			return default(ImageHeader);
		}
	}
	[Token(Token = "0x2000289")]
	internal class PngStreamWriteHelper : Stream
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Stream inner;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<byte> written;

		[Token(Token = "0x170001E6")]
		public override bool CanRead
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0xB414A0", Offset = "0xB414A0", VA = "0xB414A0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public override bool CanSeek
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0xB414D4", Offset = "0xB414D4", VA = "0xB414D4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E8")]
		public override bool CanWrite
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0xB41508", Offset = "0xB41508", VA = "0xB41508", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E9")]
		public override long Length
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xB4153C", Offset = "0xB4153C", VA = "0xB4153C", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001EA")]
		public override long Position
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xB41570", Offset = "0xB41570", VA = "0xB41570", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xB415A4", Offset = "0xB415A4", VA = "0xB415A4", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xB40408", Offset = "0xB40408", VA = "0xB40408")]
		public PngStreamWriteHelper(Stream inner)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xB415E0", Offset = "0xB415E0", VA = "0xB415E0", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xB40510", Offset = "0xB40510", VA = "0xB40510")]
		public void WriteChunkHeader(byte[] header)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xB40508", Offset = "0xB40508", VA = "0xB40508")]
		public void WriteChunkLength(int length)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xB41618", Offset = "0xB41618", VA = "0xB41618", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xB41670", Offset = "0xB41670", VA = "0xB41670", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xB416C0", Offset = "0xB416C0", VA = "0xB416C0", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xB41700", Offset = "0xB41700", VA = "0xB41700", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xB40668", Offset = "0xB40668", VA = "0xB40668")]
		public void WriteCrc()
		{
		}
	}
	[Token(Token = "0x200028A")]
	internal class RawPngData
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly byte[] data;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int bytesPerPixel;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int width;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Palette palette;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ColorType colorType;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly int rowOffset;

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xB41194", Offset = "0xB41194", VA = "0xB41194")]
		public RawPngData(byte[] data, int bytesPerPixel, int width, InterlaceMethod interlaceMethod, Palette palette, ColorType colorType)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xB3E6B4", Offset = "0xB3E6B4", VA = "0xB3E6B4")]
		public Pixel GetPixel(int x, int y)
		{
			return default(Pixel);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xB417E0", Offset = "0xB417E0", VA = "0xB417E0")]
		private static byte ToSingleByte(byte first, byte second)
		{
			return default(byte);
		}
	}
	[Token(Token = "0x200028B")]
	internal static class StreamHelper
	{
		[Token(Token = "0x600179E")]
		[Address(RVA = "0xB418EC", Offset = "0xB418EC", VA = "0xB418EC")]
		public static int ReadBigEndianInt32(Stream stream)
		{
			return default(int);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xB413AC", Offset = "0xB413AC", VA = "0xB413AC")]
		public static int ReadBigEndianInt32(byte[] bytes, int offset)
		{
			return default(int);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xB405A8", Offset = "0xB405A8", VA = "0xB405A8")]
		public static void WriteBigEndianInt32(Stream stream, int value)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xB41954", Offset = "0xB41954", VA = "0xB41954")]
		private static byte ReadOrTerminate(Stream stream)
		{
			return default(byte);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xB41310", Offset = "0xB41310", VA = "0xB41310")]
		public static bool TryReadHeaderBytes(Stream stream, out byte[] bytes)
		{
			return default(bool);
		}
	}
}
namespace Battlehub.UIControls
{
	[Token(Token = "0x200028C")]
	public delegate void ItemEventHandler(ItemContainer sender, PointerEventData eventData);
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5BE0", Offset = "0x8F5BE0")]
	public class ItemContainer : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, IBeginDragHandler, IDragHandler, IDropHandler, IEndDragHandler
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CanDrag;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LayoutElement m_layoutElement;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isSelected;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC8AC", Offset = "0x8FC8AC")]
		private object <Item>k__BackingField;

		[Token(Token = "0x170001EB")]
		public LayoutElement LayoutElement
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x17460EC", Offset = "0x17460EC", VA = "0x17460EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x17460F4", Offset = "0x17460F4", VA = "0x17460F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public virtual bool IsSelected
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x17460FC", Offset = "0x17460FC", VA = "0x17460FC", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x1746104", Offset = "0x1746104", VA = "0x1746104", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public object Item
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x17461D8", Offset = "0x17461D8", VA = "0x17461D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E388", Offset = "0x90E388")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x17461E0", Offset = "0x17461E0", VA = "0x17461E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E398", Offset = "0x90E398")]
			set
			{
			}
		}

		[Token(Token = "0x14000026")]
		public static event EventHandler Selected
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x1744CF4", Offset = "0x1744CF4", VA = "0x1744CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E248", Offset = "0x90E248")]
			add
			{
			}
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x1744DF0", Offset = "0x1744DF0", VA = "0x1744DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E258", Offset = "0x90E258")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public static event EventHandler Unselected
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x1744EEC", Offset = "0x1744EEC", VA = "0x1744EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E268", Offset = "0x90E268")]
			add
			{
			}
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x1744FEC", Offset = "0x1744FEC", VA = "0x1744FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E278", Offset = "0x90E278")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public static event ItemEventHandler PointerDown
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x17450EC", Offset = "0x17450EC", VA = "0x17450EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E288", Offset = "0x90E288")]
			add
			{
			}
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x17451EC", Offset = "0x17451EC", VA = "0x17451EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E298", Offset = "0x90E298")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public static event ItemEventHandler PointerUp
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x17452EC", Offset = "0x17452EC", VA = "0x17452EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E2A8", Offset = "0x90E2A8")]
			add
			{
			}
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x17453EC", Offset = "0x17453EC", VA = "0x17453EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E2B8", Offset = "0x90E2B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public static event ItemEventHandler PointerEnter
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x17454EC", Offset = "0x17454EC", VA = "0x17454EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E2C8", Offset = "0x90E2C8")]
			add
			{
			}
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x17455EC", Offset = "0x17455EC", VA = "0x17455EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E2D8", Offset = "0x90E2D8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public static event ItemEventHandler PointerExit
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x17456EC", Offset = "0x17456EC", VA = "0x17456EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E2E8", Offset = "0x90E2E8")]
			add
			{
			}
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x17457EC", Offset = "0x17457EC", VA = "0x17457EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E2F8", Offset = "0x90E2F8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public static event ItemEventHandler BeginDrag
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x17458EC", Offset = "0x17458EC", VA = "0x17458EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E308", Offset = "0x90E308")]
			add
			{
			}
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x17459EC", Offset = "0x17459EC", VA = "0x17459EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E318", Offset = "0x90E318")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public static event ItemEventHandler Drag
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x1745AEC", Offset = "0x1745AEC", VA = "0x1745AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E328", Offset = "0x90E328")]
			add
			{
			}
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x1745BEC", Offset = "0x1745BEC", VA = "0x1745BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E338", Offset = "0x90E338")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public static event ItemEventHandler Drop
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x1745CEC", Offset = "0x1745CEC", VA = "0x1745CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E348", Offset = "0x90E348")]
			add
			{
			}
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x1745DEC", Offset = "0x1745DEC", VA = "0x1745DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E358", Offset = "0x90E358")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public static event ItemEventHandler EndDrag
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x1745EEC", Offset = "0x1745EEC", VA = "0x1745EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E368", Offset = "0x90E368")]
			add
			{
			}
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x1745FEC", Offset = "0x1745FEC", VA = "0x1745FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E378", Offset = "0x90E378")]
			remove
			{
			}
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x17461E8", Offset = "0x17461E8", VA = "0x17461E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x1746268", Offset = "0x1746268", VA = "0x1746268", Slot = "14")]
		protected virtual void AwakeOverride()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x174626C", Offset = "0x174626C", VA = "0x174626C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x174627C", Offset = "0x174627C", VA = "0x174627C", Slot = "15")]
		protected virtual void StartOverride()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1746280", Offset = "0x1746280", VA = "0x1746280", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1746A7C", Offset = "0x1746A7C", VA = "0x1746A7C", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1746AF8", Offset = "0x1746AF8", VA = "0x1746AF8", Slot = "8")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1746B7C", Offset = "0x1746B7C", VA = "0x1746B7C", Slot = "10")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1746C00", Offset = "0x1746C00", VA = "0x1746C00", Slot = "9")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1746C84", Offset = "0x1746C84", VA = "0x1746C84", Slot = "11")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1746D08", Offset = "0x1746D08", VA = "0x1746D08", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1746D84", Offset = "0x1746D84", VA = "0x1746D84", Slot = "7")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1746E00", Offset = "0x1746E00", VA = "0x1746E00")]
		public ItemContainer()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public enum ItemDropAction
	{
		[Token(Token = "0x40011F3")]
		None,
		[Token(Token = "0x40011F4")]
		SetLastChild,
		[Token(Token = "0x40011F5")]
		SetPrevSibling,
		[Token(Token = "0x40011F6")]
		SetNextSibling
	}
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5C60", Offset = "0x8F5C60")]
	public class ItemDropMarker : MonoBehaviour
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas m_parentCanvas;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ItemsControl m_itemsControl;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject SiblingGraphics;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ItemDropAction m_action;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ItemContainer m_item;

		[Token(Token = "0x170001EF")]
		protected Canvas ParentCanvas
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x1747004", Offset = "0x1747004", VA = "0x1747004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public virtual ItemDropAction Action
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x174700C", Offset = "0x174700C", VA = "0x174700C", Slot = "4")]
			get
			{
				return default(ItemDropAction);
			}
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x1747014", Offset = "0x1747014", VA = "0x1747014", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x174701C", Offset = "0x174701C", VA = "0x174701C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		protected ItemContainer Item
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x1747024", Offset = "0x1747024", VA = "0x1747024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x174702C", Offset = "0x174702C", VA = "0x174702C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x17470E0", Offset = "0x17470E0", VA = "0x17470E0", Slot = "6")]
		protected virtual void AwakeOverride()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x17470E4", Offset = "0x17470E4", VA = "0x17470E4", Slot = "7")]
		public virtual void SetTraget(ItemContainer item)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x17471CC", Offset = "0x17471CC", VA = "0x17471CC", Slot = "8")]
		public virtual void SetPosition(Vector2 position)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1747464", Offset = "0x1747464", VA = "0x1747464")]
		public ItemDropMarker()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class SelectionChangedEventArgs : EventArgs
	{
		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC8BC", Offset = "0x8FC8BC")]
		private object[] <OldItems>k__BackingField;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC8CC", Offset = "0x8FC8CC")]
		private object[] <NewItems>k__BackingField;

		[Token(Token = "0x170001F3")]
		public object[] OldItems
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x1747808", Offset = "0x1747808", VA = "0x1747808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E3A8", Offset = "0x90E3A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x1747810", Offset = "0x1747810", VA = "0x1747810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E3B8", Offset = "0x90E3B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public object[] NewItems
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x1747818", Offset = "0x1747818", VA = "0x1747818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E3C8", Offset = "0x90E3C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x1747820", Offset = "0x1747820", VA = "0x1747820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E3D8", Offset = "0x90E3D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public object OldItem
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x1747828", Offset = "0x1747828", VA = "0x1747828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public object NewItem
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x174786C", Offset = "0x174786C", VA = "0x174786C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x17478B0", Offset = "0x17478B0", VA = "0x17478B0")]
		public SelectionChangedEventArgs(object[] oldItems, object[] newItems)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1747930", Offset = "0x1747930", VA = "0x1747930")]
		public SelectionChangedEventArgs(object oldItem, object newItem)
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class ItemAddEventArgs : EventArgs
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC8DC", Offset = "0x8FC8DC")]
		private int <Index>k__BackingField;

		[Token(Token = "0x170001F7")]
		public int Index
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x1744C68", Offset = "0x1744C68", VA = "0x1744C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E3E8", Offset = "0x90E3E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x1744C70", Offset = "0x1744C70", VA = "0x1744C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E3F8", Offset = "0x90E3F8")]
			private set
			{
			}
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1744C78", Offset = "0x1744C78", VA = "0x1744C78")]
		public ItemAddEventArgs(int index)
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class ItemsRemovedArgs : EventArgs
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC8EC", Offset = "0x8FC8EC")]
		private object[] <Items>k__BackingField;

		[Token(Token = "0x170001F8")]
		public object[] Items
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x17475A4", Offset = "0x17475A4", VA = "0x17475A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E408", Offset = "0x90E408")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x17475AC", Offset = "0x17475AC", VA = "0x17475AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E418", Offset = "0x90E418")]
			private set
			{
			}
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x17475B4", Offset = "0x17475B4", VA = "0x17475B4")]
		public ItemsRemovedArgs(object[] items)
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class ItemDataBindingArgs : EventArgs
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC8FC", Offset = "0x8FC8FC")]
		private object <Item>k__BackingField;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC90C", Offset = "0x8FC90C")]
		private GameObject <ItemPresenter>k__BackingField;

		[Token(Token = "0x170001F9")]
		public object Item
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x1746E10", Offset = "0x1746E10", VA = "0x1746E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E428", Offset = "0x90E428")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x1746E18", Offset = "0x1746E18", VA = "0x1746E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E438", Offset = "0x90E438")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public GameObject ItemPresenter
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x1746E20", Offset = "0x1746E20", VA = "0x1746E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E448", Offset = "0x90E448")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x1746E28", Offset = "0x1746E28", VA = "0x1746E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E458", Offset = "0x90E458")]
			set
			{
			}
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1746E30", Offset = "0x1746E30", VA = "0x1746E30")]
		public ItemDataBindingArgs()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class ItemDragArgs : EventArgs
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC91C", Offset = "0x8FC91C")]
		private object <DragItem>k__BackingField;

		[Token(Token = "0x170001FB")]
		public object DragItem
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x1746E98", Offset = "0x1746E98", VA = "0x1746E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E468", Offset = "0x90E468")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x1746EA0", Offset = "0x1746EA0", VA = "0x1746EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E478", Offset = "0x90E478")]
			private set
			{
			}
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1746EA8", Offset = "0x1746EA8", VA = "0x1746EA8")]
		public ItemDragArgs(object[] dragItem)
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class ItemDropArgs : EventArgs
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC92C", Offset = "0x8FC92C")]
		private object[] <DragItems>k__BackingField;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC93C", Offset = "0x8FC93C")]
		private object <DropTarget>k__BackingField;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC94C", Offset = "0x8FC94C")]
		private ItemDropAction <Action>k__BackingField;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC95C", Offset = "0x8FC95C")]
		private bool <IsExternal>k__BackingField;

		[Token(Token = "0x170001FC")]
		public object[] DragItems
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x1746F24", Offset = "0x1746F24", VA = "0x1746F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E488", Offset = "0x90E488")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x1746F2C", Offset = "0x1746F2C", VA = "0x1746F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E498", Offset = "0x90E498")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public object DropTarget
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x1746F34", Offset = "0x1746F34", VA = "0x1746F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E4A8", Offset = "0x90E4A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x1746F3C", Offset = "0x1746F3C", VA = "0x1746F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E4B8", Offset = "0x90E4B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public ItemDropAction Action
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x1746F44", Offset = "0x1746F44", VA = "0x1746F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E4C8", Offset = "0x90E4C8")]
			get
			{
				return default(ItemDropAction);
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x1746F4C", Offset = "0x1746F4C", VA = "0x1746F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E4D8", Offset = "0x90E4D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool IsExternal
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x1746F54", Offset = "0x1746F54", VA = "0x1746F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E4E8", Offset = "0x90E4E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x1746F5C", Offset = "0x1746F5C", VA = "0x1746F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E4F8", Offset = "0x90E4F8")]
			private set
			{
			}
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x1746F68", Offset = "0x1746F68", VA = "0x1746F68")]
		public ItemDropArgs(object[] dragItems, object dropTarget, ItemDropAction action, bool isExternal)
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class CancelEventArgs : EventArgs
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC96C", Offset = "0x8FC96C")]
		private bool <Cancel>k__BackingField;

		[Token(Token = "0x17000200")]
		public bool Cancel
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x1744BEC", Offset = "0x1744BEC", VA = "0x1744BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E508", Offset = "0x90E508")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x1744BF4", Offset = "0x1744BF4", VA = "0x1744BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E518", Offset = "0x90E518")]
			set
			{
			}
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1744C00", Offset = "0x1744C00", VA = "0x1744C00")]
		public CancelEventArgs()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class ItemsControl : ItemsControl<ItemDataBindingArgs>
	{
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x1747554", Offset = "0x1747554", VA = "0x1747554")]
		public ItemsControl()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class ItemsControl<TDataBindingArgs> : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDropHandler where TDataBindingArgs : ItemDataBindingArgs, new()
	{
		[Token(Token = "0x20006ED")]
		private enum ScrollDir
		{
			[Token(Token = "0x40024EB")]
			None,
			[Token(Token = "0x40024EC")]
			Up,
			[Token(Token = "0x40024ED")]
			Down,
			[Token(Token = "0x40024EE")]
			Left,
			[Token(Token = "0x40024EF")]
			Right
		}

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7FF4", Offset = "0x8F7FF4")]
		private sealed class <>c__DisplayClass67_0
		{
			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object obj;

			[Token(Token = "0x60031E7")]
			public <>c__DisplayClass67_0()
			{
			}

			[Token(Token = "0x60031E8")]
			internal bool <GetItemContainer>b__0(ItemContainer ic)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8004", Offset = "0x8F8004")]
		private sealed class <>c
		{
			[Token(Token = "0x40024F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ItemContainer, object> <>9__93_0;

			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ItemContainer, object> <>9__95_0;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ItemContainer, object> <>9__97_0;

			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ItemContainer, object> <>9__98_0;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ItemContainer, int> <>9__101_0;

			[Token(Token = "0x60031EA")]
			public <>c()
			{
			}

			[Token(Token = "0x60031EB")]
			internal object <OnItemBeginDrag>b__93_0(ItemContainer di)
			{
				return null;
			}

			[Token(Token = "0x60031EC")]
			internal object <OnItemDrop>b__95_0(ItemContainer di)
			{
				return null;
			}

			[Token(Token = "0x60031ED")]
			internal object <RaiseEndDrag>b__97_0(ItemContainer di)
			{
				return null;
			}

			[Token(Token = "0x60031EE")]
			internal object <UnityEngine.EventSystems.IDropHandler.OnDrop>b__98_0(ItemContainer di)
			{
				return null;
			}

			[Token(Token = "0x60031EF")]
			internal int <GetDragItems>b__101_0(ItemContainer di)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public KeyCode MultiselectKey;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public KeyCode RangeselectKey;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public KeyCode RemoveKey;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_prevCanDrag;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool CanDrag;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_isDropInProgress;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject ItemContainerPrefab;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform Panel;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_width;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Canvas m_canvas;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera Camera;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ScrollSpeed;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScrollDir m_scrollDir;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ScrollRect m_scrollRect;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ItemContainer> m_itemContainers;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ItemDropMarker m_dropMarker;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ItemContainer m_dropTarget;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ItemContainer[] m_dragItems;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IList<object> m_items;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_selectionLocked;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<object> m_selectedItems;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ItemContainer m_selectedItem;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_selectedIndex;

		[Token(Token = "0x17000201")]
		public bool IsDropInProgress
		{
			[Token(Token = "0x6001807")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		protected ItemDropMarker DropMarker
		{
			[Token(Token = "0x6001808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public IEnumerable Items
		{
			[Token(Token = "0x6001809")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180A")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public int ItemsCount
		{
			[Token(Token = "0x600180B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000205")]
		public int SelectedItemsCount
		{
			[Token(Token = "0x6001810")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000206")]
		public IEnumerable SelectedItems
		{
			[Token(Token = "0x6001811")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001812")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public object SelectedItem
		{
			[Token(Token = "0x6001813")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001814")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public int SelectedIndex
		{
			[Token(Token = "0x6001815")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001816")]
			set
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event EventHandler<ItemDragArgs> ItemBeginDrag
		{
			[Token(Token = "0x60017FB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E528", Offset = "0x90E528")]
			add
			{
			}
			[Token(Token = "0x60017FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E538", Offset = "0x90E538")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event EventHandler<ItemDropArgs> ItemDrop
		{
			[Token(Token = "0x60017FD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E548", Offset = "0x90E548")]
			add
			{
			}
			[Token(Token = "0x60017FE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E558", Offset = "0x90E558")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event EventHandler<ItemDragArgs> ItemEndDrag
		{
			[Token(Token = "0x60017FF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E568", Offset = "0x90E568")]
			add
			{
			}
			[Token(Token = "0x6001800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E578", Offset = "0x90E578")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event EventHandler<TDataBindingArgs> ItemDataBinding
		{
			[Token(Token = "0x6001801")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E588", Offset = "0x90E588")]
			add
			{
			}
			[Token(Token = "0x6001802")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E598", Offset = "0x90E598")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event EventHandler<SelectionChangedEventArgs> SelectionChanged
		{
			[Token(Token = "0x6001803")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E5A8", Offset = "0x90E5A8")]
			add
			{
			}
			[Token(Token = "0x6001804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E5B8", Offset = "0x90E5B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event EventHandler<ItemsRemovedArgs> ItemsRemoved
		{
			[Token(Token = "0x6001805")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E5C8", Offset = "0x90E5C8")]
			add
			{
			}
			[Token(Token = "0x6001806")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E5D8", Offset = "0x90E5D8")]
			remove
			{
			}
		}

		[Token(Token = "0x600180C")]
		protected void RemoveItemAt(int index)
		{
		}

		[Token(Token = "0x600180D")]
		protected void RemoveItemContainerAt(int index)
		{
		}

		[Token(Token = "0x600180E")]
		protected void InsertItem(int index, object value)
		{
		}

		[Token(Token = "0x600180F")]
		protected void InsertItemContainerAt(int index, ItemContainer container)
		{
		}

		[Token(Token = "0x6001817")]
		public int IndexOf(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001818")]
		public ItemContainer GetItemContainer(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001819")]
		public ItemContainer LastItemContainer()
		{
			return null;
		}

		[Token(Token = "0x600181A")]
		public ItemContainer GetItemContainer(int siblingIndex)
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		public ItemContainer Add(object item)
		{
			return null;
		}

		[Token(Token = "0x600181C")]
		public ItemContainer Insert(int index, object item)
		{
			return null;
		}

		[Token(Token = "0x600181D")]
		public void Remove(object item)
		{
		}

		[Token(Token = "0x600181E")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600181F")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001820")]
		private void Start()
		{
		}

		[Token(Token = "0x6001821")]
		private void Update()
		{
		}

		[Token(Token = "0x6001822")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001823")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001824")]
		protected virtual void AwakeOverride()
		{
		}

		[Token(Token = "0x6001825")]
		protected virtual void StartOverride()
		{
		}

		[Token(Token = "0x6001826")]
		protected virtual void UpdateOverride()
		{
		}

		[Token(Token = "0x6001827")]
		protected virtual void OnEnableOverride()
		{
		}

		[Token(Token = "0x6001828")]
		protected virtual void OnDisableOverride()
		{
		}

		[Token(Token = "0x6001829")]
		private void OnCanDragChanged()
		{
		}

		[Token(Token = "0x600182A")]
		protected bool CanHandleEvent(object sender)
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		private void OnItemSelected(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x600182C")]
		private void SelectRange(ItemContainer itemContainer)
		{
		}

		[Token(Token = "0x600182D")]
		private void OnItemUnselected(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x600182E")]
		private void OnItemPointerDown(ItemContainer sender, PointerEventData e)
		{
		}

		[Token(Token = "0x600182F")]
		private void OnItemPointerUp(ItemContainer sender, PointerEventData e)
		{
		}

		[Token(Token = "0x6001830")]
		private void OnPointerEnter(ItemContainer sender, PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001831")]
		private void OnPointerExit(ItemContainer sender, PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001832")]
		private void OnItemBeginDrag(ItemContainer sender, PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001833")]
		private void OnItemDrag(ItemContainer sender, PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001834")]
		private void OnItemDrop(ItemContainer sender, PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001835")]
		private void OnItemEndDrag(ItemContainer sender, PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001836")]
		private void RaiseEndDrag()
		{
		}

		[Token(Token = "0x6001837")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001838")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001839")]
		protected virtual bool CanDrop(ItemContainer[] dragItems, ItemContainer dropTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x600183A")]
		protected ItemContainer[] GetDragItems()
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		protected virtual void DropItemAfter(ItemContainer dropTarget, ItemContainer dragItem)
		{
		}

		[Token(Token = "0x600183C")]
		protected virtual void DropItemBefore(ItemContainer dropTarget, ItemContainer dragItem)
		{
		}

		[Token(Token = "0x600183D")]
		protected virtual void Drop(ItemContainer[] dragItems, ItemContainer dropTarget, ItemDropAction action)
		{
		}

		[Token(Token = "0x600183E")]
		protected void UpdateSelectedItemIndex()
		{
		}

		[Token(Token = "0x600183F")]
		protected virtual void DataBind()
		{
		}

		[Token(Token = "0x6001840")]
		protected virtual void DataBindItem(object item, ItemContainer itemContainer)
		{
		}

		[Token(Token = "0x6001841")]
		protected void RaiseItemDataBinding(TDataBindingArgs args)
		{
		}

		[Token(Token = "0x6001842")]
		protected ItemContainer InstantiateItemContainer(int siblingIndex)
		{
			return null;
		}

		[Token(Token = "0x6001843")]
		protected void DestroyItemContainer(int siblingIndex)
		{
		}

		[Token(Token = "0x6001844")]
		protected virtual ItemContainer InstantiateItemContainerOverride(GameObject container)
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		private void DestroySelectedItems()
		{
		}

		[Token(Token = "0x6001846")]
		protected virtual void DestroyItem(object item)
		{
		}

		[Token(Token = "0x6001847")]
		public ItemsControl()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class ListBox : ItemsControl
	{
		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1747630", Offset = "0x1747630", VA = "0x1747630")]
		public ListBox()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class ListBoxItem : ItemContainer
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle m_toggle;

		[Token(Token = "0x17000209")]
		public override bool IsSelected
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x1747634", Offset = "0x1747634", VA = "0x1747634", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x174763C", Offset = "0x174763C", VA = "0x174763C", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x17476B4", Offset = "0x17476B4", VA = "0x17476B4", Slot = "14")]
		protected override void AwakeOverride()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x1747758", Offset = "0x1747758", VA = "0x1747758")]
		public ListBoxItem()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class ItemExpandingArgs : EventArgs
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC9EC", Offset = "0x8FC9EC")]
		private object <Item>k__BackingField;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC9FC", Offset = "0x8FC9FC")]
		private IEnumerable <Children>k__BackingField;

		[Token(Token = "0x1700020A")]
		public object Item
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0x17474B8", Offset = "0x17474B8", VA = "0x17474B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E5E8", Offset = "0x90E5E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600184E")]
			[Address(RVA = "0x17474C0", Offset = "0x17474C0", VA = "0x17474C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E5F8", Offset = "0x90E5F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public IEnumerable Children
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x17474C8", Offset = "0x17474C8", VA = "0x17474C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E608", Offset = "0x90E608")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001850")]
			[Address(RVA = "0x17474D0", Offset = "0x17474D0", VA = "0x17474D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E618", Offset = "0x90E618")]
			set
			{
			}
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x17474D8", Offset = "0x17474D8", VA = "0x17474D8")]
		public ItemExpandingArgs(object item)
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class TreeViewItemDataBindingArgs : ItemDataBindingArgs
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCA0C", Offset = "0x8FCA0C")]
		private bool <HasChildren>k__BackingField;

		[Token(Token = "0x1700020C")]
		public bool HasChildren
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xB3A1EC", Offset = "0xB3A1EC", VA = "0xB3A1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E628", Offset = "0x90E628")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xB3A1F4", Offset = "0xB3A1F4", VA = "0xB3A1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E638", Offset = "0x90E638")]
			set
			{
			}
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xB3A200", Offset = "0xB3A200", VA = "0xB3A200")]
		public TreeViewItemDataBindingArgs()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class TreeView : ItemsControl<TreeViewItemDataBindingArgs>
	{
		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int Indent;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool m_expandSilently;

		[Token(Token = "0x14000036")]
		public event EventHandler<ItemExpandingArgs> ItemExpanding
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x1747A8C", Offset = "0x1747A8C", VA = "0x1747A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E648", Offset = "0x90E648")]
			add
			{
			}
			[Token(Token = "0x6001856")]
			[Address(RVA = "0x1747B78", Offset = "0x1747B78", VA = "0x1747B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E658", Offset = "0x90E658")]
			remove
			{
			}
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1747C64", Offset = "0x1747C64", VA = "0x1747C64", Slot = "9")]
		protected override void OnEnableOverride()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1747CF4", Offset = "0x1747CF4", VA = "0x1747CF4", Slot = "10")]
		protected override void OnDisableOverride()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x1747D84", Offset = "0x1747D84", VA = "0x1747D84")]
		public void AddChild(object parent, object item)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x17480AC", Offset = "0x17480AC", VA = "0x17480AC")]
		public void ChangeParent(object parent, object item)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x174822C", Offset = "0x174822C", VA = "0x174822C")]
		public void Expand(TreeViewItem item)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x17486F4", Offset = "0x17486F4", VA = "0x17486F4")]
		public void Collapse(TreeViewItem item)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x174884C", Offset = "0x174884C", VA = "0x174884C")]
		private void Unselect(List<object> selectedItems, TreeViewItem item, ref int containerIndex, ref int itemIndex)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1748A48", Offset = "0x1748A48", VA = "0x1748A48")]
		private void Collapse(TreeViewItem item, int containerIndex, int itemIndex)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1748C28", Offset = "0x1748C28", VA = "0x1748C28", Slot = "17")]
		protected override ItemContainer InstantiateItemContainerOverride(GameObject container)
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1748D24", Offset = "0x1748D24", VA = "0x1748D24", Slot = "18")]
		protected override void DestroyItem(object item)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1748F20", Offset = "0x1748F20", VA = "0x1748F20", Slot = "16")]
		protected override void DataBindItem(object item, ItemContainer itemContainer)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x17490F8", Offset = "0x17490F8", VA = "0x17490F8", Slot = "11")]
		protected override bool CanDrop(ItemContainer[] dragItems, ItemContainer dropTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1749308", Offset = "0x1749308", VA = "0x1749308")]
		private void OnTreeViewItemParentChanged(object sender, ParentChangedEventArgs e)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x1749768", Offset = "0x1749768", VA = "0x1749768")]
		private void MoveSubtree(TreeViewItem parent, TreeViewItem child)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1749984", Offset = "0x1749984", VA = "0x1749984", Slot = "14")]
		protected override void Drop(ItemContainer[] dragItems, ItemContainer dropTarget, ItemDropAction action)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1749EF8", Offset = "0x1749EF8", VA = "0x1749EF8")]
		public TreeView()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5CC4", Offset = "0x8F5CC4")]
	public class TreeViewDropMarker : ItemDropMarker
	{
		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TreeView m_treeView;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_siblingGraphicsRectTransform;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject ChildGraphics;

		[Token(Token = "0x1700020D")]
		public override ItemDropAction Action
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x1749F50", Offset = "0x1749F50", VA = "0x1749F50", Slot = "4")]
			get
			{
				return default(ItemDropAction);
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x1749F58", Offset = "0x1749F58", VA = "0x1749F58", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1749FCC", Offset = "0x1749FCC", VA = "0x1749FCC", Slot = "6")]
		protected override void AwakeOverride()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x174A04C", Offset = "0x174A04C", VA = "0x174A04C", Slot = "7")]
		public override void SetTraget(ItemContainer item)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x174A218", Offset = "0x174A218", VA = "0x174A218", Slot = "8")]
		public override void SetPosition(Vector2 position)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x174A5E4", Offset = "0x174A5E4", VA = "0x174A5E4")]
		public TreeViewDropMarker()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5D28", Offset = "0x8F5D28")]
	public class TreeViewExpander : MonoBehaviour
	{
		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Graphic OffGraphic;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle m_toggle;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_canExpand;

		[Token(Token = "0x1700020E")]
		public bool CanExpand
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0x174A5EC", Offset = "0x174A5EC", VA = "0x174A5EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600186E")]
			[Address(RVA = "0x174A5F4", Offset = "0x174A5F4", VA = "0x174A5F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool IsOn
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x174A73C", Offset = "0x174A73C", VA = "0x174A73C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001870")]
			[Address(RVA = "0x174A76C", Offset = "0x174A76C", VA = "0x174A76C")]
			set
			{
			}
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x174A7B8", Offset = "0x174A7B8", VA = "0x174A7B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x174A950", Offset = "0x174A950", VA = "0x174A950")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x174AB90", Offset = "0x174AB90", VA = "0x174AB90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x174AC88", Offset = "0x174AC88", VA = "0x174AC88")]
		private void OnValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x174AD98", Offset = "0x174AD98", VA = "0x174AD98")]
		public TreeViewExpander()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class ParentChangedEventArgs : EventArgs
	{
		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCA2C", Offset = "0x8FCA2C")]
		private TreeViewItem <OldParent>k__BackingField;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCA3C", Offset = "0x8FCA3C")]
		private TreeViewItem <NewParent>k__BackingField;

		[Token(Token = "0x17000210")]
		public TreeViewItem OldParent
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x1747768", Offset = "0x1747768", VA = "0x1747768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E668", Offset = "0x90E668")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x1747770", Offset = "0x1747770", VA = "0x1747770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E678", Offset = "0x90E678")]
			private set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public TreeViewItem NewParent
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0x1747778", Offset = "0x1747778", VA = "0x1747778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E688", Offset = "0x90E688")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001879")]
			[Address(RVA = "0x1747780", Offset = "0x1747780", VA = "0x1747780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E698", Offset = "0x90E698")]
			private set
			{
			}
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1747788", Offset = "0x1747788", VA = "0x1747788")]
		public ParentChangedEventArgs(TreeViewItem oldParent, TreeViewItem newParent)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class TreeViewItem : ItemContainer
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TreeViewExpander m_expander;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HorizontalLayoutGroup m_itemLayout;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle m_toggle;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TreeView m_treeView;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_indent;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TreeViewItem m_parent;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_canExpand;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_isExpanded;

		[Token(Token = "0x17000212")]
		public int Indent
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0xB38E58", Offset = "0xB38E58", VA = "0xB38E58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000213")]
		public TreeViewItem Parent
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0xB38E60", Offset = "0xB38E60", VA = "0xB38E60")]
			get
			{
				return null;
			}
			[Token(Token = "0x600187F")]
			[Address(RVA = "0xB38E68", Offset = "0xB38E68", VA = "0xB38E68")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public override bool IsSelected
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0xB394C4", Offset = "0xB394C4", VA = "0xB394C4", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001882")]
			[Address(RVA = "0xB394CC", Offset = "0xB394CC", VA = "0xB394CC", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public bool CanExpand
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0xB39544", Offset = "0xB39544", VA = "0xB39544")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001884")]
			[Address(RVA = "0xB3954C", Offset = "0xB3954C", VA = "0xB3954C")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public bool IsExpanded
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xB3979C", Offset = "0xB3979C", VA = "0xB3979C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xB39634", Offset = "0xB39634", VA = "0xB39634")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public bool HasChildren
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0xB397A4", Offset = "0xB397A4", VA = "0xB397A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000037")]
		public static event EventHandler<ParentChangedEventArgs> ParentChanged
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0xB38C60", Offset = "0xB38C60", VA = "0xB38C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E6A8", Offset = "0x90E6A8")]
			add
			{
			}
			[Token(Token = "0x600187C")]
			[Address(RVA = "0xB38D5C", Offset = "0xB38D5C", VA = "0xB38D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E6B8", Offset = "0x90E6B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xB392B4", Offset = "0xB392B4", VA = "0xB392B4")]
		private void SetIndent(TreeViewItem parent, ref int siblingIndex)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xB39938", Offset = "0xB39938", VA = "0xB39938")]
		public bool IsDescendantOf(TreeViewItem parent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xB39A30", Offset = "0xB39A30", VA = "0xB39A30")]
		public TreeViewItem FirstChild()
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xB39B54", Offset = "0xB39B54", VA = "0xB39B54")]
		public TreeViewItem NextChild(TreeViewItem currentChild)
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xB39DB0", Offset = "0xB39DB0", VA = "0xB39DB0")]
		public TreeViewItem LastChild()
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xB39F78", Offset = "0xB39F78", VA = "0xB39F78", Slot = "14")]
		protected override void AwakeOverride()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xB3A0AC", Offset = "0xB3A0AC", VA = "0xB3A0AC", Slot = "15")]
		protected override void StartOverride()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xB3A1E4", Offset = "0xB3A1E4", VA = "0xB3A1E4")]
		public TreeViewItem()
		{
		}
	}
}
namespace Battlehub.SplineEditor
{
	[Token(Token = "0x20002A2")]
	public class Greedy : MonoBehaviour
	{
		[Token(Token = "0x600188F")]
		[Address(RVA = "0x11F40A0", Offset = "0x11F40A0", VA = "0x11F40A0")]
		public void OnFork(ForkEventArgs args)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x11F41B4", Offset = "0x11F41B4", VA = "0x11F41B4")]
		public Greedy()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class MapGen : MonoBehaviour
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject BuildingPrefab;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Rows;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Cols;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Density;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Width;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Length;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MinHeight;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxHeight;

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x11F41BC", Offset = "0x11F41BC", VA = "0x11F41BC")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x11F44F0", Offset = "0x11F44F0", VA = "0x11F44F0")]
		public MapGen()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class Paperplane : MonoBehaviour
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ExplosionPrefab;

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x11F4518", Offset = "0x11F4518", VA = "0x11F4518")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x11F4594", Offset = "0x11F4594", VA = "0x11F4594")]
		private void Update()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x11F4870", Offset = "0x11F4870", VA = "0x11F4870")]
		private void OnTriggerEnter(Collider collision)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x11F46E0", Offset = "0x11F46E0", VA = "0x11F46E0")]
		private void Explode()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x11F4874", Offset = "0x11F4874", VA = "0x11F4874")]
		public Paperplane()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class PaperplaneSpawn : MonoBehaviour
	{
		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Interval;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeElapsed;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmoothFollow SmoothFollow;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject PaperplanePrefab;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SplineBase m_spline;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SplineName;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x11F487C", Offset = "0x11F487C", VA = "0x11F487C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x11F4D2C", Offset = "0x11F4D2C", VA = "0x11F4D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x11F4A04", Offset = "0x11F4A04", VA = "0x11F4A04")]
		private void Spawn()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x11F4D84", Offset = "0x11F4D84", VA = "0x11F4D84")]
		public PaperplaneSpawn()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class Rand : MonoBehaviour
	{
		[Token(Token = "0x600189C")]
		[Address(RVA = "0x11F4DE4", Offset = "0x11F4DE4", VA = "0x11F4DE4")]
		public void OnFork(ForkEventArgs args)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x11F4E58", Offset = "0x11F4E58", VA = "0x11F4E58")]
		public Rand()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8014", Offset = "0x8F8014")]
		private sealed class <ChangeTaget>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmoothFollow <>4__this;

			[Token(Token = "0x17000549")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031F3")]
				[Address(RVA = "0x11F54F8", Offset = "0x11F54F8", VA = "0x11F54F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031F5")]
				[Address(RVA = "0x11F5568", Offset = "0x11F5568", VA = "0x11F5568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031F0")]
			[Address(RVA = "0x11F4ED8", Offset = "0x11F4ED8", VA = "0x11F4ED8")]
			[DebuggerHidden]
			public <ChangeTaget>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60031F1")]
			[Address(RVA = "0x11F5388", Offset = "0x11F5388", VA = "0x11F5388", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031F2")]
			[Address(RVA = "0x11F538C", Offset = "0x11F538C", VA = "0x11F538C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031F4")]
			[Address(RVA = "0x11F5500", Offset = "0x11F5500", VA = "0x11F5500", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_wait;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform target;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x11F4E60", Offset = "0x11F4E60", VA = "0x11F4E60")]
		private void Start()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x11F4D7C", Offset = "0x11F4D7C", VA = "0x11F4D7C")]
		public void SetTarget(Transform tr)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x11F4E64", Offset = "0x11F4E64", VA = "0x11F4E64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90E6C8", Offset = "0x90E6C8")]
		private IEnumerator ChangeTaget()
		{
			return null;
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x11F4F04", Offset = "0x11F4F04", VA = "0x11F4F04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x11F5374", Offset = "0x11F5374", VA = "0x11F5374")]
		public SmoothFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public class ForkEventArgs
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SplineBase[] m_branches;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SplineBase m_spline;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_nextCurveIndex;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCAAC", Offset = "0x8FCAAC")]
		private int <SelectBranchIndex>k__BackingField;

		[Token(Token = "0x17000218")]
		public SplineBase[] Branches
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x11F3E7C", Offset = "0x11F3E7C", VA = "0x11F3E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		public SplineBase Spline
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x11F3E84", Offset = "0x11F3E84", VA = "0x11F3E84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public int NextCurveIndex
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x11F3E8C", Offset = "0x11F3E8C", VA = "0x11F3E8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700021B")]
		public int SelectBranchIndex
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x11F3E94", Offset = "0x11F3E94", VA = "0x11F3E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E72C", Offset = "0x90E72C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x11F3E9C", Offset = "0x11F3E9C", VA = "0x11F3E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E73C", Offset = "0x90E73C")]
			set
			{
			}
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x11F3EA4", Offset = "0x11F3EA4", VA = "0x11F3EA4")]
		public ForkEventArgs(SplineBase spline, int pointIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class ForkEvent : UnityEvent<ForkEventArgs>
	{
		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x11F3E2C", Offset = "0x11F3E2C", VA = "0x11F3E2C")]
		public ForkEvent()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class SplineFollow : MonoBehaviour
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineBase Spline;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Offset;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsRunning;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool IsLoop;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ForkEvent Fork;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent Completed;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplineBase m_spline;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isRunning;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_isCompleted;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_t;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_curveIndex;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1740A98", Offset = "0x1740A98", VA = "0x1740A98")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x1740B60", Offset = "0x1740B60", VA = "0x1740B60")]
		private void Update()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x1740BC8", Offset = "0x1740BC8", VA = "0x1740BC8")]
		private void Restart()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1740C34", Offset = "0x1740C34", VA = "0x1740C34")]
		private void Move()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x174100C", Offset = "0x174100C", VA = "0x174100C")]
		private void CheckBranches(int curveIndex)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x17412A8", Offset = "0x17412A8", VA = "0x17412A8")]
		private void UpdatePosition(float t)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x17414A0", Offset = "0x17414A0", VA = "0x17414A0")]
		public SplineFollow()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public static class CurveUtils
	{
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x11F3684", Offset = "0x11F3684", VA = "0x11F3684")]
		public static float GetT(this SplineBase spline, int curveIndex, Vector3 testPoint, float eps = 0.01f)
		{
			return default(float);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x11F3748", Offset = "0x11F3748", VA = "0x11F3748")]
		private static float GetT(this SplineBase spline, float tStart, float tEnd, Vector3 testPoint, ref int iter, float eps = 0.01f)
		{
			return default(float);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x11F39F4", Offset = "0x11F39F4", VA = "0x11F39F4")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x11F3BEC", Offset = "0x11F3BEC", VA = "0x11F3BEC")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002AC")]
	[ExecuteInEditMode]
	public class Spline : SplineBase
	{
		[Token(Token = "0x4001263")]
		private const float Mag = 5f;

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x172DC28", Offset = "0x172DC28", VA = "0x172DC28")]
		public void Append()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x172DCF8", Offset = "0x172DCF8", VA = "0x172DCF8")]
		public void AppendThorugh(Transform t)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x172E48C", Offset = "0x172E48C", VA = "0x172E48C")]
		public void Insert(int curveIndex)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x172E550", Offset = "0x172E550", VA = "0x172E550")]
		public void Prepend()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x172E5A4", Offset = "0x172E5A4", VA = "0x172E5A4")]
		public void PrependThrough(Transform t)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x172ED7C", Offset = "0x172ED7C", VA = "0x172ED7C")]
		public bool Remove(int curveIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x172F50C", Offset = "0x172F50C", VA = "0x172F50C", Slot = "21")]
		public override void Load(SplineSnapshot snapshot)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x172F554", Offset = "0x172F554", VA = "0x172F554", Slot = "23")]
		protected override void OnCurveChanged()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x172F558", Offset = "0x172F558", VA = "0x172F558", Slot = "11")]
		protected override float GetMag()
		{
			return default(float);
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x172DC34", Offset = "0x172DC34", VA = "0x172DC34")]
		private void AppendCurve(float mag, bool enforceNeighbour)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x172E49C", Offset = "0x172E49C", VA = "0x172E49C")]
		private void PrependCurve(float mag, int curveIndex, bool enforceNeighbour, bool shrinkPreceding)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x172F560", Offset = "0x172F560", VA = "0x172F560")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public enum ControlPointMode
	{
		[Token(Token = "0x4001265")]
		Free,
		[Token(Token = "0x4001266")]
		Aligned,
		[Token(Token = "0x4001267")]
		Mirrored
	}
	[Token(Token = "0x20002AE")]
	public enum ExtendAction
	{
		[Token(Token = "0x4001269")]
		Append,
		[Token(Token = "0x400126A")]
		Prepend,
		[Token(Token = "0x400126B")]
		Insert
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public struct Vector3Serialziable
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float X;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Y;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Z;

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x9BD2D8", Offset = "0x9BD2D8", VA = "0x9BD2D8")]
		public Vector3Serialziable(float x, float y, float z)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1735EB4", Offset = "0x1735EB4", VA = "0x1735EB4")]
		public static implicit operator Vector3(Vector3Serialziable v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x17405B8", Offset = "0x17405B8", VA = "0x17405B8")]
		public static implicit operator Vector3Serialziable(Vector3 v)
		{
			return default(Vector3Serialziable);
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public struct SplineSnapshot
	{
		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3[] m_points;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ControlPointSetting[] m_controlPointSettings;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ControlPointMode[] m_modes;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_loop;

		[Token(Token = "0x1700021C")]
		public int CurveCount
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x9BD248", Offset = "0x9BD248", VA = "0x9BD248")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700021D")]
		public Vector3[] Points
		{
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x9BD290", Offset = "0x9BD290", VA = "0x9BD290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public ControlPointSetting[] ControlPointSettings
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x9BD298", Offset = "0x9BD298", VA = "0x9BD298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		public ControlPointMode[] Modes
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x9BD2A0", Offset = "0x9BD2A0", VA = "0x9BD2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public bool Loop
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x9BD2A8", Offset = "0x9BD2A8", VA = "0x9BD2A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x9BD2B0", Offset = "0x9BD2B0", VA = "0x9BD2B0")]
		public SplineSnapshot(Vector3[] points, ControlPointSetting[] settings, ControlPointMode[] modes, bool loop)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public delegate void ControlPointChanged(int pointIndex);
	[Serializable]
	[Token(Token = "0x20002B2")]
	public struct Twist
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Twist Null;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Data;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float T1;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float T2;

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x9BD2CC", Offset = "0x9BD2CC", VA = "0x9BD2CC")]
		public Twist(float data, float t1, float t2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B3")]
	public struct Thickness
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Thickness Null;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3Serialziable Data;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float T1;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float T2;

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x9BD2BC", Offset = "0x9BD2BC", VA = "0x9BD2BC")]
		public Thickness(Vector3 data, float t1, float t2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	public struct SplineBranch
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SplineIndex;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool Inbound;

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x9BD1EC", Offset = "0x9BD1EC", VA = "0x9BD1EC")]
		public SplineBranch(int splineIndex, bool inbound)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	public struct ControlPointSetting
	{
		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Twist Twist;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Thickness Thickness;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineBranch[] Branches;

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x9B2688", Offset = "0x9B2688", VA = "0x9B2688")]
		public ControlPointSetting(Twist twist, Thickness thickness, SplineBranch[] connections)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x9B26BC", Offset = "0x9B26BC", VA = "0x9B26BC")]
		public ControlPointSetting(Twist twist, Thickness thickness)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[ExecuteInEditMode]
	public class SplineBase : MonoBehaviour, IGL
	{
		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8024", Offset = "0x8F8024")]
		private sealed class <>c__DisplayClass131_0
		{
			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SplineBase <>4__this;

			[Token(Token = "0x60031F6")]
			[Address(RVA = "0x1736880", Offset = "0x1736880", VA = "0x1736880")]
			public <>c__DisplayClass131_0()
			{
			}

			[Token(Token = "0x60031F7")]
			[Address(RVA = "0x173E60C", Offset = "0x173E60C", VA = "0x173E60C")]
			internal void <SetTwist>b__0(int i, Twist val, bool r)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8034", Offset = "0x8F8034")]
		private sealed class <>c
		{
			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<int, Twist, SplineBase, bool> <>9__131_1;

			[Token(Token = "0x40024FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<int, Thickness, SplineBase, bool> <>9__132_1;

			[Token(Token = "0x60031F9")]
			[Address(RVA = "0x173E544", Offset = "0x173E544", VA = "0x173E544")]
			public <>c()
			{
			}

			[Token(Token = "0x60031FA")]
			[Address(RVA = "0x173E54C", Offset = "0x173E54C", VA = "0x173E54C")]
			internal void <SetTwist>b__131_1(int i, Twist val, SplineBase branch, bool r)
			{
			}

			[Token(Token = "0x60031FB")]
			[Address(RVA = "0x173E5A8", Offset = "0x173E5A8", VA = "0x173E5A8")]
			internal void <SetThickness>b__132_1(int i, Thickness val, SplineBase branch, bool r)
			{
			}
		}

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8044", Offset = "0x8F8044")]
		private sealed class <>c__DisplayClass132_0
		{
			[Token(Token = "0x40024FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4002500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SplineBase <>4__this;

			[Token(Token = "0x60031FC")]
			[Address(RVA = "0x1736E94", Offset = "0x1736E94", VA = "0x1736E94")]
			public <>c__DisplayClass132_0()
			{
			}

			[Token(Token = "0x60031FD")]
			[Address(RVA = "0x173E6B8", Offset = "0x173E6B8", VA = "0x173E6B8")]
			internal void <SetThickness>b__0(int i, Thickness val, bool r)
			{
			}
		}

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color SplineColor;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float Smoothness;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material m_splineMaterial;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static SplineBase m_convergingSpline;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static SplineBase m_activeSpline;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int m_activeControlPointIndex;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private ControlPointMode[] m_modes;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] m_points;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private ControlPointSetting[] m_settings;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private bool m_loop;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isSelected;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineBase m_prevSpline;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private int m_prevControlPointIndex;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private SplineBase m_nextSpline;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private int m_nextControlPointIndex;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private SplineBase[] m_branches;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[HideInInspector]
		private SplineBase m_parent;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[HideInInspector]
		private SplineBase[] m_children;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isApplicationQuit;

		[Token(Token = "0x17000221")]
		public static SplineBase ActiveSpline
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x172F5D0", Offset = "0x172F5D0", VA = "0x172F5D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x172F638", Offset = "0x172F638", VA = "0x172F638")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public static int ActiveControlPointIndex
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x172F6A4", Offset = "0x172F6A4", VA = "0x172F6A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x172F70C", Offset = "0x172F70C", VA = "0x172F70C")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public static SplineBase ConvergingSpline
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x172F9D8", Offset = "0x172F9D8", VA = "0x172F9D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x172FA40", Offset = "0x172FA40", VA = "0x172FA40")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public static Material SplineMaterial
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x172FB94", Offset = "0x172FB94", VA = "0x172FB94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public static bool SplineMaterialZTest
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x172FBFC", Offset = "0x172FBFC", VA = "0x172FBFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x172FC58", Offset = "0x172FC58", VA = "0x172FC58")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public int NextControlPointIndex
		{
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x173215C", Offset = "0x173215C", VA = "0x173215C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000227")]
		public SplineBase NextSpline
		{
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x1732164", Offset = "0x1732164", VA = "0x1732164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public int PrevControlPointIndex
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x173216C", Offset = "0x173216C", VA = "0x173216C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000229")]
		public SplineBase PrevSpline
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x1732174", Offset = "0x1732174", VA = "0x1732174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public bool IsSelected
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x173217C", Offset = "0x173217C", VA = "0x173217C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022B")]
		public virtual bool Loop
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x1732184", Offset = "0x1732184", VA = "0x1732184", Slot = "9")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x173218C", Offset = "0x173218C", VA = "0x173218C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public int CurveCount
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x172E15C", Offset = "0x172E15C", VA = "0x172E15C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022D")]
		public int ControlPointCount
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0x1730E84", Offset = "0x1730E84", VA = "0x1730E84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022E")]
		public SplineBase Root
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x1732EA4", Offset = "0x1732EA4", VA = "0x1732EA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		public SplineBase Parent
		{
			[Token(Token = "0x6001902")]
			[Address(RVA = "0x1732F34", Offset = "0x1732F34", VA = "0x1732F34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		public SplineBase[] Children
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0x1732F3C", Offset = "0x1732F3C", VA = "0x1732F3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000038")]
		public static event EventHandler ConvergingSplineChanged
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x172F778", Offset = "0x172F778", VA = "0x172F778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E76C", Offset = "0x90E76C")]
			add
			{
			}
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x172F8A8", Offset = "0x172F8A8", VA = "0x172F8A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E77C", Offset = "0x90E77C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event ControlPointChanged ControlPointPositionChanged
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x173174C", Offset = "0x173174C", VA = "0x173174C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E78C", Offset = "0x90E78C")]
			add
			{
			}
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x1731838", Offset = "0x1731838", VA = "0x1731838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E79C", Offset = "0x90E79C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event ControlPointChanged ControlPointModeChanged
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x1731924", Offset = "0x1731924", VA = "0x1731924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E7AC", Offset = "0x90E7AC")]
			add
			{
			}
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x1731A10", Offset = "0x1731A10", VA = "0x1731A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E7BC", Offset = "0x90E7BC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event ControlPointChanged ControlPointConnectionChanged
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x1731AFC", Offset = "0x1731AFC", VA = "0x1731AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E7CC", Offset = "0x90E7CC")]
			add
			{
			}
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x1731BE8", Offset = "0x1731BE8", VA = "0x1731BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E7DC", Offset = "0x90E7DC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event ControlPointChanged ControlPointThicknessChanged
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x1731CD4", Offset = "0x1731CD4", VA = "0x1731CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E7EC", Offset = "0x90E7EC")]
			add
			{
			}
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x1731DC0", Offset = "0x1731DC0", VA = "0x1731DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E7FC", Offset = "0x90E7FC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event ControlPointChanged ControlPointTwistChanged
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x1731EAC", Offset = "0x1731EAC", VA = "0x1731EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E80C", Offset = "0x90E80C")]
			add
			{
			}
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x1731F98", Offset = "0x1731F98", VA = "0x1731F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E81C", Offset = "0x90E81C")]
			remove
			{
			}
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x172FD34", Offset = "0x172FD34", VA = "0x172FD34")]
		private static void SetSplieMaterialZTest(bool value)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x172FDF0", Offset = "0x172FDF0", VA = "0x172FDF0")]
		private static void InitSplineMaterial()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x172FFE0", Offset = "0x172FFE0", VA = "0x172FFE0", Slot = "4")]
		private void Battlehub.RTHandles.IGL.Draw()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x17307C4", Offset = "0x17307C4", VA = "0x17307C4", Slot = "5")]
		protected virtual void ShowTwistAngles()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1730AEC", Offset = "0x1730AEC", VA = "0x1730AEC")]
		private void DrawTwistAngle(int i, int steps)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1730F28", Offset = "0x1730F28", VA = "0x1730F28")]
		private void DrawTwistAngle(int curveIndex, int i, int steps)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1731684", Offset = "0x1731684", VA = "0x1731684", Slot = "6")]
		protected virtual int GetStepsPerCurve()
		{
			return default(int);
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x173168C", Offset = "0x173168C", VA = "0x173168C", Slot = "7")]
		protected virtual Vector3 GetUpVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x17316EC", Offset = "0x17316EC", VA = "0x17316EC", Slot = "8")]
		protected virtual Vector3 GetSideVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1732084", Offset = "0x1732084", VA = "0x1732084")]
		private void RaiseControlPointThicknessChanged(int index)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1732098", Offset = "0x1732098", VA = "0x1732098")]
		private void RaisControlPointTwistChanged(int index)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x17320AC", Offset = "0x17320AC", VA = "0x17320AC")]
		private void RaiseControlPointChanged(int index)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x17320C0", Offset = "0x17320C0", VA = "0x17320C0")]
		private void RaiseControlPointModeChanged(int modeIndex)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x1732148", Offset = "0x1732148", VA = "0x1732148")]
		private void RaiseControlPointConnectionChanged(int index)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x1732F44", Offset = "0x1732F44", VA = "0x1732F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x1733B5C", Offset = "0x1733B5C", VA = "0x1733B5C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x1733B68", Offset = "0x1733B68", VA = "0x1733B68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x17341AC", Offset = "0x17341AC", VA = "0x17341AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x173426C", Offset = "0x173426C", VA = "0x173426C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x1734324", Offset = "0x1734324", VA = "0x1734324")]
		private void Start()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x1734838", Offset = "0x1734838", VA = "0x1734838")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x173483C", Offset = "0x173483C", VA = "0x173483C")]
		private void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x1734840", Offset = "0x1734840", VA = "0x1734840")]
		private void Update()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x1734850", Offset = "0x1734850", VA = "0x1734850")]
		private void Reset()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x173534C", Offset = "0x173534C", VA = "0x173534C", Slot = "11")]
		protected virtual float GetMag()
		{
			return default(float);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1735354", Offset = "0x1735354", VA = "0x1735354", Slot = "12")]
		protected virtual void AwakeOverride()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x1735358", Offset = "0x1735358", VA = "0x1735358", Slot = "13")]
		protected virtual void OnDestroyOverride()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x173535C", Offset = "0x173535C", VA = "0x173535C", Slot = "14")]
		protected virtual void OnEnableOverride()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1735360", Offset = "0x1735360", VA = "0x1735360", Slot = "15")]
		protected virtual void OnDisableOverride()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x1735364", Offset = "0x1735364", VA = "0x1735364", Slot = "16")]
		protected virtual void StartOverride()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1735368", Offset = "0x1735368", VA = "0x1735368", Slot = "17")]
		protected virtual void UpdateOverride()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x173536C", Offset = "0x173536C", VA = "0x173536C", Slot = "18")]
		protected virtual void ResetOverride()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x1735370", Offset = "0x1735370", VA = "0x1735370")]
		private void OnRuntimeEditorCreated(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x17354C8", Offset = "0x17354C8", VA = "0x17354C8")]
		private void OnRuntimeEditorDestroyed(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x17338EC", Offset = "0x17338EC", VA = "0x17338EC")]
		private void SyncArrays()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1735614", Offset = "0x1735614", VA = "0x1735614")]
		public void Select()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1735654", Offset = "0x1735654", VA = "0x1735654")]
		private void SelectRecursive(SplineBase spline)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x173582C", Offset = "0x173582C", VA = "0x173582C")]
		public void Unselect()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1733F7C", Offset = "0x1733F7C", VA = "0x1733F7C")]
		private void UnselectRecursive(SplineBase spline)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x173586C", Offset = "0x173586C", VA = "0x173586C")]
		public Vector3 GetPoint(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1731344", Offset = "0x1731344", VA = "0x1731344")]
		public Vector3 GetPointLocal(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1735A44", Offset = "0x1735A44", VA = "0x1735A44")]
		public int ToCurveIndex(ref float t)
		{
			return default(int);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1735B60", Offset = "0x1735B60", VA = "0x1735B60")]
		public int ToCurveIndex(float t)
		{
			return default(int);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x1735C5C", Offset = "0x1735C5C", VA = "0x1735C5C")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x172E384", Offset = "0x172E384", VA = "0x172E384")]
		public Vector3 GetPointLocal(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x17314E8", Offset = "0x17314E8", VA = "0x17314E8")]
		public float GetTwist(float t, int curveIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x17312E0", Offset = "0x17312E0", VA = "0x17312E0")]
		public float GetTwist(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1735C90", Offset = "0x1735C90", VA = "0x1735C90")]
		public Vector3 GetThickness(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1735EE8", Offset = "0x1735EE8", VA = "0x1735EE8")]
		public Vector3 GetThickness(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1735F1C", Offset = "0x1735F1C", VA = "0x1735F1C")]
		public Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1735FC0", Offset = "0x1735FC0", VA = "0x1735FC0")]
		public Vector3 GetControlPointLocal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x173601C", Offset = "0x173601C", VA = "0x173601C")]
		public ControlPointSetting GetSetting(int index)
		{
			return default(ControlPointSetting);
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x17360B0", Offset = "0x17360B0", VA = "0x17360B0")]
		public SplineBranch[] GetBranches(int index)
		{
			return null;
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1736124", Offset = "0x1736124", VA = "0x1736124")]
		public bool HasBranches(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x17361E0", Offset = "0x17361E0", VA = "0x17361E0")]
		public SplineBase BranchToSpline(SplineBranch branch)
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1730EB0", Offset = "0x1730EB0", VA = "0x1730EB0")]
		public Twist GetTwist(int index)
		{
			return default(Twist);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1736234", Offset = "0x1736234", VA = "0x1736234")]
		public Thickness GetThickness(int index)
		{
			return default(Thickness);
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x17362C0", Offset = "0x17362C0", VA = "0x17362C0")]
		public void SetTwist(int index, Twist twist)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1736888", Offset = "0x1736888", VA = "0x1736888")]
		public void SetThickness(int index, Thickness thickness)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1736E9C", Offset = "0x1736E9C", VA = "0x1736E9C")]
		public bool SetControlPoint(int index, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1736F7C", Offset = "0x1736F7C", VA = "0x1736F7C")]
		private bool _SetControlPointUnchecked(int index, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1736F14", Offset = "0x1736F14", VA = "0x1736F14")]
		public bool SetControlPointLocal(int index, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1732AD0", Offset = "0x1732AD0", VA = "0x1732AD0")]
		private bool _SetControlPointLocalUnchecked(int index, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1737A6C", Offset = "0x1737A6C", VA = "0x1737A6C")]
		public ControlPointMode GetControlPointMode(int index)
		{
			return default(ControlPointMode);
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1737ADC", Offset = "0x1737ADC", VA = "0x1737ADC")]
		public void SetControlPointMode(ControlPointMode mode)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1737AEC", Offset = "0x1737AEC", VA = "0x1737AEC")]
		private void SetControlPointModeRecursive(SplineBase spline, ControlPointMode mode)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1737C08", Offset = "0x1737C08", VA = "0x1737C08")]
		public void SetControlPointMode(int index, ControlPointMode mode, bool raiseCurveChanged = true)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1737DC0", Offset = "0x1737DC0", VA = "0x1737DC0")]
		private void SetControlPointModeValue(int index, ControlPointMode mode, bool raiseCurveChanged)
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1737EB8", Offset = "0x1737EB8", VA = "0x1737EB8")]
		private void SetBranchControlPointModes(int index, ControlPointMode mode, bool raiseCurveChanged)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1738198", Offset = "0x1738198", VA = "0x1738198")]
		public Vector3 GetVelocity(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1738370", Offset = "0x1738370", VA = "0x1738370")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x1731314", Offset = "0x1731314", VA = "0x1731314")]
		public Vector3 GetDirection(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x17312B0", Offset = "0x17312B0", VA = "0x17312B0")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x173847C", Offset = "0x173847C", VA = "0x173847C", Slot = "19")]
		public virtual SplineControlPoint[] GetSplineControlPoints()
		{
			return null;
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x17388B0", Offset = "0x17388B0", VA = "0x17388B0")]
		public void AlignWithNextSpline()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1738B24", Offset = "0x1738B24", VA = "0x1738B24")]
		public void AlignWithPrevSpline()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1736FFC", Offset = "0x1736FFC", VA = "0x1736FFC")]
		public bool IsControlPointLocked(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1738D84", Offset = "0x1738D84", VA = "0x1738D84")]
		public void SetBranch(SplineBase branch, int connectionPointIndex, bool isInbound)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1739720", Offset = "0x1739720", VA = "0x1739720")]
		private void Reconnect(SplineBase branch, int connectionPointIndex, bool isInbound)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x17344CC", Offset = "0x17344CC", VA = "0x17344CC")]
		private void Connect(SplineBase branch, int connectionPointIndex, bool isInbound)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x17324E0", Offset = "0x17324E0", VA = "0x17324E0")]
		public void Disconnect(int index)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x1734178", Offset = "0x1734178", VA = "0x1734178")]
		public void Disconnect(SplineBase spline)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x17325B4", Offset = "0x17325B4", VA = "0x17325B4")]
		public void Disconnect(SplineBase branch, bool isInbound)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1733170", Offset = "0x1733170", VA = "0x1733170")]
		private void UpdateChildrenAndParent()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1739E80", Offset = "0x1739E80", VA = "0x1739E80")]
		private void ShiftConnectionIndices(int settingIndex, int offset)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1739C3C", Offset = "0x1739C3C", VA = "0x1739C3C")]
		private void CleanupSplineConnections(int splineIndex)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1739FE0", Offset = "0x1739FE0", VA = "0x1739FE0")]
		public void Smooth()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x173AF94", Offset = "0x173AF94", VA = "0x173AF94")]
		private void EnforceModeRecursive()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x173AE58", Offset = "0x173AE58", VA = "0x173AE58")]
		private void ShiftPoints(Vector3 offset)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x173B03C", Offset = "0x173B03C", VA = "0x173B03C")]
		public float EvalDistance(int curveIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x173B13C", Offset = "0x173B13C", VA = "0x173B13C")]
		public float EvalDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x173B24C", Offset = "0x173B24C", VA = "0x173B24C")]
		public float EvalCurveLength(int curveIndex, int steps = 4)
		{
			return default(float);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x173B398", Offset = "0x173B398", VA = "0x173B398")]
		public float EvalSplineLength(int steps = 4)
		{
			return default(float);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x173B434", Offset = "0x173B434", VA = "0x173B434", Slot = "20")]
		public virtual SplineSnapshot Save()
		{
			return default(SplineSnapshot);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x173B630", Offset = "0x173B630", VA = "0x173B630", Slot = "21")]
		public virtual void Load(SplineSnapshot snapshot)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x172F52C", Offset = "0x172F52C", VA = "0x172F52C")]
		protected void LoadSpline(SplineSnapshot settings)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x173B670", Offset = "0x173B670", VA = "0x173B670")]
		protected void SetPoints(int curveIndex, Vector3[] points, ControlPointMode mode, bool raiseCurveChanged)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x173741C", Offset = "0x173741C", VA = "0x173741C")]
		private void JustChangeControlPointValue(int index, Vector3 delta)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1739628", Offset = "0x1739628", VA = "0x1739628")]
		private void ChangeControlPointValue(int index, Vector3 delta)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x173B800", Offset = "0x173B800", VA = "0x173B800")]
		private void JustSetControlPointValue(int index, Vector3 point)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1737524", Offset = "0x1737524", VA = "0x1737524")]
		private void SetControlPointValue(int index, Vector3 point)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x173B878", Offset = "0x173B878", VA = "0x173B878")]
		private void SetBranchControlPoints(int index, Vector3 point)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1737684", Offset = "0x1737684", VA = "0x1737684")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1739878", Offset = "0x1739878", VA = "0x1739878")]
		private void EnforceBranchModes(int index)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x173BBD8", Offset = "0x173BBD8", VA = "0x173BBD8")]
		private void EnforceBranchMode(ControlPointMode mode, int middleIndex, SplineBase branch, int fixedIndex, int enforcedIndex)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x173C2A0", Offset = "0x173C2A0", VA = "0x173C2A0")]
		protected void AlignCurve(int curveIndex, float length, bool toLast = true)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x172ED80", Offset = "0x172ED80", VA = "0x172ED80")]
		protected bool RemoveCurve(int curveIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x173C77C", Offset = "0x173C77C", VA = "0x173C77C")]
		protected void Subdivide(int firstCurveIndex, int lastCurveIndex, int curveCount)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x173D1C8", Offset = "0x173D1C8", VA = "0x173D1C8")]
		private void InsertCurve(Vector3[] points, ControlPointSetting setting, ControlPointMode mode, int curveIndex, float length, bool enforceNeighbour, bool shrinkPreceding)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x172EBDC", Offset = "0x172EBDC", VA = "0x172EBDC")]
		protected void PrependCurve(Vector3[] points, int curveIndex, float length, bool enforceNeighbour, bool shrinkPreceding)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x172E3B8", Offset = "0x172E3B8", VA = "0x172E3B8")]
		protected void AppendCurve(Vector3[] points, bool enforceNeighbour)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x173DD28", Offset = "0x173DD28", VA = "0x173DD28")]
		private void AppendCurve(Vector3[] points, ControlPointSetting setting, ControlPointMode mode, bool enforceNeighbour)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x172E1A4", Offset = "0x172E1A4", VA = "0x172E1A4")]
		protected void AlignWithEnding(Vector3[] points, int curveIndex, float mag, float offset = 1f)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x172EA04", Offset = "0x172EA04", VA = "0x172EA04")]
		protected void AlignWithBeginning(Vector3[] points, int curveIndex, float mag, float offset = 0f)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x173E3EC", Offset = "0x173E3EC", VA = "0x173E3EC", Slot = "22")]
		protected virtual void OnCurveChanged(int pointIndex, int curveIndex)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x173E3F0", Offset = "0x173E3F0", VA = "0x173E3F0", Slot = "23")]
		protected virtual void OnCurveChanged()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x173E3F4", Offset = "0x173E3F4", VA = "0x173E3F4", Slot = "24")]
		protected virtual void AddControlPointComponent(GameObject ctrlPoint)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1734DD8", Offset = "0x1734DD8", VA = "0x1734DD8")]
		private void SyncCtrlPoints(bool silent = false)
		{
		}

		[Token(Token = "0x600196C")]
		private void SetValue<T>(int controlPointIndex, T value, Action<int, T, bool> setter, Action<int, T, SplineBase, bool> branchSetter, Func<int, T> getter, bool raiseCurveChanged = true)
		{
		}

		[Token(Token = "0x600196D")]
		private void SetBranchValues<T>(int controlPointIndex, T value, Action<int, T, SplineBase, bool> branchSetter, bool raiseCurveChanged)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x172F5C8", Offset = "0x172F5C8", VA = "0x172F5C8")]
		public SplineBase()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[ExecuteInEditMode]
	public class SplineControlPoint : MonoBehaviour
	{
		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer m_renderer;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SplineBase m_spline;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_localPosition;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion m_rotation;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_updateAngle;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private int m_index;

		[Token(Token = "0x17000231")]
		public int Index
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x173E76C", Offset = "0x173E76C", VA = "0x173E76C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x173E460", Offset = "0x173E460", VA = "0x173E460")]
			set
			{
			}
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x173E990", Offset = "0x173E990", VA = "0x173E990")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x173F0A0", Offset = "0x173F0A0", VA = "0x173F0A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x173FCA0", Offset = "0x173FCA0", VA = "0x173FCA0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x173FF04", Offset = "0x173FF04", VA = "0x173FF04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x17405BC", Offset = "0x17405BC", VA = "0x17405BC")]
		private void OnControlPointThicknessChanged(int pointIndex)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x17406B0", Offset = "0x17406B0", VA = "0x17406B0")]
		private void OnControlPointTwistChanged(int pointIndex)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x1740710", Offset = "0x1740710", VA = "0x1740710")]
		private void OnRuntimeEditorCreated(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1740714", Offset = "0x1740714", VA = "0x1740714")]
		private void OnIsConvergingChanged(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1740758", Offset = "0x1740758", VA = "0x1740758")]
		private void OnControlPointModeChanged(int pointIndex)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x174076C", Offset = "0x174076C", VA = "0x174076C")]
		private void OnControlPointPositionChanged(int pointIndex)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x17408A8", Offset = "0x17408A8", VA = "0x17408A8")]
		private void OnControlPointConnectionChanged(int pointIndex)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x173F8F4", Offset = "0x173F8F4", VA = "0x173F8F4")]
		public void UpdateAngle(bool forceUpdateAngle = false)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x173ECA8", Offset = "0x173ECA8", VA = "0x173ECA8")]
		private void UpdateRenderersState()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x173E774", Offset = "0x173E774", VA = "0x173E774")]
		private void UpdateMaterial()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x173F648", Offset = "0x173F648", VA = "0x173F648")]
		private void CreateRuntimeComponents()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x17408DC", Offset = "0x17408DC", VA = "0x17408DC")]
		public void DestroyRuntimeComponents()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1740A88", Offset = "0x1740A88", VA = "0x1740A88")]
		public SplineControlPoint()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class SplineRuntimeCmd : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006F4")]
		public class SplineSnapshots
		{
			[Token(Token = "0x4002501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineSnapshot[] Data;

			[Token(Token = "0x60031FE")]
			[Address(RVA = "0x17429B0", Offset = "0x17429B0", VA = "0x17429B0")]
			public SplineSnapshots()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8054", Offset = "0x8F8054")]
		private sealed class <>c
		{
			[Token(Token = "0x4002502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Spline, GameObject> <>9__8_0;

			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Spline, GameObject> <>9__9_0;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<Spline, GameObject> <>9__10_0;

			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<Spline, GameObject> <>9__11_0;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<SplineBase, GameObject> <>9__12_0;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<SplineBase, GameObject> <>9__13_0;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action<SplineBase, GameObject> <>9__14_0;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action<SplineBase, GameObject> <>9__15_0;

			[Token(Token = "0x6003200")]
			[Address(RVA = "0x1742A80", Offset = "0x1742A80", VA = "0x1742A80")]
			public <>c()
			{
			}

			[Token(Token = "0x6003201")]
			[Address(RVA = "0x1742A88", Offset = "0x1742A88", VA = "0x1742A88")]
			internal void <Append>b__8_0(Spline spline, GameObject go)
			{
			}

			[Token(Token = "0x6003202")]
			[Address(RVA = "0x1742B24", Offset = "0x1742B24", VA = "0x1742B24")]
			internal void <Insert>b__9_0(Spline spline, GameObject go)
			{
			}

			[Token(Token = "0x6003203")]
			[Address(RVA = "0x1742C50", Offset = "0x1742C50", VA = "0x1742C50")]
			internal void <Prepend>b__10_0(Spline spline, GameObject go)
			{
			}

			[Token(Token = "0x6003204")]
			[Address(RVA = "0x1742CE4", Offset = "0x1742CE4", VA = "0x1742CE4")]
			internal void <Remove>b__11_0(Spline spline, GameObject go)
			{
			}

			[Token(Token = "0x6003205")]
			[Address(RVA = "0x1742E80", Offset = "0x1742E80", VA = "0x1742E80")]
			internal void <Smooth>b__12_0(SplineBase spline, GameObject go)
			{
			}

			[Token(Token = "0x6003206")]
			[Address(RVA = "0x1742EC0", Offset = "0x1742EC0", VA = "0x1742EC0")]
			internal void <SetMirroredMode>b__13_0(SplineBase spline, GameObject go)
			{
			}

			[Token(Token = "0x6003207")]
			[Address(RVA = "0x1742F08", Offset = "0x1742F08", VA = "0x1742F08")]
			internal void <SetAlignedMode>b__14_0(SplineBase spline, GameObject go)
			{
			}

			[Token(Token = "0x6003208")]
			[Address(RVA = "0x1742F50", Offset = "0x1742F50", VA = "0x1742F50")]
			internal void <SetFreeMode>b__15_0(SplineBase spline, GameObject go)
			{
			}
		}

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Spline m_spline;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineControlPoint m_controlPoint;

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x17414B8", Offset = "0x17414B8", VA = "0x17414B8")]
		private Spline GetSelectedSpline()
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1741568", Offset = "0x1741568", VA = "0x1741568")]
		private SplineControlPoint GetSelectedControlPoint()
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1741618", Offset = "0x1741618", VA = "0x1741618")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x1741694", Offset = "0x1741694", VA = "0x1741694")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1741730", Offset = "0x1741730", VA = "0x1741730")]
		private void OnRuntimeSelectionChanged(UnityEngine.Object[] unselectedObjects)
		{
		}

		[Token(Token = "0x6001988")]
		public void RunAction<T>(Action<T, GameObject> action)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1741B54", Offset = "0x1741B54", VA = "0x1741B54", Slot = "4")]
		public virtual void Append()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1741C54", Offset = "0x1741C54", VA = "0x1741C54", Slot = "5")]
		public virtual void Insert()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x1741D54", Offset = "0x1741D54", VA = "0x1741D54", Slot = "6")]
		public virtual void Prepend()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x1741E54", Offset = "0x1741E54", VA = "0x1741E54", Slot = "7")]
		public virtual void Remove()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x1741F54", Offset = "0x1741F54", VA = "0x1741F54", Slot = "8")]
		public virtual void Smooth()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1742054", Offset = "0x1742054", VA = "0x1742054", Slot = "9")]
		public virtual void SetMirroredMode()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1742154", Offset = "0x1742154", VA = "0x1742154", Slot = "10")]
		public virtual void SetAlignedMode()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1742254", Offset = "0x1742254", VA = "0x1742254", Slot = "11")]
		public virtual void SetFreeMode()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1742354", Offset = "0x1742354", VA = "0x1742354", Slot = "12")]
		public virtual void OutBranch()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x17423C8", Offset = "0x17423C8", VA = "0x17423C8", Slot = "13")]
		public virtual void BranchIn()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x174243C", Offset = "0x174243C", VA = "0x174243C", Slot = "14")]
		public virtual void Converge()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x17424A4", Offset = "0x17424A4", VA = "0x17424A4", Slot = "15")]
		public virtual void Separate()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1741944", Offset = "0x1741944", VA = "0x1741944")]
		public static bool Converge(SplineBase spline, SplineBase branch, int splineIndex, int branchIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x174257C", Offset = "0x174257C", VA = "0x174257C")]
		public static void Separate(SplineBase spline, int controlPointIndex)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x17425E4", Offset = "0x17425E4", VA = "0x17425E4", Slot = "16")]
		public virtual void Load()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x17427EC", Offset = "0x17427EC", VA = "0x17427EC", Slot = "17")]
		public virtual void Save()
		{
		}

		[Token(Token = "0x6001999")]
		private static TData DeserializeFromString<TData>(string settings)
		{
			return (TData)null;
		}

		[Token(Token = "0x600199A")]
		private static string SerializeToString<TData>(TData settings)
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1742A14", Offset = "0x1742A14", VA = "0x1742A14")]
		public SplineRuntimeCmd()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[ExecuteInEditMode]
	public class SplineRuntimeEditor : MonoBehaviour
	{
		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8064", Offset = "0x8F8064")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int minIndex;

			[Token(Token = "0x6003209")]
			[Address(RVA = "0x17444C8", Offset = "0x17444C8", VA = "0x17444C8")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600320A")]
			[Address(RVA = "0x1744B54", Offset = "0x1744B54", VA = "0x1744B54")]
			internal bool <OnRuntimeSelectionChanged>b__0(SplineControlPoint p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float SelectionMargin;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color MirroredModeColor;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Color AlignedModeColor;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Color FreeModeColor;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly Color ControlPointLineColor;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_connectedMaterial;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_normalMaterial;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_mirroredModeMaterial;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_alignedModeMaterial;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_freeModeMaterial;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh m_controlPointMesh;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isApplicationQuit;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static SplineRuntimeEditor m_instance;

		[Token(Token = "0x17000232")]
		public Mesh ControlPointMesh
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x173E450", Offset = "0x173E450", VA = "0x173E450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public Material ConnectedMaterial
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x17408BC", Offset = "0x17408BC", VA = "0x17408BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public Material MirroredModeMaterial
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x17408C4", Offset = "0x17408C4", VA = "0x17408C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public Material AlignedModeMaterial
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x17408CC", Offset = "0x17408CC", VA = "0x17408CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public Material FreeModeMaterial
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x17408D4", Offset = "0x17408D4", VA = "0x17408D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public Material NormalMaterial
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x173E458", Offset = "0x173E458", VA = "0x173E458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public static SplineRuntimeEditor Instance
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x1733884", Offset = "0x1733884", VA = "0x1733884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003E")]
		public static event EventHandler Created
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x1733628", Offset = "0x1733628", VA = "0x1733628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E82C", Offset = "0x90E82C")]
			add
			{
			}
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x1733D20", Offset = "0x1733D20", VA = "0x1733D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E83C", Offset = "0x90E83C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public static event EventHandler Destroyed
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x1733754", Offset = "0x1733754", VA = "0x1733754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E84C", Offset = "0x90E84C")]
			add
			{
			}
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x1733E4C", Offset = "0x1733E4C", VA = "0x1733E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E85C", Offset = "0x90E85C")]
			remove
			{
			}
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x1742F98", Offset = "0x1742F98", VA = "0x1742F98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x1743B28", Offset = "0x1743B28", VA = "0x1743B28")]
		private void Start()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x1743C18", Offset = "0x1743C18", VA = "0x1743C18")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x1743C24", Offset = "0x1743C24", VA = "0x1743C24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x1743E2C", Offset = "0x1743E2C", VA = "0x1743E2C")]
		private void DisableRuntimeEditing()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1743A0C", Offset = "0x1743A0C", VA = "0x1743A0C")]
		private void EnableRuntimeEditing()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x1743F34", Offset = "0x1743F34", VA = "0x1743F34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1744094", Offset = "0x1744094", VA = "0x1744094")]
		private void OnRuntimeSelectionChanged(UnityEngine.Object[] unselected)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x17444D0", Offset = "0x17444D0", VA = "0x17444D0")]
		private int HitTestRecursive(SplineBase spline, float distance, out SplineBase resultSpline, out float resultDistance)
		{
			return default(int);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1744610", Offset = "0x1744610", VA = "0x1744610")]
		private int HitTest(SplineBase spline, out float minDistance)
		{
			return default(int);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x1744934", Offset = "0x1744934", VA = "0x1744934")]
		public void OnClosed()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x1744A9C", Offset = "0x1744A9C", VA = "0x1744A9C")]
		public void OnOpened()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x1744AA0", Offset = "0x1744AA0", VA = "0x1744AA0")]
		public SplineRuntimeEditor()
		{
		}
	}
}
namespace Battlehub.Utils
{
	[Token(Token = "0x20002BA")]
	[ExecuteInEditMode]
	public class SaveInPlayMode : MonoBehaviour
	{
		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xB3AA70", Offset = "0xB3AA70", VA = "0xB3AA70")]
		public SaveInPlayMode()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class EditorStopwatch
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EditorStopwatch Main;

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xB3A208", Offset = "0xB3A208", VA = "0xB3A208")]
		static EditorStopwatch()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xB3A274", Offset = "0xB3A274", VA = "0xB3A274")]
		public void Start()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xB3A278", Offset = "0xB3A278", VA = "0xB3A278")]
		public void Stop(string output)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xB3A26C", Offset = "0xB3A26C", VA = "0xB3A26C")]
		public EditorStopwatch()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8F5DEC", Offset = "0x8F5DEC")]
	public class ExposePropertyAttribute : Attribute
	{
		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xB3A27C", Offset = "0xB3A27C", VA = "0xB3A27C")]
		public ExposePropertyAttribute()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class QuaternionAnimationInfo : AnimationInfo<object, Quaternion>
	{
		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xB3A33C", Offset = "0xB3A33C", VA = "0xB3A33C")]
		public QuaternionAnimationInfo(Quaternion from, Quaternion to, float duration, Func<float, float> easingFunction, AnimationCallback<object, Quaternion> callback, [Optional] object target)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xB3A41C", Offset = "0xB3A41C", VA = "0xB3A41C", Slot = "9")]
		protected override Quaternion Lerp(Quaternion from, Quaternion to, float t)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20002BE")]
	public class Vector3SlerpAnimationInfo : AnimationInfo<object, Vector3>
	{
		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xB3AC00", Offset = "0xB3AC00", VA = "0xB3AC00")]
		public Vector3SlerpAnimationInfo(Vector3 from, Vector3 to, float duration, Func<float, float> easingFunction, AnimationCallback<object, Vector3> callback, [Optional] object target)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xB3ACD0", Offset = "0xB3ACD0", VA = "0xB3ACD0", Slot = "9")]
		protected override Vector3 Lerp(Vector3 from, Vector3 to, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002BF")]
	public class Vector3AnimationInfo : AnimationInfo<object, Vector3>
	{
		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xB3AA78", Offset = "0xB3AA78", VA = "0xB3AA78")]
		public Vector3AnimationInfo(Vector3 from, Vector3 to, float duration, Func<float, float> easingFunction, AnimationCallback<object, Vector3> callback, [Optional] object target)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xB3AB48", Offset = "0xB3AB48", VA = "0xB3AB48", Slot = "9")]
		protected override Vector3 Lerp(Vector3 from, Vector3 to, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002C0")]
	public class FloatAnimationInfo : AnimationInfo<object, float>
	{
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xB3A284", Offset = "0xB3A284", VA = "0xB3A284")]
		public FloatAnimationInfo(float from, float to, float duration, Func<float, float> easingFunction, AnimationCallback<object, float> callback, [Optional] object target)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xB3A324", Offset = "0xB3A324", VA = "0xB3A324", Slot = "9")]
		protected override float Lerp(float from, float to, float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002C1")]
	public delegate void AnimationCallback<TObj, TValue>(TObj obj, TValue value, float t, bool completed);
	[Token(Token = "0x20002C2")]
	public abstract class AnimationInfo<TObj, TValue> : IAnimationInfo
	{
		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_duration;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_t;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TObj m_target;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TValue m_from;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TValue m_to;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AnimationCallback<TObj, TValue> m_callback;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<float, float> m_easingFunction;

		[Token(Token = "0x17000239")]
		private float Battlehub.Utils.IAnimationInfo.Duration
		{
			[Token(Token = "0x60019D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023A")]
		private float Battlehub.Utils.IAnimationInfo.T
		{
			[Token(Token = "0x60019D5")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019D6")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public bool InProgress
		{
			[Token(Token = "0x60019D7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019C7")]
		public static float EaseLinear(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019C8")]
		public static float EaseInQuad(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019C9")]
		public static float EaseOutQuad(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019CA")]
		public static float EaseInOutQuad(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019CB")]
		public static float EaseInCubic(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019CC")]
		public static float EaseOutCubic(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019CD")]
		public static float EaseInOutCubic(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019CE")]
		public static float EaseInQuart(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019CF")]
		public static float EaseOutQuart(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019D0")]
		public static float EaseInOutQuart(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019D1")]
		public static float ElasticEaseIn(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019D2")]
		public static float ElasticEaseOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019D3")]
		public static float ElasticEaseInOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60019D8")]
		protected abstract TValue Lerp(TValue from, TValue to, float t);

		[Token(Token = "0x60019D9")]
		public void Abort()
		{
		}

		[Token(Token = "0x60019DA")]
		public AnimationInfo(TValue from, TValue to, float duration, Func<float, float> easingFunction, AnimationCallback<TObj, TValue> callback, TObj target)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public interface IAnimationInfo
	{
		[Token(Token = "0x1700023C")]
		float Duration
		{
			[Token(Token = "0x60019DB")]
			get;
		}

		[Token(Token = "0x1700023D")]
		float T
		{
			[Token(Token = "0x60019DC")]
			get;
			[Token(Token = "0x60019DD")]
			set;
		}

		[Token(Token = "0x1700023E")]
		bool InProgress
		{
			[Token(Token = "0x60019DE")]
			get;
		}

		[Token(Token = "0x60019DF")]
		void Abort();
	}
	[Token(Token = "0x20002C4")]
	[ExecuteInEditMode]
	public class Run : MonoBehaviour
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Run m_instance;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IAnimationInfo> m_animations;

		[Token(Token = "0x1700023F")]
		public static Run Instance
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0xB3A534", Offset = "0xB3A534", VA = "0xB3A534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xB3A584", Offset = "0xB3A584", VA = "0xB3A584")]
		public void Animation(IAnimationInfo animation)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xB3A630", Offset = "0xB3A630", VA = "0xB3A630")]
		public void Remove(IAnimationInfo animation)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xB3A6A0", Offset = "0xB3A6A0", VA = "0xB3A6A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xB3A798", Offset = "0xB3A798", VA = "0xB3A798")]
		private void Update()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xB3AA68", Offset = "0xB3AA68", VA = "0xB3AA68")]
		public Run()
		{
		}
	}
}
namespace Battlehub.RTHandles
{
	[Token(Token = "0x20002C5")]
	public enum RuntimeTool
	{
		[Token(Token = "0x40012BC")]
		None,
		[Token(Token = "0x40012BD")]
		Move,
		[Token(Token = "0x40012BE")]
		Rotate,
		[Token(Token = "0x40012BF")]
		Scale,
		[Token(Token = "0x40012C0")]
		View
	}
	[Token(Token = "0x20002C6")]
	public enum RuntimePivotRotation
	{
		[Token(Token = "0x40012C2")]
		Local,
		[Token(Token = "0x40012C3")]
		Global
	}
	[Token(Token = "0x20002C7")]
	public delegate void RuntimeToolChanged();
	[Token(Token = "0x20002C8")]
	public delegate void RuntimePivotRotationChanged();
	[Token(Token = "0x20002C9")]
	public static class RuntimeTools
	{
		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static RuntimeTool m_current;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static RuntimePivotRotation m_pivotRotation;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCE3C", Offset = "0x8FCE3C")]
		private static bool <IsLocked>k__BackingField;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCE4C", Offset = "0x8FCE4C")]
		private static bool <IsDragDrop>k__BackingField;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCE5C", Offset = "0x8FCE5C")]
		private static bool <IsSceneGizmoSelected>k__BackingField;

		[Token(Token = "0x17000240")]
		public static bool IsLocked
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x11E34E4", Offset = "0x11E34E4", VA = "0x11E34E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E8AC", Offset = "0x90E8AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x11DB5F0", Offset = "0x11DB5F0", VA = "0x11DB5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E8BC", Offset = "0x90E8BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public static bool IsDragDrop
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x11EF400", Offset = "0x11EF400", VA = "0x11EF400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E8CC", Offset = "0x90E8CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x11EF450", Offset = "0x11EF450", VA = "0x11EF450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E8DC", Offset = "0x90E8DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public static bool IsSceneGizmoSelected
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x11EF4A8", Offset = "0x11EF4A8", VA = "0x11EF4A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E8EC", Offset = "0x90E8EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x11EF4F8", Offset = "0x11EF4F8", VA = "0x11EF4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E8FC", Offset = "0x90E8FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public static RuntimeTool Current
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x11DAD4C", Offset = "0x11DAD4C", VA = "0x11DAD4C")]
			get
			{
				return default(RuntimeTool);
			}
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x11D902C", Offset = "0x11D902C", VA = "0x11D902C")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public static RuntimePivotRotation PivotRotation
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x11DB648", Offset = "0x11DB648", VA = "0x11DB648")]
			get
			{
				return default(RuntimePivotRotation);
			}
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x11DB698", Offset = "0x11DB698", VA = "0x11DB698")]
			set
			{
			}
		}

		[Token(Token = "0x14000040")]
		public static event RuntimeToolChanged ToolChanged
		{
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x11D90B4", Offset = "0x11D90B4", VA = "0x11D90B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E86C", Offset = "0x90E86C")]
			add
			{
			}
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x11D9538", Offset = "0x11D9538", VA = "0x11D9538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E87C", Offset = "0x90E87C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public static event RuntimePivotRotationChanged PivotRotationChanged
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x11DE24C", Offset = "0x11DE24C", VA = "0x11DE24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E88C", Offset = "0x90E88C")]
			add
			{
			}
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x11DE7A8", Offset = "0x11DE7A8", VA = "0x11DE7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E89C", Offset = "0x90E89C")]
			remove
			{
			}
		}
	}
	[Token(Token = "0x20002CA")]
	public abstract class BaseHandle : MonoBehaviour, IGL
	{
		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCE6C", Offset = "0x8FCE6C")]
		private float <EffectiveGridSize>k__BackingField;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode SnapToGridKey;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera Camera;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float SelectionMargin;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] Targets;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BaseHandle m_draggingTool;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RuntimeHandleAxis m_selectedAxis;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isDragging;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Plane m_dragPlane;

		[Token(Token = "0x17000245")]
		protected float EffectiveGridSize
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x11E2770", Offset = "0x11E2770", VA = "0x11E2770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E90C", Offset = "0x90E90C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x11E2778", Offset = "0x11E2778", VA = "0x11E2778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E91C", Offset = "0x90E91C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public Transform Target
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x11E2780", Offset = "0x11E2780", VA = "0x11E2780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public bool IsDragging
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x11DB710", Offset = "0x11DB710", VA = "0x11DB710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		protected abstract RuntimeTool Tool
		{
			[Token(Token = "0x6001A00")]
			get;
		}

		[Token(Token = "0x17000249")]
		protected Quaternion Rotation
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0x11E27C4", Offset = "0x11E27C4", VA = "0x11E27C4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700024A")]
		protected RuntimeHandleAxis SelectedAxis
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x11E28E0", Offset = "0x11E28E0", VA = "0x11E28E0")]
			get
			{
				return default(RuntimeHandleAxis);
			}
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x11E28E8", Offset = "0x11E28E8", VA = "0x11E28E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		protected Plane DragPlane
		{
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0x11E28F0", Offset = "0x11E28F0", VA = "0x11E28F0")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0x11E28FC", Offset = "0x11E28FC", VA = "0x11E28FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		protected abstract float CurrentGridSize
		{
			[Token(Token = "0x6001A06")]
			get;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x11E2908", Offset = "0x11E2908", VA = "0x11E2908")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x11E2EC8", Offset = "0x11E2EC8", VA = "0x11E2EC8", Slot = "7")]
		protected virtual void StartOverride()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x11E2ECC", Offset = "0x11E2ECC", VA = "0x11E2ECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x11E2FD0", Offset = "0x11E2FD0", VA = "0x11E2FD0", Slot = "8")]
		protected virtual void OnEnableOverride()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x11E2FD4", Offset = "0x11E2FD4", VA = "0x11E2FD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x11E3148", Offset = "0x11E3148", VA = "0x11E3148", Slot = "9")]
		protected virtual void OnDisableOverride()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x11E314C", Offset = "0x11E314C", VA = "0x11E314C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x11E3250", Offset = "0x11E3250", VA = "0x11E3250", Slot = "10")]
		protected virtual void OnDestroyOverride()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x11E3254", Offset = "0x11E3254", VA = "0x11E3254")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x11E3534", Offset = "0x11E3534", VA = "0x11E3534", Slot = "11")]
		protected virtual bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x11E353C", Offset = "0x11E353C", VA = "0x11E353C", Slot = "12")]
		protected virtual void OnDrag()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x11E3540", Offset = "0x11E3540", VA = "0x11E3540", Slot = "13")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x11E3544", Offset = "0x11E3544", VA = "0x11E3544", Slot = "14")]
		protected virtual void UpdateOverride()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x11E3A24", Offset = "0x11E3A24", VA = "0x11E3A24")]
		protected bool HitCenter()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x11E3B64", Offset = "0x11E3B64", VA = "0x11E3B64")]
		protected bool HitAxis(Vector3 axis, Matrix4x4 matrix, out float distanceToAxis)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x11E4018", Offset = "0x11E4018", VA = "0x11E4018")]
		protected Plane GetDragPlane(Matrix4x4 matrix, Vector3 axis)
		{
			return default(Plane);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x11E4118", Offset = "0x11E4118", VA = "0x11E4118")]
		protected Plane GetDragPlane()
		{
			return default(Plane);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x11E425C", Offset = "0x11E425C", VA = "0x11E425C")]
		protected bool GetPointOnDragPlane(Vector3 screenPos, out Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x11E427C", Offset = "0x11E427C", VA = "0x11E427C")]
		protected bool GetPointOnDragPlane(Plane dragPlane, Vector3 screenPos, out Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x11E3FE0", Offset = "0x11E3FE0", VA = "0x11E3FE0")]
		private static Vector2 PerpendicularClockwise(Vector2 vector2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x11E43B0", Offset = "0x11E43B0", VA = "0x11E43B0", Slot = "4")]
		private void Battlehub.RTHandles.IGL.Draw()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x11E43C0", Offset = "0x11E43C0", VA = "0x11E43C0", Slot = "15")]
		protected virtual void DrawOverride()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x11E43C4", Offset = "0x11E43C4", VA = "0x11E43C4")]
		protected BaseHandle()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[ExecuteInEditMode]
	public class GLCamera : MonoBehaviour
	{
		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x11E43DC", Offset = "0x11E43DC", VA = "0x11E43DC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x11E4674", Offset = "0x11E4674", VA = "0x11E4674")]
		public GLCamera()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public interface IGL
	{
		[Token(Token = "0x6001A20")]
		void Draw();
	}
	[Token(Token = "0x20002CD")]
	[ExecuteInEditMode]
	public class GLRenderer : MonoBehaviour
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GLRenderer m_instance;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IGL> m_renderObjects;

		[Token(Token = "0x1700024D")]
		public static GLRenderer Instance
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x11E2DCC", Offset = "0x11E2DCC", VA = "0x11E2DCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x11E2E1C", Offset = "0x11E2E1C", VA = "0x11E2E1C")]
		public void Add(IGL gl)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x11E30D8", Offset = "0x11E30D8", VA = "0x11E30D8")]
		public void Remove(IGL line)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x11E467C", Offset = "0x11E467C", VA = "0x11E467C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x11E4774", Offset = "0x11E4774", VA = "0x11E4774")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x11E44D8", Offset = "0x11E44D8", VA = "0x11E44D8")]
		public void Draw()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x11E47C4", Offset = "0x11E47C4", VA = "0x11E47C4")]
		public GLRenderer()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5E30", Offset = "0x8F5E30")]
	public class Grid : MonoBehaviour
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera m_camera;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera Camera;

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x11E47CC", Offset = "0x11E47CC", VA = "0x11E47CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x11E4CF0", Offset = "0x11E4CF0", VA = "0x11E4CF0")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x11E4E64", Offset = "0x11E4E64", VA = "0x11E4E64")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x11E5054", Offset = "0x11E5054", VA = "0x11E5054")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x11E48CC", Offset = "0x11E48CC", VA = "0x11E48CC")]
		private void SetupCamera()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x11E5058", Offset = "0x11E5058", VA = "0x11E5058")]
		public Grid()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class PositionHandle : BaseHandle
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float GridSize;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_cursorPosition;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_currentPosition;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_prevPoint;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Matrix4x4 m_inverse;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCE7C", Offset = "0x8FCE7C")]
		private static PositionHandle <Current>k__BackingField;

		[Token(Token = "0x1700024E")]
		public static PositionHandle Current
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x11E5060", Offset = "0x11E5060", VA = "0x11E5060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E92C", Offset = "0x90E92C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x11E50B0", Offset = "0x11E50B0", VA = "0x11E50B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E93C", Offset = "0x90E93C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		protected override RuntimeTool Tool
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x11E5104", Offset = "0x11E5104", VA = "0x11E5104", Slot = "5")]
			get
			{
				return default(RuntimeTool);
			}
		}

		[Token(Token = "0x17000250")]
		protected override float CurrentGridSize
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x11E510C", Offset = "0x11E510C", VA = "0x11E510C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x11E5114", Offset = "0x11E5114", VA = "0x11E5114", Slot = "7")]
		protected override void StartOverride()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x11E5168", Offset = "0x11E5168", VA = "0x11E5168", Slot = "10")]
		protected override void OnDestroyOverride()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x11E524C", Offset = "0x11E524C", VA = "0x11E524C")]
		private bool HitQuad(Vector3 axis, Matrix4x4 matrix, float size)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x11E5674", Offset = "0x11E5674", VA = "0x11E5674", Slot = "11")]
		protected override bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x11E5DBC", Offset = "0x11E5DBC", VA = "0x11E5DBC", Slot = "12")]
		protected override void OnDrag()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x11E6148", Offset = "0x11E6148", VA = "0x11E6148", Slot = "15")]
		protected override void DrawOverride()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x11E6D98", Offset = "0x11E6D98", VA = "0x11E6D98")]
		public PositionHandle()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class RotationHandle : BaseHandle
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float GridSize;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float XSpeed;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float YSpeed;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 m_targetInverse;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 m_inverse;

		[Token(Token = "0x40012E5")]
		private const float innerRadius = 1f;

		[Token(Token = "0x40012E6")]
		private const float outerRadius = 1.2f;

		[Token(Token = "0x40012E7")]
		private const float hitDot = 0.2f;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_deltaX;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_deltaY;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCE8C", Offset = "0x8FCE8C")]
		private static RotationHandle <Current>k__BackingField;

		[Token(Token = "0x17000251")]
		public static RotationHandle Current
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0x11E6DB8", Offset = "0x11E6DB8", VA = "0x11E6DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E94C", Offset = "0x90E94C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0x11E6E08", Offset = "0x11E6E08", VA = "0x11E6E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E95C", Offset = "0x90E95C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000252")]
		protected override RuntimeTool Tool
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x11E6E5C", Offset = "0x11E6E5C", VA = "0x11E6E5C", Slot = "5")]
			get
			{
				return default(RuntimeTool);
			}
		}

		[Token(Token = "0x17000253")]
		protected override float CurrentGridSize
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x11E6E64", Offset = "0x11E6E64", VA = "0x11E6E64", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x11E6E6C", Offset = "0x11E6E6C", VA = "0x11E6E6C", Slot = "7")]
		protected override void StartOverride()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x11E6EC0", Offset = "0x11E6EC0", VA = "0x11E6EC0", Slot = "10")]
		protected override void OnDestroyOverride()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x11E6FA4", Offset = "0x11E6FA4", VA = "0x11E6FA4", Slot = "8")]
		protected override void OnEnableOverride()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x11E6FA8", Offset = "0x11E6FA8", VA = "0x11E6FA8")]
		private bool Intersect(Ray r, Vector3 sphereCenter, float sphereRadius, out float hit1Distance, out float hit2Distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x11E716C", Offset = "0x11E716C", VA = "0x11E716C")]
		private RuntimeHandleAxis Hit()
		{
			return default(RuntimeHandleAxis);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x11E7590", Offset = "0x11E7590", VA = "0x11E7590", Slot = "11")]
		protected override bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x11E79BC", Offset = "0x11E79BC", VA = "0x11E79BC", Slot = "12")]
		protected override void OnDrag()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x11E804C", Offset = "0x11E804C", VA = "0x11E804C", Slot = "15")]
		protected override void DrawOverride()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x11E8974", Offset = "0x11E8974", VA = "0x11E8974")]
		public RotationHandle()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public enum RuntimeHandleAxis
	{
		[Token(Token = "0x40012EC")]
		None,
		[Token(Token = "0x40012ED")]
		X,
		[Token(Token = "0x40012EE")]
		Y,
		[Token(Token = "0x40012EF")]
		Z,
		[Token(Token = "0x40012F0")]
		XY,
		[Token(Token = "0x40012F1")]
		XZ,
		[Token(Token = "0x40012F2")]
		YZ,
		[Token(Token = "0x40012F3")]
		Screen,
		[Token(Token = "0x40012F4")]
		Free
	}
	[Token(Token = "0x20002D2")]
	public static class RuntimeHandles
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color32 XColor;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color32 XColorTransparent;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Color32 YColor;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Color32 YColorTransparent;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color32 ZColor;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Color32 ZColorTransparent;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Color32 AltColor;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly Color32 SelectionColor;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Mesh Arrows;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly Mesh SelectionArrowY;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Mesh SelectionArrowX;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly Mesh SelectionArrowZ;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly Mesh SelectionCube;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly Mesh CubeX;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly Mesh CubeY;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly Mesh CubeZ;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static readonly Mesh CubeUniform;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly Mesh SceneGizmoSelectedAxis;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static readonly Mesh SceneGizmoXAxis;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly Mesh SceneGizmoYAxis;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static readonly Mesh SceneGizmoZAxis;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static readonly Mesh SceneGizmoCube;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static readonly Mesh SceneGizmoSelectedCube;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static readonly Mesh SceneGizmoQuad;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private static readonly Material ShapesMaterialZTest;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static readonly Material ShapesMaterialZTest2;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static readonly Material ShapesMaterialZTest3;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static readonly Material ShapesMaterialZTest4;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static readonly Material ShapesMaterialZTestOffset;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static readonly Material ShapesMaterial;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private static readonly Material LinesMaterial;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private static readonly Material LinesClipMaterial;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private static readonly Material LinesBillboardMaterial;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private static readonly Material XMaterial;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private static readonly Material YMaterial;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private static readonly Material ZMaterial;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private static readonly Material GridMaterial;

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x11E8998", Offset = "0x11E8998", VA = "0x11E8998")]
		static RuntimeHandles()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x11EB664", Offset = "0x11EB664", VA = "0x11EB664")]
		private static Mesh CreateQuadMesh(float quadWidth = 1f, float cubeHeight = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x11EA570", Offset = "0x11EA570", VA = "0x11EA570")]
		private static Mesh CreateCubeMesh(Color color, float cubeLength = 1f, float cubeWidth = 1f, float cubeHeight = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x11EA090", Offset = "0x11EA090", VA = "0x11EA090")]
		private static Mesh CreateConeMesh(Color color)
		{
			return null;
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x11EACF0", Offset = "0x11EACF0", VA = "0x11EACF0")]
		private static Mesh CreateSceneGizmoHalfAxis(Color color, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x11EB108", Offset = "0x11EB108", VA = "0x11EB108")]
		private static Mesh CreateSceneGizmoAxis(Color axisColor, Color altColor, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x11E5BB8", Offset = "0x11E5BB8", VA = "0x11E5BB8")]
		public static float GetScreenScale(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x11EBA64", Offset = "0x11EBA64", VA = "0x11EBA64")]
		private static void DoAxes(Vector3 position, Matrix4x4 transform, RuntimeHandleAxis selectedAxis)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x11E6234", Offset = "0x11E6234", VA = "0x11E6234")]
		public static void DoPositionHandle(Vector3 position, Quaternion rotation, RuntimeHandleAxis selectedAxis = RuntimeHandleAxis.None)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x11E814C", Offset = "0x11E814C", VA = "0x11E814C")]
		public static void DoRotationHandle(Quaternion rotation, Vector3 position, RuntimeHandleAxis selectedAxis = RuntimeHandleAxis.None)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x11EBDF0", Offset = "0x11EBDF0", VA = "0x11EBDF0")]
		private static void DrawCircle(Matrix4x4 transform, float radius)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x11EBF48", Offset = "0x11EBF48", VA = "0x11EBF48")]
		public static void DoScaleHandle(Vector3 scale, Vector3 position, Quaternion rotation, RuntimeHandleAxis selectedAxis = RuntimeHandleAxis.None)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x11ECFCC", Offset = "0x11ECFCC", VA = "0x11ECFCC")]
		public static void DoSceneGizmo(Vector3 position, Quaternion rotation, Vector3 selection, float gizmoScale, float xAlpha = 1f, float yAlpha = 1f, float zAlpha = 1f)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x11EE398", Offset = "0x11EE398", VA = "0x11EE398")]
		private static void DragSceneGizmoAxis(Vector3 position, Quaternion rotation, Vector3 axis, float gizmoScale, float billboardScale, float billboardOffset, float sScale)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x11E4D7C", Offset = "0x11E4D7C", VA = "0x11E4D7C")]
		public static float GetGridFarPlane()
		{
			return default(float);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x11E4EC0", Offset = "0x11E4EC0", VA = "0x11E4EC0")]
		public static void DrawGrid()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x11EE8B0", Offset = "0x11EE8B0", VA = "0x11EE8B0")]
		private static void DrawGrid(Vector3 cameraPosition, float spacing, float alpha, float fadeDisance)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x11EE824", Offset = "0x11EE824", VA = "0x11EE824")]
		public static float CountOfDigits(float number)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002D3")]
	public class ScaleHandle : BaseHandle
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float GridSize;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_prevPoint;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Matrix4x4 m_inverse;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_roundedScale;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 m_scale;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3[] m_refScales;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_screenScale;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCE9C", Offset = "0x8FCE9C")]
		private static ScaleHandle <Current>k__BackingField;

		[Token(Token = "0x17000254")]
		public static ScaleHandle Current
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x11EF550", Offset = "0x11EF550", VA = "0x11EF550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E96C", Offset = "0x90E96C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x11EF5A0", Offset = "0x11EF5A0", VA = "0x11EF5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E97C", Offset = "0x90E97C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000255")]
		protected override RuntimeTool Tool
		{
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x11EF5F4", Offset = "0x11EF5F4", VA = "0x11EF5F4", Slot = "5")]
			get
			{
				return default(RuntimeTool);
			}
		}

		[Token(Token = "0x17000256")]
		protected override float CurrentGridSize
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x11EF5FC", Offset = "0x11EF5FC", VA = "0x11EF5FC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x11EF604", Offset = "0x11EF604", VA = "0x11EF604", Slot = "7")]
		protected override void StartOverride()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x11EF6B0", Offset = "0x11EF6B0", VA = "0x11EF6B0", Slot = "10")]
		protected override void OnDestroyOverride()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x11EF794", Offset = "0x11EF794", VA = "0x11EF794", Slot = "11")]
		protected override bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x11EFD8C", Offset = "0x11EFD8C", VA = "0x11EFD8C", Slot = "12")]
		protected override void OnDrag()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x11F02F0", Offset = "0x11F02F0", VA = "0x11F02F0", Slot = "13")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x11F0364", Offset = "0x11F0364", VA = "0x11F0364", Slot = "15")]
		protected override void DrawOverride()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x11F0470", Offset = "0x11F0470", VA = "0x11F0470")]
		public ScaleHandle()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5E94", Offset = "0x8F5E94")]
	public class SceneGizmo : MonoBehaviour
	{
		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8074", Offset = "0x8F8074")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 pivot;

			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 radiusVector;

			[Token(Token = "0x400250E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneGizmo <>4__this;

			[Token(Token = "0x600320B")]
			[Address(RVA = "0x11F2EA4", Offset = "0x11F2EA4", VA = "0x11F2EA4")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x600320C")]
			[Address(RVA = "0x11F2F04", Offset = "0x11F2F04", VA = "0x11F2F04")]
			internal void <Update>b__0(object target, Quaternion value, float t, bool completed)
			{
			}
		}

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera SceneCamera;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Pivot;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 Size;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OrientationChanging;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OrientationChanged;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent ProjectionChanged;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_aspect;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera m_camera;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_xAlpha;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_yAlpha;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_zAlpha;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_animationDuration;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GUIStyle m_buttonStyle;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GUIStyle m_oldButtonStyle;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rect m_buttonRect;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_mouseOver;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_selectedAxis;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject m_collidersGO;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BoxCollider m_colliderProj;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BoxCollider m_colliderUp;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BoxCollider m_colliderDown;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private BoxCollider m_colliderForward;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private BoxCollider m_colliderBackward;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private BoxCollider m_colliderLeft;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BoxCollider m_colliderRight;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Collider[] m_colliders;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_position;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Quaternion m_rotation;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 m_gizmoPosition;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private IAnimationInfo m_rotateAnimation;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private IAnimationInfo m_positionAnimation;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_screenHeight;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_screenWidth;

		[Token(Token = "0x17000257")]
		private bool IsOrthographic
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x11F0494", Offset = "0x11F0494", VA = "0x11F0494")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x11F04C4", Offset = "0x11F04C4", VA = "0x11F04C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x11F0C94", Offset = "0x11F0C94", VA = "0x11F0C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x11F1A14", Offset = "0x11F1A14", VA = "0x11F1A14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x11F14C8", Offset = "0x11F14C8", VA = "0x11F14C8")]
		public void UpdateLayout()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x11F1364", Offset = "0x11F1364", VA = "0x11F1364")]
		private Vector3 GetGizmoPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x11F1B14", Offset = "0x11F1B14", VA = "0x11F1B14")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x11F1C48", Offset = "0x11F1C48", VA = "0x11F1C48")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x11F1D7C", Offset = "0x11F1D7C", VA = "0x11F1D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x11F2BBC", Offset = "0x11F2BBC", VA = "0x11F2BBC")]
		private void EnableColliders()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x11F1428", Offset = "0x11F1428", VA = "0x11F1428")]
		private void DisableColliders()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x11F2CF4", Offset = "0x11F2CF4", VA = "0x11F2CF4")]
		private Collider HitTest()
		{
			return null;
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x11F0554", Offset = "0x11F0554", VA = "0x11F0554")]
		private void InitColliders()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x11F189C", Offset = "0x11F189C", VA = "0x11F189C")]
		private bool UpdateAlpha(ref float alpha, Vector3 axis, float delta)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x11F2EAC", Offset = "0x11F2EAC", VA = "0x11F2EAC")]
		public SceneGizmo()
		{
		}
	}
}
namespace Battlehub.RTEditor
{
	[Token(Token = "0x20002D5")]
	public class DragField : MonoBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IDropHandler, IEndDragHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField Field;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float IncrementFactor;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D DragCursor;

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xB307F8", Offset = "0xB307F8", VA = "0xB307F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xB308AC", Offset = "0xB308AC", VA = "0xB308AC", Slot = "5")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xB308B0", Offset = "0xB308B0", VA = "0xB308B0", Slot = "6")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xB308B4", Offset = "0xB308B4", VA = "0xB308B4", Slot = "7")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xB308B8", Offset = "0xB308B8", VA = "0xB308B8", Slot = "4")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xB309F4", Offset = "0xB309F4", VA = "0xB309F4", Slot = "8")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xB30A3C", Offset = "0xB30A3C", VA = "0xB30A3C", Slot = "9")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xB30AAC", Offset = "0xB30AAC", VA = "0xB30AAC")]
		public DragField()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public delegate void ExposeToEditorChangeEvent<T>(ExposeToEditor obj, T oldValue, T newValue);
	[Token(Token = "0x20002D7")]
	public delegate void ExposeToEditorEvent(ExposeToEditor obj);
	[Token(Token = "0x20002D8")]
	[DisallowMultipleComponent]
	public class ExposeToEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8084", Offset = "0x8F8084")]
		private sealed class <>c
		{
			[Token(Token = "0x400250F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ExposeToEditor, int> <>9__33_0;

			[Token(Token = "0x600320E")]
			[Address(RVA = "0xB32F70", Offset = "0xB32F70", VA = "0xB32F70")]
			public <>c()
			{
			}

			[Token(Token = "0x600320F")]
			[Address(RVA = "0xB32F78", Offset = "0xB32F78", VA = "0xB32F78")]
			internal int <GetChildren>b__33_0(ExposeToEditor c)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool AddColliders;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool DisableOnAwake;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool m_applicationQuit;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HierarchyItem m_hierarchyItem;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ExposeToEditor> m_children;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ExposeToEditor m_parent;

		[Token(Token = "0x17000258")]
		public int ChildCount
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xB31AB8", Offset = "0xB31AB8", VA = "0xB31AB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000259")]
		public ExposeToEditor Parent
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xB31C88", Offset = "0xB31C88", VA = "0xB31C88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0xB31C90", Offset = "0xB31C90", VA = "0xB31C90")]
			set
			{
			}
		}

		[Token(Token = "0x14000042")]
		public static event ExposeToEditorEvent NameChanged
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0xB30AC0", Offset = "0xB30AC0", VA = "0xB30AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E98C", Offset = "0x90E98C")]
			add
			{
			}
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0xB30BBC", Offset = "0xB30BBC", VA = "0xB30BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E99C", Offset = "0x90E99C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event ExposeToEditorEvent TransformChanged
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xB30CB8", Offset = "0xB30CB8", VA = "0xB30CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E9AC", Offset = "0x90E9AC")]
			add
			{
			}
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xB30DB8", Offset = "0xB30DB8", VA = "0xB30DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E9BC", Offset = "0x90E9BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public static event ExposeToEditorEvent Awaked
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0xB30EB8", Offset = "0xB30EB8", VA = "0xB30EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E9CC", Offset = "0x90E9CC")]
			add
			{
			}
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xB30FB8", Offset = "0xB30FB8", VA = "0xB30FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E9DC", Offset = "0x90E9DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public static event ExposeToEditorEvent Started
		{
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0xB310B8", Offset = "0xB310B8", VA = "0xB310B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E9EC", Offset = "0x90E9EC")]
			add
			{
			}
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xB311B8", Offset = "0xB311B8", VA = "0xB311B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90E9FC", Offset = "0x90E9FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event ExposeToEditorEvent Enabled
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xB312B8", Offset = "0xB312B8", VA = "0xB312B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA0C", Offset = "0x90EA0C")]
			add
			{
			}
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xB313B8", Offset = "0xB313B8", VA = "0xB313B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA1C", Offset = "0x90EA1C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public static event ExposeToEditorEvent Disabled
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xB314B8", Offset = "0xB314B8", VA = "0xB314B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA2C", Offset = "0x90EA2C")]
			add
			{
			}
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0xB315B8", Offset = "0xB315B8", VA = "0xB315B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA3C", Offset = "0x90EA3C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public static event ExposeToEditorEvent Destroyed
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0xB316B8", Offset = "0xB316B8", VA = "0xB316B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA4C", Offset = "0x90EA4C")]
			add
			{
			}
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0xB317B8", Offset = "0xB317B8", VA = "0xB317B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA5C", Offset = "0x90EA5C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public static event ExposeToEditorChangeEvent<ExposeToEditor> ParentChanged
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0xB318B8", Offset = "0xB318B8", VA = "0xB318B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA6C", Offset = "0x90EA6C")]
			add
			{
			}
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xB319B8", Offset = "0xB319B8", VA = "0xB319B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA7C", Offset = "0x90EA7C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xB31B18", Offset = "0xB31B18", VA = "0xB31B18")]
		public ExposeToEditor GetChild(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xB31B88", Offset = "0xB31B88", VA = "0xB31B88")]
		public ExposeToEditor[] GetChildren()
		{
			return null;
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xB31E24", Offset = "0xB31E24", VA = "0xB31E24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xB32A40", Offset = "0xB32A40", VA = "0xB32A40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xB32AA8", Offset = "0xB32AA8", VA = "0xB32AA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xB32B10", Offset = "0xB32B10", VA = "0xB32B10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xB32B78", Offset = "0xB32B78", VA = "0xB32B78")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xB32B84", Offset = "0xB32B84", VA = "0xB32B84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xB32D28", Offset = "0xB32D28", VA = "0xB32D28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xB32DFC", Offset = "0xB32DFC", VA = "0xB32DFC")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xB32E9C", Offset = "0xB32E9C", VA = "0xB32E9C")]
		public ExposeToEditor()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class HierarchyItem : MonoBehaviour
	{
		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExposeToEditor m_parentExp;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExposeToEditor m_exposeToEditor;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_parentTransform;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isAwaked;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xB33000", Offset = "0xB33000", VA = "0xB33000")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xB33118", Offset = "0xB33118", VA = "0xB33118")]
		private ExposeToEditor CreateChainToParent(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xB33390", Offset = "0xB33390", VA = "0xB33390")]
		private void TryDestroyChainToParent(Transform parent, ExposeToEditor parentExp)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xB335AC", Offset = "0xB335AC", VA = "0xB335AC")]
		private bool HasExposeToEditorChildren(Transform parentTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xB3372C", Offset = "0xB3372C", VA = "0xB3372C")]
		private void UpdateChildren(Transform parentTransform, ExposeToEditor parentExp)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xB338E8", Offset = "0xB338E8", VA = "0xB338E8")]
		private void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xB33B08", Offset = "0xB33B08", VA = "0xB33B08")]
		public HierarchyItem()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F5F08", Offset = "0x8F5F08")]
	public class MouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera m_camera;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Target;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distance;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float XSpeed;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YSpeed;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float YMinLimit;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float YMaxLimit;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float DistanceMin;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float DistanceMax;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_x;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_y;

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xB33B10", Offset = "0xB33B10", VA = "0xB33B10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xB33B68", Offset = "0xB33B68", VA = "0xB33B68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xB33B6C", Offset = "0xB33B6C", VA = "0xB33B6C")]
		public void SyncAngles()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xB33BAC", Offset = "0xB33BAC", VA = "0xB33BAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xB33CFC", Offset = "0xB33CFC", VA = "0xB33CFC")]
		public void Zoom()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xB33C4C", Offset = "0xB33C4C", VA = "0xB33C4C")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xB34024", Offset = "0xB34024", VA = "0xB34024")]
		public MouseOrbit()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class Placeholder : MonoBehaviour
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string CommandsPlaceholder;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Id;

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xB34050", Offset = "0xB34050", VA = "0xB34050")]
		public Placeholder()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class RuntimeEditor : MonoBehaviour
	{
		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Opened;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent Closed;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] Prefabs;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Grid;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject SceneGizmo;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject EditButton;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject CloseButton;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject EditorRoot;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Camera SceneCamera;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RuntimeSceneView SceneView;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public KeyCode MultiselectKey;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public KeyCode RangeSelectKey;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public KeyCode DuplicateKey;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public KeyCode DuplicateKey2;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LayerMask m_raycastLayerMask;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_raycastLayer;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isOn;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RuntimeEditor m_instance;

		[Token(Token = "0x1700025A")]
		public int RaycastLayer
		{
			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0xB340B4", Offset = "0xB340B4", VA = "0xB340B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0xB340BC", Offset = "0xB340BC", VA = "0xB340BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public bool IsOn
		{
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0xB340F4", Offset = "0xB340F4", VA = "0xB340F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0xB340FC", Offset = "0xB340FC", VA = "0xB340FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public static RuntimeEditor Instance
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xB343B8", Offset = "0xB343B8", VA = "0xB343B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xB34408", Offset = "0xB34408", VA = "0xB34408")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xB34560", Offset = "0xB34560", VA = "0xB34560")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xB34664", Offset = "0xB34664", VA = "0xB34664")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xB34E6C", Offset = "0xB34E6C", VA = "0xB34E6C")]
		private void Destroy()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xB34F64", Offset = "0xB34F64", VA = "0xB34F64")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xB3505C", Offset = "0xB3505C", VA = "0xB3505C")]
		private void OnObjectAwaked(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xB35060", Offset = "0xB35060", VA = "0xB35060")]
		private void OnObjectStarted(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xB350B4", Offset = "0xB350B4", VA = "0xB350B4")]
		private void OnObjectEnabled(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xB35108", Offset = "0xB35108", VA = "0xB35108")]
		private void OnObjectDisabled(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xB3510C", Offset = "0xB3510C", VA = "0xB3510C")]
		private void OnObjectDestroyed(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xB34128", Offset = "0xB34128", VA = "0xB34128")]
		private void ShowEditor()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xB34270", Offset = "0xB34270", VA = "0xB34270")]
		private void CloseEditor()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xB35110", Offset = "0xB35110", VA = "0xB35110")]
		public RuntimeEditor()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class RuntimeHierarchy : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8094", Offset = "0x8F8094")]
		private sealed class <>c
		{
			[Token(Token = "0x4002511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, int> <>9__5_1;

			[Token(Token = "0x4002513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ExposeToEditor, GameObject> <>9__9_0;

			[Token(Token = "0x6003211")]
			[Address(RVA = "0x11D6E5C", Offset = "0x11D6E5C", VA = "0x11D6E5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003212")]
			[Address(RVA = "0x11D6E64", Offset = "0x11D6E64", VA = "0x11D6E64")]
			internal int <Start>b__5_1(GameObject t)
			{
				return default(int);
			}

			[Token(Token = "0x6003213")]
			[Address(RVA = "0x11D6EAC", Offset = "0x11D6EAC", VA = "0x11D6EAC")]
			internal GameObject <OnItemExpanding>b__9_0(ExposeToEditor obj)
			{
				return null;
			}
		}

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TreeViewPrefab;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TreeView m_treeView;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type TypeCriteria;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color DisabledItemColor;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color EnabledItemColor;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_lockSelection;

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xB35154", Offset = "0xB35154", VA = "0xB35154")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xB359C0", Offset = "0xB359C0", VA = "0xB359C0")]
		private bool CanExposeToEditor(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xB35A54", Offset = "0xB35A54", VA = "0xB35A54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xB35EA8", Offset = "0xB35EA8", VA = "0xB35EA8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xB36008", Offset = "0xB36008", VA = "0xB36008")]
		private void OnItemExpanding(object sender, ItemExpandingArgs e)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xB36354", Offset = "0xB36354", VA = "0xB36354")]
		private void OnEditorSelectionChanged()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xB36368", Offset = "0xB36368", VA = "0xB36368")]
		private void OnRuntimeSelectionChanged(UnityEngine.Object[] unselected)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xB363F8", Offset = "0xB363F8", VA = "0xB363F8")]
		private void OnSelectionChanged(object sender, SelectionChangedEventArgs e)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xB362AC", Offset = "0xB362AC", VA = "0xB362AC")]
		private void OnTreeViewSelectionChanged(IEnumerable oldItems, IEnumerable newItems)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xB36460", Offset = "0xB36460", VA = "0xB36460")]
		private void OnItemsRemoved(object sender, ItemsRemovedArgs e)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xB365FC", Offset = "0xB365FC", VA = "0xB365FC")]
		private void OnItemDataBinding(object sender, TreeViewItemDataBindingArgs e)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xB367F0", Offset = "0xB367F0", VA = "0xB367F0")]
		private void OnItemBeginDrag(object sender, ItemDragArgs e)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xB367F4", Offset = "0xB367F4", VA = "0xB367F4")]
		private void OnItemDrop(object sender, ItemDropArgs e)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xB37328", Offset = "0xB37328", VA = "0xB37328")]
		private void OnItemEndDrag(object sender, ItemDragArgs e)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xB3732C", Offset = "0xB3732C", VA = "0xB3732C")]
		private void OnObjectAwaked(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xB37410", Offset = "0xB37410", VA = "0xB37410")]
		private void OnObjectStarted(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xB37414", Offset = "0xB37414", VA = "0xB37414")]
		private void OnObjectEnabled(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xB375C4", Offset = "0xB375C4", VA = "0xB375C4")]
		private void OnObjectDisabled(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xB37774", Offset = "0xB37774", VA = "0xB37774")]
		private void OnObjectDestroyed(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xB37800", Offset = "0xB37800", VA = "0xB37800")]
		private void OnParentChanged(ExposeToEditor obj, ExposeToEditor oldParent, ExposeToEditor newParent)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xB378E0", Offset = "0xB378E0", VA = "0xB378E0")]
		private void OnNameChanged(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xB37AA4", Offset = "0xB37AA4", VA = "0xB37AA4")]
		public RuntimeHierarchy()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xB37BA0", Offset = "0xB37BA0", VA = "0xB37BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA8C", Offset = "0x90EA8C")]
		private bool <Start>b__5_0(GameObject f)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002DE")]
	public class RuntimePrefabs : MonoBehaviour
	{
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ListBoxPrefab;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ListBox m_listBox;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type TypeCriteria;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RuntimeEditor Editor;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_lockSelection;

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x11D6EDC", Offset = "0x11D6EDC", VA = "0x11D6EDC")]
		public static bool IsPrefab(Transform This)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x11D6FC8", Offset = "0x11D6FC8", VA = "0x11D6FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x11D7694", Offset = "0x11D7694", VA = "0x11D7694")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x11D7AA0", Offset = "0x11D7AA0", VA = "0x11D7AA0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x11D7B14", Offset = "0x11D7B14", VA = "0x11D7B14")]
		private void OnEditorSelectionChanged()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x11D7B28", Offset = "0x11D7B28", VA = "0x11D7B28")]
		private void OnRuntimeSelectionChanged(UnityEngine.Object[] unselected)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x11D7C28", Offset = "0x11D7C28", VA = "0x11D7C28")]
		private void OnSelectionChanged(object sender, SelectionChangedEventArgs e)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x11D7C90", Offset = "0x11D7C90", VA = "0x11D7C90")]
		private void OnListBoxSelectionChanged(IEnumerable oldItems, IEnumerable newItems)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x11D7F94", Offset = "0x11D7F94", VA = "0x11D7F94")]
		private void OnItemsRemoved(object sender, ItemsRemovedArgs e)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x11D8130", Offset = "0x11D8130", VA = "0x11D8130")]
		private void OnItemDataBinding(object sender, ItemDataBindingArgs e)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x11D8268", Offset = "0x11D8268", VA = "0x11D8268")]
		private void OnItemBeginDrag(object sender, ItemDragArgs e)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x11D826C", Offset = "0x11D826C", VA = "0x11D826C")]
		private void OnItemDrop(object sender, ItemDropArgs e)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x11D8A28", Offset = "0x11D8A28", VA = "0x11D8A28")]
		private void OnItemEndDrag(object sender, ItemDragArgs e)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x11D8A2C", Offset = "0x11D8A2C", VA = "0x11D8A2C")]
		private void OnObjectDestroyed(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x11D8AB8", Offset = "0x11D8AB8", VA = "0x11D8AB8")]
		public RuntimePrefabs()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public delegate void UnityEditorToolChanged();
	[Token(Token = "0x20002E0")]
	public class UnityEditorToolsListener
	{
		[Token(Token = "0x1400004A")]
		public static event UnityEditorToolChanged ToolChanged
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x11D91C0", Offset = "0x11D91C0", VA = "0x11D91C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EA9C", Offset = "0x90EA9C")]
			add
			{
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x11D9634", Offset = "0x11D9634", VA = "0x11D9634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EAAC", Offset = "0x90EAAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x11E1EC8", Offset = "0x11E1EC8", VA = "0x11E1EC8")]
		public static void Update()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x11E1ECC", Offset = "0x11E1ECC", VA = "0x11E1ECC")]
		public UnityEditorToolsListener()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public delegate void RuntimeSelectionChanged(UnityEngine.Object[] unselectedObjects);
	[Token(Token = "0x20002E2")]
	public static class RuntimeSelection
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UnityEngine.Object m_activeObject;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static UnityEngine.Object[] m_objects;

		[Token(Token = "0x1700025D")]
		public static GameObject activeGameObject
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x11DAFA4", Offset = "0x11DAFA4", VA = "0x11DAFA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x11DC8F0", Offset = "0x11DC8F0", VA = "0x11DC8F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public static UnityEngine.Object activeObject
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x11DCFCC", Offset = "0x11DCFCC", VA = "0x11DCFCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0x11DD01C", Offset = "0x11DD01C", VA = "0x11DD01C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public static UnityEngine.Object[] objects
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x11DD8C8", Offset = "0x11DD8C8", VA = "0x11DD8C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0x11D7D34", Offset = "0x11D7D34", VA = "0x11D7D34")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public static GameObject[] gameObjects
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0x11D7BB4", Offset = "0x11D7BB4", VA = "0x11D7BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public static Transform activeTransform
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0x11DAC88", Offset = "0x11DAC88", VA = "0x11DAC88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x11DD918", Offset = "0x11DD918", VA = "0x11DD918")]
			set
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public static event RuntimeSelectionChanged SelectionChanged
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x11D7598", Offset = "0x11D7598", VA = "0x11D7598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EABC", Offset = "0x90EABC")]
			add
			{
			}
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x11D79A4", Offset = "0x11D79A4", VA = "0x11D79A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EACC", Offset = "0x90EACC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x11DD9BC", Offset = "0x11DD9BC", VA = "0x11DD9BC")]
		public static void Select(UnityEngine.Object activeGameObject, UnityEngine.Object[] selection)
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class RuntimeSceneView : MonoBehaviour, IDropHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F80A4", Offset = "0x8F80A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, bool> <>9__26_0;

			[Token(Token = "0x4002516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GameObject, Transform> <>9__26_1;

			[Token(Token = "0x4002517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Transform, bool> <>9__26_2;

			[Token(Token = "0x4002518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GameObject, bool> <>9__26_3;

			[Token(Token = "0x4002519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<GameObject, Transform> <>9__26_4;

			[Token(Token = "0x400251A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Transform, bool> <>9__26_5;

			[Token(Token = "0x400251B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<GameObject, bool> <>9__26_6;

			[Token(Token = "0x400251C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<GameObject, Transform> <>9__26_7;

			[Token(Token = "0x400251D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Transform, bool> <>9__26_8;

			[Token(Token = "0x6003215")]
			[Address(RVA = "0x11DCC1C", Offset = "0x11DCC1C", VA = "0x11DCC1C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003216")]
			[Address(RVA = "0x11DCC24", Offset = "0x11DCC24", VA = "0x11DCC24")]
			internal bool <OnRuntimeToolChanged>b__26_0(GameObject g)
			{
				return default(bool);
			}

			[Token(Token = "0x6003217")]
			[Address(RVA = "0x11DCCB4", Offset = "0x11DCCB4", VA = "0x11DCCB4")]
			internal Transform <OnRuntimeToolChanged>b__26_1(GameObject g)
			{
				return null;
			}

			[Token(Token = "0x6003218")]
			[Address(RVA = "0x11DCCE4", Offset = "0x11DCCE4", VA = "0x11DCCE4")]
			internal bool <OnRuntimeToolChanged>b__26_2(Transform g)
			{
				return default(bool);
			}

			[Token(Token = "0x6003219")]
			[Address(RVA = "0x11DCD5C", Offset = "0x11DCD5C", VA = "0x11DCD5C")]
			internal bool <OnRuntimeToolChanged>b__26_3(GameObject g)
			{
				return default(bool);
			}

			[Token(Token = "0x600321A")]
			[Address(RVA = "0x11DCDEC", Offset = "0x11DCDEC", VA = "0x11DCDEC")]
			internal Transform <OnRuntimeToolChanged>b__26_4(GameObject g)
			{
				return null;
			}

			[Token(Token = "0x600321B")]
			[Address(RVA = "0x11DCE1C", Offset = "0x11DCE1C", VA = "0x11DCE1C")]
			internal bool <OnRuntimeToolChanged>b__26_5(Transform g)
			{
				return default(bool);
			}

			[Token(Token = "0x600321C")]
			[Address(RVA = "0x11DCE94", Offset = "0x11DCE94", VA = "0x11DCE94")]
			internal bool <OnRuntimeToolChanged>b__26_6(GameObject g)
			{
				return default(bool);
			}

			[Token(Token = "0x600321D")]
			[Address(RVA = "0x11DCF24", Offset = "0x11DCF24", VA = "0x11DCF24")]
			internal Transform <OnRuntimeToolChanged>b__26_7(GameObject g)
			{
				return null;
			}

			[Token(Token = "0x600321E")]
			[Address(RVA = "0x11DCF54", Offset = "0x11DCF54", VA = "0x11DCF54")]
			internal bool <OnRuntimeToolChanged>b__26_8(Transform g)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isPointerOverSceneView;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D ViewTexture;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D MoveTexture;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera Camera;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Pivot;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_pan;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_rotate;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_handleInput;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool m_lockInput;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_lastMousePosition;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MouseOrbit m_mouseOrbit;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSensitivity;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float ZoomSensitivity;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float PanSensitivity;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PositionHandle m_positionHandle;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RotationHandle m_rotationHandle;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ScaleHandle m_scaleHandle;

		[Token(Token = "0x17000262")]
		public bool IsPointerOver
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x11D8B3C", Offset = "0x11D8B3C", VA = "0x11D8B3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x11D8B44", Offset = "0x11D8B44", VA = "0x11D8B44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x11D9470", Offset = "0x11D9470", VA = "0x11D9470")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x11D9730", Offset = "0x11D9730", VA = "0x11D9730")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x11D9A5C", Offset = "0x11D9A5C", VA = "0x11D9A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x11D9F48", Offset = "0x11D9F48", VA = "0x11D9F48")]
		public void LockInput()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x11D984C", Offset = "0x11D984C", VA = "0x11D984C")]
		public void UnlockInput()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x11D92BC", Offset = "0x11D92BC", VA = "0x11D92BC")]
		public void OnProjectionChanged()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x11D9F54", Offset = "0x11D9F54", VA = "0x11D9F54")]
		private void OnRuntimeToolChanged()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x11DAD9C", Offset = "0x11DAD9C", VA = "0x11DAD9C")]
		private void OnUnityEditorToolChanged()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x11DADA0", Offset = "0x11DADA0", VA = "0x11DADA0")]
		private void OnRuntimeSelectionChanged(UnityEngine.Object[] unselected)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x11D9A60", Offset = "0x11D9A60", VA = "0x11D9A60")]
		private void HandleInput()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x11DB03C", Offset = "0x11DB03C", VA = "0x11DB03C")]
		private void Focus()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x11DBA28", Offset = "0x11DBA28", VA = "0x11DBA28")]
		private Bounds CalculateBounds(Transform t)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x11DBFD0", Offset = "0x11DBFD0", VA = "0x11DBFD0")]
		private void CalculateBounds(Transform t, ref Bounds totalBounds)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x11DBDBC", Offset = "0x11DBDBC", VA = "0x11DBDBC")]
		public static Bounds TransformBounds(Matrix4x4 matrix, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x11DB718", Offset = "0x11DB718", VA = "0x11DB718")]
		private void Pan()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x11DC550", Offset = "0x11DC550", VA = "0x11DC550", Slot = "4")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x11DC8F4", Offset = "0x11DC8F4", VA = "0x11DC8F4", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x11DAB30", Offset = "0x11DAB30", VA = "0x11DAB30")]
		private void SetCursor()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x11DC900", Offset = "0x11DC900", VA = "0x11DC900", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x11DC97C", Offset = "0x11DC97C", VA = "0x11DC97C")]
		public RuntimeSceneView()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x11DC998", Offset = "0x11DC998", VA = "0x11DC998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EADC", Offset = "0x90EADC")]
		private void <Focus>b__30_0(object target, Vector3 value, float t, bool completed)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x11DCA78", Offset = "0x11DCA78", VA = "0x11DCA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EAEC", Offset = "0x90EAEC")]
		private void <Focus>b__30_1(object target, float value, float t, bool completed)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x11DCB0C", Offset = "0x11DCB0C", VA = "0x11DCB0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EAFC", Offset = "0x90EAFC")]
		private void <Focus>b__30_2(object target, float value, float t, bool completed)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class RuntimeToolsPanel : MonoBehaviour
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_handleValueChange;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle ViewToggle;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle MoveToggle;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle RotateToggle;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle ScaleToggle;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle PivotRotationToggle;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Toggle WireframeToggle;

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x11DDA50", Offset = "0x11DDA50", VA = "0x11DDA50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x11DE34C", Offset = "0x11DE34C", VA = "0x11DE34C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x11DE8A8", Offset = "0x11DE8A8", VA = "0x11DE8A8")]
		private void OnViewToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x11DE9B0", Offset = "0x11DE9B0", VA = "0x11DE9B0")]
		private void OnMoveToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x11DEAB8", Offset = "0x11DEAB8", VA = "0x11DEAB8")]
		private void OnRotateToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x11DEBC0", Offset = "0x11DEBC0", VA = "0x11DEBC0")]
		private void OnScaleToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x11DECC8", Offset = "0x11DECC8", VA = "0x11DECC8")]
		private void OnPivotRotationToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x11DECDC", Offset = "0x11DECDC", VA = "0x11DECDC")]
		private void OnWireframeToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x11DE150", Offset = "0x11DE150", VA = "0x11DE150")]
		private void OnPivotRotationChanged()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x11DDEBC", Offset = "0x11DDEBC", VA = "0x11DDEBC")]
		private void OnRuntimeToolChanged()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x11DECE0", Offset = "0x11DECE0", VA = "0x11DECE0")]
		public RuntimeToolsPanel()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class TransformComponent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F80B4", Offset = "0x8F80B4")]
		private sealed class <>c
		{
			[Token(Token = "0x400251E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400251F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, bool> <>9__34_0;

			[Token(Token = "0x4002520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GameObject, Transform> <>9__34_1;

			[Token(Token = "0x4002521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Transform, bool> <>9__34_2;

			[Token(Token = "0x4002522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Transform, float> <>9__35_0;

			[Token(Token = "0x4002523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Transform, float> <>9__35_1;

			[Token(Token = "0x4002524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Transform, float> <>9__35_2;

			[Token(Token = "0x4002525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Transform, float> <>9__35_3;

			[Token(Token = "0x4002526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Transform, float> <>9__35_4;

			[Token(Token = "0x4002527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Transform, float> <>9__35_5;

			[Token(Token = "0x4002528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<Transform, float> <>9__35_6;

			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<Transform, float> <>9__35_7;

			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<Transform, float> <>9__35_8;

			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<Transform, bool> <>9__35_9;

			[Token(Token = "0x6003220")]
			[Address(RVA = "0x11E15FC", Offset = "0x11E15FC", VA = "0x11E15FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6003221")]
			[Address(RVA = "0x11E1604", Offset = "0x11E1604", VA = "0x11E1604")]
			internal bool <OnRuntimeSelectionChanged>b__34_0(GameObject g)
			{
				return default(bool);
			}

			[Token(Token = "0x6003222")]
			[Address(RVA = "0x11E1694", Offset = "0x11E1694", VA = "0x11E1694")]
			internal Transform <OnRuntimeSelectionChanged>b__34_1(GameObject g)
			{
				return null;
			}

			[Token(Token = "0x6003223")]
			[Address(RVA = "0x11E16F0", Offset = "0x11E16F0", VA = "0x11E16F0")]
			internal bool <OnRuntimeSelectionChanged>b__34_2(Transform t)
			{
				return default(bool);
			}

			[Token(Token = "0x6003224")]
			[Address(RVA = "0x11E1794", Offset = "0x11E1794", VA = "0x11E1794")]
			internal float <UpdateAllFields>b__35_0(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x6003225")]
			[Address(RVA = "0x11E17C4", Offset = "0x11E17C4", VA = "0x11E17C4")]
			internal float <UpdateAllFields>b__35_1(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x6003226")]
			[Address(RVA = "0x11E17FC", Offset = "0x11E17FC", VA = "0x11E17FC")]
			internal float <UpdateAllFields>b__35_2(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x6003227")]
			[Address(RVA = "0x11E1834", Offset = "0x11E1834", VA = "0x11E1834")]
			internal float <UpdateAllFields>b__35_3(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x6003228")]
			[Address(RVA = "0x11E1888", Offset = "0x11E1888", VA = "0x11E1888")]
			internal float <UpdateAllFields>b__35_4(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x6003229")]
			[Address(RVA = "0x11E18E0", Offset = "0x11E18E0", VA = "0x11E18E0")]
			internal float <UpdateAllFields>b__35_5(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x600322A")]
			[Address(RVA = "0x11E1938", Offset = "0x11E1938", VA = "0x11E1938")]
			internal float <UpdateAllFields>b__35_6(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x600322B")]
			[Address(RVA = "0x11E1968", Offset = "0x11E1968", VA = "0x11E1968")]
			internal float <UpdateAllFields>b__35_7(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x600322C")]
			[Address(RVA = "0x11E19A0", Offset = "0x11E19A0", VA = "0x11E19A0")]
			internal float <UpdateAllFields>b__35_8(Transform t)
			{
				return default(float);
			}

			[Token(Token = "0x600322D")]
			[Address(RVA = "0x11E19D8", Offset = "0x11E19D8", VA = "0x11E19D8")]
			internal bool <UpdateAllFields>b__35_9(Transform t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F80C4", Offset = "0x8F80C4")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x400252C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IEnumerable<float> values;

			[Token(Token = "0x600322E")]
			[Address(RVA = "0x11E1278", Offset = "0x11E1278", VA = "0x11E1278")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x600322F")]
			[Address(RVA = "0x11E1A20", Offset = "0x11E1A20", VA = "0x11E1A20")]
			internal bool <SetFieldValue>b__0(float p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle EnableDisableToggle;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TransformComponentUI;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField PositionX;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputField PositionY;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputField PositionZ;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField RotationX;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputField RotationY;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InputField RotationZ;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InputField ScaleX;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InputField ScaleY;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InputField ScaleZ;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Button Reset;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform[] m_transforms;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HashSet<GameObject> m_selectedGameObjects;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_handleTransformChange;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x11DECF0", Offset = "0x11DECF0", VA = "0x11DECF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x11DED58", Offset = "0x11DED58", VA = "0x11DED58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x11DEDC0", Offset = "0x11DEDC0", VA = "0x11DEDC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x11DFAB4", Offset = "0x11DFAB4", VA = "0x11DFAB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x11E02F8", Offset = "0x11E02F8", VA = "0x11E02F8")]
		private void HandlePositionChanged()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x11E0464", Offset = "0x11E0464", VA = "0x11E0464")]
		private void HandleRotationChanged()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x11E0644", Offset = "0x11E0644", VA = "0x11E0644")]
		private void HandleScaleChanged()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x11E07B0", Offset = "0x11E07B0", VA = "0x11E07B0")]
		private void EndEditField(InputField field)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x11E0848", Offset = "0x11E0848", VA = "0x11E0848")]
		private void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x11E08A8", Offset = "0x11E08A8", VA = "0x11E08A8")]
		private void OnPositionXChanged(string value)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x11E08AC", Offset = "0x11E08AC", VA = "0x11E08AC")]
		private void OnPositionYChanged(string value)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x11E08B0", Offset = "0x11E08B0", VA = "0x11E08B0")]
		private void OnPositionZChanged(string value)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x11E08B4", Offset = "0x11E08B4", VA = "0x11E08B4")]
		private void OnRotationXChanged(string value)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x11E08B8", Offset = "0x11E08B8", VA = "0x11E08B8")]
		private void OnRotationYChanged(string value)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x11E08BC", Offset = "0x11E08BC", VA = "0x11E08BC")]
		private void OnRotationZChanged(string value)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x11E08C0", Offset = "0x11E08C0", VA = "0x11E08C0")]
		private void OnScaleXChanged(string value)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x11E08C4", Offset = "0x11E08C4", VA = "0x11E08C4")]
		private void OnScaleYChanged(string value)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x11E08C8", Offset = "0x11E08C8", VA = "0x11E08C8")]
		private void OnScaleZChanged(string value)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x11E08CC", Offset = "0x11E08CC", VA = "0x11E08CC")]
		private void OnTransformChanged(ExposeToEditor obj)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x11DF60C", Offset = "0x11DF60C", VA = "0x11DF60C")]
		private void OnRuntimeSelectionChanged(UnityEngine.Object[] unselected)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x11E0974", Offset = "0x11E0974", VA = "0x11E0974")]
		private void UpdateAllFields()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x11E111C", Offset = "0x11E111C", VA = "0x11E111C")]
		private void SetFieldValue(InputField field, IEnumerable<float> values)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x11E1280", Offset = "0x11E1280", VA = "0x11E1280")]
		private void OnResetClick()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x11E145C", Offset = "0x11E145C", VA = "0x11E145C")]
		private void OnEnableDisableValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x11E1520", Offset = "0x11E1520", VA = "0x11E1520")]
		public TransformComponent()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5F40", Offset = "0x8F5F40")]
	public class ViewportFitter : MonoBehaviour
	{
		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent ViewportRectChanged;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_viewport;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_viewportPosition;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_viewportWidth;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_viewportHeight;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera Camera;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x11E1ED4", Offset = "0x11E1ED4", VA = "0x11E1ED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x11E217C", Offset = "0x11E217C", VA = "0x11E217C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x11E2440", Offset = "0x11E2440", VA = "0x11E2440")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x11E24D8", Offset = "0x11E24D8", VA = "0x11E24D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x11E25B8", Offset = "0x11E25B8", VA = "0x11E25B8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x11E2214", Offset = "0x11E2214", VA = "0x11E2214")]
		private void UpdateViewport()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x11E2768", Offset = "0x11E2768", VA = "0x11E2768")]
		public ViewportFitter()
		{
		}
	}
}
namespace AudioStream
{
	[Token(Token = "0x20002E7")]
	public static class ComboBoxLayout
	{
		[Token(Token = "0x20006FD")]
		private class ComboBox
		{
			[Token(Token = "0x400252D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x400252E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] items;

			[Token(Token = "0x400252F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int selectedItemIndex;

			[Token(Token = "0x4002530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int dropDownItemsCount;

			[Token(Token = "0x4002531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GUIStyle style;

			[Token(Token = "0x4002532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GUILayoutOption[] options;

			[Token(Token = "0x4002533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2 scroll;

			[Token(Token = "0x4002534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Rect rectValue;

			[Token(Token = "0x4002535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Rect rectDropDownButton;

			[Token(Token = "0x4002536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Rect rectComboBox;

			[Token(Token = "0x4002537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool expanded;

			[Token(Token = "0x6003230")]
			[Address(RVA = "0xE630AC", Offset = "0xE630AC", VA = "0xE630AC")]
			public ComboBox(int _id, string[] _items, int _selectedItemIndex, int _dropDownItemsCount, GUIStyle _style, params GUILayoutOption[] _options)
			{
			}
		}

		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F80D4", Offset = "0x8F80D4")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6003231")]
			[Address(RVA = "0xE630A4", Offset = "0xE630A4", VA = "0xE630A4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6003232")]
			[Address(RVA = "0xE63774", Offset = "0xE63774", VA = "0xE63774")]
			internal bool <BeginLayout>b__0(ComboBox cb)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F80E4", Offset = "0x8F80E4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6003233")]
			[Address(RVA = "0xE635F0", Offset = "0xE635F0", VA = "0xE635F0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6003234")]
			[Address(RVA = "0xE637B0", Offset = "0xE637B0", VA = "0xE637B0")]
			internal bool <EndLayout>b__0(ComboBox cb)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<ComboBox> comboboxes;

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xE62B1C", Offset = "0xE62B1C", VA = "0xE62B1C")]
		public static int BeginLayout(int id, string[] items, int selectedItemIndex, int dropDownItemsCount, GUIStyle style, params GUILayoutOption[] options)
		{
			return default(int);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xE6319C", Offset = "0xE6319C", VA = "0xE6319C")]
		private static void DisplayLayout(ComboBox combobox)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xE634D0", Offset = "0xE634D0", VA = "0xE634D0")]
		public static void EndLayout(int id)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xE635F8", Offset = "0xE635F8", VA = "0xE635F8")]
		public static void EndAllLayouts()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[ExecuteInEditMode]
	public class AudioStreamNetMQClientDemo : MonoBehaviour
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioStreamNetMQClient audioStreamNetMQClient;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder gauge;

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x10944E4", Offset = "0x10944E4", VA = "0x10944E4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x109611C", Offset = "0x109611C", VA = "0x109611C")]
		public AudioStreamNetMQClientDemo()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[ExecuteInEditMode]
	public class AudioStreamNetMQSourceDemo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F80F4", Offset = "0x8F80F4")]
		private sealed class <>c
		{
			[Token(Token = "0x400253A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400253B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, string> <>9__5_0;

			[Token(Token = "0x6003236")]
			[Address(RVA = "0x10989E8", Offset = "0x10989E8", VA = "0x10989E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6003237")]
			[Address(RVA = "0x10989F0", Offset = "0x10989F0", VA = "0x10989F0")]
			internal string <OnGUI>b__5_0(string s)
			{
				return null;
			}
		}

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioStreamNetMQSource audioStreamNetMQSource;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource @as;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frameSizeEnumSelection;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder gauge;

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x109697C", Offset = "0x109697C", VA = "0x109697C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x10969E4", Offset = "0x10969E4", VA = "0x10969E4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1098910", Offset = "0x1098910", VA = "0x1098910")]
		public AudioStreamNetMQSourceDemo()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class AudioSourceOutputDevice : MonoBehaviour
	{
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FCF4C", Offset = "0x8FCF4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FCF4C", Offset = "0x8FCF4C")]
		public LogLevel logLevel;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FCFAC", Offset = "0x8FCFAC")]
		public int outputDriverID;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FCFE4", Offset = "0x8FCFE4")]
		public bool muteAfterRouting;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD01C", Offset = "0x8FD01C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FD01C", Offset = "0x8FD01C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD01C", Offset = "0x8FD01C")]
		public int inputLatency;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD098", Offset = "0x8FD098")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD098", Offset = "0x8FD098")]
		public float latencyBlock;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD0F8", Offset = "0x8FD0F8")]
		public float latencyTotal;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD130", Offset = "0x8FD130")]
		public float latencyAverage;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD168", Offset = "0x8FD168")]
		public EventWithStringParameter OnRedirectStarted;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EventWithStringParameter OnRedirectStopped;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EventWithStringStringParameter OnError;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string gameObjectName;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool ready;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public string fmodVersion;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected FMODSystemOutputDevice fmodsystem;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Sound sound;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected RESULT result;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RESULT lastError;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1081EBC", Offset = "0x1081EBC", VA = "0x1081EBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x10821A4", Offset = "0x10821A4", VA = "0x10821A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x1082224", Offset = "0x1082224", VA = "0x1082224")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x108234C", Offset = "0x108234C", VA = "0x108234C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x1081F0C", Offset = "0x1081F0C", VA = "0x1081F0C")]
		private void StartFMODSound()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x1082350", Offset = "0x1082350", VA = "0x1082350")]
		private void StopFMODSound()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x10827F8", Offset = "0x10827F8", VA = "0x10827F8")]
		private void ERRCHECK(RESULT result, string customMessage, bool throwOnError = true)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x108275C", Offset = "0x108275C", VA = "0x108275C")]
		private void LOG(LogLevel requestedLogLevel, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x1082B4C", Offset = "0x1082B4C", VA = "0x1082B4C")]
		public string GetLastError(out RESULT errorCode)
		{
			return null;
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1082B5C", Offset = "0x1082B5C", VA = "0x1082B5C")]
		public void SetOutput(int _outputDriverID)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x1082BA0", Offset = "0x1082BA0", VA = "0x1082BA0")]
		public PCMCallbackBuffer PCMCallbackBuffer()
		{
			return null;
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x1082C2C", Offset = "0x1082C2C", VA = "0x1082C2C")]
		public void SetMixMatrix(float[] matrix, int outchannels, int inchannels, int inchannel_hop)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1082ED0", Offset = "0x1082ED0", VA = "0x1082ED0")]
		public AudioSourceOutputDevice()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class FMODSystemOutputDevice
	{
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<IntPtr, PCMCallbackBuffer> pcmCallbackBuffers;

		[Token(Token = "0x40013CE")]
		private const int cbuffer_capacity = 100000;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int OutputDeviceID;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly FMOD.System System;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string VersionString;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint DSPBufferLength;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly int DSPBufferCount;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr SystemHandle;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RESULT result;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SOUND_PCMREAD_CALLBACK pcmreadcallback;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SOUND_PCMSETPOS_CALLBACK pcmsetposcallback;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Sound> sounds;

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xE6428C", Offset = "0xE6428C", VA = "0xE6428C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90EB0C", Offset = "0x90EB0C")]
		private static RESULT PCMReadCallback(IntPtr soundraw, IntPtr data, uint datalen)
		{
			return default(RESULT);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xE64ABC", Offset = "0xE64ABC", VA = "0xE64ABC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90EB70", Offset = "0x90EB70")]
		private static RESULT PCMSetPosCallback(IntPtr soundraw, int subsound, uint position, TIMEUNIT postype)
		{
			return default(RESULT);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xE64DD4", Offset = "0xE64DD4", VA = "0xE64DD4")]
		public static PCMCallbackBuffer PCMCallbackBuffer(Sound sound)
		{
			return null;
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xE64EC0", Offset = "0xE64EC0", VA = "0xE64EC0")]
		public FMODSystemOutputDevice(int forOutputDevice, SPEAKERMODE withSpeakerMode, int withNumOfRawSpeakers, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xE657D8", Offset = "0xE657D8", VA = "0xE657D8")]
		public void Release(LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xE65A2C", Offset = "0xE65A2C", VA = "0xE65A2C", Slot = "1")]
		~FMODSystemOutputDevice()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xE65ADC", Offset = "0xE65ADC", VA = "0xE65ADC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xE65BA8", Offset = "0xE65BA8", VA = "0xE65BA8")]
		public Sound CreateAndPlaySound(int soundChannels, int latency, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
			return default(Sound);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xE66670", Offset = "0xE66670", VA = "0xE66670")]
		public void StopSound(Sound sound, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xE66BC0", Offset = "0xE66BC0", VA = "0xE66BC0")]
		public void Feed(Sound sound, byte[] bpcm)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xE66CE0", Offset = "0xE66CE0", VA = "0xE66CE0")]
		public int SoundsPlaying()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002EC")]
	public static class FMODSystemsManager
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, FMODSystemOutputDevice> systems4devices;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FMODSystem system4AudioSourcesPlayback;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int system4AudioSourcesPlayback_refCount;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<FMODSystem> systems4FMODPlayback;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static DEBUG_CALLBACK DEBUG_CALLBACK_DELEGATE;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xE670B0", Offset = "0xE670B0", VA = "0xE670B0")]
		public static FMODSystemOutputDevice FMODSystemForOutputDevice(int forOutputDevice, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
			return null;
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xE67930", Offset = "0xE67930", VA = "0xE67930")]
		public static void FMODSystemForOutputDevice_Release(FMODSystemOutputDevice fmodsystem, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xE67CF8", Offset = "0xE67CF8", VA = "0xE67CF8")]
		public static List<string> AvailableOutputs(LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
			return null;
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xE682CC", Offset = "0xE682CC", VA = "0xE682CC")]
		public static List<int> AvailableOutputsChannels(LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
			return null;
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xE687DC", Offset = "0xE687DC", VA = "0xE687DC")]
		public static FMODSystem FMODSystem4AudioSources(SPEAKERMODE withSpeakerMode, int withNumOfRawSpeakers, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
			return null;
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xE689D4", Offset = "0xE689D4", VA = "0xE689D4")]
		public static void FMODSystem4AudioSources_Release(FMODSystem fmodsystem, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xE68C94", Offset = "0xE68C94", VA = "0xE68C94")]
		public static FMODSystem FMODSystem4FMODPlayback(FMODSystem currentSystem, SPEAKERMODE withSpeakerMode, int withNumOfRawSpeakers, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xE68EA4", Offset = "0xE68EA4", VA = "0xE68EA4")]
		public static void FMODSystem4FMODPlayback_Release(FMODSystem fmodsystem, LogLevel logLevel, string gameObjectName, EventWithStringStringParameter onError)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xE66DB4", Offset = "0xE66DB4", VA = "0xE66DB4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90EBD4", Offset = "0x90EBD4")]
		private static RESULT DEBUG_CALLBACK(DEBUG_FLAGS flags, StringWrapper file, int line, StringWrapper func, StringWrapper message)
		{
			return default(RESULT);
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xE690D8", Offset = "0xE690D8", VA = "0xE690D8")]
		public static void InitializeFMODDiagnostics(DEBUG_FLAGS flags)
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class PCMCallbackBuffer
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint datalen;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint maxdatalen;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint mindatalen;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool underflow;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BasicBufferByte pcmReadCallback_Buffer;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object pcmReadCallback_BufferLock;

		[Token(Token = "0x17000263")]
		public int Available
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xE64B98", Offset = "0xE64B98", VA = "0xE64B98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000264")]
		public int Capacity
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xE64B68", Offset = "0xE64B68", VA = "0xE64B68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xE64AC4", Offset = "0xE64AC4", VA = "0xE64AC4")]
		public PCMCallbackBuffer(int capacity)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xE64D18", Offset = "0xE64D18", VA = "0xE64D18")]
		public void Enqueue(byte[] bytes)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xE64BC8", Offset = "0xE64BC8", VA = "0xE64BC8")]
		public byte[] Dequeue(int requiredCount)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EE")]
	public class OutputDevicesConfiguration : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000701")]
		public class OutputDeviceConfiguration
		{
			[Token(Token = "0x400253C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9033BC", Offset = "0x9033BC")]
			public SPEAKERMODE SPEAKERMODE;

			[Token(Token = "0x400253D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9033F4", Offset = "0x9033F4")]
			public int NumOfRawSpeakers;

			[Token(Token = "0x6003238")]
			[Address(RVA = "0xE6D318", Offset = "0xE6D318", VA = "0xE6D318")]
			public OutputDeviceConfiguration()
			{
			}
		}

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD1C0", Offset = "0x8FD1C0")]
		public List<OutputDeviceConfiguration> outputDevicesConfiguration;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OutputDevicesConfiguration _instance;

		[Token(Token = "0x17000265")]
		public static OutputDevicesConfiguration Instance
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xE67878", Offset = "0xE67878", VA = "0xE67878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xE6D2A8", Offset = "0xE6D2A8", VA = "0xE6D2A8")]
		public OutputDevicesConfiguration()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F5FD4", Offset = "0x8F5FD4")]
	public class AudioStream : AudioStreamBase
	{
		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8104", Offset = "0x8F8104")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400253E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400253F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStream <>4__this;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600323C")]
				[Address(RVA = "0x108573C", Offset = "0x108573C", VA = "0x108573C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600323E")]
				[Address(RVA = "0x10857AC", Offset = "0x10857AC", VA = "0x10857AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003239")]
			[Address(RVA = "0x1082FB4", Offset = "0x1082FB4", VA = "0x1082FB4")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600323A")]
			[Address(RVA = "0x108552C", Offset = "0x108552C", VA = "0x108552C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600323B")]
			[Address(RVA = "0x1085530", Offset = "0x1085530", VA = "0x1085530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600323D")]
			[Address(RVA = "0x1085744", Offset = "0x1085744", VA = "0x1085744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private AudioSourceOutputDevice audioSourceOutputDevice;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private byte[] streamDataBytes;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GCHandle streamDataBytesPinned;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private IntPtr streamDataBytesPtr;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float[] oafrDataArr;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private SOUND_FORMAT stream_sound_format;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private byte stream_bytes_per_sample;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		private bool _networkStarving;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
		private bool eof;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int pcmCallbackWarmup;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private readonly int pcmCallbackWarmupMax;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private double dspTime_Last;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool networkLoopRunning;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Thread networkThread;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private ThreadSafeListFloat networkAudioQueue;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD1F8", Offset = "0x8FD1F8")]
		private uint <readlength>k__BackingField;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD208", Offset = "0x8FD208")]
		private double <streamTimeoutBase>k__BackingField;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private double streamTimeout_Min;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private double streamTimeout_Max;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private TimeSpan spanTimeout;

		[Token(Token = "0x17000266")]
		public float networkAudioQueueFullness
		{
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x108429C", Offset = "0x108429C", VA = "0x108429C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000267")]
		public int networkAudioQueueAvailable
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x10842FC", Offset = "0x10842FC", VA = "0x10842FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000268")]
		public uint readlength
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x1083D8C", Offset = "0x1083D8C", VA = "0x1083D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EC9C", Offset = "0x90EC9C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x1083D84", Offset = "0x1083D84", VA = "0x1083D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ECAC", Offset = "0x90ECAC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public double streamTimeoutBase
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x1083454", Offset = "0x1083454", VA = "0x1083454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ECBC", Offset = "0x90ECBC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x108344C", Offset = "0x108344C", VA = "0x108344C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ECCC", Offset = "0x90ECCC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x1082F40", Offset = "0x1082F40", VA = "0x1082F40", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90EC38", Offset = "0x90EC38")]
		public override IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1082FE0", Offset = "0x1082FE0", VA = "0x1082FE0")]
		private void PCMReaderCallback(float[] data)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x108345C", Offset = "0x108345C", VA = "0x108345C", Slot = "12")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x1083680", Offset = "0x1083680", VA = "0x1083680", Slot = "4")]
		protected override void StreamStarting(int samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x1083E68", Offset = "0x1083E68", VA = "0x1083E68", Slot = "5")]
		protected override bool StreamStarving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x1083E70", Offset = "0x1083E70", VA = "0x1083E70", Slot = "6")]
		protected override void StreamPausing(bool pause)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x1083E74", Offset = "0x1083E74", VA = "0x1083E74", Slot = "7")]
		protected override void StreamStopping()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1083FA8", Offset = "0x1083FA8", VA = "0x1083FA8", Slot = "8")]
		protected override void StreamChanged(float samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x10841C8", Offset = "0x10841C8", VA = "0x10841C8", Slot = "9")]
		public override void SetOutput(int outputDriverId)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1084294", Offset = "0x1084294", VA = "0x1084294", Slot = "10")]
		public override double PlaybackTimeSeconds()
		{
			return default(double);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1083D94", Offset = "0x1083D94", VA = "0x1083D94")]
		private void StartNetworkLoop()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1083F74", Offset = "0x1083F74", VA = "0x1083F74")]
		private void StopNetworkLoop()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1084310", Offset = "0x1084310", VA = "0x1084310")]
		private void NetworkLoop()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x108534C", Offset = "0x108534C", VA = "0x108534C")]
		public AudioStream()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x10854B4", Offset = "0x10854B4", VA = "0x10854B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ECDC", Offset = "0x90ECDC")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F0")]
	public abstract class AudioStreamBase : MonoBehaviour
	{
		[Token(Token = "0x2000703")]
		public enum StreamAudioType
		{
			[Token(Token = "0x4002542")]
			AUTODETECT,
			[Token(Token = "0x4002543")]
			AIFF,
			[Token(Token = "0x4002544")]
			ASF,
			[Token(Token = "0x4002545")]
			DLS,
			[Token(Token = "0x4002546")]
			FLAC,
			[Token(Token = "0x4002547")]
			FSB,
			[Token(Token = "0x4002548")]
			IT,
			[Token(Token = "0x4002549")]
			MIDI,
			[Token(Token = "0x400254A")]
			MOD,
			[Token(Token = "0x400254B")]
			MPEG,
			[Token(Token = "0x400254C")]
			OGGVORBIS,
			[Token(Token = "0x400254D")]
			PLAYLIST,
			[Token(Token = "0x400254E")]
			RAW,
			[Token(Token = "0x400254F")]
			S3M,
			[Token(Token = "0x4002550")]
			USER,
			[Token(Token = "0x4002551")]
			WAV,
			[Token(Token = "0x4002552")]
			XM,
			[Token(Token = "0x4002553")]
			XMA,
			[Token(Token = "0x4002554")]
			AUDIOQUEUE,
			[Token(Token = "0x4002555")]
			AT9,
			[Token(Token = "0x4002556")]
			VORBIS,
			[Token(Token = "0x4002557")]
			MEDIA_FOUNDATION,
			[Token(Token = "0x4002558")]
			MEDIACODEC,
			[Token(Token = "0x4002559")]
			FADPCM
		}

		[Token(Token = "0x2000704")]
		private enum PlaylistType
		{
			[Token(Token = "0x400255B")]
			PLS,
			[Token(Token = "0x400255C")]
			M3U,
			[Token(Token = "0x400255D")]
			M3U8
		}

		[Token(Token = "0x2000705")]
		private enum ESTOP_REASON
		{
			[Token(Token = "0x400255F")]
			User,
			[Token(Token = "0x4002560")]
			Error,
			[Token(Token = "0x4002561")]
			ErrorOrEOF
		}

		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8114", Offset = "0x8F8114")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamBase <>4__this;

			[Token(Token = "0x4002565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <numDrivers>5__2;

			[Token(Token = "0x4002566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <retries>5__3;

			[Token(Token = "0x1700054D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003242")]
				[Address(RVA = "0x10894DC", Offset = "0x10894DC", VA = "0x10894DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003244")]
				[Address(RVA = "0x108954C", Offset = "0x108954C", VA = "0x108954C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600323F")]
			[Address(RVA = "0x10857C8", Offset = "0x10857C8", VA = "0x10857C8")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6003240")]
			[Address(RVA = "0x1088ED4", Offset = "0x1088ED4", VA = "0x1088ED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003241")]
			[Address(RVA = "0x1088ED8", Offset = "0x1088ED8", VA = "0x1088ED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003243")]
			[Address(RVA = "0x10894E4", Offset = "0x10894E4", VA = "0x10894E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8124", Offset = "0x8F8124")]
		private sealed class <PlayCR>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamBase <>4__this;

			[Token(Token = "0x400256A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <proxystring>5__2;

			[Token(Token = "0x400256B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__3;

			[Token(Token = "0x1700054F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003249")]
				[Address(RVA = "0x1088E5C", Offset = "0x1088E5C", VA = "0x1088E5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000550")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600324B")]
				[Address(RVA = "0x1088ECC", Offset = "0x1088ECC", VA = "0x1088ECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003245")]
			[Address(RVA = "0x1086DCC", Offset = "0x1086DCC", VA = "0x1086DCC")]
			[DebuggerHidden]
			public <PlayCR>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6003246")]
			[Address(RVA = "0x1087E04", Offset = "0x1087E04", VA = "0x1087E04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003247")]
			[Address(RVA = "0x1087EE0", Offset = "0x1087EE0", VA = "0x1087EE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003248")]
			[Address(RVA = "0x1087E20", Offset = "0x1087E20", VA = "0x1087E20")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600324A")]
			[Address(RVA = "0x1088E64", Offset = "0x1088E64", VA = "0x1088E64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8134", Offset = "0x8F8134")]
		private sealed class <StreamCR>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400256C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400256D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400256E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamBase <>4__this;

			[Token(Token = "0x400256F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <isNetworkSource>5__2;

			[Token(Token = "0x4002570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			private bool <streamCaught>5__3;

			[Token(Token = "0x4002571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <c>5__4;

			[Token(Token = "0x17000551")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600324F")]
				[Address(RVA = "0x108A170", Offset = "0x108A170", VA = "0x108A170", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000552")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003251")]
				[Address(RVA = "0x108A1E0", Offset = "0x108A1E0", VA = "0x108A1E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600324C")]
			[Address(RVA = "0x1086E6C", Offset = "0x1086E6C", VA = "0x1086E6C")]
			[DebuggerHidden]
			public <StreamCR>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600324D")]
			[Address(RVA = "0x1089554", Offset = "0x1089554", VA = "0x1089554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600324E")]
			[Address(RVA = "0x1089558", Offset = "0x1089558", VA = "0x1089558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003250")]
			[Address(RVA = "0x108A178", Offset = "0x108A178", VA = "0x108A178", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000709")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8144", Offset = "0x8F8144")]
		private sealed class <>c__DisplayClass80_0
		{
			[Token(Token = "0x4002572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioStreamBase <>4__this;

			[Token(Token = "0x4002573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tagName;

			[Token(Token = "0x4002574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] picture_bytes;

			[Token(Token = "0x6003252")]
			[Address(RVA = "0x1087B18", Offset = "0x1087B18", VA = "0x1087B18")]
			public <>c__DisplayClass80_0()
			{
			}

			[Token(Token = "0x6003253")]
			[Address(RVA = "0x1087DC4", Offset = "0x1087DC4", VA = "0x1087DC4")]
			internal void <LoadTexture_OnMainThread>b__0()
			{
			}
		}

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD218", Offset = "0x8FD218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD218", Offset = "0x8FD218")]
		public string url;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string urlFinal;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD278", Offset = "0x8FD278")]
		public StreamAudioType streamType;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD2B0", Offset = "0x8FD2B0")]
		public SOUND_FORMAT RAWSoundFormat;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int RAWFrequency;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int RAWChannels;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD2E8", Offset = "0x8FD2E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD2E8", Offset = "0x8FD2E8")]
		public LogLevel logLevel;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD348", Offset = "0x8FD348")]
		public bool playOnStart;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD380", Offset = "0x8FD380")]
		public bool continuosStreaming;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD3B8", Offset = "0x8FD3B8")]
		public SPEAKERMODE speakerMode;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD3F0", Offset = "0x8FD3F0")]
		public int numOfRawSpeakers;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD428", Offset = "0x8FD428")]
		public EventWithStringParameter OnPlaybackStarted;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EventWithStringBoolParameter OnPlaybackPaused;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EventWithStringParameter OnPlaybackStopped;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventWithStringStringObjectParameter OnTagChanged;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public EventWithStringStringParameter OnError;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD460", Offset = "0x8FD460")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD460", Offset = "0x8FD460")]
		public int streamBlockAlignment;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD4C0", Offset = "0x8FD4C0")]
		public int initialConnectionRetryCount;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD4F8", Offset = "0x8FD4F8")]
		public int starvingRetryCount;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD530", Offset = "0x8FD530")]
		public uint streamBufferSize;

		[Token(Token = "0x400140E")]
		protected const int kStarvingRetryCount_FileStopped = 30;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int? starvingRetryCount_FileStopped;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected string gameObjectName;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD568", Offset = "0x8FD568")]
		private bool <ready>k__BackingField;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public string fmodVersion;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected FMODSystem fmodsystem;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Sound sound;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Channel channel;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD588", Offset = "0x8FD588")]
		private RESULT <result>k__BackingField;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected OPENSTATE openstate;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RESULT lastError;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int mainThreadId;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool inMemoryStreaming;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD598", Offset = "0x8FD598")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FD598", Offset = "0x8FD598")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD598", Offset = "0x8FD598")]
		public uint bufferFillPercentage;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD614", Offset = "0x8FD614")]
		public bool isPlaying;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD64C", Offset = "0x8FD64C")]
		public bool isPaused;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD684", Offset = "0x8FD684")]
		public bool starving;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD6BC", Offset = "0x8FD6BC")]
		public bool deviceBusy;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD6F4", Offset = "0x8FD6F4")]
		public string title;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD72C", Offset = "0x8FD72C")]
		public int streamChannels;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float streamSampleRate;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Dictionary<string, object> tags;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int starvingFrames;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected double playback_time;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private PlaylistType? playlistType;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool tagsChanged;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private object tagsLock;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool unstableShutdown;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly Queue<Action> executionQueue;

		[Token(Token = "0x1700026A")]
		public bool ready
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x10857B4", Offset = "0x10857B4", VA = "0x10857B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ED14", Offset = "0x90ED14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x10857BC", Offset = "0x10857BC", VA = "0x10857BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ED24", Offset = "0x90ED24")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public RESULT result
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x10833A4", Offset = "0x10833A4", VA = "0x10833A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ED34", Offset = "0x90ED34")]
			get
			{
				return default(RESULT);
			}
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x108499C", Offset = "0x108499C", VA = "0x108499C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ED44", Offset = "0x90ED44")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001B8E")]
		protected abstract void StreamStarting(int samplerate, int channels, SOUND_FORMAT sound_format);

		[Token(Token = "0x6001B8F")]
		protected abstract bool StreamStarving();

		[Token(Token = "0x6001B90")]
		protected abstract void StreamPausing(bool pause);

		[Token(Token = "0x6001B91")]
		protected abstract void StreamStopping();

		[Token(Token = "0x6001B92")]
		protected abstract void StreamChanged(float samplerate, int channels, SOUND_FORMAT sound_format);

		[Token(Token = "0x6001B93")]
		public abstract void SetOutput(int outputDriverId);

		[Token(Token = "0x6001B94")]
		public abstract double PlaybackTimeSeconds();

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x10854B8", Offset = "0x10854B8", VA = "0x10854B8", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90ED54", Offset = "0x90ED54")]
		public virtual IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x10857F4", Offset = "0x10857F4", VA = "0x10857F4")]
		public void Play()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1086D58", Offset = "0x1086D58", VA = "0x1086D58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90EDB8", Offset = "0x90EDB8")]
		private IEnumerator PlayCR()
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x1086DF8", Offset = "0x1086DF8", VA = "0x1086DF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90EE1C", Offset = "0x90EE1C")]
		private IEnumerator StreamCR()
		{
			return null;
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1086E98", Offset = "0x1086E98", VA = "0x1086E98")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1084DC8", Offset = "0x1084DC8", VA = "0x1084DC8")]
		protected void ReadTags()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1087810", Offset = "0x1087810", VA = "0x1087810")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1086864", Offset = "0x1086864", VA = "0x1086864")]
		private void StopWithReason(ESTOP_REASON stopReason)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x10834A4", Offset = "0x10834A4", VA = "0x10834A4", Slot = "12")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1085D3C", Offset = "0x1085D3C", VA = "0x1085D3C")]
		public void ERRCHECK(RESULT result, string customMessage, bool throwOnError = true)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x10833AC", Offset = "0x10833AC", VA = "0x10833AC")]
		protected void LOG(LogLevel requestedLogLevel, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1087818", Offset = "0x1087818", VA = "0x1087818")]
		public string GetLastError(out RESULT errorCode)
		{
			return null;
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1087828", Offset = "0x1087828", VA = "0x1087828")]
		private string URLFromM3UPlaylist(string _playlist)
		{
			return null;
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x10878E0", Offset = "0x10878E0", VA = "0x10878E0")]
		private string URLFromPLSPlaylist(string _playlist)
		{
			return null;
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1087A30", Offset = "0x1087A30", VA = "0x1087A30")]
		private void ScheduleAction(Action action)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x1087488", Offset = "0x1087488", VA = "0x1087488")]
		private void LoadTexture_OnMainThread(byte[] picture_bytes, byte picture_type)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x1087B20", Offset = "0x1087B20", VA = "0x1087B20")]
		private void LoadTexture(string tagName, byte[] picture_bytes)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x1087010", Offset = "0x1087010", VA = "0x1087010")]
		protected void ReadID3V2TagValue_APIC(IntPtr fromAddress, uint datalen, out byte[] picture_data, out byte picture_type)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x10875E0", Offset = "0x10875E0", VA = "0x10875E0")]
		protected float ReadFMODTagValue_float(IntPtr fromAddress, uint datalen)
		{
			return default(float);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x10876F8", Offset = "0x10876F8", VA = "0x10876F8")]
		protected long ReadTagValue_int(IntPtr fromAddress, uint datalen)
		{
			return default(long);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x108539C", Offset = "0x108539C", VA = "0x108539C")]
		protected AudioStreamBase()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class AudioStreamDownload : AudioStreamBase
	{
		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8154", Offset = "0x8F8154")]
		private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamDownload <>4__this;

			[Token(Token = "0x17000553")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003257")]
				[Address(RVA = "0x108B65C", Offset = "0x108B65C", VA = "0x108B65C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000554")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003259")]
				[Address(RVA = "0x108B6CC", Offset = "0x108B6CC", VA = "0x108B6CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003254")]
			[Address(RVA = "0x108A25C", Offset = "0x108A25C", VA = "0x108A25C")]
			[DebuggerHidden]
			public <Start>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003255")]
			[Address(RVA = "0x108B5BC", Offset = "0x108B5BC", VA = "0x108B5BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003256")]
			[Address(RVA = "0x108B5C0", Offset = "0x108B5C0", VA = "0x108B5C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003258")]
			[Address(RVA = "0x108B664", Offset = "0x108B664", VA = "0x108B664", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD764", Offset = "0x8FD764")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD764", Offset = "0x8FD764")]
		public uint readlength;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD7C4", Offset = "0x8FD7C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FD7C4", Offset = "0x8FD7C4")]
		public uint maxTimeout;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD81C", Offset = "0x8FD81C")]
		public bool overwriteCachedDownload;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public string uniqueCacheId;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public EventWithStringAudioClipParameter OnAudioClipCreated;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private byte[] streamDataBytes;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GCHandle streamDataBytesPinned;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private IntPtr streamDataBytesPtr;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float[] oafrDataArr;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private SOUND_FORMAT stream_sound_format;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private byte stream_bytes_per_sample;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD864", Offset = "0x8FD864")]
		private int <stream_samplerate>k__BackingField;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD874", Offset = "0x8FD874")]
		private int <stream_channels>k__BackingField;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool _networkStarving;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Stopwatch sw;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public long decodingToAudioClipTimeInMs;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD884", Offset = "0x8FD884")]
		public long decoded_bytes;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public long? file_size;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool networkLoopRunning;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Thread networkThread;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private FileStream fs;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private BinaryWriter bw;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD8BC", Offset = "0x8FD8BC")]
		private int <ntimeout>k__BackingField;

		[Token(Token = "0x1700026C")]
		public int stream_samplerate
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0x108A2D0", Offset = "0x108A2D0", VA = "0x108A2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EEE4", Offset = "0x90EEE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x108A2D8", Offset = "0x108A2D8", VA = "0x108A2D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EEF4", Offset = "0x90EEF4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public int stream_channels
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0x108A2E0", Offset = "0x108A2E0", VA = "0x108A2E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EF04", Offset = "0x90EF04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0x108A2E8", Offset = "0x108A2E8", VA = "0x108A2E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EF14", Offset = "0x90EF14")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public int ntimeout
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x108AEC4", Offset = "0x108AEC4", VA = "0x108AEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EF24", Offset = "0x90EF24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x108AECC", Offset = "0x108AECC", VA = "0x108AECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EF34", Offset = "0x90EF34")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x108A1E8", Offset = "0x108A1E8", VA = "0x108A1E8", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90EE80", Offset = "0x90EE80")]
		public override IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x108A288", Offset = "0x108A288", VA = "0x108A288", Slot = "12")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x108A2F0", Offset = "0x108A2F0", VA = "0x108A2F0", Slot = "9")]
		public override void SetOutput(int outputDriverId)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x108A364", Offset = "0x108A364", VA = "0x108A364", Slot = "8")]
		protected override void StreamChanged(float samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x108A540", Offset = "0x108A540", VA = "0x108A540", Slot = "6")]
		protected override void StreamPausing(bool pause)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x108A544", Offset = "0x108A544", VA = "0x108A544", Slot = "4")]
		protected override void StreamStarting(int samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x108AEAC", Offset = "0x108AEAC", VA = "0x108AEAC", Slot = "5")]
		protected override bool StreamStarving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x108AEB4", Offset = "0x108AEB4", VA = "0x108AEB4", Slot = "7")]
		protected override void StreamStopping()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x108AEBC", Offset = "0x108AEBC", VA = "0x108AEBC", Slot = "10")]
		public override double PlaybackTimeSeconds()
		{
			return default(double);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x108A87C", Offset = "0x108A87C", VA = "0x108A87C")]
		private void StartDownload()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x10860D0", Offset = "0x10860D0", VA = "0x10860D0")]
		public void StopDownloadAndCreateAudioClip(bool forceRetrievalFromCache)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x108AED4", Offset = "0x108AED4", VA = "0x108AED4")]
		private void NetworkLoop()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x108B54C", Offset = "0x108B54C", VA = "0x108B54C")]
		public AudioStreamDownload()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x108B5B8", Offset = "0x108B5B8", VA = "0x108B5B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EF44", Offset = "0x90EF44")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F2")]
	public class AudioStreamMinimal : AudioStreamBase
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioStreamMinimal _instance;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD8CC", Offset = "0x8FD8CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FD8CC", Offset = "0x8FD8CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD8CC", Offset = "0x8FD8CC")]
		public float volume;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD944", Offset = "0x8FD944")]
		public int outputDriverID;

		[Token(Token = "0x1700026F")]
		public static AudioStreamMinimal Instance
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x10928D0", Offset = "0x10928D0", VA = "0x10928D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x109299C", Offset = "0x109299C", VA = "0x109299C", Slot = "4")]
		protected override void StreamStarting(int samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x1092AD8", Offset = "0x1092AD8", VA = "0x1092AD8", Slot = "5")]
		protected override bool StreamStarving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1092F20", Offset = "0x1092F20", VA = "0x1092F20", Slot = "6")]
		protected override void StreamPausing(bool pause)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1092FC0", Offset = "0x1092FC0", VA = "0x1092FC0", Slot = "7")]
		protected override void StreamStopping()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1092FC4", Offset = "0x1092FC4", VA = "0x1092FC4", Slot = "8")]
		protected override void StreamChanged(float samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x10932B0", Offset = "0x10932B0", VA = "0x10932B0", Slot = "9")]
		public override void SetOutput(int _outputDriverID)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x10937F4", Offset = "0x10937F4", VA = "0x10937F4", Slot = "10")]
		public override double PlaybackTimeSeconds()
		{
			return default(double);
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1093808", Offset = "0x1093808", VA = "0x1093808")]
		public AudioStreamMinimal()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class FMODSystem
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly FMOD.System System;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string VersionString;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DSPBufferLength;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int DSPBufferCount;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr SystemHandle;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RESULT result;

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xE63A50", Offset = "0xE63A50", VA = "0xE63A50")]
		public FMODSystem(SPEAKERMODE withSpeakerMode, int withNumOfRawSpeakers)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xE63E00", Offset = "0xE63E00", VA = "0xE63E00")]
		public void Release(bool runFromFinalizer = false)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xE641B4", Offset = "0xE641B4", VA = "0xE641B4")]
		public RESULT Update()
		{
			return default(RESULT);
		}
	}
	[Token(Token = "0x20002F4")]
	public class AudioStream_ProxyConfiguration : ScriptableObject
	{
		[Token(Token = "0x400144B")]
		private const string UNITY_PROXYSERVER_ENVKEY = "UNITY_PROXYSERVER";

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD97C", Offset = "0x8FD97C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD97C", Offset = "0x8FD97C")]
		[SerializeField]
		public string proxyServerName;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FD9EC", Offset = "0x8FD9EC")]
		[SerializeField]
		public int proxyServerPort;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDA38", Offset = "0x8FDA38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDA38", Offset = "0x8FDA38")]
		[SerializeField]
		public string proxyServerUsername;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDAA8", Offset = "0x8FDAA8")]
		[SerializeField]
		public string proxyServerUserpass;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioStream_ProxyConfiguration _instance;

		[Token(Token = "0x17000270")]
		public static AudioStream_ProxyConfiguration Instance
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x10816E4", Offset = "0x10816E4", VA = "0x10816E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x108179C", Offset = "0x108179C", VA = "0x108179C")]
		public string ProxyString(bool forDisplay)
		{
			return null;
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x109B898", Offset = "0x109B898", VA = "0x109B898")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x90EF7C", Offset = "0x90EF7C")]
		private static void UpdateEnvVariables()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x109BA50", Offset = "0x109BA50", VA = "0x109BA50")]
		public void UpdateProxySettings(string _proxyServerName, int _proxyServerPort, string _proxyServerUsername, string _proxyServerUserpass)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x109BB68", Offset = "0x109BB68", VA = "0x109BB68")]
		public AudioStream_ProxyConfiguration()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F6038", Offset = "0x8F6038")]
	public class AudioStreamInput : AudioStreamInputBase
	{
		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8164", Offset = "0x8F8164")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamInput <>4__this;

			[Token(Token = "0x17000555")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600325D")]
				[Address(RVA = "0x108CB10", Offset = "0x108CB10", VA = "0x108CB10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000556")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600325F")]
				[Address(RVA = "0x108CB80", Offset = "0x108CB80", VA = "0x108CB80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600325A")]
			[Address(RVA = "0x108B748", Offset = "0x108B748", VA = "0x108B748")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600325B")]
			[Address(RVA = "0x108CA70", Offset = "0x108CA70", VA = "0x108CA70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600325C")]
			[Address(RVA = "0x108CA74", Offset = "0x108CA74", VA = "0x108CA74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600325E")]
			[Address(RVA = "0x108CB18", Offset = "0x108CB18", VA = "0x108CB18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x108B6D4", Offset = "0x108B6D4", VA = "0x108B6D4", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90EF90", Offset = "0x90EF90")]
		protected override IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x108B774", Offset = "0x108B774", VA = "0x108B774", Slot = "4")]
		protected override void RecordingStarted()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x108C354", Offset = "0x108C354", VA = "0x108C354", Slot = "5")]
		protected override void RecordingUpdate()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x108C5B8", Offset = "0x108C5B8", VA = "0x108C5B8", Slot = "6")]
		protected override void RecordingStopped()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x108C664", Offset = "0x108C664", VA = "0x108C664")]
		private void PCMReaderCallback(float[] data)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x108C92C", Offset = "0x108C92C", VA = "0x108C92C")]
		public AudioStreamInput()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x108C9F8", Offset = "0x108C9F8", VA = "0x108C9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90EFF4", Offset = "0x90EFF4")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F6")]
	public class AudioStreamInput_iOS : MonoBehaviour
	{
		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8174", Offset = "0x8F8174")]
		private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400257C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400257D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamInput_iOS <>4__this;

			[Token(Token = "0x17000557")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003263")]
				[Address(RVA = "0x1092858", Offset = "0x1092858", VA = "0x1092858", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000558")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003265")]
				[Address(RVA = "0x10928C8", Offset = "0x10928C8", VA = "0x10928C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003260")]
			[Address(RVA = "0x1090940", Offset = "0x1090940", VA = "0x1090940")]
			[DebuggerHidden]
			public <Start>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003261")]
			[Address(RVA = "0x1092658", Offset = "0x1092658", VA = "0x1092658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003262")]
			[Address(RVA = "0x109265C", Offset = "0x109265C", VA = "0x109265C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003264")]
			[Address(RVA = "0x1092860", Offset = "0x1092860", VA = "0x1092860", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200070D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8184", Offset = "0x8F8184")]
		private sealed class <Record>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400257E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400257F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamInput_iOS <>4__this;

			[Token(Token = "0x17000559")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003269")]
				[Address(RVA = "0x10925E0", Offset = "0x10925E0", VA = "0x10925E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600326B")]
				[Address(RVA = "0x1092650", Offset = "0x1092650", VA = "0x1092650", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003266")]
			[Address(RVA = "0x10909E0", Offset = "0x10909E0", VA = "0x10909E0")]
			[DebuggerHidden]
			public <Record>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6003267")]
			[Address(RVA = "0x1092028", Offset = "0x1092028", VA = "0x1092028", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003268")]
			[Address(RVA = "0x109202C", Offset = "0x109202C", VA = "0x109202C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600326A")]
			[Address(RVA = "0x10925E8", Offset = "0x10925E8", VA = "0x10925E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int recChannels;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public int recRate;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDB14", Offset = "0x8FDB14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDB14", Offset = "0x8FDB14")]
		public int recordDeviceId;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDB74", Offset = "0x8FDB74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDB74", Offset = "0x8FDB74")]
		public LogLevel logLevel;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDBD4", Offset = "0x8FDBD4")]
		public bool recordOnStart;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDC0C", Offset = "0x8FDC0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FDC0C", Offset = "0x8FDC0C")]
		public float gain;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDC60", Offset = "0x8FDC60")]
		private readonly bool bluetoothRecording;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDC98", Offset = "0x8FDC98")]
		private readonly bool defaultToSpeaker;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDCD0", Offset = "0x8FDCD0")]
		public EventWithStringParameter OnRecordingStarted;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EventWithStringBoolParameter OnRecordingPaused;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EventWithStringParameter OnRecordingStopped;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EventWithStringStringParameter OnError;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected string gameObjectName;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool ready;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RESULT lastError;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int floatSize;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDD18", Offset = "0x8FDD18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDD18", Offset = "0x8FDD18")]
		public bool isRecording;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDD78", Offset = "0x8FDD78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDD78", Offset = "0x8FDD78")]
		private bool useUnityToResampleAndMapChannels;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SpeexResampler speexResampler;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int outputSampleRate;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int outputChannels;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float ratesRatio;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] inputResampled;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] inputResampledF;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BasicBuffer<float> oafrOutputBuffer;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IntPtr pcm_ptr;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public uint pcm_samples;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public uint pcm_bytesPerSample;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BasicBuffer<float> outputBuffer;

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x10908CC", Offset = "0x10908CC", VA = "0x10908CC", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F02C", Offset = "0x90F02C")]
		protected virtual IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x109096C", Offset = "0x109096C", VA = "0x109096C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F090", Offset = "0x90F090")]
		public IEnumerator Record()
		{
			return null;
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1090A0C", Offset = "0x1090A0C", VA = "0x1090A0C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1090C00", Offset = "0x1090C00", VA = "0x1090C00")]
		private void Stop_Internal()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1090D3C", Offset = "0x1090D3C", VA = "0x1090D3C", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1090D40", Offset = "0x1090D40", VA = "0x1090D40")]
		protected void ERRCHECK(RESULT result, string customMessage, bool throwOnError = true)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1090AB8", Offset = "0x1090AB8", VA = "0x1090AB8")]
		protected void LOG(LogLevel requestedLogLevel, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1090DE0", Offset = "0x1090DE0", VA = "0x1090DE0")]
		public string GetLastError(out RESULT errorCode)
		{
			return null;
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x1090DF0", Offset = "0x1090DF0", VA = "0x1090DF0")]
		public string[] AvailableInputs()
		{
			return null;
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1090EB4", Offset = "0x1090EB4", VA = "0x1090EB4")]
		public void UpdateAudioSession()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1090F2C", Offset = "0x1090F2C", VA = "0x1090F2C")]
		private void RecordingStarted()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1091438", Offset = "0x1091438", VA = "0x1091438")]
		private void RecordingUpdate()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x109143C", Offset = "0x109143C", VA = "0x109143C")]
		protected void UpdateRecordBuffer()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x109166C", Offset = "0x109166C", VA = "0x109166C")]
		private void AddToOutputBuffer(float[] arr)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1091940", Offset = "0x1091940", VA = "0x1091940")]
		protected float[] GetAudioOutputBuffer(uint _len)
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1091A10", Offset = "0x1091A10", VA = "0x1091A10")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1090B54", Offset = "0x1090B54", VA = "0x1090B54")]
		private void RecordingStopped()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1091F58", Offset = "0x1091F58", VA = "0x1091F58")]
		public AudioStreamInput_iOS()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class AudioStreamInput2D : AudioStreamInputBase
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDDD8", Offset = "0x8FDDD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDDD8", Offset = "0x8FDDD8")]
		public bool useUnityToResampleAndMapChannels;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private SpeexResampler speexResampler;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private int outputSampleRate;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private int outputChannels;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float ratesRatio;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float[,] mixMatrix;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float[,] customMixMatrix;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float[] inputResampled;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float[] inputResampledF;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private BasicBuffer<float> oafrOutputBuffer;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x108CB88", Offset = "0x108CB88", VA = "0x108CB88")]
		public void SetCustomMixMatrix(float[,] _customMixMatrix)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x108CC3C", Offset = "0x108CC3C", VA = "0x108CC3C")]
		public float[,] GetMixMatrix()
		{
			return null;
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x108CC44", Offset = "0x108CC44", VA = "0x108CC44", Slot = "4")]
		protected override void RecordingStarted()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x108D788", Offset = "0x108D788", VA = "0x108D788", Slot = "5")]
		protected override void RecordingUpdate()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x108D78C", Offset = "0x108D78C", VA = "0x108D78C")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x108DF94", Offset = "0x108DF94", VA = "0x108DF94", Slot = "6")]
		protected override void RecordingStopped()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x108E03C", Offset = "0x108E03C", VA = "0x108E03C")]
		public AudioStreamInput2D()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public abstract class AudioStreamInputBase : MonoBehaviour
	{
		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8194", Offset = "0x8F8194")]
		private sealed class <Start>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamInputBase <>4__this;

			[Token(Token = "0x4002584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <numConnectedDrivers>5__2;

			[Token(Token = "0x4002585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <retries>5__3;

			[Token(Token = "0x1700055B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600326F")]
				[Address(RVA = "0x1090854", Offset = "0x1090854", VA = "0x1090854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003271")]
				[Address(RVA = "0x10908C4", Offset = "0x10908C4", VA = "0x10908C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600326C")]
			[Address(RVA = "0x108E0B4", Offset = "0x108E0B4", VA = "0x108E0B4")]
			[DebuggerHidden]
			public <Start>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600326D")]
			[Address(RVA = "0x108FC60", Offset = "0x108FC60", VA = "0x108FC60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600326E")]
			[Address(RVA = "0x108FC64", Offset = "0x108FC64", VA = "0x108FC64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003270")]
			[Address(RVA = "0x109085C", Offset = "0x109085C", VA = "0x109085C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81A4", Offset = "0x8F81A4")]
		private sealed class <Record>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioStreamInputBase <>4__this;

			[Token(Token = "0x4002589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <numConnectedDrivers>5__2;

			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <retries>5__3;

			[Token(Token = "0x1700055D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003275")]
				[Address(RVA = "0x108FBE8", Offset = "0x108FBE8", VA = "0x108FBE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003277")]
				[Address(RVA = "0x108FC58", Offset = "0x108FC58", VA = "0x108FC58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003272")]
			[Address(RVA = "0x108E154", Offset = "0x108E154", VA = "0x108E154")]
			[DebuggerHidden]
			public <Record>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6003273")]
			[Address(RVA = "0x108EF78", Offset = "0x108EF78", VA = "0x108EF78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003274")]
			[Address(RVA = "0x108EF7C", Offset = "0x108EF7C", VA = "0x108EF7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003276")]
			[Address(RVA = "0x108FBF0", Offset = "0x108FBF0", VA = "0x108FBF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int recChannels;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		protected int recRate;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDE58", Offset = "0x8FDE58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDE58", Offset = "0x8FDE58")]
		public int recordDeviceId;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDEB8", Offset = "0x8FDEB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDEB8", Offset = "0x8FDEB8")]
		public LogLevel logLevel;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDF18", Offset = "0x8FDF18")]
		public bool recordOnStart;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FDF50", Offset = "0x8FDF50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FDF50", Offset = "0x8FDF50")]
		public float gain;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDFA4", Offset = "0x8FDFA4")]
		public float latencyBlock;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float latencyTotal;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float latencyAverage;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FDFDC", Offset = "0x8FDFDC")]
		public EventWithStringParameter OnRecordingStarted;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EventWithStringBoolParameter OnRecordingPaused;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EventWithStringParameter OnRecordingStopped;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EventWithStringStringParameter OnError;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE014", Offset = "0x8FE014")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE014", Offset = "0x8FE014")]
		public bool useAutomaticDSPBufferSize;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE074", Offset = "0x8FE074")]
		[SerializeField]
		protected uint dspBufferLength_Custom;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private uint dspBufferLength_Auto;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE0C0", Offset = "0x8FE0C0")]
		[SerializeField]
		protected uint dspBufferCount_Custom;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private uint dspBufferCount_Auto;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected string gameObjectName;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool ready;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public string fmodVersion;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected FMOD.System system;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Sound sound;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected RESULT result;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private RESULT lastError;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CREATESOUNDEXINFO exinfo;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private uint version;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private uint datalength;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private uint soundlength;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private uint recordpos;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private uint lastrecordpos;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected int floatSize;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE12C", Offset = "0x8FE12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE12C", Offset = "0x8FE12C")]
		public bool isRecording;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE18C", Offset = "0x8FE18C")]
		public bool isPaused;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private BasicBufferByte outputBuffer;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private object outputBufferLock;

		[Token(Token = "0x6001BF3")]
		protected abstract void RecordingStarted();

		[Token(Token = "0x6001BF4")]
		protected abstract void RecordingUpdate();

		[Token(Token = "0x6001BF5")]
		protected abstract void RecordingStopped();

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x108C9FC", Offset = "0x108C9FC", VA = "0x108C9FC", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F0F4", Offset = "0x90F0F4")]
		protected virtual IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x108E0E0", Offset = "0x108E0E0", VA = "0x108E0E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F158", Offset = "0x90F158")]
		public IEnumerator Record()
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x108C358", Offset = "0x108C358", VA = "0x108C358")]
		protected void UpdateRecordBuffer()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x108E4B8", Offset = "0x108E4B8", VA = "0x108E4B8")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x108E61C", Offset = "0x108E61C", VA = "0x108E61C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x108E6D0", Offset = "0x108E6D0", VA = "0x108E6D0")]
		private void Stop_Internal()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x108E8C8", Offset = "0x108E8C8", VA = "0x108E8C8", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x108D6E4", Offset = "0x108D6E4", VA = "0x108D6E4")]
		protected void ERRCHECK(RESULT result, string customMessage, bool throwOnError = true)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x108C2B4", Offset = "0x108C2B4", VA = "0x108C2B4")]
		protected void LOG(LogLevel requestedLogLevel, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x108E8CC", Offset = "0x108E8CC", VA = "0x108E8CC")]
		public string GetLastError(out RESULT errorCode)
		{
			return null;
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x108E180", Offset = "0x108E180", VA = "0x108E180")]
		private void AddBytesToOutputBuffer(byte[] arr)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x108C79C", Offset = "0x108C79C", VA = "0x108C79C")]
		protected float[] GetAudioOutputBuffer(uint _len)
		{
			return null;
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x108EBA4", Offset = "0x108EBA4", VA = "0x108EBA4")]
		public void SetUserDSPBuffers(uint _dspBufferLength, uint _dspBufferCount)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x108EEA4", Offset = "0x108EEA4", VA = "0x108EEA4")]
		public void SetAutomaticDSPBufferSize()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x108EF48", Offset = "0x108EF48", VA = "0x108EF48")]
		public void GetDSPBufferSize(out uint dspBufferLength, out uint dspBufferCount)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x108BA54", Offset = "0x108BA54", VA = "0x108BA54")]
		public List<string> AvailableInputs(bool includeLoopbackInterfaces = true)
		{
			return null;
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x108C930", Offset = "0x108C930", VA = "0x108C930")]
		protected AudioStreamInputBase()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class AVAudioSessionWrapper
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint test_channels;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly double test_samplerate;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] test_pcmdata;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly uint test_pcmdatasamples;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly uint test_pcmdatabytespersample;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool isRecording;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static GCHandle test_arrayhandle;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IntPtr test_arrayptr;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static float testSignal_volume;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static double[] testSignal_phase;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static double testSignal_increment;

		[Token(Token = "0x40014A7")]
		private const double testSignal_pi = Math.PI;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int testSignal_frequency;

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x1080060", Offset = "0x1080060", VA = "0x1080060")]
		public static void UpdateAVAudioSession(bool bluetoothRecording, bool defaultToSpeaker)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x1080A90", Offset = "0x1080A90", VA = "0x1080A90")]
		public static bool IsSessionReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1080A98", Offset = "0x1080A98", VA = "0x1080A98")]
		public static string[] AvailableInputs()
		{
			return null;
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1080B48", Offset = "0x1080B48", VA = "0x1080B48")]
		public static string[] AvailableOutputs()
		{
			return null;
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1080BF8", Offset = "0x1080BF8", VA = "0x1080BF8")]
		public static void SetPreferredInput(int input)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x1080D18", Offset = "0x1080D18", VA = "0x1080D18")]
		public static uint Channels()
		{
			return default(uint);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x1080D80", Offset = "0x1080D80", VA = "0x1080D80")]
		public static double Samplerate()
		{
			return default(double);
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1080DE8", Offset = "0x1080DE8", VA = "0x1080DE8")]
		public static void PcmData(ref IntPtr pcmDataPtr)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x108129C", Offset = "0x108129C", VA = "0x108129C")]
		public static uint PcmDataSamples()
		{
			return default(uint);
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1081304", Offset = "0x1081304", VA = "0x1081304")]
		public static uint PcmDataBytesPerSample()
		{
			return default(uint);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x108136C", Offset = "0x108136C", VA = "0x108136C")]
		public static void StartRecording()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1081438", Offset = "0x1081438", VA = "0x1081438")]
		public static void StopRecording()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1081548", Offset = "0x1081548", VA = "0x1081548")]
		public static bool IsRecording()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x10815B0", Offset = "0x10815B0", VA = "0x10815B0")]
		public AVAudioSessionWrapper()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class AudioSourceMute : MonoBehaviour
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE1C4", Offset = "0x8FE1C4")]
		public bool mute;

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1081E60", Offset = "0x1081E60", VA = "0x1081E60")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1081EAC", Offset = "0x1081EAC", VA = "0x1081EAC")]
		public AudioSourceMute()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public static class About
	{
		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string versionNumber;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string versionString;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string fmodNotice;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string buildString;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string defaultOutputProperties;

		[Token(Token = "0x17000271")]
		public static string proxyUsed
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x1081660", Offset = "0x1081660", VA = "0x1081660")]
			get
			{
				return null;
			}
		}
	}
	[Serializable]
	[Token(Token = "0x20002FC")]
	public class EventWithStringParameter : UnityEvent<string>
	{
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xE6388C", Offset = "0xE6388C", VA = "0xE6388C")]
		public EventWithStringParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FD")]
	public class EventWithStringBoolParameter : UnityEvent<string, bool>
	{
		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xE6383C", Offset = "0xE6383C", VA = "0xE6383C")]
		public EventWithStringBoolParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FE")]
	public class EventWithStringStringParameter : UnityEvent<string, string>
	{
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xE6392C", Offset = "0xE6392C", VA = "0xE6392C")]
		public EventWithStringStringParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FF")]
	public class EventWithStringStringObjectParameter : UnityEvent<string, string, object>
	{
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xE638DC", Offset = "0xE638DC", VA = "0xE638DC")]
		public EventWithStringStringObjectParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000300")]
	public class EventWithStringAudioClipParameter : UnityEvent<string, AudioClip>
	{
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xE637EC", Offset = "0xE637EC", VA = "0xE637EC")]
		public EventWithStringAudioClipParameter()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public enum LogLevel
	{
		[Token(Token = "0x40014B0")]
		ERROR = 0,
		[Token(Token = "0x40014B1")]
		WARNING = 1,
		[Token(Token = "0x40014B2")]
		INFO = 2,
		[Token(Token = "0x40014B3")]
		DEBUG = 4
	}
	[Token(Token = "0x2000302")]
	public static class AudioStreamSupport
	{
		[Token(Token = "0x2000710")]
		private static class StringHelper
		{
			[Token(Token = "0x20007BF")]
			public class ThreadSafeEncoding : IDisposable
			{
				[Token(Token = "0x4002804")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private UTF8Encoding encoding;

				[Token(Token = "0x4002805")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private byte[] encodedBuffer;

				[Token(Token = "0x4002806")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private char[] decodedBuffer;

				[Token(Token = "0x4002807")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool inUse;

				[Token(Token = "0x6003436")]
				[Address(RVA = "0x109B4B4", Offset = "0x109B4B4", VA = "0x109B4B4")]
				public bool InUse()
				{
					return default(bool);
				}

				[Token(Token = "0x6003437")]
				[Address(RVA = "0x109B554", Offset = "0x109B554", VA = "0x109B554")]
				public void SetInUse()
				{
				}

				[Token(Token = "0x6003438")]
				[Address(RVA = "0x109B5D8", Offset = "0x109B5D8", VA = "0x109B5D8")]
				private int roundUpPowerTwo(int number)
				{
					return default(int);
				}

				[Token(Token = "0x6003439")]
				[Address(RVA = "0x109B5F0", Offset = "0x109B5F0", VA = "0x109B5F0")]
				public byte[] byteFromStringUTF8(string s)
				{
					return null;
				}

				[Token(Token = "0x600343A")]
				[Address(RVA = "0x109AD20", Offset = "0x109AD20", VA = "0x109AD20")]
				public string stringFromNative(IntPtr nativePtr, out int nativeLen)
				{
					return null;
				}

				[Token(Token = "0x600343B")]
				[Address(RVA = "0x109B7A8", Offset = "0x109B7A8", VA = "0x109B7A8", Slot = "4")]
				public void Dispose()
				{
				}

				[Token(Token = "0x600343C")]
				[Address(RVA = "0x109B4BC", Offset = "0x109B4BC", VA = "0x109B4BC")]
				public ThreadSafeEncoding()
				{
				}
			}

			[Token(Token = "0x400258B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static List<ThreadSafeEncoding> encoders;

			[Token(Token = "0x6003278")]
			[Address(RVA = "0x109AA84", Offset = "0x109AA84", VA = "0x109AA84")]
			public static ThreadSafeEncoding GetFreeHelper()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81B4", Offset = "0x8F81B4")]
		private sealed class <>c
		{
			[Token(Token = "0x400258C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400258D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, byte> <>9__18_0;

			[Token(Token = "0x600327B")]
			[Address(RVA = "0x109B4A4", Offset = "0x109B4A4", VA = "0x109B4A4")]
			public <>c()
			{
			}

			[Token(Token = "0x600327C")]
			[Address(RVA = "0x109B4AC", Offset = "0x109B4AC", VA = "0x109B4AC")]
			internal byte <CachedFilePath>b__18_0(char s)
			{
				return default(byte);
			}
		}

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object _thelock;

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1082898", Offset = "0x1082898", VA = "0x1082898")]
		public static void ERRCHECK(RESULT result, LogLevel currentLogLevel, string gameObjectName, EventWithStringStringParameter onError, string customMessage, bool throwOnError = true)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x10801E4", Offset = "0x10801E4", VA = "0x10801E4")]
		public static void LOG(LogLevel requestedLogLevel, LogLevel currentLogLevel, string gameObjectName, EventWithStringStringParameter onError, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x109A328", Offset = "0x109A328", VA = "0x109A328")]
		public static string TimeStringFromSeconds(double seconds)
		{
			return null;
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x1083D54", Offset = "0x1083D54", VA = "0x1083D54")]
		public static byte BytesPerSample(SOUND_FORMAT sound_format)
		{
			return default(byte);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x10849A4", Offset = "0x10849A4", VA = "0x10849A4")]
		public static int ByteArrayToFloatArray(byte[] byteArray, uint byteArray_length, byte bytes_per_value, SOUND_FORMAT sound_format, ref float[] resultFloatArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x109A5A4", Offset = "0x109A5A4", VA = "0x109A5A4")]
		private static float BytesToFloat(byte firstByte, byte secondByte)
		{
			return default(float);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x1098EC4", Offset = "0x1098EC4", VA = "0x1098EC4")]
		public static int ShortArrayToFloatArray(short[] shortArray, uint shortArray_length, ref float[] resultFloatArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x109A5C0", Offset = "0x109A5C0", VA = "0x109A5C0")]
		public static int FloatArrayToPCM16yteArray(float[] floatArray, uint floatArray_length, ref byte[] resultByteArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x109A7C4", Offset = "0x109A7C4", VA = "0x109A7C4")]
		private static byte[] FloatToByteArray(float _float)
		{
			return null;
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x109A070", Offset = "0x109A070", VA = "0x109A070")]
		public static int FloatArrayToShortArray(float[] floatArray, uint floatArray_length, ref short[] resultShortArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x109A874", Offset = "0x109A874", VA = "0x109A874")]
		public static byte[] StringToBytes(string str)
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x109A930", Offset = "0x109A930", VA = "0x109A930")]
		public static string BytesToString(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x10824A4", Offset = "0x10824A4", VA = "0x10824A4")]
		public static int ChannelsFromUnityDefaultSpeakerMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x109A9D4", Offset = "0x109A9D4", VA = "0x109A9D4")]
		public static bool Is64bitArchitecture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x1081DC4", Offset = "0x1081DC4", VA = "0x1081DC4")]
		public static string UnityAudioLatencyDescription()
		{
			return null;
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1087C54", Offset = "0x1087C54", VA = "0x1087C54")]
		public static string StringFromNative(IntPtr nativePtr, out uint bytesRead)
		{
			return null;
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1085EAC", Offset = "0x1085EAC", VA = "0x1085EAC")]
		public static string CachedFilePath(string fromUrl, string uniqueCacheId)
		{
			return null;
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x109AFAC", Offset = "0x109AFAC", VA = "0x109AFAC")]
		public static string PtrToString(IntPtr p)
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x109B038", Offset = "0x109B038", VA = "0x109B038")]
		public static string[] PtrToStringArray(IntPtr stringArray)
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x109B0D4", Offset = "0x109B0D4", VA = "0x109B0D4")]
		private static int CountStrings(IntPtr stringArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x109B178", Offset = "0x109B178", VA = "0x109B178")]
		public static string[] PtrToStringArray(int count, IntPtr stringArray)
		{
			return null;
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x109B348", Offset = "0x109B348", VA = "0x109B348")]
		public static uint HighestPowerof2LowerThan(uint n)
		{
			return default(uint);
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x1088E28", Offset = "0x1088E28", VA = "0x1088E28")]
		public static uint LowestPowerOf2HigherThan(uint n)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000303")]
	public class BasicBuffer<T>
	{
		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] data;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int writeIndex;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int readIndex;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int available;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int capacity;

		[Token(Token = "0x6001C37")]
		public BasicBuffer(int capacity)
		{
		}

		[Token(Token = "0x6001C38")]
		public void Write(T[] toWrite)
		{
		}

		[Token(Token = "0x6001C39")]
		public void Write(T toWrite)
		{
		}

		[Token(Token = "0x6001C3A")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C3B")]
		public T[] Read(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C3C")]
		public T Read()
		{
			return (T)null;
		}

		[Token(Token = "0x6001C3D")]
		public T[] Peek(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C3E")]
		public int Available()
		{
			return default(int);
		}

		[Token(Token = "0x6001C3F")]
		public int Capacity()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000304")]
	public class BasicBufferShort
	{
		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private short[] data;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int writeIndex;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int readIndex;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int available;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int capacity;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x109A2B4", Offset = "0x109A2B4", VA = "0x109A2B4")]
		public BasicBufferShort(int capacity)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x109A1A0", Offset = "0x109A1A0", VA = "0x109A1A0")]
		public void Write(short[] toWrite)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x109BE38", Offset = "0x109BE38", VA = "0x109BE38")]
		public void Write(short toWrite)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x109BED0", Offset = "0x109BED0", VA = "0x109BED0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1099CE0", Offset = "0x1099CE0", VA = "0x1099CE0")]
		public short[] Read(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x109BEDC", Offset = "0x109BEDC", VA = "0x109BEDC")]
		public short Read()
		{
			return default(short);
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x109BF6C", Offset = "0x109BF6C", VA = "0x109BF6C")]
		public short[] Peek(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x10992B0", Offset = "0x10992B0", VA = "0x10992B0")]
		public int Available()
		{
			return default(int);
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x109C09C", Offset = "0x109C09C", VA = "0x109C09C")]
		public int Capacity()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000305")]
	public class BasicBufferByte
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] data;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int writeIndex;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int readIndex;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int available;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int capacity;

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x108E8EC", Offset = "0x108E8EC", VA = "0x108E8EC")]
		public BasicBufferByte(int capacity)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x108EA90", Offset = "0x108EA90", VA = "0x108EA90")]
		public void Write(byte[] toWrite)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x109BBE0", Offset = "0x109BBE0", VA = "0x109BBE0")]
		public void Write(byte toWrite)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x108FBDC", Offset = "0x108FBDC", VA = "0x108FBDC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x108E960", Offset = "0x108E960", VA = "0x108E960")]
		public byte[] Read(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x109BC78", Offset = "0x109BC78", VA = "0x109BC78")]
		public byte Read()
		{
			return default(byte);
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x109BD08", Offset = "0x109BD08", VA = "0x109BD08")]
		public byte[] Peek(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x108E8DC", Offset = "0x108E8DC", VA = "0x108E8DC")]
		public int Available()
		{
			return default(int);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x108E8E4", Offset = "0x108E8E4", VA = "0x108E8E4")]
		public int Capacity()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000306")]
	public class BuildSettings : ScriptableObject
	{
		[Token(Token = "0x40014C4")]
		public const string AudioStreamMainSceneName = "AudioStreamMainScene";

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> audioStreamSceneNames;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scriptingBackend;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string scriptingRuntimeVersion;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string apiLevel;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string scriptingBackendS;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool incrementalGC;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string incrementalGC_String;

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xE62958", Offset = "0xE62958", VA = "0xE62958")]
		public void AddAudioStreamDemoScenesToBuildSettingsIfNeeded()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xE6295C", Offset = "0xE6295C", VA = "0xE6295C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xE62AAC", Offset = "0xE62AAC", VA = "0xE62AAC")]
		public BuildSettings()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public static class Extensions
	{
		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xE6397C", Offset = "0xE6397C", VA = "0xE6397C")]
		public static VECTOR ToFMODVector(this Vector3 value)
		{
			return default(VECTOR);
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xE63980", Offset = "0xE63980", VA = "0xE63980")]
		public static byte[] ToBytes(this IntPtr value, int length)
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	public class GOAudioSaveToFile : MonoBehaviour
	{
		[Token(Token = "0x2000712")]
		private struct RiffChunk
		{
			[Token(Token = "0x400258E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public char[] id;

			[Token(Token = "0x400258F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int size;
		}

		[Token(Token = "0x2000713")]
		private struct FmtChunk
		{
			[Token(Token = "0x4002590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RiffChunk chunk;

			[Token(Token = "0x4002591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ushort wFormatTag;

			[Token(Token = "0x4002592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public ushort nChannels;

			[Token(Token = "0x4002593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public uint nSamplesPerSec;

			[Token(Token = "0x4002594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint nAvgBytesPerSec;

			[Token(Token = "0x4002595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ushort nBlockAlign;

			[Token(Token = "0x4002596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
			public ushort wBitsPerSample;
		}

		[Token(Token = "0x2000714")]
		private struct DataChunk
		{
			[Token(Token = "0x4002597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RiffChunk chunk;
		}

		[Token(Token = "0x2000715")]
		private struct WavHeader
		{
			[Token(Token = "0x4002598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RiffChunk chunk;

			[Token(Token = "0x4002599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public char[] rifftype;
		}

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE1FC", Offset = "0x8FE1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE1FC", Offset = "0x8FE1FC")]
		public bool autoStart;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE25C", Offset = "0x8FE25C")]
		public bool useThisGameObjectAudio;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string saveFileName;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FileStream f;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BinaryWriter fp;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool savingRunning;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private uint datalength;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uint samplerate;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ushort channels;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private uint bits;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte[] byteArr;

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xE69444", Offset = "0xE69444", VA = "0xE69444")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xE699D8", Offset = "0xE699D8", VA = "0xE699D8")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xE69AC8", Offset = "0xE69AC8", VA = "0xE69AC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xE69B4C", Offset = "0xE69B4C", VA = "0xE69B4C")]
		public void StartSaving(string withFileName, ushort _channels, uint _samplerate)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xE69484", Offset = "0xE69484", VA = "0xE69484")]
		public void StartSaving()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xE69BF8", Offset = "0xE69BF8", VA = "0xE69BF8")]
		private void StartSaving_Common()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xE699F0", Offset = "0xE699F0", VA = "0xE699F0")]
		public void AddToSave(float[] data)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xE69ACC", Offset = "0xE69ACC", VA = "0xE69ACC")]
		public void StopSaving()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xE69CA4", Offset = "0xE69CA4", VA = "0xE69CA4")]
		private void WriteWavHeader(BinaryWriter fp, int length, ushort channels, uint rate, uint bits)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xE6A004", Offset = "0xE6A004", VA = "0xE6A004")]
		public GOAudioSaveToFile()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class ThreadSafeListFloat
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<float> list;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object @lock;

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xE73824", Offset = "0xE73824", VA = "0xE73824")]
		public ThreadSafeListFloat(int initialCapacity)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xE738C8", Offset = "0xE738C8", VA = "0xE738C8")]
		public void Write(float[] write)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xE739B0", Offset = "0xE739B0", VA = "0xE739B0")]
		public float[] Read(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xE73B68", Offset = "0xE73B68", VA = "0xE73B68")]
		public int Available()
		{
			return default(int);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xE73C5C", Offset = "0xE73C5C", VA = "0xE73C5C")]
		public int Capacity()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F60AC", Offset = "0x8F60AC")]
	public abstract class AudioStreamNetworkClient : MonoBehaviour
	{
		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE294", Offset = "0x8FE294")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE294", Offset = "0x8FE294")]
		public LogLevel logLevel;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE2F4", Offset = "0x8FE2F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FE2F4", Offset = "0x8FE2F4")]
		public float volume;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE348", Offset = "0x8FE348")]
		public bool listenHere;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE380", Offset = "0x8FE380")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FE380", Offset = "0x8FE380")]
		public int resamplerQuality;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE3D4", Offset = "0x8FE3D4")]
		public ThreadPriority decoderThreadPriority;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE40C", Offset = "0x8FE40C")]
		public EventWithStringParameter OnConnected;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EventWithStringParameter OnDisonnected;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EventWithStringStringParameter OnError;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE444", Offset = "0x8FE444")]
		private int <clientSampleRate>k__BackingField;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE454", Offset = "0x8FE454")]
		private int <clientChannels>k__BackingField;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE464", Offset = "0x8FE464")]
		private int <serverSampleRate>k__BackingField;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE474", Offset = "0x8FE474")]
		private int <serverChannels>k__BackingField;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE484", Offset = "0x8FE484")]
		private string <lastErrorString>k__BackingField;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OpusDecoder opusDecoder;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpeexResampler speexResampler;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE494", Offset = "0x8FE494")]
		private int <frameSize>k__BackingField;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE4A4", Offset = "0x8FE4A4")]
		private OpusBandwidth <opusBandwidth>k__BackingField;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE4B4", Offset = "0x8FE4B4")]
		private OpusMode <opusMode>k__BackingField;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE4C4", Offset = "0x8FE4C4")]
		private int <opusNumFramesPerPacket>k__BackingField;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE4D4", Offset = "0x8FE4D4")]
		private int <opusNumSamplesPerFrame>k__BackingField;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE4E4", Offset = "0x8FE4E4")]
		private bool <decoderRunning>k__BackingField;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ThreadSafeQueue<float[]> audioQueue;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] fArr;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private short[] resampledBuffer;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Thread decodeThread;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AudioSource @as;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BasicBuffer<float> outputAudioSamples;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE4F4", Offset = "0x8FE4F4")]
		private bool <capturedAudioFrame>k__BackingField;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE504", Offset = "0x8FE504")]
		private int <dspBufferSize>k__BackingField;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected string gameObjectName;

		[Token(Token = "0x17000272")]
		protected abstract ThreadSafeQueue<byte[]> networkQueue
		{
			[Token(Token = "0x6001C66")]
			get;
			[Token(Token = "0x6001C67")]
			set;
		}

		[Token(Token = "0x17000273")]
		public int clientSampleRate
		{
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x1096084", Offset = "0x1096084", VA = "0x1096084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F1DC", Offset = "0x90F1DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x1098AB8", Offset = "0x1098AB8", VA = "0x1098AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F1EC", Offset = "0x90F1EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public int clientChannels
		{
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x109608C", Offset = "0x109608C", VA = "0x109608C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F1FC", Offset = "0x90F1FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x1098AC0", Offset = "0x1098AC0", VA = "0x1098AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F20C", Offset = "0x90F20C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public int serverSampleRate
		{
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x1096094", Offset = "0x1096094", VA = "0x1096094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F21C", Offset = "0x90F21C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x1093AF4", Offset = "0x1093AF4", VA = "0x1093AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F22C", Offset = "0x90F22C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public int serverChannels
		{
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x109606C", Offset = "0x109606C", VA = "0x109606C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F23C", Offset = "0x90F23C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x1093AFC", Offset = "0x1093AFC", VA = "0x1093AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F24C", Offset = "0x90F24C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public string lastErrorString
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x10960A4", Offset = "0x10960A4", VA = "0x10960A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F25C", Offset = "0x90F25C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x1098AC8", Offset = "0x1098AC8", VA = "0x1098AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F26C", Offset = "0x90F26C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public int frameSize
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x1096054", Offset = "0x1096054", VA = "0x1096054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F27C", Offset = "0x90F27C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x1098AD0", Offset = "0x1098AD0", VA = "0x1098AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F28C", Offset = "0x90F28C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public OpusBandwidth opusBandwidth
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x109605C", Offset = "0x109605C", VA = "0x109605C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F29C", Offset = "0x90F29C")]
			get
			{
				return default(OpusBandwidth);
			}
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x1098AD8", Offset = "0x1098AD8", VA = "0x1098AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F2AC", Offset = "0x90F2AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public OpusMode opusMode
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x1096064", Offset = "0x1096064", VA = "0x1096064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F2BC", Offset = "0x90F2BC")]
			get
			{
				return default(OpusMode);
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x1098AE0", Offset = "0x1098AE0", VA = "0x1098AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F2CC", Offset = "0x90F2CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public int opusNumFramesPerPacket
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x1096074", Offset = "0x1096074", VA = "0x1096074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F2DC", Offset = "0x90F2DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x1098AE8", Offset = "0x1098AE8", VA = "0x1098AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F2EC", Offset = "0x90F2EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public int opusNumSamplesPerFrame
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x109607C", Offset = "0x109607C", VA = "0x109607C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F2FC", Offset = "0x90F2FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x1098AF0", Offset = "0x1098AF0", VA = "0x1098AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F30C", Offset = "0x90F30C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public bool decoderRunning
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x109609C", Offset = "0x109609C", VA = "0x109609C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F31C", Offset = "0x90F31C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x1098AF8", Offset = "0x1098AF8", VA = "0x1098AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F32C", Offset = "0x90F32C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public bool capturedAudioFrame
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x1096114", Offset = "0x1096114", VA = "0x1096114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F33C", Offset = "0x90F33C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x1098B04", Offset = "0x1098B04", VA = "0x1098B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F34C", Offset = "0x90F34C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public int capturedAudioSamples
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x10960B4", Offset = "0x10960B4", VA = "0x10960B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000280")]
		public int dspBufferSize
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x10960AC", Offset = "0x10960AC", VA = "0x10960AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F35C", Offset = "0x90F35C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x10990D4", Offset = "0x10990D4", VA = "0x10990D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F36C", Offset = "0x90F36C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x1093B04", Offset = "0x1093B04", VA = "0x1093B04")]
		protected void StartDecoder()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x1093F04", Offset = "0x1093F04", VA = "0x1093F04")]
		protected void StopDecoder()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x1098BB0", Offset = "0x1098BB0", VA = "0x1098BB0")]
		private void DecodeLoop()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x1099008", Offset = "0x1099008", VA = "0x1099008", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x1093FC8", Offset = "0x1093FC8", VA = "0x1093FC8", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x10990DC", Offset = "0x10990DC", VA = "0x10990DC", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x1099144", Offset = "0x1099144", VA = "0x1099144")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x1093FF0", Offset = "0x1093FF0", VA = "0x1093FF0", Slot = "9")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x1098B10", Offset = "0x1098B10", VA = "0x1098B10")]
		protected void LOG(LogLevel requestedLogLevel, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1094410", Offset = "0x1094410", VA = "0x1094410")]
		protected AudioStreamNetworkClient()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public abstract class AudioStreamNetworkSource : MonoBehaviour
	{
		[Token(Token = "0x2000716")]
		public enum OPUSAPPLICATIONTYPE
		{
			[Token(Token = "0x400259B")]
			AUDIO,
			[Token(Token = "0x400259C")]
			RESTRICTED_LOWDELAY,
			[Token(Token = "0x400259D")]
			VOIP
		}

		[Token(Token = "0x2000717")]
		public enum RATE
		{
			[Token(Token = "0x400259F")]
			CBR,
			[Token(Token = "0x40025A0")]
			VBR,
			[Token(Token = "0x40025A1")]
			Constrained_VBR
		}

		[Token(Token = "0x2000718")]
		public enum OPUSFRAMESIZE
		{
			[Token(Token = "0x40025A3")]
			OPUSFRAMESIZE_120 = 120,
			[Token(Token = "0x40025A4")]
			OPUSFRAMESIZE_240 = 240,
			[Token(Token = "0x40025A5")]
			OPUSFRAMESIZE_480 = 480,
			[Token(Token = "0x40025A6")]
			OPUSFRAMESIZE_960 = 960,
			[Token(Token = "0x40025A7")]
			OPUSFRAMESIZE_1920 = 1920,
			[Token(Token = "0x40025A8")]
			OPUSFRAMESIZE_2880 = 2880
		}

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE514", Offset = "0x8FE514")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE514", Offset = "0x8FE514")]
		public LogLevel logLevel;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE574", Offset = "0x8FE574")]
		public bool listenHere;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE5AC", Offset = "0x8FE5AC")]
		public ThreadPriority encoderThreadPriority;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE5E4", Offset = "0x8FE5E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FE5E4", Offset = "0x8FE5E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE5E4", Offset = "0x8FE5E4")]
		public int bitrate;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FE660", Offset = "0x8FE660")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE660", Offset = "0x8FE660")]
		public int complexity;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE6B4", Offset = "0x8FE6B4")]
		public OPUSAPPLICATIONTYPE opusApplicationType;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE6EC", Offset = "0x8FE6EC")]
		public RATE rate;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE724", Offset = "0x8FE724")]
		public OPUSFRAMESIZE frameSize;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE75C", Offset = "0x8FE75C")]
		public EventWithStringStringParameter OnClientConnected;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EventWithStringStringParameter OnClientDisconnected;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EventWithStringStringParameter OnError;

		[Token(Token = "0x4001502")]
		public const int listenPortDefault = 33000;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ThreadSafeQueue<byte[]> networkQueue;

		[Token(Token = "0x4001504")]
		public const string AUDIOSTREAMSOURCE_CONFIG_PREFIX = "AUDIOSTREAMSOURCECONFIG";

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE794", Offset = "0x8FE794")]
		private int <serverSampleRate>k__BackingField;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE7A4", Offset = "0x8FE7A4")]
		private int <serverchannels>k__BackingField;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE7B4", Offset = "0x8FE7B4")]
		private bool <encoderRunning>k__BackingField;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE7C4", Offset = "0x8FE7C4")]
		private int <dspBufferSize>k__BackingField;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE7D4", Offset = "0x8FE7D4")]
		private string <lastErrorString>k__BackingField;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OpusEncoder opusEncoder;

		[Token(Token = "0x400150B")]
		public const int opusSampleRate = 48000;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Thread encodeThread;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private object audioSamplesLock;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BasicBufferShort audioSamples;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private short[] samples2encode;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private byte[] encodeBuffer;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private byte[] packet;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private short[] samples2write;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected string gameObjectName;

		[Token(Token = "0x17000281")]
		public int serverSampleRate
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x1098864", Offset = "0x1098864", VA = "0x1098864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F37C", Offset = "0x90F37C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x1099294", Offset = "0x1099294", VA = "0x1099294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F38C", Offset = "0x90F38C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public int serverchannels
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x109886C", Offset = "0x109886C", VA = "0x109886C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F39C", Offset = "0x90F39C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x109929C", Offset = "0x109929C", VA = "0x109929C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F3AC", Offset = "0x90F3AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool encoderRunning
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x109885C", Offset = "0x109885C", VA = "0x109885C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F3BC", Offset = "0x90F3BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x10992A4", Offset = "0x10992A4", VA = "0x10992A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F3CC", Offset = "0x90F3CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public int networkQueueSize
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x1098874", Offset = "0x1098874", VA = "0x1098874")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000285")]
		public int audioSamplesSize
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x10988E4", Offset = "0x10988E4", VA = "0x10988E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000286")]
		public int dspBufferSize
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x10988DC", Offset = "0x10988DC", VA = "0x10988DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F3DC", Offset = "0x90F3DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x10992B8", Offset = "0x10992B8", VA = "0x10992B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F3EC", Offset = "0x90F3EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public string lastErrorString
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x10988D4", Offset = "0x10988D4", VA = "0x10988D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F3FC", Offset = "0x90F3FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x10992C0", Offset = "0x10992C0", VA = "0x10992C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F40C", Offset = "0x90F40C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x10992C8", Offset = "0x10992C8", VA = "0x10992C8")]
		private void UpdateCodecBitrate(int _bitrate)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1099300", Offset = "0x1099300", VA = "0x1099300")]
		private void UpdateCodecComplexity(int _complexity)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1099338", Offset = "0x1099338", VA = "0x1099338")]
		private void UpdateCodecVBRMode(RATE _rate)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x10993C8", Offset = "0x10993C8", VA = "0x10993C8")]
		private void StartEncoder()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1099708", Offset = "0x1099708", VA = "0x1099708")]
		private void StartEncodeLoop()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x10997E0", Offset = "0x10997E0", VA = "0x10997E0")]
		private void StopEncodeLoop()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1099814", Offset = "0x1099814", VA = "0x1099814")]
		private void EncodeLoop()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x1099E10", Offset = "0x1099E10", VA = "0x1099E10", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x10963B4", Offset = "0x10963B4", VA = "0x10963B4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1099EC4", Offset = "0x1099EC4", VA = "0x1099EC4", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x1099F28", Offset = "0x1099F28", VA = "0x1099F28")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x1096424", Offset = "0x1096424", VA = "0x1096424", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x1099668", Offset = "0x1099668", VA = "0x1099668")]
		protected void LOG(LogLevel requestedLogLevel, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x10967EC", Offset = "0x10967EC", VA = "0x10967EC")]
		protected AudioStreamNetworkSource()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class IcecastSource : MonoBehaviour
	{
		[Token(Token = "0x2000719")]
		public enum IcecastSourceCodec
		{
			[Token(Token = "0x40025AA")]
			OGGOPUS,
			[Token(Token = "0x40025AB")]
			OGGVORBIS,
			[Token(Token = "0x40025AC")]
			PCM16
		}

		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81C4", Offset = "0x8F81C4")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x40025AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string message;

			[Token(Token = "0x40025AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IcecastSource <>4__this;

			[Token(Token = "0x600327D")]
			[Address(RVA = "0xE6C8E0", Offset = "0xE6C8E0", VA = "0xE6C8E0")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x600327E")]
			[Address(RVA = "0xE6C9EC", Offset = "0xE6C9EC", VA = "0xE6C9EC")]
			internal void <OnAudioFilterRead>b__0()
			{
			}
		}

		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81D4", Offset = "0x8F81D4")]
		private sealed class <>c__DisplayClass40_1
		{
			[Token(Token = "0x40025AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string message;

			[Token(Token = "0x40025B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IcecastSource <>4__this;

			[Token(Token = "0x600327F")]
			[Address(RVA = "0xE6C8E8", Offset = "0xE6C8E8", VA = "0xE6C8E8")]
			public <>c__DisplayClass40_1()
			{
			}

			[Token(Token = "0x6003280")]
			[Address(RVA = "0xE6CAB0", Offset = "0xE6CAB0", VA = "0xE6CAB0")]
			internal void <OnAudioFilterRead>b__1()
			{
			}
		}

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FE7E4", Offset = "0x8FE7E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE7E4", Offset = "0x8FE7E4")]
		public string hostname;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE844", Offset = "0x8FE844")]
		public ushort port;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE87C", Offset = "0x8FE87C")]
		public string mountPoint;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string username;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE8B4", Offset = "0x8FE8B4")]
		public string password;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE8EC", Offset = "0x8FE8EC")]
		public string sourceName;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE924", Offset = "0x8FE924")]
		public string sourceDescription;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE95C", Offset = "0x8FE95C")]
		public string sourceGenre;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE994", Offset = "0x8FE994")]
		public string url;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FE9CC", Offset = "0x8FE9CC")]
		public ushort KBitrate;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _public;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEA04", Offset = "0x8FEA04")]
		public string userAgent;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEA3C", Offset = "0x8FEA3C")]
		public string tagDefaultArtist;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEA74", Offset = "0x8FEA74")]
		public string tagDefaultTitle;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEAAC", Offset = "0x8FEAAC")]
		public bool autoConnectOnStart;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FEAE4", Offset = "0x8FEAE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEAE4", Offset = "0x8FEAE4")]
		public IcecastSourceCodec codec;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEB44", Offset = "0x8FEB44")]
		public byte channels;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEB7C", Offset = "0x8FEB7C")]
		public bool listen;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FEBB4", Offset = "0x8FEBB4")]
		public EventWithStringParameter OnServerConnected;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public EventWithStringParameter OnServerDisconnected;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public EventWithStringStringParameter OnError;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected string gameObjectName;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FEBEC", Offset = "0x8FEBEC")]
		private float vorbis_baseQuality;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ProcessingState ogg_processingState;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private OggPage page;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private OggStream oggStream;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float[][] vorbis_buffer;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VorbisInfo vorbis_info;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private OpusEncoder opusEncoder;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private OpusOggWriteStream opusOggWriteStream;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IcecastWriter icecastWriter;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private byte[] bArr;

		[Token(Token = "0x17000288")]
		public bool Connected
		{
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xE6A06C", Offset = "0xE6A06C", VA = "0xE6A06C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xE6A0AC", Offset = "0xE6A0AC", VA = "0xE6A0AC")]
		public void UpdateTags(Dictionary<string, string> withTags)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xE6A558", Offset = "0xE6A558", VA = "0xE6A558")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xE6BF6C", Offset = "0xE6BF6C", VA = "0xE6BF6C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xE6C0E0", Offset = "0xE6C0E0", VA = "0xE6C0E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xE6C138", Offset = "0xE6C138", VA = "0xE6C138")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xE6C13C", Offset = "0xE6C13C", VA = "0xE6C13C")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xE6C8F0", Offset = "0xE6C8F0", VA = "0xE6C8F0")]
		public IcecastSource()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class IcecastWriter
	{
		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81E4", Offset = "0x8F81E4")]
		private sealed class <>c__DisplayClass72_0
		{
			[Token(Token = "0x40025B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, string> reqQuery;

			[Token(Token = "0x6003281")]
			[Address(RVA = "0xE6D1D8", Offset = "0xE6D1D8", VA = "0xE6D1D8")]
			public <>c__DisplayClass72_0()
			{
			}

			[Token(Token = "0x6003282")]
			[Address(RVA = "0xE6D1E0", Offset = "0xE6D1E0", VA = "0xE6D1E0")]
			internal string <SendMetadata>b__0(string key)
			{
				return null;
			}
		}

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NetworkStream networkStream;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StreamReader streamReader;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC04", Offset = "0x8FEC04")]
		private StreamWriter <streamWriter>k__BackingField;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TcpClient tcpClient;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC14", Offset = "0x8FEC14")]
		private string <Hostname>k__BackingField;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC24", Offset = "0x8FEC24")]
		private ushort <Port>k__BackingField;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC34", Offset = "0x8FEC34")]
		private string <Mountpoint>k__BackingField;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC44", Offset = "0x8FEC44")]
		private string <Username>k__BackingField;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC54", Offset = "0x8FEC54")]
		private string <Password>k__BackingField;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC64", Offset = "0x8FEC64")]
		private string <ContentType>k__BackingField;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC74", Offset = "0x8FEC74")]
		private string <Name>k__BackingField;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC84", Offset = "0x8FEC84")]
		private string <Description>k__BackingField;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC94", Offset = "0x8FEC94")]
		private string <Genre>k__BackingField;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FECA4", Offset = "0x8FECA4")]
		private string <Url>k__BackingField;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FECB4", Offset = "0x8FECB4")]
		private ushort <KBitrate>k__BackingField;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FECC4", Offset = "0x8FECC4")]
		private int <Channels>k__BackingField;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FECD4", Offset = "0x8FECD4")]
		private int <Samplerate>k__BackingField;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FECE4", Offset = "0x8FECE4")]
		private bool <Public>k__BackingField;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FECF4", Offset = "0x8FECF4")]
		private string <UserAgent>k__BackingField;

		[Token(Token = "0x17000289")]
		public StreamWriter streamWriter
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xE6A550", Offset = "0xE6A550", VA = "0xE6A550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F41C", Offset = "0x90F41C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xE6CB74", Offset = "0xE6CB74", VA = "0xE6CB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F42C", Offset = "0x90F42C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public string Hostname
		{
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xE6B284", Offset = "0xE6B284", VA = "0xE6B284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F43C", Offset = "0x90F43C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xE6B208", Offset = "0xE6B208", VA = "0xE6B208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F44C", Offset = "0x90F44C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public ushort Port
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xE6B28C", Offset = "0xE6B28C", VA = "0xE6B28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F45C", Offset = "0x90F45C")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xE6B210", Offset = "0xE6B210", VA = "0xE6B210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F46C", Offset = "0x90F46C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public string Mountpoint
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xE6CB7C", Offset = "0xE6CB7C", VA = "0xE6CB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F47C", Offset = "0x90F47C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xE6B218", Offset = "0xE6B218", VA = "0xE6B218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F48C", Offset = "0x90F48C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public string Username
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xE6CB84", Offset = "0xE6CB84", VA = "0xE6CB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F49C", Offset = "0x90F49C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xE6B220", Offset = "0xE6B220", VA = "0xE6B220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F4AC", Offset = "0x90F4AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public string Password
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xE6CB8C", Offset = "0xE6CB8C", VA = "0xE6CB8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F4BC", Offset = "0x90F4BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xE6B228", Offset = "0xE6B228", VA = "0xE6B228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F4CC", Offset = "0x90F4CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public string ContentType
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xE6CB94", Offset = "0xE6CB94", VA = "0xE6CB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F4DC", Offset = "0x90F4DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xE6B230", Offset = "0xE6B230", VA = "0xE6B230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F4EC", Offset = "0x90F4EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public string Name
		{
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xE6CB9C", Offset = "0xE6CB9C", VA = "0xE6CB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F4FC", Offset = "0x90F4FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xE6B238", Offset = "0xE6B238", VA = "0xE6B238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F50C", Offset = "0x90F50C")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public string Description
		{
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xE6CBA4", Offset = "0xE6CBA4", VA = "0xE6CBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F51C", Offset = "0x90F51C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0xE6B240", Offset = "0xE6B240", VA = "0xE6B240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F52C", Offset = "0x90F52C")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public string Genre
		{
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xE6CBAC", Offset = "0xE6CBAC", VA = "0xE6CBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F53C", Offset = "0x90F53C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0xE6B248", Offset = "0xE6B248", VA = "0xE6B248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F54C", Offset = "0x90F54C")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public string Url
		{
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xE6CBB4", Offset = "0xE6CBB4", VA = "0xE6CBB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F55C", Offset = "0x90F55C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xE6B250", Offset = "0xE6B250", VA = "0xE6B250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F56C", Offset = "0x90F56C")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public ushort KBitrate
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xE6CBBC", Offset = "0xE6CBBC", VA = "0xE6CBBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F57C", Offset = "0x90F57C")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xE6B258", Offset = "0xE6B258", VA = "0xE6B258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F58C", Offset = "0x90F58C")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public int Channels
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xE6CBC4", Offset = "0xE6CBC4", VA = "0xE6CBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F59C", Offset = "0x90F59C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xE6B260", Offset = "0xE6B260", VA = "0xE6B260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F5AC", Offset = "0x90F5AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public int Samplerate
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xE6CBCC", Offset = "0xE6CBCC", VA = "0xE6CBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F5BC", Offset = "0x90F5BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xE6B268", Offset = "0xE6B268", VA = "0xE6B268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F5CC", Offset = "0x90F5CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public bool Public
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xE6CBD4", Offset = "0xE6CBD4", VA = "0xE6CBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F5DC", Offset = "0x90F5DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xE6B270", Offset = "0xE6B270", VA = "0xE6B270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F5EC", Offset = "0x90F5EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public string UserAgent
		{
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xE6CBDC", Offset = "0xE6CBDC", VA = "0xE6CBDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F5FC", Offset = "0x90F5FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xE6B27C", Offset = "0xE6B27C", VA = "0xE6B27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F60C", Offset = "0x90F60C")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public bool Connected
		{
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xE6A07C", Offset = "0xE6A07C", VA = "0xE6A07C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xE6B0F4", Offset = "0xE6B0F4", VA = "0xE6B0F4")]
		public IcecastWriter()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xE6B294", Offset = "0xE6B294", VA = "0xE6B294")]
		public bool Open()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xE6BD70", Offset = "0xE6BD70", VA = "0xE6BD70")]
		public bool Push(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xE6CBE4", Offset = "0xE6CBE4", VA = "0xE6CBE4")]
		public bool SendMetadata(string song, bool tryOnce = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xE6BFFC", Offset = "0xE6BFFC", VA = "0xE6BFFC")]
		public void Close()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class AudioStreamNetMQClient : AudioStreamNetworkClient
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FED04", Offset = "0x8FED04")]
		private ThreadSafeQueue<byte[]> <networkQueue>k__BackingField;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FED14", Offset = "0x8FED14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FED14", Offset = "0x8FED14")]
		public string serverIP;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FED74", Offset = "0x8FED74")]
		public int serverTransferPort;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEDAC", Offset = "0x8FEDAC")]
		public bool autoConnect;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Thread clientThread;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int clientThreadSleepTimeout;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEDE4", Offset = "0x8FEDE4")]
		private bool <isConnected>k__BackingField;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		private bool clientLoopRunning;

		[Token(Token = "0x1700029A")]
		protected override ThreadSafeQueue<byte[]> networkQueue
		{
			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0x1093814", Offset = "0x1093814", VA = "0x1093814", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F61C", Offset = "0x90F61C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0x109381C", Offset = "0x109381C", VA = "0x109381C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F62C", Offset = "0x90F62C")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public int networkQueueSize
		{
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0x1093824", Offset = "0x1093824", VA = "0x1093824")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029C")]
		public bool isConnected
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x10938B0", Offset = "0x10938B0", VA = "0x10938B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F63C", Offset = "0x90F63C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x10938B8", Offset = "0x10938B8", VA = "0x10938B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F64C", Offset = "0x90F64C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x10938C4", Offset = "0x10938C4", VA = "0x10938C4")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x1093E7C", Offset = "0x1093E7C", VA = "0x1093E7C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x1093FB8", Offset = "0x1093FB8", VA = "0x1093FB8", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x1093FCC", Offset = "0x1093FCC", VA = "0x1093FCC", Slot = "9")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1093FF4", Offset = "0x1093FF4", VA = "0x1093FF4")]
		private void ClientLoop()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x10943A4", Offset = "0x10943A4", VA = "0x10943A4")]
		public AudioStreamNetMQClient()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class AudioStreamNetMQSource : AudioStreamNetworkSource
	{
		[Serializable]
		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81F4", Offset = "0x8F81F4")]
		private sealed class <>c
		{
			[Token(Token = "0x40025B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPAddress, bool> <>9__8_0;

			[Token(Token = "0x6003284")]
			[Address(RVA = "0x1096938", Offset = "0x1096938", VA = "0x1096938")]
			public <>c()
			{
			}

			[Token(Token = "0x6003285")]
			[Address(RVA = "0x1096940", Offset = "0x1096940", VA = "0x1096940")]
			internal bool <Start>b__8_0(IPAddress f)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FEDF4", Offset = "0x8FEDF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEDF4", Offset = "0x8FEDF4")]
		public int listenPort;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEE54", Offset = "0x8FEE54")]
		public int maxConnections;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEE8C", Offset = "0x8FEE8C")]
		private string <listenIP>k__BackingField;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Thread sourceThread;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int sourceThreadSleepTimeout;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool sourceLoopRunning;

		[Token(Token = "0x1700029D")]
		public string listenIP
		{
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x1096188", Offset = "0x1096188", VA = "0x1096188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F65C", Offset = "0x90F65C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x1096190", Offset = "0x1096190", VA = "0x1096190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F66C", Offset = "0x90F66C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1096198", Offset = "0x1096198", VA = "0x1096198", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x10963B8", Offset = "0x10963B8", VA = "0x10963B8", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1096458", Offset = "0x1096458", VA = "0x1096458")]
		private void SourceLoop()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x10967D4", Offset = "0x10967D4", VA = "0x10967D4")]
		public AudioStreamNetMQSource()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class ThreadSafeQueue<T>
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object @lock;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> queue;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int maxCapacity;

		[Token(Token = "0x6001CE6")]
		public ThreadSafeQueue(int capacity)
		{
		}

		[Token(Token = "0x6001CE7")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001CE8")]
		public void Enqueue(T value)
		{
		}

		[Token(Token = "0x6001CE9")]
		public int Size()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000311")]
	public class ResonanceInput : AudioStreamInputBase
	{
		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8204", Offset = "0x8F8204")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonanceInput <>4__this;

			[Token(Token = "0x1700055F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003289")]
				[Address(RVA = "0xE6FA64", Offset = "0xE6FA64", VA = "0xE6FA64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000560")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600328B")]
				[Address(RVA = "0xE6FAD4", Offset = "0xE6FAD4", VA = "0xE6FAD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003286")]
			[Address(RVA = "0xE6D39C", Offset = "0xE6D39C", VA = "0xE6D39C")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003287")]
			[Address(RVA = "0xE6F870", Offset = "0xE6F870", VA = "0xE6F870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003288")]
			[Address(RVA = "0xE6F874", Offset = "0xE6F874", VA = "0xE6F874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600328A")]
			[Address(RVA = "0xE6FA6C", Offset = "0xE6FA6C", VA = "0xE6FA6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private ResonancePlugin resonancePlugin;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FEE9C", Offset = "0x8FEE9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEE9C", Offset = "0x8FEE9C")]
		public Transform listener;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FEEFC", Offset = "0x8FEEFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEEFC", Offset = "0x8FEEFC")]
		public float spread;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FEF54", Offset = "0x8FEF54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEF54", Offset = "0x8FEF54")]
		public float minDistance;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FEFAC", Offset = "0x8FEFAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FEFAC", Offset = "0x8FEFAC")]
		public float maxDistance;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF004", Offset = "0x8FF004")]
		public ResonancePlugin.DistanceRolloff distanceRolloff;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF03C", Offset = "0x8FF03C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF03C", Offset = "0x8FF03C")]
		public float occlusion;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF090", Offset = "0x8FF090")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF090", Offset = "0x8FF090")]
		public float directivity;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF0E4", Offset = "0x8FF0E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF0E4", Offset = "0x8FF0E4")]
		public float directivitySharpness;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF138", Offset = "0x8FF138")]
		public bool bypassRoom;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 last_relative_position;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Vector3 last_position;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool dspRunning;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ChannelGroup master;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xE6D328", Offset = "0xE6D328", VA = "0xE6D328", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F67C", Offset = "0x90F67C")]
		protected override IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xE6D3C8", Offset = "0xE6D3C8", VA = "0xE6D3C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xE6DFF8", Offset = "0xE6DFF8", VA = "0xE6DFF8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xE6E034", Offset = "0xE6E034", VA = "0xE6E034", Slot = "4")]
		protected override void RecordingStarted()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xE6F504", Offset = "0xE6F504", VA = "0xE6F504", Slot = "5")]
		protected override void RecordingUpdate()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xE6F578", Offset = "0xE6F578", VA = "0xE6F578", Slot = "6")]
		protected override void RecordingStopped()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xE6F7B4", Offset = "0xE6F7B4", VA = "0xE6F7B4")]
		public ResonanceInput()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xE6F868", Offset = "0xE6F868", VA = "0xE6F868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F6E0", Offset = "0x90F6E0")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000312")]
	public class ResonancePlugin
	{
		[Serializable]
		[Token(Token = "0x200071F")]
		public enum DistanceRolloff
		{
			[Token(Token = "0x40025B8")]
			LINEAR,
			[Token(Token = "0x40025B9")]
			LOGARITHMIC,
			[Token(Token = "0x40025BA")]
			OFF
		}

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LogLevel logLevel;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string gameObjectName;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FMOD.System system;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RESULT result;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RESULT lastError;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint resonancePlugin_handle;

		[Token(Token = "0x400156C")]
		private const int ResonanceListener_paramID_Gain = 0;

		[Token(Token = "0x400156D")]
		private const int ResonanceListener_paramID_RoomProperties = 1;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DSP ResonanceListener_DSP;

		[Token(Token = "0x400156F")]
		private const int ResonanceSoundfield_paramID_Gain = 0;

		[Token(Token = "0x4001570")]
		private const int ResonanceSoundfield_paramID_3DAttributes = 1;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DSP ResonanceSoundfield_DSP;

		[Token(Token = "0x4001572")]
		private const int ResonanceSource_paramID_Gain = 0;

		[Token(Token = "0x4001573")]
		private const int ResonanceSource_paramID_Spread = 1;

		[Token(Token = "0x4001574")]
		private const int ResonanceSource_paramID_MinDistance = 2;

		[Token(Token = "0x4001575")]
		private const int ResonanceSource_paramID_MaxDistance = 3;

		[Token(Token = "0x4001576")]
		private const int ResonanceSource_paramID_DistanceRolloff = 4;

		[Token(Token = "0x4001577")]
		private const int ResonanceSource_paramID_Occlusion = 5;

		[Token(Token = "0x4001578")]
		private const int ResonanceSource_paramID_Directivity = 6;

		[Token(Token = "0x4001579")]
		private const int ResonanceSource_paramID_DirectivitySharpness = 7;

		[Token(Token = "0x400157A")]
		private const int ResonanceSource_paramID_3DAttributes = 8;

		[Token(Token = "0x400157B")]
		private const int ResonanceSource_paramID_BypassRoom = 9;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DSP ResonanceSource_DSP;

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xE6FADC", Offset = "0xE6FADC", VA = "0xE6FADC")]
		private void ERRCHECK(RESULT result, string customMessage, bool throwOnError = true)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xE6FB80", Offset = "0xE6FB80", VA = "0xE6FB80")]
		private void LOG(LogLevel requestedLogLevel, string format, params object[] args)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xE6FC20", Offset = "0xE6FC20", VA = "0xE6FC20")]
		public string GetLastError(out RESULT errorCode)
		{
			return null;
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xE6E360", Offset = "0xE6E360", VA = "0xE6E360")]
		public ResonancePlugin(FMOD.System forSystem, LogLevel _logLevel)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xE6F674", Offset = "0xE6F674", VA = "0xE6F674")]
		public void Release()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xE6FC30", Offset = "0xE6FC30", VA = "0xE6FC30")]
		public void ResonanceListener_SetGain(float gain)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xE6FCA8", Offset = "0xE6FCA8", VA = "0xE6FCA8")]
		public float ResonanceListener_GetGain()
		{
			return default(float);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xE6FD28", Offset = "0xE6FD28", VA = "0xE6FD28")]
		public void ResonanceListener_SetRoomProperties()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xE6FDA4", Offset = "0xE6FDA4", VA = "0xE6FDA4")]
		public void ResonanceSoundfield_SetGain(float gain)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xE6FE1C", Offset = "0xE6FE1C", VA = "0xE6FE1C")]
		public float ResonanceSoundfield_GetGain()
		{
			return default(float);
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xE6FE9C", Offset = "0xE6FE9C", VA = "0xE6FE9C")]
		public void ResonanceSoundfield_Set3DAttributes(Vector3 relative_position, Vector3 relative_velocity, Vector3 relative_forward, Vector3 relative_up, Vector3 absolute_position, Vector3 absolute_velocity, Vector3 absolute_forward, Vector3 absolute_up)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xE6D8E0", Offset = "0xE6D8E0", VA = "0xE6D8E0")]
		public void ResonanceSource_SetGain(float gain)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xE701B0", Offset = "0xE701B0", VA = "0xE701B0")]
		public float ResonanceSource_GetGain()
		{
			return default(float);
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xE6D958", Offset = "0xE6D958", VA = "0xE6D958")]
		public void ResonanceSource_SetSpread(float spread)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xE70230", Offset = "0xE70230", VA = "0xE70230")]
		public float ResonanceSource_GetSpread()
		{
			return default(float);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xE6D9D0", Offset = "0xE6D9D0", VA = "0xE6D9D0")]
		public void ResonanceSource_SetMinDistance(float mindistance)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xE702B0", Offset = "0xE702B0", VA = "0xE702B0")]
		public float ResonanceSource_GetMinDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xE6DA48", Offset = "0xE6DA48", VA = "0xE6DA48")]
		public void ResonanceSource_SetMaxDistance(float maxdistance)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xE70330", Offset = "0xE70330", VA = "0xE70330")]
		public float ResonanceSource_GetMaxDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xE6DAC0", Offset = "0xE6DAC0", VA = "0xE6DAC0")]
		public void ResonanceSource_SetDistanceRolloff(DistanceRolloff distanceRolloff)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xE703B0", Offset = "0xE703B0", VA = "0xE703B0")]
		public DistanceRolloff ResonanceSource_GetDistanceRolloff()
		{
			return default(DistanceRolloff);
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xE6DB38", Offset = "0xE6DB38", VA = "0xE6DB38")]
		public void ResonanceSource_SetOcclusion(float occlusion)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xE70430", Offset = "0xE70430", VA = "0xE70430")]
		public float ResonanceSource_GetOcclusion()
		{
			return default(float);
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xE6DBB0", Offset = "0xE6DBB0", VA = "0xE6DBB0")]
		public void ResonanceSource_SetDirectivity(float directivity)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xE704B0", Offset = "0xE704B0", VA = "0xE704B0")]
		public float ResonanceSource_GetDirectivity()
		{
			return default(float);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xE6DC28", Offset = "0xE6DC28", VA = "0xE6DC28")]
		public void ResonanceSource_SetDirectivitySharpness(float directivitySharpness)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xE70530", Offset = "0xE70530", VA = "0xE70530")]
		public float ResonanceSource_GetDirectivitySharpness()
		{
			return default(float);
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xE6DCA0", Offset = "0xE6DCA0", VA = "0xE6DCA0")]
		public void ResonanceSource_Set3DAttributes(Vector3 relative_position, Vector3 relative_velocity, Vector3 relative_forward, Vector3 relative_up, Vector3 absolute_position, Vector3 absolute_velocity, Vector3 absolute_forward, Vector3 absolute_up)
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xE6DF80", Offset = "0xE6DF80", VA = "0xE6DF80")]
		public void ResonanceSource_SetBypassRoom(bool bypassRoom)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xE705B0", Offset = "0xE705B0", VA = "0xE705B0")]
		public bool ResonanceSource_GetBypassRoom()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000313")]
	public class ResonanceSoundfield : AudioStreamBase
	{
		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8214", Offset = "0x8F8214")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonanceSoundfield <>4__this;

			[Token(Token = "0x17000561")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600328F")]
				[Address(RVA = "0xE71E00", Offset = "0xE71E00", VA = "0xE71E00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000562")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003291")]
				[Address(RVA = "0xE71E70", Offset = "0xE71E70", VA = "0xE71E70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600328C")]
			[Address(RVA = "0xE706A4", Offset = "0xE706A4", VA = "0xE706A4")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600328D")]
			[Address(RVA = "0xE71BB8", Offset = "0xE71BB8", VA = "0xE71BB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600328E")]
			[Address(RVA = "0xE71BBC", Offset = "0xE71BBC", VA = "0xE71BBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003290")]
			[Address(RVA = "0xE71E08", Offset = "0xE71E08", VA = "0xE71E08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float volume;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FF170", Offset = "0x8FF170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF170", Offset = "0x8FF170")]
		public int outputDriverID;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ResonancePlugin resonancePlugin;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FF1D0", Offset = "0x8FF1D0")]
		public Transform listener;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF208", Offset = "0x8FF208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF208", Offset = "0x8FF208")]
		public float gain;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 last_relative_position;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 last_position;

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xE70630", Offset = "0xE70630", VA = "0xE70630", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F718", Offset = "0x90F718")]
		public override IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xE706D0", Offset = "0xE706D0", VA = "0xE706D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xE70AA0", Offset = "0xE70AA0", VA = "0xE70AA0", Slot = "12")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xE70AF8", Offset = "0xE70AF8", VA = "0xE70AF8", Slot = "4")]
		protected override void StreamStarting(int samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xE70D78", Offset = "0xE70D78", VA = "0xE70D78", Slot = "5")]
		protected override bool StreamStarving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xE7110C", Offset = "0xE7110C", VA = "0xE7110C", Slot = "6")]
		protected override void StreamPausing(bool pause)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xE711C4", Offset = "0xE711C4", VA = "0xE711C4", Slot = "7")]
		protected override void StreamStopping()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xE71260", Offset = "0xE71260", VA = "0xE71260", Slot = "8")]
		protected override void StreamChanged(float samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xE71584", Offset = "0xE71584", VA = "0xE71584", Slot = "9")]
		public override void SetOutput(int _outputDriverID)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xE71B04", Offset = "0xE71B04", VA = "0xE71B04", Slot = "10")]
		public override double PlaybackTimeSeconds()
		{
			return default(double);
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xE71B18", Offset = "0xE71B18", VA = "0xE71B18")]
		public ResonanceSoundfield()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xE71BB0", Offset = "0xE71BB0", VA = "0xE71BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F77C", Offset = "0x90F77C")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000314")]
	public class ResonanceSource : AudioStreamBase
	{
		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8224", Offset = "0x8F8224")]
		private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonanceSource <>4__this;

			[Token(Token = "0x17000563")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003295")]
				[Address(RVA = "0xE737AC", Offset = "0xE737AC", VA = "0xE737AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000564")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003297")]
				[Address(RVA = "0xE7381C", Offset = "0xE7381C", VA = "0xE7381C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003292")]
			[Address(RVA = "0xE71EEC", Offset = "0xE71EEC", VA = "0xE71EEC")]
			[DebuggerHidden]
			public <Start>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003293")]
			[Address(RVA = "0xE73564", Offset = "0xE73564", VA = "0xE73564", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003294")]
			[Address(RVA = "0xE73568", Offset = "0xE73568", VA = "0xE73568", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003296")]
			[Address(RVA = "0xE737B4", Offset = "0xE737B4", VA = "0xE737B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float volume;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FF260", Offset = "0x8FF260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF260", Offset = "0x8FF260")]
		public int outputDriverID;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ResonancePlugin resonancePlugin;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FF2C0", Offset = "0x8FF2C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF2C0", Offset = "0x8FF2C0")]
		public Transform listener;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF320", Offset = "0x8FF320")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF320", Offset = "0x8FF320")]
		public float gain;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF378", Offset = "0x8FF378")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF378", Offset = "0x8FF378")]
		public float spread;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF3D0", Offset = "0x8FF3D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF3D0", Offset = "0x8FF3D0")]
		public float minDistance;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF428", Offset = "0x8FF428")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF428", Offset = "0x8FF428")]
		public float maxDistance;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF480", Offset = "0x8FF480")]
		public ResonancePlugin.DistanceRolloff distanceRolloff;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF4B8", Offset = "0x8FF4B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF4B8", Offset = "0x8FF4B8")]
		public float occlusion;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF50C", Offset = "0x8FF50C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF50C", Offset = "0x8FF50C")]
		public float directivity;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FF560", Offset = "0x8FF560")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF560", Offset = "0x8FF560")]
		public float directivitySharpness;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FF5B4", Offset = "0x8FF5B4")]
		public bool bypassRoom;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 last_relative_position;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector3 last_position;

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xE71E78", Offset = "0xE71E78", VA = "0xE71E78", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F7B4", Offset = "0x90F7B4")]
		public override IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xE71F18", Offset = "0xE71F18", VA = "0xE71F18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xE72428", Offset = "0xE72428", VA = "0xE72428", Slot = "12")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xE72480", Offset = "0xE72480", VA = "0xE72480", Slot = "4")]
		protected override void StreamStarting(int samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xE72708", Offset = "0xE72708", VA = "0xE72708", Slot = "5")]
		protected override bool StreamStarving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xE72A9C", Offset = "0xE72A9C", VA = "0xE72A9C", Slot = "6")]
		protected override void StreamPausing(bool pause)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xE72B54", Offset = "0xE72B54", VA = "0xE72B54", Slot = "7")]
		protected override void StreamStopping()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xE72BF0", Offset = "0xE72BF0", VA = "0xE72BF0", Slot = "8")]
		protected override void StreamChanged(float samplerate, int channels, SOUND_FORMAT sound_format)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xE72F14", Offset = "0xE72F14", VA = "0xE72F14", Slot = "9")]
		public override void SetOutput(int _outputDriverID)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xE73494", Offset = "0xE73494", VA = "0xE73494", Slot = "10")]
		public override double PlaybackTimeSeconds()
		{
			return default(double);
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xE734A8", Offset = "0xE734A8", VA = "0xE734A8")]
		public ResonanceSource()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xE7355C", Offset = "0xE7355C", VA = "0xE7355C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90F818", Offset = "0x90F818")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
}
namespace AmplifyColor
{
	[Token(Token = "0x2000315")]
	public enum Quality
	{
		[Token(Token = "0x4001594")]
		Mobile,
		[Token(Token = "0x4001595")]
		Standard
	}
	[Token(Token = "0x2000316")]
	public enum Tonemapping
	{
		[Token(Token = "0x4001597")]
		Disabled,
		[Token(Token = "0x4001598")]
		Photographic,
		[Token(Token = "0x4001599")]
		FilmicHable,
		[Token(Token = "0x400159A")]
		FilmicACES
	}
	[Serializable]
	[Token(Token = "0x2000317")]
	public struct RenderLayer
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask mask;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color color;

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x9AE194", Offset = "0x9AE194", VA = "0x9AE194")]
		public RenderLayer(LayerMask mask, Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000318")]
	public class VersionInfo
	{
		[Token(Token = "0x400159D")]
		public const byte Major = 1;

		[Token(Token = "0x400159E")]
		public const byte Minor = 8;

		[Token(Token = "0x400159F")]
		public const byte Release = 0;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string StageSuffix;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string TrialSuffix;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int m_major;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_minor;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_release;

		[Token(Token = "0x1700029E")]
		public int Number
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xF29570", Offset = "0xF29570", VA = "0xF29570")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xF29378", Offset = "0xF29378", VA = "0xF29378")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xF29470", Offset = "0xF29470", VA = "0xF29470", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xF29590", Offset = "0xF29590", VA = "0xF29590")]
		private VersionInfo()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xF295C4", Offset = "0xF295C4", VA = "0xF295C4")]
		private VersionInfo(byte major, byte minor, byte release)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xF29610", Offset = "0xF29610", VA = "0xF29610")]
		public static VersionInfo Current()
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xF2967C", Offset = "0xF2967C", VA = "0xF2967C")]
		public static bool Matches(VersionInfo version)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000319")]
	public class VolumeEffectField
	{
		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float valueSingle;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color valueColor;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool valueBoolean;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 valueVector2;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 valueVector3;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 valueVector4;

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xF2A254", Offset = "0xF2A254", VA = "0xF2A254")]
		public VolumeEffectField(string fieldName, string fieldType)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xF2BF1C", Offset = "0xF2BF1C", VA = "0xF2BF1C")]
		public VolumeEffectField(FieldInfo pi, Component c)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xF2BE2C", Offset = "0xF2BE2C", VA = "0xF2BE2C")]
		public static bool IsValidType(string type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xF2D668", Offset = "0xF2D668", VA = "0xF2D668")]
		public void UpdateValue(object val)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031A")]
	public class VolumeEffectComponent
	{
		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8234", Offset = "0x8F8234")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40025C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectFieldFlags fieldFlags;

			[Token(Token = "0x6003298")]
			[Address(RVA = "0xF2C054", Offset = "0xF2C054", VA = "0xF2C054")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6003299")]
			[Address(RVA = "0xF2C3D8", Offset = "0xF2C3D8", VA = "0xF2C3D8")]
			internal bool <UpdateComponent>b__0(VolumeEffectField s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000723")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8244", Offset = "0x8F8244")]
		private sealed class <>c
		{
			[Token(Token = "0x40025C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, bool> <>9__9_0;

			[Token(Token = "0x40025C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectField, string> <>9__10_0;

			[Token(Token = "0x600329B")]
			[Address(RVA = "0xF2C348", Offset = "0xF2C348", VA = "0xF2C348")]
			public <>c()
			{
			}

			[Token(Token = "0x600329C")]
			[Address(RVA = "0xF2C350", Offset = "0xF2C350", VA = "0xF2C350")]
			internal bool <ListAcceptableFields>b__9_0(FieldInfo f)
			{
				return default(bool);
			}

			[Token(Token = "0x600329D")]
			[Address(RVA = "0xF2C3AC", Offset = "0xF2C3AC", VA = "0xF2C3AC")]
			internal string <GetFieldNames>b__10_0(VolumeEffectField r)
			{
				return null;
			}
		}

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectField> fields;

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xF2A0D4", Offset = "0xF2A0D4", VA = "0xF2A0D4")]
		public VolumeEffectComponent(string name)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xF2BCC8", Offset = "0xF2BCC8", VA = "0xF2BCC8")]
		public VolumeEffectField AddField(FieldInfo pi, Component c)
		{
			return null;
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xF2BCD0", Offset = "0xF2BCD0", VA = "0xF2BCD0")]
		public VolumeEffectField AddField(FieldInfo pi, Component c, int position)
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xF2BFE4", Offset = "0xF2BFE4", VA = "0xF2BFE4")]
		public void RemoveEffectField(VolumeEffectField field)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xF2A6EC", Offset = "0xF2A6EC", VA = "0xF2A6EC")]
		public VolumeEffectComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xF2A3A0", Offset = "0xF2A3A0", VA = "0xF2A3A0")]
		public void UpdateComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xF2A158", Offset = "0xF2A158", VA = "0xF2A158")]
		public VolumeEffectField FindEffectField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xF2C05C", Offset = "0xF2C05C", VA = "0xF2C05C")]
		public static FieldInfo[] ListAcceptableFields(Component c)
		{
			return null;
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xF2C1E4", Offset = "0xF2C1E4", VA = "0xF2C1E4")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200031B")]
	public class VolumeEffect
	{
		[Serializable]
		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8254", Offset = "0x8F8254")]
		private sealed class <>c
		{
			[Token(Token = "0x40025C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Component, bool> <>9__10_0;

			[Token(Token = "0x40025C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponent, string> <>9__11_0;

			[Token(Token = "0x600329F")]
			[Address(RVA = "0xF2BB60", Offset = "0xF2BB60", VA = "0xF2BB60")]
			public <>c()
			{
			}

			[Token(Token = "0x60032A0")]
			[Address(RVA = "0xF2BB68", Offset = "0xF2BB68", VA = "0xF2BB68")]
			internal bool <ListAcceptableComponents>b__10_0(Component comp)
			{
				return default(bool);
			}

			[Token(Token = "0x60032A1")]
			[Address(RVA = "0xF2BC9C", Offset = "0xF2BC9C", VA = "0xF2BC9C")]
			internal string <GetComponentNames>b__11_0(VolumeEffectComponent r)
			{
				return null;
			}
		}

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AmplifyColorBase gameObject;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectComponent> components;

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xF29740", Offset = "0xF29740", VA = "0xF29740")]
		public VolumeEffect(AmplifyColorBase effect)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xF297C4", Offset = "0xF297C4", VA = "0xF297C4")]
		public static VolumeEffect BlendValuesToVolumeEffect(VolumeEffectFlags flags, VolumeEffect volume1, VolumeEffect volume2, float blend)
		{
			return null;
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xF2A28C", Offset = "0xF2A28C", VA = "0xF2A28C")]
		public VolumeEffectComponent AddComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
			return null;
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xF2A968", Offset = "0xF2A968", VA = "0xF2A968")]
		public void RemoveEffectComponent(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xF2A9D8", Offset = "0xF2A9D8", VA = "0xF2A9D8")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xF2ABD4", Offset = "0xF2ABD4", VA = "0xF2ABD4")]
		public void SetValues(AmplifyColorBase targetColor)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xF2B288", Offset = "0xF2B288", VA = "0xF2B288")]
		public void BlendValues(AmplifyColorBase targetColor, VolumeEffect other, float blendAmount)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xF29FD8", Offset = "0xF29FD8", VA = "0xF29FD8")]
		public VolumeEffectComponent FindEffectComponent(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xF2B84C", Offset = "0xF2B84C", VA = "0xF2B84C")]
		public static Component[] ListAcceptableComponents(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xF2B9FC", Offset = "0xF2B9FC", VA = "0xF2B9FC")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200031C")]
	public class VolumeEffectContainer
	{
		[Serializable]
		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8264", Offset = "0x8F8264")]
		private sealed class <>c
		{
			[Token(Token = "0x40025C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffect, AmplifyColorBase> <>9__6_0;

			[Token(Token = "0x60032A3")]
			[Address(RVA = "0xF2D634", Offset = "0xF2D634", VA = "0xF2D634")]
			public <>c()
			{
			}

			[Token(Token = "0x60032A4")]
			[Address(RVA = "0xF2D63C", Offset = "0xF2D63C", VA = "0xF2D63C")]
			internal AmplifyColorBase <GetStoredEffects>b__6_0(VolumeEffect r)
			{
				return null;
			}
		}

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffect> volumes;

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xF2D08C", Offset = "0xF2D08C", VA = "0xF2D08C")]
		public VolumeEffectContainer()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xF2D100", Offset = "0xF2D100", VA = "0xF2D100")]
		public void AddColorEffect(AmplifyColorBase colorEffect)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xF2D3C4", Offset = "0xF2D3C4", VA = "0xF2D3C4")]
		public VolumeEffect AddJustColorEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xF2D1B0", Offset = "0xF2D1B0", VA = "0xF2D1B0")]
		public VolumeEffect FindVolumeEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xF2D460", Offset = "0xF2D460", VA = "0xF2D460")]
		public void RemoveVolumeEffect(VolumeEffect volume)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xF2D4D0", Offset = "0xF2D4D0", VA = "0xF2D4D0")]
		public AmplifyColorBase[] GetStoredEffects()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200031D")]
	public class VolumeEffectFieldFlags
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xF2C870", Offset = "0xF2C870", VA = "0xF2C870")]
		public VolumeEffectFieldFlags(FieldInfo pi)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xF2C67C", Offset = "0xF2C67C", VA = "0xF2C67C")]
		public VolumeEffectFieldFlags(VolumeEffectField field)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031E")]
	public class VolumeEffectComponentFlags
	{
		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8274", Offset = "0x8F8274")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40025CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectField field;

			[Token(Token = "0x60032A5")]
			[Address(RVA = "0xF2CB60", Offset = "0xF2CB60", VA = "0xF2CB60")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60032A6")]
			[Address(RVA = "0xF2CFE4", Offset = "0xF2CFE4", VA = "0xF2CFE4")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8284", Offset = "0x8F8284")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40025CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo pi;

			[Token(Token = "0x60032A7")]
			[Address(RVA = "0xF2CD6C", Offset = "0xF2CD6C", VA = "0xF2CD6C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60032A8")]
			[Address(RVA = "0xF2D030", Offset = "0xF2D030", VA = "0xF2D030")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8294", Offset = "0x8F8294")]
		private sealed class <>c
		{
			[Token(Token = "0x40025CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectFieldFlags, bool> <>9__8_0;

			[Token(Token = "0x40025CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectFieldFlags, string> <>9__8_1;

			[Token(Token = "0x60032AA")]
			[Address(RVA = "0xF2CF84", Offset = "0xF2CF84", VA = "0xF2CF84")]
			public <>c()
			{
			}

			[Token(Token = "0x60032AB")]
			[Address(RVA = "0xF2CF8C", Offset = "0xF2CF8C", VA = "0xF2CF8C")]
			internal bool <GetFieldNames>b__8_0(VolumeEffectFieldFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x60032AC")]
			[Address(RVA = "0xF2CFB8", Offset = "0xF2CFB8", VA = "0xF2CFB8")]
			internal string <GetFieldNames>b__8_1(VolumeEffectFieldFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectFieldFlags> componentFields;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xF2C424", Offset = "0xF2C424", VA = "0xF2C424")]
		public VolumeEffectComponentFlags(string name)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xF2C4A8", Offset = "0xF2C4A8", VA = "0xF2C4A8")]
		public VolumeEffectComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xF2C6E0", Offset = "0xF2C6E0", VA = "0xF2C6E0")]
		public VolumeEffectComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xF2C8FC", Offset = "0xF2C8FC", VA = "0xF2C8FC")]
		public void UpdateComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xF2CB68", Offset = "0xF2CB68", VA = "0xF2CB68")]
		public void UpdateComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xF2CD74", Offset = "0xF2CD74", VA = "0xF2CD74")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200031F")]
	public class VolumeEffectFlags
	{
		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F82A4", Offset = "0x8F82A4")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40025CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Component c;

			[Token(Token = "0x60032AD")]
			[Address(RVA = "0xF2D9E8", Offset = "0xF2D9E8", VA = "0xF2D9E8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60032AE")]
			[Address(RVA = "0xF2E2F8", Offset = "0xF2E2F8", VA = "0xF2E2F8")]
			internal bool <AddComponent>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F82B4", Offset = "0x8F82B4")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40025D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectComponent comp;

			[Token(Token = "0x60032AF")]
			[Address(RVA = "0xF2DC40", Offset = "0xF2DC40", VA = "0xF2DC40")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60032B0")]
			[Address(RVA = "0xF2E358", Offset = "0xF2E358", VA = "0xF2E358")]
			internal bool <UpdateFlags>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F82C4", Offset = "0x8F82C4")]
		private sealed class <>c
		{
			[Token(Token = "0x40025D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectComponentFlags, bool> <>9__7_0;

			[Token(Token = "0x40025D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponentFlags, string> <>9__7_1;

			[Token(Token = "0x60032B2")]
			[Address(RVA = "0xF2E298", Offset = "0xF2E298", VA = "0xF2E298")]
			public <>c()
			{
			}

			[Token(Token = "0x60032B3")]
			[Address(RVA = "0xF2E2A0", Offset = "0xF2E2A0", VA = "0xF2E2A0")]
			internal bool <GetComponentNames>b__7_0(VolumeEffectComponentFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x60032B4")]
			[Address(RVA = "0xF2E2CC", Offset = "0xF2E2CC", VA = "0xF2E2CC")]
			internal string <GetComponentNames>b__7_1(VolumeEffectComponentFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffectComponentFlags> components;

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xF2D844", Offset = "0xF2D844", VA = "0xF2D844")]
		public VolumeEffectFlags()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xF2D8B8", Offset = "0xF2D8B8", VA = "0xF2D8B8")]
		public void AddComponent(Component c)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xF2D9F0", Offset = "0xF2D9F0", VA = "0xF2D9F0")]
		public void UpdateFlags(VolumeEffect effectVol)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xF2DC48", Offset = "0xF2DC48", VA = "0xF2DC48")]
		public static void UpdateCamFlags(AmplifyColorBase[] effects, AmplifyColorVolumeBase[] volumes)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xF2DDB4", Offset = "0xF2DDB4", VA = "0xF2DDB4")]
		public VolumeEffect GenerateEffectData(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xF2DF8C", Offset = "0xF2DF8C", VA = "0xF2DF8C")]
		public VolumeEffectComponentFlags FindComponentFlags(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xF2E088", Offset = "0xF2E088", VA = "0xF2E088")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000320")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xE0AE48", Offset = "0xE0AE48", VA = "0xE0AE48", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xE0AE74", Offset = "0xE0AE74", VA = "0xE0AE74")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000321")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xE0AE7C", Offset = "0xE0AE7C", VA = "0xE0AE7C", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xE0B258", Offset = "0xE0B258", VA = "0xE0B258")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200072C")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60032B5")]
			[Address(RVA = "0xE0BE84", Offset = "0xE0BE84", VA = "0xE0BE84")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200072D")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60032B6")]
			[Address(RVA = "0xE0BED4", Offset = "0xE0BED4", VA = "0xE0BED4")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200072E")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60032B7")]
			[Address(RVA = "0xE0BF24", Offset = "0xE0BF24", VA = "0xE0BF24")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200072F")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60032B8")]
			[Address(RVA = "0xE0BF74", Offset = "0xE0BF74", VA = "0xE0BF74")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000730")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x60032B9")]
			[Address(RVA = "0xE0BFC4", Offset = "0xE0BFC4", VA = "0xE0BFC4")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x1700029F")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xDFBA68", Offset = "0xDFBA68", VA = "0xDFBA68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xE0B260", Offset = "0xE0B260", VA = "0xE0B260")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xDFBA70", Offset = "0xDFBA70", VA = "0xDFBA70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xE0B268", Offset = "0xE0B268", VA = "0xE0B268")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xDFBA78", Offset = "0xDFBA78", VA = "0xDFBA78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xE0B270", Offset = "0xE0B270", VA = "0xE0B270")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xDFBA80", Offset = "0xDFBA80", VA = "0xDFBA80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xE0B278", Offset = "0xE0B278", VA = "0xE0B278")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xDFBA88", Offset = "0xDFBA88", VA = "0xDFBA88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xE0B280", Offset = "0xE0B280", VA = "0xE0B280")]
			set
			{
			}
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xE0B288", Offset = "0xE0B288", VA = "0xE0B288")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xE0B428", Offset = "0xE0B428", VA = "0xE0B428")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xE0BDA0", Offset = "0xE0BDA0", VA = "0xE0BDA0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xE0BDA4", Offset = "0xE0BDA4", VA = "0xE0BDA4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xE0BAF8", Offset = "0xE0BAF8", VA = "0xE0BAF8")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xE0BB74", Offset = "0xE0BB74", VA = "0xE0BB74")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xE0BBF0", Offset = "0xE0BBF0", VA = "0xE0BBF0")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xE0BC80", Offset = "0xE0BC80", VA = "0xE0BC80")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xE0BD10", Offset = "0xE0BD10", VA = "0xE0BD10")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xE0BDA8", Offset = "0xE0BDA8", VA = "0xE0BDA8")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000323")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F82D4", Offset = "0x8F82D4")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x40025D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000565")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032BD")]
				[Address(RVA = "0xDF65BC", Offset = "0xDF65BC", VA = "0xDF65BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000566")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032BF")]
				[Address(RVA = "0xDF662C", Offset = "0xDF662C", VA = "0xDF662C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032BA")]
			[Address(RVA = "0xDF5EB8", Offset = "0xDF5EB8", VA = "0xDF5EB8")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60032BB")]
			[Address(RVA = "0xDF5EEC", Offset = "0xDF5EEC", VA = "0xDF5EEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032BC")]
			[Address(RVA = "0xDF5EF0", Offset = "0xDF5EF0", VA = "0xDF5EF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032BE")]
			[Address(RVA = "0xDF65C4", Offset = "0xDF65C4", VA = "0xDF65C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40015CB")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40015CC")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xDF5E44", Offset = "0xDF5E44", VA = "0xDF5E44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F850", Offset = "0x90F850")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xDF5EE4", Offset = "0xDF5EE4", VA = "0xDF5EE4")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F82E4", Offset = "0x8F82E4")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x40025DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000567")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032C3")]
				[Address(RVA = "0xDF6C80", Offset = "0xDF6C80", VA = "0xDF6C80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000568")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032C5")]
				[Address(RVA = "0xDF6CF0", Offset = "0xDF6CF0", VA = "0xDF6CF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C0")]
			[Address(RVA = "0xDF66A8", Offset = "0xDF66A8", VA = "0xDF66A8")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60032C1")]
			[Address(RVA = "0xDF66DC", Offset = "0xDF66DC", VA = "0xDF66DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032C2")]
			[Address(RVA = "0xDF66E0", Offset = "0xDF66E0", VA = "0xDF66E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032C4")]
			[Address(RVA = "0xDF6C88", Offset = "0xDF6C88", VA = "0xDF6C88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x40015D5")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x40015D6")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xDF6634", Offset = "0xDF6634", VA = "0xDF6634")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F8B4", Offset = "0x90F8B4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xDF66D4", Offset = "0xDF66D4", VA = "0xDF66D4")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xDF6CF8", Offset = "0xDF6CF8", VA = "0xDF6CF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xDF757C", Offset = "0xDF757C", VA = "0xDF757C")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xDF758C", Offset = "0xDF758C", VA = "0xDF758C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xDF7590", Offset = "0xDF7590", VA = "0xDF7590")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xDF7994", Offset = "0xDF7994", VA = "0xDF7994")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xDF79A4", Offset = "0xDF79A4", VA = "0xDF79A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xDF7DF0", Offset = "0xDF7DF0", VA = "0xDF7DF0")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000733")]
		public enum CameraModes
		{
			[Token(Token = "0x40025DD")]
			Follow,
			[Token(Token = "0x40025DE")]
			Isometric,
			[Token(Token = "0x40025DF")]
			Free
		}

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x40015FB")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x40015FC")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xDF7E0C", Offset = "0xDF7E0C", VA = "0xDF7E0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xDF7E90", Offset = "0xDF7E90", VA = "0xDF7E90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xDF7F4C", Offset = "0xDF7F4C", VA = "0xDF7F4C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xDF8480", Offset = "0xDF8480", VA = "0xDF8480")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xDF8E0C", Offset = "0xDF8E0C", VA = "0xDF8E0C")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000734")]
		public enum MotionType
		{
			[Token(Token = "0x40025E1")]
			Rotation,
			[Token(Token = "0x40025E2")]
			BackAndForth,
			[Token(Token = "0x40025E3")]
			Translation
		}

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xDF8EB4", Offset = "0xDF8EB4", VA = "0xDF8EB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xDF8FE8", Offset = "0xDF8FE8", VA = "0xDF8FE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xDF9280", Offset = "0xDF9280", VA = "0xDF9280")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F82F4", Offset = "0x8F82F4")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000569")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032C9")]
				[Address(RVA = "0xDF9578", Offset = "0xDF9578", VA = "0xDF9578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032CB")]
				[Address(RVA = "0xDF95E8", Offset = "0xDF95E8", VA = "0xDF95E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C6")]
			[Address(RVA = "0xDF93A8", Offset = "0xDF93A8", VA = "0xDF93A8")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60032C7")]
			[Address(RVA = "0xDF93DC", Offset = "0xDF93DC", VA = "0xDF93DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032C8")]
			[Address(RVA = "0xDF93E0", Offset = "0xDF93E0", VA = "0xDF93E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032CA")]
			[Address(RVA = "0xDF9580", Offset = "0xDF9580", VA = "0xDF9580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xDF9294", Offset = "0xDF9294", VA = "0xDF9294")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xDF9308", Offset = "0xDF9308", VA = "0xDF9308")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xDF9334", Offset = "0xDF9334", VA = "0xDF9334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F918", Offset = "0x90F918")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xDF93D4", Offset = "0xDF93D4", VA = "0xDF93D4")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x400160C")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xDF95F0", Offset = "0xDF95F0", VA = "0xDF95F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xDF96E4", Offset = "0xDF96E4", VA = "0xDF96E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xDF9788", Offset = "0xDF9788", VA = "0xDF9788")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8304", Offset = "0x8F8304")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x40025EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40025EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x40025EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x1700056B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032CF")]
				[Address(RVA = "0xDFACD4", Offset = "0xDFACD4", VA = "0xDFACD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D1")]
				[Address(RVA = "0xDFAD44", Offset = "0xDFAD44", VA = "0xDFAD44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032CC")]
			[Address(RVA = "0xDF9938", Offset = "0xDF9938", VA = "0xDF9938")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60032CD")]
			[Address(RVA = "0xDF9BD8", Offset = "0xDF9BD8", VA = "0xDF9BD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032CE")]
			[Address(RVA = "0xDF9BDC", Offset = "0xDF9BDC", VA = "0xDF9BDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D0")]
			[Address(RVA = "0xDFACDC", Offset = "0xDFACDC", VA = "0xDFACDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xDF9790", Offset = "0xDF9790", VA = "0xDF9790")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xDF9800", Offset = "0xDF9800", VA = "0xDF9800")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xDF98A0", Offset = "0xDF98A0", VA = "0xDF98A0")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xDF982C", Offset = "0xDF982C", VA = "0xDF982C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F97C", Offset = "0x90F97C")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xDF9964", Offset = "0xDF9964", VA = "0xDF9964")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8314", Offset = "0x8F8314")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x40025F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x40025F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x1700056D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D5")]
				[Address(RVA = "0xE01328", Offset = "0xE01328", VA = "0xE01328", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D7")]
				[Address(RVA = "0xE01398", Offset = "0xE01398", VA = "0xE01398", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032D2")]
			[Address(RVA = "0xE00FDC", Offset = "0xE00FDC", VA = "0xE00FDC")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60032D3")]
			[Address(RVA = "0xE01070", Offset = "0xE01070", VA = "0xE01070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D4")]
			[Address(RVA = "0xE01074", Offset = "0xE01074", VA = "0xE01074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D6")]
			[Address(RVA = "0xE01330", Offset = "0xE01330", VA = "0xE01330", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xE00EAC", Offset = "0xE00EAC", VA = "0xE00EAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xE00F68", Offset = "0xE00F68", VA = "0xE00F68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90F9E0", Offset = "0x90F9E0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xE01008", Offset = "0xE01008", VA = "0xE01008")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8324", Offset = "0x8F8324")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40025F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x40025F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40025F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40025F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x1700056F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032DB")]
				[Address(RVA = "0xE018E8", Offset = "0xE018E8", VA = "0xE018E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000570")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032DD")]
				[Address(RVA = "0xE01958", Offset = "0xE01958", VA = "0xE01958", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032D8")]
			[Address(RVA = "0xE01674", Offset = "0xE01674", VA = "0xE01674")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60032D9")]
			[Address(RVA = "0xE01748", Offset = "0xE01748", VA = "0xE01748", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032DA")]
			[Address(RVA = "0xE0174C", Offset = "0xE0174C", VA = "0xE0174C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032DC")]
			[Address(RVA = "0xE018F0", Offset = "0xE018F0", VA = "0xE018F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8334", Offset = "0x8F8334")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40025FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x40025FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40025FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x40025FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x17000571")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E1")]
				[Address(RVA = "0xE01BD0", Offset = "0xE01BD0", VA = "0xE01BD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000572")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E3")]
				[Address(RVA = "0xE01C40", Offset = "0xE01C40", VA = "0xE01C40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032DE")]
			[Address(RVA = "0xE01714", Offset = "0xE01714", VA = "0xE01714")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60032DF")]
			[Address(RVA = "0xE01960", Offset = "0xE01960", VA = "0xE01960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032E0")]
			[Address(RVA = "0xE01964", Offset = "0xE01964", VA = "0xE01964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E2")]
			[Address(RVA = "0xE01BD8", Offset = "0xE01BD8", VA = "0xE01BD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xE013A0", Offset = "0xE013A0", VA = "0xE013A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xE01410", Offset = "0xE01410", VA = "0xE01410")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xE014D8", Offset = "0xE014D8", VA = "0xE014D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xE015A0", Offset = "0xE015A0", VA = "0xE015A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xE01668", Offset = "0xE01668", VA = "0xE01668")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xE01440", Offset = "0xE01440", VA = "0xE01440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FA44", Offset = "0x90FA44")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xE016A0", Offset = "0xE016A0", VA = "0xE016A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FAA8", Offset = "0x90FAA8")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xE01740", Offset = "0xE01740", VA = "0xE01740")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8344", Offset = "0x8F8344")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4002603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4002604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4002605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4002606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4002607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4002608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4002609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E7")]
				[Address(RVA = "0xE030F4", Offset = "0xE030F4", VA = "0xE030F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E9")]
				[Address(RVA = "0xE03164", Offset = "0xE03164", VA = "0xE03164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E4")]
			[Address(RVA = "0xE023B4", Offset = "0xE023B4", VA = "0xE023B4")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60032E5")]
			[Address(RVA = "0xE02B08", Offset = "0xE02B08", VA = "0xE02B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032E6")]
			[Address(RVA = "0xE02B0C", Offset = "0xE02B0C", VA = "0xE02B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E8")]
			[Address(RVA = "0xE030FC", Offset = "0xE030FC", VA = "0xE030FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8354", Offset = "0x8F8354")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400260A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400260B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400260C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x400260D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x400260E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x400260F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4002610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4002611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4002612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4002613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000575")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032ED")]
				[Address(RVA = "0xE02A90", Offset = "0xE02A90", VA = "0xE02A90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032EF")]
				[Address(RVA = "0xE02B00", Offset = "0xE02B00", VA = "0xE02B00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032EA")]
			[Address(RVA = "0xE023E0", Offset = "0xE023E0", VA = "0xE023E0")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60032EB")]
			[Address(RVA = "0xE024B4", Offset = "0xE024B4", VA = "0xE024B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032EC")]
			[Address(RVA = "0xE024B8", Offset = "0xE024B8", VA = "0xE024B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032EE")]
			[Address(RVA = "0xE02A98", Offset = "0xE02A98", VA = "0xE02A98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xE01C48", Offset = "0xE01C48", VA = "0xE01C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xE01D10", Offset = "0xE01D10", VA = "0xE01D10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xE022CC", Offset = "0xE022CC", VA = "0xE022CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FB0C", Offset = "0x90FB0C")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xE02340", Offset = "0xE02340", VA = "0xE02340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FB70", Offset = "0x90FB70")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xE0240C", Offset = "0xE0240C", VA = "0xE0240C")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xE0316C", Offset = "0xE0316C", VA = "0xE0316C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xE03170", Offset = "0xE03170", VA = "0xE03170")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xE035EC", Offset = "0xE035EC", VA = "0xE035EC")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x200073C")]
		public enum objectType
		{
			[Token(Token = "0x4002615")]
			TextMeshPro,
			[Token(Token = "0x4002616")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4001628")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xDFAD4C", Offset = "0xDFAD4C", VA = "0xDFAD4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xDFAF88", Offset = "0xDFAF88", VA = "0xDFAF88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xDFB034", Offset = "0xDFB034", VA = "0xDFB034")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200073D")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4002618")]
			TopLeft,
			[Token(Token = "0x4002619")]
			BottomLeft,
			[Token(Token = "0x400261A")]
			TopRight,
			[Token(Token = "0x400261B")]
			BottomRight
		}

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400162F")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xDFB03C", Offset = "0xDFB03C", VA = "0xDFB03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xDFB630", Offset = "0xDFB630", VA = "0xDFB630")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xDFB65C", Offset = "0xDFB65C", VA = "0xDFB65C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xDFB2C4", Offset = "0xDFB2C4", VA = "0xDFB2C4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xDFB7CC", Offset = "0xDFB7CC", VA = "0xDFB7CC")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xDFB7E4", Offset = "0xDFB7E4", VA = "0xDFB7E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xDFBA90", Offset = "0xDFBA90", VA = "0xDFBA90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xDFBD14", Offset = "0xDFBD14", VA = "0xDFBD14")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xDFBF74", Offset = "0xDFBF74", VA = "0xDFBF74")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xDFC1D4", Offset = "0xDFC1D4", VA = "0xDFC1D4")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xDFC4E0", Offset = "0xDFC4E0", VA = "0xDFC4E0")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xDFC7EC", Offset = "0xDFC7EC", VA = "0xDFC7EC")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xDFCAE4", Offset = "0xDFCAE4", VA = "0xDFCAE4")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xDFCAEC", Offset = "0xDFCAEC", VA = "0xDFCAEC")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xDFCAF4", Offset = "0xDFCAF4", VA = "0xDFCAF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xDFCB90", Offset = "0xDFCB90", VA = "0xDFCB90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xDFD5E4", Offset = "0xDFD5E4", VA = "0xDFD5E4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xDFD660", Offset = "0xDFD660", VA = "0xDFD660", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xDFD6D8", Offset = "0xDFD6D8", VA = "0xDFD6D8")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x400163E")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x400163F")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xDFD6F0", Offset = "0xDFD6F0", VA = "0xDFD6F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xDFD8B8", Offset = "0xDFD8B8", VA = "0xDFD8B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xDFD980", Offset = "0xDFD980", VA = "0xDFD980")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xDFDA48", Offset = "0xDFDA48", VA = "0xDFDA48")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xDFDB04", Offset = "0xDFDB04", VA = "0xDFDB04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xE0021C", Offset = "0xE0021C", VA = "0xE0021C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xE00228", Offset = "0xE00228", VA = "0xE00228", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xE00230", Offset = "0xE00230", VA = "0xE00230", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xE00234", Offset = "0xE00234", VA = "0xE00234", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xDFF1B4", Offset = "0xDFF1B4", VA = "0xDFF1B4")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xE00238", Offset = "0xE00238", VA = "0xE00238")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200073E")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400261D")]
			TopLeft,
			[Token(Token = "0x400261E")]
			BottomLeft,
			[Token(Token = "0x400261F")]
			TopRight,
			[Token(Token = "0x4002620")]
			BottomRight
		}

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400164E")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xE00250", Offset = "0xE00250", VA = "0xE00250")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xE00870", Offset = "0xE00870", VA = "0xE00870")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xE0089C", Offset = "0xE0089C", VA = "0xE0089C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xE00458", Offset = "0xE00458", VA = "0xE00458")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xE00A0C", Offset = "0xE00A0C", VA = "0xE00A0C")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x200073F")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4002622")]
			TopLeft,
			[Token(Token = "0x4002623")]
			BottomLeft,
			[Token(Token = "0x4002624")]
			TopRight,
			[Token(Token = "0x4002625")]
			BottomRight
		}

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001653")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xE00A24", Offset = "0xE00A24", VA = "0xE00A24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xE00CD8", Offset = "0xE00CD8", VA = "0xE00CD8")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xE00E9C", Offset = "0xE00E9C", VA = "0xE00E9C")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8364", Offset = "0x8F8364")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4002629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400262A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000577")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F3")]
				[Address(RVA = "0xE03B44", Offset = "0xE03B44", VA = "0xE03B44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000578")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F5")]
				[Address(RVA = "0xE03BB4", Offset = "0xE03BB4", VA = "0xE03BB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032F0")]
			[Address(RVA = "0xE036F4", Offset = "0xE036F4", VA = "0xE036F4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60032F1")]
			[Address(RVA = "0xE03728", Offset = "0xE03728", VA = "0xE03728", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F2")]
			[Address(RVA = "0xE0372C", Offset = "0xE0372C", VA = "0xE0372C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032F4")]
			[Address(RVA = "0xE03B4C", Offset = "0xE03B4C", VA = "0xE03B4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xE035FC", Offset = "0xE035FC", VA = "0xE035FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xE03654", Offset = "0xE03654", VA = "0xE03654")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xE03680", Offset = "0xE03680", VA = "0xE03680")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FBD4", Offset = "0x90FBD4")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xE03720", Offset = "0xE03720", VA = "0xE03720")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x2000741")]
		private struct VertexAnim
		{
			[Token(Token = "0x400262B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x400262C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x400262D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8374", Offset = "0x8F8374")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400262E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400262F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4002631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4002633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4002634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000579")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F9")]
				[Address(RVA = "0xE04DD8", Offset = "0xE04DD8", VA = "0xE04DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032FB")]
				[Address(RVA = "0xE04E48", Offset = "0xE04E48", VA = "0xE04E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032F6")]
			[Address(RVA = "0xE03ED0", Offset = "0xE03ED0", VA = "0xE03ED0")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60032F7")]
			[Address(RVA = "0xE03F14", Offset = "0xE03F14", VA = "0xE03F14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F8")]
			[Address(RVA = "0xE03F18", Offset = "0xE03F18", VA = "0xE03F18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032FA")]
			[Address(RVA = "0xE04DE0", Offset = "0xE04DE0", VA = "0xE04DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xE03BBC", Offset = "0xE03BBC", VA = "0xE03BBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xE03C14", Offset = "0xE03C14", VA = "0xE03C14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xE03CDC", Offset = "0xE03CDC", VA = "0xE03CDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xE03DA4", Offset = "0xE03DA4", VA = "0xE03DA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xE03E44", Offset = "0xE03E44", VA = "0xE03E44")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xE03DD0", Offset = "0xE03DD0", VA = "0xE03DD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FC38", Offset = "0x90FC38")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xE03EFC", Offset = "0xE03EFC", VA = "0xE03EFC")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8384", Offset = "0x8F8384")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4002638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x1700057B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032FF")]
				[Address(RVA = "0xE063CC", Offset = "0xE063CC", VA = "0xE063CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003301")]
				[Address(RVA = "0xE0643C", Offset = "0xE0643C", VA = "0xE0643C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032FC")]
			[Address(RVA = "0xE05154", Offset = "0xE05154", VA = "0xE05154")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60032FD")]
			[Address(RVA = "0xE05190", Offset = "0xE05190", VA = "0xE05190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032FE")]
			[Address(RVA = "0xE05194", Offset = "0xE05194", VA = "0xE05194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003300")]
			[Address(RVA = "0xE063D4", Offset = "0xE063D4", VA = "0xE063D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xE04E50", Offset = "0xE04E50", VA = "0xE04E50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xE04EA8", Offset = "0xE04EA8", VA = "0xE04EA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xE04F70", Offset = "0xE04F70", VA = "0xE04F70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xE05038", Offset = "0xE05038", VA = "0xE05038")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xE050D8", Offset = "0xE050D8", VA = "0xE050D8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xE05064", Offset = "0xE05064", VA = "0xE05064")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FC9C", Offset = "0x90FC9C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xE05180", Offset = "0xE05180", VA = "0xE05180")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8394", Offset = "0x8F8394")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400263A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400263B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400263C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x400263D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400263E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x1700057D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003305")]
				[Address(RVA = "0xE082A4", Offset = "0xE082A4", VA = "0xE082A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003307")]
				[Address(RVA = "0xE08314", Offset = "0xE08314", VA = "0xE08314", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003302")]
			[Address(RVA = "0xE06748", Offset = "0xE06748", VA = "0xE06748")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6003303")]
			[Address(RVA = "0xE0678C", Offset = "0xE0678C", VA = "0xE0678C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003304")]
			[Address(RVA = "0xE06790", Offset = "0xE06790", VA = "0xE06790", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003306")]
			[Address(RVA = "0xE082AC", Offset = "0xE082AC", VA = "0xE082AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xE06444", Offset = "0xE06444", VA = "0xE06444")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xE0649C", Offset = "0xE0649C", VA = "0xE0649C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xE06564", Offset = "0xE06564", VA = "0xE06564")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xE0662C", Offset = "0xE0662C", VA = "0xE0662C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xE066CC", Offset = "0xE066CC", VA = "0xE066CC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xE06658", Offset = "0xE06658", VA = "0xE06658")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FD00", Offset = "0x90FD00")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xE06774", Offset = "0xE06774", VA = "0xE06774")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F83A4", Offset = "0x8F83A4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400263F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x4002640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6003308")]
			[Address(RVA = "0xE08674", Offset = "0xE08674", VA = "0xE08674")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6003309")]
			[Address(RVA = "0xE0867C", Offset = "0xE0867C", VA = "0xE0867C")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F83B4", Offset = "0x8F83B4")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4002644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4002645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4002647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x1700057F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600330D")]
				[Address(RVA = "0xE09B04", Offset = "0xE09B04", VA = "0xE09B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000580")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600330F")]
				[Address(RVA = "0xE09B74", Offset = "0xE09B74", VA = "0xE09B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600330A")]
			[Address(RVA = "0xE08630", Offset = "0xE08630", VA = "0xE08630")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600330B")]
			[Address(RVA = "0xE08730", Offset = "0xE08730", VA = "0xE08730", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600330C")]
			[Address(RVA = "0xE08734", Offset = "0xE08734", VA = "0xE08734", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600330E")]
			[Address(RVA = "0xE09B0C", Offset = "0xE09B0C", VA = "0xE09B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xE0831C", Offset = "0xE0831C", VA = "0xE0831C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xE08374", Offset = "0xE08374", VA = "0xE08374")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xE0843C", Offset = "0xE0843C", VA = "0xE0843C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xE08504", Offset = "0xE08504", VA = "0xE08504")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xE085A4", Offset = "0xE085A4", VA = "0xE085A4")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xE08530", Offset = "0xE08530", VA = "0xE08530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FD64", Offset = "0x90FD64")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xE0865C", Offset = "0xE0865C", VA = "0xE0865C")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F83C4", Offset = "0x8F83C4")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400264A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x400264B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400264C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x17000581")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003313")]
				[Address(RVA = "0xE0ADD0", Offset = "0xE0ADD0", VA = "0xE0ADD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000582")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003315")]
				[Address(RVA = "0xE0AE40", Offset = "0xE0AE40", VA = "0xE0AE40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003310")]
			[Address(RVA = "0xE09D24", Offset = "0xE09D24", VA = "0xE09D24")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003311")]
			[Address(RVA = "0xE09FCC", Offset = "0xE09FCC", VA = "0xE09FCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003312")]
			[Address(RVA = "0xE09FD0", Offset = "0xE09FD0", VA = "0xE09FD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003314")]
			[Address(RVA = "0xE0ADD8", Offset = "0xE0ADD8", VA = "0xE0ADD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xE09B7C", Offset = "0xE09B7C", VA = "0xE09B7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xE09BEC", Offset = "0xE09BEC", VA = "0xE09BEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xE09C8C", Offset = "0xE09C8C", VA = "0xE09C8C")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xE09C18", Offset = "0xE09C18", VA = "0xE09C18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90FDC8", Offset = "0x90FDC8")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xE09D50", Offset = "0xE09D50", VA = "0xE09D50")]
		public WarpTextExample()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F6110", Offset = "0x8F6110")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F6110", Offset = "0x8F6110")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F6110", Offset = "0x8F6110")]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xCC2EAC", Offset = "0xCC2EAC", VA = "0xCC2EAC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xCC3030", Offset = "0xCC3030", VA = "0xCC3030", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xCC31A4", Offset = "0xCC31A4", VA = "0xCC31A4", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xCC3258", Offset = "0xCC3258", VA = "0xCC3258", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xCC32FC", Offset = "0xCC32FC", VA = "0xCC32FC", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xCC336C", Offset = "0xCC336C", VA = "0xCC336C", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xCC34C8", Offset = "0xCC34C8", VA = "0xCC34C8", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xCC3554", Offset = "0xCC3554", VA = "0xCC3554", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xCC3610", Offset = "0xCC3610", VA = "0xCC3610", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xCC36C0", Offset = "0xCC36C0", VA = "0xCC36C0", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001DFF")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xCC3770", Offset = "0xCC3770", VA = "0xCC3770")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F61C4", Offset = "0x8F61C4")]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x2000748")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x1400004C")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xCC3780", Offset = "0xCC3780", VA = "0xCC3780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE2C", Offset = "0x90FE2C")]
			add
			{
			}
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xCC387C", Offset = "0xCC387C", VA = "0xCC387C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE3C", Offset = "0x90FE3C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xCC3978", Offset = "0xCC3978", VA = "0xCC3978")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xCC3A3C", Offset = "0xCC3A3C", VA = "0xCC3A3C")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xCC41D8", Offset = "0xCC41D8", VA = "0xCC41D8")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xCC41E0", Offset = "0xCC41E0", VA = "0xCC41E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE4C", Offset = "0x90FE4C")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x2000749")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x1400004D")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xCC2F34", Offset = "0xCC2F34", VA = "0xCC2F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE5C", Offset = "0x90FE5C")]
			add
			{
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xCC30A8", Offset = "0xCC30A8", VA = "0xCC30A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE6C", Offset = "0x90FE6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xCC4224", Offset = "0xCC4224", VA = "0xCC4224")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xCC43C4", Offset = "0xCC43C4", VA = "0xCC43C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xCC4554", Offset = "0xCC4554", VA = "0xCC4554")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xCC48A4", Offset = "0xCC48A4", VA = "0xCC48A4")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xCC49B0", Offset = "0xCC49B0", VA = "0xCC49B0")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xCC4B94", Offset = "0xCC4B94", VA = "0xCC4B94")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xCC4B9C", Offset = "0xCC4B9C", VA = "0xCC4B9C")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xCC49B8", Offset = "0xCC49B8", VA = "0xCC49B8")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xCC4BA4", Offset = "0xCC4BA4", VA = "0xCC4BA4")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xCC5374", Offset = "0xCC5374", VA = "0xCC5374", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xCC5378", Offset = "0xCC5378", VA = "0xCC5378", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xCC537C", Offset = "0xCC537C", VA = "0xCC537C", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xCC5380", Offset = "0xCC5380", VA = "0xCC5380", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xCC5384", Offset = "0xCC5384", VA = "0xCC5384", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xCC5388", Offset = "0xCC5388", VA = "0xCC5388", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xCC538C", Offset = "0xCC538C", VA = "0xCC538C", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xCC5550", Offset = "0xCC5550", VA = "0xCC5550")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x200074A")]
		public enum SpawnSequence
		{
			[Token(Token = "0x400264E")]
			Connection,
			[Token(Token = "0x400264F")]
			Random,
			[Token(Token = "0x4002650")]
			RoundRobin
		}

		[Token(Token = "0x200074B")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x1400004E")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xCC42C8", Offset = "0xCC42C8", VA = "0xCC42C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE7C", Offset = "0x90FE7C")]
			add
			{
			}
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xCC4458", Offset = "0xCC4458", VA = "0xCC4458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE8C", Offset = "0x90FE8C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xCC5588", Offset = "0xCC5588", VA = "0xCC5588", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xCC5858", Offset = "0xCC5858", VA = "0xCC5858")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xCC6534", Offset = "0xCC6534", VA = "0xCC6534", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xCC6868", Offset = "0xCC6868", VA = "0xCC6868", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xCC6AB0", Offset = "0xCC6AB0", VA = "0xCC6AB0", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xCC6C58", Offset = "0xCC6C58", VA = "0xCC6C58")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x170002A4")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xCC6CB0", Offset = "0xCC6CB0", VA = "0xCC6CB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xCC6CE0", Offset = "0xCC6CE0", VA = "0xCC6CE0", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xCC6D3C", Offset = "0xCC6D3C", VA = "0xCC6D3C", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xCC6E80", Offset = "0xCC6E80", VA = "0xCC6E80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xCC6E84", Offset = "0xCC6E84", VA = "0xCC6E84")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xCC7060", Offset = "0xCC7060", VA = "0xCC7060")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F6238", Offset = "0x8F6238")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xCC70D0", Offset = "0xCC70D0", VA = "0xCC70D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xCC7270", Offset = "0xCC7270", VA = "0xCC7270")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xCC7400", Offset = "0xCC7400", VA = "0xCC7400")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xCC740C", Offset = "0xCC740C", VA = "0xCC740C")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xCC7444", Offset = "0xCC7444", VA = "0xCC7444")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xCC7570", Offset = "0xCC7570", VA = "0xCC7570")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xCC7740", Offset = "0xCC7740", VA = "0xCC7740")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xCC7900", Offset = "0xCC7900", VA = "0xCC7900")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xCC7908", Offset = "0xCC7908", VA = "0xCC7908", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xCC7934", Offset = "0xCC7934", VA = "0xCC7934", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xCC7A34", Offset = "0xCC7A34", VA = "0xCC7A34", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xCC7C5C", Offset = "0xCC7C5C", VA = "0xCC7C5C")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xCC7DC4", Offset = "0xCC7DC4", VA = "0xCC7DC4")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xCC7A58", Offset = "0xCC7A58", VA = "0xCC7A58", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xCC7DDC", Offset = "0xCC7DDC", VA = "0xCC7DDC")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x200074C")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x170002A5")]
		public bool DebugMode
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xCC7DF4", Offset = "0xCC7DF4", VA = "0xCC7DF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xCC7DFC", Offset = "0xCC7DFC", VA = "0xCC7DFC")]
			set
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xCC7174", Offset = "0xCC7174", VA = "0xCC7174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FE9C", Offset = "0x90FE9C")]
			add
			{
			}
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xCC7304", Offset = "0xCC7304", VA = "0xCC7304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FEAC", Offset = "0x90FEAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xCC83C8", Offset = "0xCC83C8", VA = "0xCC83C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xCC8434", Offset = "0xCC8434", VA = "0xCC8434")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xCC85E4", Offset = "0xCC85E4", VA = "0xCC85E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xCC8794", Offset = "0xCC8794", VA = "0xCC8794")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xCC886C", Offset = "0xCC886C", VA = "0xCC886C")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xCC8C38", Offset = "0xCC8C38", VA = "0xCC8C38")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xCC9058", Offset = "0xCC9058", VA = "0xCC9058")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xCC9090", Offset = "0xCC9090", VA = "0xCC9090")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xCC9788", Offset = "0xCC9788", VA = "0xCC9788")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xCC9890", Offset = "0xCC9890", VA = "0xCC9890")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xCC995C", Offset = "0xCC995C", VA = "0xCC995C")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xCC9A20", Offset = "0xCC9A20", VA = "0xCC9A20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xCC9C58", Offset = "0xCC9C58", VA = "0xCC9C58")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xCCA2CC", Offset = "0xCCA2CC", VA = "0xCCA2CC")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xCC9E18", Offset = "0xCC9E18", VA = "0xCC9E18")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xCCA2D4", Offset = "0xCCA2D4", VA = "0xCCA2D4")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Voice.DemoVoiceUI
{
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F629C", Offset = "0x8F629C")]
	public class DemoVoiceUI : MonoBehaviour
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VoiceConnection voiceConnection;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x40016CC")]
		protected internal const string MutePropKey = "mute";

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color warningColor;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color okColor;

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xA96AAC", Offset = "0xA96AAC", VA = "0xA96AAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xA9712C", Offset = "0xA9712C", VA = "0xA9712C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xA97288", Offset = "0xA97288", VA = "0xA97288")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xA97320", Offset = "0xA97320", VA = "0xA97320")]
		private void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xA974B0", Offset = "0xA974B0", VA = "0xA974B0")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xA97570", Offset = "0xA97570", VA = "0xA97570")]
		public void ToggleMute()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xA97704", Offset = "0xA97704", VA = "0xA97704")]
		public void ToggleDebugEcho()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xA97778", Offset = "0xA97778", VA = "0xA97778")]
		public void ToggleReliable()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xA977EC", Offset = "0xA977EC", VA = "0xA977EC")]
		public void ToggleAEC()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xA97840", Offset = "0xA97840", VA = "0xA97840")]
		public void ToggleNoiseSuppression()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xA97894", Offset = "0xA97894", VA = "0xA97894")]
		public void ToggleAGC()
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xA978E8", Offset = "0xA978E8", VA = "0xA978E8")]
		public void ToggleVAD()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xA9793C", Offset = "0xA9793C", VA = "0xA9793C")]
		public void ToggleDsp()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xA979E0", Offset = "0xA979E0", VA = "0xA979E0")]
		public void ToggleAudioClipStreaming()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xA97B2C", Offset = "0xA97B2C", VA = "0xA97B2C")]
		public void TogglePhotonVAD()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xA97BA0", Offset = "0xA97BA0", VA = "0xA97BA0")]
		public void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xA97C88", Offset = "0xA97C88", VA = "0xA97C88")]
		public void JoinOrCreateRoom(string roomname)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xA97E88", Offset = "0xA97E88", VA = "0xA97E88")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xA96B08", Offset = "0xA96B08", VA = "0xA96B08")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xA98638", Offset = "0xA98638", VA = "0xA98638")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public struct MicRef
	{
		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x9A34AC", Offset = "0x9A34AC", VA = "0x9A34AC")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x9A34C0", Offset = "0x9A34C0", VA = "0x9A34C0")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x9A34D4", Offset = "0x9A34D4", VA = "0x9A34D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200034A")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MicRef> micOptions;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FF99C", Offset = "0x8FF99C")]
		private GameObject refreshButton;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FF9E8", Offset = "0x8FF9E8")]
		private GameObject toggleButton;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xA9876C", Offset = "0xA9876C", VA = "0xA9876C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xA98804", Offset = "0xA98804", VA = "0xA98804")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xA98A80", Offset = "0xA98A80", VA = "0xA98A80")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xA98B70", Offset = "0xA98B70", VA = "0xA98B70")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xA99098", Offset = "0xA99098", VA = "0xA99098")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xA987E0", Offset = "0xA987E0", VA = "0xA987E0")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xA9919C", Offset = "0xA9919C", VA = "0xA9919C")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xA991C0", Offset = "0xA991C0", VA = "0xA991C0")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xA991C8", Offset = "0xA991C8", VA = "0xA991C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FEBC", Offset = "0x90FEBC")]
		private void <SetupMicDropdown>b__7_0(int <p0>)
		{
		}
	}
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F6300", Offset = "0x8F6300")]
	public class RemoteSpeakerUI : MonoBehaviour
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image remoteIsMuting;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xA9927C", Offset = "0xA9927C", VA = "0xA9927C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xA992D4", Offset = "0xA992D4", VA = "0xA992D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xA99650", Offset = "0xA99650", VA = "0xA99650")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x200034C")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xA96280", Offset = "0xA96280", VA = "0xA96280")]
		public void Start()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xA96434", Offset = "0xA96434", VA = "0xA96434")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xA965A0", Offset = "0xA965A0", VA = "0xA965A0", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xA965A4", Offset = "0xA965A4", VA = "0xA965A4", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xA96634", Offset = "0xA96634", VA = "0xA96634", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xA966F0", Offset = "0xA966F0", VA = "0xA966F0", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xA966F4", Offset = "0xA966F4", VA = "0xA966F4", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xA966F8", Offset = "0xA966F8", VA = "0xA966F8", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xA967C8", Offset = "0xA967C8", VA = "0xA967C8", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xA967CC", Offset = "0xA967CC", VA = "0xA967CC", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xA967D0", Offset = "0xA967D0", VA = "0xA967D0", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xA967D4", Offset = "0xA967D4", VA = "0xA967D4", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xA967D8", Offset = "0xA967D8", VA = "0xA967D8", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xA967DC", Offset = "0xA967DC", VA = "0xA967DC", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xA967E0", Offset = "0xA967E0", VA = "0xA967E0", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xA967E4", Offset = "0xA967E4", VA = "0xA967E4", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xA96850", Offset = "0xA96850", VA = "0xA96850", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xA96854", Offset = "0xA96854", VA = "0xA96854", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xA96900", Offset = "0xA96900", VA = "0xA96900", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xA96904", Offset = "0xA96904", VA = "0xA96904")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xA96A44", Offset = "0xA96A44", VA = "0xA96A44")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x200034D")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xA95998", Offset = "0xA95998", VA = "0xA95998")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xA95A98", Offset = "0xA95A98", VA = "0xA95A98")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xA95AA0", Offset = "0xA95AA0", VA = "0xA95AA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xA95B1C", Offset = "0xA95B1C", VA = "0xA95B1C")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F6364", Offset = "0x8F6364")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xA95B24", Offset = "0xA95B24", VA = "0xA95B24")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xA95B7C", Offset = "0xA95B7C", VA = "0xA95B7C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xA95BDC", Offset = "0xA95BDC", VA = "0xA95BDC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xA95C3C", Offset = "0xA95C3C", VA = "0xA95C3C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xA95D38", Offset = "0xA95D38", VA = "0xA95D38", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xA95E34", Offset = "0xA95E34", VA = "0xA95E34")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F63C8", Offset = "0x8F63C8")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xA95E78", Offset = "0xA95E78", VA = "0xA95E78")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xA95FF8", Offset = "0xA95FF8", VA = "0xA95FF8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xA95F68", Offset = "0xA95F68", VA = "0xA95F68")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xA960A8", Offset = "0xA960A8", VA = "0xA960A8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xA96164", Offset = "0xA96164", VA = "0xA96164", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xA9621C", Offset = "0xA9621C", VA = "0xA9621C")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000351")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x19DF5BC", Offset = "0x19DF5BC", VA = "0x19DF5BC")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x19DF6C0", Offset = "0x19DF6C0", VA = "0x19DF6C0")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x19DF7E8", Offset = "0x19DF7E8", VA = "0x19DF7E8")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x19DF910", Offset = "0x19DF910", VA = "0x19DF910")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x19DF960", Offset = "0x19DF960", VA = "0x19DF960", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40016EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFA74", Offset = "0x8FFA74")]
		Unknown,
		[Token(Token = "0x40016ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFAAC", Offset = "0x8FFAAC")]
		Object,
		[Token(Token = "0x40016EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFAE4", Offset = "0x8FFAE4")]
		User
	}
	[Token(Token = "0x2000353")]
	public enum AchievementType
	{
		[Token(Token = "0x40016F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFB1C", Offset = "0x8FFB1C")]
		Unknown,
		[Token(Token = "0x40016F1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFB54", Offset = "0x8FFB54")]
		Simple,
		[Token(Token = "0x40016F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFB8C", Offset = "0x8FFB8C")]
		Bitfield,
		[Token(Token = "0x40016F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFBC4", Offset = "0x8FFBC4")]
		Count
	}
	[Token(Token = "0x2000354")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x19E0A40", Offset = "0x19E0A40", VA = "0x19E0A40")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x19E0BB4", Offset = "0x19E0BB4", VA = "0x19E0BB4")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x19E0D5C", Offset = "0x19E0D5C", VA = "0x19E0D5C")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x19E11DC", Offset = "0x19E11DC", VA = "0x19E11DC")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x19E12E0", Offset = "0x19E12E0", VA = "0x19E12E0")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x19E0FC0", Offset = "0x19E0FC0", VA = "0x19E0FC0")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x19E1404", Offset = "0x19E1404", VA = "0x19E1404", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public static class Callback
	{
		[Token(Token = "0x200074D")]
		private class RequestCallback
		{
			[Token(Token = "0x4002651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6003326")]
			[Address(RVA = "0xC90DF8", Offset = "0xC90DF8", VA = "0xC90DF8")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6003327")]
			[Address(RVA = "0xC906B4", Offset = "0xC906B4", VA = "0xC906B4")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6003328")]
			[Address(RVA = "0xC90E00", Offset = "0xC90E00", VA = "0xC90E00", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x200074E")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4002652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6003329")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x600332A")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6001E9F")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xC905B0", Offset = "0xC905B0", VA = "0xC905B0")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6001EA1")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xC906E0", Offset = "0xC906E0", VA = "0xC906E0")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xC907B4", Offset = "0xC907B4", VA = "0xC907B4")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xC90AD0", Offset = "0xC90AD0", VA = "0xC90AD0")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xC90B68", Offset = "0xC90B68", VA = "0xC90B68")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xC908E0", Offset = "0xC908E0", VA = "0xC908E0")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xC91544", Offset = "0xC91544", VA = "0xC91544")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xC915D0", Offset = "0xC915D0", VA = "0xC915D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xC91724", Offset = "0xC91724", VA = "0xC91724")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xC917B0", Offset = "0xC917B0", VA = "0xC917B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xC917B4", Offset = "0xC917B4", VA = "0xC917B4")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class CAPI
	{
		[Token(Token = "0x200074F")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4002653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4002654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4002655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4002656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4002657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x600332B")]
			[Address(RVA = "0x9A51EC", Offset = "0x9A51EC", VA = "0x9A51EC")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x600332C")]
			[Address(RVA = "0x9A5204", Offset = "0x9A5204", VA = "0x9A5204")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x600332D")]
			[Address(RVA = "0x9A5220", Offset = "0x9A5220", VA = "0x9A5220")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x2000750")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4002658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4002659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x400265A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x400265B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x600332E")]
			[Address(RVA = "0x9A52EC", Offset = "0x9A52EC", VA = "0x9A52EC")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x2000751")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x400265C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x400265D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x400265E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x400265F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x2000752")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4002660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4002664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8F83D4", Offset = "0x8F83D4")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40016FA")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40016FC")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x19E27E8", Offset = "0x19E27E8", VA = "0x19E27E8")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x19E29AC", Offset = "0x19E29AC", VA = "0x19E29AC")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x19E311C", Offset = "0x19E311C", VA = "0x19E311C")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x19E31E0", Offset = "0x19E31E0", VA = "0x19E31E0")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x19E3510", Offset = "0x19E3510", VA = "0x19E3510")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x19E3630", Offset = "0x19E3630", VA = "0x19E3630")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x19E36BC", Offset = "0x19E36BC", VA = "0x19E36BC")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x19E372C", Offset = "0x19E372C", VA = "0x19E372C")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x19E3824", Offset = "0x19E3824", VA = "0x19E3824")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x19E38C8", Offset = "0x19E38C8", VA = "0x19E38C8")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x19E0AF8", Offset = "0x19E0AF8", VA = "0x19E0AF8")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x19E3A68", Offset = "0x19E3A68", VA = "0x19E3A68")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x19E0CA4", Offset = "0x19E0CA4", VA = "0x19E0CA4")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x19E3B08", Offset = "0x19E3B08", VA = "0x19E3B08")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x19E3BD4", Offset = "0x19E3BD4", VA = "0x19E3BD4")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x19E3CD0", Offset = "0x19E3CD0", VA = "0x19E3CD0")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x19E3D9C", Offset = "0x19E3D9C", VA = "0x19E3D9C")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x19E3E68", Offset = "0x19E3E68", VA = "0x19E3E68")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x19E3F30", Offset = "0x19E3F30", VA = "0x19E3F30")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x19E3FEC", Offset = "0x19E3FEC", VA = "0x19E3FEC")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x19E404C", Offset = "0x19E404C", VA = "0x19E404C")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x19E40DC", Offset = "0x19E40DC", VA = "0x19E40DC")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x19E416C", Offset = "0x19E416C", VA = "0x19E416C")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x19E420C", Offset = "0x19E420C", VA = "0x19E420C")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x19E42AC", Offset = "0x19E42AC", VA = "0x19E42AC")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x19E433C", Offset = "0x19E433C", VA = "0x19E433C")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x19E43DC", Offset = "0x19E43DC", VA = "0x19E43DC")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x19E446C", Offset = "0x19E446C", VA = "0x19E446C")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x19E450C", Offset = "0x19E450C", VA = "0x19E450C")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x19E45CC", Offset = "0x19E45CC", VA = "0x19E45CC")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x19E465C", Offset = "0x19E465C", VA = "0x19E465C")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x19E46FC", Offset = "0x19E46FC", VA = "0x19E46FC")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x19E479C", Offset = "0x19E479C", VA = "0x19E479C")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x19E483C", Offset = "0x19E483C", VA = "0x19E483C")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x19E081C", Offset = "0x19E081C", VA = "0x19E081C")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x19E48CC", Offset = "0x19E48CC", VA = "0x19E48CC")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x19E495C", Offset = "0x19E495C", VA = "0x19E495C")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x19E4A00", Offset = "0x19E4A00", VA = "0x19E4A00")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x19E4AB4", Offset = "0x19E4AB4", VA = "0x19E4AB4")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x19E4E34", Offset = "0x19E4E34", VA = "0x19E4E34")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x19E114C", Offset = "0x19E114C", VA = "0x19E114C")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x19E4EF4", Offset = "0x19E4EF4", VA = "0x19E4EF4")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x19E4FEC", Offset = "0x19E4FEC", VA = "0x19E4FEC")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x19E5168", Offset = "0x19E5168", VA = "0x19E5168")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x19E5230", Offset = "0x19E5230", VA = "0x19E5230")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x19E52CC", Offset = "0x19E52CC", VA = "0x19E52CC")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x19E5334", Offset = "0x19E5334", VA = "0x19E5334")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x19E53D4", Offset = "0x19E53D4", VA = "0x19E53D4")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x19E5474", Offset = "0x19E5474", VA = "0x19E5474")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x19E550C", Offset = "0x19E550C", VA = "0x19E550C")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x19E55AC", Offset = "0x19E55AC", VA = "0x19E55AC")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x19E563C", Offset = "0x19E563C", VA = "0x19E563C")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x19E56DC", Offset = "0x19E56DC", VA = "0x19E56DC")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x19E5784", Offset = "0x19E5784", VA = "0x19E5784")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x19E5824", Offset = "0x19E5824", VA = "0x19E5824")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x19E58B4", Offset = "0x19E58B4", VA = "0x19E58B4")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x19E598C", Offset = "0x19E598C", VA = "0x19E598C")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x19E5A54", Offset = "0x19E5A54", VA = "0x19E5A54")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x19E5AE4", Offset = "0x19E5AE4", VA = "0x19E5AE4")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x19E5B84", Offset = "0x19E5B84", VA = "0x19E5B84")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x19E5C24", Offset = "0x19E5C24", VA = "0x19E5C24")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x19E5CC4", Offset = "0x19E5CC4", VA = "0x19E5CC4")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x19E5D54", Offset = "0x19E5D54", VA = "0x19E5D54")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x19E5E14", Offset = "0x19E5E14", VA = "0x19E5E14")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x19E5ED4", Offset = "0x19E5ED4", VA = "0x19E5ED4")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x19E5F74", Offset = "0x19E5F74", VA = "0x19E5F74")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x19E604C", Offset = "0x19E604C", VA = "0x19E604C")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x19E6124", Offset = "0x19E6124", VA = "0x19E6124")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x19E61C4", Offset = "0x19E61C4", VA = "0x19E61C4")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x19E6264", Offset = "0x19E6264", VA = "0x19E6264")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x19E6314", Offset = "0x19E6314", VA = "0x19E6314")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x19E63A4", Offset = "0x19E63A4", VA = "0x19E63A4")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x19E6434", Offset = "0x19E6434", VA = "0x19E6434")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x19E64D4", Offset = "0x19E64D4", VA = "0x19E64D4")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x19E6574", Offset = "0x19E6574", VA = "0x19E6574")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x19E6614", Offset = "0x19E6614", VA = "0x19E6614")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x19E66B4", Offset = "0x19E66B4", VA = "0x19E66B4")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x19DFB9C", Offset = "0x19DFB9C", VA = "0x19DFB9C")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x19E6754", Offset = "0x19E6754", VA = "0x19E6754")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x19DFD30", Offset = "0x19DFD30", VA = "0x19DFD30")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x19E6804", Offset = "0x19E6804", VA = "0x19E6804")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x19DFEC8", Offset = "0x19DFEC8", VA = "0x19DFEC8")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x19E001C", Offset = "0x19E001C", VA = "0x19E001C")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x19E018C", Offset = "0x19E018C", VA = "0x19E018C")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x19E03DC", Offset = "0x19E03DC", VA = "0x19E03DC")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x19E0618", Offset = "0x19E0618", VA = "0x19E0618")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x19E68B4", Offset = "0x19E68B4", VA = "0x19E68B4")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x19E6954", Offset = "0x19E6954", VA = "0x19E6954")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x19E6A04", Offset = "0x19E6A04", VA = "0x19E6A04")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x19E0E28", Offset = "0x19E0E28", VA = "0x19E0E28")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x19E1010", Offset = "0x19E1010", VA = "0x19E1010")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x19E6A94", Offset = "0x19E6A94", VA = "0x19E6A94")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x19E6B24", Offset = "0x19E6B24", VA = "0x19E6B24")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x19E6BB4", Offset = "0x19E6BB4", VA = "0x19E6BB4")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x19E6C5C", Offset = "0x19E6C5C", VA = "0x19E6C5C")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x19E1630", Offset = "0x19E1630", VA = "0x19E1630")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x19E179C", Offset = "0x19E179C", VA = "0x19E179C")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x19E1908", Offset = "0x19E1908", VA = "0x19E1908")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x19E6CFC", Offset = "0x19E6CFC", VA = "0x19E6CFC")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x19E1A7C", Offset = "0x19E1A7C", VA = "0x19E1A7C")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x19E1BE8", Offset = "0x19E1BE8", VA = "0x19E1BE8")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x19E1D54", Offset = "0x19E1D54", VA = "0x19E1D54")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x19E6D9C", Offset = "0x19E6D9C", VA = "0x19E6D9C")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x19E1EC8", Offset = "0x19E1EC8", VA = "0x19E1EC8")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x19E2034", Offset = "0x19E2034", VA = "0x19E2034")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x19E21A0", Offset = "0x19E21A0", VA = "0x19E21A0")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x19E6E3C", Offset = "0x19E6E3C", VA = "0x19E6E3C")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x19E230C", Offset = "0x19E230C", VA = "0x19E230C")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x19E2468", Offset = "0x19E2468", VA = "0x19E2468")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x19E25D4", Offset = "0x19E25D4", VA = "0x19E25D4")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x19E2740", Offset = "0x19E2740", VA = "0x19E2740")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x19E6EDC", Offset = "0x19E6EDC", VA = "0x19E6EDC")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x19E6F7C", Offset = "0x19E6F7C", VA = "0x19E6F7C")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x19E7050", Offset = "0x19E7050", VA = "0x19E7050")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x19E7100", Offset = "0x19E7100", VA = "0x19E7100")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x19E71D4", Offset = "0x19E71D4", VA = "0x19E71D4")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x19E7284", Offset = "0x19E7284", VA = "0x19E7284")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x19E7358", Offset = "0x19E7358", VA = "0x19E7358")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x19E7408", Offset = "0x19E7408", VA = "0x19E7408")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x19E74B0", Offset = "0x19E74B0", VA = "0x19E74B0")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x19E7550", Offset = "0x19E7550", VA = "0x19E7550")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x19E7624", Offset = "0x19E7624", VA = "0x19E7624")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x19E76D4", Offset = "0x19E76D4", VA = "0x19E76D4")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x19E777C", Offset = "0x19E777C", VA = "0x19E777C")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x19E781C", Offset = "0x19E781C", VA = "0x19E781C")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x19E78F0", Offset = "0x19E78F0", VA = "0x19E78F0")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x19E79A0", Offset = "0x19E79A0", VA = "0x19E79A0")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x19E7A94", Offset = "0x19E7A94", VA = "0x19E7A94")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x19E7B4C", Offset = "0x19E7B4C", VA = "0x19E7B4C")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x19E7C40", Offset = "0x19E7C40", VA = "0x19E7C40")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x19E7CF8", Offset = "0x19E7CF8", VA = "0x19E7CF8")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x19E7E14", Offset = "0x19E7E14", VA = "0x19E7E14")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x19E7EFC", Offset = "0x19E7EFC", VA = "0x19E7EFC")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x19E7F8C", Offset = "0x19E7F8C", VA = "0x19E7F8C")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x19E8034", Offset = "0x19E8034", VA = "0x19E8034")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x19E80D4", Offset = "0x19E80D4", VA = "0x19E80D4")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x19E817C", Offset = "0x19E817C", VA = "0x19E817C")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x19E8218", Offset = "0x19E8218", VA = "0x19E8218")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x19E82C0", Offset = "0x19E82C0", VA = "0x19E82C0")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x19E8360", Offset = "0x19E8360", VA = "0x19E8360")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x19E8434", Offset = "0x19E8434", VA = "0x19E8434")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x19E84E4", Offset = "0x19E84E4", VA = "0x19E84E4")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x19E8644", Offset = "0x19E8644", VA = "0x19E8644")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x19E87F0", Offset = "0x19E87F0", VA = "0x19E87F0")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x19E8898", Offset = "0x19E8898", VA = "0x19E8898")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x19E8938", Offset = "0x19E8938", VA = "0x19E8938")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x19E89E0", Offset = "0x19E89E0", VA = "0x19E89E0")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x19E8A80", Offset = "0x19E8A80", VA = "0x19E8A80")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x19E8BF0", Offset = "0x19E8BF0", VA = "0x19E8BF0")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x19E8C80", Offset = "0x19E8C80", VA = "0x19E8C80")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x19E8D28", Offset = "0x19E8D28", VA = "0x19E8D28")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x19E8DC8", Offset = "0x19E8DC8", VA = "0x19E8DC8")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x19E8E58", Offset = "0x19E8E58", VA = "0x19E8E58")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x19E8F28", Offset = "0x19E8F28", VA = "0x19E8F28")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x19E8FF0", Offset = "0x19E8FF0", VA = "0x19E8FF0")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x19E90B0", Offset = "0x19E90B0", VA = "0x19E90B0")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x19E9168", Offset = "0x19E9168", VA = "0x19E9168")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x19E9208", Offset = "0x19E9208", VA = "0x19E9208")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x19E92A8", Offset = "0x19E92A8", VA = "0x19E92A8")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x19E9380", Offset = "0x19E9380", VA = "0x19E9380")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x19E9458", Offset = "0x19E9458", VA = "0x19E9458")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x19E94E8", Offset = "0x19E94E8", VA = "0x19E94E8")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x19E9590", Offset = "0x19E9590", VA = "0x19E9590")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x19E9630", Offset = "0x19E9630", VA = "0x19E9630")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x19E96C0", Offset = "0x19E96C0", VA = "0x19E96C0")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x19E9750", Offset = "0x19E9750", VA = "0x19E9750")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x19E97E0", Offset = "0x19E97E0", VA = "0x19E97E0")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x19E9890", Offset = "0x19E9890", VA = "0x19E9890")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x19E9920", Offset = "0x19E9920", VA = "0x19E9920")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x19E99B0", Offset = "0x19E99B0", VA = "0x19E99B0")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x19E9A50", Offset = "0x19E9A50", VA = "0x19E9A50")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x19E9AF0", Offset = "0x19E9AF0", VA = "0x19E9AF0")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x19E9BA8", Offset = "0x19E9BA8", VA = "0x19E9BA8")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x19E9C58", Offset = "0x19E9C58", VA = "0x19E9C58")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x19E9D10", Offset = "0x19E9D10", VA = "0x19E9D10")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x19E9DC0", Offset = "0x19E9DC0", VA = "0x19E9DC0")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x19E9E94", Offset = "0x19E9E94", VA = "0x19E9E94")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x19E9F44", Offset = "0x19E9F44", VA = "0x19E9F44")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x19E9FD4", Offset = "0x19E9FD4", VA = "0x19E9FD4")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x19EA0A4", Offset = "0x19EA0A4", VA = "0x19EA0A4")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x19EA16C", Offset = "0x19EA16C", VA = "0x19EA16C")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x19EA224", Offset = "0x19EA224", VA = "0x19EA224")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x19EA2D4", Offset = "0x19EA2D4", VA = "0x19EA2D4")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x19EA394", Offset = "0x19EA394", VA = "0x19EA394")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x19EA44C", Offset = "0x19EA44C", VA = "0x19EA44C")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x19EA504", Offset = "0x19EA504", VA = "0x19EA504")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x19EA5B4", Offset = "0x19EA5B4", VA = "0x19EA5B4")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x19EA66C", Offset = "0x19EA66C", VA = "0x19EA66C")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x19EA71C", Offset = "0x19EA71C", VA = "0x19EA71C")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x19EA7D4", Offset = "0x19EA7D4", VA = "0x19EA7D4")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x19EA884", Offset = "0x19EA884", VA = "0x19EA884")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x19EA934", Offset = "0x19EA934", VA = "0x19EA934")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x19EA9E4", Offset = "0x19EA9E4", VA = "0x19EA9E4")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x19EAA74", Offset = "0x19EAA74", VA = "0x19EAA74")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x19EAB34", Offset = "0x19EAB34", VA = "0x19EAB34")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x19EABEC", Offset = "0x19EABEC", VA = "0x19EABEC")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x19EAC9C", Offset = "0x19EAC9C", VA = "0x19EAC9C")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x19EAD54", Offset = "0x19EAD54", VA = "0x19EAD54")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x19EAED0", Offset = "0x19EAED0", VA = "0x19EAED0")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x19EAF70", Offset = "0x19EAF70", VA = "0x19EAF70")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x19EB04C", Offset = "0x19EB04C", VA = "0x19EB04C")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x19EB104", Offset = "0x19EB104", VA = "0x19EB104")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x19EB194", Offset = "0x19EB194", VA = "0x19EB194")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x19EB234", Offset = "0x19EB234", VA = "0x19EB234")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x19EB2C4", Offset = "0x19EB2C4", VA = "0x19EB2C4")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x19EB374", Offset = "0x19EB374", VA = "0x19EB374")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x19EB414", Offset = "0x19EB414", VA = "0x19EB414")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x19EB4A4", Offset = "0x19EB4A4", VA = "0x19EB4A4")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x19EB544", Offset = "0x19EB544", VA = "0x19EB544")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x19EB5F0", Offset = "0x19EB5F0", VA = "0x19EB5F0")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x19EB690", Offset = "0x19EB690", VA = "0x19EB690")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x19EB730", Offset = "0x19EB730", VA = "0x19EB730")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x19EB7E8", Offset = "0x19EB7E8", VA = "0x19EB7E8")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x19EB8A0", Offset = "0x19EB8A0", VA = "0x19EB8A0")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x19EB940", Offset = "0x19EB940", VA = "0x19EB940")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x19EB9D0", Offset = "0x19EB9D0", VA = "0x19EB9D0")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x19EBA70", Offset = "0x19EBA70", VA = "0x19EBA70")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x19EBB00", Offset = "0x19EBB00", VA = "0x19EBB00")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x19EBBA0", Offset = "0x19EBBA0", VA = "0x19EBBA0")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x19EBC30", Offset = "0x19EBC30", VA = "0x19EBC30")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x19EBCD0", Offset = "0x19EBCD0", VA = "0x19EBCD0")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x19EBD8C", Offset = "0x19EBD8C", VA = "0x19EBD8C")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x19EBE3C", Offset = "0x19EBE3C", VA = "0x19EBE3C")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x19EBEEC", Offset = "0x19EBEEC", VA = "0x19EBEEC")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x19EBF9C", Offset = "0x19EBF9C", VA = "0x19EBF9C")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x19EC050", Offset = "0x19EC050", VA = "0x19EC050")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x19EC0F0", Offset = "0x19EC0F0", VA = "0x19EC0F0")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x19EC190", Offset = "0x19EC190", VA = "0x19EC190")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x19EC24C", Offset = "0x19EC24C", VA = "0x19EC24C")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x19EC2FC", Offset = "0x19EC2FC", VA = "0x19EC2FC")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x19EC3B4", Offset = "0x19EC3B4", VA = "0x19EC3B4")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x19EC52C", Offset = "0x19EC52C", VA = "0x19EC52C")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x19EC5DC", Offset = "0x19EC5DC", VA = "0x19EC5DC")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x19EC68C", Offset = "0x19EC68C", VA = "0x19EC68C")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x19EC73C", Offset = "0x19EC73C", VA = "0x19EC73C")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x19EC7DC", Offset = "0x19EC7DC", VA = "0x19EC7DC")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x19EC87C", Offset = "0x19EC87C", VA = "0x19EC87C")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x19EC924", Offset = "0x19EC924", VA = "0x19EC924")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x19EC9C4", Offset = "0x19EC9C4", VA = "0x19EC9C4")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x19ECA64", Offset = "0x19ECA64", VA = "0x19ECA64")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x19ECAF4", Offset = "0x19ECAF4", VA = "0x19ECAF4")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x19ECB94", Offset = "0x19ECB94", VA = "0x19ECB94")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x19ECC24", Offset = "0x19ECC24", VA = "0x19ECC24")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x19ECCB4", Offset = "0x19ECCB4", VA = "0x19ECCB4")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x19ECD44", Offset = "0x19ECD44", VA = "0x19ECD44")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x19ECDE4", Offset = "0x19ECDE4", VA = "0x19ECDE4")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x19ECE84", Offset = "0x19ECE84", VA = "0x19ECE84")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x19ECF14", Offset = "0x19ECF14", VA = "0x19ECF14")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x19ECFA4", Offset = "0x19ECFA4", VA = "0x19ECFA4")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x19ED044", Offset = "0x19ED044", VA = "0x19ED044")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x19ED0E4", Offset = "0x19ED0E4", VA = "0x19ED0E4")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x19ED184", Offset = "0x19ED184", VA = "0x19ED184")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x19ED224", Offset = "0x19ED224", VA = "0x19ED224")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x19ED2C4", Offset = "0x19ED2C4", VA = "0x19ED2C4")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x19ED354", Offset = "0x19ED354", VA = "0x19ED354")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x19ED3E4", Offset = "0x19ED3E4", VA = "0x19ED3E4")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x19ED474", Offset = "0x19ED474", VA = "0x19ED474")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x19ED504", Offset = "0x19ED504", VA = "0x19ED504")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x19ED5C0", Offset = "0x19ED5C0", VA = "0x19ED5C0")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x19ED670", Offset = "0x19ED670", VA = "0x19ED670")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x19ED734", Offset = "0x19ED734", VA = "0x19ED734")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x19ED7EC", Offset = "0x19ED7EC", VA = "0x19ED7EC")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x19ED88C", Offset = "0x19ED88C", VA = "0x19ED88C")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x19ED8F4", Offset = "0x19ED8F4", VA = "0x19ED8F4")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x19ED994", Offset = "0x19ED994", VA = "0x19ED994")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x19EDA34", Offset = "0x19EDA34", VA = "0x19EDA34")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x19EDA9C", Offset = "0x19EDA9C", VA = "0x19EDA9C")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x19EDB3C", Offset = "0x19EDB3C", VA = "0x19EDB3C")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x19EDBDC", Offset = "0x19EDBDC", VA = "0x19EDBDC")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x19EDC7C", Offset = "0x19EDC7C", VA = "0x19EDC7C")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x19EDD2C", Offset = "0x19EDD2C", VA = "0x19EDD2C")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x19EDD94", Offset = "0x19EDD94", VA = "0x19EDD94")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x19EDE34", Offset = "0x19EDE34", VA = "0x19EDE34")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x19EDED4", Offset = "0x19EDED4", VA = "0x19EDED4")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x19EDF7C", Offset = "0x19EDF7C", VA = "0x19EDF7C")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x19EDFE4", Offset = "0x19EDFE4", VA = "0x19EDFE4")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x19EE084", Offset = "0x19EE084", VA = "0x19EE084")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x19EE124", Offset = "0x19EE124", VA = "0x19EE124")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x19EE1CC", Offset = "0x19EE1CC", VA = "0x19EE1CC")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x19EE234", Offset = "0x19EE234", VA = "0x19EE234")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x19EE2D4", Offset = "0x19EE2D4", VA = "0x19EE2D4")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x19EE33C", Offset = "0x19EE33C", VA = "0x19EE33C")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x19EE3DC", Offset = "0x19EE3DC", VA = "0x19EE3DC")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x19EE48C", Offset = "0x19EE48C", VA = "0x19EE48C")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x19EE4F4", Offset = "0x19EE4F4", VA = "0x19EE4F4")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x19EE594", Offset = "0x19EE594", VA = "0x19EE594")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x19EE634", Offset = "0x19EE634", VA = "0x19EE634")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x19EE6DC", Offset = "0x19EE6DC", VA = "0x19EE6DC")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x19EE784", Offset = "0x19EE784", VA = "0x19EE784")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x19EE7EC", Offset = "0x19EE7EC", VA = "0x19EE7EC")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x19EE88C", Offset = "0x19EE88C", VA = "0x19EE88C")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x19EE92C", Offset = "0x19EE92C", VA = "0x19EE92C")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x19EE9CC", Offset = "0x19EE9CC", VA = "0x19EE9CC")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x19EEA34", Offset = "0x19EEA34", VA = "0x19EEA34")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x19EEAD4", Offset = "0x19EEAD4", VA = "0x19EEAD4")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x19EEB74", Offset = "0x19EEB74", VA = "0x19EEB74")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x19EEBDC", Offset = "0x19EEBDC", VA = "0x19EEBDC")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x19EEC7C", Offset = "0x19EEC7C", VA = "0x19EEC7C")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x19EED1C", Offset = "0x19EED1C", VA = "0x19EED1C")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x19EED84", Offset = "0x19EED84", VA = "0x19EED84")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x19EEE24", Offset = "0x19EEE24", VA = "0x19EEE24")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x19EEE8C", Offset = "0x19EEE8C", VA = "0x19EEE8C")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x19EEF2C", Offset = "0x19EEF2C", VA = "0x19EEF2C")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x19EEF94", Offset = "0x19EEF94", VA = "0x19EEF94")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x19EF034", Offset = "0x19EF034", VA = "0x19EF034")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x19EF09C", Offset = "0x19EF09C", VA = "0x19EF09C")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x19EF13C", Offset = "0x19EF13C", VA = "0x19EF13C")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x19EF1DC", Offset = "0x19EF1DC", VA = "0x19EF1DC")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x19EF28C", Offset = "0x19EF28C", VA = "0x19EF28C")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x19EF32C", Offset = "0x19EF32C", VA = "0x19EF32C")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x19EF3CC", Offset = "0x19EF3CC", VA = "0x19EF3CC")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x19EF46C", Offset = "0x19EF46C", VA = "0x19EF46C")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x19EF4D4", Offset = "0x19EF4D4", VA = "0x19EF4D4")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x19EF574", Offset = "0x19EF574", VA = "0x19EF574")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x19EF61C", Offset = "0x19EF61C", VA = "0x19EF61C")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x19EF6BC", Offset = "0x19EF6BC", VA = "0x19EF6BC")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x19EF75C", Offset = "0x19EF75C", VA = "0x19EF75C")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x19EF7C4", Offset = "0x19EF7C4", VA = "0x19EF7C4")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x19EF864", Offset = "0x19EF864", VA = "0x19EF864")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x19EF90C", Offset = "0x19EF90C", VA = "0x19EF90C")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x19EF9AC", Offset = "0x19EF9AC", VA = "0x19EF9AC")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x19EFA14", Offset = "0x19EFA14", VA = "0x19EFA14")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x19EFAB4", Offset = "0x19EFAB4", VA = "0x19EFAB4")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x19EFB54", Offset = "0x19EFB54", VA = "0x19EFB54")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x19EFBF4", Offset = "0x19EFBF4", VA = "0x19EFBF4")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x19EFC94", Offset = "0x19EFC94", VA = "0x19EFC94")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x19EFD34", Offset = "0x19EFD34", VA = "0x19EFD34")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x19EFDDC", Offset = "0x19EFDDC", VA = "0x19EFDDC")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x19EFE7C", Offset = "0x19EFE7C", VA = "0x19EFE7C")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x19EFF1C", Offset = "0x19EFF1C", VA = "0x19EFF1C")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x19EFF84", Offset = "0x19EFF84", VA = "0x19EFF84")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x19F0024", Offset = "0x19F0024", VA = "0x19F0024")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x19F0140", Offset = "0x19F0140", VA = "0x19F0140")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x19F00A0", Offset = "0x19F00A0", VA = "0x19F00A0")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x19F01E0", Offset = "0x19F01E0", VA = "0x19F01E0")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x19F0248", Offset = "0x19F0248", VA = "0x19F0248")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x19F02E8", Offset = "0x19F02E8", VA = "0x19F02E8")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x19F0350", Offset = "0x19F0350", VA = "0x19F0350")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x19F03F0", Offset = "0x19F03F0", VA = "0x19F03F0")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002000")]
		[Address(RVA = "0x19F0490", Offset = "0x19F0490", VA = "0x19F0490")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x19F0530", Offset = "0x19F0530", VA = "0x19F0530")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002002")]
		[Address(RVA = "0x19F0598", Offset = "0x19F0598", VA = "0x19F0598")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x19F0638", Offset = "0x19F0638", VA = "0x19F0638")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002004")]
		[Address(RVA = "0x19F06A0", Offset = "0x19F06A0", VA = "0x19F06A0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002005")]
		[Address(RVA = "0x19F0740", Offset = "0x19F0740", VA = "0x19F0740")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002006")]
		[Address(RVA = "0x19F07E0", Offset = "0x19F07E0", VA = "0x19F07E0")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x19F0880", Offset = "0x19F0880", VA = "0x19F0880")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002008")]
		[Address(RVA = "0x19F08E8", Offset = "0x19F08E8", VA = "0x19F08E8")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002009")]
		[Address(RVA = "0x19F0988", Offset = "0x19F0988", VA = "0x19F0988")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x19F0A38", Offset = "0x19F0A38", VA = "0x19F0A38")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600200B")]
		[Address(RVA = "0x19F0AA0", Offset = "0x19F0AA0", VA = "0x19F0AA0")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600200C")]
		[Address(RVA = "0x19F0B40", Offset = "0x19F0B40", VA = "0x19F0B40")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600200D")]
		[Address(RVA = "0x19F0BE0", Offset = "0x19F0BE0", VA = "0x19F0BE0")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x19F0C88", Offset = "0x19F0C88", VA = "0x19F0C88")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600200F")]
		[Address(RVA = "0x19F0CF0", Offset = "0x19F0CF0", VA = "0x19F0CF0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x19F0D90", Offset = "0x19F0D90", VA = "0x19F0D90")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002011")]
		[Address(RVA = "0x19F0DF8", Offset = "0x19F0DF8", VA = "0x19F0DF8")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002012")]
		[Address(RVA = "0x19F0E98", Offset = "0x19F0E98", VA = "0x19F0E98")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x19F0F38", Offset = "0x19F0F38", VA = "0x19F0F38")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002014")]
		[Address(RVA = "0x19F0FA0", Offset = "0x19F0FA0", VA = "0x19F0FA0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x19F1040", Offset = "0x19F1040", VA = "0x19F1040")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6002016")]
		[Address(RVA = "0x19F10FC", Offset = "0x19F10FC", VA = "0x19F10FC")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x19E33D8", Offset = "0x19E33D8", VA = "0x19E33D8")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002018")]
		[Address(RVA = "0x19F11AC", Offset = "0x19F11AC", VA = "0x19F11AC")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6002019")]
		[Address(RVA = "0x19E3338", Offset = "0x19E3338", VA = "0x19E3338")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x19E3450", Offset = "0x19E3450", VA = "0x19E3450")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600201B")]
		[Address(RVA = "0x19F125C", Offset = "0x19F125C", VA = "0x19F125C")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x19F130C", Offset = "0x19F130C", VA = "0x19F130C")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x19F13A8", Offset = "0x19F13A8", VA = "0x19F13A8")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600201E")]
		[Address(RVA = "0x19F1410", Offset = "0x19F1410", VA = "0x19F1410")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x19F14B0", Offset = "0x19F14B0", VA = "0x19F14B0")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x19F1550", Offset = "0x19F1550", VA = "0x19F1550")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002021")]
		[Address(RVA = "0x19F15B8", Offset = "0x19F15B8", VA = "0x19F15B8")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002022")]
		[Address(RVA = "0x19F1658", Offset = "0x19F1658", VA = "0x19F1658")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002023")]
		[Address(RVA = "0x19F16F8", Offset = "0x19F16F8", VA = "0x19F16F8")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002024")]
		[Address(RVA = "0x19F1798", Offset = "0x19F1798", VA = "0x19F1798")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002025")]
		[Address(RVA = "0x19F1838", Offset = "0x19F1838", VA = "0x19F1838")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x19F18E0", Offset = "0x19F18E0", VA = "0x19F18E0")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002027")]
		[Address(RVA = "0x19F1948", Offset = "0x19F1948", VA = "0x19F1948")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x19F19E8", Offset = "0x19F19E8", VA = "0x19F19E8")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002029")]
		[Address(RVA = "0x19F1A50", Offset = "0x19F1A50", VA = "0x19F1A50")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x19F1AF0", Offset = "0x19F1AF0", VA = "0x19F1AF0")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600202B")]
		[Address(RVA = "0x19F1B58", Offset = "0x19F1B58", VA = "0x19F1B58")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600202C")]
		[Address(RVA = "0x19F1BF8", Offset = "0x19F1BF8", VA = "0x19F1BF8")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x19F1C98", Offset = "0x19F1C98", VA = "0x19F1C98")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600202E")]
		[Address(RVA = "0x19F1D00", Offset = "0x19F1D00", VA = "0x19F1D00")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600202F")]
		[Address(RVA = "0x19F1DA0", Offset = "0x19F1DA0", VA = "0x19F1DA0")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6002030")]
		[Address(RVA = "0x19F1E50", Offset = "0x19F1E50", VA = "0x19F1E50")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x19F1EF0", Offset = "0x19F1EF0", VA = "0x19F1EF0")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002032")]
		[Address(RVA = "0x19F1F58", Offset = "0x19F1F58", VA = "0x19F1F58")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x19F1FF8", Offset = "0x19F1FF8", VA = "0x19F1FF8")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002034")]
		[Address(RVA = "0x19F2060", Offset = "0x19F2060", VA = "0x19F2060")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x19F2100", Offset = "0x19F2100", VA = "0x19F2100")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002036")]
		[Address(RVA = "0x19F2168", Offset = "0x19F2168", VA = "0x19F2168")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002037")]
		[Address(RVA = "0x19F2208", Offset = "0x19F2208", VA = "0x19F2208")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002038")]
		[Address(RVA = "0x19F22B0", Offset = "0x19F22B0", VA = "0x19F22B0")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x19F2358", Offset = "0x19F2358", VA = "0x19F2358")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600203A")]
		[Address(RVA = "0x19F23C0", Offset = "0x19F23C0", VA = "0x19F23C0")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x19F2460", Offset = "0x19F2460", VA = "0x19F2460")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600203C")]
		[Address(RVA = "0x19F24C8", Offset = "0x19F24C8", VA = "0x19F24C8")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600203D")]
		[Address(RVA = "0x19F2568", Offset = "0x19F2568", VA = "0x19F2568")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600203E")]
		[Address(RVA = "0x19F2608", Offset = "0x19F2608", VA = "0x19F2608")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600203F")]
		[Address(RVA = "0x19F26A8", Offset = "0x19F26A8", VA = "0x19F26A8")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002040")]
		[Address(RVA = "0x19F2748", Offset = "0x19F2748", VA = "0x19F2748")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002041")]
		[Address(RVA = "0x19F27F0", Offset = "0x19F27F0", VA = "0x19F27F0")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002042")]
		[Address(RVA = "0x19F2898", Offset = "0x19F2898", VA = "0x19F2898")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002043")]
		[Address(RVA = "0x19F2940", Offset = "0x19F2940", VA = "0x19F2940")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x19F29E8", Offset = "0x19F29E8", VA = "0x19F29E8")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002045")]
		[Address(RVA = "0x19F2B04", Offset = "0x19F2B04", VA = "0x19F2B04")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002046")]
		[Address(RVA = "0x19F2A64", Offset = "0x19F2A64", VA = "0x19F2A64")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002047")]
		[Address(RVA = "0x19F2BA4", Offset = "0x19F2BA4", VA = "0x19F2BA4")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002048")]
		[Address(RVA = "0x19F2C44", Offset = "0x19F2C44", VA = "0x19F2C44")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x19F2CE4", Offset = "0x19F2CE4", VA = "0x19F2CE4")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600204A")]
		[Address(RVA = "0x19F2D4C", Offset = "0x19F2D4C", VA = "0x19F2D4C")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600204B")]
		[Address(RVA = "0x19F2DEC", Offset = "0x19F2DEC", VA = "0x19F2DEC")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600204C")]
		[Address(RVA = "0x19F2E8C", Offset = "0x19F2E8C", VA = "0x19F2E8C")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x19F2F3C", Offset = "0x19F2F3C", VA = "0x19F2F3C")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600204E")]
		[Address(RVA = "0x19F2FA4", Offset = "0x19F2FA4", VA = "0x19F2FA4")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x19F3044", Offset = "0x19F3044", VA = "0x19F3044")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002050")]
		[Address(RVA = "0x19F30AC", Offset = "0x19F30AC", VA = "0x19F30AC")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002051")]
		[Address(RVA = "0x19F314C", Offset = "0x19F314C", VA = "0x19F314C")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002052")]
		[Address(RVA = "0x19F31EC", Offset = "0x19F31EC", VA = "0x19F31EC")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002053")]
		[Address(RVA = "0x19F328C", Offset = "0x19F328C", VA = "0x19F328C")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002054")]
		[Address(RVA = "0x19F3334", Offset = "0x19F3334", VA = "0x19F3334")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002055")]
		[Address(RVA = "0x19F33DC", Offset = "0x19F33DC", VA = "0x19F33DC")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x19F3484", Offset = "0x19F3484", VA = "0x19F3484")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002057")]
		[Address(RVA = "0x19F34EC", Offset = "0x19F34EC", VA = "0x19F34EC")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002058")]
		[Address(RVA = "0x19F358C", Offset = "0x19F358C", VA = "0x19F358C")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x19F362C", Offset = "0x19F362C", VA = "0x19F362C")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600205A")]
		[Address(RVA = "0x19F3694", Offset = "0x19F3694", VA = "0x19F3694")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205B")]
		[Address(RVA = "0x19F3734", Offset = "0x19F3734", VA = "0x19F3734")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600205C")]
		[Address(RVA = "0x19F37E4", Offset = "0x19F37E4", VA = "0x19F37E4")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205D")]
		[Address(RVA = "0x19F3884", Offset = "0x19F3884", VA = "0x19F3884")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205E")]
		[Address(RVA = "0x19F392C", Offset = "0x19F392C", VA = "0x19F392C")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600205F")]
		[Address(RVA = "0x19F39CC", Offset = "0x19F39CC", VA = "0x19F39CC")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002060")]
		[Address(RVA = "0x19F3A74", Offset = "0x19F3A74", VA = "0x19F3A74")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002061")]
		[Address(RVA = "0x19F3B1C", Offset = "0x19F3B1C", VA = "0x19F3B1C")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002062")]
		[Address(RVA = "0x19F3BC4", Offset = "0x19F3BC4", VA = "0x19F3BC4")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002063")]
		[Address(RVA = "0x19F3C64", Offset = "0x19F3C64", VA = "0x19F3C64")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002064")]
		[Address(RVA = "0x19F3D0C", Offset = "0x19F3D0C", VA = "0x19F3D0C")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002065")]
		[Address(RVA = "0x19F3DAC", Offset = "0x19F3DAC", VA = "0x19F3DAC")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x19F3E4C", Offset = "0x19F3E4C", VA = "0x19F3E4C")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002067")]
		[Address(RVA = "0x19F3EB4", Offset = "0x19F3EB4", VA = "0x19F3EB4")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002068")]
		[Address(RVA = "0x19F3F54", Offset = "0x19F3F54", VA = "0x19F3F54")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002069")]
		[Address(RVA = "0x19F3FF4", Offset = "0x19F3FF4", VA = "0x19F3FF4")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600206A")]
		[Address(RVA = "0x19F4094", Offset = "0x19F4094", VA = "0x19F4094")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600206B")]
		[Address(RVA = "0x19F413C", Offset = "0x19F413C", VA = "0x19F413C")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600206C")]
		[Address(RVA = "0x19F41DC", Offset = "0x19F41DC", VA = "0x19F41DC")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600206D")]
		[Address(RVA = "0x19F427C", Offset = "0x19F427C", VA = "0x19F427C")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x19F431C", Offset = "0x19F431C", VA = "0x19F431C")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600206F")]
		[Address(RVA = "0x19F4384", Offset = "0x19F4384", VA = "0x19F4384")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002070")]
		[Address(RVA = "0x19F4424", Offset = "0x19F4424", VA = "0x19F4424")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6002071")]
		[Address(RVA = "0x19F44D4", Offset = "0x19F44D4", VA = "0x19F44D4")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002072")]
		[Address(RVA = "0x19F4574", Offset = "0x19F4574", VA = "0x19F4574")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002073")]
		[Address(RVA = "0x19F4614", Offset = "0x19F4614", VA = "0x19F4614")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x19F46B4", Offset = "0x19F46B4", VA = "0x19F46B4")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002075")]
		[Address(RVA = "0x19F471C", Offset = "0x19F471C", VA = "0x19F471C")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002076")]
		[Address(RVA = "0x19F47BC", Offset = "0x19F47BC", VA = "0x19F47BC")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002077")]
		[Address(RVA = "0x19F485C", Offset = "0x19F485C", VA = "0x19F485C")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x19F490C", Offset = "0x19F490C", VA = "0x19F490C")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002079")]
		[Address(RVA = "0x19F4974", Offset = "0x19F4974", VA = "0x19F4974")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207A")]
		[Address(RVA = "0x19F4A14", Offset = "0x19F4A14", VA = "0x19F4A14")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207B")]
		[Address(RVA = "0x19F4AB4", Offset = "0x19F4AB4", VA = "0x19F4AB4")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207C")]
		[Address(RVA = "0x19F4B5C", Offset = "0x19F4B5C", VA = "0x19F4B5C")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207D")]
		[Address(RVA = "0x19F4BFC", Offset = "0x19F4BFC", VA = "0x19F4BFC")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207E")]
		[Address(RVA = "0x19F4C9C", Offset = "0x19F4C9C", VA = "0x19F4C9C")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600207F")]
		[Address(RVA = "0x19F4D3C", Offset = "0x19F4D3C", VA = "0x19F4D3C")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x19F4DDC", Offset = "0x19F4DDC", VA = "0x19F4DDC")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002081")]
		[Address(RVA = "0x19F4E44", Offset = "0x19F4E44", VA = "0x19F4E44")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002082")]
		[Address(RVA = "0x19F4EE4", Offset = "0x19F4EE4", VA = "0x19F4EE4")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x19F4F84", Offset = "0x19F4F84", VA = "0x19F4F84")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002084")]
		[Address(RVA = "0x19F4FEC", Offset = "0x19F4FEC", VA = "0x19F4FEC")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002085")]
		[Address(RVA = "0x19F508C", Offset = "0x19F508C", VA = "0x19F508C")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002086")]
		[Address(RVA = "0x19F512C", Offset = "0x19F512C", VA = "0x19F512C")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002087")]
		[Address(RVA = "0x19F51CC", Offset = "0x19F51CC", VA = "0x19F51CC")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6002088")]
		[Address(RVA = "0x19F527C", Offset = "0x19F527C", VA = "0x19F527C")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002089")]
		[Address(RVA = "0x19F531C", Offset = "0x19F531C", VA = "0x19F531C")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600208A")]
		[Address(RVA = "0x19F53BC", Offset = "0x19F53BC", VA = "0x19F53BC")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600208B")]
		[Address(RVA = "0x19F545C", Offset = "0x19F545C", VA = "0x19F545C")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600208C")]
		[Address(RVA = "0x19F550C", Offset = "0x19F550C", VA = "0x19F550C")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600208D")]
		[Address(RVA = "0x19F55AC", Offset = "0x19F55AC", VA = "0x19F55AC")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600208E")]
		[Address(RVA = "0x19F564C", Offset = "0x19F564C", VA = "0x19F564C")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x19F56EC", Offset = "0x19F56EC", VA = "0x19F56EC")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002090")]
		[Address(RVA = "0x19F5754", Offset = "0x19F5754", VA = "0x19F5754")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002091")]
		[Address(RVA = "0x19F57F4", Offset = "0x19F57F4", VA = "0x19F57F4")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002092")]
		[Address(RVA = "0x19F5894", Offset = "0x19F5894", VA = "0x19F5894")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002093")]
		[Address(RVA = "0x19F5934", Offset = "0x19F5934", VA = "0x19F5934")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002094")]
		[Address(RVA = "0x19F59DC", Offset = "0x19F59DC", VA = "0x19F59DC")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6002095")]
		[Address(RVA = "0x19F5A8C", Offset = "0x19F5A8C", VA = "0x19F5A8C")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002096")]
		[Address(RVA = "0x19F5B2C", Offset = "0x19F5B2C", VA = "0x19F5B2C")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002097")]
		[Address(RVA = "0x19F5BCC", Offset = "0x19F5BCC", VA = "0x19F5BCC")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x19F5C6C", Offset = "0x19F5C6C", VA = "0x19F5C6C")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002099")]
		[Address(RVA = "0x19F5D0C", Offset = "0x19F5D0C", VA = "0x19F5D0C")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209A")]
		[Address(RVA = "0x19F5DAC", Offset = "0x19F5DAC", VA = "0x19F5DAC")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209B")]
		[Address(RVA = "0x19F5E4C", Offset = "0x19F5E4C", VA = "0x19F5E4C")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209C")]
		[Address(RVA = "0x19F5EEC", Offset = "0x19F5EEC", VA = "0x19F5EEC")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209D")]
		[Address(RVA = "0x19F5F8C", Offset = "0x19F5F8C", VA = "0x19F5F8C")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209E")]
		[Address(RVA = "0x19F602C", Offset = "0x19F602C", VA = "0x19F602C")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600209F")]
		[Address(RVA = "0x19F60CC", Offset = "0x19F60CC", VA = "0x19F60CC")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x19F616C", Offset = "0x19F616C", VA = "0x19F616C")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x19F620C", Offset = "0x19F620C", VA = "0x19F620C")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x19F62AC", Offset = "0x19F62AC", VA = "0x19F62AC")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x19F634C", Offset = "0x19F634C", VA = "0x19F634C")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x19F63EC", Offset = "0x19F63EC", VA = "0x19F63EC")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x19F648C", Offset = "0x19F648C", VA = "0x19F648C")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x19F652C", Offset = "0x19F652C", VA = "0x19F652C")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x19F65CC", Offset = "0x19F65CC", VA = "0x19F65CC")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x19F666C", Offset = "0x19F666C", VA = "0x19F666C")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x19F670C", Offset = "0x19F670C", VA = "0x19F670C")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x19F67AC", Offset = "0x19F67AC", VA = "0x19F67AC")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x19F684C", Offset = "0x19F684C", VA = "0x19F684C")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x19F68EC", Offset = "0x19F68EC", VA = "0x19F68EC")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x19F698C", Offset = "0x19F698C", VA = "0x19F698C")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x19F6A2C", Offset = "0x19F6A2C", VA = "0x19F6A2C")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x19F6ACC", Offset = "0x19F6ACC", VA = "0x19F6ACC")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x19F6B6C", Offset = "0x19F6B6C", VA = "0x19F6B6C")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x19F6C0C", Offset = "0x19F6C0C", VA = "0x19F6C0C")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x19F6CAC", Offset = "0x19F6CAC", VA = "0x19F6CAC")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x19F6D4C", Offset = "0x19F6D4C", VA = "0x19F6D4C")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x19F6DEC", Offset = "0x19F6DEC", VA = "0x19F6DEC")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x19F6E8C", Offset = "0x19F6E8C", VA = "0x19F6E8C")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x19F6F2C", Offset = "0x19F6F2C", VA = "0x19F6F2C")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x19F6FCC", Offset = "0x19F6FCC", VA = "0x19F6FCC")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x19F706C", Offset = "0x19F706C", VA = "0x19F706C")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x19F710C", Offset = "0x19F710C", VA = "0x19F710C")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x19F71AC", Offset = "0x19F71AC", VA = "0x19F71AC")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x19F724C", Offset = "0x19F724C", VA = "0x19F724C")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x19F72EC", Offset = "0x19F72EC", VA = "0x19F72EC")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x19F738C", Offset = "0x19F738C", VA = "0x19F738C")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x19F742C", Offset = "0x19F742C", VA = "0x19F742C")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x19F74CC", Offset = "0x19F74CC", VA = "0x19F74CC")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x19F756C", Offset = "0x19F756C", VA = "0x19F756C")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x19F760C", Offset = "0x19F760C", VA = "0x19F760C")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x19F76AC", Offset = "0x19F76AC", VA = "0x19F76AC")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x19F774C", Offset = "0x19F774C", VA = "0x19F774C")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x19F77EC", Offset = "0x19F77EC", VA = "0x19F77EC")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x19F788C", Offset = "0x19F788C", VA = "0x19F788C")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x19F792C", Offset = "0x19F792C", VA = "0x19F792C")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x19F79CC", Offset = "0x19F79CC", VA = "0x19F79CC")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x19F7A6C", Offset = "0x19F7A6C", VA = "0x19F7A6C")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x19F7B0C", Offset = "0x19F7B0C", VA = "0x19F7B0C")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x19F7BAC", Offset = "0x19F7BAC", VA = "0x19F7BAC")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x19F7C4C", Offset = "0x19F7C4C", VA = "0x19F7C4C")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x19F7CEC", Offset = "0x19F7CEC", VA = "0x19F7CEC")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x19F7D8C", Offset = "0x19F7D8C", VA = "0x19F7D8C")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x19F7E2C", Offset = "0x19F7E2C", VA = "0x19F7E2C")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x19F7ECC", Offset = "0x19F7ECC", VA = "0x19F7ECC")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x19F7F34", Offset = "0x19F7F34", VA = "0x19F7F34")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x19F7FD4", Offset = "0x19F7FD4", VA = "0x19F7FD4")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x19F8074", Offset = "0x19F8074", VA = "0x19F8074")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x19F8114", Offset = "0x19F8114", VA = "0x19F8114")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x19F81B4", Offset = "0x19F81B4", VA = "0x19F81B4")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x19F8254", Offset = "0x19F8254", VA = "0x19F8254")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x19F82F4", Offset = "0x19F82F4", VA = "0x19F82F4")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x19F8394", Offset = "0x19F8394", VA = "0x19F8394")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x19F8434", Offset = "0x19F8434", VA = "0x19F8434")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x19F84D4", Offset = "0x19F84D4", VA = "0x19F84D4")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x19F857C", Offset = "0x19F857C", VA = "0x19F857C")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x19F861C", Offset = "0x19F861C", VA = "0x19F861C")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x19F86BC", Offset = "0x19F86BC", VA = "0x19F86BC")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x19F877C", Offset = "0x19F877C", VA = "0x19F877C")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x19F883C", Offset = "0x19F883C", VA = "0x19F883C")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x19F88FC", Offset = "0x19F88FC", VA = "0x19F88FC")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x19F89AC", Offset = "0x19F89AC", VA = "0x19F89AC")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x19F8A4C", Offset = "0x19F8A4C", VA = "0x19F8A4C")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x19F8AEC", Offset = "0x19F8AEC", VA = "0x19F8AEC")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x19F8B8C", Offset = "0x19F8B8C", VA = "0x19F8B8C")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x19F8C2C", Offset = "0x19F8C2C", VA = "0x19F8C2C")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x19F8CCC", Offset = "0x19F8CCC", VA = "0x19F8CCC")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x19F8D6C", Offset = "0x19F8D6C", VA = "0x19F8D6C")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x19F8E0C", Offset = "0x19F8E0C", VA = "0x19F8E0C")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x19F8EAC", Offset = "0x19F8EAC", VA = "0x19F8EAC")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x19F8F4C", Offset = "0x19F8F4C", VA = "0x19F8F4C")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x19F8FEC", Offset = "0x19F8FEC", VA = "0x19F8FEC")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x19F908C", Offset = "0x19F908C", VA = "0x19F908C")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x19F912C", Offset = "0x19F912C", VA = "0x19F912C")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x19F91CC", Offset = "0x19F91CC", VA = "0x19F91CC")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x19F9268", Offset = "0x19F9268", VA = "0x19F9268")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x19F9308", Offset = "0x19F9308", VA = "0x19F9308")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x19F93A4", Offset = "0x19F93A4", VA = "0x19F93A4")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x19F940C", Offset = "0x19F940C", VA = "0x19F940C")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x19F94AC", Offset = "0x19F94AC", VA = "0x19F94AC")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x19F955C", Offset = "0x19F955C", VA = "0x19F955C")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x19F95FC", Offset = "0x19F95FC", VA = "0x19F95FC")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x19F969C", Offset = "0x19F969C", VA = "0x19F969C")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x19F973C", Offset = "0x19F973C", VA = "0x19F973C")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x19F97E4", Offset = "0x19F97E4", VA = "0x19F97E4")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x19F9884", Offset = "0x19F9884", VA = "0x19F9884")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x19F9924", Offset = "0x19F9924", VA = "0x19F9924")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x19F998C", Offset = "0x19F998C", VA = "0x19F998C")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x19F9A2C", Offset = "0x19F9A2C", VA = "0x19F9A2C")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x19F9A94", Offset = "0x19F9A94", VA = "0x19F9A94")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x19F9B34", Offset = "0x19F9B34", VA = "0x19F9B34")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x19F9B9C", Offset = "0x19F9B9C", VA = "0x19F9B9C")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x19F9C3C", Offset = "0x19F9C3C", VA = "0x19F9C3C")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002100")]
		[Address(RVA = "0x19F9CA4", Offset = "0x19F9CA4", VA = "0x19F9CA4")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x19F9D44", Offset = "0x19F9D44", VA = "0x19F9D44")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002102")]
		[Address(RVA = "0x19F9DAC", Offset = "0x19F9DAC", VA = "0x19F9DAC")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x19F9E4C", Offset = "0x19F9E4C", VA = "0x19F9E4C")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002104")]
		[Address(RVA = "0x19F9EB4", Offset = "0x19F9EB4", VA = "0x19F9EB4")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002105")]
		[Address(RVA = "0x19F9F54", Offset = "0x19F9F54", VA = "0x19F9F54")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x19FA004", Offset = "0x19FA004", VA = "0x19FA004")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002107")]
		[Address(RVA = "0x19FA06C", Offset = "0x19FA06C", VA = "0x19FA06C")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002108")]
		[Address(RVA = "0x19FA10C", Offset = "0x19FA10C", VA = "0x19FA10C")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002109")]
		[Address(RVA = "0x19FA1AC", Offset = "0x19FA1AC", VA = "0x19FA1AC")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x19FA254", Offset = "0x19FA254", VA = "0x19FA254")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600210B")]
		[Address(RVA = "0x19FA2BC", Offset = "0x19FA2BC", VA = "0x19FA2BC")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x19FA35C", Offset = "0x19FA35C", VA = "0x19FA35C")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600210D")]
		[Address(RVA = "0x19FA3C4", Offset = "0x19FA3C4", VA = "0x19FA3C4")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600210E")]
		[Address(RVA = "0x19FA464", Offset = "0x19FA464", VA = "0x19FA464")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x19FA504", Offset = "0x19FA504", VA = "0x19FA504")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002110")]
		[Address(RVA = "0x19FA56C", Offset = "0x19FA56C", VA = "0x19FA56C")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002111")]
		[Address(RVA = "0x19FA60C", Offset = "0x19FA60C", VA = "0x19FA60C")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x19FA6BC", Offset = "0x19FA6BC", VA = "0x19FA6BC")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002113")]
		[Address(RVA = "0x19FA724", Offset = "0x19FA724", VA = "0x19FA724")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002114")]
		[Address(RVA = "0x19FA7C4", Offset = "0x19FA7C4", VA = "0x19FA7C4")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002115")]
		[Address(RVA = "0x19FA864", Offset = "0x19FA864", VA = "0x19FA864")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002116")]
		[Address(RVA = "0x19FA90C", Offset = "0x19FA90C", VA = "0x19FA90C")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002117")]
		[Address(RVA = "0x19FA9AC", Offset = "0x19FA9AC", VA = "0x19FA9AC")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x19FAA4C", Offset = "0x19FAA4C", VA = "0x19FAA4C")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002119")]
		[Address(RVA = "0x19FAAB4", Offset = "0x19FAAB4", VA = "0x19FAAB4")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211A")]
		[Address(RVA = "0x19FAB54", Offset = "0x19FAB54", VA = "0x19FAB54")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211B")]
		[Address(RVA = "0x19FABF4", Offset = "0x19FABF4", VA = "0x19FABF4")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211C")]
		[Address(RVA = "0x19FAC94", Offset = "0x19FAC94", VA = "0x19FAC94")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211D")]
		[Address(RVA = "0x19FAD3C", Offset = "0x19FAD3C", VA = "0x19FAD3C")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211E")]
		[Address(RVA = "0x19FADDC", Offset = "0x19FADDC", VA = "0x19FADDC")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600211F")]
		[Address(RVA = "0x19FAE7C", Offset = "0x19FAE7C", VA = "0x19FAE7C")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002120")]
		[Address(RVA = "0x19FAF1C", Offset = "0x19FAF1C", VA = "0x19FAF1C")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x19FAFBC", Offset = "0x19FAFBC", VA = "0x19FAFBC")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002122")]
		[Address(RVA = "0x19FB024", Offset = "0x19FB024", VA = "0x19FB024")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002123")]
		[Address(RVA = "0x19FB0C4", Offset = "0x19FB0C4", VA = "0x19FB0C4")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002124")]
		[Address(RVA = "0x19FB160", Offset = "0x19FB160", VA = "0x19FB160")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002125")]
		[Address(RVA = "0x19FB200", Offset = "0x19FB200", VA = "0x19FB200")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002126")]
		[Address(RVA = "0x19FB29C", Offset = "0x19FB29C", VA = "0x19FB29C")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002127")]
		[Address(RVA = "0x19FB33C", Offset = "0x19FB33C", VA = "0x19FB33C")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x19FB3EC", Offset = "0x19FB3EC", VA = "0x19FB3EC")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002129")]
		[Address(RVA = "0x19FB454", Offset = "0x19FB454", VA = "0x19FB454")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212A")]
		[Address(RVA = "0x19FB4F4", Offset = "0x19FB4F4", VA = "0x19FB4F4")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212B")]
		[Address(RVA = "0x19FB594", Offset = "0x19FB594", VA = "0x19FB594")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212C")]
		[Address(RVA = "0x19FB63C", Offset = "0x19FB63C", VA = "0x19FB63C")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212D")]
		[Address(RVA = "0x19FB6DC", Offset = "0x19FB6DC", VA = "0x19FB6DC")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600212E")]
		[Address(RVA = "0x19FB77C", Offset = "0x19FB77C", VA = "0x19FB77C")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x19FB81C", Offset = "0x19FB81C", VA = "0x19FB81C")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6002130")]
		[Address(RVA = "0x19FB884", Offset = "0x19FB884", VA = "0x19FB884")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002131")]
		[Address(RVA = "0x19FB924", Offset = "0x19FB924", VA = "0x19FB924")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x19FB9D4", Offset = "0x19FB9D4", VA = "0x19FB9D4")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002133")]
		[Address(RVA = "0x19FBA3C", Offset = "0x19FBA3C", VA = "0x19FBA3C")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002134")]
		[Address(RVA = "0x19FBADC", Offset = "0x19FBADC", VA = "0x19FBADC")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002135")]
		[Address(RVA = "0x19FBB7C", Offset = "0x19FBB7C", VA = "0x19FBB7C")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002136")]
		[Address(RVA = "0x19FBC24", Offset = "0x19FBC24", VA = "0x19FBC24")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002137")]
		[Address(RVA = "0x19FBCC4", Offset = "0x19FBCC4", VA = "0x19FBCC4")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002138")]
		[Address(RVA = "0x19FBD64", Offset = "0x19FBD64", VA = "0x19FBD64")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6002139")]
		[Address(RVA = "0x19FBE14", Offset = "0x19FBE14", VA = "0x19FBE14")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213A")]
		[Address(RVA = "0x19FBEB4", Offset = "0x19FBEB4", VA = "0x19FBEB4")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213B")]
		[Address(RVA = "0x19FBF54", Offset = "0x19FBF54", VA = "0x19FBF54")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213C")]
		[Address(RVA = "0x19FBFFC", Offset = "0x19FBFFC", VA = "0x19FBFFC")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213D")]
		[Address(RVA = "0x19FC09C", Offset = "0x19FC09C", VA = "0x19FC09C")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600213E")]
		[Address(RVA = "0x19FC13C", Offset = "0x19FC13C", VA = "0x19FC13C")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x19FC1DC", Offset = "0x19FC1DC", VA = "0x19FC1DC")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002140")]
		[Address(RVA = "0x19FC244", Offset = "0x19FC244", VA = "0x19FC244")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002141")]
		[Address(RVA = "0x19FC2E4", Offset = "0x19FC2E4", VA = "0x19FC2E4")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002142")]
		[Address(RVA = "0x19FC384", Offset = "0x19FC384", VA = "0x19FC384")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x19FC424", Offset = "0x19FC424", VA = "0x19FC424")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002144")]
		[Address(RVA = "0x19FC48C", Offset = "0x19FC48C", VA = "0x19FC48C")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002145")]
		[Address(RVA = "0x19FC52C", Offset = "0x19FC52C", VA = "0x19FC52C")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x19FC5CC", Offset = "0x19FC5CC", VA = "0x19FC5CC")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002147")]
		[Address(RVA = "0x19FC634", Offset = "0x19FC634", VA = "0x19FC634")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002148")]
		[Address(RVA = "0x19FC6D4", Offset = "0x19FC6D4", VA = "0x19FC6D4")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x19FC774", Offset = "0x19FC774", VA = "0x19FC774")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600214A")]
		[Address(RVA = "0x19FC7DC", Offset = "0x19FC7DC", VA = "0x19FC7DC")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214B")]
		[Address(RVA = "0x19FC87C", Offset = "0x19FC87C", VA = "0x19FC87C")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214C")]
		[Address(RVA = "0x19FC91C", Offset = "0x19FC91C", VA = "0x19FC91C")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214D")]
		[Address(RVA = "0x19FC9BC", Offset = "0x19FC9BC", VA = "0x19FC9BC")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600214E")]
		[Address(RVA = "0x19FCA6C", Offset = "0x19FCA6C", VA = "0x19FCA6C")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600214F")]
		[Address(RVA = "0x19FCB0C", Offset = "0x19FCB0C", VA = "0x19FCB0C")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x19FCBAC", Offset = "0x19FCBAC", VA = "0x19FCBAC")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002151")]
		[Address(RVA = "0x19FCC14", Offset = "0x19FCC14", VA = "0x19FCC14")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x19FCCB4", Offset = "0x19FCCB4", VA = "0x19FCCB4")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002153")]
		[Address(RVA = "0x19FCD1C", Offset = "0x19FCD1C", VA = "0x19FCD1C")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x19FCDBC", Offset = "0x19FCDBC", VA = "0x19FCDBC")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002155")]
		[Address(RVA = "0x19FCE24", Offset = "0x19FCE24", VA = "0x19FCE24")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x19FCEC4", Offset = "0x19FCEC4", VA = "0x19FCEC4")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002157")]
		[Address(RVA = "0x19FCF2C", Offset = "0x19FCF2C", VA = "0x19FCF2C")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002158")]
		[Address(RVA = "0x19FCFCC", Offset = "0x19FCFCC", VA = "0x19FCFCC")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x19FD06C", Offset = "0x19FD06C", VA = "0x19FD06C")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600215A")]
		[Address(RVA = "0x19FD0D4", Offset = "0x19FD0D4", VA = "0x19FD0D4")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600215B")]
		[Address(RVA = "0x19FD174", Offset = "0x19FD174", VA = "0x19FD174")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600215C")]
		[Address(RVA = "0x19FD214", Offset = "0x19FD214", VA = "0x19FD214")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600215D")]
		[Address(RVA = "0x19FD2B4", Offset = "0x19FD2B4", VA = "0x19FD2B4")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x19FD364", Offset = "0x19FD364", VA = "0x19FD364")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600215F")]
		[Address(RVA = "0x19FD3CC", Offset = "0x19FD3CC", VA = "0x19FD3CC")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002160")]
		[Address(RVA = "0x19FD46C", Offset = "0x19FD46C", VA = "0x19FD46C")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002161")]
		[Address(RVA = "0x19FD50C", Offset = "0x19FD50C", VA = "0x19FD50C")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002162")]
		[Address(RVA = "0x19FD5B4", Offset = "0x19FD5B4", VA = "0x19FD5B4")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x19FD664", Offset = "0x19FD664", VA = "0x19FD664")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002164")]
		[Address(RVA = "0x19FD6CC", Offset = "0x19FD6CC", VA = "0x19FD6CC")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002165")]
		[Address(RVA = "0x19FD76C", Offset = "0x19FD76C", VA = "0x19FD76C")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002166")]
		[Address(RVA = "0x19FD80C", Offset = "0x19FD80C", VA = "0x19FD80C")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x19FD8B4", Offset = "0x19FD8B4", VA = "0x19FD8B4")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002168")]
		[Address(RVA = "0x19FD91C", Offset = "0x19FD91C", VA = "0x19FD91C")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002169")]
		[Address(RVA = "0x19FD9BC", Offset = "0x19FD9BC", VA = "0x19FD9BC")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216A")]
		[Address(RVA = "0x19FDA64", Offset = "0x19FDA64", VA = "0x19FDA64")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600216B")]
		[Address(RVA = "0x19FDB04", Offset = "0x19FDB04", VA = "0x19FDB04")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x600216C")]
		[Address(RVA = "0x19FDBC4", Offset = "0x19FDBC4", VA = "0x19FDBC4")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x600216D")]
		[Address(RVA = "0x19FDC84", Offset = "0x19FDC84", VA = "0x19FDC84")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x600216E")]
		[Address(RVA = "0x19FDD44", Offset = "0x19FDD44", VA = "0x19FDD44")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x600216F")]
		[Address(RVA = "0x19FDE04", Offset = "0x19FDE04", VA = "0x19FDE04")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6002170")]
		[Address(RVA = "0x19DF630", Offset = "0x19DF630", VA = "0x19DF630")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002171")]
		[Address(RVA = "0x19DFA20", Offset = "0x19DFA20", VA = "0x19DFA20")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002172")]
		[Address(RVA = "0x19DF738", Offset = "0x19DF738", VA = "0x19DF738")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6002173")]
		[Address(RVA = "0x19DF860", Offset = "0x19DF860", VA = "0x19DF860")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6002174")]
		[Address(RVA = "0x19E1250", Offset = "0x19E1250", VA = "0x19E1250")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002175")]
		[Address(RVA = "0x19E14C4", Offset = "0x19E14C4", VA = "0x19E14C4")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x19E1358", Offset = "0x19E1358", VA = "0x19E1358")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002177")]
		[Address(RVA = "0x19FDEA4", Offset = "0x19FDEA4", VA = "0x19FDEA4")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6002178")]
		[Address(RVA = "0x19FDF54", Offset = "0x19FDF54", VA = "0x19FDF54")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002179")]
		[Address(RVA = "0x19FDFE4", Offset = "0x19FDFE4", VA = "0x19FDFE4")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x19FE084", Offset = "0x19FE084", VA = "0x19FE084")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600217B")]
		[Address(RVA = "0x19FE150", Offset = "0x19FE150", VA = "0x19FE150")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600217C")]
		[Address(RVA = "0x19FE208", Offset = "0x19FE208", VA = "0x19FE208")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600217D")]
		[Address(RVA = "0x19FE2A8", Offset = "0x19FE2A8", VA = "0x19FE2A8")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x600217E")]
		[Address(RVA = "0x19FE358", Offset = "0x19FE358", VA = "0x19FE358")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x600217F")]
		[Address(RVA = "0x19FE408", Offset = "0x19FE408", VA = "0x19FE408")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6002180")]
		[Address(RVA = "0x19FE4B8", Offset = "0x19FE4B8", VA = "0x19FE4B8")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x19FE558", Offset = "0x19FE558", VA = "0x19FE558")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002182")]
		[Address(RVA = "0x19FE60C", Offset = "0x19FE60C", VA = "0x19FE60C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x19FE6C4", Offset = "0x19FE6C4", VA = "0x19FE6C4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002184")]
		[Address(RVA = "0x19FE780", Offset = "0x19FE780", VA = "0x19FE780")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x19FE840", Offset = "0x19FE840", VA = "0x19FE840")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002186")]
		[Address(RVA = "0x19FE90C", Offset = "0x19FE90C", VA = "0x19FE90C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6002187")]
		[Address(RVA = "0x19FE9C4", Offset = "0x19FE9C4", VA = "0x19FE9C4")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002188")]
		[Address(RVA = "0x19FEA64", Offset = "0x19FEA64", VA = "0x19FEA64")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x19FEB14", Offset = "0x19FEB14", VA = "0x19FEB14")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600218A")]
		[Address(RVA = "0x19FEBC0", Offset = "0x19FEBC0", VA = "0x19FEBC0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600218B")]
		[Address(RVA = "0x19FEC70", Offset = "0x19FEC70", VA = "0x19FEC70")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600218C")]
		[Address(RVA = "0x19FED00", Offset = "0x19FED00", VA = "0x19FED00")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x19FEDA0", Offset = "0x19FEDA0", VA = "0x19FEDA0")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600218E")]
		[Address(RVA = "0x19FEE6C", Offset = "0x19FEE6C", VA = "0x19FEE6C")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600218F")]
		[Address(RVA = "0x19FEF24", Offset = "0x19FEF24", VA = "0x19FEF24")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002190")]
		[Address(RVA = "0x19FEFC4", Offset = "0x19FEFC4", VA = "0x19FEFC4")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6002191")]
		[Address(RVA = "0x19FF074", Offset = "0x19FF074", VA = "0x19FF074")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6002192")]
		[Address(RVA = "0x19FF124", Offset = "0x19FF124", VA = "0x19FF124")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6002193")]
		[Address(RVA = "0x19FF1D4", Offset = "0x19FF1D4", VA = "0x19FF1D4")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6002194")]
		[Address(RVA = "0x19FF284", Offset = "0x19FF284", VA = "0x19FF284")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6002195")]
		[Address(RVA = "0x19FF334", Offset = "0x19FF334", VA = "0x19FF334")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6002196")]
		[Address(RVA = "0x19FF3E4", Offset = "0x19FF3E4", VA = "0x19FF3E4")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6002197")]
		[Address(RVA = "0x19FF474", Offset = "0x19FF474", VA = "0x19FF474")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6002198")]
		[Address(RVA = "0x19FF514", Offset = "0x19FF514", VA = "0x19FF514")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6002199")]
		[Address(RVA = "0x19FF5C4", Offset = "0x19FF5C4", VA = "0x19FF5C4")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x600219A")]
		[Address(RVA = "0x19FF674", Offset = "0x19FF674", VA = "0x19FF674")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600219B")]
		[Address(RVA = "0x19FF714", Offset = "0x19FF714", VA = "0x19FF714")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x600219C")]
		[Address(RVA = "0x19FF7C4", Offset = "0x19FF7C4", VA = "0x19FF7C4")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600219D")]
		[Address(RVA = "0x19FF854", Offset = "0x19FF854", VA = "0x19FF854")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600219E")]
		[Address(RVA = "0x19FF8F4", Offset = "0x19FF8F4", VA = "0x19FF8F4")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x600219F")]
		[Address(RVA = "0x19FF9A4", Offset = "0x19FF9A4", VA = "0x19FF9A4")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x19FFA54", Offset = "0x19FFA54", VA = "0x19FFA54")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x40016FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFBFC", Offset = "0x8FFBFC")]
		Unknown,
		[Token(Token = "0x40016FF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFC34", Offset = "0x8FFC34")]
		InSync,
		[Token(Token = "0x4001700")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFC6C", Offset = "0x8FFC6C")]
		NeedsDownload,
		[Token(Token = "0x4001701")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFCA4", Offset = "0x8FFCA4")]
		RemoteDownloading,
		[Token(Token = "0x4001702")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFCDC", Offset = "0x8FFCDC")]
		NeedsUpload,
		[Token(Token = "0x4001703")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFD14", Offset = "0x8FFD14")]
		LocalUploading,
		[Token(Token = "0x4001704")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFD4C", Offset = "0x8FFD4C")]
		InConflict
	}
	[Token(Token = "0x200035A")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4001706")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFD84", Offset = "0x8FFD84")]
		Unknown,
		[Token(Token = "0x4001707")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFDBC", Offset = "0x8FFDBC")]
		Ok,
		[Token(Token = "0x4001708")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFDF4", Offset = "0x8FFDF4")]
		BetterVersionStored,
		[Token(Token = "0x4001709")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFE2C", Offset = "0x8FFE2C")]
		ManualMergeRequired
	}
	[Token(Token = "0x200035B")]
	public interface IMicrophone
	{
		[Token(Token = "0x60021A2")]
		void Start();

		[Token(Token = "0x60021A3")]
		void Stop();

		[Token(Token = "0x60021A4")]
		float[] Update();
	}
	[Token(Token = "0x200035C")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x60021A5")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x60021A6")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x60021A7")]
		void Update();

		[Token(Token = "0x60021A8")]
		int PeekSizeElements();
	}
	[Token(Token = "0x200035D")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x400170B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFE64", Offset = "0x8FFE64")]
		String,
		[Token(Token = "0x400170C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFE9C", Offset = "0x8FFE9C")]
		Int,
		[Token(Token = "0x400170D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFED4", Offset = "0x8FFED4")]
		Double,
		[Token(Token = "0x400170E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFF0C", Offset = "0x8FFF0C")]
		Unknown
	}
	[Token(Token = "0x200035E")]
	public enum LaunchType
	{
		[Token(Token = "0x4001710")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFF44", Offset = "0x8FFF44")]
		Unknown,
		[Token(Token = "0x4001711")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFF7C", Offset = "0x8FFF7C")]
		Normal,
		[Token(Token = "0x4001712")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFFB4", Offset = "0x8FFFB4")]
		Invite,
		[Token(Token = "0x4001713")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8FFFEC", Offset = "0x8FFFEC")]
		Coordinated,
		[Token(Token = "0x4001714")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900024", Offset = "0x900024")]
		Deeplink
	}
	[Token(Token = "0x200035F")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4001716")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90005C", Offset = "0x90005C")]
		None,
		[Token(Token = "0x4001717")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900094", Offset = "0x900094")]
		Friends,
		[Token(Token = "0x4001718")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9000CC", Offset = "0x9000CC")]
		Unknown
	}
	[Token(Token = "0x2000360")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x400171A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900104", Offset = "0x900104")]
		Top,
		[Token(Token = "0x400171B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90013C", Offset = "0x90013C")]
		CenteredOnViewer,
		[Token(Token = "0x400171C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900174", Offset = "0x900174")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x400171D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9001AC", Offset = "0x9001AC")]
		Unknown
	}
	[Token(Token = "0x2000361")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x400171F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9001E4", Offset = "0x9001E4")]
		Unknown,
		[Token(Token = "0x4001720")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90021C", Offset = "0x90021C")]
		Public,
		[Token(Token = "0x4001721")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900254", Offset = "0x900254")]
		Friends,
		[Token(Token = "0x4001722")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90028C", Offset = "0x90028C")]
		OnlyMe
	}
	[Token(Token = "0x2000362")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4001724")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9002C4", Offset = "0x9002C4")]
		Unknown,
		[Token(Token = "0x4001725")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9002FC", Offset = "0x9002FC")]
		MicrophoneOn,
		[Token(Token = "0x4001726")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900334", Offset = "0x900334")]
		MicrophoneOff
	}
	[Token(Token = "0x2000363")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4001728")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90036C", Offset = "0x90036C")]
		Success = 1,
		[Token(Token = "0x4001729")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9003A4", Offset = "0x9003A4")]
		Unknown = 0,
		[Token(Token = "0x400172A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9003DC", Offset = "0x9003DC")]
		NoPackageSet = -1,
		[Token(Token = "0x400172B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900414", Offset = "0x900414")]
		NoFbConnect = -2,
		[Token(Token = "0x400172C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90044C", Offset = "0x90044C")]
		NoSessionId = -3,
		[Token(Token = "0x400172D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900484", Offset = "0x900484")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000364")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x400172F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9004BC", Offset = "0x9004BC")]
		Required,
		[Token(Token = "0x4001730")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9004F4", Offset = "0x9004F4")]
		High,
		[Token(Token = "0x4001731")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90052C", Offset = "0x90052C")]
		Medium,
		[Token(Token = "0x4001732")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900564", Offset = "0x900564")]
		Low,
		[Token(Token = "0x4001733")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90059C", Offset = "0x90059C")]
		Unknown
	}
	[Token(Token = "0x2000365")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xC954B8", Offset = "0xC954B8", VA = "0xC954B8")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xC95530", Offset = "0xC95530", VA = "0xC95530")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xC955B4", Offset = "0xC955B4", VA = "0xC955B4")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xC95620", Offset = "0xC95620", VA = "0xC95620")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xC9569C", Offset = "0xC9569C", VA = "0xC9569C")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xC95718", Offset = "0xC95718", VA = "0xC95718")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xC95794", Offset = "0xC95794", VA = "0xC95794")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xC95800", Offset = "0xC95800", VA = "0xC95800")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xC95884", Offset = "0xC95884", VA = "0xC95884")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xC95910", Offset = "0xC95910", VA = "0xC95910")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xC95994", Offset = "0xC95994", VA = "0xC95994")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xC95A00", Offset = "0xC95A00", VA = "0xC95A00")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xC95A7C", Offset = "0xC95A7C", VA = "0xC95A7C")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xC94848", Offset = "0xC94848", VA = "0xC94848")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xC95AF8", Offset = "0xC95AF8", VA = "0xC95AF8", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4001736")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9005D4", Offset = "0x9005D4")]
		Unknown,
		[Token(Token = "0x4001737")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90060C", Offset = "0x90060C")]
		Trailing,
		[Token(Token = "0x4001738")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900644", Offset = "0x900644")]
		Swingy
	}
	[Token(Token = "0x2000367")]
	public enum MediaContentType
	{
		[Token(Token = "0x400173A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90067C", Offset = "0x90067C")]
		Unknown,
		[Token(Token = "0x400173B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9006B4", Offset = "0x9006B4")]
		Photo
	}
	[Token(Token = "0x2000368")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x2000754")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170002A6")]
		public T Data
		{
			[Token(Token = "0x60021B9")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60021B8")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60021BA")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x2000369")]
	public class Message
	{
		[Token(Token = "0x2000755")]
		public delegate void Callback(Message message);

		[Token(Token = "0x2000756")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4002666")]
			Unknown = 0u,
			[Token(Token = "0x4002667")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4002668")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4002669")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x400266A")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x400266B")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400266C")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400266D")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400266E")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400266F")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4002670")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4002671")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4002672")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4002673")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4002674")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4002675")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4002676")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4002677")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4002678")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4002679")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x400267A")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x400267B")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x400267C")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x400267D")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x400267E")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x400267F")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4002680")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4002681")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4002682")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4002683")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4002684")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4002685")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4002686")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4002687")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4002688")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4002689")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x400268A")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x400268B")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x400268C")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x400268D")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x400268E")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x400268F")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4002690")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4002691")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4002692")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4002693")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4002694")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4002695")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4002696")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4002697")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4002698")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4002699")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x400269A")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x400269B")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x400269C")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x400269D")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x400269E")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x400269F")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x40026A0")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x40026A1")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x40026A2")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x40026A3")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x40026A4")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x40026A5")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x40026A6")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x40026A7")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x40026A8")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x40026A9")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x40026AA")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x40026AB")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x40026AC")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x40026AD")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x40026AE")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x40026AF")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x40026B0")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x40026B1")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x40026B2")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x40026B3")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x40026B4")]
			Room_Get = 1704628152u,
			[Token(Token = "0x40026B5")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x40026B6")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x40026B7")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x40026B8")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x40026B9")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x40026BA")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x40026BB")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x40026BC")]
			Room_Join = 382373641u,
			[Token(Token = "0x40026BD")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x40026BE")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x40026BF")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x40026C0")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x40026C1")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x40026C2")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x40026C3")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x40026C4")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x40026C5")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x40026C6")]
			User_Get = 1808768583u,
			[Token(Token = "0x40026C7")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x40026C8")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x40026C9")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x40026CA")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x40026CB")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x40026CC")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x40026CD")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x40026CE")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x40026CF")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x40026D0")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x40026D1")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x40026D2")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x40026D3")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x40026D4")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x40026D5")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x40026D6")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x40026D7")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x40026D8")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x40026D9")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x40026DA")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x40026DB")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x40026DC")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x40026DD")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x40026DE")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x40026DF")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x40026E0")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x40026E1")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x40026E2")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x40026E3")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x40026E4")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x40026E5")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x2000757")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Oculus.Platform.Models.Error error;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9006EC", Offset = "0x9006EC")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170002A7")]
		public MessageType Type
		{
			[Token(Token = "0x60021BD")]
			[Address(RVA = "0xC90D14", Offset = "0xC90D14", VA = "0xC90D14")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170002A8")]
		public bool IsError
		{
			[Token(Token = "0x60021BE")]
			[Address(RVA = "0xC95F24", Offset = "0xC95F24", VA = "0xC95F24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A9")]
		public ulong RequestID
		{
			[Token(Token = "0x60021BF")]
			[Address(RVA = "0xC90D0C", Offset = "0xC90D0C", VA = "0xC90D0C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002AA")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0xC98D2C", Offset = "0xC98D2C", VA = "0xC98D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FEDC", Offset = "0x90FEDC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0xC98CD8", Offset = "0xC98CD8", VA = "0xC98CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FECC", Offset = "0x90FECC")]
			set
			{
			}
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xC95CA4", Offset = "0xC95CA4", VA = "0xC95CA4")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xC95F1C", Offset = "0xC95F1C", VA = "0xC95F1C", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xC95F34", Offset = "0xC95F34", VA = "0xC95F34", Slot = "4")]
		public virtual Oculus.Platform.Models.Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xC95F3C", Offset = "0xC95F3C", VA = "0xC95F3C", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xC95F44", Offset = "0xC95F44", VA = "0xC95F44", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xC95F4C", Offset = "0xC95F4C", VA = "0xC95F4C", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xC95F54", Offset = "0xC95F54", VA = "0xC95F54", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xC95F5C", Offset = "0xC95F5C", VA = "0xC95F5C", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xC95F64", Offset = "0xC95F64", VA = "0xC95F64", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xC95F6C", Offset = "0xC95F6C", VA = "0xC95F6C", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xC95F74", Offset = "0xC95F74", VA = "0xC95F74", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xC95F7C", Offset = "0xC95F7C", VA = "0xC95F7C", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xC95F84", Offset = "0xC95F84", VA = "0xC95F84", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xC95F8C", Offset = "0xC95F8C", VA = "0xC95F8C", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xC95F94", Offset = "0xC95F94", VA = "0xC95F94", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xC95F9C", Offset = "0xC95F9C", VA = "0xC95F9C", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xC95FA4", Offset = "0xC95FA4", VA = "0xC95FA4", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xC95FAC", Offset = "0xC95FAC", VA = "0xC95FAC", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xC95FB4", Offset = "0xC95FB4", VA = "0xC95FB4", Slot = "20")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xC95FBC", Offset = "0xC95FBC", VA = "0xC95FBC", Slot = "21")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xC95FC4", Offset = "0xC95FC4", VA = "0xC95FC4", Slot = "22")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xC95FCC", Offset = "0xC95FCC", VA = "0xC95FCC", Slot = "23")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xC95FD4", Offset = "0xC95FD4", VA = "0xC95FD4", Slot = "24")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xC95FDC", Offset = "0xC95FDC", VA = "0xC95FDC", Slot = "25")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xC95FE4", Offset = "0xC95FE4", VA = "0xC95FE4", Slot = "26")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xC95FEC", Offset = "0xC95FEC", VA = "0xC95FEC", Slot = "27")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xC95FF4", Offset = "0xC95FF4", VA = "0xC95FF4", Slot = "28")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xC95FFC", Offset = "0xC95FFC", VA = "0xC95FFC", Slot = "29")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xC96004", Offset = "0xC96004", VA = "0xC96004", Slot = "30")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xC9600C", Offset = "0xC9600C", VA = "0xC9600C", Slot = "31")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xC96014", Offset = "0xC96014", VA = "0xC96014", Slot = "32")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xC9601C", Offset = "0xC9601C", VA = "0xC9601C", Slot = "33")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xC96024", Offset = "0xC96024", VA = "0xC96024", Slot = "34")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xC9602C", Offset = "0xC9602C", VA = "0xC9602C", Slot = "35")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xC96034", Offset = "0xC96034", VA = "0xC96034", Slot = "36")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xC9603C", Offset = "0xC9603C", VA = "0xC9603C", Slot = "37")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xC96044", Offset = "0xC96044", VA = "0xC96044", Slot = "38")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xC9604C", Offset = "0xC9604C", VA = "0xC9604C", Slot = "39")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xC96054", Offset = "0xC96054", VA = "0xC96054", Slot = "40")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xC9605C", Offset = "0xC9605C", VA = "0xC9605C", Slot = "41")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xC96064", Offset = "0xC96064", VA = "0xC96064", Slot = "42")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xC9606C", Offset = "0xC9606C", VA = "0xC9606C", Slot = "43")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xC96074", Offset = "0xC96074", VA = "0xC96074", Slot = "44")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xC9607C", Offset = "0xC9607C", VA = "0xC9607C", Slot = "45")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xC96084", Offset = "0xC96084", VA = "0xC96084", Slot = "46")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xC9608C", Offset = "0xC9608C", VA = "0xC9608C", Slot = "47")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xC96094", Offset = "0xC96094", VA = "0xC96094", Slot = "48")]
		public virtual Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xC9609C", Offset = "0xC9609C", VA = "0xC9609C", Slot = "49")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xC960A4", Offset = "0xC960A4", VA = "0xC960A4", Slot = "50")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xC960AC", Offset = "0xC960AC", VA = "0xC960AC", Slot = "51")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xC960B4", Offset = "0xC960B4", VA = "0xC960B4", Slot = "52")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xC960BC", Offset = "0xC960BC", VA = "0xC960BC", Slot = "53")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xC960C4", Offset = "0xC960C4", VA = "0xC960C4", Slot = "54")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xC960CC", Offset = "0xC960CC", VA = "0xC960CC", Slot = "55")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xC960D4", Offset = "0xC960D4", VA = "0xC960D4", Slot = "56")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xC960DC", Offset = "0xC960DC", VA = "0xC960DC", Slot = "57")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xC960E4", Offset = "0xC960E4", VA = "0xC960E4", Slot = "58")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xC960EC", Offset = "0xC960EC", VA = "0xC960EC", Slot = "59")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xC960F4", Offset = "0xC960F4", VA = "0xC960F4", Slot = "60")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xC960FC", Offset = "0xC960FC", VA = "0xC960FC", Slot = "61")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xC96104", Offset = "0xC96104", VA = "0xC96104")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xC90830", Offset = "0xC90830", VA = "0xC90830")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200036A")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xC9930C", Offset = "0xC9930C", VA = "0xC9930C")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xC9936C", Offset = "0xC9936C", VA = "0xC9936C", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xC993BC", Offset = "0xC993BC", VA = "0xC993BC", Slot = "62")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200036B")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6002201")]
		[Address(RVA = "0xC97494", Offset = "0xC97494", VA = "0xC97494")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xC994E0", Offset = "0xC994E0", VA = "0xC994E0", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xC99530", Offset = "0xC99530", VA = "0xC99530", Slot = "62")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200036C")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6002204")]
		[Address(RVA = "0xC974F4", Offset = "0xC974F4", VA = "0xC974F4")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xC997D4", Offset = "0xC997D4", VA = "0xC997D4", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xC99824", Offset = "0xC99824", VA = "0xC99824", Slot = "62")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200036D")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6002207")]
		[Address(RVA = "0xC97554", Offset = "0xC97554", VA = "0xC97554")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xC99AC8", Offset = "0xC99AC8", VA = "0xC99AC8", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xC99B18", Offset = "0xC99B18", VA = "0xC99B18", Slot = "62")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200036E")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x600220A")]
		[Address(RVA = "0xC975B4", Offset = "0xC975B4", VA = "0xC975B4")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xC99C50", Offset = "0xC99C50", VA = "0xC99C50", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xC99CA0", Offset = "0xC99CA0", VA = "0xC99CA0", Slot = "62")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200036F")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x600220D")]
		[Address(RVA = "0xC97614", Offset = "0xC97614", VA = "0xC97614")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xC99DF4", Offset = "0xC99DF4", VA = "0xC99DF4", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xC99E44", Offset = "0xC99E44", VA = "0xC99E44", Slot = "62")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000370")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6002210")]
		[Address(RVA = "0xC97674", Offset = "0xC97674", VA = "0xC97674")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xC99FFC", Offset = "0xC99FFC", VA = "0xC99FFC", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xC9A04C", Offset = "0xC9A04C", VA = "0xC9A04C", Slot = "62")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000371")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6002213")]
		[Address(RVA = "0xC976D4", Offset = "0xC976D4", VA = "0xC976D4")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xC9A2C0", Offset = "0xC9A2C0", VA = "0xC9A2C0", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xC9A310", Offset = "0xC9A310", VA = "0xC9A310", Slot = "62")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000372")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6002216")]
		[Address(RVA = "0xC97734", Offset = "0xC97734", VA = "0xC97734")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xC9A468", Offset = "0xC9A468", VA = "0xC9A468", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xC9A4B8", Offset = "0xC9A4B8", VA = "0xC9A4B8", Slot = "62")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000373")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6002219")]
		[Address(RVA = "0xC97794", Offset = "0xC97794", VA = "0xC97794")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xC9A610", Offset = "0xC9A610", VA = "0xC9A610", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xC9A660", Offset = "0xC9A660", VA = "0xC9A660", Slot = "62")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000374")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x600221C")]
		[Address(RVA = "0xC977F4", Offset = "0xC977F4", VA = "0xC977F4")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xC9A794", Offset = "0xC9A794", VA = "0xC9A794", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xC9A7E4", Offset = "0xC9A7E4", VA = "0xC9A7E4", Slot = "62")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000375")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x600221F")]
		[Address(RVA = "0xC97854", Offset = "0xC97854", VA = "0xC97854")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xC9A94C", Offset = "0xC9A94C", VA = "0xC9A94C", Slot = "20")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xC9A99C", Offset = "0xC9A99C", VA = "0xC9A99C", Slot = "62")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000376")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6002222")]
		[Address(RVA = "0xC978B4", Offset = "0xC978B4", VA = "0xC978B4")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xC9AB18", Offset = "0xC9AB18", VA = "0xC9AB18", Slot = "21")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xC9AB68", Offset = "0xC9AB68", VA = "0xC9AB68", Slot = "62")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000377")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6002225")]
		[Address(RVA = "0xC97914", Offset = "0xC97914", VA = "0xC97914")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xC9AFB0", Offset = "0xC9AFB0", VA = "0xC9AFB0", Slot = "22")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xC9B000", Offset = "0xC9B000", VA = "0xC9B000", Slot = "62")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000378")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6002228")]
		[Address(RVA = "0xC97974", Offset = "0xC97974", VA = "0xC97974")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xC9ACBC", Offset = "0xC9ACBC", VA = "0xC9ACBC", Slot = "23")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xC9AD0C", Offset = "0xC9AD0C", VA = "0xC9AD0C", Slot = "62")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000379")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x600222B")]
		[Address(RVA = "0xC979D4", Offset = "0xC979D4", VA = "0xC979D4")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xC9B194", Offset = "0xC9B194", VA = "0xC9B194", Slot = "24")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xC9B1E4", Offset = "0xC9B1E4", VA = "0xC9B1E4", Slot = "62")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200037A")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x600222E")]
		[Address(RVA = "0xC9B56C", Offset = "0xC9B56C", VA = "0xC9B56C")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xC9B5CC", Offset = "0xC9B5CC", VA = "0xC9B5CC", Slot = "25")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xC9B61C", Offset = "0xC9B61C", VA = "0xC9B61C", Slot = "62")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200037B")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6002231")]
		[Address(RVA = "0xC9B890", Offset = "0xC9B890", VA = "0xC9B890")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xC9B8F0", Offset = "0xC9B8F0", VA = "0xC9B8F0", Slot = "26")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xC9B940", Offset = "0xC9B940", VA = "0xC9B940", Slot = "62")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200037C")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6002234")]
		[Address(RVA = "0xC97A34", Offset = "0xC97A34", VA = "0xC97A34")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xC9BA7C", Offset = "0xC9BA7C", VA = "0xC9BA7C", Slot = "27")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xC9BACC", Offset = "0xC9BACC", VA = "0xC9BACC", Slot = "62")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200037D")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6002237")]
		[Address(RVA = "0xC9BC08", Offset = "0xC9BC08", VA = "0xC9BC08")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xC9BC68", Offset = "0xC9BC68", VA = "0xC9BC68", Slot = "28")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xC9BCB8", Offset = "0xC9BCB8", VA = "0xC9BCB8", Slot = "62")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200037E")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x600223A")]
		[Address(RVA = "0xC97A94", Offset = "0xC97A94", VA = "0xC97A94")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xC9BEBC", Offset = "0xC9BEBC", VA = "0xC9BEBC", Slot = "30")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xC9BF0C", Offset = "0xC9BF0C", VA = "0xC9BF0C", Slot = "62")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200037F")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x600223D")]
		[Address(RVA = "0xC9C1D0", Offset = "0xC9C1D0", VA = "0xC9C1D0")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xC9C230", Offset = "0xC9C230", VA = "0xC9C230", Slot = "31")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xC9C280", Offset = "0xC9C280", VA = "0xC9C280", Slot = "62")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000380")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6002240")]
		[Address(RVA = "0xC9C4F4", Offset = "0xC9C4F4", VA = "0xC9C4F4")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xC9C554", Offset = "0xC9C554", VA = "0xC9C554", Slot = "32")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xC9C5A4", Offset = "0xC9C5A4", VA = "0xC9C5A4", Slot = "62")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000381")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6002243")]
		[Address(RVA = "0xC9C6CC", Offset = "0xC9C6CC", VA = "0xC9C6CC")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xC9C72C", Offset = "0xC9C72C", VA = "0xC9C72C", Slot = "33")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xC9C77C", Offset = "0xC9C77C", VA = "0xC9C77C", Slot = "62")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000382")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6002246")]
		[Address(RVA = "0xC97B54", Offset = "0xC97B54", VA = "0xC97B54")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xC9C8A0", Offset = "0xC9C8A0", VA = "0xC9C8A0", Slot = "34")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xC9C8F0", Offset = "0xC9C8F0", VA = "0xC9C8F0", Slot = "62")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000383")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6002249")]
		[Address(RVA = "0xC9CA64", Offset = "0xC9CA64", VA = "0xC9CA64")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xC9CAC4", Offset = "0xC9CAC4", VA = "0xC9CAC4", Slot = "35")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xC9CB14", Offset = "0xC9CB14", VA = "0xC9CB14", Slot = "62")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000384")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x600224C")]
		[Address(RVA = "0xC97BB4", Offset = "0xC97BB4", VA = "0xC97BB4")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xC9CC58", Offset = "0xC9CC58", VA = "0xC9CC58", Slot = "36")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xC9CCA8", Offset = "0xC9CCA8", VA = "0xC9CCA8", Slot = "62")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000385")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x600224F")]
		[Address(RVA = "0xC97C74", Offset = "0xC97C74", VA = "0xC97C74")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xC9D044", Offset = "0xC9D044", VA = "0xC9D044", Slot = "38")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xC9D094", Offset = "0xC9D094", VA = "0xC9D094", Slot = "62")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000386")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6002252")]
		[Address(RVA = "0xC97CD4", Offset = "0xC97CD4", VA = "0xC97CD4")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xC9D27C", Offset = "0xC9D27C", VA = "0xC9D27C", Slot = "39")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xC9D2CC", Offset = "0xC9D2CC", VA = "0xC9D2CC", Slot = "62")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000387")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6002255")]
		[Address(RVA = "0xC97D34", Offset = "0xC97D34", VA = "0xC97D34")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xC9D818", Offset = "0xC9D818", VA = "0xC9D818", Slot = "40")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xC9D868", Offset = "0xC9D868", VA = "0xC9D868", Slot = "62")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000388")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6002258")]
		[Address(RVA = "0xC97D94", Offset = "0xC97D94", VA = "0xC97D94")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xC9DB08", Offset = "0xC9DB08", VA = "0xC9DB08", Slot = "41")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xC9DB58", Offset = "0xC9DB58", VA = "0xC9DB58", Slot = "62")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000389")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x600225B")]
		[Address(RVA = "0xC9DC7C", Offset = "0xC9DC7C", VA = "0xC9DC7C")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xC9DCDC", Offset = "0xC9DCDC", VA = "0xC9DCDC", Slot = "42")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xC9DD2C", Offset = "0xC9DD2C", VA = "0xC9DD2C", Slot = "62")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200038A")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x600225E")]
		[Address(RVA = "0xC97DF4", Offset = "0xC97DF4", VA = "0xC97DF4")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xC9E1BC", Offset = "0xC9E1BC", VA = "0xC9E1BC", Slot = "42")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xC9E20C", Offset = "0xC9E20C", VA = "0xC9E20C", Slot = "62")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200038B")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6002261")]
		[Address(RVA = "0xC9DFE8", Offset = "0xC9DFE8", VA = "0xC9DFE8")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xC9E048", Offset = "0xC9E048", VA = "0xC9E048", Slot = "43")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xC9E098", Offset = "0xC9E098", VA = "0xC9E098", Slot = "62")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200038C")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6002264")]
		[Address(RVA = "0xC97E54", Offset = "0xC97E54", VA = "0xC97E54")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xC9E2A8", Offset = "0xC9E2A8", VA = "0xC9E2A8", Slot = "44")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xC9E2F8", Offset = "0xC9E2F8", VA = "0xC9E2F8", Slot = "62")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200038D")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6002267")]
		[Address(RVA = "0xC97EB4", Offset = "0xC97EB4", VA = "0xC97EB4")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xC9E88C", Offset = "0xC9E88C", VA = "0xC9E88C", Slot = "45")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xC9E8DC", Offset = "0xC9E8DC", VA = "0xC9E8DC", Slot = "62")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200038E")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x600226A")]
		[Address(RVA = "0xC97F14", Offset = "0xC97F14", VA = "0xC97F14")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xC9EB80", Offset = "0xC9EB80", VA = "0xC9EB80", Slot = "46")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xC9EBD0", Offset = "0xC9EBD0", VA = "0xC9EBD0", Slot = "62")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200038F")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x600226D")]
		[Address(RVA = "0xC97F74", Offset = "0xC97F74", VA = "0xC97F74")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xC9ED24", Offset = "0xC9ED24", VA = "0xC9ED24", Slot = "47")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xC9ED74", Offset = "0xC9ED74", VA = "0xC9ED74", Slot = "62")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public class MessageWithRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6002270")]
		[Address(RVA = "0xC97FD4", Offset = "0xC97FD4", VA = "0xC97FD4")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xC9F018", Offset = "0xC9F018", VA = "0xC9F018", Slot = "48")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xC9F068", Offset = "0xC9F068", VA = "0xC9F068", Slot = "62")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000391")]
	public class MessageWithRoomUnderCurrentRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6002273")]
		[Address(RVA = "0xC98034", Offset = "0xC98034", VA = "0xC98034")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xC9F890", Offset = "0xC9F890", VA = "0xC9F890", Slot = "48")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xC9F8E0", Offset = "0xC9F8E0", VA = "0xC9F8E0", Slot = "62")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000392")]
	public class MessageWithRoomUnderViewerRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6002276")]
		[Address(RVA = "0xC98094", Offset = "0xC98094", VA = "0xC98094")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xC9F97C", Offset = "0xC9F97C", VA = "0xC9F97C", Slot = "48")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xC9F9CC", Offset = "0xC9F9CC", VA = "0xC9F9CC", Slot = "62")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000393")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6002279")]
		[Address(RVA = "0xC980F4", Offset = "0xC980F4", VA = "0xC980F4")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xC9F59C", Offset = "0xC9F59C", VA = "0xC9F59C", Slot = "51")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xC9F5EC", Offset = "0xC9F5EC", VA = "0xC9F5EC", Slot = "62")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000394")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x600227C")]
		[Address(RVA = "0xC98154", Offset = "0xC98154", VA = "0xC98154")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xC9F104", Offset = "0xC9F104", VA = "0xC9F104", Slot = "49")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xC9F154", Offset = "0xC9F154", VA = "0xC9F154", Slot = "62")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000395")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x600227F")]
		[Address(RVA = "0xC981B4", Offset = "0xC981B4", VA = "0xC981B4")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xC9F2A8", Offset = "0xC9F2A8", VA = "0xC9F2A8", Slot = "50")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xC9F2F8", Offset = "0xC9F2F8", VA = "0xC9F2F8", Slot = "62")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000396")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6002282")]
		[Address(RVA = "0xC98214", Offset = "0xC98214", VA = "0xC98214")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xC9FA68", Offset = "0xC9FA68", VA = "0xC9FA68", Slot = "52")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xC9FAB8", Offset = "0xC9FAB8", VA = "0xC9FAB8", Slot = "62")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000397")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6002285")]
		[Address(RVA = "0xC98274", Offset = "0xC98274", VA = "0xC98274")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xC9FD2C", Offset = "0xC9FD2C", VA = "0xC9FD2C", Slot = "53")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xC9FD7C", Offset = "0xC9FD7C", VA = "0xC9FD7C", Slot = "62")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000398")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6002288")]
		[Address(RVA = "0xC982D4", Offset = "0xC982D4", VA = "0xC982D4")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xC9FEA0", Offset = "0xC9FEA0", VA = "0xC9FEA0", Slot = "54")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xC9FEF0", Offset = "0xC9FEF0", VA = "0xC9FEF0", Slot = "62")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000399")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x600228B")]
		[Address(RVA = "0xC9FF58", Offset = "0xC9FF58", VA = "0xC9FF58")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xC9FFB8", Offset = "0xC9FFB8", VA = "0xC9FFB8", Slot = "55")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xCA0008", Offset = "0xCA0008", VA = "0xCA0008", Slot = "62")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200039A")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x600228E")]
		[Address(RVA = "0xC98334", Offset = "0xC98334", VA = "0xC98334")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xCA0140", Offset = "0xCA0140", VA = "0xCA0140", Slot = "56")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xCA0190", Offset = "0xCA0190", VA = "0xCA0190", Slot = "62")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200039B")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6002291")]
		[Address(RVA = "0xC98394", Offset = "0xC98394", VA = "0xC98394")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xCA02C4", Offset = "0xCA02C4", VA = "0xCA02C4", Slot = "57")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xCA0314", Offset = "0xCA0314", VA = "0xCA0314", Slot = "62")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200039C")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6002294")]
		[Address(RVA = "0xC983F4", Offset = "0xC983F4", VA = "0xC983F4")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xCA0498", Offset = "0xCA0498", VA = "0xCA0498", Slot = "58")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xCA04E8", Offset = "0xCA04E8", VA = "0xCA04E8", Slot = "62")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200039D")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6002297")]
		[Address(RVA = "0xC98454", Offset = "0xC98454", VA = "0xC98454")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xCA078C", Offset = "0xCA078C", VA = "0xCA078C", Slot = "59")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xCA07DC", Offset = "0xCA07DC", VA = "0xCA07DC", Slot = "62")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200039E")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x600229A")]
		[Address(RVA = "0xC984B4", Offset = "0xC984B4", VA = "0xC984B4")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xCA0A80", Offset = "0xCA0A80", VA = "0xCA0A80", Slot = "60")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xCA0AD0", Offset = "0xCA0AD0", VA = "0xCA0AD0", Slot = "62")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200039F")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x600229D")]
		[Address(RVA = "0xCA0BF4", Offset = "0xCA0BF4", VA = "0xCA0BF4")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xCA0C54", Offset = "0xCA0C54", VA = "0xCA0C54", Slot = "61")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xCA0CA4", Offset = "0xCA0CA4", VA = "0xCA0CA4", Slot = "62")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A0")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xC98514", Offset = "0xC98514", VA = "0xC98514")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xC9D9BC", Offset = "0xC9D9BC", VA = "0xC9D9BC", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xC9DA0C", Offset = "0xC9DA0C", VA = "0xC9DA0C", Slot = "62")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A1")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xC98574", Offset = "0xC98574", VA = "0xC98574")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xC9E56C", Offset = "0xC9E56C", VA = "0xC9E56C", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xC9E5BC", Offset = "0xC9E5BC", VA = "0xC9E5BC", Slot = "62")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A2")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xC97AF4", Offset = "0xC97AF4", VA = "0xC97AF4")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xC9BDF4", Offset = "0xC9BDF4", VA = "0xC9BDF4", Slot = "29")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xC9BE44", Offset = "0xC9BE44", VA = "0xC9BE44", Slot = "62")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A3")]
	public class MessageWithMatchmakingNotification : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xC985D4", Offset = "0xC985D4", VA = "0xC985D4")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xC9D448", Offset = "0xC9D448", VA = "0xC9D448", Slot = "48")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xC9D498", Offset = "0xC9D498", VA = "0xC9D498", Slot = "62")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A4")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xC97C14", Offset = "0xC97C14", VA = "0xC97C14")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xC9CE00", Offset = "0xC9CE00", VA = "0xC9CE00", Slot = "38")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xC9CE64", Offset = "0xC9CE64", VA = "0xC9CE64", Slot = "51")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xC9CEC8", Offset = "0xC9CEC8", VA = "0xC9CEC8", Slot = "62")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A5")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xC98634", Offset = "0xC98634", VA = "0xC98634")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xC9B338", Offset = "0xC9B338", VA = "0xC9B338", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xC9B388", Offset = "0xC9B388", VA = "0xC9B388", Slot = "62")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A6")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xC98694", Offset = "0xC98694", VA = "0xC98694")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xC9E718", Offset = "0xC9E718", VA = "0xC9E718", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xC9E768", Offset = "0xC9E768", VA = "0xC9E768", Slot = "62")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A7")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170002AB")]
		public ulong SenderID
		{
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xCA29FC", Offset = "0xCA29FC", VA = "0xCA29FC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002AC")]
		public ulong Size
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xCA2A68", Offset = "0xCA2A68", VA = "0xCA2A68")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002AD")]
		public SendPolicy Policy
		{
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xCA2A70", Offset = "0xCA2A70", VA = "0xCA2A70")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xCA1D9C", Offset = "0xCA1D9C", VA = "0xCA1D9C")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xCA289C", Offset = "0xCA289C", VA = "0xCA289C")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xCA2ADC", Offset = "0xCA2ADC", VA = "0xCA2ADC", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xCA2B50", Offset = "0xCA2B50", VA = "0xCA2B50", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4001744")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9006FC", Offset = "0x9006FC")]
		Unknown,
		[Token(Token = "0x4001745")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900734", Offset = "0x900734")]
		Connected,
		[Token(Token = "0x4001746")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90076C", Offset = "0x90076C")]
		Timeout,
		[Token(Token = "0x4001747")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9007A4", Offset = "0x9007A4")]
		Closed
	}
	[Token(Token = "0x20003A9")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4001749")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9007DC", Offset = "0x9007DC")]
		Unknown,
		[Token(Token = "0x400174A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900814", Offset = "0x900814")]
		Granted,
		[Token(Token = "0x400174B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90084C", Offset = "0x90084C")]
		Denied,
		[Token(Token = "0x400174C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900884", Offset = "0x900884")]
		Blocked
	}
	[Token(Token = "0x20003AA")]
	public enum PermissionType
	{
		[Token(Token = "0x400174E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9008BC", Offset = "0x9008BC")]
		Unknown,
		[Token(Token = "0x400174F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9008F4", Offset = "0x9008F4")]
		Microphone,
		[Token(Token = "0x4001750")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90092C", Offset = "0x90092C")]
		WriteExternalStorage
	}
	[Token(Token = "0x20003AB")]
	public sealed class Core
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xC918A4", Offset = "0xC918A4", VA = "0xC918A4")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xC92188", Offset = "0xC92188", VA = "0xC92188")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xC921F4", Offset = "0xC921F4", VA = "0xC921F4")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xC923E4", Offset = "0xC923E4", VA = "0xC923E4")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xC9299C", Offset = "0xC9299C", VA = "0xC9299C")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xC923BC", Offset = "0xC923BC", VA = "0xC923BC")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xC92DF4", Offset = "0xC92DF4", VA = "0xC92DF4")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x19E10C0", Offset = "0x19E10C0", VA = "0x19E10C0")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AD")]
	public static class Rooms
	{
		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xCA35CC", Offset = "0xCA35CC", VA = "0xCA35CC")]
		public static Request<Oculus.Platform.Models.Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xCA3858", Offset = "0xCA3858", VA = "0xCA3858")]
		public static void SetUpdateNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xCA38D0", Offset = "0xCA38D0", VA = "0xCA38D0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90FEEC", Offset = "0x90FEEC")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xCA3948", Offset = "0xCA3948", VA = "0xCA3948")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xCA39C0", Offset = "0xCA39C0", VA = "0xCA39C0")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xCA3A38", Offset = "0xCA3A38", VA = "0xCA3A38")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xCA3B20", Offset = "0xCA3B20", VA = "0xCA3B20")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xCA3C34", Offset = "0xCA3C34", VA = "0xCA3C34")]
		public static Request<Oculus.Platform.Models.Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xCA3D04", Offset = "0xCA3D04", VA = "0xCA3D04")]
		public static Request<Oculus.Platform.Models.Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xCA3DCC", Offset = "0xCA3DCC", VA = "0xCA3DCC")]
		public static Request<Oculus.Platform.Models.Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xCA3E9C", Offset = "0xCA3E9C", VA = "0xCA3E9C")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xCA3F64", Offset = "0xCA3F64", VA = "0xCA3F64")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xCA4060", Offset = "0xCA4060", VA = "0xCA4060")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xCA4128", Offset = "0xCA4128", VA = "0xCA4128")]
		public static Request<Oculus.Platform.Models.Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xCA4208", Offset = "0xCA4208", VA = "0xCA4208")]
		public static Request<Oculus.Platform.Models.Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xCA42E8", Offset = "0xCA42E8", VA = "0xCA42E8")]
		public static Request<Oculus.Platform.Models.Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xCA43F4", Offset = "0xCA43F4", VA = "0xCA43F4")]
		public static Request<Oculus.Platform.Models.Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xCA44DC", Offset = "0xCA44DC", VA = "0xCA44DC")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xCA45A4", Offset = "0xCA45A4", VA = "0xCA45A4")]
		public static Request<Oculus.Platform.Models.Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xCA4674", Offset = "0xCA4674", VA = "0xCA4674")]
		public static Request<Oculus.Platform.Models.Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xCA4754", Offset = "0xCA4754", VA = "0xCA4754")]
		public static Request<Oculus.Platform.Models.Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xCA4834", Offset = "0xCA4834", VA = "0xCA4834")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xCA490C", Offset = "0xCA490C", VA = "0xCA490C")]
		public static Request<Oculus.Platform.Models.Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xCA49EC", Offset = "0xCA49EC", VA = "0xCA49EC")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003AE")]
	public static class Livestreaming
	{
		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xC93AE4", Offset = "0xC93AE4", VA = "0xC93AE4")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xC93B5C", Offset = "0xC93B5C", VA = "0xC93B5C")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xC93C24", Offset = "0xC93C24", VA = "0xC93C24")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xC93CEC", Offset = "0xC93CEC", VA = "0xC93CEC")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AF")]
	public static class Matchmaking
	{
		[Token(Token = "0x2000758")]
		public class CustomQuery
		{
			[Token(Token = "0x20007C0")]
			public struct Criterion
			{
				[Token(Token = "0x4002808")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4002809")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x400280A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x600343D")]
				[Address(RVA = "0x9A5398", Offset = "0x9A5398", VA = "0x9A5398")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x40026E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x40026E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x600333F")]
			[Address(RVA = "0xC94294", Offset = "0xC94294", VA = "0xC94294")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6003340")]
			[Address(RVA = "0xC954A0", Offset = "0xC954A0", VA = "0xC954A0")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xC93DB4", Offset = "0xC93DB4", VA = "0xC93DB4")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xC94044", Offset = "0xC94044", VA = "0xC94044")]
		public static void SetMatchFoundNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xC940BC", Offset = "0xC940BC", VA = "0xC940BC")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xC941A4", Offset = "0xC941A4", VA = "0xC941A4")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xC9473C", Offset = "0xC9473C", VA = "0xC9473C")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xC94898", Offset = "0xC94898", VA = "0xC94898")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xC94970", Offset = "0xC94970", VA = "0xC94970")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xC94A30", Offset = "0xC94A30", VA = "0xC94A30")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xC94B38", Offset = "0xC94B38", VA = "0xC94B38")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xC94C44", Offset = "0xC94C44", VA = "0xC94C44")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xC94D2C", Offset = "0xC94D2C", VA = "0xC94D2C")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xC94E38", Offset = "0xC94E38", VA = "0xC94E38")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xC94F28", Offset = "0xC94F28", VA = "0xC94F28")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xC95034", Offset = "0xC95034", VA = "0xC95034")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xC95124", Offset = "0xC95124", VA = "0xC95124")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xC95230", Offset = "0xC95230", VA = "0xC95230")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xC952F8", Offset = "0xC952F8", VA = "0xC952F8")]
		public static Request<Oculus.Platform.Models.Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xC953D8", Offset = "0xC953D8", VA = "0xC953D8")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B0")]
	public static class Net
	{
		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xCA1CD0", Offset = "0xCA1CD0", VA = "0xCA1CD0")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xCA1E5C", Offset = "0xCA1E5C", VA = "0xCA1E5C")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xCA1F5C", Offset = "0xCA1F5C", VA = "0xCA1F5C")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xCA1FF8", Offset = "0xCA1FF8", VA = "0xCA1FF8")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xCA2094", Offset = "0xCA2094", VA = "0xCA2094")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xCA2130", Offset = "0xCA2130", VA = "0xCA2130")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xCA21D0", Offset = "0xCA21D0", VA = "0xCA21D0")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xCA22C8", Offset = "0xCA22C8", VA = "0xCA22C8")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xCA2360", Offset = "0xCA2360", VA = "0xCA2360")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xCA23F4", Offset = "0xCA23F4", VA = "0xCA23F4")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xCA24C4", Offset = "0xCA24C4", VA = "0xCA24C4")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xCA253C", Offset = "0xCA253C", VA = "0xCA253C")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public static class Leaderboards
	{
		[Token(Token = "0x6002300")]
		[Address(RVA = "0xC935F8", Offset = "0xC935F8", VA = "0xC935F8")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xC936F8", Offset = "0xC936F8", VA = "0xC936F8")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xC937F8", Offset = "0xC937F8", VA = "0xC937F8")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xC938F0", Offset = "0xC938F0", VA = "0xC938F0")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xC939D8", Offset = "0xC939D8", VA = "0xC939D8")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B2")]
	public static class Voip
	{
		[Token(Token = "0x6002305")]
		[Address(RVA = "0xCA606C", Offset = "0xCA606C", VA = "0xCA606C")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xCA6108", Offset = "0xCA6108", VA = "0xCA6108")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xCA61A4", Offset = "0xCA61A4", VA = "0xCA61A4")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xCA6240", Offset = "0xCA6240", VA = "0xCA6240")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xCA62EC", Offset = "0xCA62EC", VA = "0xCA62EC")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xCA6398", Offset = "0xCA6398", VA = "0xCA6398")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xCA646C", Offset = "0xCA646C", VA = "0xCA646C")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xCA6508", Offset = "0xCA6508", VA = "0xCA6508")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xCA65A0", Offset = "0xCA65A0", VA = "0xCA65A0")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xCA6638", Offset = "0xCA6638", VA = "0xCA6638")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xCA66D8", Offset = "0xCA66D8", VA = "0xCA66D8")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xCA6778", Offset = "0xCA6778", VA = "0xCA6778")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xCA6818", Offset = "0xCA6818", VA = "0xCA6818")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xCA6930", Offset = "0xCA6930", VA = "0xCA6930")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xCA69DC", Offset = "0xCA69DC", VA = "0xCA69DC")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B3")]
	public static class Achievements
	{
		[Token(Token = "0x6002314")]
		[Address(RVA = "0x19DFAC0", Offset = "0x19DFAC0", VA = "0x19DFAC0")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x19DFC54", Offset = "0x19DFC54", VA = "0x19DFC54")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x19DFE04", Offset = "0x19DFE04", VA = "0x19DFE04")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x19DFF58", Offset = "0x19DFF58", VA = "0x19DFF58")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x19E00AC", Offset = "0x19E00AC", VA = "0x19E00AC")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x19E02FC", Offset = "0x19E02FC", VA = "0x19E02FC")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x19E054C", Offset = "0x19E054C", VA = "0x19E054C")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x19E06C0", Offset = "0x19E06C0", VA = "0x19E06C0")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x19E08E4", Offset = "0x19E08E4", VA = "0x19E08E4")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B4")]
	public static class Application
	{
		[Token(Token = "0x600231D")]
		[Address(RVA = "0x19E0D64", Offset = "0x19E0D64", VA = "0x19E0D64")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x19E0EB8", Offset = "0x19E0EB8", VA = "0x19E0EB8")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B5")]
	public static class AssetFile
	{
		[Token(Token = "0x600231F")]
		[Address(RVA = "0x19E1564", Offset = "0x19E1564", VA = "0x19E1564")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x19E16D0", Offset = "0x19E16D0", VA = "0x19E16D0")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x19E183C", Offset = "0x19E183C", VA = "0x19E183C")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x19E19B0", Offset = "0x19E19B0", VA = "0x19E19B0")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x19E1B1C", Offset = "0x19E1B1C", VA = "0x19E1B1C")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x19E1C88", Offset = "0x19E1C88", VA = "0x19E1C88")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x19E1DFC", Offset = "0x19E1DFC", VA = "0x19E1DFC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x19E1F68", Offset = "0x19E1F68", VA = "0x19E1F68")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x19E20D4", Offset = "0x19E20D4", VA = "0x19E20D4")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x19E2248", Offset = "0x19E2248", VA = "0x19E2248")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x19E239C", Offset = "0x19E239C", VA = "0x19E239C")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x19E2508", Offset = "0x19E2508", VA = "0x19E2508")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x19E2674", Offset = "0x19E2674", VA = "0x19E2674")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B6")]
	public static class Avatar
	{
	}
	[Token(Token = "0x20003B7")]
	public static class CloudStorage
	{
		[Token(Token = "0x600232C")]
		[Address(RVA = "0xC917C4", Offset = "0xC917C4", VA = "0xC917C4")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xC9190C", Offset = "0xC9190C", VA = "0xC9190C")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xC919EC", Offset = "0xC919EC", VA = "0xC919EC")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xC91ABC", Offset = "0xC91ABC", VA = "0xC91ABC")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xC91B9C", Offset = "0xC91B9C", VA = "0xC91B9C")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xC91C6C", Offset = "0xC91C6C", VA = "0xC91C6C")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xC91D4C", Offset = "0xC91D4C", VA = "0xC91D4C")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xC91E34", Offset = "0xC91E34", VA = "0xC91E34")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xC91F1C", Offset = "0xC91F1C", VA = "0xC91F1C")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xC92030", Offset = "0xC92030", VA = "0xC92030")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B8")]
	public static class Entitlements
	{
		[Token(Token = "0x6002336")]
		[Address(RVA = "0xC92E00", Offset = "0xC92E00", VA = "0xC92E00")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B9")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x20003BA")]
	public static class HTTP
	{
	}
	[Token(Token = "0x20003BB")]
	public static class IAP
	{
		[Token(Token = "0x6002337")]
		[Address(RVA = "0xC92EEC", Offset = "0xC92EEC", VA = "0xC92EEC")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xC92FB4", Offset = "0xC92FB4", VA = "0xC92FB4")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xC93098", Offset = "0xC93098", VA = "0xC93098")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0xC93160", Offset = "0xC93160", VA = "0xC93160")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xC93280", Offset = "0xC93280", VA = "0xC93280")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xC933D8", Offset = "0xC933D8", VA = "0xC933D8")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003BC")]
	public static class LanguagePack
	{
		[Token(Token = "0x600233D")]
		[Address(RVA = "0xC93530", Offset = "0xC93530", VA = "0xC93530")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BD")]
	public static class Media
	{
		[Token(Token = "0x600233E")]
		[Address(RVA = "0xC95BBC", Offset = "0xC95BBC", VA = "0xC95BBC")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20003BE")]
	public static class Notifications
	{
		[Token(Token = "0x600233F")]
		[Address(RVA = "0xCA25B4", Offset = "0xCA25B4", VA = "0xCA25B4")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xCA267C", Offset = "0xCA267C", VA = "0xCA267C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xCA2744", Offset = "0xCA2744", VA = "0xCA2744")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003BF")]
	public static class Parties
	{
		[Token(Token = "0x6002342")]
		[Address(RVA = "0xCA2BE8", Offset = "0xCA2BE8", VA = "0xCA2BE8")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C0")]
	public static class Users
	{
		[Token(Token = "0x6002343")]
		[Address(RVA = "0xCA54D8", Offset = "0xCA54D8", VA = "0xCA54D8")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xCA55A8", Offset = "0xCA55A8", VA = "0xCA55A8")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xCA5670", Offset = "0xCA5670", VA = "0xCA5670")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xCA5738", Offset = "0xCA5738", VA = "0xCA5738")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xCA5800", Offset = "0xCA5800", VA = "0xCA5800")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xCA58C8", Offset = "0xCA58C8", VA = "0xCA58C8")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xCA59C4", Offset = "0xCA59C4", VA = "0xCA59C4")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xCA5A94", Offset = "0xCA5A94", VA = "0xCA5A94")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xCA5B5C", Offset = "0xCA5B5C", VA = "0xCA5B5C")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xCA5C24", Offset = "0xCA5C24", VA = "0xCA5C24")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xCA5CF4", Offset = "0xCA5CF4", VA = "0xCA5CF4")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xCA5DBC", Offset = "0xCA5DBC", VA = "0xCA5DBC")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xCA5F14", Offset = "0xCA5F14", VA = "0xCA5F14")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C1")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4001754")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900964", Offset = "0x900964")]
		Success = 0,
		[Token(Token = "0x4001755")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90099C", Offset = "0x90099C")]
		Uninitialized = -1,
		[Token(Token = "0x4001756")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9009D4", Offset = "0x9009D4")]
		PreLoaded = -2,
		[Token(Token = "0x4001757")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900A0C", Offset = "0x900A0C")]
		FileInvalid = -3,
		[Token(Token = "0x4001758")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900A44", Offset = "0x900A44")]
		SignatureInvalid = -4,
		[Token(Token = "0x4001759")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900A7C", Offset = "0x900A7C")]
		UnableToVerify = -5,
		[Token(Token = "0x400175A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900AB4", Offset = "0x900AB4")]
		VersionMismatch = -6,
		[Token(Token = "0x400175B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900AEC", Offset = "0x900AEC")]
		Unknown = -7,
		[Token(Token = "0x400175C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900B24", Offset = "0x900B24")]
		InvalidCredentials = -8,
		[Token(Token = "0x400175D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900B5C", Offset = "0x900B5C")]
		NotEntitled = -9
	}
	[Token(Token = "0x20003C2")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000759")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x40026E9")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x40026EA")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x40026EB")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x40026EC")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x40026ED")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x40026EE")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x40026EF")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x40026F0")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x40026F1")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x40026F2")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x40026F3")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x40026F4")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x40026F5")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x40026F6")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x40026F7")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x40026F8")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x40026F9")]
			Party_Create = 450042703u,
			[Token(Token = "0x40026FA")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x40026FB")]
			Party_Get = 1586058173u,
			[Token(Token = "0x40026FC")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x40026FD")]
			Party_Invite = 901104867u,
			[Token(Token = "0x40026FE")]
			Party_Join = 1744993395u,
			[Token(Token = "0x40026FF")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4002700")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4002701")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4002702")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4002703")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4002704")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4002705")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4002706")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4002707")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4002708")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4002709")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x400270A")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x400270B")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x400270C")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x400270D")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x400270E")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x400270F")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u
		}

		[Token(Token = "0x200075A")]
		public static class HTTP
		{
			[Token(Token = "0x6003341")]
			[Address(RVA = "0xCA2D10", Offset = "0xCA2D10", VA = "0xCA2D10")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xCA2CB0", Offset = "0xCA2CB0", VA = "0xCA2CB0")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xC986F4", Offset = "0xC986F4", VA = "0xC986F4")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C3")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x170002AE")]
		public static string AppID
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0xC92DC8", Offset = "0xC92DC8", VA = "0xC92DC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002353")]
			[Address(RVA = "0xCA2E9C", Offset = "0xCA2E9C", VA = "0xCA2E9C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public static string MobileAppID
		{
			[Token(Token = "0x6002354")]
			[Address(RVA = "0xC92D9C", Offset = "0xC92D9C", VA = "0xC92D9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002355")]
			[Address(RVA = "0xCA2ECC", Offset = "0xCA2ECC", VA = "0xCA2ECC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6002356")]
			[Address(RVA = "0xC92690", Offset = "0xC92690", VA = "0xC92690")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002357")]
			[Address(RVA = "0xCA2EFC", Offset = "0xCA2EFC", VA = "0xCA2EFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6002358")]
			[Address(RVA = "0xCA2D88", Offset = "0xCA2D88", VA = "0xCA2D88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002359")]
			[Address(RVA = "0xCA2F30", Offset = "0xCA2F30", VA = "0xCA2F30")]
			set
			{
			}
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xCA2F84", Offset = "0xCA2F84", VA = "0xCA2F84")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x600235B")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x600235C")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C5")]
	public class Request
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900BC4", Offset = "0x900BC4")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x170002B2")]
		public ulong RequestID
		{
			[Token(Token = "0x600235E")]
			[Address(RVA = "0xC907AC", Offset = "0xC907AC", VA = "0xC907AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF24", Offset = "0x90FF24")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600235F")]
			[Address(RVA = "0xCA2FE4", Offset = "0xCA2FE4", VA = "0xCA2FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF34", Offset = "0x90FF34")]
			set
			{
			}
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xC92EC0", Offset = "0xC92EC0", VA = "0xC92EC0")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xCA2FEC", Offset = "0xCA2FEC", VA = "0xCA2FEC")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xC9172C", Offset = "0xC9172C", VA = "0xC9172C")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4001764")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900BD4", Offset = "0x900BD4")]
		Unknown,
		[Token(Token = "0x4001765")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900C0C", Offset = "0x900C0C")]
		AreIn,
		[Token(Token = "0x4001766")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900C44", Offset = "0x900C44")]
		AreKicked,
		[Token(Token = "0x4001767")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900C7C", Offset = "0x900C7C")]
		CanJoin,
		[Token(Token = "0x4001768")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900CB4", Offset = "0x900CB4")]
		IsFull,
		[Token(Token = "0x4001769")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900CEC", Offset = "0x900CEC")]
		NoViewer,
		[Token(Token = "0x400176A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900D24", Offset = "0x900D24")]
		PolicyPrevents
	}
	[Token(Token = "0x20003C7")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x400176C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900D5C", Offset = "0x900D5C")]
		None,
		[Token(Token = "0x400176D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900D94", Offset = "0x900D94")]
		Everyone,
		[Token(Token = "0x400176E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900DCC", Offset = "0x900DCC")]
		FriendsOfMembers,
		[Token(Token = "0x400176F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900E04", Offset = "0x900E04")]
		FriendsOfOwner,
		[Token(Token = "0x4001770")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900E3C", Offset = "0x900E3C")]
		InvitedUsers,
		[Token(Token = "0x4001771")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900E74", Offset = "0x900E74")]
		Unknown
	}
	[Token(Token = "0x20003C8")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4001773")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900EAC", Offset = "0x900EAC")]
		Unknown,
		[Token(Token = "0x4001774")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900EE4", Offset = "0x900EE4")]
		Lock,
		[Token(Token = "0x4001775")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900F1C", Offset = "0x900F1C")]
		Unlock
	}
	[Token(Token = "0x20003C9")]
	public class RoomOptions
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xCA3068", Offset = "0xCA3068", VA = "0xCA3068")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xCA30E0", Offset = "0xCA30E0", VA = "0xCA30E0")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xCA3164", Offset = "0xCA3164", VA = "0xCA3164")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xCA31D0", Offset = "0xCA31D0", VA = "0xCA31D0")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xCA324C", Offset = "0xCA324C", VA = "0xCA324C")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xCA32C8", Offset = "0xCA32C8", VA = "0xCA32C8")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xCA3344", Offset = "0xCA3344", VA = "0xCA3344")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xCA33C0", Offset = "0xCA33C0", VA = "0xCA33C0")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xCA343C", Offset = "0xCA343C", VA = "0xCA343C")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xCA34B8", Offset = "0xCA34B8", VA = "0xCA34B8")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xCA3508", Offset = "0xCA3508", VA = "0xCA3508", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public enum RoomType
	{
		[Token(Token = "0x4001778")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900F54", Offset = "0x900F54")]
		Unknown,
		[Token(Token = "0x4001779")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900F8C", Offset = "0x900F8C")]
		Matchmaking,
		[Token(Token = "0x400177A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900FC4", Offset = "0x900FC4")]
		Moderated,
		[Token(Token = "0x400177B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x900FFC", Offset = "0x900FFC")]
		Private,
		[Token(Token = "0x400177C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901034", Offset = "0x901034")]
		Solo
	}
	[Token(Token = "0x20003CB")]
	public enum SdkAccountType
	{
		[Token(Token = "0x400177E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90106C", Offset = "0x90106C")]
		Unknown,
		[Token(Token = "0x400177F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9010A4", Offset = "0x9010A4")]
		Oculus,
		[Token(Token = "0x4001780")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9010DC", Offset = "0x9010DC")]
		FacebookGameroom
	}
	[Token(Token = "0x20003CC")]
	public enum SendPolicy
	{
		[Token(Token = "0x4001782")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901114", Offset = "0x901114")]
		Unreliable,
		[Token(Token = "0x4001783")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90114C", Offset = "0x90114C")]
		Reliable,
		[Token(Token = "0x4001784")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901184", Offset = "0x901184")]
		Unknown
	}
	[Token(Token = "0x20003CD")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4001786")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9011BC", Offset = "0x9011BC")]
		Unknown,
		[Token(Token = "0x4001787")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9011F4", Offset = "0x9011F4")]
		Dropbox,
		[Token(Token = "0x4001788")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90122C", Offset = "0x90122C")]
		Facebook,
		[Token(Token = "0x4001789")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901264", Offset = "0x901264")]
		Google,
		[Token(Token = "0x400178A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90129C", Offset = "0x90129C")]
		Instagram,
		[Token(Token = "0x400178B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9012D4", Offset = "0x9012D4")]
		RemoteMedia
	}
	[Token(Token = "0x20003CE")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x400178D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90130C", Offset = "0x90130C")]
		Unknown,
		[Token(Token = "0x400178E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901344", Offset = "0x901344")]
		Shared,
		[Token(Token = "0x400178F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90137C", Offset = "0x90137C")]
		Canceled
	}
	[Token(Token = "0x20003CF")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8F83E8", Offset = "0x8F83E8")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xC926C4", Offset = "0xC926C4", VA = "0xC926C4")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xC926BC", Offset = "0xC926BC", VA = "0xC926BC")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x170002B3")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0xCA50B8", Offset = "0xCA50B8", VA = "0xCA50B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002370")]
			[Address(RVA = "0xCA5108", Offset = "0xCA5108", VA = "0xCA5108")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0xCA510C", Offset = "0xCA510C", VA = "0xCA510C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002372")]
			[Address(RVA = "0xCA515C", Offset = "0xCA515C", VA = "0xCA515C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0xCA4B44", Offset = "0xCA4B44", VA = "0xCA4B44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002374")]
			[Address(RVA = "0xCA5160", Offset = "0xCA5160", VA = "0xCA5160")]
			set
			{
			}
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xCA5164", Offset = "0xCA5164", VA = "0xCA5164")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x4001791")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9013B4", Offset = "0x9013B4")]
		Unknown,
		[Token(Token = "0x4001792")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9013EC", Offset = "0x9013EC")]
		Unavailable,
		[Token(Token = "0x4001793")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901424", Offset = "0x901424")]
		Suppressed,
		[Token(Token = "0x4001794")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90145C", Offset = "0x90145C")]
		Active
	}
	[Token(Token = "0x20003D2")]
	public enum TimeWindow
	{
		[Token(Token = "0x4001796")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901494", Offset = "0x901494")]
		Unknown,
		[Token(Token = "0x4001797")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9014CC", Offset = "0x9014CC")]
		OneHour,
		[Token(Token = "0x4001798")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901504", Offset = "0x901504")]
		OneDay,
		[Token(Token = "0x4001799")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90153C", Offset = "0x90153C")]
		OneWeek,
		[Token(Token = "0x400179A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901574", Offset = "0x901574")]
		ThirtyDays,
		[Token(Token = "0x400179B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9015AC", Offset = "0x9015AC")]
		NinetyDays
	}
	[Token(Token = "0x20003D3")]
	public class UserOptions
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xCA516C", Offset = "0xCA516C", VA = "0xCA516C")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xCA51E4", Offset = "0xCA51E4", VA = "0xCA51E4")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xCA5260", Offset = "0xCA5260", VA = "0xCA5260")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xCA52DC", Offset = "0xCA52DC", VA = "0xCA52DC")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xCA5348", Offset = "0xCA5348", VA = "0xCA5348")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xCA53C4", Offset = "0xCA53C4", VA = "0xCA53C4")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xCA5414", Offset = "0xCA5414", VA = "0xCA5414", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public enum UserOrdering
	{
		[Token(Token = "0x400179E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9015E4", Offset = "0x9015E4")]
		Unknown,
		[Token(Token = "0x400179F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90161C", Offset = "0x90161C")]
		None,
		[Token(Token = "0x40017A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901654", Offset = "0x901654")]
		PresenceAlphabetical
	}
	[Token(Token = "0x20003D5")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40017A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90168C", Offset = "0x90168C")]
		Unknown,
		[Token(Token = "0x40017A3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9016C4", Offset = "0x9016C4")]
		Online,
		[Token(Token = "0x40017A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9016FC", Offset = "0x9016FC")]
		Offline
	}
	[Token(Token = "0x20003D6")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x200075C")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4002710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4002711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6003346")]
			[Address(RVA = "0xCA72F0", Offset = "0xCA72F0", VA = "0xCA72F0")]
			private void Awake()
			{
			}

			[Token(Token = "0x6003347")]
			[Address(RVA = "0xCA73A8", Offset = "0xCA73A8", VA = "0xCA73A8")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6003348")]
			[Address(RVA = "0xCA7978", Offset = "0xCA7978", VA = "0xCA7978")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170002B6")]
		public ulong senderID
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0xCA6AAC", Offset = "0xCA6AAC", VA = "0xCA6AAC")]
			set
			{
			}
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xCA6B74", Offset = "0xCA6B74", VA = "0xCA6B74")]
		protected void Stop()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xCA6B78", Offset = "0xCA6B78", VA = "0xCA6B78")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xCA6BB4", Offset = "0xCA6BB4", VA = "0xCA6BB4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xCA6EB0", Offset = "0xCA6EB0", VA = "0xCA6EB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xCA6EE0", Offset = "0xCA6EE0", VA = "0xCA6EE0", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xCA6F48", Offset = "0xCA6F48", VA = "0xCA6F48")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xCA6FD0", Offset = "0xCA6FD0", VA = "0xCA6FD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xCA72E4", Offset = "0xCA72E4", VA = "0xCA72E4")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40017AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901734", Offset = "0x901734")]
		Unknown,
		[Token(Token = "0x40017AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90176C", Offset = "0x90176C")]
		B16000,
		[Token(Token = "0x40017AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9017A4", Offset = "0x9017A4")]
		B24000,
		[Token(Token = "0x40017AF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9017DC", Offset = "0x9017DC")]
		B32000,
		[Token(Token = "0x40017B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901814", Offset = "0x901814")]
		B64000,
		[Token(Token = "0x40017B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90184C", Offset = "0x90184C")]
		B96000,
		[Token(Token = "0x40017B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901884", Offset = "0x901884")]
		B128000
	}
	[Token(Token = "0x20003D8")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40017B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9018BC", Offset = "0x9018BC")]
		Unknown,
		[Token(Token = "0x40017B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9018F4", Offset = "0x9018F4")]
		Enabled,
		[Token(Token = "0x40017B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90192C", Offset = "0x90192C")]
		Disabled
	}
	[Token(Token = "0x20003D9")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40017B8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901964", Offset = "0x901964")]
		Unknown,
		[Token(Token = "0x40017B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x90199C", Offset = "0x90199C")]
		Muted,
		[Token(Token = "0x40017BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9019D4", Offset = "0x9019D4")]
		Unmuted
	}
	[Token(Token = "0x20003DA")]
	public class VoipOptions
	{
		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xCA7980", Offset = "0xCA7980", VA = "0xCA7980")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xCA79F8", Offset = "0xCA79F8", VA = "0xCA79F8")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xCA7A74", Offset = "0xCA7A74", VA = "0xCA7A74")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xCA68E0", Offset = "0xCA68E0", VA = "0xCA68E0")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xCA7AF0", Offset = "0xCA7AF0", VA = "0xCA7AF0", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xCA7BB4", Offset = "0xCA7BB4", VA = "0xCA7BB4", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xCA7C74", Offset = "0xCA7C74", VA = "0xCA7C74", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xCA7C7C", Offset = "0xCA7C7C", VA = "0xCA7C7C", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xCA7D1C", Offset = "0xCA7D1C", VA = "0xCA7D1C", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xCA6F40", Offset = "0xCA6F40", VA = "0xCA6F40")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40017BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901A0C", Offset = "0x901A0C")]
		Unknown,
		[Token(Token = "0x40017BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901A44", Offset = "0x901A44")]
		HZ24000,
		[Token(Token = "0x40017C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901A7C", Offset = "0x901A7C")]
		HZ44100,
		[Token(Token = "0x40017C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x901AB4", Offset = "0x901AB4")]
		HZ48000
	}
	[Token(Token = "0x20003DD")]
	public class WindowsPlatform
	{
		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8F83FC", Offset = "0x8F83FC")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xCA7D20", Offset = "0xCA7D20", VA = "0xCA7D20")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0xCA7DF8", Offset = "0xCA7DF8", VA = "0xCA7DF8")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xC92CB0", Offset = "0xC92CB0", VA = "0xC92CB0")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xC92880", Offset = "0xC92880", VA = "0xC92880")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xC92878", Offset = "0xC92878", VA = "0xC92878")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x20003DE")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xC99458", Offset = "0xC99458", VA = "0xC99458")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xCA0DDC", Offset = "0xCA0DDC", VA = "0xCA0DDC")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6002398")]
		[Address(RVA = "0xC995CC", Offset = "0xC995CC", VA = "0xC995CC")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class AchievementProgress
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xCA0E94", Offset = "0xCA0E94", VA = "0xCA0E94")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x600239A")]
		[Address(RVA = "0xC998C0", Offset = "0xC998C0", VA = "0xC998C0")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xC99BB4", Offset = "0xC99BB4", VA = "0xC99BB4")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xC99D3C", Offset = "0xC99D3C", VA = "0xC99D3C")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class AssetDetails
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901AEC", Offset = "0x901AEC")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xC99EE0", Offset = "0xC99EE0", VA = "0xC99EE0")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x600239E")]
		[Address(RVA = "0xC9A0E8", Offset = "0xC9A0E8", VA = "0xC9A0E8")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xC9A3AC", Offset = "0xC9A3AC", VA = "0xC9A3AC")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xC9A554", Offset = "0xC9A554", VA = "0xC9A554")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xC9A6FC", Offset = "0xC9A6FC", VA = "0xC9A6FC")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xC9A880", Offset = "0xC9A880", VA = "0xC9A880")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xC9AA38", Offset = "0xC9AA38", VA = "0xC9AA38")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class CloudStorageData
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xC9AC04", Offset = "0xC9AC04", VA = "0xC9AC04")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xC9B09C", Offset = "0xC9B09C", VA = "0xC9B09C")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xC9ADA8", Offset = "0xC9ADA8", VA = "0xC9ADA8")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xC9B280", Offset = "0xC9B280", VA = "0xC9B280")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F642C", Offset = "0x8F642C")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170002B7")]
		public int Count
		{
			[Token(Token = "0x60023A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B8")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x60023A9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B9")]
		public T Item
		{
			[Token(Token = "0x60023AB")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60023AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9173D0", Offset = "0x9173D0")]
		public List<T> Data
		{
			[Token(Token = "0x60023B7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public bool HasNextPage
		{
			[Token(Token = "0x60023B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BC")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60023B9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BD")]
		public string NextUrl
		{
			[Token(Token = "0x60023BA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		public string PreviousUrl
		{
			[Token(Token = "0x60023BB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023AA")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60023AD")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60023AE")]
		public void Clear()
		{
		}

		[Token(Token = "0x60023AF")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B0")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60023B1")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60023B2")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60023B3")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B4")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60023B5")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60023B6")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60023BC")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class Error
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xC95EDC", Offset = "0xC95EDC", VA = "0xC95EDC")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xC9B424", Offset = "0xC9B424", VA = "0xC9B424")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class InstalledApplication
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xCA1008", Offset = "0xCA1008", VA = "0xCA1008")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xC9B6B8", Offset = "0xC9B6B8", VA = "0xC9B6B8")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xCA0F60", Offset = "0xCA0F60", VA = "0xCA0F60")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xC9B9DC", Offset = "0xC9B9DC", VA = "0xC9B9DC")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class LaunchDetails
	{
		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchSource;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901B24", Offset = "0x901B24")]
		public readonly UserList Users;

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xCA10D0", Offset = "0xCA10D0", VA = "0xCA10D0")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xC9BB68", Offset = "0xC9BB68", VA = "0xC9BB68")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xC9BD54", Offset = "0xC9BD54", VA = "0xC9BD54")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xCA11DC", Offset = "0xCA11DC", VA = "0xCA11DC")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xC9BFA8", Offset = "0xC9BFA8", VA = "0xC9BFA8")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class LinkedAccount
	{
		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xCA12C8", Offset = "0xCA12C8", VA = "0xCA12C8")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xC9C31C", Offset = "0xC9C31C", VA = "0xC9C31C")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xC9C640", Offset = "0xC9C640", VA = "0xC9C640")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xC9C818", Offset = "0xC9C818", VA = "0xC9C818")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xC9C98C", Offset = "0xC9C98C", VA = "0xC9C98C")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xC9CBB0", Offset = "0xC9CBB0", VA = "0xC9CBB0")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xC9CD44", Offset = "0xC9CD44", VA = "0xC9CD44")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xCA1548", Offset = "0xCA1548", VA = "0xCA1548")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xCA1370", Offset = "0xCA1370", VA = "0xCA1370")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xC9CF64", Offset = "0xC9CF64", VA = "0xC9CF64")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901B5C", Offset = "0x901B5C")]
		public readonly User User;

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xCA1614", Offset = "0xCA1614", VA = "0xCA1614")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xCA16F8", Offset = "0xCA16F8", VA = "0xCA16F8")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901B94", Offset = "0x901B94")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xC9D130", Offset = "0xC9D130", VA = "0xC9D130")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xC9D368", Offset = "0xC9D368", VA = "0xC9D368")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly uint WinCount;

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xC9D904", Offset = "0xC9D904", VA = "0xC9D904")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901BCC", Offset = "0x901BCC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901BDC", Offset = "0x901BDC")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170002BF")]
		public ulong ID
		{
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xCA18E0", Offset = "0xCA18E0", VA = "0xCA18E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF44", Offset = "0x90FF44")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xCA18D0", Offset = "0xCA18D0", VA = "0xCA18D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF54", Offset = "0x90FF54")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public PeerConnectionState State
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xCA18E8", Offset = "0xCA18E8", VA = "0xCA18E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF64", Offset = "0x90FF64")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xCA18D8", Offset = "0xCA18D8", VA = "0xCA18D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF74", Offset = "0x90FF74")]
			private set
			{
			}
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xC9DACC", Offset = "0xC9DACC", VA = "0xC9DACC")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class OrgScopedID
	{
		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xC9DBF4", Offset = "0xC9DBF4", VA = "0xC9DBF4")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class Party
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901BEC", Offset = "0x901BEC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901C24", Offset = "0x901C24")]
		public readonly User Leader;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901C5C", Offset = "0x901C5C")]
		public readonly Room Room;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901C94", Offset = "0x901C94")]
		public readonly UserList Users;

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xC9DDC8", Offset = "0xC9DDC8", VA = "0xC9DDC8")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class PartyID
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xC9E134", Offset = "0xC9E134", VA = "0xC9E134")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class Pid
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xCA18F0", Offset = "0xCA18F0", VA = "0xCA18F0")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xC9E394", Offset = "0xC9E394", VA = "0xC9E394")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class PingResult
	{
		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901CCC", Offset = "0x901CCC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170002C1")]
		public ulong ID
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xCA1980", Offset = "0xCA1980", VA = "0xCA1980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF84", Offset = "0x90FF84")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xCA1978", Offset = "0xCA1978", VA = "0xCA1978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FF94", Offset = "0x90FF94")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xCA1988", Offset = "0xCA1988", VA = "0xCA1988")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002C3")]
		public bool IsTimeout
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xCA1A04", Offset = "0xCA1A04", VA = "0xCA1A04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xC9E6D8", Offset = "0xC9E6D8", VA = "0xC9E6D8")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xC9E804", Offset = "0xC9E804", VA = "0xC9E804")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class Product
	{
		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xCA1A60", Offset = "0xCA1A60", VA = "0xCA1A60")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xC9E978", Offset = "0xC9E978", VA = "0xC9E978")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class Purchase
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xC9EC6C", Offset = "0xC9EC6C", VA = "0xC9EC6C")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xC9EE10", Offset = "0xC9EE10", VA = "0xC9EE10")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class Room
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901CDC", Offset = "0x901CDC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901D14", Offset = "0x901D14")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901D4C", Offset = "0x901D4C")]
		public readonly User Owner;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly RoomType Type;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901D84", Offset = "0x901D84")]
		public readonly UserList Users;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly uint Version;

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xC9D534", Offset = "0xC9D534", VA = "0xC9D534")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xC9F688", Offset = "0xC9F688", VA = "0xC9F688")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xC9F1F0", Offset = "0xC9F1F0", VA = "0xC9F1F0")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xC9F394", Offset = "0xC9F394", VA = "0xC9F394")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class SdkAccount
	{
		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xCA1B18", Offset = "0xCA1B18", VA = "0xCA1B18")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xC9FB54", Offset = "0xC9FB54", VA = "0xC9FB54")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xC9FE18", Offset = "0xC9FE18", VA = "0xC9FE18")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class SystemPermission
	{
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xCA00A4", Offset = "0xCA00A4", VA = "0xCA00A4")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class SystemVoipState
	{
		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xCA022C", Offset = "0xCA022C", VA = "0xCA022C")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class User
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xCA03B0", Offset = "0xCA03B0", VA = "0xCA03B0")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xCA0878", Offset = "0xCA0878", VA = "0xCA0878")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class UserAndRoom
	{
		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x901DBC", Offset = "0x901DBC")]
		public readonly Room Room;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xCA1BB0", Offset = "0xCA1BB0", VA = "0xCA1BB0")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xCA0584", Offset = "0xCA0584", VA = "0xCA0584")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class UserProof
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xCA0B6C", Offset = "0xCA0B6C", VA = "0xCA0B6C")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class UserReportID
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xCA0D40", Offset = "0xCA0D40", VA = "0xCA0D40")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Michsky.UI.ModernUIPack
{
	[Token(Token = "0x2000426")]
	public class AnimatedIconHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x200075E")]
		public enum PlayType
		{
			[Token(Token = "0x4002713")]
			CLICK,
			[Token(Token = "0x4002714")]
			ON_POINTER_ENTER
		}

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x901DF4", Offset = "0x901DF4")]
		public PlayType playType;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator iconAnimator;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button eventButton;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isClicked;

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xD481D4", Offset = "0xD481D4", VA = "0xD481D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xD482F8", Offset = "0xD482F8", VA = "0xD482F8")]
		public void ClickEvent()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xD4839C", Offset = "0xD4839C", VA = "0xD4839C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xD48418", Offset = "0xD48418", VA = "0xD48418", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xD48494", Offset = "0xD48494", VA = "0xD48494")]
		public AnimatedIconHandler()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class ButtonManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonText;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI highlightedText;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource soundSource;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomContent;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool enableButtonSounds;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool useHoverSound;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool useClickSound;

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xD4849C", Offset = "0xD4849C", VA = "0xD4849C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xD48654", Offset = "0xD48654", VA = "0xD48654")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xD486BC", Offset = "0xD486BC", VA = "0xD486BC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xD48734", Offset = "0xD48734", VA = "0xD48734")]
		public ButtonManager()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xD48794", Offset = "0xD48794", VA = "0xD48794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FFA4", Offset = "0x90FFA4")]
		private void <Start>b__12_0()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xD487C4", Offset = "0xD487C4", VA = "0xD487C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FFB4", Offset = "0x90FFB4")]
		private void <Start>b__12_1()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class ButtonManagerBasic : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonText;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource soundSource;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useCustomContent;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool enableButtonSounds;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool useHoverSound;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool useClickSound;

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xD487FC", Offset = "0xD487FC", VA = "0xD487FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xD489B4", Offset = "0xD489B4", VA = "0xD489B4")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xD489EC", Offset = "0xD489EC", VA = "0xD489EC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xD48A64", Offset = "0xD48A64", VA = "0xD48A64")]
		public ButtonManagerBasic()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xD48AC4", Offset = "0xD48AC4", VA = "0xD48AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FFC4", Offset = "0x90FFC4")]
		private void <Start>b__11_0()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xD48AF4", Offset = "0xD48AF4", VA = "0xD48AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FFD4", Offset = "0x90FFD4")]
		private void <Start>b__11_1()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class ButtonManagerBasicIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image normalIcon;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource soundSource;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useCustomContent;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool enableButtonSounds;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool useHoverSound;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool useClickSound;

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xD48B2C", Offset = "0xD48B2C", VA = "0xD48B2C")]
		private void Start()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xD48CE4", Offset = "0xD48CE4", VA = "0xD48CE4")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xD48D1C", Offset = "0xD48D1C", VA = "0xD48D1C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xD48D94", Offset = "0xD48D94", VA = "0xD48D94")]
		public ButtonManagerBasicIcon()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xD48DA4", Offset = "0xD48DA4", VA = "0xD48DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FFE4", Offset = "0x90FFE4")]
		private void <Start>b__11_0()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xD48DD4", Offset = "0xD48DD4", VA = "0xD48DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90FFF4", Offset = "0x90FFF4")]
		private void <Start>b__11_1()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class ButtonManagerBasicWithIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image normalImage;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource soundSource;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useCustomContent;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableButtonSounds;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool useHoverSound;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool useClickSound;

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xD48E0C", Offset = "0xD48E0C", VA = "0xD48E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xD48FC4", Offset = "0xD48FC4", VA = "0xD48FC4")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xD4902C", Offset = "0xD4902C", VA = "0xD4902C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xD490A4", Offset = "0xD490A4", VA = "0xD490A4")]
		public ButtonManagerBasicWithIcon()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xD49104", Offset = "0xD49104", VA = "0xD49104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910004", Offset = "0x910004")]
		private void <Start>b__13_0()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xD49134", Offset = "0xD49134", VA = "0xD49134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910014", Offset = "0x910014")]
		private void <Start>b__13_1()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class ButtonManagerIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image normalIcon;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image highlightedIcon;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource soundSource;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomContent;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool enableButtonSounds;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool useHoverSound;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool useClickSound;

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xD4916C", Offset = "0xD4916C", VA = "0xD4916C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xD49324", Offset = "0xD49324", VA = "0xD49324")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xD4938C", Offset = "0xD4938C", VA = "0xD4938C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xD49404", Offset = "0xD49404", VA = "0xD49404")]
		public ButtonManagerIcon()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xD49414", Offset = "0xD49414", VA = "0xD49414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910024", Offset = "0x910024")]
		private void <Start>b__12_0()
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xD49444", Offset = "0xD49444", VA = "0xD49444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910034", Offset = "0x910034")]
		private void <Start>b__12_1()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class ButtonManagerWithIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image normalIcon;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image highlightedIcon;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI highlightedText;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource soundSource;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool useCustomContent;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool enableButtonSounds;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool useHoverSound;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool useClickSound;

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xBF1D6C", Offset = "0xBF1D6C", VA = "0xBF1D6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xBF1F24", Offset = "0xBF1F24", VA = "0xBF1F24")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xBF1FD4", Offset = "0xBF1FD4", VA = "0xBF1FD4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xBF204C", Offset = "0xBF204C", VA = "0xBF204C")]
		public ButtonManagerWithIcon()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xBF20AC", Offset = "0xBF20AC", VA = "0xBF20AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910044", Offset = "0x910044")]
		private void <Start>b__15_0()
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xBF20DC", Offset = "0xBF20DC", VA = "0xBF20DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910054", Offset = "0x910054")]
		private void <Start>b__15_1()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class DemoListShadow : MonoBehaviour
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scrollbar listScrollbar;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isTop;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool enableAnim;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator shadowAnimator;

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xBF3AE0", Offset = "0xBF3AE0", VA = "0xBF3AE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xBF3BAC", Offset = "0xBF3BAC", VA = "0xBF3BAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xBF3F04", Offset = "0xBF3F04", VA = "0xBF3F04")]
		public void ScrollUp()
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xBF3F10", Offset = "0xBF3F10", VA = "0xBF3F10")]
		public void ScrollDown()
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xBF3F1C", Offset = "0xBF3F1C", VA = "0xBF3F1C")]
		public DemoListShadow()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class DemoTopButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator buttonAnimator;

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xBF3F24", Offset = "0xBF3F24", VA = "0xBF3F24")]
		private void Start()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xBF3F7C", Offset = "0xBF3F7C", VA = "0xBF3F7C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xBF40A0", Offset = "0xBF40A0", VA = "0xBF40A0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xBF41C4", Offset = "0xBF41C4", VA = "0xBF41C4")]
		public DemoTopButton()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class LaunchURL : MonoBehaviour
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xBF75CC", Offset = "0xBF75CC", VA = "0xBF75CC")]
		public void urlLinkOrWeb()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xBF75D8", Offset = "0xBF75D8", VA = "0xBF75D8")]
		public LaunchURL()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class CustomDropdown : MonoBehaviour, IPointerExitHandler, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x200075F")]
		public class DropdownEvent : UnityEvent<int>
		{
			[Token(Token = "0x600334D")]
			[Address(RVA = "0xBF36F0", Offset = "0xBF36F0", VA = "0xBF36F0")]
			public DropdownEvent()
			{
			}
		}

		[Token(Token = "0x2000760")]
		public enum AnimationType
		{
			[Token(Token = "0x4002716")]
			FADING,
			[Token(Token = "0x4002717")]
			SLIDING,
			[Token(Token = "0x4002718")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x2000761")]
		public class Item
		{
			[Token(Token = "0x4002719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x400271A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite itemIcon;

			[Token(Token = "0x400271B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnItemSelection;

			[Token(Token = "0x600334E")]
			[Address(RVA = "0xBF33C8", Offset = "0xBF33C8", VA = "0xBF33C8")]
			public Item()
			{
			}
		}

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8410", Offset = "0x8F8410")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x400271C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x400271D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomDropdown <>4__this;

			[Token(Token = "0x600334F")]
			[Address(RVA = "0xBF2E58", Offset = "0xBF2E58", VA = "0xBF2E58")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6003350")]
			[Address(RVA = "0xBF3524", Offset = "0xBF3524", VA = "0xBF3524")]
			internal void <SetupDropdown>b__0()
			{
			}
		}

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject triggerObject;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI selectedText;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image selectedImage;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform itemParent;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject itemObject;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject scrollbar;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VerticalLayoutGroup itemList;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform currentListParent;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform listParent;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool enableIcon;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableTrigger;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool enableScrollbar;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool setHighPriorty;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool outOnPointerExit;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isListItem;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool invokeAtStart;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationType animationType;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int selectedItemIndex;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool saveSelected;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string dropdownTag;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public List<Item> dropdownItems;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x901E3C", Offset = "0x901E3C")]
		public DropdownEvent dropdownEvent;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Animator dropdownAnimator;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool isOn;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public int siblingIndex;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private TextMeshProUGUI setItemText;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Image setItemImage;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Sprite imageHelper;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string textHelper;

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xBF2114", Offset = "0xBF2114", VA = "0xBF2114")]
		private void Start()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xBF23E0", Offset = "0xBF23E0", VA = "0xBF23E0")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xBF2CE8", Offset = "0xBF2CE8", VA = "0xBF2CE8")]
		public void ChangeDropdownInfo(int itemIndex)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xBF2E60", Offset = "0xBF2E60", VA = "0xBF2E60")]
		public void Animate()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xBF317C", Offset = "0xBF317C", VA = "0xBF317C", Slot = "4")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xBF320C", Offset = "0xBF320C", VA = "0xBF320C")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xBF330C", Offset = "0xBF330C", VA = "0xBF330C")]
		public void CreateNewItem(string title, Sprite icon)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xBF3420", Offset = "0xBF3420", VA = "0xBF3420")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xBF349C", Offset = "0xBF349C", VA = "0xBF349C")]
		public CustomDropdown()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class DropdownMultiSelect : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000763")]
		public class ToggleEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6003351")]
			[Address(RVA = "0xBF5438", Offset = "0xBF5438", VA = "0xBF5438")]
			public ToggleEvent()
			{
			}
		}

		[Token(Token = "0x2000764")]
		public enum AnimationType
		{
			[Token(Token = "0x400271F")]
			FADING,
			[Token(Token = "0x4002720")]
			SLIDING,
			[Token(Token = "0x4002721")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x2000765")]
		public class Item
		{
			[Token(Token = "0x4002722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4002723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isOn;

			[Token(Token = "0x4002724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public ToggleEvent toggleEvents;

			[Token(Token = "0x6003352")]
			[Address(RVA = "0xBF52D4", Offset = "0xBF52D4", VA = "0xBF52D4")]
			public Item()
			{
			}
		}

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject triggerObject;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform itemParent;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemObject;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject scrollbar;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VerticalLayoutGroup itemList;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentListParent;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform listParent;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator dropdownAnimator;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI setItemText;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool enableIcon;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableTrigger;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool enableScrollbar;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool setHighPriorty;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool outOnPointerExit;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isListItem;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationType animationType;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool saveSelected;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool invokeAtStart;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string toggleTag;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<Item> dropdownItems;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string textHelper;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string newItemTitle;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Sprite newItemIcon;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isOn;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int iHelper;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int siblingIndex;

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xBF41CC", Offset = "0xBF41CC", VA = "0xBF41CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xBF4440", Offset = "0xBF4440", VA = "0xBF4440")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xBF4D08", Offset = "0xBF4D08", VA = "0xBF4D08")]
		public void UpdateToggle(bool isOn)
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xBF4D0C", Offset = "0xBF4D0C", VA = "0xBF4D0C")]
		public void SaveToggle(bool isOn)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xBF4DD8", Offset = "0xBF4DD8", VA = "0xBF4DD8")]
		public void Animate()
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0xBF50F4", Offset = "0xBF50F4", VA = "0xBF50F4")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xBF5184", Offset = "0xBF5184", VA = "0xBF5184")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xBF5234", Offset = "0xBF5234", VA = "0xBF5234")]
		public void CreateNewItem()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xBF532C", Offset = "0xBF532C", VA = "0xBF532C")]
		public void SetItemTitle(string title)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xBF5334", Offset = "0xBF5334", VA = "0xBF5334")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xBF53B0", Offset = "0xBF53B0", VA = "0xBF53B0")]
		public DropdownMultiSelect()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class LayoutGroupPositionFix : MonoBehaviour
	{
		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8420", Offset = "0x8F8420")]
		private sealed class <ExecuteAfterTime>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4002728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LayoutGroupPositionFix <>4__this;

			[Token(Token = "0x17000583")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003356")]
				[Address(RVA = "0xBF7878", Offset = "0xBF7878", VA = "0xBF7878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000584")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003358")]
				[Address(RVA = "0xBF78E8", Offset = "0xBF78E8", VA = "0xBF78E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003353")]
			[Address(RVA = "0xBF7704", Offset = "0xBF7704", VA = "0xBF7704")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6003354")]
			[Address(RVA = "0xBF7738", Offset = "0xBF7738", VA = "0xBF7738", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003355")]
			[Address(RVA = "0xBF773C", Offset = "0xBF773C", VA = "0xBF773C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003357")]
			[Address(RVA = "0xBF7880", Offset = "0xBF7880", VA = "0xBF7880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LayoutGroup lg;

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xBF75E0", Offset = "0xBF75E0", VA = "0xBF75E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xBF766C", Offset = "0xBF766C", VA = "0xBF766C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x910064", Offset = "0x910064")]
		private IEnumerator ExecuteAfterTime(float time)
		{
			return null;
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xBF7730", Offset = "0xBF7730", VA = "0xBF7730")]
		public LayoutGroupPositionFix()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class UIElementInFront : MonoBehaviour
	{
		[Token(Token = "0x6002445")]
		[Address(RVA = "0xBFCF5C", Offset = "0xBFCF5C", VA = "0xBFCF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xBFCF90", Offset = "0xBFCF90", VA = "0xBFCF90")]
		public UIElementInFront()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class HorizontalSelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000767")]
		public class SelectorEvent : UnityEvent<int>
		{
			[Token(Token = "0x6003359")]
			[Address(RVA = "0xBF757C", Offset = "0xBF757C", VA = "0xBF757C")]
			public SelectorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000768")]
		public class Item
		{
			[Token(Token = "0x4002729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemTitle;

			[Token(Token = "0x400272A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onValueChanged;

			[Token(Token = "0x600335A")]
			[Address(RVA = "0xBF6D70", Offset = "0xBF6D70", VA = "0xBF6D70")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI labelHelper;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform indicatorParent;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject indicatorObject;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator selectorAnimator;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string newItemTitle;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool saveValue;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string selectorTag;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool enableIndicators;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool invokeAtStart;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool invertAnimation;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool loopSelection;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int defaultIndex;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Item> itemList;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x901EB0", Offset = "0x901EB0")]
		public SelectorEvent selectorEvent;

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xBF5488", Offset = "0xBF5488", VA = "0xBF5488")]
		private void Start()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xBF57DC", Offset = "0xBF57DC", VA = "0xBF57DC")]
		public void SetupSelector()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xBF5F98", Offset = "0xBF5F98", VA = "0xBF5F98")]
		public void PreviousClick()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xBF6650", Offset = "0xBF6650", VA = "0xBF6650")]
		public void ForwardClick()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xBF6CD4", Offset = "0xBF6CD4", VA = "0xBF6CD4")]
		public void CreateNewItem(string title)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xBF6DC8", Offset = "0xBF6DC8", VA = "0xBF6DC8")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xBF6E44", Offset = "0xBF6E44", VA = "0xBF6E44")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xBF74F4", Offset = "0xBF74F4", VA = "0xBF74F4")]
		public HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class CustomInputField : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x901EC4", Offset = "0x901EC4")]
		public GameObject fieldTrigger;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_InputField inputText;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator inputFieldAnimator;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isEmpty;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isClicked;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string inAnim;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string outAnim;

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xBF3740", Offset = "0xBF3740", VA = "0xBF3740")]
		private void Start()
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xBF3894", Offset = "0xBF3894", VA = "0xBF3894")]
		private void Update()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xBF398C", Offset = "0xBF398C", VA = "0xBF398C")]
		public void Animate()
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xBF39F8", Offset = "0xBF39F8", VA = "0xBF39F8")]
		public void FieldTrigger()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xBF3A6C", Offset = "0xBF3A6C", VA = "0xBF3A6C", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xBF3A70", Offset = "0xBF3A70", VA = "0xBF3A70")]
		public CustomInputField()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class ModalWindowManager : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image windowIcon;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI windowTitle;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI windowDescription;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button confirmButton;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button cancelButton;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite icon;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string titleText;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x901EFC", Offset = "0x901EFC")]
		public string descriptionText;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onConfirm;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onCancel;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool sharpAnimations;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool useCustomValues;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator mwAnimator;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isOn;

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xBF78F0", Offset = "0xBF78F0", VA = "0xBF78F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xBF7B88", Offset = "0xBF7B88", VA = "0xBF7B88")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xBF7CF4", Offset = "0xBF7CF4", VA = "0xBF7CF4")]
		public void OpenWindow()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xBF7D94", Offset = "0xBF7D94", VA = "0xBF7D94")]
		public void CloseWindow()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xBF7E30", Offset = "0xBF7E30", VA = "0xBF7E30")]
		public void AnimateWindow()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xBF7F14", Offset = "0xBF7F14", VA = "0xBF7F14")]
		public ModalWindowManager()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class ModalWindowTabs : MonoBehaviour
	{
		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x901F0C", Offset = "0x901F0C")]
		public List<GameObject> panels;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x901F44", Offset = "0x901F44")]
		public List<GameObject> buttons;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string panelFadeIn;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string panelFadeOut;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string buttonFadeIn;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string buttonFadeOut;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject currentPanel;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject nextPanel;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject currentButton;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject nextButton;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x901F7C", Offset = "0x901F7C")]
		public int currentPanelIndex;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int currentButtonlIndex;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator currentPanelAnimator;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator nextPanelAnimator;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xBF7F7C", Offset = "0xBF7F7C", VA = "0xBF7F7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xBF80A0", Offset = "0xBF80A0", VA = "0xBF80A0")]
		public void PanelAnim(int newPanel)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xBF82CC", Offset = "0xBF82CC", VA = "0xBF82CC")]
		public ModalWindowTabs()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class NotificationManager : MonoBehaviour
	{
		[Token(Token = "0x2000769")]
		public enum NotificationStyle
		{
			[Token(Token = "0x400272C")]
			FADING,
			[Token(Token = "0x400272D")]
			POPUP,
			[Token(Token = "0x400272E")]
			SLIDING
		}

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8430", Offset = "0x8F8430")]
		private sealed class <StartTimer>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400272F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationManager <>4__this;

			[Token(Token = "0x17000585")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600335E")]
				[Address(RVA = "0xBF8C04", Offset = "0xBF8C04", VA = "0xBF8C04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000586")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003360")]
				[Address(RVA = "0xBF8C74", Offset = "0xBF8C74", VA = "0xBF8C74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600335B")]
			[Address(RVA = "0xBF8800", Offset = "0xBF8800", VA = "0xBF8800")]
			[DebuggerHidden]
			public <StartTimer>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600335C")]
			[Address(RVA = "0xBF8B04", Offset = "0xBF8B04", VA = "0xBF8B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600335D")]
			[Address(RVA = "0xBF8B08", Offset = "0xBF8B08", VA = "0xBF8B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600335F")]
			[Address(RVA = "0xBF8C0C", Offset = "0xBF8C0C", VA = "0xBF8C0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite icon;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x901FB4", Offset = "0x901FB4")]
		public string description;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator notificationAnimator;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image iconObj;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI titleObj;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI descriptionObj;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool enableTimer;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float timer;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomContent;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool useStacking;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public NotificationStyle notificationStyle;

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xBF839C", Offset = "0xBF839C", VA = "0xBF839C")]
		private void Start()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xBF878C", Offset = "0xBF878C", VA = "0xBF878C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9100C8", Offset = "0x9100C8")]
		private IEnumerator StartTimer()
		{
			return null;
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xBF882C", Offset = "0xBF882C", VA = "0xBF882C")]
		public void OpenNotification()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xBF88BC", Offset = "0xBF88BC", VA = "0xBF88BC")]
		public void CloseNotification()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xBF8920", Offset = "0xBF8920", VA = "0xBF8920")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xBF8A8C", Offset = "0xBF8A8C", VA = "0xBF8A8C")]
		public NotificationManager()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class NotificationStacking : MonoBehaviour
	{
		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8440", Offset = "0x8F8440")]
		private sealed class <StartNotification>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationStacking <>4__this;

			[Token(Token = "0x17000587")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003364")]
				[Address(RVA = "0xBF91D4", Offset = "0xBF91D4", VA = "0xBF91D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000588")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003366")]
				[Address(RVA = "0xBF9244", Offset = "0xBF9244", VA = "0xBF9244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003361")]
			[Address(RVA = "0xBF8F68", Offset = "0xBF8F68", VA = "0xBF8F68")]
			[DebuggerHidden]
			public <StartNotification>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003362")]
			[Address(RVA = "0xBF900C", Offset = "0xBF900C", VA = "0xBF900C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003363")]
			[Address(RVA = "0xBF9010", Offset = "0xBF9010", VA = "0xBF9010", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003365")]
			[Address(RVA = "0xBF91DC", Offset = "0xBF91DC", VA = "0xBF91DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<NotificationManager> notifications;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool enableUpdating;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x901FE4", Offset = "0x901FE4")]
		public float delay;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentNotification;

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xBF8C7C", Offset = "0xBF8C7C", VA = "0xBF8C7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xBF8EF4", Offset = "0xBF8EF4", VA = "0xBF8EF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x91012C", Offset = "0x91012C")]
		private IEnumerator StartNotification()
		{
			return null;
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xBF8F94", Offset = "0xBF8F94", VA = "0xBF8F94")]
		public NotificationStacking()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class PBFilled : MonoBehaviour
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90201C", Offset = "0x90201C")]
		public TextMeshProUGUI minLabel;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI maxLabel;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902054", Offset = "0x902054")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x902054", Offset = "0x902054")]
		public int transitionAfter;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color minColor;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color maxColor;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ProgressBar progressBar;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator barAnimatior;

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xBF924C", Offset = "0xBF924C", VA = "0xBF924C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xBF9370", Offset = "0xBF9370", VA = "0xBF9370")]
		private void Update()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xBF9480", Offset = "0xBF9480", VA = "0xBF9480")]
		public PBFilled()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class ProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9020AC", Offset = "0x9020AC")]
		public float currentPercent;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9020C8", Offset = "0x9020C8")]
		public int speed;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image loadingBar;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI textPercent;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isOn;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool restart;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool invert;

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xBF9538", Offset = "0xBF9538", VA = "0xBF9538")]
		private void Start()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xBF9614", Offset = "0xBF9614", VA = "0xBF9614")]
		private void Update()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xBF97A8", Offset = "0xBF97A8", VA = "0xBF97A8")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xBF987C", Offset = "0xBF987C", VA = "0xBF987C")]
		public ProgressBar()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class RadialSlider : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200076C")]
		public class SliderEvent : UnityEvent<float>
		{
			[Token(Token = "0x6003367")]
			[Address(RVA = "0xBFA1E0", Offset = "0xBFA1E0", VA = "0xBFA1E0")]
			public SliderEvent()
			{
			}
		}

		[Token(Token = "0x4001968")]
		private const string PREFS_UI_SAVE_NAME = "Radial";

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float currentValue;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image sliderImage;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform indicatorPivot;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxValue;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9020E4", Offset = "0x9020E4")]
		public int decimals;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isPercent;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool rememberValue;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string sliderTag;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SliderEvent onValueChanged;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onPointerEnter;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onPointerExit;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform hitRectTransform;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isPointerDown;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float currentAngle;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float currentAngleOnPointerDown;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float valueDisplayPrecision;

		[Token(Token = "0x170002C4")]
		public float SliderAngle
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0xBF9884", Offset = "0xBF9884", VA = "0xBF9884")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600246F")]
			[Address(RVA = "0xBF988C", Offset = "0xBF988C", VA = "0xBF988C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public float SliderValue
		{
			[Token(Token = "0x6002470")]
			[Address(RVA = "0xBF9914", Offset = "0xBF9914", VA = "0xBF9914")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002471")]
			[Address(RVA = "0xBF9960", Offset = "0xBF9960", VA = "0xBF9960")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public float SliderValueRaw
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0xBF9944", Offset = "0xBF9944", VA = "0xBF9944")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002473")]
			[Address(RVA = "0xBF9978", Offset = "0xBF9978", VA = "0xBF9978")]
			set
			{
			}
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xBF9990", Offset = "0xBF9990", VA = "0xBF9990")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xBF9AC8", Offset = "0xBF9AC8", VA = "0xBF9AC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xBF9D7C", Offset = "0xBF9D7C", VA = "0xBF9D7C", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xBFA048", Offset = "0xBFA048", VA = "0xBFA048", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xBFA104", Offset = "0xBFA104", VA = "0xBFA104", Slot = "6")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xBFA10C", Offset = "0xBFA10C", VA = "0xBFA10C", Slot = "7")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xBFA13C", Offset = "0xBFA13C", VA = "0xBFA13C", Slot = "8")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xBF9B60", Offset = "0xBF9B60", VA = "0xBF9B60")]
		public void LoadState()
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xBFA090", Offset = "0xBFA090", VA = "0xBFA090")]
		public void SaveState()
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xBF9BCC", Offset = "0xBF9BCC", VA = "0xBF9BCC")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xBFA080", Offset = "0xBFA080", VA = "0xBFA080")]
		private bool HasValueChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xBF9E5C", Offset = "0xBF9E5C", VA = "0xBF9E5C")]
		private void HandleSliderMouseInput(PointerEventData eventData, bool allowValueWrap)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xBFA16C", Offset = "0xBFA16C", VA = "0xBFA16C")]
		public RadialSlider()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class RangeMaxSlider : Slider
	{
		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TextMeshProUGUI label;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public string numberFormat;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float realValue;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool assignedRealValue;

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xBFA230", Offset = "0xBFA230", VA = "0xBFA230", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xBFA260", Offset = "0xBFA260", VA = "0xBFA260", Slot = "51")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xBFA504", Offset = "0xBFA504", VA = "0xBFA504")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xBFA518", Offset = "0xBFA518", VA = "0xBFA518")]
		public RangeMaxSlider()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class RangeMinSlider : Slider
	{
		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90210C", Offset = "0x90210C")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public string numberFormat;

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xBFA520", Offset = "0xBFA520", VA = "0xBFA520", Slot = "51")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xBFA7B4", Offset = "0xBFA7B4", VA = "0xBFA7B4")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xBFA7C8", Offset = "0xBFA7C8", VA = "0xBFA7C8")]
		public RangeMinSlider()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class RangeSlider : MonoBehaviour
	{
		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902144", Offset = "0x902144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x902144", Offset = "0x902144")]
		public int DecimalPlaces;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minValue;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool useWholeNumbers;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool showLabels;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902198", Offset = "0x902198")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI minSliderLabel;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9021D0", Offset = "0x9021D0")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI maxSliderLabel;

		[Token(Token = "0x170002C7")]
		public float CurrentLowerValue
		{
			[Token(Token = "0x6002488")]
			[Address(RVA = "0xBFA7D0", Offset = "0xBFA7D0", VA = "0xBFA7D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C8")]
		public float CurrentUpperValue
		{
			[Token(Token = "0x6002489")]
			[Address(RVA = "0xBFA808", Offset = "0xBFA808", VA = "0xBFA808")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xBFA834", Offset = "0xBFA834", VA = "0xBFA834")]
		private void Awake()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xBFAAA8", Offset = "0xBFAAA8", VA = "0xBFAAA8")]
		public RangeSlider()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class SliderManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200076D")]
		public class SliderEvent : UnityEvent<float>
		{
			[Token(Token = "0x6003368")]
			[Address(RVA = "0xBFB638", Offset = "0xBFB638", VA = "0xBFB638")]
			public SliderEvent()
			{
			}
		}

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider mainSlider;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI popupValueText;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool enableSaving;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sliderTag;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool usePercent;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool showValue;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool showPopupValue;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool useRoundValue;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public SliderEvent onValueChanged;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x902218", Offset = "0x902218")]
		public SliderEvent sliderEvent;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator sliderAnimator;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float saveValue;

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xBFAAC0", Offset = "0xBFAAC0", VA = "0xBFAAC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xBFADD0", Offset = "0xBFADD0", VA = "0xBFADD0")]
		private void Update()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xBFB4CC", Offset = "0xBFB4CC", VA = "0xBFB4CC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xBFB544", Offset = "0xBFB544", VA = "0xBFB544", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xBFB5BC", Offset = "0xBFB5BC", VA = "0xBFB5BC")]
		public SliderManager()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xBFB688", Offset = "0xBFB688", VA = "0xBFB688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910190", Offset = "0x910190")]
		private void <Start>b__14_0(float <p0>)
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xBFB710", Offset = "0xBFB710", VA = "0xBFB710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9101A0", Offset = "0x9101A0")]
		private void <Start>b__14_1(float <p0>)
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class SwitchManager : MonoBehaviour
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnEvents;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OffEvents;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool saveValue;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string switchTag;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOn;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool invokeAtStart;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator switchAnimator;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button switchButton;

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xBFB7A4", Offset = "0xBFB7A4", VA = "0xBFB7A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xBFBB64", Offset = "0xBFBB64", VA = "0xBFBB64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xBFBD9C", Offset = "0xBFBD9C", VA = "0xBFBD9C")]
		public void AnimateSwitch()
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xBFBEB8", Offset = "0xBFBEB8", VA = "0xBFBEB8")]
		public SwitchManager()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class ToggleAnim : MonoBehaviour
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggleObject;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator toggleAnimator;

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xBFBF20", Offset = "0xBFBF20", VA = "0xBFBF20")]
		private void Start()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xBFC08C", Offset = "0xBFC08C", VA = "0xBFC08C")]
		private void TaskOnClick(bool value)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xBFC124", Offset = "0xBFC124", VA = "0xBFC124")]
		public ToggleAnim()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class TooltipContent : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90222C", Offset = "0x90222C")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x90222C", Offset = "0x90222C")]
		public string description;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902278", Offset = "0x902278")]
		public GameObject tooltipRect;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI descriptionText;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TooltipManager tpManager;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Animator tooltipAnimator;

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xBFC12C", Offset = "0xBFC12C", VA = "0xBFC12C")]
		private void Start()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xBFC368", Offset = "0xBFC368", VA = "0xBFC368", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xBFC4C8", Offset = "0xBFC4C8", VA = "0xBFC4C8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xBFC57C", Offset = "0xBFC57C", VA = "0xBFC57C")]
		public TooltipContent()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class TooltipManager : MonoBehaviour
	{
		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas mainCanvas;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject tooltipObject;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tooltipContent;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9022C0", Offset = "0x9022C0")]
		public float tooltipSmoothness;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool allowUpdating;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int vBorderTop;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int vBorderBottom;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int hBorderLeft;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hBorderRight;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 uiPos;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 cursorPos;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform tooltipRect;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RectTransform tooltipZHelper;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 contentPos;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 tooltipVelocity;

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xBFC584", Offset = "0xBFC584", VA = "0xBFC584")]
		private void Start()
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xBFC700", Offset = "0xBFC700", VA = "0xBFC700")]
		private void Update()
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xBFCAF0", Offset = "0xBFCAF0", VA = "0xBFCAF0")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xBFCE90", Offset = "0xBFCE90", VA = "0xBFCE90")]
		public TooltipManager()
		{
		}
	}
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8F6464", Offset = "0x8F6464")]
	public class UIManager : ScriptableObject
	{
		[Token(Token = "0x200076E")]
		public enum ButtonThemeType
		{
			[Token(Token = "0x4002736")]
			BASIC,
			[Token(Token = "0x4002737")]
			CUSTOM
		}

		[Token(Token = "0x200076F")]
		public enum DropdownThemeType
		{
			[Token(Token = "0x4002739")]
			BASIC,
			[Token(Token = "0x400273A")]
			CUSTOM
		}

		[Token(Token = "0x2000770")]
		public enum DropdownAnimationType
		{
			[Token(Token = "0x400273C")]
			FADING,
			[Token(Token = "0x400273D")]
			SLIDING,
			[Token(Token = "0x400273E")]
			STYLISH
		}

		[Token(Token = "0x2000771")]
		public enum ModalWindowThemeType
		{
			[Token(Token = "0x4002740")]
			BASIC,
			[Token(Token = "0x4002741")]
			CUSTOM
		}

		[Token(Token = "0x2000772")]
		public enum NotificationThemeType
		{
			[Token(Token = "0x4002743")]
			BASIC,
			[Token(Token = "0x4002744")]
			CUSTOM
		}

		[Token(Token = "0x2000773")]
		public enum SliderThemeType
		{
			[Token(Token = "0x4002746")]
			BASIC,
			[Token(Token = "0x4002747")]
			CUSTOM
		}

		[Token(Token = "0x2000774")]
		public enum ToggleThemeType
		{
			[Token(Token = "0x4002749")]
			BASIC,
			[Token(Token = "0x400274A")]
			CUSTOM
		}

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool enableDynamicUpdate;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool enableExtendedColorPicker;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool editorHints;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color animatedIconColor;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ButtonThemeType buttonThemeType;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_FontAsset buttonFont;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float buttonFontSize;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color buttonBorderColor;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color buttonFilledColor;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color buttonTextBasicColor;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color buttonTextColor;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color buttonTextHighlightedColor;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color buttonIconBasicColor;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color buttonIconColor;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color buttonIconHighlightedColor;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TMP_FontAsset dropdownItemFont;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float dropdownItemFontSize;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public DropdownThemeType dropdownThemeType;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public DropdownAnimationType dropdownAnimationType;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public TMP_FontAsset dropdownFont;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float dropdownFontSize;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Color dropdownColor;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Color dropdownTextColor;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Color dropdownIconColor;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Color dropdownItemColor;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Color dropdownItemTextColor;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Color dropdownItemIconColor;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TMP_FontAsset selectorFont;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float hSelectorFontSize;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public Color selectorColor;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Color selectorHighlightedColor;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool hSelectorInvertAnimation;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		public bool hSelectorLoopSelection;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TMP_FontAsset inputFieldFont;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float inputFieldFontSize;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Color inputFieldColor;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public TMP_FontAsset modalWindowTitleFont;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public TMP_FontAsset modalWindowContentFont;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public DropdownThemeType modalThemeType;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public Color modalWindowTitleColor;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public Color modalWindowDescriptionColor;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public Color modalWindowIconColor;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public Color modalWindowBackgroundColor;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public Color modalWindowContentPanelColor;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public TMP_FontAsset notificationTitleFont;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float notificationTitleFontSize;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public TMP_FontAsset notificationDescriptionFont;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float notificationDescriptionFontSize;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public NotificationThemeType notificationThemeType;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Color notificationBackgroundColor;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Color notificationTitleColor;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public Color notificationDescriptionColor;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Color notificationIconColor;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public TMP_FontAsset progressBarLabelFont;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float progressBarLabelFontSize;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public Color progressBarColor;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public Color progressBarBackgroundColor;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public Color progressBarLoopBackgroundColor;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public Color progressBarLabelColor;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public Color scrollbarColor;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public Color scrollbarBackgroundColor;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public TMP_FontAsset sliderLabelFont;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public float sliderLabelFontSize;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public SliderThemeType sliderThemeType;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public Color sliderColor;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public Color sliderBackgroundColor;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public Color sliderLabelColor;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public Color sliderPopupLabelColor;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public Color sliderHandleColor;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public Color switchBorderColor;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public Color switchBackgroundColor;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public Color switchHandleOnColor;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public Color switchHandleOffColor;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public TMP_FontAsset toggleFont;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public float toggleFontSize;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		public ToggleThemeType toggleThemeType;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public Color toggleTextColor;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public Color toggleBorderColor;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public Color toggleBackgroundColor;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public Color toggleCheckColor;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public TMP_FontAsset tooltipFont;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public float tooltipFontSize;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public Color tooltipTextColor;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public Color tooltipBackgroundColor;

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xBFCF98", Offset = "0xBFCF98", VA = "0xBFCF98")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x2000446")]
	[ExecuteInEditMode]
	public class UIManagerAnimatedIcon : MonoBehaviour
	{
		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90230C", Offset = "0x90230C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902344", Offset = "0x902344")]
		public List<GameObject> images;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesWithAlpha;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xBFDB20", Offset = "0xBFDB20", VA = "0xBFDB20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xBFDC64", Offset = "0xBFDC64", VA = "0xBFDC64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xBFDF04", Offset = "0xBFDF04", VA = "0xBFDF04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xBFDCA8", Offset = "0xBFDCA8", VA = "0xBFDCA8")]
		private void UpdateAnimatedIcon()
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xBFDFA8", Offset = "0xBFDFA8", VA = "0xBFDFA8")]
		public UIManagerAnimatedIcon()
		{
		}
	}
	[Token(Token = "0x2000447")]
	[ExecuteInEditMode]
	public class UIManagerButton : MonoBehaviour
	{
		[Token(Token = "0x2000775")]
		public enum ButtonType
		{
			[Token(Token = "0x400274C")]
			BASIC,
			[Token(Token = "0x400274D")]
			BASIC_ONLY_ICON,
			[Token(Token = "0x400274E")]
			BASIC_WITH_ICON,
			[Token(Token = "0x400274F")]
			BASIC_OUTLINE,
			[Token(Token = "0x4002750")]
			BASIC_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4002751")]
			BASIC_OUTLINE_WITH_ICON,
			[Token(Token = "0x4002752")]
			RADIAL_ONLY_ICON,
			[Token(Token = "0x4002753")]
			RADIAL_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4002754")]
			ROUNDED,
			[Token(Token = "0x4002755")]
			ROUNDED_OUTLINE
		}

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90237C", Offset = "0x90237C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonType buttonType;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Image basicFilled;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public TextMeshProUGUI basicText;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Image basicOnlyIconFilled;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Image basicOnlyIconIcon;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Image basicWithIconFilled;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Image basicWithIconIcon;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public TextMeshProUGUI basicWithIconText;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Image basicOutlineBorder;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Image basicOutlineFilled;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineText;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineTextHighligted;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Image basicOutlineOOBorder;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Image basicOutlineOOFilled;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Image basicOutlineOOIcon;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Image basicOutlineOOIconHighlighted;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Image basicOutlineWOBorder;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Image basicOutlineWOFilled;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Image basicOutlineWOIcon;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Image basicOutlineWOIconHighlighted;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOText;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOTextHighligted;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Image radialOOBackground;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Image radialOOIcon;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Image radialOutlineOOBorder;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public Image radialOutlineOOFilled;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public Image radialOutlineOOIcon;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public Image radialOutlineOOIconHighlighted;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public Image roundedBackground;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public TextMeshProUGUI roundedText;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Image roundedOutlineBorder;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Image roundedOutlineFilled;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineText;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineTextHighligted;

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xBFE038", Offset = "0xBFE038", VA = "0xBFE038")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xBFE17C", Offset = "0xBFE17C", VA = "0xBFE17C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xC00174", Offset = "0xC00174", VA = "0xC00174")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xBFE1C0", Offset = "0xBFE1C0", VA = "0xBFE1C0")]
		private void UpdateButton()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xC00218", Offset = "0xC00218", VA = "0xC00218")]
		public UIManagerButton()
		{
		}
	}
	[Token(Token = "0x2000448")]
	[ExecuteInEditMode]
	public class UIManagerDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9025C4", Offset = "0x9025C4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9025FC", Offset = "0x9025FC")]
		public Image background;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image mainIcon;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image expandIcon;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image itemBackground;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image itemIcon;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI itemText;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CustomDropdown dropdownMain;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DropdownMultiSelect dropdownMulti;

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xC00220", Offset = "0xC00220", VA = "0xC00220")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xC00478", Offset = "0xC00478", VA = "0xC00478")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xC00EDC", Offset = "0xC00EDC", VA = "0xC00EDC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xC004BC", Offset = "0xC004BC", VA = "0xC004BC")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xC00F80", Offset = "0xC00F80", VA = "0xC00F80")]
		public UIManagerDropdown()
		{
		}
	}
	[Token(Token = "0x2000449")]
	[ExecuteInEditMode]
	public class UIManagerHSelector : MonoBehaviour
	{
		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902634", Offset = "0x902634")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90266C", Offset = "0x90266C")]
		public List<GameObject> images;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesHighlighted;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> texts;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HorizontalSelector hSelector;

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xC00F88", Offset = "0xC00F88", VA = "0xC00F88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xC01170", Offset = "0xC01170", VA = "0xC01170")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xC0165C", Offset = "0xC0165C", VA = "0xC0165C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xC011B4", Offset = "0xC011B4", VA = "0xC011B4")]
		private void UpdateSelector()
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xC01700", Offset = "0xC01700", VA = "0xC01700")]
		public UIManagerHSelector()
		{
		}
	}
	[Token(Token = "0x200044A")]
	[ExecuteInEditMode]
	public class UIManagerInputField : MonoBehaviour
	{
		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9026A4", Offset = "0x9026A4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9026DC", Offset = "0x9026DC")]
		public List<GameObject> images;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> texts;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xC017A8", Offset = "0xC017A8", VA = "0xC017A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xC018EC", Offset = "0xC018EC", VA = "0xC018EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xC01C38", Offset = "0xC01C38", VA = "0xC01C38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xC01930", Offset = "0xC01930", VA = "0xC01930")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xC01CDC", Offset = "0xC01CDC", VA = "0xC01CDC")]
		public UIManagerInputField()
		{
		}
	}
	[Token(Token = "0x200044B")]
	[ExecuteInEditMode]
	public class UIManagerModalWindow : MonoBehaviour
	{
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902714", Offset = "0x902714")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90274C", Offset = "0x90274C")]
		public Image background;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image icon;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI title;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI description;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xC01D6C", Offset = "0xC01D6C", VA = "0xC01D6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xC01EB0", Offset = "0xC01EB0", VA = "0xC01EB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xC02208", Offset = "0xC02208", VA = "0xC02208")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xC01EF4", Offset = "0xC01EF4", VA = "0xC01EF4")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xC022AC", Offset = "0xC022AC", VA = "0xC022AC")]
		public UIManagerModalWindow()
		{
		}
	}
	[Token(Token = "0x200044C")]
	[ExecuteInEditMode]
	public class UIManagerNotification : MonoBehaviour
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902784", Offset = "0x902784")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9027BC", Offset = "0x9027BC")]
		public Image background;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image icon;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI title;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI description;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xC022B4", Offset = "0xC022B4", VA = "0xC022B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xC023F8", Offset = "0xC023F8", VA = "0xC023F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xC0276C", Offset = "0xC0276C", VA = "0xC0276C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xC0243C", Offset = "0xC0243C", VA = "0xC0243C")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xC02810", Offset = "0xC02810", VA = "0xC02810")]
		public UIManagerNotification()
		{
		}
	}
	[Token(Token = "0x200044D")]
	[ExecuteInEditMode]
	public class UIManagerProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9027F4", Offset = "0x9027F4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90282C", Offset = "0x90282C")]
		public Image bar;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xC02818", Offset = "0xC02818", VA = "0xC02818")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xC0295C", Offset = "0xC0295C", VA = "0xC0295C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xC02BFC", Offset = "0xC02BFC", VA = "0xC02BFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xC029A0", Offset = "0xC029A0", VA = "0xC029A0")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xC02CA0", Offset = "0xC02CA0", VA = "0xC02CA0")]
		public UIManagerProgressBar()
		{
		}
	}
	[Token(Token = "0x200044E")]
	[ExecuteInEditMode]
	public class UIManagerProgressBarLoop : MonoBehaviour
	{
		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902864", Offset = "0x902864")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasBackground;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useRegularBackground;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90289C", Offset = "0x90289C")]
		public Image bar;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Image background;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xC02CA8", Offset = "0xC02CA8", VA = "0xC02CA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xC02DEC", Offset = "0xC02DEC", VA = "0xC02DEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xC03024", Offset = "0xC03024", VA = "0xC03024")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xC02E30", Offset = "0xC02E30", VA = "0xC02E30")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xC030C8", Offset = "0xC030C8", VA = "0xC030C8")]
		public UIManagerProgressBarLoop()
		{
		}
	}
	[Token(Token = "0x200044F")]
	[ExecuteInEditMode]
	public class UIManagerScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9028E4", Offset = "0x9028E4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90291C", Offset = "0x90291C")]
		public Image background;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image bar;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xC030D0", Offset = "0xC030D0", VA = "0xC030D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xC03214", Offset = "0xC03214", VA = "0xC03214")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xC033E0", Offset = "0xC033E0", VA = "0xC033E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xC03258", Offset = "0xC03258", VA = "0xC03258")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xC03484", Offset = "0xC03484", VA = "0xC03484")]
		public UIManagerScrollbar()
		{
		}
	}
	[Token(Token = "0x2000450")]
	[ExecuteInEditMode]
	public class UIManagerSlider : MonoBehaviour
	{
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902954", Offset = "0x902954")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasLabel;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hasPopupLabel;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x90298C", Offset = "0x90298C")]
		public Image background;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image bar;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handle;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public TextMeshProUGUI label;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public TextMeshProUGUI popupLabel;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xC0348C", Offset = "0xC0348C", VA = "0xC0348C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xC035D0", Offset = "0xC035D0", VA = "0xC035D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xC03E10", Offset = "0xC03E10", VA = "0xC03E10")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xC03614", Offset = "0xC03614", VA = "0xC03614")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xC03EB4", Offset = "0xC03EB4", VA = "0xC03EB4")]
		public UIManagerSlider()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[ExecuteInEditMode]
	public class UIManagerSwitch : MonoBehaviour
	{
		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9029E4", Offset = "0x9029E4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902A1C", Offset = "0x902A1C")]
		public Image border;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image handleOn;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handleOff;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xC03EBC", Offset = "0xC03EBC", VA = "0xC03EBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xC04000", Offset = "0xC04000", VA = "0xC04000")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xC0444C", Offset = "0xC0444C", VA = "0xC0444C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xC04044", Offset = "0xC04044", VA = "0xC04044")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xC044F0", Offset = "0xC044F0", VA = "0xC044F0")]
		public UIManagerSwitch()
		{
		}
	}
	[Token(Token = "0x2000452")]
	[ExecuteInEditMode]
	public class UIManagerToggle : MonoBehaviour
	{
		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902A54", Offset = "0x902A54")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902A8C", Offset = "0x902A8C")]
		public Image border;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image check;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI onLabel;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI offLabel;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xC044F8", Offset = "0xC044F8", VA = "0xC044F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xC0463C", Offset = "0xC0463C", VA = "0xC0463C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xC04AEC", Offset = "0xC04AEC", VA = "0xC04AEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xC04680", Offset = "0xC04680", VA = "0xC04680")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xC04B90", Offset = "0xC04B90", VA = "0xC04B90")]
		public UIManagerToggle()
		{
		}
	}
	[Token(Token = "0x2000453")]
	[ExecuteInEditMode]
	public class UIManagerTooltip : MonoBehaviour
	{
		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902AC4", Offset = "0x902AC4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902AFC", Offset = "0x902AFC")]
		public Image background;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI text;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xC04B98", Offset = "0xC04B98", VA = "0xC04B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xC04CDC", Offset = "0xC04CDC", VA = "0xC04CDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xC04F20", Offset = "0xC04F20", VA = "0xC04F20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xC04D20", Offset = "0xC04D20", VA = "0xC04D20")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xC04FC4", Offset = "0xC04FC4", VA = "0xC04FC4")]
		public UIManagerTooltip()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class WindowDragger : UIBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902B34", Offset = "0x902B34")]
		public RectTransform dragArea;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform dragObject;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x902B6C", Offset = "0x902B6C")]
		public bool topOnClick;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 originalLocalPointerPosition;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 originalPanelLocalPosition;

		[Token(Token = "0x170002C9")]
		private RectTransform DragObjectInternal
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0xC05214", Offset = "0xC05214", VA = "0xC05214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		private RectTransform DragAreaInternal
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xC052BC", Offset = "0xC052BC", VA = "0xC052BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xC04FCC", Offset = "0xC04FCC", VA = "0xC04FCC")]
		public new void Start()
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xC05420", Offset = "0xC05420", VA = "0xC05420", Slot = "17")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xC055C0", Offset = "0xC055C0", VA = "0xC055C0", Slot = "18")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xC057AC", Offset = "0xC057AC", VA = "0xC057AC")]
		private void ClampToArea()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xC05A4C", Offset = "0xC05A4C", VA = "0xC05A4C")]
		public WindowDragger()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class WindowManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000776")]
		public class WindowItem
		{
			[Token(Token = "0x4002756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string windowName;

			[Token(Token = "0x4002757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject windowObject;

			[Token(Token = "0x4002758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject buttonObject;

			[Token(Token = "0x6003369")]
			[Address(RVA = "0xC06694", Offset = "0xC06694", VA = "0xC06694")]
			public WindowItem()
			{
			}
		}

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WindowItem> windows;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentWindowIndex;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentButtonIndex;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int newWindowIndex;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string windowFadeIn;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string windowFadeOut;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string buttonFadeIn;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string buttonFadeOut;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject currentWindow;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject nextWindow;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject currentButton;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject nextButton;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator currentWindowAnimator;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator nextWindowAnimator;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xC05A5C", Offset = "0xC05A5C", VA = "0xC05A5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xC05BA0", Offset = "0xC05BA0", VA = "0xC05BA0")]
		public void OpenFirstTab()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xC05E20", Offset = "0xC05E20", VA = "0xC05E20")]
		public void OpenPanel(string newPanel)
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xC06114", Offset = "0xC06114", VA = "0xC06114")]
		public void NextPage()
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xC063AC", Offset = "0xC063AC", VA = "0xC063AC")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xC06618", Offset = "0xC06618", VA = "0xC06618")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xC066EC", Offset = "0xC066EC", VA = "0xC066EC")]
		public WindowManager()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F65A4", Offset = "0x8F65A4")]
	public class UIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xADB308", Offset = "0xADB308", VA = "0xADB308", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xADB310", Offset = "0xADB310", VA = "0xADB310")]
		public UIIgnoreRaycast()
		{
		}
	}
}
namespace UnityEngine.UI.Michsky.UI.ModernUIPack
{
	[Token(Token = "0x2000457")]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x2000777")]
		public enum Type
		{
			[Token(Token = "0x400275A")]
			Horizontal,
			[Token(Token = "0x400275B")]
			Vertical,
			[Token(Token = "0x400275C")]
			Radial,
			[Token(Token = "0x400275D")]
			Diamond
		}

		[Token(Token = "0x2000778")]
		public enum Blend
		{
			[Token(Token = "0x400275F")]
			Override,
			[Token(Token = "0x4002760")]
			Add,
			[Token(Token = "0x4002761")]
			Multiply
		}

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x902BD4", Offset = "0x902BD4")]
		private float _offset;

		[Token(Token = "0x170002CB")]
		public Blend BlendMode
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xAD9EB4", Offset = "0xAD9EB4", VA = "0xAD9EB4")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0xAD9EBC", Offset = "0xAD9EBC", VA = "0xAD9EBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0xAD9EFC", Offset = "0xAD9EFC", VA = "0xAD9EFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xAD9F04", Offset = "0xAD9F04", VA = "0xAD9F04")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public Type GradientType
		{
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0xAD9F44", Offset = "0xAD9F44", VA = "0xAD9F44")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0xAD9F4C", Offset = "0xAD9F4C", VA = "0xAD9F4C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public float Offset
		{
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0xAD9F8C", Offset = "0xAD9F8C", VA = "0xAD9F8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002500")]
			[Address(RVA = "0xAD9F94", Offset = "0xAD9F94", VA = "0xAD9F94")]
			set
			{
			}
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xAD9FD4", Offset = "0xAD9FD4", VA = "0xAD9FD4", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xADB138", Offset = "0xADB138", VA = "0xADB138")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xADB190", Offset = "0xADB190", VA = "0xADB190")]
		public UIGradient()
		{
		}
	}
}
namespace MiniJSON
{
	[Token(Token = "0x2000458")]
	public static class Json
	{
		[Token(Token = "0x2000779")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x20007C1")]
			private enum TOKEN
			{
				[Token(Token = "0x400280C")]
				NONE,
				[Token(Token = "0x400280D")]
				CURLY_OPEN,
				[Token(Token = "0x400280E")]
				CURLY_CLOSE,
				[Token(Token = "0x400280F")]
				SQUARED_OPEN,
				[Token(Token = "0x4002810")]
				SQUARED_CLOSE,
				[Token(Token = "0x4002811")]
				COLON,
				[Token(Token = "0x4002812")]
				COMMA,
				[Token(Token = "0x4002813")]
				STRING,
				[Token(Token = "0x4002814")]
				NUMBER,
				[Token(Token = "0x4002815")]
				TRUE,
				[Token(Token = "0x4002816")]
				FALSE,
				[Token(Token = "0x4002817")]
				NULL
			}

			[Token(Token = "0x4002762")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4002763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x17000589")]
			private char PeekChar
			{
				[Token(Token = "0x6003375")]
				[Address(RVA = "0xC08434", Offset = "0xC08434", VA = "0xC08434")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700058A")]
			private char NextChar
			{
				[Token(Token = "0x6003376")]
				[Address(RVA = "0xC081F8", Offset = "0xC081F8", VA = "0xC081F8")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700058B")]
			private string NextWord
			{
				[Token(Token = "0x6003377")]
				[Address(RVA = "0xC08290", Offset = "0xC08290", VA = "0xC08290")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6003378")]
				[Address(RVA = "0xC07A70", Offset = "0xC07A70", VA = "0xC07A70")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x600336A")]
			[Address(RVA = "0xC077B0", Offset = "0xC077B0", VA = "0xC077B0")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x600336B")]
			[Address(RVA = "0xC07854", Offset = "0xC07854", VA = "0xC07854")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x600336C")]
			[Address(RVA = "0xC075C4", Offset = "0xC075C4", VA = "0xC075C4")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x600336D")]
			[Address(RVA = "0xC078F8", Offset = "0xC078F8", VA = "0xC078F8", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x600336E")]
			[Address(RVA = "0xC07934", Offset = "0xC07934", VA = "0xC07934")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x600336F")]
			[Address(RVA = "0xC07F50", Offset = "0xC07F50", VA = "0xC07F50")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6003370")]
			[Address(RVA = "0xC078D0", Offset = "0xC078D0", VA = "0xC078D0")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6003371")]
			[Address(RVA = "0xC0803C", Offset = "0xC0803C", VA = "0xC0803C")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6003372")]
			[Address(RVA = "0xC07C4C", Offset = "0xC07C4C", VA = "0xC07C4C")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6003373")]
			[Address(RVA = "0xC08118", Offset = "0xC08118", VA = "0xC08118")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6003374")]
			[Address(RVA = "0xC0836C", Offset = "0xC0836C", VA = "0xC0836C")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x200077A")]
		private sealed class Serializer
		{
			[Token(Token = "0x4002764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x6003379")]
			[Address(RVA = "0xC084CC", Offset = "0xC084CC", VA = "0xC084CC")]
			private Serializer()
			{
			}

			[Token(Token = "0x600337A")]
			[Address(RVA = "0xC0770C", Offset = "0xC0770C", VA = "0xC0770C")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x600337B")]
			[Address(RVA = "0xC08538", Offset = "0xC08538", VA = "0xC08538")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x600337C")]
			[Address(RVA = "0xC08CC0", Offset = "0xC08CC0", VA = "0xC08CC0")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x600337D")]
			[Address(RVA = "0xC089C4", Offset = "0xC089C4", VA = "0xC089C4")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x600337E")]
			[Address(RVA = "0xC086F4", Offset = "0xC086F4", VA = "0xC086F4")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x600337F")]
			[Address(RVA = "0xC09104", Offset = "0xC09104", VA = "0xC09104")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xC075B8", Offset = "0xC075B8", VA = "0xC075B8")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xC07708", Offset = "0xC07708", VA = "0xC07708")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace KSVR_Animation
{
	[Token(Token = "0x2000459")]
	public class KSVR_AnimationRecorder : MonoBehaviour
	{
		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8450", Offset = "0x8F8450")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KSVR_AnimationRecorder <>4__this;

			[Token(Token = "0x4002766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] bytes;

			[Token(Token = "0x4002767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool done;

			[Token(Token = "0x6003380")]
			[Address(RVA = "0xFD95D4", Offset = "0xFD95D4", VA = "0xFD95D4")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6003381")]
			[Address(RVA = "0xFD95DC", Offset = "0xFD95DC", VA = "0xFD95DC")]
			internal void <LoadAsync>b__0()
			{
			}
		}

		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8460", Offset = "0x8F8460")]
		private sealed class <LoadAsync>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400276A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KSVR_AnimationRecorder <>4__this;

			[Token(Token = "0x400276B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x400276C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x400276D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WWW <www>5__2;

			[Token(Token = "0x1700058D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003385")]
				[Address(RVA = "0xFD9BC4", Offset = "0xFD9BC4", VA = "0xFD9BC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003387")]
				[Address(RVA = "0xFD9C34", Offset = "0xFD9C34", VA = "0xFD9C34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003382")]
			[Address(RVA = "0xFD94E4", Offset = "0xFD94E4", VA = "0xFD94E4")]
			[DebuggerHidden]
			public <LoadAsync>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003383")]
			[Address(RVA = "0xFD9678", Offset = "0xFD9678", VA = "0xFD9678", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003384")]
			[Address(RVA = "0xFD967C", Offset = "0xFD967C", VA = "0xFD967C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003386")]
			[Address(RVA = "0xFD9BCC", Offset = "0xFD9BCC", VA = "0xFD9BCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8470", Offset = "0x8F8470")]
		private sealed class <SaveAsync>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400276E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400276F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KSVR_AnimationRecorder <>4__this;

			[Token(Token = "0x1700058F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600338B")]
				[Address(RVA = "0xFD9FC4", Offset = "0xFD9FC4", VA = "0xFD9FC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600338D")]
				[Address(RVA = "0xFDA034", Offset = "0xFDA034", VA = "0xFDA034", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003388")]
			[Address(RVA = "0xFD9510", Offset = "0xFD9510", VA = "0xFD9510")]
			[DebuggerHidden]
			public <SaveAsync>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003389")]
			[Address(RVA = "0xFD9C3C", Offset = "0xFD9C3C", VA = "0xFD9C3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600338A")]
			[Address(RVA = "0xFD9C40", Offset = "0xFD9C40", VA = "0xFD9C40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600338C")]
			[Address(RVA = "0xFD9FCC", Offset = "0xFD9FCC", VA = "0xFD9FCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<KSVR_RecordNode> RecordNodes;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902C14", Offset = "0x902C14")]
		private float <m_Time>k__BackingField;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextAsset AnimationToPlay;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<_AnimationClip> TransformAnims;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_IsRecording;

		[Token(Token = "0x170002CF")]
		public float m_Time
		{
			[Token(Token = "0x6002506")]
			[Address(RVA = "0xFD8C64", Offset = "0xFD8C64", VA = "0xFD8C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9101B0", Offset = "0x9101B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002507")]
			[Address(RVA = "0xFD8C6C", Offset = "0xFD8C6C", VA = "0xFD8C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9101C0", Offset = "0x9101C0")]
			set
			{
			}
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xFD8C74", Offset = "0xFD8C74", VA = "0xFD8C74")]
		private void Start()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xFD9060", Offset = "0xFD9060", VA = "0xFD9060")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xFD906C", Offset = "0xFD906C", VA = "0xFD906C")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xFD9074", Offset = "0xFD9074", VA = "0xFD9074")]
		public void AddKey()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xFD91AC", Offset = "0xFD91AC", VA = "0xFD91AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0xFD93BC", Offset = "0xFD93BC", VA = "0xFD93BC")]
		public void Play()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xFD8CFC", Offset = "0xFD8CFC", VA = "0xFD8CFC")]
		public void Load(TextAsset asset)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xFD9324", Offset = "0xFD9324", VA = "0xFD9324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9101D0", Offset = "0x9101D0")]
		public IEnumerator LoadAsync(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xFD92B0", Offset = "0xFD92B0", VA = "0xFD92B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x910234", Offset = "0x910234")]
		private IEnumerator SaveAsync()
		{
			return null;
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xFD953C", Offset = "0xFD953C", VA = "0xFD953C")]
		public KSVR_AnimationRecorder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045A")]
	public class _AnimationClip
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string ObjectName;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<_AnimationCurve> AnimCurves;

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xFDA03C", Offset = "0xFDA03C", VA = "0xFDA03C")]
		public _AnimationClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045B")]
	public class _AnimationCurve
	{
		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string Type;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string PropertyName;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<_Keyframe> Keyframes;

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xFDA0B0", Offset = "0xFDA0B0", VA = "0xFDA0B0")]
		public _AnimationCurve()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045C")]
	public struct _Keyframe
	{
		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float Time;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		public float Value;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public float InTangent;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public float InWeight;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public float OutTangent;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public float OutWeight;
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x200045D")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xADCAF4", Offset = "0xADCAF4", VA = "0xADCAF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xADCD9C", Offset = "0xADCD9C", VA = "0xADCD9C")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xADCF44", Offset = "0xADCF44", VA = "0xADCF44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xADCFD8", Offset = "0xADCFD8", VA = "0xADCFD8", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xADD0D4", Offset = "0xADD0D4", VA = "0xADD0D4", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xADD180", Offset = "0xADD180", VA = "0xADD180")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xADD1E8", Offset = "0xADD1E8", VA = "0xADD1E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xADD1EC", Offset = "0xADD1EC", VA = "0xADD1EC")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xADD2DC", Offset = "0xADD2DC", VA = "0xADD2DC")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xADD3CC", Offset = "0xADD3CC", VA = "0xADD3CC")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xADD4BC", Offset = "0xADD4BC", VA = "0xADD4BC")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xADD5AC", Offset = "0xADD5AC", VA = "0xADD5AC")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xADD69C", Offset = "0xADD69C", VA = "0xADD69C")]
		public void Update()
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xADD6A0", Offset = "0xADD6A0", VA = "0xADD6A0")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x200077E")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4002772")]
			Hardware,
			[Token(Token = "0x4002773")]
			Touch
		}

		[Token(Token = "0x200077F")]
		public class VirtualAxis
		{
			[Token(Token = "0x4002774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90343C", Offset = "0x90343C")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4002776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90344C", Offset = "0x90344C")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x17000591")]
			public string name
			{
				[Token(Token = "0x600338E")]
				[Address(RVA = "0xADE704", Offset = "0xADE704", VA = "0xADE704")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916DC0", Offset = "0x916DC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600338F")]
				[Address(RVA = "0xADE70C", Offset = "0xADE70C", VA = "0xADE70C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916DD0", Offset = "0x916DD0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000592")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6003390")]
				[Address(RVA = "0xADE714", Offset = "0xADE714", VA = "0xADE714")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916DE0", Offset = "0x916DE0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6003391")]
				[Address(RVA = "0xADE71C", Offset = "0xADE71C", VA = "0xADE71C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916DF0", Offset = "0x916DF0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000593")]
			public float GetValue
			{
				[Token(Token = "0x6003396")]
				[Address(RVA = "0xADD0C4", Offset = "0xADD0C4", VA = "0xADD0C4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000594")]
			public float GetValueRaw
			{
				[Token(Token = "0x6003397")]
				[Address(RVA = "0xADE768", Offset = "0xADE768", VA = "0xADE768")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6003392")]
			[Address(RVA = "0xADCC68", Offset = "0xADCC68", VA = "0xADCC68")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6003393")]
			[Address(RVA = "0xADE728", Offset = "0xADE728", VA = "0xADE728")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6003394")]
			[Address(RVA = "0xADCF70", Offset = "0xADCF70", VA = "0xADCF70")]
			public void Remove()
			{
			}

			[Token(Token = "0x6003395")]
			[Address(RVA = "0xADD0CC", Offset = "0xADD0CC", VA = "0xADD0CC")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000780")]
		public class VirtualButton
		{
			[Token(Token = "0x4002777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90345C", Offset = "0x90345C")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90346C", Offset = "0x90346C")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4002779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x400277A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x400277B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000595")]
			public string name
			{
				[Token(Token = "0x6003398")]
				[Address(RVA = "0xADE770", Offset = "0xADE770", VA = "0xADE770")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916E00", Offset = "0x916E00")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003399")]
				[Address(RVA = "0xADE778", Offset = "0xADE778", VA = "0xADE778")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916E10", Offset = "0x916E10")]
				private set
				{
				}
			}

			[Token(Token = "0x17000596")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x600339A")]
				[Address(RVA = "0xADE780", Offset = "0xADE780", VA = "0xADE780")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916E20", Offset = "0x916E20")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600339B")]
				[Address(RVA = "0xADE788", Offset = "0xADE788", VA = "0xADE788")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x916E30", Offset = "0x916E30")]
				private set
				{
				}
			}

			[Token(Token = "0x17000597")]
			public bool GetButton
			{
				[Token(Token = "0x60033A1")]
				[Address(RVA = "0xADE8E4", Offset = "0xADE8E4", VA = "0xADE8E4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000598")]
			public bool GetButtonDown
			{
				[Token(Token = "0x60033A2")]
				[Address(RVA = "0xADE8EC", Offset = "0xADE8EC", VA = "0xADE8EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000599")]
			public bool GetButtonUp
			{
				[Token(Token = "0x60033A3")]
				[Address(RVA = "0xADE91C", Offset = "0xADE91C", VA = "0xADE91C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600339C")]
			[Address(RVA = "0xADE794", Offset = "0xADE794", VA = "0xADE794")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x600339D")]
			[Address(RVA = "0xADE7D0", Offset = "0xADE7D0", VA = "0xADE7D0")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x600339E")]
			[Address(RVA = "0xADE818", Offset = "0xADE818", VA = "0xADE818")]
			public void Pressed()
			{
			}

			[Token(Token = "0x600339F")]
			[Address(RVA = "0xADE850", Offset = "0xADE850", VA = "0xADE850")]
			public void Released()
			{
			}

			[Token(Token = "0x60033A0")]
			[Address(RVA = "0xADE87C", Offset = "0xADE87C", VA = "0xADE87C")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x170002D0")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0xADE370", Offset = "0xADE370", VA = "0xADE370")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xADD6A8", Offset = "0xADD6A8", VA = "0xADD6A8")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xADD748", Offset = "0xADD748", VA = "0xADD748")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xADCBE8", Offset = "0xADCBE8", VA = "0xADCBE8")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xADD868", Offset = "0xADD868", VA = "0xADD868")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xADCC9C", Offset = "0xADCC9C", VA = "0xADCC9C")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xADDAB4", Offset = "0xADDAB4", VA = "0xADDAB4")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xADDC90", Offset = "0xADDC90", VA = "0xADDC90")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xADDE04", Offset = "0xADDE04", VA = "0xADDE04")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xADCD1C", Offset = "0xADCD1C", VA = "0xADCD1C")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xADDFD8", Offset = "0xADDFD8", VA = "0xADDFD8")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xADE0D8", Offset = "0xADE0D8", VA = "0xADE0D8")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xADE040", Offset = "0xADE040", VA = "0xADE040")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xADE140", Offset = "0xADE140", VA = "0xADE140")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xADE1C8", Offset = "0xADE1C8", VA = "0xADE1C8")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xADE250", Offset = "0xADE250", VA = "0xADE250")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xADD254", Offset = "0xADD254", VA = "0xADD254")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xADD344", Offset = "0xADD344", VA = "0xADD344")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xADD434", Offset = "0xADD434", VA = "0xADD434")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xADD614", Offset = "0xADD614", VA = "0xADD614")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xADD524", Offset = "0xADD524", VA = "0xADD524")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xADE2D8", Offset = "0xADE2D8", VA = "0xADE2D8")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xADE3F4", Offset = "0xADE3F4", VA = "0xADE3F4")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xADE4F4", Offset = "0xADE4F4", VA = "0xADE4F4")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xADE600", Offset = "0xADE600", VA = "0xADE600")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xADE94C", Offset = "0xADE94C", VA = "0xADE94C")]
		private void Update()
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xADE950", Offset = "0xADE950", VA = "0xADE950")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xADE9D0", Offset = "0xADE9D0", VA = "0xADE9D0")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x2000781")]
		public enum AxisOption
		{
			[Token(Token = "0x400277D")]
			Both,
			[Token(Token = "0x400277E")]
			OnlyHorizontal,
			[Token(Token = "0x400277F")]
			OnlyVertical
		}

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xADE9D8", Offset = "0xADE9D8", VA = "0xADE9D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xADEB38", Offset = "0xADEB38", VA = "0xADEB38")]
		private void Start()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xADEB7C", Offset = "0xADEB7C", VA = "0xADEB7C")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xADE9DC", Offset = "0xADE9DC", VA = "0xADE9DC")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xADEC80", Offset = "0xADEC80", VA = "0xADEC80", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xADEE6C", Offset = "0xADEE6C", VA = "0xADEE6C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xADEED8", Offset = "0xADEED8", VA = "0xADEED8", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xADEEDC", Offset = "0xADEEDC", VA = "0xADEEDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xADEF40", Offset = "0xADEF40", VA = "0xADEF40")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x2000462")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6002547")]
		[Address(RVA = "0xADEFB0", Offset = "0xADEFB0", VA = "0xADEFB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xADEFC0", Offset = "0xADEFC0", VA = "0xADEFC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xADEFB8", Offset = "0xADEFB8", VA = "0xADEFB8")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xADF0C0", Offset = "0xADF0C0", VA = "0xADF0C0")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xADF438", Offset = "0xADF438", VA = "0xADF438")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F65EC", Offset = "0x8F65EC")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000782")]
		public enum AxisOption
		{
			[Token(Token = "0x4002781")]
			Both,
			[Token(Token = "0x4002782")]
			OnlyHorizontal,
			[Token(Token = "0x4002783")]
			OnlyVertical
		}

		[Token(Token = "0x2000783")]
		public enum ControlStyle
		{
			[Token(Token = "0x4002785")]
			Absolute,
			[Token(Token = "0x4002786")]
			Relative,
			[Token(Token = "0x4002787")]
			Swipe
		}

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xAE00C0", Offset = "0xAE00C0", VA = "0xAE00C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xAE0220", Offset = "0xAE0220", VA = "0xAE0220")]
		private void Start()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xAE00C4", Offset = "0xAE00C4", VA = "0xAE00C4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xAE02B0", Offset = "0xAE02B0", VA = "0xAE02B0")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xAE0338", Offset = "0xAE0338", VA = "0xAE0338", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xAE0410", Offset = "0xAE0410", VA = "0xAE0410")]
		private void Update()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xAE0624", Offset = "0xAE0624", VA = "0xAE0624", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xAE069C", Offset = "0xAE069C", VA = "0xAE069C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xAE0790", Offset = "0xAE0790", VA = "0xAE0790")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902CD4", Offset = "0x902CD4")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x170002D1")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0xADFCFC", Offset = "0xADFCFC", VA = "0xADFCFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910298", Offset = "0x910298")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xAE0804", Offset = "0xAE0804", VA = "0xAE0804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9102A8", Offset = "0x9102A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xADD7F8", Offset = "0xADD7F8", VA = "0xADD7F8")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xADD8E8", Offset = "0xADD8E8", VA = "0xADD8E8")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xADD958", Offset = "0xADD958", VA = "0xADD958")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xADDB34", Offset = "0xADDB34", VA = "0xADDB34")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xADDD58", Offset = "0xADDD58", VA = "0xADDD58")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xADDE84", Offset = "0xADDE84", VA = "0xADDE84")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xADDF30", Offset = "0xADDF30", VA = "0xADDF30")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xADE4A8", Offset = "0xADE4A8", VA = "0xADE4A8")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xADE5AC", Offset = "0xADE5AC", VA = "0xADE5AC")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xADE6B4", Offset = "0xADE6B4", VA = "0xADE6B4")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6002561")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6002562")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6002563")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6002564")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6002565")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6002566")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6002567")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6002568")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6002569")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x600256A")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x600256B")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xADFD08", Offset = "0xADFD08", VA = "0xADFD08")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000465")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x600256D")]
		[Address(RVA = "0xADF440", Offset = "0xADF440", VA = "0xADF440")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xADF4D4", Offset = "0xADF4D4", VA = "0xADF4D4")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xADF560", Offset = "0xADF560", VA = "0xADF560", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xADF618", Offset = "0xADF618", VA = "0xADF618", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xADF6E8", Offset = "0xADF6E8", VA = "0xADF6E8", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xADF7AC", Offset = "0xADF7AC", VA = "0xADF7AC", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xADF868", Offset = "0xADF868", VA = "0xADF868", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xADF924", Offset = "0xADF924", VA = "0xADF924", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xADF9DC", Offset = "0xADF9DC", VA = "0xADF9DC", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xADFAA0", Offset = "0xADFAA0", VA = "0xADFAA0", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xADFB6C", Offset = "0xADFB6C", VA = "0xADFB6C", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xADFC38", Offset = "0xADFC38", VA = "0xADFC38", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xADFCF0", Offset = "0xADFCF0", VA = "0xADFCF0", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xADD740", Offset = "0xADD740", VA = "0xADD740")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x600257B")]
		[Address(RVA = "0xADFDC8", Offset = "0xADFDC8", VA = "0xADFDC8", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xADFDDC", Offset = "0xADFDDC", VA = "0xADFDDC", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xADFDE8", Offset = "0xADFDE8", VA = "0xADFDE8", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xADFDF4", Offset = "0xADFDF4", VA = "0xADFDF4", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xADFE00", Offset = "0xADFE00", VA = "0xADFE00", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xADFE74", Offset = "0xADFE74", VA = "0xADFE74", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xADFEE8", Offset = "0xADFEE8", VA = "0xADFEE8", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xADFF5C", Offset = "0xADFF5C", VA = "0xADFF5C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xADFFD0", Offset = "0xADFFD0", VA = "0xADFFD0", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xAE0044", Offset = "0xAE0044", VA = "0xAE0044", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xAE00B8", Offset = "0xAE00B8", VA = "0xAE00B8", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xADD744", Offset = "0xADD744", VA = "0xADD744")]
		public StandaloneInput()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x2000467")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000784")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4002788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4002789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x60033A4")]
			[Address(RVA = "0xAE09E8", Offset = "0xAE09E8", VA = "0xAE09E8")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xAE0810", Offset = "0xAE0810", VA = "0xAE0810")]
		private void Start()
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xAE0838", Offset = "0xAE0838", VA = "0xAE0838")]
		private void Update()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xAE09E0", Offset = "0xAE09E0", VA = "0xAE09E0")]
		public AutoMoveAndRotate()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x2000468")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x600258A")]
		[Address(RVA = "0x10146D0", Offset = "0x10146D0", VA = "0x10146D0")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x10147C4", Offset = "0x10147C4", VA = "0x10147C4")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x600258C")]
		[Address(RVA = "0x1014D60", Offset = "0x1014D60", VA = "0x1014D60")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x1014E50", Offset = "0x1014E50", VA = "0x1014E50")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x1014E98", Offset = "0x1014E98", VA = "0x1014E98")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x1014DA8", Offset = "0x1014DA8", VA = "0x1014DA8")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x1014EE0", Offset = "0x1014EE0", VA = "0x1014EE0")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TermsPopup", RVA = "0x902CE4", Offset = "0x902CE4")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x1014EE8", Offset = "0x1014EE8", VA = "0x1014EE8")]
		public void Start()
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x10151D4", Offset = "0x10151D4", VA = "0x10151D4")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6002593")]
		[Address(RVA = "0x10151DC", Offset = "0x10151DC", VA = "0x10151DC", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x101528C", Offset = "0x101528C", VA = "0x101528C")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xC511D4", Offset = "0xC511D4", VA = "0xC511D4")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xC51650", Offset = "0xC51650", VA = "0xC51650")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xC51864", Offset = "0xC51864", VA = "0xC51864")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xC518F8", Offset = "0xC518F8", VA = "0xC518F8")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xC51714", Offset = "0xC51714", VA = "0xC51714")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xC51B20", Offset = "0xC51B20", VA = "0xC51B20")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xC51D20", Offset = "0xC51D20", VA = "0xC51D20")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xC51D28", Offset = "0xC51D28", VA = "0xC51D28")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xC51D30", Offset = "0xC51D30", VA = "0xC51D30")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xC51D38", Offset = "0xC51D38", VA = "0xC51D38")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x600259F")]
		[Address(RVA = "0xC51DA8", Offset = "0xC51DA8", VA = "0xC51DA8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xC52238", Offset = "0xC52238", VA = "0xC52238")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xC522AC", Offset = "0xC522AC", VA = "0xC522AC", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xC522B4", Offset = "0xC522B4", VA = "0xC522B4")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xC5AC30", Offset = "0xC5AC30", VA = "0xC5AC30")]
		private void Start()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xC5AC88", Offset = "0xC5AC88", VA = "0xC5AC88")]
		private void test()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xC5AD6C", Offset = "0xC5AD6C", VA = "0xC5AD6C")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public static class PersistentStorage
	{
		[Token(Token = "0x2000785")]
		public enum eFileType
		{
			[Token(Token = "0x400278B")]
			Raw,
			[Token(Token = "0x400278C")]
			Persistent,
			[Token(Token = "0x400278D")]
			Temporal,
			[Token(Token = "0x400278E")]
			Streaming
		}

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xDB0BE4", Offset = "0xDB0BE4", VA = "0xDB0BE4")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xDB0080", Offset = "0xDB0080", VA = "0xDB0080")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xDB0280", Offset = "0xDB0280", VA = "0xDB0280")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xDAFFD8", Offset = "0xDAFFD8", VA = "0xDAFFD8")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xDB11E8", Offset = "0xDB11E8", VA = "0xDB11E8")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xDB25D4", Offset = "0xDB25D4", VA = "0xDB25D4")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xDB1120", Offset = "0xDB1120", VA = "0xDB1120")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xDAFF18", Offset = "0xDAFF18", VA = "0xDAFF18")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xDB01C0", Offset = "0xDB01C0", VA = "0xDB01C0")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xDB298C", Offset = "0xDB298C", VA = "0xDB298C")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000470")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x1022838", Offset = "0x1022838", VA = "0x1022838", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x1022B00", Offset = "0x1022B00", VA = "0x1022B00", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x1022D54", Offset = "0x1022D54", VA = "0x1022D54", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x1022F74", Offset = "0x1022F74", VA = "0x1022F74", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1022F7C", Offset = "0x1022F7C", VA = "0x1022F7C", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x1022F88", Offset = "0x1022F88", VA = "0x1022F88", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x1022F90", Offset = "0x1022F90", VA = "0x1022F90")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x102303C", Offset = "0x102303C", VA = "0x102303C", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x1023310", Offset = "0x1023310", VA = "0x1023310", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x10235D0", Offset = "0x10235D0", VA = "0x10235D0", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x1023884", Offset = "0x1023884", VA = "0x1023884", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x1023B38", Offset = "0x1023B38", VA = "0x1023B38")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x1023B40", Offset = "0x1023B40", VA = "0x1023B40")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x1013FC8", Offset = "0x1013FC8", VA = "0x1013FC8", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x10145BC", Offset = "0x10145BC", VA = "0x10145BC", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x1014620", Offset = "0x1014620", VA = "0x1014620", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x10146C8", Offset = "0x10146C8", VA = "0x10146C8")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xC58F50", Offset = "0xC58F50", VA = "0xC58F50")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xC58F80", Offset = "0xC58F80", VA = "0xC58F80")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xC591F0", Offset = "0xC591F0", VA = "0xC591F0")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xC59524", Offset = "0xC59524", VA = "0xC59524")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xC59300", Offset = "0xC59300", VA = "0xC59300")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xC598F8", Offset = "0xC598F8", VA = "0xC598F8")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000474")]
	public class EventCallback
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x1014BE0", Offset = "0x1014BE0", VA = "0x1014BE0")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x1014C6C", Offset = "0x1014C6C", VA = "0x1014C6C")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x1014D00", Offset = "0x1014D00", VA = "0x1014D00")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public enum ePluralType
	{
		[Token(Token = "0x4001AE3")]
		Zero,
		[Token(Token = "0x4001AE4")]
		One,
		[Token(Token = "0x4001AE5")]
		Two,
		[Token(Token = "0x4001AE6")]
		Few,
		[Token(Token = "0x4001AE7")]
		Many,
		[Token(Token = "0x4001AE8")]
		Plural
	}
	[Token(Token = "0x2000476")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x2000786")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x400278F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4002790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4002791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4002792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x1015294", Offset = "0x1015294", VA = "0x1015294")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x1015750", Offset = "0x1015750", VA = "0x1015750")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x1015560", Offset = "0x1015560", VA = "0x1015560")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1015CC8", Offset = "0x1015CC8", VA = "0x1015CC8")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x1015E2C", Offset = "0x1015E2C", VA = "0x1015E2C")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x1015EF4", Offset = "0x1015EF4", VA = "0x1015EF4")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x1016094", Offset = "0x1016094", VA = "0x1016094")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x1016298", Offset = "0x1016298", VA = "0x1016298")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x10165C0", Offset = "0x10165C0", VA = "0x10165C0")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x10167A8", Offset = "0x10167A8", VA = "0x10167A8")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x1016998", Offset = "0x1016998", VA = "0x1016998")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x1016BA8", Offset = "0x1016BA8", VA = "0x1016BA8")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x1016D2C", Offset = "0x1016D2C", VA = "0x1016D2C")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x101743C", Offset = "0x101743C", VA = "0x101743C")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x1017424", Offset = "0x1017424", VA = "0x1017424")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000477")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x2000787")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x2000788")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8480", Offset = "0x8F8480")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4002794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4002795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4002796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x60033AD")]
			[Address(RVA = "0x101DB44", Offset = "0x101DB44", VA = "0x101DB44")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60033AE")]
			[Address(RVA = "0x10214A4", Offset = "0x10214A4", VA = "0x10214A4")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8490", Offset = "0x8F8490")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700059A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033B2")]
				[Address(RVA = "0x1021770", Offset = "0x1021770", VA = "0x1021770", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033B4")]
				[Address(RVA = "0x10217E0", Offset = "0x10217E0", VA = "0x10217E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033AF")]
			[Address(RVA = "0x101F310", Offset = "0x101F310", VA = "0x101F310")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60033B0")]
			[Address(RVA = "0x10215A0", Offset = "0x10215A0", VA = "0x10215A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033B1")]
			[Address(RVA = "0x10215A4", Offset = "0x10215A4", VA = "0x10215A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033B3")]
			[Address(RVA = "0x1021778", Offset = "0x1021778", VA = "0x1021778", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x101D824", Offset = "0x101D824", VA = "0x101D824")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x101D8F0", Offset = "0x101D8F0", VA = "0x101D8F0")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x101E588", Offset = "0x101E588", VA = "0x101E588")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x101E4F4", Offset = "0x101E4F4", VA = "0x101E4F4")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x101EBD0", Offset = "0x101EBD0", VA = "0x101EBD0")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x101EC5C", Offset = "0x101EC5C", VA = "0x101EC5C")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x101EAD8", Offset = "0x101EAD8", VA = "0x101EAD8")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x101F2B0", Offset = "0x101F2B0", VA = "0x101F2B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9102B8", Offset = "0x9102B8")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x101F33C", Offset = "0x101F33C", VA = "0x101F33C")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x101FB1C", Offset = "0x101FB1C", VA = "0x101FB1C")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x101FC00", Offset = "0x101FC00", VA = "0x101FC00")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x101E2CC", Offset = "0x101E2CC", VA = "0x101E2CC")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x101FDC0", Offset = "0x101FDC0", VA = "0x101FDC0")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x101E6C8", Offset = "0x101E6C8", VA = "0x101E6C8")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1020980", Offset = "0x1020980", VA = "0x1020980")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x101F888", Offset = "0x101F888", VA = "0x101F888")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x10200B8", Offset = "0x10200B8", VA = "0x10200B8")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x1020300", Offset = "0x1020300", VA = "0x1020300")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x102015C", Offset = "0x102015C", VA = "0x102015C")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x1020A84", Offset = "0x1020A84", VA = "0x1020A84")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x101FA78", Offset = "0x101FA78", VA = "0x101FA78")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x1020410", Offset = "0x1020410", VA = "0x1020410")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x101E9A0", Offset = "0x101E9A0", VA = "0x101E9A0")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x1020C68", Offset = "0x1020C68", VA = "0x1020C68")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x1020F20", Offset = "0x1020F20", VA = "0x1020F20")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x10212E0", Offset = "0x10212E0", VA = "0x10212E0")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x101F1E4", Offset = "0x101F1E4", VA = "0x101F1E4")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000478")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x2000479")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x200078B")]
		public enum eJobState
		{
			[Token(Token = "0x400279A")]
			Running,
			[Token(Token = "0x400279B")]
			Succeeded,
			[Token(Token = "0x400279C")]
			Failed
		}

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xC5AD74", Offset = "0xC5AD74", VA = "0xC5AD74", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xC5AD7C", Offset = "0xC5AD7C", VA = "0xC5AD7C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xC5AD80", Offset = "0xC5AD80", VA = "0xC5AD80")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xC5C868", Offset = "0xC5C868", VA = "0xC5C868", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xC5AE28", Offset = "0xC5AE28", VA = "0xC5AE28")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xC5AD88", Offset = "0xC5AD88", VA = "0xC5AD88")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xC5AE30", Offset = "0xC5AE30", VA = "0xC5AE30")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xC5AF88", Offset = "0xC5AF88", VA = "0xC5AF88", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xC5B058", Offset = "0xC5B058", VA = "0xC5B058")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xC5B180", Offset = "0xC5B180", VA = "0xC5B180")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xC5B378", Offset = "0xC5B378", VA = "0xC5B378", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xC5B548", Offset = "0xC5B548", VA = "0xC5B548", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xC5B204", Offset = "0xC5B204", VA = "0xC5B204")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xC5B594", Offset = "0xC5B594", VA = "0xC5B594", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xC5B654", Offset = "0xC5B654", VA = "0xC5B654")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F84A0", Offset = "0x8F84A0")]
		private sealed class <>c
		{
			[Token(Token = "0x400279D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400279E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x400279F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x40027A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x60033B6")]
			[Address(RVA = "0xC5C63C", Offset = "0xC5C63C", VA = "0xC5C63C")]
			public <>c()
			{
			}

			[Token(Token = "0x60033B7")]
			[Address(RVA = "0xC5C644", Offset = "0xC5C644", VA = "0xC5C644")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x60033B8")]
			[Address(RVA = "0xC5C6D4", Offset = "0xC5C6D4", VA = "0xC5C6D4")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x60033B9")]
			[Address(RVA = "0xC5C7A0", Offset = "0xC5C7A0", VA = "0xC5C7A0")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xC5B768", Offset = "0xC5B768", VA = "0xC5B768")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xC5B7AC", Offset = "0xC5B7AC", VA = "0xC5B7AC")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xC5BB08", Offset = "0xC5BB08", VA = "0xC5BB08")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xC5BEEC", Offset = "0xC5BEEC", VA = "0xC5BEEC", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xC5BFBC", Offset = "0xC5BFBC", VA = "0xC5BFBC")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xC5C0F0", Offset = "0xC5C0F0", VA = "0xC5C0F0")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x200047F")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4001B08")]
		DISABLED = 1,
		[Token(Token = "0x4001B09")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4001B0A")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x2000480")]
	public class LanguageData
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x1024D20", Offset = "0x1024D20", VA = "0x1024D20")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x1024D30", Offset = "0x1024D30", VA = "0x1024D30")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x1024D4C", Offset = "0x1024D4C", VA = "0x1024D4C")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x1024D5C", Offset = "0x1024D5C", VA = "0x1024D5C")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x1024D6C", Offset = "0x1024D6C", VA = "0x1024D6C")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x1024D8C", Offset = "0x1024D8C", VA = "0x1024D8C")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x1024DAC", Offset = "0x1024DAC", VA = "0x1024DAC")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F6650", Offset = "0x8F6650")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x200078D")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x170002D2")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002613")]
			[Address(RVA = "0x1024DB4", Offset = "0x1024DB4", VA = "0x1024DB4", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002614")]
			[Address(RVA = "0x1024DBC", Offset = "0x1024DBC", VA = "0x1024DBC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002615")]
			[Address(RVA = "0x1024DC4", Offset = "0x1024DC4", VA = "0x1024DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91031C", Offset = "0x91031C")]
			add
			{
			}
			[Token(Token = "0x6002616")]
			[Address(RVA = "0x1024EB0", Offset = "0x1024EB0", VA = "0x1024EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91032C", Offset = "0x91032C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x1024F9C", Offset = "0x1024F9C", VA = "0x1024F9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x1024FE4", Offset = "0x1024FE4", VA = "0x1024FE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1025018", Offset = "0x1025018", VA = "0x1025018")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x102512C", Offset = "0x102512C", VA = "0x102512C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x1025138", Offset = "0x1025138", VA = "0x1025138", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x10255AC", Offset = "0x10255AC", VA = "0x10255AC")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8F669C", Offset = "0x8F669C")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x170002D3")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x600261D")]
			[Address(RVA = "0xDA9B08", Offset = "0xDA9B08", VA = "0xDA9B08", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600261E")]
			[Address(RVA = "0xDA9B10", Offset = "0xDA9B10", VA = "0xDA9B10", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xDA9B18", Offset = "0xDA9B18", VA = "0xDA9B18")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public interface ILanguageSource
	{
		[Token(Token = "0x170002D4")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6002620")]
			get;
			[Token(Token = "0x6002621")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x2000484")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x200078E")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x40027A2")]
			Empty,
			[Token(Token = "0x40027A3")]
			Fallback,
			[Token(Token = "0x40027A4")]
			ShowWarning,
			[Token(Token = "0x40027A5")]
			ShowTerm
		}

		[Token(Token = "0x200078F")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x40027A7")]
			Never,
			[Token(Token = "0x40027A8")]
			OnlyInDevice,
			[Token(Token = "0x40027A9")]
			EditorAndDevice
		}

		[Token(Token = "0x2000790")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x40027AB")]
			Always,
			[Token(Token = "0x40027AC")]
			Never,
			[Token(Token = "0x40027AD")]
			Daily,
			[Token(Token = "0x40027AE")]
			Weekly,
			[Token(Token = "0x40027AF")]
			Monthly,
			[Token(Token = "0x40027B0")]
			OnlyOnce,
			[Token(Token = "0x40027B1")]
			EveryOtherDay
		}

		[Token(Token = "0x2000791")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x40027B3")]
			Manual,
			[Token(Token = "0x40027B4")]
			OnSceneLoaded,
			[Token(Token = "0x40027B5")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F84B0", Offset = "0x8F84B0")]
		private sealed class <>c
		{
			[Token(Token = "0x40027B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40027B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x40027B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x40027B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x40027BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x40027BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x40027BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x60033BF")]
			[Address(RVA = "0xDB3744", Offset = "0xDB3744", VA = "0xDB3744")]
			public <>c()
			{
			}

			[Token(Token = "0x60033C0")]
			[Address(RVA = "0xDB374C", Offset = "0xDB374C", VA = "0xDB374C")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x60033C1")]
			[Address(RVA = "0xDB37B8", Offset = "0xDB37B8", VA = "0xDB37B8")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x60033C2")]
			[Address(RVA = "0xDB37E8", Offset = "0xDB37E8", VA = "0xDB37E8")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60033C3")]
			[Address(RVA = "0xDB3898", Offset = "0xDB3898", VA = "0xDB3898")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60033C4")]
			[Address(RVA = "0xDB38E8", Offset = "0xDB38E8", VA = "0xDB38E8")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x60033C5")]
			[Address(RVA = "0xDB3930", Offset = "0xDB3930", VA = "0xDB3930")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F84C0", Offset = "0x8F84C0")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x40027C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x40027C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700059C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033C9")]
				[Address(RVA = "0xDB3C84", Offset = "0xDB3C84", VA = "0xDB3C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033CB")]
				[Address(RVA = "0xDB3CF4", Offset = "0xDB3CF4", VA = "0xDB3CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C6")]
			[Address(RVA = "0xDB0D30", Offset = "0xDB0D30", VA = "0xDB0D30")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60033C7")]
			[Address(RVA = "0xDB3978", Offset = "0xDB3978", VA = "0xDB3978", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C8")]
			[Address(RVA = "0xDB397C", Offset = "0xDB397C", VA = "0xDB397C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033CA")]
			[Address(RVA = "0xDB3C8C", Offset = "0xDB3C8C", VA = "0xDB3C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x170002D5")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0xDA9CF8", Offset = "0xDA9CF8", VA = "0xDA9CF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000051")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002623")]
			[Address(RVA = "0xDA9D7C", Offset = "0xDA9D7C", VA = "0xDA9D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91033C", Offset = "0x91033C")]
			add
			{
			}
			[Token(Token = "0x6002624")]
			[Address(RVA = "0xDA9E68", Offset = "0xDA9E68", VA = "0xDA9E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91034C", Offset = "0x91034C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xDA9F54", Offset = "0xDA9F54", VA = "0xDA9F54")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xDAA920", Offset = "0xDAA920", VA = "0xDAA920")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xDAAA10", Offset = "0xDAAA10", VA = "0xDAAA10")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xDAB0C4", Offset = "0xDAB0C4", VA = "0xDAB0C4")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xDAB1F0", Offset = "0xDAB1F0", VA = "0xDAB1F0")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xDAB2BC", Offset = "0xDAB2BC", VA = "0xDAB2BC")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xDAB2C4", Offset = "0xDAB2C4", VA = "0xDAB2C4")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xDAA508", Offset = "0xDAA508", VA = "0xDAA508")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xDAB2C8", Offset = "0xDAB2C8", VA = "0xDAB2C8")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xDAB3B8", Offset = "0xDAB3B8", VA = "0xDAB3B8")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xDAB428", Offset = "0xDAB428", VA = "0xDAB428")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xDAB4DC", Offset = "0xDAB4DC", VA = "0xDAB4DC")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xDABC1C", Offset = "0xDABC1C", VA = "0xDABC1C")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xDABF50", Offset = "0xDABF50", VA = "0xDABF50")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xDAC040", Offset = "0xDAC040", VA = "0xDAC040")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xDAC6B4", Offset = "0xDAC6B4", VA = "0xDAC6B4")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xDAD04C", Offset = "0xDAD04C", VA = "0xDAD04C")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xDACEE0", Offset = "0xDACEE0", VA = "0xDACEE0")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xDAD34C", Offset = "0xDAD34C", VA = "0xDAD34C")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xDAD4F4", Offset = "0xDAD4F4", VA = "0xDAD4F4")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xDAD6F0", Offset = "0xDAD6F0", VA = "0xDAD6F0")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xDADD10", Offset = "0xDADD10", VA = "0xDADD10")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xDAEBAC", Offset = "0xDAEBAC", VA = "0xDAEBAC")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xDADE40", Offset = "0xDADE40", VA = "0xDADE40")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xDAEDF4", Offset = "0xDAEDF4", VA = "0xDAEDF4")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xDAF2EC", Offset = "0xDAF2EC", VA = "0xDAF2EC")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0xDAF5D8", Offset = "0xDAF5D8", VA = "0xDAF5D8")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xDAF880", Offset = "0xDAF880", VA = "0xDAF880")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xDAFAAC", Offset = "0xDAFAAC", VA = "0xDAFAAC")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xDB0130", Offset = "0xDB0130", VA = "0xDB0130")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0xDB0970", Offset = "0xDB0970", VA = "0xDB0970")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0xDAFD18", Offset = "0xDAFD18", VA = "0xDAFD18")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xDB0C94", Offset = "0xDB0C94", VA = "0xDB0C94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x91035C", Offset = "0x91035C")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xDB0D5C", Offset = "0xDB0D5C", VA = "0xDB0D5C")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xDB0DE0", Offset = "0xDB0DE0", VA = "0xDB0DE0")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xDB0F2C", Offset = "0xDB0F2C", VA = "0xDB0F2C")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xDB1078", Offset = "0xDB1078", VA = "0xDB1078")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xDB0328", Offset = "0xDB0328", VA = "0xDB0328")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xDAAC3C", Offset = "0xDAAC3C", VA = "0xDAAC3C")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xDB1480", Offset = "0xDB1480", VA = "0xDB1480")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xDB151C", Offset = "0xDB151C", VA = "0xDB151C")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xDAEEAC", Offset = "0xDAEEAC", VA = "0xDAEEAC")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xDB1280", Offset = "0xDB1280", VA = "0xDB1280")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xDB15D0", Offset = "0xDB15D0", VA = "0xDB15D0")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xDB166C", Offset = "0xDB166C", VA = "0xDB166C")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xDB1738", Offset = "0xDB1738", VA = "0xDB1738")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xDB17C0", Offset = "0xDB17C0", VA = "0xDB17C0")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xDB199C", Offset = "0xDB199C", VA = "0xDB199C")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xDB1D14", Offset = "0xDB1D14", VA = "0xDB1D14")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0xDB1E74", Offset = "0xDB1E74", VA = "0xDB1E74")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0xDB204C", Offset = "0xDB204C", VA = "0xDB204C")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0xDB2104", Offset = "0xDB2104", VA = "0xDB2104")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0xDB21C0", Offset = "0xDB21C0", VA = "0xDB21C0")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xDB21D0", Offset = "0xDB21D0", VA = "0xDB21D0")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0xDB2428", Offset = "0xDB2428", VA = "0xDB2428")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xDB28E0", Offset = "0xDB28E0", VA = "0xDB28E0")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xDB266C", Offset = "0xDB266C", VA = "0xDB266C")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xDAF4A0", Offset = "0xDAF4A0", VA = "0xDAF4A0")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xDAF3CC", Offset = "0xDAF3CC", VA = "0xDAF3CC")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xDADAFC", Offset = "0xDADAFC", VA = "0xDADAFC")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xDB2B78", Offset = "0xDB2B78", VA = "0xDB2B78")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xDB2A4C", Offset = "0xDB2A4C", VA = "0xDB2A4C")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xDB2C80", Offset = "0xDB2C80", VA = "0xDB2C80")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xDAA220", Offset = "0xDAA220", VA = "0xDAA220")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xDB2DF8", Offset = "0xDB2DF8", VA = "0xDB2DF8")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xDB2EA4", Offset = "0xDB2EA4", VA = "0xDB2EA4")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xDAC35C", Offset = "0xDAC35C", VA = "0xDAC35C")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xDB30C0", Offset = "0xDB30C0", VA = "0xDB30C0")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xDAAE74", Offset = "0xDAAE74", VA = "0xDAAE74")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xDB32DC", Offset = "0xDB32DC", VA = "0xDB32DC")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xDB32FC", Offset = "0xDB32FC", VA = "0xDB32FC")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xDB30CC", Offset = "0xDB30CC", VA = "0xDB30CC")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xDB351C", Offset = "0xDB351C", VA = "0xDB351C")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xDAF0C0", Offset = "0xDAF0C0", VA = "0xDAF0C0")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xDA9B7C", Offset = "0xDA9B7C", VA = "0xDA9B7C")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4001B41")]
		None,
		[Token(Token = "0x4001B42")]
		Replace,
		[Token(Token = "0x4001B43")]
		Merge,
		[Token(Token = "0x4001B44")]
		AddNewTerms
	}
	[Token(Token = "0x2000486")]
	public class LocalizationReader
	{
		[Token(Token = "0x6002671")]
		[Address(RVA = "0xDBCA20", Offset = "0xDBCA20", VA = "0xDBCA20")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xDBCC80", Offset = "0xDBCC80", VA = "0xDBCC80")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xDBD118", Offset = "0xDBD118", VA = "0xDBD118")]
		public static string ReadCSVfile(string Path, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xDADD58", Offset = "0xDADD58", VA = "0xDADD58")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xDBD2C0", Offset = "0xDBD2C0", VA = "0xDBD2C0")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xDBD4F0", Offset = "0xDBD4F0", VA = "0xDBD4F0")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xDAEBF0", Offset = "0xDAEBF0", VA = "0xDAEBF0")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xDBD04C", Offset = "0xDBD04C", VA = "0xDBD04C")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xDBD6BC", Offset = "0xDBD6BC", VA = "0xDBD6BC")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xDBCFB0", Offset = "0xDBCFB0", VA = "0xDBCFB0")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xDBD7A8", Offset = "0xDBD7A8", VA = "0xDBD7A8")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F671C", Offset = "0x8F671C")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x2000794")]
		public enum TermModification
		{
			[Token(Token = "0x40027C3")]
			DontModify,
			[Token(Token = "0x40027C4")]
			ToUpper,
			[Token(Token = "0x40027C5")]
			ToLower,
			[Token(Token = "0x40027C6")]
			ToUpperFirst,
			[Token(Token = "0x40027C7")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F84D0", Offset = "0x8F84D0")]
		private sealed class <>c
		{
			[Token(Token = "0x40027C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40027C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__49_0;

			[Token(Token = "0x40027CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__49_1;

			[Token(Token = "0x40027CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__49_2;

			[Token(Token = "0x40027CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__49_3;

			[Token(Token = "0x60033CD")]
			[Address(RVA = "0xDBE8E8", Offset = "0xDBE8E8", VA = "0xDBE8E8")]
			public <>c()
			{
			}

			[Token(Token = "0x60033CE")]
			[Address(RVA = "0xDBE8F0", Offset = "0xDBE8F0", VA = "0xDBE8F0")]
			internal bool <UpdateAssetDictionary>b__49_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x60033CF")]
			[Address(RVA = "0xDBE95C", Offset = "0xDBE95C", VA = "0xDBE95C")]
			internal string <UpdateAssetDictionary>b__49_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x60033D0")]
			[Address(RVA = "0xDBE98C", Offset = "0xDBE98C", VA = "0xDBE98C")]
			internal string <UpdateAssetDictionary>b__49_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60033D1")]
			[Address(RVA = "0xDBEA3C", Offset = "0xDBEA3C", VA = "0xDBEA3C")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__49_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x170002D6")]
		public string Term
		{
			[Token(Token = "0x600267C")]
			[Address(RVA = "0xDBD7B0", Offset = "0xDBD7B0", VA = "0xDBD7B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600267D")]
			[Address(RVA = "0xDBD7B8", Offset = "0xDBD7B8", VA = "0xDBD7B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public string SecondaryTerm
		{
			[Token(Token = "0x600267E")]
			[Address(RVA = "0xDBD7FC", Offset = "0xDBD7FC", VA = "0xDBD7FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600267F")]
			[Address(RVA = "0xDBD804", Offset = "0xDBD804", VA = "0xDBD804")]
			set
			{
			}
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xDBD868", Offset = "0xDBD868", VA = "0xDBD868")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xDBE100", Offset = "0xDBE100", VA = "0xDBE100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xDBE108", Offset = "0xDBE108", VA = "0xDBE108")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xDBA408", Offset = "0xDBA408", VA = "0xDBA408")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xDBDBBC", Offset = "0xDBDBBC", VA = "0xDBDBBC")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xDBE170", Offset = "0xDBE170", VA = "0xDBE170")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xDBE2F0", Offset = "0xDBE2F0", VA = "0xDBE2F0")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xDBE3D0", Offset = "0xDBE3D0", VA = "0xDBE3D0")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xDBD7BC", Offset = "0xDBD7BC", VA = "0xDBD7BC")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xDBD814", Offset = "0xDBD814", VA = "0xDBD814")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x600268A")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xDBD8AC", Offset = "0xDBD8AC", VA = "0xDBD8AC")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x600268C")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600268D")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xDBE41C", Offset = "0xDBE41C", VA = "0xDBE41C")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x600268F")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xDBE570", Offset = "0xDBE570", VA = "0xDBE570")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xDBE61C", Offset = "0xDBE61C", VA = "0xDBE61C")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xDBE6D0", Offset = "0xDBE6D0", VA = "0xDBE6D0")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xDBE734", Offset = "0xDBE734", VA = "0xDBE734")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F6754", Offset = "0x8F6754")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xDBEA8C", Offset = "0xDBEA8C", VA = "0xDBEA8C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xDBEC24", Offset = "0xDBEC24", VA = "0xDBEC24")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xDBECB4", Offset = "0xDBECB4", VA = "0xDBECB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xDBEB24", Offset = "0xDBEB24", VA = "0xDBEB24")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xDBED28", Offset = "0xDBED28", VA = "0xDBED28")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xDBEF04", Offset = "0xDBEF04", VA = "0xDBEF04")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xDBF354", Offset = "0xDBF354", VA = "0xDBF354")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xDBF190", Offset = "0xDBF190", VA = "0xDBF190")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xDBF5D4", Offset = "0xDBF5D4", VA = "0xDBF5D4")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public static class LocalizationManager
	{
		[Token(Token = "0x2000796")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x2000797")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F84E0", Offset = "0x8F84E0")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40027CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x40027CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x60033DA")]
			[Address(RVA = "0xDB624C", Offset = "0xDB624C", VA = "0xDB624C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60033DB")]
			[Address(RVA = "0xDBBFB4", Offset = "0xDBBFB4", VA = "0xDBBFB4")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F84F0", Offset = "0x8F84F0")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40027CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x40027D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x60033DC")]
			[Address(RVA = "0xDB6484", Offset = "0xDB6484", VA = "0xDB6484")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60033DD")]
			[Address(RVA = "0xDBC030", Offset = "0xDBC030", VA = "0xDBC030")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8500", Offset = "0x8F8500")]
		private sealed class <>c
		{
			[Token(Token = "0x40027D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40027D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x60033DF")]
			[Address(RVA = "0xDBBF44", Offset = "0xDBBF44", VA = "0xDBBF44")]
			public <>c()
			{
			}

			[Token(Token = "0x60033E0")]
			[Address(RVA = "0xDBBF4C", Offset = "0xDBBF4C", VA = "0xDBBF4C")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8510", Offset = "0x8F8510")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40027D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x60033E1")]
			[Address(RVA = "0xDB6F18", Offset = "0xDB6F18", VA = "0xDB6F18")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60033E2")]
			[Address(RVA = "0xDBC0AC", Offset = "0xDBC0AC", VA = "0xDBC0AC")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8520", Offset = "0x8F8520")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x40027D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x60033E3")]
			[Address(RVA = "0xDB6FF4", Offset = "0xDB6FF4", VA = "0xDB6FF4")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x60033E4")]
			[Address(RVA = "0xDBC124", Offset = "0xDBC124", VA = "0xDBC124")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8530", Offset = "0x8F8530")]
		private sealed class <Delayed_Import_Google>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40027D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x40027D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x1700059E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033E8")]
				[Address(RVA = "0xDBC408", Offset = "0xDBC408", VA = "0xDBC408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033EA")]
				[Address(RVA = "0xDBC478", Offset = "0xDBC478", VA = "0xDBC478", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E5")]
			[Address(RVA = "0xDB8D6C", Offset = "0xDB8D6C", VA = "0xDB8D6C")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x60033E6")]
			[Address(RVA = "0xDBC350", Offset = "0xDBC350", VA = "0xDBC350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033E7")]
			[Address(RVA = "0xDBC354", Offset = "0xDBC354", VA = "0xDBC354", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033E9")]
			[Address(RVA = "0xDBC410", Offset = "0xDBC410", VA = "0xDBC410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8540", Offset = "0x8F8540")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x40027DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x60033EB")]
			[Address(RVA = "0xDB991C", Offset = "0xDB991C", VA = "0xDB991C")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x60033EC")]
			[Address(RVA = "0xDBC1AC", Offset = "0xDBC1AC", VA = "0xDBC1AC")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8550", Offset = "0x8F8550")]
		private sealed class <Coroutine_LocalizeAll>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170005A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F0")]
				[Address(RVA = "0xDBC2D8", Offset = "0xDBC2D8", VA = "0xDBC2D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F2")]
				[Address(RVA = "0xDBC348", Offset = "0xDBC348", VA = "0xDBC348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033ED")]
			[Address(RVA = "0xDBA3DC", Offset = "0xDBA3DC", VA = "0xDBA3DC")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x60033EE")]
			[Address(RVA = "0xDBC1F8", Offset = "0xDBC1F8", VA = "0xDBC1F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033EF")]
			[Address(RVA = "0xDBC1FC", Offset = "0xDBC1FC", VA = "0xDBC1FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F1")]
			[Address(RVA = "0xDBC2E0", Offset = "0xDBC2E0", VA = "0xDBC2E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x170002D8")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0xDAFA40", Offset = "0xDAFA40", VA = "0xDAFA40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xDB4574", Offset = "0xDB4574", VA = "0xDB4574")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0xDB5000", Offset = "0xDB5000", VA = "0xDB5000")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xDB506C", Offset = "0xDB506C", VA = "0xDB506C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public static string CurrentRegion
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xDB5390", Offset = "0xDB5390", VA = "0xDB5390")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xDB555C", Offset = "0xDB555C", VA = "0xDB555C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xDB575C", Offset = "0xDB575C", VA = "0xDB575C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xDB5848", Offset = "0xDB5848", VA = "0xDB5848")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xDB5970", Offset = "0xDB5970", VA = "0xDB5970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000052")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x60026D1")]
			[Address(RVA = "0xDB9924", Offset = "0xDB9924", VA = "0xDB9924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910424", Offset = "0x910424")]
			add
			{
			}
			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xDB9A54", Offset = "0xDB9A54", VA = "0xDB9A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910434", Offset = "0x910434")]
			remove
			{
			}
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xDB3CFC", Offset = "0xDB3CFC", VA = "0xDB3CFC")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xDB452C", Offset = "0xDB452C", VA = "0xDB452C")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xDB1118", Offset = "0xDB1118", VA = "0xDB1118")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xDAD90C", Offset = "0xDAD90C", VA = "0xDAD90C")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xDB4E04", Offset = "0xDB4E04", VA = "0xDB4E04")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0xDB59D8", Offset = "0xDB59D8", VA = "0xDB59D8")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xDB5BF0", Offset = "0xDB5BF0", VA = "0xDB5BF0")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0xDB5AD8", Offset = "0xDB5AD8", VA = "0xDB5AD8")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xDB402C", Offset = "0xDB402C", VA = "0xDB402C")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xDB5D70", Offset = "0xDB5D70", VA = "0xDB5D70")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xDB4664", Offset = "0xDB4664", VA = "0xDB4664")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xDB4BE4", Offset = "0xDB4BE4", VA = "0xDB4BE4")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xDB5160", Offset = "0xDB5160", VA = "0xDB5160")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xDB5FB4", Offset = "0xDB5FB4", VA = "0xDB5FB4")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xDB6254", Offset = "0xDB6254", VA = "0xDB6254")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xDB648C", Offset = "0xDB648C", VA = "0xDB648C")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xDB65B4", Offset = "0xDB65B4", VA = "0xDB65B4")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xDB6728", Offset = "0xDB6728", VA = "0xDB6728")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xDB3DE4", Offset = "0xDB3DE4", VA = "0xDB3DE4")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xDB6810", Offset = "0xDB6810", VA = "0xDB6810")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xDB6E44", Offset = "0xDB6E44", VA = "0xDB6E44")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xDB6F20", Offset = "0xDB6F20", VA = "0xDB6F20")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xDB6928", Offset = "0xDB6928", VA = "0xDB6928")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xDB78D4", Offset = "0xDB78D4", VA = "0xDB78D4")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xDB7BC8", Offset = "0xDB7BC8", VA = "0xDB7BC8")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xDB7E40", Offset = "0xDB7E40", VA = "0xDB7E40")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xDB7EAC", Offset = "0xDB7EAC", VA = "0xDB7EAC")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xDB86CC", Offset = "0xDB86CC", VA = "0xDB86CC")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xDB5B68", Offset = "0xDB5B68", VA = "0xDB5B68")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xDB3F90", Offset = "0xDB3F90", VA = "0xDB3F90")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xDB8780", Offset = "0xDB8780", VA = "0xDB8780")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xDB8AA8", Offset = "0xDB8AA8", VA = "0xDB8AA8")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xDB88B0", Offset = "0xDB88B0", VA = "0xDB88B0")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xDA9FD4", Offset = "0xDA9FD4", VA = "0xDA9FD4")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xDB8CB0", Offset = "0xDB8CB0", VA = "0xDB8CB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9103C0", Offset = "0x9103C0")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xDAA984", Offset = "0xDAA984", VA = "0xDAA984")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xDB8D98", Offset = "0xDB8D98", VA = "0xDB8D98")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xDB8E20", Offset = "0xDB8E20", VA = "0xDB8E20")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xDB9044", Offset = "0xDB9044", VA = "0xDB9044")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xDB91A4", Offset = "0xDB91A4", VA = "0xDB91A4")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xDB5CA4", Offset = "0xDB5CA4", VA = "0xDB5CA4")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xDB92B4", Offset = "0xDB92B4", VA = "0xDB92B4")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xDB967C", Offset = "0xDB967C", VA = "0xDB967C")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xDB9B84", Offset = "0xDB9B84", VA = "0xDB9B84")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xDB9E6C", Offset = "0xDB9E6C", VA = "0xDB9E6C")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xDB9C48", Offset = "0xDB9C48", VA = "0xDB9C48")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D6")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60026D7")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xDB9F18", Offset = "0xDB9F18", VA = "0xDB9F18")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xDAA818", Offset = "0xDAA818", VA = "0xDAA818")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xDBA37C", Offset = "0xDBA37C", VA = "0xDBA37C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x910444", Offset = "0x910444")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xDBA18C", Offset = "0xDBA18C", VA = "0xDBA18C")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xDBB13C", Offset = "0xDBB13C", VA = "0xDBB13C")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xDBB27C", Offset = "0xDBB27C", VA = "0xDBB27C")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xDBB528", Offset = "0xDBB528", VA = "0xDBB528")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xDB774C", Offset = "0xDB774C", VA = "0xDB774C")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x200048A")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x60026E1")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x60026E2")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x60026E3")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x60026E4")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x60026E5")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x60026E6")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x60026E7")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x60026E8")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x1024D10", Offset = "0x1024D10", VA = "0x1024D10")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x60026EA")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60026EB")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x60026EC")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x60026ED")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x60026EE")]
		public abstract Type GetTargetType();

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x1024D18", Offset = "0x1024D18", VA = "0x1024D18")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x60026F0")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60026F1")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x60026F2")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x60026F3")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F4")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60026F5")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xDBF740", Offset = "0xDBF740", VA = "0xDBF740")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xDBF744", Offset = "0xDBF744", VA = "0xDBF744")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9104A8", Offset = "0x9104A8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xDBF80C", Offset = "0xDBF80C", VA = "0xDBF80C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xDBF814", Offset = "0xDBF814", VA = "0xDBF814", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xDBF81C", Offset = "0xDBF81C", VA = "0xDBF81C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xDBF824", Offset = "0xDBF824", VA = "0xDBF824", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xDBF82C", Offset = "0xDBF82C", VA = "0xDBF82C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xDBF834", Offset = "0xDBF834", VA = "0xDBF834", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xDBF988", Offset = "0xDBF988", VA = "0xDBF988", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xDC00E0", Offset = "0xDC00E0", VA = "0xDC00E0")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xDC03EC", Offset = "0xDC03EC", VA = "0xDC03EC")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xDBFF80", Offset = "0xDBFF80", VA = "0xDBFF80")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xDC02A0", Offset = "0xDC02A0", VA = "0xDC02A0")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xDC0600", Offset = "0xDC0600", VA = "0xDC0600")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xDC0664", Offset = "0xDC0664", VA = "0xDC0664")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xDC0668", Offset = "0xDC0668", VA = "0xDC0668")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9104BC", Offset = "0x9104BC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xDC0730", Offset = "0xDC0730", VA = "0xDC0730", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xDC0738", Offset = "0xDC0738", VA = "0xDC0738", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xDC0740", Offset = "0xDC0740", VA = "0xDC0740", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xDC0748", Offset = "0xDC0748", VA = "0xDC0748", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xDC0750", Offset = "0xDC0750", VA = "0xDC0750", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xDC0758", Offset = "0xDC0758", VA = "0xDC0758", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0xDC08AC", Offset = "0xDC08AC", VA = "0xDC08AC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xDC0EA4", Offset = "0xDC0EA4", VA = "0xDC0EA4")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x600270E")]
		[Address(RVA = "0xDC0F08", Offset = "0xDC0F08", VA = "0xDC0F08")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0xDC0F0C", Offset = "0xDC0F0C", VA = "0xDC0F0C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9104D0", Offset = "0x9104D0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0xDC0FD4", Offset = "0xDC0FD4", VA = "0xDC0FD4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0xDC0FDC", Offset = "0xDC0FDC", VA = "0xDC0FDC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0xDC0FE4", Offset = "0xDC0FE4", VA = "0xDC0FE4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0xDC0FEC", Offset = "0xDC0FEC", VA = "0xDC0FEC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0xDC0FF4", Offset = "0xDC0FF4", VA = "0xDC0FF4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xDC0FFC", Offset = "0xDC0FFC", VA = "0xDC0FFC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xDC10F4", Offset = "0xDC10F4", VA = "0xDC10F4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xDC12BC", Offset = "0xDC12BC", VA = "0xDC12BC")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6002718")]
		[Address(RVA = "0xDBF644", Offset = "0xDBF644", VA = "0xDBF644", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xDBF698", Offset = "0xDBF698", VA = "0xDBF698")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x600271A")]
		[Address(RVA = "0xDC130C", Offset = "0xDC130C", VA = "0xDC130C")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xDC1310", Offset = "0xDC1310", VA = "0xDC1310")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9104E4", Offset = "0x9104E4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xDC13CC", Offset = "0xDC13CC", VA = "0xDC13CC", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xDC1420", Offset = "0xDC1420", VA = "0xDC1420", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xDC1428", Offset = "0xDC1428", VA = "0xDC1428", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xDC1430", Offset = "0xDC1430", VA = "0xDC1430", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xDC1438", Offset = "0xDC1438", VA = "0xDC1438", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xDC1440", Offset = "0xDC1440", VA = "0xDC1440", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xDC1448", Offset = "0xDC1448", VA = "0xDC1448", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xDC1494", Offset = "0xDC1494", VA = "0xDC1494", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xDC1640", Offset = "0xDC1640", VA = "0xDC1640")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6002725")]
		[Address(RVA = "0xDC1690", Offset = "0xDC1690", VA = "0xDC1690")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xDC1694", Offset = "0xDC1694", VA = "0xDC1694")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9104F8", Offset = "0x9104F8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0xDC175C", Offset = "0xDC175C", VA = "0xDC175C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xDC1764", Offset = "0xDC1764", VA = "0xDC1764", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xDC176C", Offset = "0xDC176C", VA = "0xDC176C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xDC1774", Offset = "0xDC1774", VA = "0xDC1774", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xDC177C", Offset = "0xDC177C", VA = "0xDC177C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xDC1784", Offset = "0xDC1784", VA = "0xDC1784", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xDC19D0", Offset = "0xDC19D0", VA = "0xDC19D0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xDC1BF0", Offset = "0xDC1BF0", VA = "0xDC1BF0")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x600272F")]
		[Address(RVA = "0xDBF6E8", Offset = "0xDBF6E8", VA = "0xDBF6E8", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xDBF6F0", Offset = "0xDBF6F0", VA = "0xDBF6F0")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002731")]
		[Address(RVA = "0xDC1C40", Offset = "0xDC1C40", VA = "0xDC1C40")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xDC1C44", Offset = "0xDC1C44", VA = "0xDC1C44")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x91050C", Offset = "0x91050C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xDC1D00", Offset = "0xDC1D00", VA = "0xDC1D00", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xDC1D08", Offset = "0xDC1D08", VA = "0xDC1D08", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xDC1D10", Offset = "0xDC1D10", VA = "0xDC1D10", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xDC1D18", Offset = "0xDC1D18", VA = "0xDC1D18", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xDC1D20", Offset = "0xDC1D20", VA = "0xDC1D20", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xDC1D28", Offset = "0xDC1D28", VA = "0xDC1D28", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xDC1D30", Offset = "0xDC1D30", VA = "0xDC1D30", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xDC1D7C", Offset = "0xDC1D7C", VA = "0xDC1D7C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xDC1FFC", Offset = "0xDC1FFC", VA = "0xDC1FFC")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xDC2244", Offset = "0xDC2244", VA = "0xDC2244")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x600273D")]
		[Address(RVA = "0xDC2294", Offset = "0xDC2294", VA = "0xDC2294")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xDC2298", Offset = "0xDC2298", VA = "0xDC2298")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x910520", Offset = "0x910520")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xDC2360", Offset = "0xDC2360", VA = "0xDC2360", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xDC2368", Offset = "0xDC2368", VA = "0xDC2368", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xDC2370", Offset = "0xDC2370", VA = "0xDC2370", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xDC2378", Offset = "0xDC2378", VA = "0xDC2378", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xDC2380", Offset = "0xDC2380", VA = "0xDC2380", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xDC2388", Offset = "0xDC2388", VA = "0xDC2388", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xDC2484", Offset = "0xDC2484", VA = "0xDC2484", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xDC25A8", Offset = "0xDC25A8", VA = "0xDC25A8")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xDC25F8", Offset = "0xDC25F8", VA = "0xDC25F8")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xDC25FC", Offset = "0xDC25FC", VA = "0xDC25FC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x910534", Offset = "0x910534")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xDC26C4", Offset = "0xDC26C4", VA = "0xDC26C4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xDC26CC", Offset = "0xDC26CC", VA = "0xDC26CC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xDC26D4", Offset = "0xDC26D4", VA = "0xDC26D4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xDC26DC", Offset = "0xDC26DC", VA = "0xDC26DC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xDC26E4", Offset = "0xDC26E4", VA = "0xDC26E4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xDC26EC", Offset = "0xDC26EC", VA = "0xDC26EC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xDC284C", Offset = "0xDC284C", VA = "0xDC284C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xDC2B4C", Offset = "0xDC2B4C", VA = "0xDC2B4C")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6002751")]
		[Address(RVA = "0xDC2BAC", Offset = "0xDC2BAC", VA = "0xDC2BAC")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xDC2BB0", Offset = "0xDC2BB0", VA = "0xDC2BB0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x910548", Offset = "0x910548")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xDC2C78", Offset = "0xDC2C78", VA = "0xDC2C78", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xDC2C80", Offset = "0xDC2C80", VA = "0xDC2C80", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xDC2C88", Offset = "0xDC2C88", VA = "0xDC2C88", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0xDC2C90", Offset = "0xDC2C90", VA = "0xDC2C90", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xDC2D34", Offset = "0xDC2D34", VA = "0xDC2D34", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xDC2D3C", Offset = "0xDC2D3C", VA = "0xDC2D3C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xDC2F30", Offset = "0xDC2F30", VA = "0xDC2F30", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xDC3054", Offset = "0xDC3054", VA = "0xDC3054")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x600275B")]
		[Address(RVA = "0xDC30A4", Offset = "0xDC30A4", VA = "0xDC30A4")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xDC30A8", Offset = "0xDC30A8", VA = "0xDC30A8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x91055C", Offset = "0x91055C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xDC3170", Offset = "0xDC3170", VA = "0xDC3170", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xDC3178", Offset = "0xDC3178", VA = "0xDC3178", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xDC3180", Offset = "0xDC3180", VA = "0xDC3180", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xDC3188", Offset = "0xDC3188", VA = "0xDC3188", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0xDC3190", Offset = "0xDC3190", VA = "0xDC3190", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0xDC3198", Offset = "0xDC3198", VA = "0xDC3198", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0xDC3298", Offset = "0xDC3298", VA = "0xDC3298", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0xDC33BC", Offset = "0xDC33BC", VA = "0xDC33BC")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002765")]
		[Address(RVA = "0xDC340C", Offset = "0xDC340C", VA = "0xDC340C")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xDC3410", Offset = "0xDC3410", VA = "0xDC3410")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x910570", Offset = "0x910570")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0xDC34D8", Offset = "0xDC34D8", VA = "0xDC34D8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0xDC34E0", Offset = "0xDC34E0", VA = "0xDC34E0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0xDC34E8", Offset = "0xDC34E8", VA = "0xDC34E8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xDC34F0", Offset = "0xDC34F0", VA = "0xDC34F0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xDC34F8", Offset = "0xDC34F8", VA = "0xDC34F8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xDC3500", Offset = "0xDC3500", VA = "0xDC3500", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xDC365C", Offset = "0xDC365C", VA = "0xDC365C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xDC3A08", Offset = "0xDC3A08", VA = "0xDC3A08")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xDC3AC8", Offset = "0xDC3AC8", VA = "0xDC3AC8")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public enum eTermType
	{
		[Token(Token = "0x4001B89")]
		Text,
		[Token(Token = "0x4001B8A")]
		Font,
		[Token(Token = "0x4001B8B")]
		Texture,
		[Token(Token = "0x4001B8C")]
		AudioClip,
		[Token(Token = "0x4001B8D")]
		GameObject,
		[Token(Token = "0x4001B8E")]
		Sprite,
		[Token(Token = "0x4001B8F")]
		Material,
		[Token(Token = "0x4001B90")]
		Child,
		[Token(Token = "0x4001B91")]
		Mesh,
		[Token(Token = "0x4001B92")]
		TextMeshPFont,
		[Token(Token = "0x4001B93")]
		Object
	}
	[Token(Token = "0x200049D")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4001B95")]
		Normal = 1,
		[Token(Token = "0x4001B96")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x200049E")]
	public class TermData
	{
		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xC5A130", Offset = "0xC5A130", VA = "0xC5A130")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xC5A26C", Offset = "0xC5A26C", VA = "0xC5A26C")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xC5A37C", Offset = "0xC5A37C", VA = "0xC5A37C")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xC5A3DC", Offset = "0xC5A3DC", VA = "0xC5A3DC")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xC5A588", Offset = "0xC5A588", VA = "0xC5A588")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xC5A5E0", Offset = "0xC5A5E0", VA = "0xC5A5E0")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xC5A8A4", Offset = "0xC5A8A4", VA = "0xC5A8A4")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xC5A93C", Offset = "0xC5A93C", VA = "0xC5A93C")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xC5AA60", Offset = "0xC5AA60", VA = "0xC5AA60")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xC5AB64", Offset = "0xC5AB64", VA = "0xC5AB64")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902D6C", Offset = "0x902D6C")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x170002DD")]
		public string Filter
		{
			[Token(Token = "0x600277B")]
			[Address(RVA = "0xC5AC28", Offset = "0xC5AC28", VA = "0xC5AC28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910584", Offset = "0x910584")]
			get
			{
				return null;
			}
			[Token(Token = "0x600277C")]
			[Address(RVA = "0xC5AC20", Offset = "0xC5AC20", VA = "0xC5AC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x910594", Offset = "0x910594")]
			private set
			{
			}
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xC5ABF4", Offset = "0xC5ABF4", VA = "0xC5ABF4")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x600277D")]
		[Address(RVA = "0x1013F5C", Offset = "0x1013F5C", VA = "0x1013F5C")]
		public void Start()
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x1013FC0", Offset = "0x1013FC0", VA = "0x1013FC0")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x170002DE")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x600277F")]
			[Address(RVA = "0x10147CC", Offset = "0x10147CC", VA = "0x10147CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x101491C", Offset = "0x101491C", VA = "0x101491C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x10149B0", Offset = "0x10149B0", VA = "0x10149B0")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x10149E8", Offset = "0x10149E8", VA = "0x10149E8")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F678C", Offset = "0x8F678C")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x10149F0", Offset = "0x10149F0", VA = "0x10149F0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x1014AB4", Offset = "0x1014AB4", VA = "0x1014AB4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x1014B48", Offset = "0x1014B48", VA = "0x1014B48")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x1014B78", Offset = "0x1014B78", VA = "0x1014B78")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8560", Offset = "0x8F8560")]
		private sealed class <>c
		{
			[Token(Token = "0x40027DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40027DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x60033F4")]
			[Address(RVA = "0x1022824", Offset = "0x1022824", VA = "0x1022824")]
			public <>c()
			{
			}

			[Token(Token = "0x60033F5")]
			[Address(RVA = "0x102282C", Offset = "0x102282C", VA = "0x102282C")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x1021FF0", Offset = "0x1021FF0", VA = "0x1021FF0")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x10227B8", Offset = "0x10227B8", VA = "0x10227B8")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8570", Offset = "0x8F8570")]
		private sealed class <>c
		{
			[Token(Token = "0x40027DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40027E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x60033F7")]
			[Address(RVA = "0x1024CFC", Offset = "0x1024CFC", VA = "0x1024CFC")]
			public <>c()
			{
			}

			[Token(Token = "0x60033F8")]
			[Address(RVA = "0x1024D04", Offset = "0x1024D04", VA = "0x1024D04")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BA0")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4001BA1")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4001BA2")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x1023B48", Offset = "0x1023B48", VA = "0x1023B48")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x1023C5C", Offset = "0x1023C5C", VA = "0x1023C5C")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1023F04", Offset = "0x1023F04", VA = "0x1023F04")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x1023FB8", Offset = "0x1023FB8", VA = "0x1023FB8")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x1024310", Offset = "0x1024310", VA = "0x1024310")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1023F38", Offset = "0x1023F38", VA = "0x1023F38")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x10244FC", Offset = "0x10244FC", VA = "0x10244FC")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x1024814", Offset = "0x1024814", VA = "0x1024814")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x102481C", Offset = "0x102481C", VA = "0x102481C")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x102490C", Offset = "0x102490C", VA = "0x102490C")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x1024938", Offset = "0x1024938", VA = "0x1024938")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x1024AE4", Offset = "0x1024AE4", VA = "0x1024AE4")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002795")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x1020B7C", Offset = "0x1020B7C", VA = "0x1020B7C")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x1024C6C", Offset = "0x1024C6C", VA = "0x1024C6C")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6002798")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x20004A6")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x20007A2")]
		public struct ParamValue
		{
			[Token(Token = "0x40027E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x40027E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6002799")]
		[Address(RVA = "0xDBC500", Offset = "0xDBC500", VA = "0xDBC500", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0xDBC5EC", Offset = "0xDBC5EC", VA = "0xDBC5EC")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0xDBC76C", Offset = "0xDBC76C", VA = "0xDBC76C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0xDBC81C", Offset = "0xDBC81C", VA = "0xDBC81C", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0xDBC82C", Offset = "0xDBC82C", VA = "0xDBC82C")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0xDBC924", Offset = "0xDBC924", VA = "0xDBC924")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0xDBC9B0", Offset = "0xDBC9B0", VA = "0xDBC9B0")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A7")]
	public struct LocalizedString
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0xDC3B28", Offset = "0xDC3B28", VA = "0xDC3B28")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0xDC3BF4", Offset = "0xDC3BF4", VA = "0xDC3BF4")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x9A5B08", Offset = "0x9A5B08", VA = "0x9A5B08")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x9A5B4C", Offset = "0x9A5B4C", VA = "0x9A5B4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A8")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x60027A4")]
		[Address(RVA = "0xC522BC", Offset = "0xC522BC", VA = "0xC522BC", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0xC523B8", Offset = "0xC523B8", VA = "0xC523B8", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0xC52444", Offset = "0xC52444", VA = "0xC52444", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0xC5244C", Offset = "0xC5244C", VA = "0xC5244C")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x60027A8")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x20004AA")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x170002DF")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xC51E64", Offset = "0xC51E64", VA = "0xC51E64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0xC52454", Offset = "0xC52454", VA = "0xC52454")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60027AB")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0xC52540", Offset = "0xC52540", VA = "0xC52540")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0xC526C4", Offset = "0xC526C4", VA = "0xC526C4")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60027AE")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60027AF")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0xC524CC", Offset = "0xC524CC", VA = "0xC524CC")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0xC52734", Offset = "0xC52734", VA = "0xC52734")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class RTLFixer
	{
		[Token(Token = "0x60027B2")]
		[Address(RVA = "0xDC3C44", Offset = "0xDC3C44", VA = "0xDC3C44")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0xDC3C50", Offset = "0xDC3C50", VA = "0xDC3C50")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0xDB83E0", Offset = "0xDB83E0", VA = "0xDB83E0")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0xDC54E4", Offset = "0xDC54E4", VA = "0xDC54E4")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4001BAF")]
		Hamza = 65152,
		[Token(Token = "0x4001BB0")]
		Alef = 65165,
		[Token(Token = "0x4001BB1")]
		AlefHamza = 65155,
		[Token(Token = "0x4001BB2")]
		WawHamza = 65157,
		[Token(Token = "0x4001BB3")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4001BB4")]
		AlefMaksora = 64508,
		[Token(Token = "0x4001BB5")]
		HamzaNabera = 65161,
		[Token(Token = "0x4001BB6")]
		Ba = 65167,
		[Token(Token = "0x4001BB7")]
		Ta = 65173,
		[Token(Token = "0x4001BB8")]
		Tha2 = 65177,
		[Token(Token = "0x4001BB9")]
		Jeem = 65181,
		[Token(Token = "0x4001BBA")]
		H7aa = 65185,
		[Token(Token = "0x4001BBB")]
		Khaa2 = 65189,
		[Token(Token = "0x4001BBC")]
		Dal = 65193,
		[Token(Token = "0x4001BBD")]
		Thal = 65195,
		[Token(Token = "0x4001BBE")]
		Ra2 = 65197,
		[Token(Token = "0x4001BBF")]
		Zeen = 65199,
		[Token(Token = "0x4001BC0")]
		Seen = 65201,
		[Token(Token = "0x4001BC1")]
		Sheen = 65205,
		[Token(Token = "0x4001BC2")]
		S9a = 65209,
		[Token(Token = "0x4001BC3")]
		Dha = 65213,
		[Token(Token = "0x4001BC4")]
		T6a = 65217,
		[Token(Token = "0x4001BC5")]
		T6ha = 65221,
		[Token(Token = "0x4001BC6")]
		Ain = 65225,
		[Token(Token = "0x4001BC7")]
		Gain = 65229,
		[Token(Token = "0x4001BC8")]
		Fa = 65233,
		[Token(Token = "0x4001BC9")]
		Gaf = 65237,
		[Token(Token = "0x4001BCA")]
		Kaf = 65241,
		[Token(Token = "0x4001BCB")]
		Lam = 65245,
		[Token(Token = "0x4001BCC")]
		Meem = 65249,
		[Token(Token = "0x4001BCD")]
		Noon = 65253,
		[Token(Token = "0x4001BCE")]
		Ha = 65257,
		[Token(Token = "0x4001BCF")]
		Waw = 65261,
		[Token(Token = "0x4001BD0")]
		Ya = 65265,
		[Token(Token = "0x4001BD1")]
		AlefMad = 65153,
		[Token(Token = "0x4001BD2")]
		TaMarboota = 65171,
		[Token(Token = "0x4001BD3")]
		PersianPe = 64342,
		[Token(Token = "0x4001BD4")]
		PersianChe = 64378,
		[Token(Token = "0x4001BD5")]
		PersianZe = 64394,
		[Token(Token = "0x4001BD6")]
		PersianGaf = 64402,
		[Token(Token = "0x4001BD7")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x20004AD")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4001BD9")]
		Hamza = 1569,
		[Token(Token = "0x4001BDA")]
		Alef = 1575,
		[Token(Token = "0x4001BDB")]
		AlefHamza = 1571,
		[Token(Token = "0x4001BDC")]
		WawHamza = 1572,
		[Token(Token = "0x4001BDD")]
		AlefMaksoor = 1573,
		[Token(Token = "0x4001BDE")]
		AlefMagsora = 1609,
		[Token(Token = "0x4001BDF")]
		HamzaNabera = 1574,
		[Token(Token = "0x4001BE0")]
		Ba = 1576,
		[Token(Token = "0x4001BE1")]
		Ta = 1578,
		[Token(Token = "0x4001BE2")]
		Tha2 = 1579,
		[Token(Token = "0x4001BE3")]
		Jeem = 1580,
		[Token(Token = "0x4001BE4")]
		H7aa = 1581,
		[Token(Token = "0x4001BE5")]
		Khaa2 = 1582,
		[Token(Token = "0x4001BE6")]
		Dal = 1583,
		[Token(Token = "0x4001BE7")]
		Thal = 1584,
		[Token(Token = "0x4001BE8")]
		Ra2 = 1585,
		[Token(Token = "0x4001BE9")]
		Zeen = 1586,
		[Token(Token = "0x4001BEA")]
		Seen = 1587,
		[Token(Token = "0x4001BEB")]
		Sheen = 1588,
		[Token(Token = "0x4001BEC")]
		S9a = 1589,
		[Token(Token = "0x4001BED")]
		Dha = 1590,
		[Token(Token = "0x4001BEE")]
		T6a = 1591,
		[Token(Token = "0x4001BEF")]
		T6ha = 1592,
		[Token(Token = "0x4001BF0")]
		Ain = 1593,
		[Token(Token = "0x4001BF1")]
		Gain = 1594,
		[Token(Token = "0x4001BF2")]
		Fa = 1601,
		[Token(Token = "0x4001BF3")]
		Gaf = 1602,
		[Token(Token = "0x4001BF4")]
		Kaf = 1603,
		[Token(Token = "0x4001BF5")]
		Lam = 1604,
		[Token(Token = "0x4001BF6")]
		Meem = 1605,
		[Token(Token = "0x4001BF7")]
		Noon = 1606,
		[Token(Token = "0x4001BF8")]
		Ha = 1607,
		[Token(Token = "0x4001BF9")]
		Waw = 1608,
		[Token(Token = "0x4001BFA")]
		Ya = 1610,
		[Token(Token = "0x4001BFB")]
		AlefMad = 1570,
		[Token(Token = "0x4001BFC")]
		TaMarboota = 1577,
		[Token(Token = "0x4001BFD")]
		PersianPe = 1662,
		[Token(Token = "0x4001BFE")]
		PersianChe = 1670,
		[Token(Token = "0x4001BFF")]
		PersianZe = 1688,
		[Token(Token = "0x4001C00")]
		PersianGaf = 1711,
		[Token(Token = "0x4001C01")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x20004AE")]
	internal class ArabicMapping
	{
		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1013148", Offset = "0x1013148", VA = "0x1013148")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	internal class ArabicTable
	{
		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x170002E0")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x1013DA8", Offset = "0x1013DA8", VA = "0x1013DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x1013180", Offset = "0x1013180", VA = "0x1013180")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x1013E20", Offset = "0x1013E20", VA = "0x1013E20")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004B0")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0xC5A0F4", Offset = "0xC5A0F4", VA = "0xC5A0F4")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x20004B1")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0xDC54EC", Offset = "0xDC54EC", VA = "0xDC54EC")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0xDC5B70", Offset = "0xDC5B70", VA = "0xDC5B70")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0xDC3EE4", Offset = "0xDC3EE4", VA = "0xDC3EE4")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0xDC5DF0", Offset = "0xDC5DF0", VA = "0xDC5DF0")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0xDC6B5C", Offset = "0xDC6B5C", VA = "0xDC6B5C")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0xDC6790", Offset = "0xDC6790", VA = "0xDC6790")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0xDC5F6C", Offset = "0xDC5F6C", VA = "0xDC5F6C")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0xDC7314", Offset = "0xDC7314", VA = "0xDC7314")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F67D4", Offset = "0x8F67D4")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0xC52808", Offset = "0xC52808", VA = "0xC52808")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xC5280C", Offset = "0xC5280C", VA = "0xC5280C")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xC528C8", Offset = "0xC528C8", VA = "0xC528C8")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F680C", Offset = "0x8F680C")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xC528D0", Offset = "0xC528D0", VA = "0xC528D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xC52B9C", Offset = "0xC52B9C", VA = "0xC52B9C")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xC52CB0", Offset = "0xC52CB0", VA = "0xC52CB0")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class StringObfucator
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0xC59B3C", Offset = "0xC59B3C", VA = "0xC59B3C")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xC59EE0", Offset = "0xC59EE0", VA = "0xC59EE0")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xC59E44", Offset = "0xC59E44", VA = "0xC59E44")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xC59FC4", Offset = "0xC59FC4", VA = "0xC59FC4")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0xC59C20", Offset = "0xC59C20", VA = "0xC59C20")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xC5A07C", Offset = "0xC5A07C", VA = "0xC5A07C")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x20004B5")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4001C0D")]
		Array = 1,
		[Token(Token = "0x4001C0E")]
		Class,
		[Token(Token = "0x4001C0F")]
		Value,
		[Token(Token = "0x4001C10")]
		IntValue,
		[Token(Token = "0x4001C11")]
		DoubleValue,
		[Token(Token = "0x4001C12")]
		BoolValue,
		[Token(Token = "0x4001C13")]
		FloatValue
	}
	[Token(Token = "0x20004B6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F6844", Offset = "0x8F6844")]
	public class JSONNode
	{
		[Token(Token = "0x20007A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8580", Offset = "0x8F8580")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40027E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170005A2")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60033FC")]
				[Address(RVA = "0xC586DC", Offset = "0xC586DC", VA = "0xC586DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033FE")]
				[Address(RVA = "0xC5874C", Offset = "0xC5874C", VA = "0xC5874C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F9")]
			[Address(RVA = "0xC5732C", Offset = "0xC5732C", VA = "0xC5732C")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60033FA")]
			[Address(RVA = "0xC586C0", Offset = "0xC586C0", VA = "0xC586C0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033FB")]
			[Address(RVA = "0xC586C4", Offset = "0xC586C4", VA = "0xC586C4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033FD")]
			[Address(RVA = "0xC586E4", Offset = "0xC586E4", VA = "0xC586E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60033FF")]
			[Address(RVA = "0xC58754", Offset = "0xC58754", VA = "0xC58754", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003400")]
			[Address(RVA = "0xC587EC", Offset = "0xC587EC", VA = "0xC587EC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20007A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8590", Offset = "0x8F8590")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40027E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40027E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40027EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40027EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170005A4")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003406")]
				[Address(RVA = "0xC58E24", Offset = "0xC58E24", VA = "0xC58E24", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003408")]
				[Address(RVA = "0xC58E94", Offset = "0xC58E94", VA = "0xC58E94", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003401")]
			[Address(RVA = "0xC573E8", Offset = "0xC573E8", VA = "0xC573E8")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6003402")]
			[Address(RVA = "0xC587F0", Offset = "0xC587F0", VA = "0xC587F0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003403")]
			[Address(RVA = "0xC589E8", Offset = "0xC589E8", VA = "0xC589E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003404")]
			[Address(RVA = "0xC58928", Offset = "0xC58928", VA = "0xC58928")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003405")]
			[Address(RVA = "0xC58868", Offset = "0xC58868", VA = "0xC58868")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6003407")]
			[Address(RVA = "0xC58E2C", Offset = "0xC58E2C", VA = "0xC58E2C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003409")]
			[Address(RVA = "0xC58E9C", Offset = "0xC58E9C", VA = "0xC58E9C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600340A")]
			[Address(RVA = "0xC58F4C", Offset = "0xC58F4C", VA = "0xC58F4C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xC571D0", Offset = "0xC571D0", VA = "0xC571D0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027D3")]
			[Address(RVA = "0xC571D8", Offset = "0xC571D8", VA = "0xC571D8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0xC571DC", Offset = "0xC571DC", VA = "0xC571DC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027D5")]
			[Address(RVA = "0xC571E4", Offset = "0xC571E4", VA = "0xC571E4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public virtual string Value
		{
			[Token(Token = "0x60027D6")]
			[Address(RVA = "0xC571E8", Offset = "0xC571E8", VA = "0xC571E8", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027D7")]
			[Address(RVA = "0xC57230", Offset = "0xC57230", VA = "0xC57230", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public virtual int Count
		{
			[Token(Token = "0x60027D8")]
			[Address(RVA = "0xC57234", Offset = "0xC57234", VA = "0xC57234", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E5")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0xC572BC", Offset = "0xC572BC", VA = "0xC572BC", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9105B4", Offset = "0x9105B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x60027DE")]
			[Address(RVA = "0xC57364", Offset = "0xC57364", VA = "0xC57364")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x910618", Offset = "0x910618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		public virtual int AsInt
		{
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xC574B0", Offset = "0xC574B0", VA = "0xC574B0", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60027E2")]
			[Address(RVA = "0xC574F0", Offset = "0xC574F0", VA = "0xC574F0", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xC57530", Offset = "0xC57530", VA = "0xC57530", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027E4")]
			[Address(RVA = "0xC57574", Offset = "0xC57574", VA = "0xC57574", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60027E5")]
			[Address(RVA = "0xC575B4", Offset = "0xC575B4", VA = "0xC575B4", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60027E6")]
			[Address(RVA = "0xC57658", Offset = "0xC57658", VA = "0xC57658", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0xC57698", Offset = "0xC57698", VA = "0xC57698", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027E8")]
			[Address(RVA = "0xC57760", Offset = "0xC57760", VA = "0xC57760", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60027E9")]
			[Address(RVA = "0xC577E4", Offset = "0xC577E4", VA = "0xC577E4", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x60027EA")]
			[Address(RVA = "0xC57864", Offset = "0xC57864", VA = "0xC57864", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xC571CC", Offset = "0xC571CC", VA = "0xC571CC", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xC5723C", Offset = "0xC5723C", VA = "0xC5723C", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xC572A4", Offset = "0xC572A4", VA = "0xC572A4", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xC572AC", Offset = "0xC572AC", VA = "0xC572AC", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xC572B4", Offset = "0xC572B4", VA = "0xC572B4", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xC57420", Offset = "0xC57420", VA = "0xC57420", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xC57468", Offset = "0xC57468", VA = "0xC57468", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0xC578E4", Offset = "0xC578E4", VA = "0xC578E4")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xC57948", Offset = "0xC57948", VA = "0xC57948")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xC55CA4", Offset = "0xC55CA4", VA = "0xC55CA4")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0xC57998", Offset = "0xC57998", VA = "0xC57998")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0xC579B4", Offset = "0xC579B4", VA = "0xC579B4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0xC56C34", Offset = "0xC56C34", VA = "0xC56C34", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0xC5537C", Offset = "0xC5537C", VA = "0xC5537C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0xC52CBC", Offset = "0xC52CBC", VA = "0xC52CBC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0xC579C0", Offset = "0xC579C0", VA = "0xC579C0", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xC579C4", Offset = "0xC579C4", VA = "0xC579C4")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xC57A44", Offset = "0xC57A44", VA = "0xC57A44")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xC57AB8", Offset = "0xC57AB8", VA = "0xC57AB8")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xC57B2C", Offset = "0xC57B2C", VA = "0xC57B2C")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0xC57BA0", Offset = "0xC57BA0", VA = "0xC57BA0")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xC57D24", Offset = "0xC57D24", VA = "0xC57D24")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0xC57EC0", Offset = "0xC57EC0", VA = "0xC57EC0")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0xC58260", Offset = "0xC58260", VA = "0xC58260")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0xC582D4", Offset = "0xC582D4", VA = "0xC582D4")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xC58348", Offset = "0xC58348", VA = "0xC58348")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0xC583BC", Offset = "0xC583BC", VA = "0xC583BC")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xC584EC", Offset = "0xC584EC", VA = "0xC584EC")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xC58608", Offset = "0xC58608", VA = "0xC58608")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xC53FF8", Offset = "0xC53FF8", VA = "0xC53FF8")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F687C", Offset = "0x8F687C")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F85A0", Offset = "0x8F85A0")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40027EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40027EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40027F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005A6")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600340F")]
				[Address(RVA = "0xC54448", Offset = "0xC54448", VA = "0xC54448", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003411")]
				[Address(RVA = "0xC544B8", Offset = "0xC544B8", VA = "0xC544B8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600340B")]
			[Address(RVA = "0xC5398C", Offset = "0xC5398C", VA = "0xC5398C")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600340C")]
			[Address(RVA = "0xC54260", Offset = "0xC54260", VA = "0xC54260", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600340D")]
			[Address(RVA = "0xC542D4", Offset = "0xC542D4", VA = "0xC542D4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600340E")]
			[Address(RVA = "0xC5427C", Offset = "0xC5427C", VA = "0xC5427C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003410")]
			[Address(RVA = "0xC54450", Offset = "0xC54450", VA = "0xC54450", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003412")]
			[Address(RVA = "0xC544C0", Offset = "0xC544C0", VA = "0xC544C0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003413")]
			[Address(RVA = "0xC54570", Offset = "0xC54570", VA = "0xC54570", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F85B0", Offset = "0x8F85B0")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x40027F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003418")]
				[Address(RVA = "0xC541E8", Offset = "0xC541E8", VA = "0xC541E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600341A")]
				[Address(RVA = "0xC54258", Offset = "0xC54258", VA = "0xC54258", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003414")]
			[Address(RVA = "0xC53A38", Offset = "0xC53A38", VA = "0xC53A38")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6003415")]
			[Address(RVA = "0xC54000", Offset = "0xC54000", VA = "0xC54000", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003416")]
			[Address(RVA = "0xC54074", Offset = "0xC54074", VA = "0xC54074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003417")]
			[Address(RVA = "0xC5401C", Offset = "0xC5401C", VA = "0xC5401C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003419")]
			[Address(RVA = "0xC541F0", Offset = "0xC541F0", VA = "0xC541F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x170002ED")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002802")]
			[Address(RVA = "0xC53438", Offset = "0xC53438", VA = "0xC53438", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002803")]
			[Address(RVA = "0xC53534", Offset = "0xC53534", VA = "0xC53534", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002804")]
			[Address(RVA = "0xC53610", Offset = "0xC53610", VA = "0xC53610", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002805")]
			[Address(RVA = "0xC53674", Offset = "0xC53674", VA = "0xC53674", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public override int Count
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0xC536E4", Offset = "0xC536E4", VA = "0xC536E4", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F0")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600280A")]
			[Address(RVA = "0xC53908", Offset = "0xC53908", VA = "0xC53908", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x91067C", Offset = "0x91067C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0xC53744", Offset = "0xC53744", VA = "0xC53744", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0xC537B4", Offset = "0xC537B4", VA = "0xC537B4", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0xC53890", Offset = "0xC53890", VA = "0xC53890", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0xC539C4", Offset = "0xC539C4", VA = "0xC539C4", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9106E0", Offset = "0x9106E0")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0xC53A64", Offset = "0xC53A64", VA = "0xC53A64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0xC53C30", Offset = "0xC53C30", VA = "0xC53C30", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0xC53E5C", Offset = "0xC53E5C", VA = "0xC53E5C", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0xC53F88", Offset = "0xC53F88", VA = "0xC53F88")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F68B4", Offset = "0x8F68B4")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F85C0", Offset = "0x8F85C0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40027F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x600341B")]
			[Address(RVA = "0xC54E28", Offset = "0xC54E28", VA = "0xC54E28")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600341C")]
			[Address(RVA = "0xC55C38", Offset = "0xC55C38", VA = "0xC55C38")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F85D0", Offset = "0x8F85D0")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40027F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40027F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x40027FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005AA")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003421")]
				[Address(RVA = "0xC561E0", Offset = "0xC561E0", VA = "0xC561E0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003423")]
				[Address(RVA = "0xC56250", Offset = "0xC56250", VA = "0xC56250", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600341D")]
			[Address(RVA = "0xC54EB4", Offset = "0xC54EB4", VA = "0xC54EB4")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600341E")]
			[Address(RVA = "0xC55FC8", Offset = "0xC55FC8", VA = "0xC55FC8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600341F")]
			[Address(RVA = "0xC5603C", Offset = "0xC5603C", VA = "0xC5603C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003420")]
			[Address(RVA = "0xC55FE4", Offset = "0xC55FE4", VA = "0xC55FE4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003422")]
			[Address(RVA = "0xC561E8", Offset = "0xC561E8", VA = "0xC561E8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003424")]
			[Address(RVA = "0xC56258", Offset = "0xC56258", VA = "0xC56258", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003425")]
			[Address(RVA = "0xC56308", Offset = "0xC56308", VA = "0xC56308", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20007A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F85E0", Offset = "0x8F85E0")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x40027FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600342A")]
				[Address(RVA = "0xC55F50", Offset = "0xC55F50", VA = "0xC55F50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600342C")]
				[Address(RVA = "0xC55FC0", Offset = "0xC55FC0", VA = "0xC55FC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003426")]
			[Address(RVA = "0xC54F60", Offset = "0xC54F60", VA = "0xC54F60")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003427")]
			[Address(RVA = "0xC55D3C", Offset = "0xC55D3C", VA = "0xC55D3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003428")]
			[Address(RVA = "0xC55DB0", Offset = "0xC55DB0", VA = "0xC55DB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003429")]
			[Address(RVA = "0xC55D58", Offset = "0xC55D58", VA = "0xC55D58")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600342B")]
			[Address(RVA = "0xC55F58", Offset = "0xC55F58", VA = "0xC55F58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x170002F1")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002810")]
			[Address(RVA = "0xC54574", Offset = "0xC54574", VA = "0xC54574", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002811")]
			[Address(RVA = "0xC5467C", Offset = "0xC5467C", VA = "0xC5467C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002812")]
			[Address(RVA = "0xC54750", Offset = "0xC54750", VA = "0xC54750", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002813")]
			[Address(RVA = "0xC54814", Offset = "0xC54814", VA = "0xC54814", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public override int Count
		{
			[Token(Token = "0x6002814")]
			[Address(RVA = "0xC54904", Offset = "0xC54904", VA = "0xC54904", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F4")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002819")]
			[Address(RVA = "0xC54E30", Offset = "0xC54E30", VA = "0xC54E30", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x910744", Offset = "0x910744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0xC54964", Offset = "0xC54964", VA = "0xC54964", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0xC54A9C", Offset = "0xC54A9C", VA = "0xC54A9C", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0xC54B74", Offset = "0xC54B74", VA = "0xC54B74", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0xC54C74", Offset = "0xC54C74", VA = "0xC54C74", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0xC54EEC", Offset = "0xC54EEC", VA = "0xC54EEC", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9107A8", Offset = "0x9107A8")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0xC54F8C", Offset = "0xC54F8C", VA = "0xC54F8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0xC55508", Offset = "0xC55508", VA = "0xC55508", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0xC5597C", Offset = "0xC5597C", VA = "0xC5597C", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0xC55B8C", Offset = "0xC55B8C", VA = "0xC55B8C")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170002F5")]
		public override string Value
		{
			[Token(Token = "0x600281F")]
			[Address(RVA = "0xC5630C", Offset = "0xC5630C", VA = "0xC5630C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002820")]
			[Address(RVA = "0xC56314", Offset = "0xC56314", VA = "0xC56314", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0xC5631C", Offset = "0xC5631C", VA = "0xC5631C")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0xC56348", Offset = "0xC56348", VA = "0xC56348")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0xC5638C", Offset = "0xC5638C", VA = "0xC5638C")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0xC563D0", Offset = "0xC563D0", VA = "0xC563D0")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0xC5640C", Offset = "0xC5640C", VA = "0xC5640C")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0xC56448", Offset = "0xC56448", VA = "0xC56448", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0xC564AC", Offset = "0xC564AC", VA = "0xC564AC", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0xC56510", Offset = "0xC56510", VA = "0xC56510", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F68EC", Offset = "0x8F68EC")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170002F6")]
		public override JSONNode Item
		{
			[Token(Token = "0x600282C")]
			[Address(RVA = "0xC568D0", Offset = "0xC568D0", VA = "0xC568D0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600282D")]
			[Address(RVA = "0xC56934", Offset = "0xC56934", VA = "0xC56934", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public override JSONNode Item
		{
			[Token(Token = "0x600282E")]
			[Address(RVA = "0xC569C0", Offset = "0xC569C0", VA = "0xC569C0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600282F")]
			[Address(RVA = "0xC56A30", Offset = "0xC56A30", VA = "0xC56A30", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public override int AsInt
		{
			[Token(Token = "0x6002838")]
			[Address(RVA = "0xC56CCC", Offset = "0xC56CCC", VA = "0xC56CCC", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002839")]
			[Address(RVA = "0xC56D50", Offset = "0xC56D50", VA = "0xC56D50", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public override float AsFloat
		{
			[Token(Token = "0x600283A")]
			[Address(RVA = "0xC56DD8", Offset = "0xC56DD8", VA = "0xC56DD8", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600283B")]
			[Address(RVA = "0xC56E5C", Offset = "0xC56E5C", VA = "0xC56E5C", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public override double AsDouble
		{
			[Token(Token = "0x600283C")]
			[Address(RVA = "0xC56EE4", Offset = "0xC56EE4", VA = "0xC56EE4", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600283D")]
			[Address(RVA = "0xC56F68", Offset = "0xC56F68", VA = "0xC56F68", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public override bool AsBool
		{
			[Token(Token = "0x600283E")]
			[Address(RVA = "0xC56FF0", Offset = "0xC56FF0", VA = "0xC56FF0", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600283F")]
			[Address(RVA = "0xC57074", Offset = "0xC57074", VA = "0xC57074", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6002840")]
			[Address(RVA = "0xC570FC", Offset = "0xC570FC", VA = "0xC570FC", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6002841")]
			[Address(RVA = "0xC57164", Offset = "0xC57164", VA = "0xC57164", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0xC53508", Offset = "0xC53508", VA = "0xC53508")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0xC54644", Offset = "0xC54644", VA = "0xC54644")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0xC56854", Offset = "0xC56854", VA = "0xC56854")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0xC56AC4", Offset = "0xC56AC4", VA = "0xC56AC4", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0xC56B50", Offset = "0xC56B50", VA = "0xC56B50", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0xC56BE4", Offset = "0xC56BE4", VA = "0xC56BE4")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0xC56BFC", Offset = "0xC56BFC", VA = "0xC56BFC")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0xC56C14", Offset = "0xC56C14", VA = "0xC56C14", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0xC56C2C", Offset = "0xC56C2C", VA = "0xC56C2C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0xC56C3C", Offset = "0xC56C3C", VA = "0xC56C3C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0xC56C84", Offset = "0xC56C84", VA = "0xC56C84", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BB")]
	public static class JSON
	{
		[Token(Token = "0x6002842")]
		[Address(RVA = "0xC52CB8", Offset = "0xC52CB8", VA = "0xC52CB8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
